{"root":"0:0:1930","crate_version":"0.4.22","includes_private":false,"index":{"0:3569":{"id":"0:3569","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[204,27],"end":[204,29]},"visibility":{"restricted":{"parent":"0:2518:1909","path":"::month"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3278:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseMonthError","id":"0:3562:1911","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3202-0:3482:1908":{"id":"b:2:3202-0:3482:1908","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:3482:1908","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2289:2165":{"id":"0:2289:2165","crate_id":0,"name":"from_local_date","span":{"filename":"src/offset/local/mod.rs","begin":[114,4],"end":[120,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["local",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3395:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Local","id":"0:3377:1873","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2770":{"id":"0:2770","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[253,34],"end":[253,36]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3278:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2761:2702","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1239:1907":{"id":"0:1239:1907","crate_id":0,"name":"weekday","span":{"filename":"src/naive/date.rs","begin":[1454,4],"end":[1456,5]},"visibility":"default","docs":"Returns the day of week.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike, Weekday};\n\nassert_eq!(NaiveDate::from_ymd(2015, 9, 8).weekday(), Weekday::Tue);\nassert_eq!(NaiveDate::from_ymd(-308, 3, 14).weekday(), Weekday::Fri);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:3446:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:2831:1898":{"id":"b:2:3213-0:2831:1898","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2831:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1058":{"id":"0:1058","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[480,29],"end":[480,40]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"format::ParseResult","name":"ParseResult","id":"0:632:1899","glob":false}},"0:2529:6717":{"id":"0:2529:6717","crate_id":0,"name":"from_i64","span":{"filename":"src/month.rs","begin":[168,4],"end":[170,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["n",{"kind":"primitive","inner":"i64"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Month","id":"0:3492:1880","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1240:2192":{"id":"0:1240:2192","crate_id":0,"name":"iso_week","span":{"filename":"src/naive/date.rs","begin":[1459,4],"end":[1461,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"IsoWeek","id":"0:3052:1901","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:924":{"id":"0:924","crate_id":0,"name":null,"span":{"filename":"src/format/parse.rs","begin":[478,0],"end":[519,1]},"visibility":{"restricted":{"parent":"0:814:2236","path":"::format::parse"}},"docs":"Accepts a relaxed form of RFC3339.\nA space or a 'T' are acepted as the separator between the date and time\nparts. Additional spaces are allowed between each component.\n\nAll of these examples are equivalent:\n```\n# use chrono::{DateTime, offset::FixedOffset};\n\"2012-12-12T12:12:12Z\".parse::<DateTime<FixedOffset>>();\n\"2012-12-12 12:12:12Z\".parse::<DateTime<FixedOffset>>();\n\"2012-  12-12T12:  12:12Z\".parse::<DateTime<FixedOffset>>();\n```","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:13141:2501","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:925:126","0:926:2502"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:4002-0:3384:1884":{"id":"b:2:4002-0:3384:1884","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:3384:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3202-0:3086:1883":{"id":"b:2:3202-0:3086:1883","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3208-0:3492:1880":{"id":"b:2:3208-0:3492:1880","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:3492:1880","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9407:7640-0:2597:1878":{"id":"a:2:9407:7640-0:2597:1878","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9407:7640","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SecondsFormat","id":"0:2597:1878","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2277":{"id":"0:2277","crate_id":0,"name":null,"span":{"filename":"src/offset/local/mod.rs","begin":[57,0],"end":[87,1]},"visibility":{"restricted":{"parent":"0:1883:816","path":"::offset::local"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Local","id":"0:3377:1873","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2278:2211","0:2279:5866"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1470:660":{"id":"0:1470:660","crate_id":0,"name":"fmt","span":{"filename":"src/naive/datetime/mod.rs","begin":[1463,4],"end":[1465,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10400:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10389:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2956":{"id":"0:2956","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[166,47],"end":[166,51]},"visibility":{"restricted":{"parent":"0:1062:1890","path":"::naive::date"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3281:220-0:3482:1908":{"id":"a:2:3281:220-0:3482:1908","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:3482:1908","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1868:265":{"id":"0:1868:265","crate_id":0,"name":"add","span":{"filename":"src/offset/fixed.rs","begin":[190,4],"end":[192,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2660:2450":{"id":"0:2660:2450","crate_id":0,"name":"Year","span":{"filename":"src/format/mod.rs","begin":[101,4],"end":[101,8]},"visibility":"default","docs":"Full Gregorian year (FW=4, PW=∞).\nMay accept years before 1 BCE or after 9999 CE, given an initial sign.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2858:2756":{"id":"0:2858:2756","crate_id":0,"name":"BadFormat","span":{"filename":"src/format/mod.rs","begin":[375,4],"end":[375,13]},"visibility":"default","docs":"There was an error on the formatting string, or there were non-supported formating items.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:3505:2794":{"id":"0:3505:2794","crate_id":0,"name":"May","span":{"filename":"src/month.rs","begin":[43,4],"end":[43,11]},"visibility":"default","docs":"May","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:4":{"id":"0:4","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[432,0],"end":[432,26]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"oldtime::Duration","name":"Duration","id":"20:405:121","glob":false}},"0:785:3021":{"id":"0:785:3021","crate_id":0,"name":"set_second","span":{"filename":"src/format/parsed.rs","begin":[259,4],"end":[261,5]},"visibility":"public","docs":"Tries to set the [`second`](#structfield.second) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["value",{"kind":"primitive","inner":"i64"}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:632:1899","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2748:2655":{"id":"0:2748:2655","crate_id":0,"name":"Internal","span":{"filename":"src/format/mod.rs","begin":[249,4],"end":[249,27]},"visibility":"default","docs":"Internal uses only.\n\nThis item exists so that one can add additional internal-only formatting\nwithout breaking major compatibility (as enum variants cannot be selectively private).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2761:2702","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]}},"0:489:604":{"id":"0:489:604","crate_id":0,"name":"eq","span":{"filename":"src/datetime/mod.rs","begin":[813,4],"end":[815,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz2"}}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:51":{"id":"0:51","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[461,46],"end":[461,55]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::NaiveTime","name":"NaiveTime","id":"0:3067:1887","glob":false}},"0:2278:2211":{"id":"0:2278:2211","crate_id":0,"name":"today","span":{"filename":"src/offset/local/mod.rs","begin":[59,4],"end":[61,5]},"visibility":"public","docs":"Returns a `Date` which corresponds to the current date.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Local","id":"0:3377:1873","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:379:2338":{"id":"0:379:2338","crate_id":0,"name":"timestamp_nanos","span":{"filename":"src/datetime/mod.rs","begin":[269,4],"end":[271,5]},"visibility":"public","docs":"Returns the number of non-leap-nanoseconds since January 1, 1970 UTC\n\nNote that this does reduce the number of years that can be represented\nfrom ~584 Billion to ~584. (If this is a problem, please file\nan issue to let me know what domain needs nanosecond precision over\nmillennia, I'm curious.)\n\n# Example\n\n```\nuse chrono::Utc;\nuse chrono::TimeZone;\n\nlet dt = Utc.ymd(1970, 1, 1).and_hms_nano(0, 0, 1, 444);\nassert_eq!(dt.timestamp_nanos(), 1_000_000_444);\n\nlet dt = Utc.ymd(2001, 9, 9).and_hms_nano(1, 46, 40, 555);\nassert_eq!(dt.timestamp_nanos(), 1_000_000_000_000_000_555);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2532:920":{"id":"0:2532:920","crate_id":0,"name":"new","span":{"filename":"src/month.rs","begin":[198,4],"end":[200,5]},"visibility":"public","docs":"Construct a new `Months` from a number of months","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["num",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2872-0:2597:1878":{"id":"b:2:2872-0:2597:1878","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:7071","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SecondsFormat","id":"0:2597:1878","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:5915"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:636":{"id":"0:636","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[401,0],"end":[406,1]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[cfg(any(feature = \"std\", test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["type_id","source","provide","description","cause"],"trait":{"name":"Error","id":"1:2572:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2831:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:637:2766"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3216:127":{"id":"2:3216:127","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Infallible","id":"2:38941:7208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:233":{"id":"0:233","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[507,0],"end":[512,1]},"visibility":{"restricted":{"parent":"0:61:1890","path":"::date"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:2374:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"SubAssign","id":"2:3372:2034","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Duration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:235:1356"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13702:8572":{"id":"2:13702:8572","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"1:15986:6923"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDefault","id":"2:49899:7185","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3812:7117":{"id":"2:3812:7117","crate_id":2,"name":"DispatchFromDyn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3516:7104":{"id":"2:3516:7104","crate_id":2,"name":"Drop","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3517:578"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3269:211-0:2999:1886":{"id":"a:2:3269:211-0:2999:1886","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1467":{"id":"0:1467","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1431,0],"end":[1435,1]},"visibility":{"restricted":{"parent":"0:1291:1893","path":"::naive::datetime"}},"docs":"The `Debug` output of the naive date and time `dt` is the same as\n[`dt.format(\"%Y-%m-%dT%H:%M:%S%.f\")`](crate::format::strftime).\n\nThe string printed can be readily parsed via the `parse` method on `str`.\n\nIt should be noted that, for leap seconds not on the minute boundary,\nit may print a representation not distinguishable from non-leap seconds.\nThis doesn't matter in practice, since such leap seconds never happened.\n(By the time of the first leap second on 1972-06-30,\nevery time zone offset around the world has standardized to the 5-minute alignment.)\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet dt = NaiveDate::from_ymd(2016, 11, 15).and_hms(7, 39, 24);\nassert_eq!(format!(\"{:?}\", dt), \"2016-11-15T07:39:24\");\n```\n\nLeap seconds may also be used.\n\n```\n# use chrono::NaiveDate;\nlet dt = NaiveDate::from_ymd(2015, 6, 30).and_hms_milli(23, 59, 59, 1_500);\nassert_eq!(format!(\"{:?}\", dt), \"2015-06-30T23:59:60.500\");\n```","links":{"crate::format::strftime":"0:995:2597"},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10440:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1468:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3269:211-0:2873:2237":{"id":"a:2:3269:211-0:2873:2237","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Parsed","id":"0:2873:2237","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2979:4206":{"id":"0:2979:4206","crate_id":0,"name":"NaiveDateWeeksIterator","span":{"filename":"src/naive/date.rs","begin":[1825,0],"end":[1827,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"0:2690:2643":{"id":"0:2690:2643","crate_id":0,"name":"Hour12","span":{"filename":"src/format/mod.rs","begin":[132,4],"end":[132,10]},"visibility":"default","docs":"Hour number in the 12-hour clocks (FW=PW=2).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"b:2:2869-0:3052:1901":{"id":"b:2:2869-0:3052:1901","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IsoWeek","id":"0:3052:1901","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:2030"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3310:7473-0:2641:2445":{"id":"a:2:3310:7473-0:2641:2445","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:7473","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2641:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:447:2188":{"id":"0:447:2188","crate_id":0,"name":"month0","span":{"filename":"src/datetime/mod.rs","begin":[705,4],"end":[707,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1211:2120":{"id":"0:1211:2120","crate_id":0,"name":"succ","span":{"filename":"src/naive/date.rs","begin":[976,4],"end":[978,5]},"visibility":"public","docs":"Makes a new `NaiveDate` for the next calendar date.\n\nPanics when `self` is the last representable date.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nassert_eq!(NaiveDate::from_ymd(2015,  6,  3).succ(), NaiveDate::from_ymd(2015, 6, 4));\nassert_eq!(NaiveDate::from_ymd(2015,  6, 30).succ(), NaiveDate::from_ymd(2015, 7, 1));\nassert_eq!(NaiveDate::from_ymd(2015, 12, 31).succ(), NaiveDate::from_ymd(2016, 1, 1));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3208-0:2908:2041":{"id":"b:2:3208-0:2908:2041","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2908:2041","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:8071:8363":{"id":"2:8071:8363","crate_id":2,"name":"Step","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8072:63952","2:8073:63953","2:8074:63957","2:8075:63955","2:8076:63954","2:8077:63958","2:8078:63956"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2967:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3213-0:2908:2041":{"id":"b:2:3213-0:2908:2041","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2908:2041","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1411:671":{"id":"0:1411:671","crate_id":0,"name":"format","span":{"filename":"src/naive/datetime/mod.rs","begin":[722,4],"end":[724,5]},"visibility":"public","docs":"Formats the combined date and time with the specified format string.\nSee the [`format::strftime` module](../format/strftime/index.html)\non the supported escape sequences.\n\nThis returns a `DelayedFormat`,\nwhich gets converted to a string only when actual formatting happens.\nYou may use the `to_string` method to get a `String`,\nor just feed it into `print!` and other formatting macros.\n(In this way it avoids the redundant memory allocation.)\n\nA wrong format string does *not* issue an error immediately.\nRather, converting or formatting the `DelayedFormat` fails.\nYou are recommended to immediately use `DelayedFormat` for this reason.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet dt = NaiveDate::from_ymd(2015, 9, 5).and_hms(23, 56, 4);\nassert_eq!(dt.format(\"%Y-%m-%d %H:%M:%S\").to_string(), \"2015-09-05 23:56:04\");\nassert_eq!(dt.format(\"around %l %p on %b %-d\").to_string(), \"around 11 PM on Sep 5\");\n```\n\nThe resulting `DelayedFormat` can be formatted directly via the `Display` trait.\n\n```\n# use chrono::NaiveDate;\n# let dt = NaiveDate::from_ymd(2015, 9, 5).and_hms(23, 56, 4);\nassert_eq!(format!(\"{}\", dt.format(\"%Y-%m-%d %H:%M:%S\")), \"2015-09-05 23:56:04\");\nassert_eq!(format!(\"{}\", dt.format(\"around %l %p on %b %-d\")), \"around 11 PM on Sep 5\");\n```","links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["fmt",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2927:2039","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2908:2041","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2872-0:3428:1906":{"id":"b:2:2872-0:3428:1906","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:7071","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RoundingError","id":"0:3428:1906","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:5915"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3470:604":{"id":"0:3470:604","crate_id":0,"name":"eq","span":{"filename":"src/weekday.rs","begin":[11,9],"end":[11,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:3446:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2563:2192":{"id":"0:2563:2192","crate_id":0,"name":"iso_week","span":{"filename":"src/traits.rs","begin":[54,4],"end":[54,34]},"visibility":"default","docs":"Returns the ISO week.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"IsoWeek","id":"0:3052:1901","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2580:2482":{"id":"0:2580:2482","crate_id":0,"name":"with_second","span":{"filename":"src/traits.rs","begin":[164,4],"end":[164,52]},"visibility":"default","docs":"Makes a new value with the second number changed.\n\nReturns `None` when the resulting value would be invalid.\nAs with the [`second`](#tymethod.second) method,\nthe input range is restricted to 0 through 59.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["sec",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:184:2190":{"id":"0:184:2190","crate_id":0,"name":"ordinal","span":{"filename":"src/date.rs","begin":[400,4],"end":[402,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1237:2190":{"id":"0:1237:2190","crate_id":0,"name":"ordinal","span":{"filename":"src/naive/date.rs","begin":[1422,4],"end":[1424,5]},"visibility":"default","docs":"Returns the day of year starting from 1.\n\nThe return value ranges from 1 to 366. (The last day of year differs by years.)\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(NaiveDate::from_ymd(2015, 9, 8).ordinal(), 251);\nassert_eq!(NaiveDate::from_ymd(-308, 3, 14).ordinal(), 74);\n```\n\nCombined with [`NaiveDate::pred`](#method.pred),\none can determine the number of days in a particular year.\n(Note that this panics when `year` is out of range.)\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nfn ndays_in_year(year: i32) -> u32 {\n    // the first day of the next year...\n    let d = NaiveDate::from_ymd(year + 1, 1, 1);\n\n    // ...is preceded by the last day of the original year\n    d.pred().ordinal()\n}\n\nassert_eq!(ndays_in_year(2015), 365);\nassert_eq!(ndays_in_year(2016), 366);\nassert_eq!(ndays_in_year(2017), 365);\nassert_eq!(ndays_in_year(2000), 366);\nassert_eq!(ndays_in_year(2100), 365);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1061:1900":{"id":"0:1061:1900","crate_id":0,"name":"naive","span":{"filename":"src/naive/mod.rs","begin":[1,0],"end":[38,1]},"visibility":"public","docs":"Date and time types unconcerned with timezones.\n\nThey are primarily building blocks for other types\n(e.g. [`TimeZone`](../offset/trait.TimeZone.html)),\nbut can be also used for the simpler date and time handling.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:1714","0:1717","0:1720","0:1723","0:1727","0:1730","0:1733","0:1736","0:1739"],"is_stripped":false}},"0:61:1890":{"id":"0:61:1890","crate_id":0,"name":"date","span":{"filename":"src/date.rs","begin":[4,0],"end":[633,1]},"visibility":"crate","docs":"ISO 8601 calendar date with time zone.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:2590:1872","0:128:1892","0:129:1891"],"is_stripped":true}},"0:2834":{"id":"0:2834","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[336,9],"end":[336,14]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10440:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2831:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2835:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3058":{"id":"0:3058","crate_id":0,"name":null,"span":{"filename":"src/naive/isoweek.rs","begin":[19,20],"end":[19,22]},"visibility":{"restricted":{"parent":"0:1565:2959","path":"::naive::isoweek"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IsoWeek","id":"0:3052:1901","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:496":{"id":"0:496","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[841,0],"end":[845,1]},"visibility":{"restricted":{"parent":"0:256:1893","path":"::datetime"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:2374:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["max","min","clamp"],"trait":{"name":"Ord","id":"2:2957:177","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:498:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:448:2159":{"id":"0:448:2159","crate_id":0,"name":"day","span":{"filename":"src/datetime/mod.rs","begin":[709,4],"end":[711,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:476:2481":{"id":"0:476:2481","crate_id":0,"name":"with_minute","span":{"filename":"src/datetime/mod.rs","begin":[793,4],"end":[795,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["min",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2872-0:2845:2736":{"id":"b:2:2872-0:2845:2736","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:7071","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2845:2736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:5915"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2616":{"id":"0:2616","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[52,29],"end":[52,31]},"visibility":{"restricted":{"parent":"0:256:1893","path":"::datetime"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SecondsFormat","id":"0:2597:1878","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:450:2190":{"id":"0:450:2190","crate_id":0,"name":"ordinal","span":{"filename":"src/datetime/mod.rs","begin":[717,4],"end":[719,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2658:660":{"id":"0:2658:660","crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[74,37],"end":[74,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10400:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10389:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:169":{"id":"0:169","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[310,0],"end":[376,1]},"visibility":{"restricted":{"parent":"0:61:1890","path":"::date"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:2374:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Tz"},"trait":{"name":"","id":"0:2374:1889","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Display","id":"2:10447:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:171:2167","0:175:671"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1853:2289":{"id":"0:1853:2289","crate_id":0,"name":"fix","span":{"filename":"src/offset/fixed.rs","begin":[128,4],"end":[130,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1217:2140":{"id":"0:1217:2140","crate_id":0,"name":"checked_add_signed","span":{"filename":"src/naive/date.rs","begin":[1052,4],"end":[1063,5]},"visibility":"public","docs":"Adds the `days` part of given `Duration` to the current date.\n\nReturns `None` when it will result in overflow.\n\n# Example\n\n```\nuse chrono::{Duration, NaiveDate};\n\nlet d = NaiveDate::from_ymd(2015, 9, 5);\nassert_eq!(d.checked_add_signed(Duration::days(40)),\n           Some(NaiveDate::from_ymd(2015, 10, 15)));\nassert_eq!(d.checked_add_signed(Duration::days(-40)),\n           Some(NaiveDate::from_ymd(2015, 7, 27)));\nassert_eq!(d.checked_add_signed(Duration::days(1_000_000_000)), None);\nassert_eq!(d.checked_add_signed(Duration::days(-1_000_000_000)), None);\nassert_eq!(NaiveDate::MAX.checked_add_signed(Duration::days(1)), None);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3208-0:3067:1887":{"id":"b:2:3208-0:3067:1887","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:6420-0:3384:1884":{"id":"b:5:6420-0:3384:1884","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10447:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:6418:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:3384:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:6422:1397"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1290:59":{"id":"0:1290:59","crate_id":0,"name":"default","span":{"filename":"src/naive/date.rs","begin":[1975,4],"end":[1977,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13600:60399":{"id":"2:13600:60399","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"1:15992:6928"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2383:5752":{"id":"0:2383:5752","crate_id":0,"name":"timestamp_opt","span":{"filename":"src/offset/mod.rs","begin":[345,4],"end":[350,5]},"visibility":"default","docs":"Makes a new `DateTime` from the number of non-leap seconds\nsince January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\")\nand the number of nanoseconds since the last whole non-leap second.\n\nReturns `LocalResult::None` on out-of-range number of seconds and/or\ninvalid nanosecond, otherwise always returns `LocalResult::Single`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["secs",{"kind":"primitive","inner":"i64"}],["nsecs",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3395:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:452:1907":{"id":"0:452:1907","crate_id":0,"name":"weekday","span":{"filename":"src/datetime/mod.rs","begin":[725,4],"end":[727,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:3446:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2708":{"id":"0:2708","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[97,27],"end":[97,29]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3278:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2659:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3281:220-0:2659:2444":{"id":"a:2:3281:220-0:2659:2444","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2659:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9408:7639-0:3543:1910":{"id":"a:2:9408:7639-0:3543:1910","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9408:7639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Months","id":"0:3543:1910","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:5:787-0:3428:1906":{"id":"b:5:787-0:3428:1906","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RoundingError","id":"0:3428:1906","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:7921","5:790:7922","5:791:7923"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2967:184":{"id":"2:2967:184","crate_id":2,"name":"PartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2969:997","2:2970:826","2:2971:792","2:2972:713","2:2973:696"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:10461:7228":{"id":"2:10461:7228","crate_id":2,"name":"UpperExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10462:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13589:5159":{"id":"2:13589:5159","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:47628:176"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11082:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11082:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8543:136":{"id":"2:8543:136","crate_id":2,"name":"FromIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8545:684"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1418:2158":{"id":"0:1418:2158","crate_id":0,"name":"year","span":{"filename":"src/naive/datetime/mod.rs","begin":[767,4],"end":[769,5]},"visibility":"default","docs":"Returns the year number in the [calendar date](./index.html#calendar-date).\n\nSee also the [`NaiveDate::year`] method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Datelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 25).and_hms(12, 34, 56);\nassert_eq!(dt.year(), 2015);\n```","links":{"`NaiveDate::year`":"0:2941:1885"},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3532":{"id":"0:3532","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[30,20],"end":[30,22]},"visibility":{"restricted":{"parent":"0:2518:1909","path":"::month"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3278:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:3492:1880","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3450:2815":{"id":"0:3450:2815","crate_id":0,"name":"Tue","span":{"filename":"src/weekday.rs","begin":[18,4],"end":[18,11]},"visibility":"default","docs":"Tuesday.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2874:2158":{"id":"0:2874:2158","crate_id":0,"name":"year","span":{"filename":"src/format/parsed.rs","begin":[31,4],"end":[31,25]},"visibility":"public","docs":"Year.\n\nThis can be negative unlike [`year_div_100`](#structfield.year_div_100)\nand [`year_mod_100`](#structfield.year_mod_100) fields.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i32"}}],"bindings":[]}}}}},"2:3577:7105":{"id":"2:3577:7105","crate_id":2,"name":"Index","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3579:181","2:3580:753"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:3404:1542":{"id":"0:3404:1542","crate_id":0,"name":"0","span":{"filename":"src/offset/mod.rs","begin":[49,14],"end":[49,15]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"T"}},"0:3389":{"id":"0:3389","crate_id":0,"name":null,"span":{"filename":"src/offset/utc.rs","begin":[42,22],"end":[42,31]},"visibility":{"restricted":{"parent":"0:2297:5700","path":"::offset::utc"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:3384:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2875:2939":{"id":"0:2875:2939","crate_id":0,"name":"year_div_100","span":{"filename":"src/format/parsed.rs","begin":[38,4],"end":[38,33]},"visibility":"public","docs":"Year divided by 100. Implies that the year is >= 1 BCE when set.\n\nDue to the common usage, if this field is missing but\n[`year_mod_100`](#structfield.year_mod_100) is present,\nit is inferred to 19 when `year_mod_100 >= 70` and 20 otherwise.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i32"}}],"bindings":[]}}}}},"b:5:787-0:2908:2041":{"id":"b:5:787-0:2908:2041","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2908:2041","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["5:789:7921","5:790:7922","5:791:7923"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:645:2776":{"id":"0:645:2776","crate_id":0,"name":"format_item","span":{"filename":"src/format/mod.rs","begin":[419,0],"end":[429,1]},"visibility":"public","docs":"Formats single formatting item","links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["w",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10400:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["date",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"bindings":[]}}}}],["time",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"bindings":[]}}}}],["off",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"tuple","inner":[{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]}}}}],"bindings":[]}}}}],["item",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2792:2040","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10389:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:2884:1907":{"id":"0:2884:1907","crate_id":0,"name":"weekday","span":{"filename":"src/format/parsed.rs","begin":[77,4],"end":[77,32]},"visibility":"public","docs":"Day of the week.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:3446:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},"0:2947":{"id":"0:2947","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[166,20],"end":[166,22]},"visibility":{"restricted":{"parent":"0:1062:1890","path":"::naive::date"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1705":{"id":"0:1705","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[1274,0],"end":[1278,1]},"visibility":{"restricted":{"parent":"0:1586:1556","path":"::naive::time"}},"docs":"The `Display` output of the naive time `t` is the same as\n[`t.format(\"%H:%M:%S%.f\")`](../format/strftime/index.html).\n\nThe string printed can be readily parsed via the `parse` method on `str`.\n\nIt should be noted that, for leap seconds not on the minute boundary,\nit may print a representation not distinguishable from non-leap seconds.\nThis doesn't matter in practice, since such leap seconds never happened.\n(By the time of the first leap second on 1972-06-30,\nevery time zone offset around the world has standardized to the 5-minute alignment.)\n\n# Example\n\n```\nuse chrono::NaiveTime;\n\nassert_eq!(format!(\"{}\", NaiveTime::from_hms(23, 56, 4)),              \"23:56:04\");\nassert_eq!(format!(\"{}\", NaiveTime::from_hms_milli(23, 56, 4, 12)),    \"23:56:04.012\");\nassert_eq!(format!(\"{}\", NaiveTime::from_hms_micro(23, 56, 4, 1234)),  \"23:56:04.001234\");\nassert_eq!(format!(\"{}\", NaiveTime::from_hms_nano(23, 56, 4, 123456)), \"23:56:04.000123456\");\n```\n\nLeap seconds may also be used.\n\n```\n# use chrono::NaiveTime;\nassert_eq!(format!(\"{}\", NaiveTime::from_hms_milli(6, 59, 59, 1_500)), \"06:59:60.500\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10447:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1706:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:245:660":{"id":"0:245:660","crate_id":0,"name":"fmt","span":{"filename":"src/date.rs","begin":[533,4],"end":[535,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10400:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10389:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3198-0:2597:1878":{"id":"b:2:3198-0:2597:1878","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SecondsFormat","id":"0:2597:1878","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:2536"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:6983:8520":{"id":"1:6983:8520","crate_id":1,"name":"AsFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6984:62606"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:5:6420-0:3482:1908":{"id":"b:5:6420-0:3482:1908","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10447:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:6418:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:3482:1908","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:6422:1397"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:787-0:2831:1898":{"id":"b:5:787-0:2831:1898","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2831:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:7921","5:790:7922","5:791:7923"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3208-0:3482:1908":{"id":"b:2:3208-0:3482:1908","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:3482:1908","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1445:2479":{"id":"0:1445:2479","crate_id":0,"name":"nanosecond","span":{"filename":"src/naive/datetime/mod.rs","begin":[1131,4],"end":[1133,5]},"visibility":"default","docs":"Returns the number of nanoseconds since the whole non-leap second.\nThe range from 1,000,000,000 to 1,999,999,999 represents\nthe [leap second](./struct.NaiveTime.html#leap-second-handling).\n\nSee also the [`NaiveTime::nanosecond`] method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Timelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 8).and_hms_milli(12, 34, 56, 789);\nassert_eq!(dt.nanosecond(), 789_000_000);\n```","links":{"`NaiveTime::nanosecond`":"0:3067:1887"},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1291:1893":{"id":"0:1291:1893","crate_id":0,"name":"datetime","span":{"filename":"src/naive/datetime/mod.rs","begin":[4,0],"end":[1642,1]},"visibility":"crate","docs":"ISO 8601 date and time without timezone.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:1386:1896","0:1387:1895","0:2999:1886"],"is_stripped":true}},"0:140:2105":{"id":"0:140:2105","crate_id":0,"name":"and_hms_micro","span":{"filename":"src/date.rs","begin":[142,4],"end":[144,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date, hour, minute, second and microsecond.\nThe microsecond part can exceed 1,000,000 in order to represent the leap second.\nThe offset in the current date is preserved.\n\nPanics on invalid hour, minute, second and/or microsecond.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["hour",{"kind":"primitive","inner":"u32"}],["min",{"kind":"primitive","inner":"u32"}],["sec",{"kind":"primitive","inner":"u32"}],["micro",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3546":{"id":"0:3546","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[193,9],"end":[193,14]},"visibility":{"restricted":{"parent":"0:2518:1909","path":"::month"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Months","id":"0:3543:1910","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3547:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1029:2040":{"id":"0:1029:2040","crate_id":0,"name":"Item","span":{"filename":"src/format/strftime.rs","begin":[257,4],"end":[257,25]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2792:2040","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}},"0:2571:4486":{"id":"0:2571:4486","crate_id":0,"name":"num_days_from_ce","span":{"filename":"src/traits.rs","begin":[103,4],"end":[118,5]},"visibility":"default","docs":"Counts the days in the proleptic Gregorian calendar, with January 1, Year 1 (CE) as day 1.\n\n# Examples\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(NaiveDate::from_ymd(1970, 1, 1).num_days_from_ce(), 719_163);\nassert_eq!(NaiveDate::from_ymd(2, 1, 1).num_days_from_ce(), 366);\nassert_eq!(NaiveDate::from_ymd(1, 1, 1).num_days_from_ce(), 1);\nassert_eq!(NaiveDate::from_ymd(0, 1, 1).num_days_from_ce(), -365);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2744:2398":{"id":"0:2744:2398","crate_id":0,"name":"RFC2822","span":{"filename":"src/format/mod.rs","begin":[241,4],"end":[241,11]},"visibility":"default","docs":"RFC 2822 date and time syntax. Commonly used for email and MIME date and time.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"b:2:4002-0:2792:2040":{"id":"b:2:4002-0:2792:2040","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2792:2040","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2946":{"id":"0:2946","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[166,20],"end":[166,22]},"visibility":{"restricted":{"parent":"0:1062:1890","path":"::naive::date"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3278:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:160:2149":{"id":"0:160:2149","crate_id":0,"name":"naive_utc","span":{"filename":"src/date.rs","begin":[269,4],"end":[271,5]},"visibility":"public","docs":"Returns a view to the naive UTC date.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2872-0:2621:1877":{"id":"b:2:2872-0:2621:1877","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:7071","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["2:2874:5915"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2565:2194":{"id":"0:2565:2194","crate_id":0,"name":"with_month","span":{"filename":"src/traits.rs","begin":[64,4],"end":[64,53]},"visibility":"default","docs":"Makes a new value with the month number (starting from 1) changed.\n\nReturns `None` when the resulting value would be invalid.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["month",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:1191:4037":{"id":"0:1191:4037","crate_id":0,"name":"checked_add_months","span":{"filename":"src/naive/date.rs","begin":[617,4],"end":[626,5]},"visibility":"public","docs":"Add a duration in [`Months`] to the date\n\nIf the day would be out of range for the resulting month, use the last day for that month.\n\nReturns `None` if the resulting date would be out of range.\n\n```\n# use chrono::{NaiveDate, Months};\nassert_eq!(\n    NaiveDate::from_ymd(2022, 2, 20).checked_add_months(Months::new(6)),\n    Some(NaiveDate::from_ymd(2022, 8, 20))\n);\nassert_eq!(\n    NaiveDate::from_ymd(2022, 7, 31).checked_add_months(Months::new(2)),\n    Some(NaiveDate::from_ymd(2022, 9, 30))\n);\n```","links":{"`Months`":"0:3543:1910"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["months",{"kind":"resolved_path","inner":{"name":"Months","id":"0:3543:1910","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3269:211-0:3067:1887":{"id":"a:2:3269:211-0:3067:1887","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:7819:8660":{"id":"1:7819:8660","crate_id":1,"name":"Termination","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:7820:62728"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1435:2197":{"id":"0:1435:2197","crate_id":0,"name":"with_day0","span":{"filename":"src/naive/datetime/mod.rs","begin":[1005,4],"end":[1007,5]},"visibility":"default","docs":"Makes a new `NaiveDateTime` with the day of month (starting from 0) changed.\n\nReturns `None` when the resulting `NaiveDateTime` would be invalid.\n\nSee also the [`NaiveDate::with_day0`] method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Datelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 8).and_hms(12, 34, 56);\nassert_eq!(dt.with_day0(29), Some(NaiveDate::from_ymd(2015, 9, 30).and_hms(12, 34, 56)));\nassert_eq!(dt.with_day0(30), None); // no September 31\n```","links":{"`NaiveDate::with_day0`":"0:2941:1885"},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["day0",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1289":{"id":"0:1289","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[1974,0],"end":[1978,1]},"visibility":{"restricted":{"parent":"0:1062:1890","path":"::naive::date"}},"docs":"The default value for a NaiveDate is 1st of January 1970.\n\n# Example\n\n```rust\nuse chrono::NaiveDate;\n\nlet default_date = NaiveDate::default();\nassert_eq!(default_date, NaiveDate::from_ymd(1970, 1, 1));\n```","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3247:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1290:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1585:660":{"id":"0:1585:660","crate_id":0,"name":"fmt","span":{"filename":"src/naive/isoweek.rs","begin":[135,4],"end":[144,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10400:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10389:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:777:3002":{"id":"0:777:3002","crate_id":0,"name":"set_isoweek","span":{"filename":"src/format/parsed.rs","begin":[202,4],"end":[204,5]},"visibility":"public","docs":"Tries to set the [`isoweek`](#structfield.isoweek) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["value",{"kind":"primitive","inner":"i64"}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:632:1899","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1876":{"id":"0:1876","crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[213,0],"end":[220,1]},"visibility":{"restricted":{"parent":"0:1795:5699","path":"::offset::fixed"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:2374:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:3342:2033","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:1878:181","0:1879:1355"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2688:2455":{"id":"0:2688:2455","crate_id":0,"name":"Hour","span":{"filename":"src/format/mod.rs","begin":[130,4],"end":[130,8]},"visibility":"default","docs":"Hour number in the 24-hour clocks (FW=PW=2).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2893:957":{"id":"0:2893:957","crate_id":0,"name":"offset","span":{"filename":"src/format/parsed.rs","begin":[106,4],"end":[106,27]},"visibility":"public","docs":"Offset from the local time to UTC, in seconds.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i32"}}],"bindings":[]}}}}},"0:1048":{"id":"0:1048","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[873,0],"end":[883,1]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":"Parsing a `str` into a `Weekday` uses the format [`%W`](./format/strftime/index.html).\n\n# Example\n\n```\nuse chrono::Weekday;\n\nassert_eq!(\"Sunday\".parse::<Weekday>(), Ok(Weekday::Sun));\nassert!(\"any day\".parse::<Weekday>().is_err());\n```\n\nThe parsing is case-insensitive.\n\n```\n# use chrono::Weekday;\nassert_eq!(\"mON\".parse::<Weekday>(), Ok(Weekday::Mon));\n```\n\nOnly the shortest form (e.g. `sun`) and the longest form (e.g. `sunday`) is accepted.\n\n```\n# use chrono::Weekday;\nassert!(\"thurs\".parse::<Weekday>().is_err());\n```","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:13141:2501","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:3446:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1049:126","0:1050:2502"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:5:787-0:3482:1908":{"id":"b:5:787-0:3482:1908","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:3482:1908","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:7921","5:790:7922","5:791:7923"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1285":{"id":"0:1285","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[1943,0],"end":[1962,1]},"visibility":{"restricted":{"parent":"0:1062:1890","path":"::naive::date"}},"docs":"Parsing a `str` into a `NaiveDate` uses the same format,\n[`%Y-%m-%d`](../format/strftime/index.html), as in `Debug` and `Display`.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet d = NaiveDate::from_ymd(2015, 9, 18);\nassert_eq!(\"2015-09-18\".parse::<NaiveDate>(), Ok(d));\n\nlet d = NaiveDate::from_ymd(12345, 6, 7);\nassert_eq!(\"+12345-6-7\".parse::<NaiveDate>(), Ok(d));\n\nassert!(\"foo\".parse::<NaiveDate>().is_err());\n```","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:13141:2501","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1286:126","0:1287:2502"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2453":{"id":"0:2453","crate_id":0,"name":null,"span":{"filename":"src/round.rs","begin":[47,0],"end":[75,1]},"visibility":{"restricted":{"parent":"0:2418:1904","path":"::round"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Timelike","id":"0:2572:1881","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Add","id":"2:3337:2031","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Duration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"T"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sub","id":"2:3342:2033","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Duration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"T"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"SubsecRound","id":"0:2450:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"generic","inner":"T"},"items":["0:2455:6565","0:2456:6570"],"negative":false,"synthetic":false,"blanket_impl":null}},"23:333:5076":{"id":"23:333:5076","crate_id":23,"name":"FromPrimitive","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:334:8116","23:335:8117","23:336:8118","23:337:8119","23:338:6717","23:339:8120","23:340:689","23:341:8121","23:342:8122","23:343:5163","23:344:6718","23:345:8123","23:346:8124","23:347:2526"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3213-0:2621:1877":{"id":"b:2:3213-0:2621:1877","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:521":{"id":"0:521","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[900,0],"end":[904,1]},"visibility":{"restricted":{"parent":"0:256:1893","path":"::datetime"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:2374:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10440:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:523:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:14325:141":{"id":"2:14325:141","crate_id":2,"name":"GlobalAlloc","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:14326:277","2:14327:518","2:14328:280","2:14329:1079"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"22:109:7256":{"id":"22:109:7256","crate_id":22,"name":"Integer","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["22:110:2832","22:111:2833","22:112:7258","22:113:7259","22:114:7260","22:115:7261","22:116:65956","22:118:65951","22:119:65952","22:120:65953","22:121:65954","22:122:65955","22:123:2925","22:124:3798","22:125:65957","22:126:65958"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Num","id":"23:844:7268","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2967:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Ord","id":"2:2957:177","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3208-0:2936:1902":{"id":"b:2:3208-0:2936:1902","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveWeek","id":"0:2936:1902","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3565:408":{"id":"0:3565:408","crate_id":0,"name":"clone","span":{"filename":"src/month.rs","begin":[204,9],"end":[204,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ParseMonthError","id":"0:3562:1911","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:235:1356":{"id":"0:235:1356","crate_id":0,"name":"sub_assign","span":{"filename":"src/date.rs","begin":[509,4],"end":[511,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3482:1908":{"id":"0:3482:1908","crate_id":0,"name":"ParseWeekdayError","span":{"filename":"src/weekday.rs","begin":[190,0],"end":[192,1]},"visibility":"public","docs":"An error resulting from reading `Weekday` value with `FromStr`.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:3310:7473-0:3482:1908","a:2:9408:7639-0:3482:1908","a:2:3269:211-0:3482:1908","a:2:9407:7640-0:3482:1908","a:2:3281:220-0:3482:1908","b:2:2869-0:3482:1908","b:2:4002-0:3482:1908","b:2:3198-0:3482:1908","b:2:2872-0:3482:1908","b:2:3208-0:3482:1908","b:2:3202-0:3482:1908","b:2:3213-0:3482:1908","b:5:787-0:3482:1908","b:5:6420-0:3482:1908","0:3484","0:3486","0:3487","0:3489","0:3490","0:2506","0:2507","0:2509"]}},"23:724:7318":{"id":"23:724:7318","crate_id":23,"name":"SaturatingMul","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:725:66479"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Mul","id":"2:3347:7086","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:6483:8546":{"id":"1:6483:8546","crate_id":1,"name":"ExitStatusExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6484:62616","1:6485:11091","1:6486:62617","1:6487:62618","1:6488:62619","1:6489:62620"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10589:8515","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:38":{"id":"0:38","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[459,20],"end":[459,31]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::FixedOffset","name":"FixedOffset","id":"0:3086:1883","glob":false}},"2:13696:9229":{"id":"2:13696:9229","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4002-0:3052:1901":{"id":"b:2:4002-0:3052:1901","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IsoWeek","id":"0:3052:1901","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9407:7640-0:2941:1885":{"id":"a:2:9407:7640-0:2941:1885","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9407:7640","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2939":{"id":"0:2939","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[56,9],"end":[56,14]},"visibility":{"restricted":{"parent":"0:1062:1890","path":"::naive::date"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10440:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveWeek","id":"0:2936:1902","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2940:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:528:126":{"id":"0:528:126","crate_id":0,"name":"Err","span":{"filename":"src/datetime/mod.rs","begin":[927,4],"end":[927,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2831:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:1283":{"id":"0:1283","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[1921,0],"end":[1925,1]},"visibility":{"restricted":{"parent":"0:1062:1890","path":"::naive::date"}},"docs":"The `Display` output of the naive date `d` is the same as\n[`d.format(\"%Y-%m-%d\")`](../format/strftime/index.html).\n\nThe string printed can be readily parsed via the `parse` method on `str`.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nassert_eq!(format!(\"{}\", NaiveDate::from_ymd(2015,  9,  5)), \"2015-09-05\");\nassert_eq!(format!(\"{}\", NaiveDate::from_ymd(   0,  1,  1)), \"0000-01-01\");\nassert_eq!(format!(\"{}\", NaiveDate::from_ymd(9999, 12, 31)), \"9999-12-31\");\n```\n\nISO 8601 requires an explicit sign for years before 1 BCE or after 9999 CE.\n\n```\n# use chrono::NaiveDate;\nassert_eq!(format!(\"{}\", NaiveDate::from_ymd(   -1,  1,  1)),  \"-0001-01-01\");\nassert_eq!(format!(\"{}\", NaiveDate::from_ymd(10000, 12, 31)), \"+10000-12-31\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10447:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1284:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2872-0:3482:1908":{"id":"b:2:2872-0:3482:1908","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:7071","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:3482:1908","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:5915"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1030:922":{"id":"0:1030:922","crate_id":0,"name":"next","span":{"filename":"src/format/strftime.rs","begin":[259,4],"end":[474,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2792:2040","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:6420-0:3428:1906":{"id":"b:5:6420-0:3428:1906","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10447:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:6418:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RoundingError","id":"0:3428:1906","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:6422:1397"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:516:1356":{"id":"0:516:1356","crate_id":0,"name":"sub_assign","span":{"filename":"src/datetime/mod.rs","begin":[883,4],"end":[888,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3525:132":{"id":"2:3525:132","crate_id":2,"name":"FnOnce","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3527:181","2:3528:378"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3437":{"id":"0:3437","crate_id":0,"name":null,"span":{"filename":"src/round.rs","begin":[241,16],"end":[241,21]},"visibility":{"restricted":{"parent":"0:2418:1904","path":"::round"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RoundingError","id":"0:3428:1906","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3438:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2808:1542":{"id":"0:2808:1542","crate_id":0,"name":"0","span":{"filename":"src/format/mod.rs","begin":[292,12],"end":[292,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2659:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:2500:2837":{"id":"0:2500:2837","crate_id":0,"name":"num_days_from_sunday","span":{"filename":"src/weekday.rs","begin":[128,4],"end":[138,5]},"visibility":"public","docs":"Returns a day-of-week number starting from Sunday = 0.\n\n`w`:                        | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun`\n--------------------------- | ----- | ----- | ----- | ----- | ----- | ----- | -----\n`w.num_days_from_sunday()`: | 1     | 2     | 3     | 4     | 5     | 6     | 0","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:55":{"id":"0:55","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[463,20],"end":[463,26]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::Offset","name":"Offset","id":"0:2372:1888","glob":false}},"b:2:3198-0:2831:1898":{"id":"b:2:3198-0:2831:1898","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2831:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:2536"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9407:7640-0:3543:1910":{"id":"a:2:9407:7640-0:3543:1910","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9407:7640","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Months","id":"0:3543:1910","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3390":{"id":"0:3390","crate_id":0,"name":null,"span":{"filename":"src/offset/utc.rs","begin":[42,22],"end":[42,31]},"visibility":{"restricted":{"parent":"0:2297:5700","path":"::offset::utc"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:3384:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:3384:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3391:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2696:2463":{"id":"0:2696:2463","crate_id":0,"name":"Nanosecond","span":{"filename":"src/format/mod.rs","begin":[140,4],"end":[140,14]},"visibility":"default","docs":"The number of nanoseconds since the last whole second (FW=PW=9).\nNote that this is *not* left-aligned;\nsee also [`Fixed::Nanosecond`](./enum.Fixed.html#variant.Nanosecond).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:509:266":{"id":"0:509:266","crate_id":0,"name":"add_assign","span":{"filename":"src/datetime/mod.rs","begin":[864,4],"end":[869,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:788:3027":{"id":"0:788:3027","crate_id":0,"name":"set_offset","span":{"filename":"src/format/parsed.rs","begin":[277,4],"end":[279,5]},"visibility":"public","docs":"Tries to set the [`offset`](#structfield.offset) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["value",{"kind":"primitive","inner":"i64"}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:632:1899","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2915":{"id":"0:2915","crate_id":0,"name":null,"span":{"filename":"src/format/strftime.rs","begin":[197,9],"end":[197,14]},"visibility":{"restricted":{"parent":"0:995:2597","path":"::format::strftime"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2908:2041","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:2917:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:769:2985":{"id":"0:769:2985","crate_id":0,"name":"set_year_div_100","span":{"filename":"src/format/parsed.rs","begin":[142,4],"end":[147,5]},"visibility":"public","docs":"Tries to set the [`year_div_100`](#structfield.year_div_100) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["value",{"kind":"primitive","inner":"i64"}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:632:1899","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9408:7639-0:2590:1872":{"id":"a:2:9408:7639-0:2590:1872","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Tz"},"trait":{"name":"TimeZone","id":"0:2374:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9408:7639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9408:7639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9408:7639-0:2659:2444":{"id":"a:2:9408:7639-0:2659:2444","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9408:7639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2659:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"23:720:7317":{"id":"23:720:7317","crate_id":23,"name":"SaturatingAdd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:721:1227"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Add","id":"2:3337:2031","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:3310:7473-0:3428:1906":{"id":"a:2:3310:7473-0:3428:1906","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:7473","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RoundingError","id":"0:3428:1906","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3104:8851":{"id":"2:3104:8851","crate_id":2,"name":"FloatToInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"Int","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:3103:8515","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:3310:7473-0:3067:1887":{"id":"a:2:3310:7473-0:3067:1887","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:7473","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2471:6593":{"id":"0:2471:6593","crate_id":0,"name":"duration_trunc","span":{"filename":"src/round.rs","begin":[167,4],"end":[169,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["duration",{"kind":"resolved_path","inner":{"name":"Duration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47753:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:2458:1905","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1421:2159":{"id":"0:1421:2159","crate_id":0,"name":"day","span":{"filename":"src/naive/datetime/mod.rs","begin":[824,4],"end":[826,5]},"visibility":"default","docs":"Returns the day of month starting from 1.\n\nThe return value ranges from 1 to 31. (The last day of month differs by months.)\n\nSee also the [`NaiveDate::day`](./struct.NaiveDate.html#method.day) method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Datelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 25).and_hms(12, 34, 56);\nassert_eq!(dt.day(), 25);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3077:715":{"id":"0:3077:715","crate_id":0,"name":"hash","span":{"filename":"src/naive/time/mod.rs","begin":[190,24],"end":[190,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10688:146","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1749":{"id":"0:1749","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[484,36],"end":[484,49]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"naive::NaiveDateTime","name":"NaiveDateTime","id":"0:2999:1886","glob":false}},"0:2614:660":{"id":"0:2614:660","crate_id":0,"name":"fmt","span":{"filename":"src/datetime/mod.rs","begin":[52,22],"end":[52,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10400:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10389:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2867":{"id":"0:2867","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[347,23],"end":[347,32]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2845:2736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2845:2736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2868:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2869-0:3067:1887":{"id":"b:2:2869-0:3067:1887","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:2030"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:214:997":{"id":"0:214:997","crate_id":0,"name":"partial_cmp","span":{"filename":"src/date.rs","begin":[465,4],"end":[467,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Ordering","id":"2:37761:178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3380:7089":{"id":"2:3380:7089","crate_id":2,"name":"DivAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3382:559"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3281:220-0:2713:2238":{"id":"a:2:3281:220-0:2713:2238","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2713:2238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:5833:7364":{"id":"5:5833:7364","crate_id":5,"name":"Concat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5835:181","5:5836:432"],"generics":{"params":[{"name":"Item","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Item"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"a:2:3310:7473-0:2927:2039":{"id":"a:2:3310:7473-0:2927:2039","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3310:7473","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:7473","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2927:2039","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:147:2121":{"id":"0:147:2121","crate_id":0,"name":"succ_opt","span":{"filename":"src/date.rs","begin":[200,4],"end":[202,5]},"visibility":"public","docs":"Makes a new `Date` for the next date.\n\nReturns `None` when `self` is the last representable date.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:423:2419":{"id":"0:423:2419","crate_id":0,"name":"parse_from_str","span":{"filename":"src/datetime/mod.rs","begin":[535,4],"end":[539,5]},"visibility":"public","docs":"Parses a string with the specified format string and returns a new\n[`DateTime`] with a parsed [`FixedOffset`].\n\nSee the [`crate::format::strftime`] module on the supported escape\nsequences.\n\nSee also [`TimeZone::datetime_from_str`] which gives a local\n[`DateTime`] on specific time zone.\n\nNote that this method *requires a timezone* in the string. See\n[`NaiveDateTime::parse_from_str`]\nfor a version that does not require a timezone in the to-be-parsed str.\n\n# Example\n\n```rust\nuse chrono::{DateTime, FixedOffset, TimeZone};\n\nlet dt = DateTime::parse_from_str(\n    \"1983 Apr 13 12:09:14.274 +0000\", \"%Y %b %d %H:%M:%S%.3f %z\");\nassert_eq!(dt, Ok(FixedOffset::east(0).ymd(1983, 4, 13).and_hms_milli(12, 9, 14, 274)));\n```","links":{"`FixedOffset`":"0:3086:1883","`DateTime`":"0:2621:1877","`TimeZone::datetime_from_str`":"0:2374:1889","`NaiveDateTime::parse_from_str`":"0:2999:1886","`crate::format::strftime`":"0:995:2597"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["fmt",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:632:1899","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:441:671":{"id":"0:441:671","crate_id":0,"name":"format","span":{"filename":"src/datetime/mod.rs","begin":[653,4],"end":[655,5]},"visibility":"public","docs":"Formats the combined date and time with the specified format string.\nSee the [`crate::format::strftime`] module\non the supported escape sequences.\n\n# Example\n```rust\nuse chrono::prelude::*;\n\nlet date_time: DateTime<Utc> = Utc.ymd(2017, 04, 02).and_hms(12, 50, 32);\nlet formatted = format!(\"{}\", date_time.format(\"%d/%m/%Y %H:%M\"));\nassert_eq!(formatted, \"02/04/2017 12:50\");\n```","links":{"`crate::format::strftime`":"0:995:2597"},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["fmt",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2927:2039","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2908:2041","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2570:2199":{"id":"0:2570:2199","crate_id":0,"name":"with_ordinal0","span":{"filename":"src/traits.rs","begin":[89,4],"end":[89,59]},"visibility":"default","docs":"Makes a new value with the day of year (starting from 0) changed.\n\nReturns `None` when the resulting value would be invalid.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["ordinal0",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2822:604":{"id":"0:2822:604","crate_id":0,"name":"eq","span":{"filename":"src/format/mod.rs","begin":[278,16],"end":[278,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2792:2040","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3392":{"id":"0:3392","crate_id":0,"name":null,"span":{"filename":"src/offset/utc.rs","begin":[42,33],"end":[42,35]},"visibility":{"restricted":{"parent":"0:2297:5700","path":"::offset::utc"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3278:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:3384:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:8555:768":{"id":"2:8555:768","crate_id":2,"name":"into_iter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"I"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6095:65427":{"id":"5:6095:65427","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:8368:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"str_replacen\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:925:126":{"id":"0:925:126","crate_id":0,"name":"Err","span":{"filename":"src/format/parse.rs","begin":[479,4],"end":[479,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2831:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"b:2:3198-0:3395:1903":{"id":"b:2:3198-0:3395:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3395:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3201:2536"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2869-0:2590:1872":{"id":"b:2:2869-0:2590:1872","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["2:2871:2030"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1199:2099":{"id":"0:1199:2099","crate_id":0,"name":"and_hms_milli_opt","span":{"filename":"src/naive/date.rs","begin":[807,4],"end":[815,5]},"visibility":"public","docs":"Makes a new `NaiveDateTime` from the current date, hour, minute, second and millisecond.\n\nThe millisecond part can exceed 1,000\nin order to represent the [leap second](./struct.NaiveTime.html#leap-second-handling).\n\nReturns `None` on invalid hour, minute, second and/or millisecond.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet d = NaiveDate::from_ymd(2015, 6, 3);\nassert!(d.and_hms_milli_opt(12, 34, 56,   789).is_some());\nassert!(d.and_hms_milli_opt(12, 34, 59, 1_789).is_some()); // leap second\nassert!(d.and_hms_milli_opt(12, 34, 59, 2_789).is_none());\nassert!(d.and_hms_milli_opt(12, 34, 60,   789).is_none());\nassert!(d.and_hms_milli_opt(12, 60, 56,   789).is_none());\nassert!(d.and_hms_milli_opt(24, 34, 56,   789).is_none());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["hour",{"kind":"primitive","inner":"u32"}],["min",{"kind":"primitive","inner":"u32"}],["sec",{"kind":"primitive","inner":"u32"}],["milli",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1247:2199":{"id":"0:1247:2199","crate_id":0,"name":"with_ordinal0","span":{"filename":"src/naive/date.rs","begin":[1617,4],"end":[1619,5]},"visibility":"default","docs":"Makes a new `NaiveDate` with the day of year (starting from 0) changed.\n\nReturns `None` when the resulting `NaiveDate` would be invalid.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(NaiveDate::from_ymd(2015, 1, 1).with_ordinal0(59),\n           Some(NaiveDate::from_ymd(2015, 3, 1)));\nassert_eq!(NaiveDate::from_ymd(2015, 1, 1).with_ordinal0(365),\n           None); // 2015 had only 365 days\n\nassert_eq!(NaiveDate::from_ymd(2016, 1, 1).with_ordinal0(59),\n           Some(NaiveDate::from_ymd(2016, 2, 29)));\nassert_eq!(NaiveDate::from_ymd(2016, 1, 1).with_ordinal0(365),\n           Some(NaiveDate::from_ymd(2016, 12, 31)));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["ordinal0",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1848:5785":{"id":"0:1848:5785","crate_id":0,"name":"offset_from_local_date","span":{"filename":"src/offset/fixed.rs","begin":[112,4],"end":[114,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["_local",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3395:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1232:2158":{"id":"0:1232:2158","crate_id":0,"name":"year","span":{"filename":"src/naive/date.rs","begin":[1292,4],"end":[1294,5]},"visibility":"default","docs":"Returns the year number in the [calendar date](#calendar-date).\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(NaiveDate::from_ymd(2015, 9, 8).year(), 2015);\nassert_eq!(NaiveDate::from_ymd(-308, 3, 14).year(), -308); // 309 BCE\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13671:3197":{"id":"2:13671:3197","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3202-0:2590:1872":{"id":"b:2:3202-0:2590:1872","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2836":{"id":"0:2836","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[336,16],"end":[336,21]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2831:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2837:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3202-0:2941:1885":{"id":"b:2:3202-0:2941:1885","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3213-0:3384:1884":{"id":"b:2:3213-0:3384:1884","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:3384:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13688:3504":{"id":"2:13688:3504","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"self::pattern":"2:13202:1925","prim@char":"1:15986:6923"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2575:2477":{"id":"0:2575:2477","crate_id":0,"name":"minute","span":{"filename":"src/traits.rs","begin":[139,4],"end":[139,28]},"visibility":"default","docs":"Returns the minute number from 0 to 59.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2713:2238":{"id":"0:2713:2238","crate_id":0,"name":"Fixed","span":{"filename":"src/format/mod.rs","begin":[182,0],"end":[250,1]},"visibility":"public","docs":"Fixed-format item types.\n\nThey have their own rules of formatting and parsing.\nOtherwise noted, they print in the specified cases but parse case-insensitively.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:2714:2666","0:2716:2669","0:2718:2671","0:2720:2673","0:2722:2676","0:2724:2678","0:2726:2463","0:2728:2460","0:2730:2461","0:2732:2462","0:2734:2687","0:2736:2466","0:2738:2465","0:2740:2697","0:2742:2699","0:2744:2398","0:2746:2405","0:2748:2655"],"impls":["a:2:3310:7473-0:2713:2238","a:2:9408:7639-0:2713:2238","a:2:3269:211-0:2713:2238","a:2:9407:7640-0:2713:2238","a:2:3281:220-0:2713:2238","b:2:2869-0:2713:2238","b:2:4002-0:2713:2238","b:2:3198-0:2713:2238","b:2:2872-0:2713:2238","b:2:3208-0:2713:2238","b:2:3202-0:2713:2238","b:2:3213-0:2713:2238","b:5:787-0:2713:2238","0:2751","0:2753","0:2754","0:2756","0:2757","0:2759"]}},"0:3426:715":{"id":"0:3426:715","crate_id":0,"name":"hash","span":{"filename":"src/offset/mod.rs","begin":[40,44],"end":[40,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10688:146","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2865:408":{"id":"0:2865:408","crate_id":0,"name":"clone","span":{"filename":"src/format/mod.rs","begin":[347,16],"end":[347,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2845:2736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:14401:8278":{"id":"2:14401:8278","crate_id":2,"name":"Allocator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:14402:62160","2:14403:62161","2:14404:62162","2:14405:62163","2:14406:62164","2:14407:62165","2:14408:7896"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10678:142":{"id":"2:10678:142","crate_id":2,"name":"Hash","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10679:715","2:10681:7932"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:413:681":{"id":"0:413:681","crate_id":0,"name":"from","span":{"filename":"src/datetime/mod.rs","begin":[467,4],"end":[469,5]},"visibility":"default","docs":"Convert this `DateTime<Local>` instance into a `DateTime<FixedOffset>` instance.\n\nConversion is performed via [`DateTime::with_timezone`]. Note that the converted value returned\nby this will be created with a fixed timezone offset of 0.","links":{"`DateTime::with_timezone`":"0:2621:1877"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["src",{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Local","id":"0:3377:1873","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:787-0:2792:2040":{"id":"b:5:787-0:2792:2040","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2792:2040","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["5:789:7921","5:790:7922","5:791:7923"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"23:700:58131":{"id":"23:700:58131","crate_id":23,"name":"OverflowingSub","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:701:66597"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sub","id":"2:3342:2033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:3416:660":{"id":"0:3416:660","crate_id":0,"name":"fmt","span":{"filename":"src/offset/mod.rs","begin":[40,27],"end":[40,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10400:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10389:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3202-0:3562:1911":{"id":"b:2:3202-0:3562:1911","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseMonthError","id":"0:3562:1911","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3484":{"id":"0:3484","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[189,9],"end":[189,14]},"visibility":{"restricted":{"parent":"0:2490:1907","path":"::weekday"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:3482:1908","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3485:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:814:2236":{"id":"0:814:2236","crate_id":0,"name":"parse","span":{"filename":"src/format/parse.rs","begin":[5,0],"end":[965,1]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":"Date and time parsing routines.","links":{},"attrs":["#![allow(deprecated)]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:896:2236"],"is_stripped":true}},"2:13626:60083":{"id":"2:13626:60083","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"prim@char":"1:15986:6923","str::split_whitespace":"1:15992:6928","self::pattern":"2:13202:1925","`DoubleEndedIterator`":"2:8591:120","str::rsplit":"1:15992:6928"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"2:49591:7175","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2905":{"id":"0:2905","crate_id":0,"name":null,"span":{"filename":"src/format/parsed.rs","begin":[25,38],"end":[25,45]},"visibility":{"restricted":{"parent":"0:705:2399","path":"::format::parsed"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3247:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Parsed","id":"0:2873:2237","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2906:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:392:2080":{"id":"0:392:2080","crate_id":0,"name":"naive_local","span":{"filename":"src/datetime/mod.rs","begin":[357,4],"end":[359,5]},"visibility":"public","docs":"Returns a view to the naive local datetime.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"23:641:7315":{"id":"23:641:7315","crate_id":23,"name":"MulAddAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:644:66397"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3436:660":{"id":"0:3436:660","crate_id":0,"name":"fmt","span":{"filename":"src/round.rs","begin":[241,9],"end":[241,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10400:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10389:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1047:660":{"id":"0:1047:660","crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[828,4],"end":[844,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10400:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10389:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1663:4665":{"id":"0:1663:4665","crate_id":0,"name":"from_num_seconds_from_midnight_opt","span":{"filename":"src/naive/time/mod.rs","begin":[446,4],"end":[451,5]},"visibility":"public","docs":"Makes a new `NaiveTime` from the number of seconds since midnight and nanosecond.\n\nThe nanosecond part can exceed 1,000,000,000\nin order to represent the [leap second](#leap-second-handling).\n\nReturns `None` on invalid number of seconds and/or nanosecond.\n\n# Example\n\n```\nuse chrono::NaiveTime;\n\nlet from_nsecs_opt = NaiveTime::from_num_seconds_from_midnight_opt;\n\nassert!(from_nsecs_opt(0, 0).is_some());\nassert!(from_nsecs_opt(86399, 999_999_999).is_some());\nassert!(from_nsecs_opt(86399, 1_999_999_999).is_some()); // a leap second after 23:59:59\nassert!(from_nsecs_opt(86_400, 0).is_none());\nassert!(from_nsecs_opt(86399, 2_000_000_000).is_none());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["secs",{"kind":"primitive","inner":"u32"}],["nano",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2842":{"id":"0:2842","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[336,34],"end":[336,36]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2831:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:404":{"id":"0:404","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[416,0],"end":[423,1]},"visibility":{"restricted":{"parent":"0:256:1893","path":"::datetime"}},"docs":"Convert a `DateTime<Utc>` instance into a `DateTime<Local>` instance.","links":{},"attrs":["#[cfg(feature = \"clock\")]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:3384:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Local","id":"0:3377:1873","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:405:681"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1182:3908":{"id":"0:1182:3908","crate_id":0,"name":"from_yo","span":{"filename":"src/naive/date.rs","begin":[291,4],"end":[293,5]},"visibility":"public","docs":"Makes a new `NaiveDate` from the [ordinal date](#ordinal-date)\n(year and day of the year).\n\nPanics on the out-of-range date and/or invalid day of year.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike, Weekday};\n\nlet d = NaiveDate::from_yo(2015, 73);\nassert_eq!(d.ordinal(), 73);\nassert_eq!(d.year(), 2015);\nassert_eq!(d.month(), 3);\nassert_eq!(d.day(), 14);\nassert_eq!(d.iso_week().year(), 2015);\nassert_eq!(d.iso_week().week(), 11);\nassert_eq!(d.weekday(), Weekday::Sat);\nassert_eq!(d.num_days_from_ce(), 735671); // days since January 1, 1 CE\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["year",{"kind":"primitive","inner":"i32"}],["ordinal",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4002-0:2621:1877":{"id":"b:2:4002-0:2621:1877","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:209:604":{"id":"0:209:604","crate_id":0,"name":"eq","span":{"filename":"src/date.rs","begin":[457,4],"end":[459,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz2"}}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1231":{"id":"0:1231","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[1280,0],"end":[1620,1]},"visibility":{"restricted":{"parent":"0:1062:1890","path":"::naive::date"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["num_days_from_ce","year_ce"],"trait":{"name":"Datelike","id":"0:2553:1879","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1232:2158","0:1233:1909","0:1234:2188","0:1235:2159","0:1236:2189","0:1237:2190","0:1238:2191","0:1239:1907","0:1240:2192","0:1241:2193","0:1242:2194","0:1243:2195","0:1244:2196","0:1245:2197","0:1246:2198","0:1247:2199"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3530":{"id":"0:3530","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[30,9],"end":[30,18]},"visibility":{"restricted":{"parent":"0:2518:1909","path":"::month"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Month","id":"0:3492:1880","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:3492:1880","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3531:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:10688:146":{"id":"2:10688:146","crate_id":2,"name":"Hasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10689:652","2:10690:2203","2:10691:61954","2:10692:61955","2:10693:61956","2:10694:61957","2:10695:61958","2:10696:61959","2:10697:61960","2:10698:61961","2:10699:61962","2:10700:61963","2:10701:61964","2:10702:61965","2:10703:61966","2:10704:1533"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:23933:8823":{"id":"2:23933:8823","crate_id":2,"name":"SimdElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:23934:8822"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:23929:8515","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3406:7094":{"id":"2:3406:7094","crate_id":2,"name":"BitXor","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3408:181","2:3409:356"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:4002-0:3562:1911":{"id":"b:2:4002-0:3562:1911","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseMonthError","id":"0:3562:1911","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2379:4469":{"id":"0:2379:4469","crate_id":0,"name":"yo_opt","span":{"filename":"src/offset/mod.rs","begin":[277,4],"end":[282,5]},"visibility":"default","docs":"Makes a new `Date` from year, day of year (DOY or \"ordinal\") and the current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\n\nThe time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),\nbut it will propagate to the `DateTime` values constructed via this date.\n\nReturns `None` on the out-of-range date and/or invalid DOY.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["year",{"kind":"primitive","inner":"i32"}],["ordinal",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3395:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2572:1881":{"id":"0:2572:1881","crate_id":0,"name":"Timelike","span":{"filename":"src/traits.rs","begin":[122,0],"end":[178,1]},"visibility":"public","docs":"The common set of methods for time component.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:2573:2087","0:2574:2844","0:2575:2477","0:2576:2478","0:2577:2479","0:2578:2480","0:2579:2481","0:2580:2482","0:2581:2483","0:2582:4712"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:468","0:1441","0:1680"]}},"0:394:2068":{"id":"0:394:2068","crate_id":0,"name":"MIN_UTC","span":{"filename":"src/datetime/mod.rs","begin":[379,4],"end":[379,94]},"visibility":"public","docs":"The minimum possible `DateTime<Utc>`.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:3384:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"default":"_"}},"2:2871:2030":{"id":"2:2871:2030","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3067:1887":{"id":"0:3067:1887","crate_id":0,"name":"NaiveTime","span":{"filename":"src/naive/time/mod.rs","begin":[192,0],"end":[195,1]},"visibility":"public","docs":"ISO 8601 time without timezone.\nAllows for the nanosecond precision and optional leap second representation.\n\n# Leap Second Handling\n\nSince 1960s, the manmade atomic clock has been so accurate that\nit is much more accurate than Earth's own motion.\nIt became desirable to define the civil time in terms of the atomic clock,\nbut that risks the desynchronization of the civil time from Earth.\nTo account for this, the designers of the Coordinated Universal Time (UTC)\nmade that the UTC should be kept within 0.9 seconds of the observed Earth-bound time.\nWhen the mean solar day is longer than the ideal (86,400 seconds),\nthe error slowly accumulates and it is necessary to add a **leap second**\nto slow the UTC down a bit.\n(We may also remove a second to speed the UTC up a bit, but it never happened.)\nThe leap second, if any, follows 23:59:59 of June 30 or December 31 in the UTC.\n\nFast forward to the 21st century,\nwe have seen 26 leap seconds from January 1972 to December 2015.\nYes, 26 seconds. Probably you can read this paragraph within 26 seconds.\nBut those 26 seconds, and possibly more in the future, are never predictable,\nand whether to add a leap second or not is known only before 6 months.\nInternet-based clocks (via NTP) do account for known leap seconds,\nbut the system API normally doesn't (and often can't, with no network connection)\nand there is no reliable way to retrieve leap second information.\n\nChrono does not try to accurately implement leap seconds; it is impossible.\nRather, **it allows for leap seconds but behaves as if there are *no other* leap seconds.**\nVarious operations will ignore any possible leap second(s)\nexcept when any of the operands were actually leap seconds.\n\nIf you cannot tolerate this behavior,\nyou must use a separate `TimeZone` for the International Atomic Time (TAI).\nTAI is like UTC but has no leap seconds, and thus slightly differs from UTC.\nChrono does not yet provide such implementation, but it is planned.\n\n## Representing Leap Seconds\n\nThe leap second is indicated via fractional seconds more than 1 second.\nThis makes possible to treat a leap second as the prior non-leap second\nif you don't care about sub-second accuracy.\nYou should use the proper formatting to get the raw leap second.\n\nAll methods accepting fractional seconds will accept such values.\n\n```\nuse chrono::{NaiveDate, NaiveTime, Utc, TimeZone};\n\nlet t = NaiveTime::from_hms_milli(8, 59, 59, 1_000);\n\nlet dt1 = NaiveDate::from_ymd(2015, 7, 1).and_hms_micro(8, 59, 59, 1_000_000);\n\nlet dt2 = Utc.ymd(2015, 6, 30).and_hms_nano(23, 59, 59, 1_000_000_000);\n# let _ = (t, dt1, dt2);\n```\n\nNote that the leap second can happen anytime given an appropriate time zone;\n2015-07-01 01:23:60 would be a proper leap second if UTC+01:24 had existed.\nPractically speaking, though, by the time of the first leap second on 1972-06-30,\nevery time zone offset around the world has standardized to the 5-minute alignment.\n\n## Date And Time Arithmetics\n\nAs a concrete example, let's assume that `03:00:60` and `04:00:60` are leap seconds.\nIn reality, of course, leap seconds are separated by at least 6 months.\nWe will also use some intuitive concise notations for the explanation.\n\n`Time + Duration`\n(short for [`NaiveTime::overflowing_add_signed`](#method.overflowing_add_signed)):\n\n- `03:00:00 + 1s = 03:00:01`.\n- `03:00:59 + 60s = 03:02:00`.\n- `03:00:59 + 1s = 03:01:00`.\n- `03:00:60 + 1s = 03:01:00`.\n  Note that the sum is identical to the previous.\n- `03:00:60 + 60s = 03:01:59`.\n- `03:00:60 + 61s = 03:02:00`.\n- `03:00:60.1 + 0.8s = 03:00:60.9`.\n\n`Time - Duration`\n(short for [`NaiveTime::overflowing_sub_signed`](#method.overflowing_sub_signed)):\n\n- `03:00:00 - 1s = 02:59:59`.\n- `03:01:00 - 1s = 03:00:59`.\n- `03:01:00 - 60s = 03:00:00`.\n- `03:00:60 - 60s = 03:00:00`.\n  Note that the result is identical to the previous.\n- `03:00:60.7 - 0.4s = 03:00:60.3`.\n- `03:00:60.7 - 0.9s = 03:00:59.8`.\n\n`Time - Time`\n(short for [`NaiveTime::signed_duration_since`](#method.signed_duration_since)):\n\n- `04:00:00 - 03:00:00 = 3600s`.\n- `03:01:00 - 03:00:00 = 60s`.\n- `03:00:60 - 03:00:00 = 60s`.\n  Note that the difference is identical to the previous.\n- `03:00:60.6 - 03:00:59.4 = 1.2s`.\n- `03:01:00 - 03:00:59.8 = 0.2s`.\n- `03:01:00 - 03:00:60.5 = 0.5s`.\n  Note that the difference is larger than the previous,\n  even though the leap second clearly follows the previous whole second.\n- `04:00:60.9 - 03:00:60.1 =\n  (04:00:60.9 - 04:00:00) + (04:00:00 - 03:01:00) + (03:01:00 - 03:00:60.1) =\n  60.9s + 3540s + 0.9s = 3601.8s`.\n\nIn general,\n\n- `Time + Duration` unconditionally equals to `Duration + Time`.\n\n- `Time - Duration` unconditionally equals to `Time + (-Duration)`.\n\n- `Time1 - Time2` unconditionally equals to `-(Time2 - Time1)`.\n\n- Associativity does not generally hold, because\n  `(Time + Duration1) - Duration2` no longer equals to `Time + (Duration1 - Duration2)`\n  for two positive durations.\n\n    - As a special case, `(Time + Duration) - Duration` also does not equal to `Time`.\n\n    - If you can assume that all durations have the same sign, however,\n      then the associativity holds:\n      `(Time + Duration1) + Duration2` equals to `Time + (Duration1 + Duration2)`\n      for two positive durations.\n\n## Reading And Writing Leap Seconds\n\nThe \"typical\" leap seconds on the minute boundary are\ncorrectly handled both in the formatting and parsing.\nThe leap second in the human-readable representation\nwill be represented as the second part being 60, as required by ISO 8601.\n\n```\nuse chrono::{Utc, TimeZone};\n\nlet dt = Utc.ymd(2015, 6, 30).and_hms_milli(23, 59, 59, 1_000);\nassert_eq!(format!(\"{:?}\", dt), \"2015-06-30T23:59:60Z\");\n```\n\nThere are hypothetical leap seconds not on the minute boundary\nnevertheless supported by Chrono.\nThey are allowed for the sake of completeness and consistency;\nthere were several \"exotic\" time zone offsets with fractional minutes prior to UTC after all.\nFor such cases the human-readable representation is ambiguous\nand would be read back to the next non-leap second.\n\n```\nuse chrono::{DateTime, Utc, TimeZone};\n\nlet dt = Utc.ymd(2015, 6, 30).and_hms_milli(23, 56, 4, 1_000);\nassert_eq!(format!(\"{:?}\", dt), \"2015-06-30T23:56:05Z\");\n\nlet dt = Utc.ymd(2015, 6, 30).and_hms(23, 56, 5);\nassert_eq!(format!(\"{:?}\", dt), \"2015-06-30T23:56:05Z\");\nassert_eq!(DateTime::parse_from_rfc3339(\"2015-06-30T23:56:05Z\").unwrap(), dt);\n```\n\nSince Chrono alone cannot determine any existence of leap seconds,\n**there is absolutely no guarantee that the leap second read has actually happened**.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:1651","a:2:3310:7473-0:3067:1887","a:2:9408:7639-0:3067:1887","a:2:3269:211-0:3067:1887","a:2:9407:7640-0:3067:1887","a:2:3281:220-0:3067:1887","b:2:2869-0:3067:1887","b:2:4002-0:3067:1887","b:2:3198-0:3067:1887","b:2:2872-0:3067:1887","b:2:3208-0:3067:1887","b:2:3202-0:3067:1887","b:2:3213-0:3067:1887","b:5:787-0:3067:1887","b:5:6420-0:3067:1887","0:3070","0:3071","0:3073","0:3074","0:3076","0:3079","0:3081","0:3083","0:3084","0:1680","0:1690","0:1693","0:1695","0:1698","0:1700","0:1703","0:1705","0:1707","0:1711","0:1860","0:1863"]}},"0:2560:2190":{"id":"0:2560:2190","crate_id":0,"name":"ordinal","span":{"filename":"src/traits.rs","begin":[43,4],"end":[43,29]},"visibility":"default","docs":"Returns the day of year starting from 1.\n\nThe return value ranges from 1 to 366. (The last day of year differs by years.)","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2895":{"id":"0:2895","crate_id":0,"name":null,"span":{"filename":"src/format/parsed.rs","begin":[25,9],"end":[25,14]},"visibility":{"restricted":{"parent":"0:705:2399","path":"::format::parsed"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Parsed","id":"0:2873:2237","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2896:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2561:2191":{"id":"0:2561:2191","crate_id":0,"name":"ordinal0","span":{"filename":"src/traits.rs","begin":[48,4],"end":[48,30]},"visibility":"default","docs":"Returns the day of year starting from 0.\n\nThe return value ranges from 0 to 365. (The last day of year differs by years.)","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3015":{"id":"0:3015","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[74,47],"end":[74,51]},"visibility":{"restricted":{"parent":"0:1291:1893","path":"::naive::datetime"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2957":{"id":"0:2957","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[166,53],"end":[166,58]},"visibility":{"restricted":{"parent":"0:1062:1890","path":"::naive::date"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2958:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3310:7473-0:2590:1872":{"id":"a:2:3310:7473-0:2590:1872","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Tz"},"trait":{"name":"TimeZone","id":"0:2374:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3310:7473","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:7473","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1857:660":{"id":"0:1857:660","crate_id":0,"name":"fmt","span":{"filename":"src/offset/fixed.rs","begin":[148,4],"end":[150,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10400:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10389:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:787-0:2659:2444":{"id":"b:5:787-0:2659:2444","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2659:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:7921","5:790:7922","5:791:7923"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1243:2195":{"id":"0:1243:2195","crate_id":0,"name":"with_month0","span":{"filename":"src/naive/date.rs","begin":[1531,4],"end":[1533,5]},"visibility":"default","docs":"Makes a new `NaiveDate` with the month number (starting from 0) changed.\n\nReturns `None` when the resulting `NaiveDate` would be invalid.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(NaiveDate::from_ymd(2015, 9, 8).with_month0(9),\n           Some(NaiveDate::from_ymd(2015, 10, 8)));\nassert_eq!(NaiveDate::from_ymd(2015, 9, 8).with_month0(12), None); // no month 13\nassert_eq!(NaiveDate::from_ymd(2015, 9, 30).with_month0(1), None); // no February 30\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["month0",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:498:415":{"id":"0:498:415","crate_id":0,"name":"cmp","span":{"filename":"src/datetime/mod.rs","begin":[842,4],"end":[844,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Ordering","id":"2:37761:178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3508:2806":{"id":"0:3508:2806","crate_id":0,"name":"June","span":{"filename":"src/month.rs","begin":[45,4],"end":[45,12]},"visibility":"default","docs":"June","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:212":{"id":"0:212","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[464,0],"end":[468,1]},"visibility":{"restricted":{"parent":"0:61:1890","path":"::date"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:2374:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["le","ge","lt","gt"],"trait":{"name":"PartialOrd","id":"2:2967:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:214:997"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3208-0:3562:1911":{"id":"b:2:3208-0:3562:1911","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseMonthError","id":"0:3562:1911","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1872":{"id":"0:1872","crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[204,0],"end":[211,1]},"visibility":{"restricted":{"parent":"0:1795:5699","path":"::offset::fixed"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:2374:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Add","id":"2:3337:2031","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:1874:181","0:1875:265"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:492":{"id":"0:492","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[820,0],"end":[839,1]},"visibility":{"restricted":{"parent":"0:256:1893","path":"::datetime"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:2374:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"Tz2","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:2374:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["le","ge","lt","gt"],"trait":{"name":"PartialOrd","id":"2:2967:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz2"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:495:997"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:224:181":{"id":"0:224:181","crate_id":0,"name":"Output","span":{"filename":"src/date.rs","begin":[483,4],"end":[483,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}},"2:2926:124":{"id":"2:2926:124","crate_id":2,"name":"Eq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:1462":{"id":"0:1462","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1349,0],"end":[1354,1]},"visibility":{"restricted":{"parent":"0:1291:1893","path":"::naive::datetime"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"SubAssign","id":"2:3372:2034","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Duration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1463:1356"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:144:2115":{"id":"0:144:2115","crate_id":0,"name":"and_hms_nano_opt","span":{"filename":"src/date.rs","begin":[178,4],"end":[186,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date, hour, minute, second and nanosecond.\nThe nanosecond part can exceed 1,000,000,000 in order to represent the leap second.\nThe offset in the current date is preserved.\n\nReturns `None` on invalid hour, minute, second and/or nanosecond.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["hour",{"kind":"primitive","inner":"u32"}],["min",{"kind":"primitive","inner":"u32"}],["sec",{"kind":"primitive","inner":"u32"}],["nano",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:778:3004":{"id":"0:778:3004","crate_id":0,"name":"set_weekday","span":{"filename":"src/format/parsed.rs","begin":[208,4],"end":[210,5]},"visibility":"public","docs":"Tries to set the [`weekday`](#structfield.weekday) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["value",{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:3446:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:632:1899","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:3428:1906":{"id":"b:2:3213-0:3428:1906","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RoundingError","id":"0:3428:1906","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2839":{"id":"0:2839","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[336,23],"end":[336,32]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2831:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2831:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2840:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9407:7640-0:3428:1906":{"id":"a:2:9407:7640-0:3428:1906","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9407:7640","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RoundingError","id":"0:3428:1906","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3008":{"id":"0:3008","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[74,24],"end":[74,28]},"visibility":{"restricted":{"parent":"0:1291:1893","path":"::naive::datetime"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10678:142","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3009:715"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2918":{"id":"0:2918","crate_id":0,"name":null,"span":{"filename":"src/format/strftime.rs","begin":[197,16],"end":[197,21]},"visibility":{"restricted":{"parent":"0:995:2597","path":"::format::strftime"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10440:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2908:2041","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:2920:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:190:2194":{"id":"0:190:2194","crate_id":0,"name":"with_month","span":{"filename":"src/date.rs","begin":[422,4],"end":[424,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["month",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1400:2338":{"id":"0:1400:2338","crate_id":0,"name":"timestamp_nanos","span":{"filename":"src/naive/datetime/mod.rs","begin":[391,4],"end":[394,5]},"visibility":"public","docs":"Returns the number of non-leap *nanoseconds* since midnight on January 1, 1970.\n\nNote that this does *not* account for the timezone!\nThe true \"UNIX timestamp\" would count seconds since the midnight *UTC* on the epoch.\n\n# Panics\n\nNote also that this does reduce the number of years that can be\nrepresented from ~584 Billion to ~584 years. The dates that can be\nrepresented as nanoseconds are between 1677-09-21T00:12:44.0 and\n2262-04-11T23:47:16.854775804.\n\n(If this is a problem, please file an issue to let me know what domain\nneeds nanosecond precision over millennia, I'm curious.)\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime};\n\nlet dt = NaiveDate::from_ymd(1970, 1, 1).and_hms_nano(0, 0, 1, 444);\nassert_eq!(dt.timestamp_nanos(), 1_000_000_444);\n\nlet dt = NaiveDate::from_ymd(2001, 9, 9).and_hms_nano(1, 46, 40, 555);\n\nconst A_BILLION: i64 = 1_000_000_000;\nlet nanos = dt.timestamp_nanos();\nassert_eq!(nanos, 1_000_000_000_000_000_555);\nassert_eq!(\n    dt,\n    NaiveDateTime::from_timestamp(nanos / A_BILLION, (nanos % A_BILLION) as u32)\n);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1582:2842":{"id":"0:1582:2842","crate_id":0,"name":"week","span":{"filename":"src/naive/isoweek.rs","begin":[91,4],"end":[93,5]},"visibility":"public","docs":"Returns the ISO week number starting from 1.\n\nThe return value ranges from 1 to 53. (The last week of year differs by years.)\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike, Weekday};\n\nlet d = NaiveDate::from_isoywd(2015, 15, Weekday::Mon);\nassert_eq!(d.iso_week().week(), 15);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:621":{"id":"0:621","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[171,0],"end":[175,1]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10440:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:614:2656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:622:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1879:1355":{"id":"0:1879:1355","crate_id":0,"name":"sub","span":{"filename":"src/offset/fixed.rs","begin":[217,4],"end":[219,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:784:3019":{"id":"0:784:3019","crate_id":0,"name":"set_minute","span":{"filename":"src/format/parsed.rs","begin":[253,4],"end":[255,5]},"visibility":"public","docs":"Tries to set the [`minute`](#structfield.minute) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["value",{"kind":"primitive","inner":"i64"}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:632:1899","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1675:671":{"id":"0:1675:671","crate_id":0,"name":"format","span":{"filename":"src/naive/time/mod.rs","begin":[792,4],"end":[794,5]},"visibility":"public","docs":"Formats the time with the specified format string.\nSee the [`format::strftime` module](../format/strftime/index.html)\non the supported escape sequences.\n\nThis returns a `DelayedFormat`,\nwhich gets converted to a string only when actual formatting happens.\nYou may use the `to_string` method to get a `String`,\nor just feed it into `print!` and other formatting macros.\n(In this way it avoids the redundant memory allocation.)\n\nA wrong format string does *not* issue an error immediately.\nRather, converting or formatting the `DelayedFormat` fails.\nYou are recommended to immediately use `DelayedFormat` for this reason.\n\n# Example\n\n```\nuse chrono::NaiveTime;\n\nlet t = NaiveTime::from_hms_nano(23, 56, 4, 12_345_678);\nassert_eq!(t.format(\"%H:%M:%S\").to_string(), \"23:56:04\");\nassert_eq!(t.format(\"%H:%M:%S%.6f\").to_string(), \"23:56:04.012345\");\nassert_eq!(t.format(\"%-I:%M %p\").to_string(), \"11:56 PM\");\n```\n\nThe resulting `DelayedFormat` can be formatted directly via the `Display` trait.\n\n```\n# use chrono::NaiveTime;\n# let t = NaiveTime::from_hms_nano(23, 56, 4, 12_345_678);\nassert_eq!(format!(\"{}\", t.format(\"%H:%M:%S\")), \"23:56:04\");\nassert_eq!(format!(\"{}\", t.format(\"%H:%M:%S%.6f\")), \"23:56:04.012345\");\nassert_eq!(format!(\"{}\", t.format(\"%-I:%M %p\")), \"11:56 PM\");\n```","links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["fmt",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2927:2039","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2908:2041","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2382:2309":{"id":"0:2382:2309","crate_id":0,"name":"timestamp","span":{"filename":"src/offset/mod.rs","begin":[335,4],"end":[337,5]},"visibility":"default","docs":"Makes a new `DateTime` from the number of non-leap seconds\nsince January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\")\nand the number of nanoseconds since the last whole non-leap second.\n\nPanics on the out-of-range number of seconds and/or invalid nanosecond,\nfor a non-panicking version see [`timestamp_opt`](#method.timestamp_opt).\n\n# Example\n\n```\nuse chrono::{Utc, TimeZone};\n\nassert_eq!(Utc.timestamp(1431648000, 0).to_string(), \"2015-05-15 00:00:00 UTC\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["secs",{"kind":"primitive","inner":"i64"}],["nsecs",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3358:7088":{"id":"2:3358:7088","crate_id":2,"name":"Rem","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3360:181","2:3361:1102"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10459:7227":{"id":"2:10459:7227","crate_id":2,"name":"LowerExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10460:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:779:3006":{"id":"0:779:3006","crate_id":0,"name":"set_ordinal","span":{"filename":"src/format/parsed.rs","begin":[214,4],"end":[216,5]},"visibility":"public","docs":"Tries to set the [`ordinal`](#structfield.ordinal) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["value",{"kind":"primitive","inner":"i64"}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:632:1899","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2566:2195":{"id":"0:2566:2195","crate_id":0,"name":"with_month0","span":{"filename":"src/traits.rs","begin":[69,4],"end":[69,55]},"visibility":"default","docs":"Makes a new value with the month number (starting from 0) changed.\n\nReturns `None` when the resulting value would be invalid.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["month0",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"1:5741:8532":{"id":"1:5741:8532","crate_id":1,"name":"FileExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5742:63011","1:5743:63013","1:5744:63012","1:5745:63014"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2651":{"id":"0:2651","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[74,22],"end":[74,31]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2641:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"1:5749:8533":{"id":"1:5749:8533","crate_id":1,"name":"PermissionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5750:11103","1:5751:60239","1:5752:60240"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3269:211-0:2927:2039":{"id":"a:2:3269:211-0:2927:2039","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2927:2039","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9407:7640-0:3395:1903":{"id":"a:2:9407:7640-0:3395:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9407:7640","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9407:7640","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3395:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2378:5739":{"id":"0:2378:5739","crate_id":0,"name":"yo","span":{"filename":"src/offset/mod.rs","begin":[266,4],"end":[268,5]},"visibility":"default","docs":"Makes a new `Date` from year, day of year (DOY or \"ordinal\") and the current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\n\nThe time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),\nbut it will propagate to the `DateTime` values constructed via this date.\n\nPanics on the out-of-range date and/or invalid DOY.\n\n# Example\n\n```\nuse chrono::{Utc, TimeZone};\n\nassert_eq!(Utc.yo(2015, 135).to_string(), \"2015-05-15UTC\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["year",{"kind":"primitive","inner":"i32"}],["ordinal",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:555":{"id":"0:555","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[474,58],"end":[474,70]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"datetime::MIN_DATETIME","name":"MIN_DATETIME","id":"0:367:1896","glob":false}},"0:1839:2225":{"id":"0:1839:2225","crate_id":0,"name":"east","span":{"filename":"src/offset/fixed.rs","begin":[46,4],"end":[48,5]},"visibility":"public","docs":"Makes a new `FixedOffset` for the Eastern Hemisphere with given timezone difference.\nThe negative `secs` means the Western Hemisphere.\n\nPanics on the out-of-bound `secs`.\n\n# Example\n\n```\nuse chrono::{FixedOffset, TimeZone};\nlet hour = 3600;\nlet datetime = FixedOffset::east(5 * hour).ymd(2016, 11, 08)\n                                          .and_hms(0, 0, 0);\nassert_eq!(&datetime.to_rfc3339(), \"2016-11-08T00:00:00+05:00\")\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["secs",{"kind":"primitive","inner":"i32"}]],"output":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2957:177":{"id":"2:2957:177","crate_id":2,"name":"Ord","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2958:415","2:2959:3100","2:2960:2088","2:2961:7292"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2967:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"23:241:58023":{"id":"23:241:58023","crate_id":23,"name":"UpperBounded","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:242:4507"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:407:681":{"id":"0:407:681","crate_id":0,"name":"from","span":{"filename":"src/datetime/mod.rs","begin":[431,4],"end":[433,5]},"visibility":"default","docs":"Convert this `DateTime<FixedOffset>` instance into a `DateTime<Utc>` instance.\n\nConversion is performed via [`DateTime::with_timezone`], accounting for the timezone\ndifference.","links":{"`DateTime::with_timezone`":"0:2621:1877"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["src",{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2935:660":{"id":"0:2935:660","crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[746,9],"end":[746,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10400:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10389:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6581:8509":{"id":"1:6581:8509","crate_id":1,"name":"JoinHandleExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6582:62645","1:6583:62646"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3310:7473-0:2999:1886":{"id":"a:2:3310:7473-0:2999:1886","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:7473","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2533":{"id":"0:2533","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[209,0],"end":[213,1]},"visibility":{"restricted":{"parent":"0:2518:1909","path":"::month"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10440:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseMonthError","id":"0:3562:1911","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2534:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2877:2945":{"id":"0:2877:2945","crate_id":0,"name":"isoyear","span":{"filename":"src/format/parsed.rs","begin":[47,4],"end":[47,28]},"visibility":"public","docs":"Year in the [ISO week date](../naive/struct.NaiveDate.html#week-date).\n\nThis can be negative unlike [`isoyear_div_100`](#structfield.isoyear_div_100) and\n[`isoyear_mod_100`](#structfield.isoyear_mod_100) fields.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i32"}}],"bindings":[]}}}}},"2:3376:7090":{"id":"2:3376:7090","crate_id":2,"name":"MulAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3378:893"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:446:1909":{"id":"0:446:1909","crate_id":0,"name":"month","span":{"filename":"src/datetime/mod.rs","begin":[701,4],"end":[703,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:781:3011":{"id":"0:781:3011","crate_id":0,"name":"set_ampm","span":{"filename":"src/format/parsed.rs","begin":[227,4],"end":[229,5]},"visibility":"public","docs":"Tries to set the [`hour_div_12`](#structfield.hour_div_12) field from given value.\n(`false` for AM, `true` for PM)","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["value",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:632:1899","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1667:2147":{"id":"0:1667:2147","crate_id":0,"name":"signed_duration_since","span":{"filename":"src/naive/time/mod.rs","begin":[681,4],"end":[717,5]},"visibility":"public","docs":"Subtracts another `NaiveTime` from the current time.\nReturns a `Duration` within +/- 1 day.\nThis does not overflow or underflow at all.\n\nAs a part of Chrono's [leap second handling](#leap-second-handling),\nthe subtraction assumes that **there is no leap second ever**,\nexcept when any of the `NaiveTime`s themselves represents a leap second\nin which case the assumption becomes that\n**there are exactly one (or two) leap second(s) ever**.\n\n# Example\n\n```\nuse chrono::{Duration, NaiveTime};\n\nlet from_hmsm = NaiveTime::from_hms_milli;\nlet since = NaiveTime::signed_duration_since;\n\nassert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(3, 5, 7, 900)),\n           Duration::zero());\nassert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(3, 5, 7, 875)),\n           Duration::milliseconds(25));\nassert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(3, 5, 6, 925)),\n           Duration::milliseconds(975));\nassert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(3, 5, 0, 900)),\n           Duration::seconds(7));\nassert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(3, 0, 7, 900)),\n           Duration::seconds(5 * 60));\nassert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(0, 5, 7, 900)),\n           Duration::seconds(3 * 3600));\nassert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(4, 5, 7, 900)),\n           Duration::seconds(-3600));\nassert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(2, 4, 6, 800)),\n           Duration::seconds(3600 + 60 + 1) + Duration::milliseconds(100));\n```\n\nLeap seconds are handled, but the subtraction assumes that\nthere were no other leap seconds happened.\n\n```\n# use chrono::{Duration, NaiveTime};\n# let from_hmsm = NaiveTime::from_hms_milli;\n# let since = NaiveTime::signed_duration_since;\nassert_eq!(since(from_hmsm(3, 0, 59, 1_000), from_hmsm(3, 0, 59, 0)),\n           Duration::seconds(1));\nassert_eq!(since(from_hmsm(3, 0, 59, 1_500), from_hmsm(3, 0, 59, 0)),\n           Duration::milliseconds(1500));\nassert_eq!(since(from_hmsm(3, 0, 59, 1_000), from_hmsm(3, 0, 0, 0)),\n           Duration::seconds(60));\nassert_eq!(since(from_hmsm(3, 0, 0, 0), from_hmsm(2, 59, 59, 1_000)),\n           Duration::seconds(1));\nassert_eq!(since(from_hmsm(3, 0, 59, 1_000), from_hmsm(2, 59, 59, 1_000)),\n           Duration::seconds(61));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3198-0:3482:1908":{"id":"b:2:3198-0:3482:1908","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:3482:1908","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:2536"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2368:2115":{"id":"0:2368:2115","crate_id":0,"name":"and_hms_nano_opt","span":{"filename":"src/offset/mod.rs","begin":[164,4],"end":[177,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date, hour, minute, second and nanosecond.\nThe nanosecond part can exceed 1,000,000,000 in order to represent the leap second.\nThe offset in the current date is preserved.\n\nPropagates any error. Ambiguous result would be discarded.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["hour",{"kind":"primitive","inner":"u32"}],["min",{"kind":"primitive","inner":"u32"}],["sec",{"kind":"primitive","inner":"u32"}],["nano",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3395:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:220-0:3428:1906":{"id":"a:2:3281:220-0:3428:1906","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RoundingError","id":"0:3428:1906","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:4051:7212":{"id":"2:4051:7212","crate_id":2,"name":"Provider","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4052:8076"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:4002-0:3395:1903":{"id":"b:2:4002-0:3395:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3395:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:4002-0:2761:2702":{"id":"b:2:4002-0:2761:2702","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2761:2702","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3557":{"id":"0:3557","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[193,39],"end":[193,48]},"visibility":{"restricted":{"parent":"0:2518:1909","path":"::month"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Months","id":"0:3543:1910","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13577:793":{"id":"2:13577:793","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:15986:6923"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_len\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:177":{"id":"0:177","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[378,0],"end":[450,1]},"visibility":{"restricted":{"parent":"0:61:1890","path":"::date"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:2374:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["num_days_from_ce","year_ce"],"trait":{"name":"Datelike","id":"0:2553:1879","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:179:2158","0:180:1909","0:181:2188","0:182:2159","0:183:2189","0:184:2190","0:185:2191","0:186:1907","0:187:2192","0:188:2193","0:190:2194","0:192:2195","0:194:2196","0:196:2197","0:198:2198","0:200:2199"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:164:2071":{"id":"0:164:2071","crate_id":0,"name":"MAX_UTC","span":{"filename":"src/date.rs","begin":[299,4],"end":[299,78]},"visibility":"public","docs":"The maximum possible `Date`.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:3384:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"default":"_"}},"b:2:2869-0:3482:1908":{"id":"b:2:2869-0:3482:1908","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:3482:1908","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:2030"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"23:715:7316":{"id":"23:715:7316","crate_id":23,"name":"Saturating","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:716:1227","23:717:1228"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2862":{"id":"0:2862","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[347,9],"end":[347,14]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10440:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2845:2736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2863:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3281:220-0:2597:1878":{"id":"a:2:3281:220-0:2597:1878","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SecondsFormat","id":"0:2597:1878","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13635:64777":{"id":"2:13635:64777","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:13202:1925","prim@char":"1:15986:6923","`DoubleEndedIterator`":"2:8591:120","str::rsplit_terminator":"1:15992:6928","str::split":"1:15992:6928"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitTerminator","id":"2:49641:7176","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3169:74":{"id":"2:3169:74","crate_id":2,"name":"AsMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3171:7869"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:2369":{"id":"0:2369","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[180,0],"end":[191,1]},"visibility":{"restricted":{"parent":"0:1758:957","path":"::offset"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:10440:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3395:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:2371:1484"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:5:787-0:2597:1878":{"id":"b:5:787-0:2597:1878","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SecondsFormat","id":"0:2597:1878","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:7921","5:790:7922","5:791:7923"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:391:2149":{"id":"0:391:2149","crate_id":0,"name":"naive_utc","span":{"filename":"src/datetime/mod.rs","begin":[351,4],"end":[353,5]},"visibility":"public","docs":"Returns a view to the naive UTC datetime.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2888:2966":{"id":"0:2888:2966","crate_id":0,"name":"hour_mod_12","span":{"filename":"src/format/parsed.rs","begin":[89,4],"end":[89,32]},"visibility":"public","docs":"Hour number modulo 12 (0--11).","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u32"}}],"bindings":[]}}}}},"0:2917:408":{"id":"0:2917:408","crate_id":0,"name":"clone","span":{"filename":"src/format/strftime.rs","begin":[197,9],"end":[197,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2908:2041","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"23:698:58130":{"id":"23:698:58130","crate_id":23,"name":"OverflowingAdd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:699:66141"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Add","id":"2:3337:2031","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13698:60323":{"id":"2:13698:60323","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3456:2817":{"id":"0:3456:2817","crate_id":0,"name":"Thu","span":{"filename":"src/weekday.rs","begin":[22,4],"end":[22,11]},"visibility":"default","docs":"Thursday.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:1242:2194":{"id":"0:1242:2194","crate_id":0,"name":"with_month","span":{"filename":"src/naive/date.rs","begin":[1512,4],"end":[1514,5]},"visibility":"default","docs":"Makes a new `NaiveDate` with the month number (starting from 1) changed.\n\nReturns `None` when the resulting `NaiveDate` would be invalid.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(NaiveDate::from_ymd(2015, 9, 8).with_month(10),\n           Some(NaiveDate::from_ymd(2015, 10, 8)));\nassert_eq!(NaiveDate::from_ymd(2015, 9, 8).with_month(13), None); // no month 13\nassert_eq!(NaiveDate::from_ymd(2015, 9, 30).with_month(2), None); // no February 30\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["month",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2712:660":{"id":"0:2712:660","crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[97,31],"end":[97,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10400:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10389:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:385:2134":{"id":"0:385:2134","crate_id":0,"name":"with_timezone","span":{"filename":"src/datetime/mod.rs","begin":[318,4],"end":[320,5]},"visibility":"public","docs":"Changes the associated time zone.\nThe returned `DateTime` references the same instant of time from the perspective of the provided time zone.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["tz",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Tz2"}}}]],"output":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz2"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Tz2","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:2374:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3511:2807":{"id":"0:3511:2807","crate_id":0,"name":"July","span":{"filename":"src/month.rs","begin":[47,4],"end":[47,12]},"visibility":"default","docs":"July","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2458:1905":{"id":"0:2458:1905","crate_id":0,"name":"DurationRound","span":{"filename":"src/round.rs","begin":[101,0],"end":[143,1]},"visibility":"public","docs":"Extension trait for rounding or truncating a DateTime by a Duration.\n\n# Limitations\nBoth rounding and truncating are done via [`Duration::num_nanoseconds`] and\n[`DateTime::timestamp_nanos`]. This means that they will fail if either the\n`Duration` or the `DateTime` are too big to represented as nanoseconds. They\nwill also fail if the `Duration` is bigger than the timestamp.","links":{"`Duration::num_nanoseconds`":"20:405:121","`DateTime::timestamp_nanos`":"0:2621:1877"},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:2459:126","0:2460:6588","0:2461:6593"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:2463","0:2468"]}},"0:3564":{"id":"0:3564","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[204,9],"end":[204,14]},"visibility":{"restricted":{"parent":"0:2518:1909","path":"::month"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseMonthError","id":"0:3562:1911","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3565:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2554:2158":{"id":"0:2554:2158","crate_id":0,"name":"year","span":{"filename":"src/traits.rs","begin":[6,4],"end":[6,26]},"visibility":"default","docs":"Returns the year number in the [calendar date](./naive/struct.NaiveDate.html#calendar-date).","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:3310:7473-0:3562:1911":{"id":"a:2:3310:7473-0:3562:1911","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:7473","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseMonthError","id":"0:3562:1911","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2954":{"id":"0:2954","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[166,42],"end":[166,45]},"visibility":{"restricted":{"parent":"0:1062:1890","path":"::naive::date"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["max","min","clamp"],"trait":{"name":"Ord","id":"2:2957:177","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2955:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9407:7640-0:3562:1911":{"id":"a:2:9407:7640-0:3562:1911","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9407:7640","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseMonthError","id":"0:3562:1911","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:5:6420-0:2941:1885":{"id":"b:5:6420-0:2941:1885","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10447:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:6418:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:6422:1397"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3072:604":{"id":"0:3072:604","crate_id":0,"name":"eq","span":{"filename":"src/naive/time/mod.rs","begin":[190,9],"end":[190,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2610":{"id":"0:2610","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[52,9],"end":[52,14]},"visibility":{"restricted":{"parent":"0:256:1893","path":"::datetime"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SecondsFormat","id":"0:2597:1878","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2611:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:454:2193":{"id":"0:454:2193","crate_id":0,"name":"with_year","span":{"filename":"src/datetime/mod.rs","begin":[734,4],"end":[736,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["year",{"kind":"primitive","inner":"i32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4666:6013":{"id":"1:4666:6013","crate_id":1,"name":"Read","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4667:5940","1:4668:8246","1:4670:8247","1:4671:6044","1:4672:7374","1:4673:6273","1:4674:8248","1:4676:8249","1:4677:7896","1:4678:3493","1:4679:2467","1:4681:3494"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:405:681":{"id":"0:405:681","crate_id":0,"name":"from","span":{"filename":"src/datetime/mod.rs","begin":[420,4],"end":[422,5]},"visibility":"default","docs":"Convert this `DateTime<Utc>` instance into a `DateTime<Local>` instance.\n\nConversion is performed via [`DateTime::with_timezone`], accounting for the difference in timezones.","links":{"`DateTime::with_timezone`":"0:2621:1877"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["src",{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:3384:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10449:7223":{"id":"2:10449:7223","crate_id":2,"name":"Octal","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10450:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2512":{"id":"0:2512","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[497,18],"end":[497,35]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"weekday::ParseWeekdayError","name":"ParseWeekdayError","id":"0:3482:1908","glob":false}},"0:192:2195":{"id":"0:192:2195","crate_id":0,"name":"with_month0","span":{"filename":"src/date.rs","begin":[427,4],"end":[429,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["month0",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9407:7640-0:3052:1901":{"id":"a:2:9407:7640-0:3052:1901","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9407:7640","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IsoWeek","id":"0:3052:1901","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3281:220-0:2761:2702":{"id":"a:2:3281:220-0:2761:2702","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2761:2702","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1850:5791":{"id":"0:1850:5791","crate_id":0,"name":"offset_from_utc_date","span":{"filename":"src/offset/fixed.rs","begin":[119,4],"end":[121,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["_utc",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1215:2127":{"id":"0:1215:2127","crate_id":0,"name":"pred_opt","span":{"filename":"src/naive/date.rs","begin":[1030,4],"end":[1032,5]},"visibility":"public","docs":"Makes a new `NaiveDate` for the previous calendar date.\n\nReturns `None` when `self` is the first representable date.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nassert_eq!(NaiveDate::from_ymd(2015, 6, 3).pred_opt(),\n           Some(NaiveDate::from_ymd(2015, 6, 2)));\nassert_eq!(NaiveDate::MIN.pred_opt(), None);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3401:1542":{"id":"0:3401:1542","crate_id":0,"name":"0","span":{"filename":"src/offset/mod.rs","begin":[46,11],"end":[46,12]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"T"}},"0:3514:2808":{"id":"0:3514:2808","crate_id":0,"name":"August","span":{"filename":"src/month.rs","begin":[49,4],"end":[49,14]},"visibility":"default","docs":"August","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"b:2:2869-0:2761:2702":{"id":"b:2:2869-0:2761:2702","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2761:2702","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:2030"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:222":{"id":"0:222","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[482,0],"end":[489,1]},"visibility":{"restricted":{"parent":"0:61:1890","path":"::date"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:2374:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Add","id":"2:3337:2031","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Duration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:224:181","0:225:265"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3310:7473-0:3492:1880":{"id":"a:2:3310:7473-0:3492:1880","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:7473","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:3492:1880","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2703":{"id":"0:2703","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[97,9],"end":[97,14]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2659:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2704:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2838":{"id":"0:2838","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[336,23],"end":[336,32]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2831:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1214:2126":{"id":"0:1214:2126","crate_id":0,"name":"pred","span":{"filename":"src/naive/date.rs","begin":[1012,4],"end":[1014,5]},"visibility":"public","docs":"Makes a new `NaiveDate` for the previous calendar date.\n\nPanics when `self` is the first representable date.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nassert_eq!(NaiveDate::from_ymd(2015, 6, 3).pred(), NaiveDate::from_ymd(2015,  6,  2));\nassert_eq!(NaiveDate::from_ymd(2015, 6, 1).pred(), NaiveDate::from_ymd(2015,  5, 31));\nassert_eq!(NaiveDate::from_ymd(2015, 1, 1).pred(), NaiveDate::from_ymd(2014, 12, 31));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:809:3085":{"id":"0:809:3085","crate_id":0,"name":"to_fixed_offset","span":{"filename":"src/format/parsed.rs","begin":[615,4],"end":[617,5]},"visibility":"public","docs":"Returns a parsed fixed time zone offset out of given fields.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:632:1899","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3489":{"id":"0:3489","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[189,27],"end":[189,29]},"visibility":{"restricted":{"parent":"0:2490:1907","path":"::weekday"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3278:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:3482:1908","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"22:86:7274":{"id":"22:86:7274","crate_id":22,"name":"Average","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["22:87:7275","22:88:7276"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Integer","id":"22:109:7256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2873:2237":{"id":"0:2873:2237","crate_id":0,"name":"Parsed","span":{"filename":"src/format/parsed.rs","begin":[26,0],"end":[110,1]},"visibility":"public","docs":"Parsed parts of date and time. There are two classes of methods:\n\n- `set_*` methods try to set given field(s) while checking for the consistency.\n  It may or may not check for the range constraint immediately (for efficiency reasons).\n\n- `to_*` methods try to make a concrete date and time value out of set fields.\n  It fully checks any remaining out-of-range conditions and inconsistent/impossible fields.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":["0:2874:2158","0:2875:2939","0:2876:2941","0:2877:2945","0:2878:2950","0:2879:2952","0:2880:1909","0:2881:2836","0:2882:2838","0:2883:2959","0:2884:1907","0:2885:2190","0:2886:2159","0:2887:2964","0:2888:2966","0:2889:2477","0:2890:2478","0:2891:2479","0:2892:2309","0:2893:957"],"impls":["0:766","a:2:3310:7473-0:2873:2237","a:2:9408:7639-0:2873:2237","a:2:3269:211-0:2873:2237","a:2:9407:7640-0:2873:2237","a:2:3281:220-0:2873:2237","b:2:2869-0:2873:2237","b:2:4002-0:2873:2237","b:2:3198-0:2873:2237","b:2:2872-0:2873:2237","b:2:3208-0:2873:2237","b:2:3202-0:2873:2237","b:2:3213-0:2873:2237","b:5:787-0:2873:2237","0:2895","0:2897","0:2898","0:2900","0:2901","0:2903","0:2905"]}},"b:5:6420-0:3067:1887":{"id":"b:5:6420-0:3067:1887","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10447:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:6418:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:6422:1397"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3213-0:3052:1901":{"id":"b:2:3213-0:3052:1901","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IsoWeek","id":"0:3052:1901","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:374:2304":{"id":"0:374:2304","crate_id":0,"name":"date_naive","span":{"filename":"src/datetime/mod.rs","begin":[182,4],"end":[185,5]},"visibility":"public","docs":"Retrieves the Date without an associated timezone\n\n[`NaiveDate`] is a more well-defined type, and has more traits implemented on it,\nso should be preferred to [`Date`] any time you truly want to operate on Dates.\n\n```\nuse chrono::prelude::*;\n\nlet date: DateTime<Utc> = Utc.ymd(2020, 1, 1).and_hms(0, 0, 0);\nlet other: DateTime<FixedOffset> = FixedOffset::east(23).ymd(2020, 1, 1).and_hms(0, 0, 0);\nassert_eq!(date.date_naive(), other.date_naive());\n```","links":{"`NaiveDate`":"0:2941:1885","`Date`":"0:2590:1872"},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1252:266":{"id":"0:1252:266","crate_id":0,"name":"add_assign","span":{"filename":"src/naive/date.rs","begin":[1655,4],"end":[1657,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3098":{"id":"0:3098","crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[25,36],"end":[25,41]},"visibility":{"restricted":{"parent":"0:1795:5699","path":"::offset::fixed"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3099:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13608:37318":{"id":"2:13608:37318","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"encode_utf16\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncodeUtf16","id":"2:49883:7183","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1846:1888":{"id":"0:1846:1888","crate_id":0,"name":"Offset","span":{"filename":"src/offset/fixed.rs","begin":[106,4],"end":[106,30]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:2698:2651":{"id":"0:2698:2651","crate_id":0,"name":"Timestamp","span":{"filename":"src/format/mod.rs","begin":[143,4],"end":[143,13]},"visibility":"default","docs":"The number of non-leap seconds since the midnight UTC on January 1, 1970 (FW=1, PW=∞).\nFor formatting, it assumes UTC upon the absence of time zone offset.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:3281:220":{"id":"2:3281:220","crate_id":2,"name":"Sync","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3384:7091":{"id":"2:3384:7091","crate_id":2,"name":"RemAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3386:1103"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2502:660":{"id":"0:2502:660","crate_id":0,"name":"fmt","span":{"filename":"src/weekday.rs","begin":[142,4],"end":[152,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10400:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10389:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2670:2627":{"id":"0:2670:2627","crate_id":0,"name":"IsoYearMod100","span":{"filename":"src/format/mod.rs","begin":[112,4],"end":[112,17]},"visibility":"default","docs":"Year in the ISO week date, modulo 100 (FW=PW=2). Cannot be negative.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2657":{"id":"0:2657","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[74,37],"end":[74,42]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10440:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2641:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2658:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2476":{"id":"0:2476","crate_id":0,"name":null,"span":{"filename":"src/round.rs","begin":[280,0],"end":[294,1]},"visibility":{"restricted":{"parent":"0:2418:1904","path":"::round"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10447:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RoundingError","id":"0:3428:1906","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2477:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13601:3631":{"id":"2:13601:3631","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:15986:6923"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Chars","id":"2:49561:7134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1426:2192":{"id":"0:1426:2192","crate_id":0,"name":"iso_week","span":{"filename":"src/naive/datetime/mod.rs","begin":[903,4],"end":[905,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"IsoWeek","id":"0:3052:1901","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:529:2502":{"id":"0:529:2502","crate_id":0,"name":"from_str","span":{"filename":"src/datetime/mod.rs","begin":[929,4],"end":[931,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:632:1899","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:3384:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:220-0:2908:2041":{"id":"a:2:3281:220-0:2908:2041","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2908:2041","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3201:2536":{"id":"2:3201:2536","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:3175:135"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2765":{"id":"0:2765","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[253,16],"end":[253,21]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2761:2702","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2766:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2594":{"id":"0:2594","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[56,9],"end":[56,14]},"visibility":{"restricted":{"parent":"0:61:1890","path":"::date"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"TimeZone","id":"0:2374:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Tz"},"trait":{"name":"","id":"0:2374:1889","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:2596:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3213-0:2845:2736":{"id":"b:2:3213-0:2845:2736","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2845:2736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2612":{"id":"0:2612","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[52,16],"end":[52,20]},"visibility":{"restricted":{"parent":"0:256:1893","path":"::datetime"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SecondsFormat","id":"0:2597:1878","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2711":{"id":"0:2711","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[97,31],"end":[97,36]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10440:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2659:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2712:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:5837:7365":{"id":"5:5837:7365","crate_id":5,"name":"Join","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5839:181","5:5840:6128"],"generics":{"params":[{"name":"Separator","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:533:2502":{"id":"0:533:2502","crate_id":0,"name":"from_str","span":{"filename":"src/datetime/mod.rs","begin":[949,4],"end":[951,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:632:1899","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Local","id":"0:3377:1873","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:256:1893":{"id":"0:256:1893","crate_id":0,"name":"datetime","span":{"filename":"src/datetime/mod.rs","begin":[4,0],"end":[1154,1]},"visibility":"crate","docs":"ISO 8601 date and time with time zone.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:2597:1878","0:2621:1877","0:367:1896","0:368:1895"],"is_stripped":true}},"a:2:3269:211-0:2597:1878":{"id":"a:2:3269:211-0:2597:1878","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SecondsFormat","id":"0:2597:1878","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3198-0:614:2656":{"id":"b:2:3198-0:614:2656","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:614:2656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:2536"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13588:60379":{"id":"2:13588:60379","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:16003:6937"},"attrs":["#[stable(feature = \"str_as_mut_ptr\", since = \"1.36.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3560":{"id":"0:3560","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[193,50],"end":[193,60]},"visibility":{"restricted":{"parent":"0:2518:1909","path":"::month"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["le","ge","lt","gt"],"trait":{"name":"PartialOrd","id":"2:2967:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Months","id":"0:3543:1910","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Months","id":"0:3543:1910","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3561:997"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9408:7639-0:2873:2237":{"id":"a:2:9408:7639-0:2873:2237","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9408:7639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Parsed","id":"0:2873:2237","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:229":{"id":"0:229","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[498,0],"end":[505,1]},"visibility":{"restricted":{"parent":"0:61:1890","path":"::date"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:2374:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:3342:2033","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Duration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:231:181","0:232:1355"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3536":{"id":"0:3536","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[30,30],"end":[30,35]},"visibility":{"restricted":{"parent":"0:2518:1909","path":"::month"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:3492:1880","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3537:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2872-0:2873:2237":{"id":"b:2:2872-0:2873:2237","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:7071","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Parsed","id":"0:2873:2237","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:5915"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3198-0:2845:2736":{"id":"b:2:3198-0:2845:2736","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2845:2736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:2536"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1662:5426":{"id":"0:1662:5426","crate_id":0,"name":"from_num_seconds_from_midnight","span":{"filename":"src/naive/time/mod.rs","begin":[421,4],"end":[423,5]},"visibility":"public","docs":"Makes a new `NaiveTime` from the number of seconds since midnight and nanosecond.\n\nThe nanosecond part can exceed 1,000,000,000\nin order to represent the [leap second](#leap-second-handling).\n\nPanics on invalid number of seconds and/or nanosecond.\n\n# Example\n\n```\nuse chrono::{NaiveTime, Timelike};\n\nlet t = NaiveTime::from_num_seconds_from_midnight(86164, 12_345_678);\nassert_eq!(t.hour(), 23);\nassert_eq!(t.minute(), 56);\nassert_eq!(t.second(), 4);\nassert_eq!(t.nanosecond(), 12_345_678);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["secs",{"kind":"primitive","inner":"u32"}],["nano",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:787-0:3086:1883":{"id":"b:5:787-0:3086:1883","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:7921","5:790:7922","5:791:7923"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:180:1909":{"id":"0:180:1909","crate_id":0,"name":"month","span":{"filename":"src/date.rs","begin":[384,4],"end":[386,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2933":{"id":"0:2933","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[746,9],"end":[746,14]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10440:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10440:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2927:2039","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:2935:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3079":{"id":"0:3079","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[190,30],"end":[190,40]},"visibility":{"restricted":{"parent":"0:1586:1556","path":"::naive::time"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["le","ge","lt","gt"],"trait":{"name":"PartialOrd","id":"2:2967:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3080:997"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:4741:7393":{"id":"1:4741:7393","crate_id":1,"name":"Seek","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4742:62806","1:4743:44332","1:4744:62807","1:4745:62808"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1020":{"id":"0:1020","crate_id":0,"name":null,"span":{"filename":"src/format/strftime.rs","begin":[213,0],"end":[252,1]},"visibility":{"restricted":{"parent":"0:995:2597","path":"::format::strftime"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2908:2041","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:1022:920"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:471:2477":{"id":"0:471:2477","crate_id":0,"name":"minute","span":{"filename":"src/datetime/mod.rs","begin":[775,4],"end":[777,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:790:7922":{"id":"5:790:7922","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1661:2117":{"id":"0:1661:2117","crate_id":0,"name":"from_hms_nano_opt","span":{"filename":"src/naive/time/mod.rs","begin":[394,4],"end":[400,5]},"visibility":"public","docs":"Makes a new `NaiveTime` from hour, minute, second and nanosecond.\n\nThe nanosecond part can exceed 1,000,000,000\nin order to represent the [leap second](#leap-second-handling).\n\nReturns `None` on invalid hour, minute, second and/or nanosecond.\n\n# Example\n\n```\nuse chrono::NaiveTime;\n\nlet from_hmsn_opt = NaiveTime::from_hms_nano_opt;\n\nassert!(from_hmsn_opt(0, 0, 0, 0).is_some());\nassert!(from_hmsn_opt(23, 59, 59, 999_999_999).is_some());\nassert!(from_hmsn_opt(23, 59, 59, 1_999_999_999).is_some()); // a leap second after 23:59:59\nassert!(from_hmsn_opt(24, 0, 0, 0).is_none());\nassert!(from_hmsn_opt(23, 60, 0, 0).is_none());\nassert!(from_hmsn_opt(23, 59, 60, 0).is_none());\nassert!(from_hmsn_opt(23, 59, 59, 2_000_000_000).is_none());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["hour",{"kind":"primitive","inner":"u32"}],["min",{"kind":"primitive","inner":"u32"}],["sec",{"kind":"primitive","inner":"u32"}],["nano",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2507":{"id":"0:2507","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[197,0],"end":[201,1]},"visibility":{"restricted":{"parent":"0:2490:1907","path":"::weekday"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10447:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:3482:1908","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2508:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1871:1355":{"id":"0:1871:1355","crate_id":0,"name":"sub","span":{"filename":"src/offset/fixed.rs","begin":[199,4],"end":[201,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:403:681":{"id":"0:403:681","crate_id":0,"name":"from","span":{"filename":"src/datetime/mod.rs","begin":[409,4],"end":[411,5]},"visibility":"default","docs":"Convert this `DateTime<Utc>` instance into a `DateTime<FixedOffset>` instance.\n\nConversion is done via [`DateTime::with_timezone`]. Note that the converted value returned by\nthis will be created with a fixed timezone offset of 0.","links":{"`DateTime::with_timezone`":"0:2621:1877"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["src",{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:3384:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3381:408":{"id":"0:3381:408","crate_id":0,"name":"clone","span":{"filename":"src/offset/local/mod.rs","begin":[53,15],"end":[53,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Local","id":"0:3377:1873","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2684:2638":{"id":"0:2684:2638","crate_id":0,"name":"WeekdayFromMon","span":{"filename":"src/format/mod.rs","begin":[126,4],"end":[126,18]},"visibility":"default","docs":"Day of the week, where Monday = 1 and Sunday = 7 (FW=PW=1).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"b:5:787-0:2621:1877":{"id":"b:5:787-0:2621:1877","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["5:789:7921","5:790:7922","5:791:7923"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2335":{"id":"0:2335","crate_id":0,"name":null,"span":{"filename":"src/offset/utc.rs","begin":[47,0],"end":[76,1]},"visibility":{"restricted":{"parent":"0:2297:5700","path":"::offset::utc"}},"docs":null,"links":{},"attrs":["#[cfg(feature = \"clock\")]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:3384:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2336:2211","0:2337:5866"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2806:2444":{"id":"0:2806:2444","crate_id":0,"name":"Numeric","span":{"filename":"src/format/mod.rs","begin":[292,4],"end":[292,25]},"visibility":"default","docs":"Numeric item. Can be optionally padded to the maximal length (if any) when formatting;\nthe parser simply ignores any padded whitespace and zeroes.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2659:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2641:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]}},"0:705:2399":{"id":"0:705:2399","crate_id":0,"name":"parsed","span":{"filename":"src/format/parsed.rs","begin":[4,0],"end":[1260,1]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":"A collection of parsed date and time items.\nThey can be constructed incrementally while being checked for consistency.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:2873:2237"],"is_stripped":true}},"0:3531:604":{"id":"0:3531:604","crate_id":0,"name":"eq","span":{"filename":"src/month.rs","begin":[30,9],"end":[30,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Month","id":"0:3492:1880","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9407:7640-0:2761:2702":{"id":"a:2:9407:7640-0:2761:2702","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9407:7640","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2761:2702","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3552":{"id":"0:3552","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[193,29],"end":[193,31]},"visibility":{"restricted":{"parent":"0:2518:1909","path":"::month"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Months","id":"0:3543:1910","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1402:2346":{"id":"0:1402:2346","crate_id":0,"name":"timestamp_subsec_micros","span":{"filename":"src/naive/datetime/mod.rs","begin":[434,4],"end":[436,5]},"visibility":"public","docs":"Returns the number of microseconds since the last whole non-leap second.\n\nThe return value ranges from 0 to 999,999,\nor for [leap seconds](./struct.NaiveTime.html#leap-second-handling), to 1,999,999.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet dt = NaiveDate::from_ymd(2016, 7, 8).and_hms_nano(9, 10, 11, 123_456_789);\nassert_eq!(dt.timestamp_subsec_micros(), 123_456);\n\nlet dt = NaiveDate::from_ymd(2015, 7, 1).and_hms_nano(8, 59, 59, 1_234_567_890);\nassert_eq!(dt.timestamp_subsec_micros(), 1_234_567);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:9407:7640":{"id":"2:9407:7640","crate_id":2,"name":"UnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3202-0:2927:2039":{"id":"b:2:3202-0:2927:2039","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2927:2039","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:23624:8825":{"id":"2:23624:8825","crate_id":2,"name":"SimdPartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23625:1270","2:23626:1269","2:23627:1267","2:23628:1266"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"SimdPartialEq","id":"2:23036:8824","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2470:6588":{"id":"0:2470:6588","crate_id":0,"name":"duration_round","span":{"filename":"src/round.rs","begin":[163,4],"end":[165,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["duration",{"kind":"resolved_path","inner":{"name":"Duration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47753:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:2458:1905","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:210":{"id":"0:210","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[462,0],"end":[462,37]},"visibility":{"restricted":{"parent":"0:61:1890","path":"::date"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:2374:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2752:408":{"id":"0:2752:408","crate_id":0,"name":"clone","span":{"filename":"src/format/mod.rs","begin":[181,9],"end":[181,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2713:2238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3092":{"id":"0:3092","crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[25,20],"end":[25,22]},"visibility":{"restricted":{"parent":"0:1795:5699","path":"::offset::fixed"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2642:174":{"id":"0:2642:174","crate_id":0,"name":"None","span":{"filename":"src/format/mod.rs","begin":[77,4],"end":[77,8]},"visibility":"default","docs":"No padding.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:618":{"id":"0:618","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[163,0],"end":[167,1]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:614:2656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:614:2656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:619:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:5:787-0:3384:1884":{"id":"b:5:787-0:3384:1884","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:3384:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:7921","5:790:7922","5:791:7923"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"23:760:7323":{"id":"23:760:7323","crate_id":23,"name":"WrappingShl","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:761:66403"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Shl","id":"2:3411:7096","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:768:2980":{"id":"0:768:2980","crate_id":0,"name":"set_year","span":{"filename":"src/format/parsed.rs","begin":[136,4],"end":[138,5]},"visibility":"public","docs":"Tries to set the [`year`](#structfield.year) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["value",{"kind":"primitive","inner":"i64"}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:632:1899","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1431:2195":{"id":"0:1431:2195","crate_id":0,"name":"with_month0","span":{"filename":"src/naive/datetime/mod.rs","begin":[965,4],"end":[967,5]},"visibility":"default","docs":"Makes a new `NaiveDateTime` with the month number (starting from 0) changed.\n\nReturns `None` when the resulting `NaiveDateTime` would be invalid.\n\nSee also the [`NaiveDate::with_month0`] method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Datelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 30).and_hms(12, 34, 56);\nassert_eq!(dt.with_month0(9), Some(NaiveDate::from_ymd(2015, 10, 30).and_hms(12, 34, 56)));\nassert_eq!(dt.with_month0(12), None); // no month 13\nassert_eq!(dt.with_month0(1), None); // no February 30\n```","links":{"`NaiveDate::with_month0`":"0:2941:1885"},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["month0",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2386:2338":{"id":"0:2386:2338","crate_id":0,"name":"timestamp_nanos","span":{"filename":"src/offset/mod.rs","begin":[408,4],"end":[415,5]},"visibility":"default","docs":"Makes a new `DateTime` from the number of non-leap nanoseconds\nsince January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\").\n\nUnlike [`timestamp_millis`](#method.timestamp_millis), this never\npanics.\n\n# Example\n\n```\nuse chrono::{Utc, TimeZone};\n\nassert_eq!(Utc.timestamp_nanos(1431648000000000).timestamp(), 1431648);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["nanos",{"kind":"primitive","inner":"i64"}]],"output":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1657:5402":{"id":"0:1657:5402","crate_id":0,"name":"from_hms_micro","span":{"filename":"src/naive/time/mod.rs","begin":[317,4],"end":[319,5]},"visibility":"public","docs":"Makes a new `NaiveTime` from hour, minute, second and microsecond.\n\nThe microsecond part can exceed 1,000,000\nin order to represent the [leap second](#leap-second-handling).\n\nPanics on invalid hour, minute, second and/or microsecond.\n\n# Example\n\n```\nuse chrono::{NaiveTime, Timelike};\n\nlet t = NaiveTime::from_hms_micro(23, 56, 4, 12_345);\nassert_eq!(t.hour(), 23);\nassert_eq!(t.minute(), 56);\nassert_eq!(t.second(), 4);\nassert_eq!(t.nanosecond(), 12_345_000);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["hour",{"kind":"primitive","inner":"u32"}],["min",{"kind":"primitive","inner":"u32"}],["sec",{"kind":"primitive","inner":"u32"}],["micro",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:437:2167":{"id":"0:437:2167","crate_id":0,"name":"format_with_items","span":{"filename":"src/datetime/mod.rs","begin":[630,4],"end":[637,5]},"visibility":"public","docs":"Formats the combined date and time with the specified formatting items.","links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["items",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2927:2039","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8748:157","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"B"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2792:2040","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9407:7640-0:2873:2237":{"id":"a:2:9407:7640-0:2873:2237","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9407:7640","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Parsed","id":"0:2873:2237","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9407:7640-0:2713:2238":{"id":"a:2:9407:7640-0:2713:2238","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9407:7640","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2713:2238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:181:2188":{"id":"0:181:2188","crate_id":0,"name":"month0","span":{"filename":"src/date.rs","begin":[388,4],"end":[390,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2362":{"id":"0:2362","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[87,0],"end":[178,1]},"visibility":{"restricted":{"parent":"0:1758:957","path":"::offset"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:2374:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3395:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:2364:2078","0:2365:2090","0:2366:2099","0:2367:2107","0:2368:2115"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:161:2080":{"id":"0:161:2080","crate_id":0,"name":"naive_local","span":{"filename":"src/date.rs","begin":[279,4],"end":[281,5]},"visibility":"public","docs":"Returns a view to the naive local date.\n\nThis is technically the same as [`naive_utc`](#method.naive_utc)\nbecause the offset is restricted to never exceed one day,\nbut provided for the consistency.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"23:722:7319":{"id":"23:722:7319","crate_id":23,"name":"SaturatingSub","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:723:1228"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sub","id":"2:3342:2033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:5757:8534":{"id":"1:5757:8534","crate_id":1,"name":"OpenOptionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5758:11103","1:5759:12561"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:5:787-0:3067:1887":{"id":"b:5:787-0:3067:1887","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:7921","5:790:7922","5:791:7923"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2604:2253":{"id":"0:2604:2253","crate_id":0,"name":"Nanos","span":{"filename":"src/datetime/mod.rs","begin":[67,4],"end":[67,9]},"visibility":"default","docs":"Use fixed 9 subsecond digits. This corresponds to\n[Fixed::Nanosecond9](format/enum.Fixed.html#variant.Nanosecond9).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:926:2502":{"id":"0:926:2502","crate_id":0,"name":"from_str","span":{"filename":"src/format/parse.rs","begin":[481,4],"end":[518,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:632:1899","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3064":{"id":"0:3064","crate_id":0,"name":null,"span":{"filename":"src/naive/isoweek.rs","begin":[19,41],"end":[19,45]},"visibility":{"restricted":{"parent":"0:1565:2959","path":"::naive::isoweek"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IsoWeek","id":"0:3052:1901","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:2866:7071":{"id":"2:2866:7071","crate_id":2,"name":"BorrowMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2868:5915"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Borrowed"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:519:181":{"id":"0:519:181","crate_id":0,"name":"Output","span":{"filename":"src/datetime/mod.rs","begin":[892,4],"end":[892,30]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Duration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:2527":{"id":"0:2527","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[155,0],"end":[190,1]},"visibility":{"restricted":{"parent":"0:2518:1909","path":"::month"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["from_u16","from_i32","from_isize","from_usize","from_f64","from_u32","from_i128","from_i8","from_u128","from_f32","from_u8","from_i16"],"trait":{"name":"FromPrimitive","id":"23:333:5076","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:3492:1880","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2528:6718","0:2529:6717","0:2530:5163"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3208-0:3446:1882":{"id":"b:2:3208-0:3446:1882","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:3446:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1036":{"id":"0:1036","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[764,0],"end":[824,1]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8748:157","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"B"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2792:2040","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2927:2039","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:1040:920","0:1041:2172"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2805:1542":{"id":"0:2805:1542","crate_id":0,"name":"0","span":{"filename":"src/format/mod.rs","begin":[289,15],"end":[289,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:2593","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}},"0:462:2197":{"id":"0:462:2197","crate_id":0,"name":"with_day0","span":{"filename":"src/datetime/mod.rs","begin":[754,4],"end":[756,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["day0",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3198-0:2873:2237":{"id":"b:2:3198-0:2873:2237","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Parsed","id":"0:2873:2237","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:2536"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"23:403:58050":{"id":"23:403:58050","crate_id":23,"name":"FloatCore","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:404:66176","23:405:66177","23:406:66178","23:407:66179","23:408:4508","23:409:66180","23:410:66181","23:411:4507","23:412:63636","23:413:63637","23:414:63638","23:415:63640","23:416:66183","23:417:62712","23:418:2214","23:419:1904","23:420:43927","23:421:62711","23:422:4446","23:423:7329","23:424:63634","23:425:63635","23:426:2088","23:427:3100","23:428:63631","23:429:66184","23:430:63632","23:431:63633","23:432:66182"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Num","id":"23:844:7268","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"NumCast","id":"23:358:7299","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Neg","id":"2:3364:7087","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2967:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:411:681":{"id":"0:411:681","crate_id":0,"name":"from","span":{"filename":"src/datetime/mod.rs","begin":[455,4],"end":[457,5]},"visibility":"default","docs":"Convert this `DateTime<Local>` instance into a `DateTime<Utc>` instance.\n\nConversion is performed via [`DateTime::with_timezone`], accounting for the difference in\ntimezones.","links":{"`DateTime::with_timezone`":"0:2621:1877"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["src",{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Local","id":"0:3377:1873","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3198-0:3384:1884":{"id":"b:2:3198-0:3384:1884","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:3384:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:2536"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2802:1542":{"id":"0:2802:1542","crate_id":0,"name":"0","span":{"filename":"src/format/mod.rs","begin":[286,10],"end":[286,17]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}},"0:3090:604":{"id":"0:3090:604","crate_id":0,"name":"eq","span":{"filename":"src/offset/fixed.rs","begin":[25,9],"end":[25,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2953:997":{"id":"0:2953:997","crate_id":0,"name":"partial_cmp","span":{"filename":"src/naive/date.rs","begin":[166,30],"end":[166,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::option::Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Ordering","id":"2:37761:178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1752":{"id":"0:1752","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[484,51],"end":[484,60]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"naive::NaiveTime","name":"NaiveTime","id":"0:3067:1887","glob":false}},"0:3529":{"id":"0:3529","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[30,9],"end":[30,18]},"visibility":{"restricted":{"parent":"0:2518:1909","path":"::month"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:3492:1880","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2872-0:3377:1873":{"id":"b:2:2872-0:3377:1873","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:7071","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Local","id":"0:3377:1873","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:5915"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9408:7639-0:2831:1898":{"id":"a:2:9408:7639-0:2831:1898","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9408:7639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2831:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:143:2113":{"id":"0:143:2113","crate_id":0,"name":"and_hms_nano","span":{"filename":"src/date.rs","begin":[168,4],"end":[170,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date, hour, minute, second and nanosecond.\nThe nanosecond part can exceed 1,000,000,000 in order to represent the leap second.\nThe offset in the current date is preserved.\n\nPanics on invalid hour, minute, second and/or nanosecond.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["hour",{"kind":"primitive","inner":"u32"}],["min",{"kind":"primitive","inner":"u32"}],["sec",{"kind":"primitive","inner":"u32"}],["nano",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:622:660":{"id":"0:622:660","crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[172,4],"end":[174,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10400:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10389:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2619":{"id":"0:2619","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[52,33],"end":[52,42]},"visibility":{"restricted":{"parent":"0:256:1893","path":"::datetime"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"SecondsFormat","id":"0:2597:1878","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SecondsFormat","id":"0:2597:1878","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2620:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2771":{"id":"0:2771","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[253,34],"end":[253,36]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2761:2702","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:10390:2831":{"id":"2:10390:2831","crate_id":2,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10391:1533","2:10392:8085","2:10394:6720"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1664:2419":{"id":"0:1664:2419","crate_id":0,"name":"parse_from_str","span":{"filename":"src/naive/time/mod.rs","begin":[514,4],"end":[518,5]},"visibility":"public","docs":"Parses a string with the specified format string and returns a new `NaiveTime`.\nSee the [`format::strftime` module](../format/strftime/index.html)\non the supported escape sequences.\n\n# Example\n\n```\nuse chrono::NaiveTime;\n\nlet parse_from_str = NaiveTime::parse_from_str;\n\nassert_eq!(parse_from_str(\"23:56:04\", \"%H:%M:%S\"),\n           Ok(NaiveTime::from_hms(23, 56, 4)));\nassert_eq!(parse_from_str(\"pm012345.6789\", \"%p%I%M%S%.f\"),\n           Ok(NaiveTime::from_hms_micro(13, 23, 45, 678_900)));\n```\n\nDate and offset is ignored for the purpose of parsing.\n\n```\n# use chrono::NaiveTime;\n# let parse_from_str = NaiveTime::parse_from_str;\nassert_eq!(parse_from_str(\"2014-5-17T12:34:56+09:30\", \"%Y-%m-%dT%H:%M:%S%z\"),\n           Ok(NaiveTime::from_hms(12, 34, 56)));\n```\n\n[Leap seconds](#leap-second-handling) are correctly handled by\ntreating any time of the form `hh:mm:60` as a leap second.\n(This equally applies to the formatting, so the round trip is possible.)\n\n```\n# use chrono::NaiveTime;\n# let parse_from_str = NaiveTime::parse_from_str;\nassert_eq!(parse_from_str(\"08:59:60.123\", \"%H:%M:%S%.f\"),\n           Ok(NaiveTime::from_hms_milli(8, 59, 59, 1_123)));\n```\n\nMissing seconds are assumed to be zero,\nbut out-of-bound times or insufficient fields are errors otherwise.\n\n```\n# use chrono::NaiveTime;\n# let parse_from_str = NaiveTime::parse_from_str;\nassert_eq!(parse_from_str(\"7:15\", \"%H:%M\"),\n           Ok(NaiveTime::from_hms(7, 15, 0)));\n\nassert!(parse_from_str(\"04m33s\", \"%Mm%Ss\").is_err());\nassert!(parse_from_str(\"12\", \"%H\").is_err());\nassert!(parse_from_str(\"17:60\", \"%H:%M\").is_err());\nassert!(parse_from_str(\"24:00:00\", \"%H:%M:%S\").is_err());\n```\n\nAll parsed fields should be consistent to each other, otherwise it's an error.\nHere `%H` is for 24-hour clocks, unlike `%I`,\nand thus can be independently determined without AM/PM.\n\n```\n# use chrono::NaiveTime;\n# let parse_from_str = NaiveTime::parse_from_str;\nassert!(parse_from_str(\"13:07 AM\", \"%H:%M %p\").is_err());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["fmt",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:632:1899","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:220-0:2792:2040":{"id":"a:2:3281:220-0:2792:2040","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2792:2040","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3440:7102":{"id":"2:3440:7102","crate_id":2,"name":"ShrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3442:1237"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1415:2160":{"id":"0:1415:2160","crate_id":0,"name":"MIN","span":{"filename":"src/naive/datetime/mod.rs","begin":[748,4],"end":[748,78]},"visibility":"public","docs":"The minimum possible `NaiveDateTime`.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"0:409:681":{"id":"0:409:681","crate_id":0,"name":"from","span":{"filename":"src/datetime/mod.rs","begin":[443,4],"end":[445,5]},"visibility":"default","docs":"Convert this `DateTime<FixedOffset>` instance into a `DateTime<Local>` instance.\n\nConversion is performed via [`DateTime::with_timezone`]. Returns the equivalent value in local\ntime.","links":{"`DateTime::with_timezone`":"0:2621:1877"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["src",{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3070":{"id":"0:3070","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[190,9],"end":[190,18]},"visibility":{"restricted":{"parent":"0:1586:1556","path":"::naive::time"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"23:702:58132":{"id":"23:702:58132","crate_id":23,"name":"OverflowingMul","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:703:66401"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Mul","id":"2:3347:7086","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2347":{"id":"0:2347","crate_id":0,"name":null,"span":{"filename":"src/offset/utc.rs","begin":[106,0],"end":[110,1]},"visibility":{"restricted":{"parent":"0:2297:5700","path":"::offset::utc"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10440:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:3384:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2348:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1723":{"id":"0:1723","crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[14,53],"end":[14,61]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"self::date::MIN_DATE","name":"MIN_DATE","id":"0:1175:1892","glob":false}},"0:1700":{"id":"0:1700","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[1187,0],"end":[1194,1]},"visibility":{"restricted":{"parent":"0:1586:1556","path":"::naive::time"}},"docs":"Subtracts another `NaiveTime` from the current time.\nReturns a `Duration` within +/- 1 day.\nThis does not overflow or underflow at all.\n\nAs a part of Chrono's [leap second handling](#leap-second-handling),\nthe subtraction assumes that **there is no leap second ever**,\nexcept when any of the `NaiveTime`s themselves represents a leap second\nin which case the assumption becomes that\n**there are exactly one (or two) leap second(s) ever**.\n\nThe implementation is a wrapper around\n[`NaiveTime::signed_duration_since`](#method.signed_duration_since).\n\n# Example\n\n```\nuse chrono::{Duration, NaiveTime};\n\nlet from_hmsm = NaiveTime::from_hms_milli;\n\nassert_eq!(from_hmsm(3, 5, 7, 900) - from_hmsm(3, 5, 7, 900), Duration::zero());\nassert_eq!(from_hmsm(3, 5, 7, 900) - from_hmsm(3, 5, 7, 875), Duration::milliseconds(25));\nassert_eq!(from_hmsm(3, 5, 7, 900) - from_hmsm(3, 5, 6, 925), Duration::milliseconds(975));\nassert_eq!(from_hmsm(3, 5, 7, 900) - from_hmsm(3, 5, 0, 900), Duration::seconds(7));\nassert_eq!(from_hmsm(3, 5, 7, 900) - from_hmsm(3, 0, 7, 900), Duration::seconds(5 * 60));\nassert_eq!(from_hmsm(3, 5, 7, 900) - from_hmsm(0, 5, 7, 900), Duration::seconds(3 * 3600));\nassert_eq!(from_hmsm(3, 5, 7, 900) - from_hmsm(4, 5, 7, 900), Duration::seconds(-3600));\nassert_eq!(from_hmsm(3, 5, 7, 900) - from_hmsm(2, 4, 6, 800),\n           Duration::seconds(3600 + 60 + 1) + Duration::milliseconds(100));\n```\n\nLeap seconds are handled, but the subtraction assumes that\nthere were no other leap seconds happened.\n\n```\n# use chrono::{Duration, NaiveTime};\n# let from_hmsm = NaiveTime::from_hms_milli;\nassert_eq!(from_hmsm(3, 0, 59, 1_000) - from_hmsm(3, 0, 59, 0), Duration::seconds(1));\nassert_eq!(from_hmsm(3, 0, 59, 1_500) - from_hmsm(3, 0, 59, 0),\n           Duration::milliseconds(1500));\nassert_eq!(from_hmsm(3, 0, 59, 1_000) - from_hmsm(3, 0, 0, 0), Duration::seconds(60));\nassert_eq!(from_hmsm(3, 0, 0, 0) - from_hmsm(2, 59, 59, 1_000), Duration::seconds(1));\nassert_eq!(from_hmsm(3, 0, 59, 1_000) - from_hmsm(2, 59, 59, 1_000),\n           Duration::seconds(61));\n```","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:3342:2033","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1701:181","0:1702:1355"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2581:2483":{"id":"0:2581:2483","crate_id":0,"name":"with_nanosecond","span":{"filename":"src/traits.rs","begin":[171,4],"end":[171,57]},"visibility":"default","docs":"Makes a new value with nanoseconds since the whole non-leap second changed.\n\nReturns `None` when the resulting value would be invalid.\nAs with the [`nanosecond`](#tymethod.nanosecond) method,\nthe input range can exceed 1,000,000,000 for leap seconds.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["nano",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2555:6851":{"id":"0:2555:6851","crate_id":0,"name":"year_ce","span":{"filename":"src/traits.rs","begin":[11,4],"end":[18,5]},"visibility":"default","docs":"Returns the absolute year number starting from 1 with a boolean flag,\nwhich is false when the year predates the epoch (BCE/BC) and true otherwise (CE/AD).","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"bool"},{"kind":"primitive","inner":"u32"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:531":{"id":"0:531","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[946,0],"end":[952,1]},"visibility":{"restricted":{"parent":"0:256:1893","path":"::datetime"}},"docs":"Accepts a relaxed form of RFC3339.\nA space or a 'T' are acepted as the separator between the date and time\nparts. Additional spaces are allowed between each component.\n\nAll of these examples are equivalent:\n```\n# use chrono::{DateTime, Local};\n\"2012-12-12T12:12:12Z\".parse::<DateTime<Local>>();\n\"2012-12-12 12:12:12Z\".parse::<DateTime<Local>>();\n\"2012-  12-12T12:  12:12Z\".parse::<DateTime<Local>>();\n```","links":{},"attrs":["#[cfg(feature = \"clock\")]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:13141:2501","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Local","id":"0:3377:1873","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:532:126","0:533:2502"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:4002-0:3492:1880":{"id":"b:2:4002-0:3492:1880","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:3492:1880","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1246:2198":{"id":"0:1246:2198","crate_id":0,"name":"with_ordinal","span":{"filename":"src/naive/date.rs","begin":[1593,4],"end":[1595,5]},"visibility":"default","docs":"Makes a new `NaiveDate` with the day of year (starting from 1) changed.\n\nReturns `None` when the resulting `NaiveDate` would be invalid.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(NaiveDate::from_ymd(2015, 1, 1).with_ordinal(60),\n           Some(NaiveDate::from_ymd(2015, 3, 1)));\nassert_eq!(NaiveDate::from_ymd(2015, 1, 1).with_ordinal(366),\n           None); // 2015 had only 365 days\n\nassert_eq!(NaiveDate::from_ymd(2016, 1, 1).with_ordinal(60),\n           Some(NaiveDate::from_ymd(2016, 2, 29)));\nassert_eq!(NaiveDate::from_ymd(2016, 1, 1).with_ordinal(366),\n           Some(NaiveDate::from_ymd(2016, 12, 31)));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["ordinal",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3428:1906":{"id":"0:3428:1906","crate_id":0,"name":"RoundingError","span":{"filename":"src/round.rs","begin":[242,0],"end":[278,1]},"visibility":"public","docs":"An error from rounding by `Duration`\n\nSee: [`DurationRound`]","links":{"`DurationRound`":"0:2458:1905"},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:3429:6600","0:3431:6601","0:3433:6598"],"impls":["a:2:3310:7473-0:3428:1906","a:2:9408:7639-0:3428:1906","a:2:3269:211-0:3428:1906","a:2:9407:7640-0:3428:1906","a:2:3281:220-0:3428:1906","b:2:2869-0:3428:1906","b:2:4002-0:3428:1906","b:2:3198-0:3428:1906","b:2:2872-0:3428:1906","b:2:3208-0:3428:1906","b:2:3202-0:3428:1906","b:2:3213-0:3428:1906","b:5:787-0:3428:1906","b:5:6420-0:3428:1906","0:3435","0:3437","0:3439","0:3440","0:3442","0:3443","0:3445","0:2476","0:2478"]}},"0:2287:5791":{"id":"0:2287:5791","crate_id":0,"name":"offset_from_utc_date","span":{"filename":"src/offset/local/mod.rs","begin":[105,4],"end":[107,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["utc",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:375:1556":{"id":"0:375:1556","crate_id":0,"name":"time","span":{"filename":"src/datetime/mod.rs","begin":[190,4],"end":[192,5]},"visibility":"public","docs":"Retrieves a time component.\nUnlike `date`, this is not associated to the time zone.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3004:604":{"id":"0:3004:604","crate_id":0,"name":"eq","span":{"filename":"src/naive/datetime/mod.rs","begin":[74,9],"end":[74,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3496:2803":{"id":"0:3496:2803","crate_id":0,"name":"February","span":{"filename":"src/month.rs","begin":[37,4],"end":[37,16]},"visibility":"default","docs":"February","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:3003":{"id":"0:3003","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[74,9],"end":[74,18]},"visibility":{"restricted":{"parent":"0:1291:1893","path":"::naive::datetime"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3004:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3472":{"id":"0:3472","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[11,20],"end":[11,22]},"visibility":{"restricted":{"parent":"0:2490:1907","path":"::weekday"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:3446:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1233:1909":{"id":"0:1233:1909","crate_id":0,"name":"month","span":{"filename":"src/naive/date.rs","begin":[1309,4],"end":[1311,5]},"visibility":"default","docs":"Returns the month number starting from 1.\n\nThe return value ranges from 1 to 12.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(NaiveDate::from_ymd(2015, 9, 8).month(), 9);\nassert_eq!(NaiveDate::from_ymd(-308, 3, 14).month(), 3);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2501":{"id":"0:2501","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[141,0],"end":[153,1]},"visibility":{"restricted":{"parent":"0:2490:1907","path":"::weekday"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10447:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:3446:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2502:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2364:2078":{"id":"0:2364:2078","crate_id":0,"name":"and_time","span":{"filename":"src/offset/mod.rs","begin":[93,4],"end":[100,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date and given `NaiveTime`.\nThe offset in the current date is preserved.\n\nPropagates any error. Ambiguous result would be discarded.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["time",{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3395:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1245:2197":{"id":"0:1245:2197","crate_id":0,"name":"with_day0","span":{"filename":"src/naive/date.rs","begin":[1569,4],"end":[1571,5]},"visibility":"default","docs":"Makes a new `NaiveDate` with the day of month (starting from 0) changed.\n\nReturns `None` when the resulting `NaiveDate` would be invalid.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(NaiveDate::from_ymd(2015, 9, 8).with_day0(29),\n           Some(NaiveDate::from_ymd(2015, 9, 30)));\nassert_eq!(NaiveDate::from_ymd(2015, 9, 8).with_day0(30),\n           None); // no September 31\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["day0",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3310:7473-0:3377:1873":{"id":"a:2:3310:7473-0:3377:1873","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:7473","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Local","id":"0:3377:1873","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2495:2120":{"id":"0:2495:2120","crate_id":0,"name":"succ","span":{"filename":"src/weekday.rs","begin":[38,4],"end":[48,5]},"visibility":"public","docs":"The next day in the week.\n\n`w`:        | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun`\n----------- | ----- | ----- | ----- | ----- | ----- | ----- | -----\n`w.succ()`: | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun` | `Mon`","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:3446:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9407:7640-0:3086:1883":{"id":"a:2:9407:7640-0:3086:1883","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9407:7640","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:4002-0:2713:2238":{"id":"b:2:4002-0:2713:2238","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2713:2238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2889:2477":{"id":"0:2889:2477","crate_id":0,"name":"minute","span":{"filename":"src/format/parsed.rs","begin":[92,4],"end":[92,27]},"visibility":"public","docs":"Minute number (0--59).","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u32"}}],"bindings":[]}}}}},"b:2:2869-0:2908:2041":{"id":"b:2:2869-0:2908:2041","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2908:2041","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2871:2030"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13221:7162":{"id":"2:13221:7162","crate_id":2,"name":"Searcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:13223:8870","2:13224:922","2:13225:63260","2:13226:63261"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1250:265":{"id":"0:1250:265","crate_id":0,"name":"add","span":{"filename":"src/naive/date.rs","begin":[1648,4],"end":[1650,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:783:222":{"id":"5:783:222","crate_id":5,"name":"ToOwned","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:784:7921","5:785:7922","5:786:7923"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1852":{"id":"0:1852","crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[127,0],"end":[131,1]},"visibility":{"restricted":{"parent":"0:1795:5699","path":"::offset::fixed"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Offset","id":"0:2372:1888","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1853:2289"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3734:137":{"id":"2:3734:137","crate_id":2,"name":"FromResidual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3736:687"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Try","id":"2:3729:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:158:2147":{"id":"0:158:2147","crate_id":0,"name":"signed_duration_since","span":{"filename":"src/date.rs","begin":[263,4],"end":[265,5]},"visibility":"public","docs":"Subtracts another `Date` from the current date.\nReturns a `Duration` of integral numbers.\n\nThis does not overflow or underflow at all,\nas all possible output fits in the range of `Duration`.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz2"}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Tz2","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:2374:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2652":{"id":"0:2652","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[74,22],"end":[74,31]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2641:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2641:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2653:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9408:7639-0:2621:1877":{"id":"a:2:9408:7639-0:2621:1877","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Tz"},"trait":{"name":"TimeZone","id":"0:2374:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9408:7639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9408:7639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1855:660":{"id":"0:1855:660","crate_id":0,"name":"fmt","span":{"filename":"src/offset/fixed.rs","begin":[134,4],"end":[144,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10400:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10389:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23296:8922":{"id":"2:23296:8922","crate_id":2,"name":"MaskElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"SimdElement","id":"2:23933:8823","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:23287:8515","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2418:1904":{"id":"0:2418:1904","crate_id":0,"name":"round","span":{"filename":"src/round.rs","begin":[4,0],"end":[625,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:2450:1876","0:2458:1905","0:3428:1906"],"is_stripped":true}},"0:810:2400":{"id":"0:810:2400","crate_id":0,"name":"to_datetime","span":{"filename":"src/format/parsed.rs","begin":[625,4],"end":[640,5]},"visibility":"public","docs":"Returns a parsed timezone-aware date and time out of given fields.\n\nThis method is able to determine the combined date and time\nfrom date and time fields or a single [`timestamp`](#structfield.timestamp) field,\nplus a time zone offset.\nEither way those fields have to be consistent to each other.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:632:1899","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2945:604":{"id":"0:2945:604","crate_id":0,"name":"eq","span":{"filename":"src/naive/date.rs","begin":[166,9],"end":[166,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:150:2127":{"id":"0:150:2127","crate_id":0,"name":"pred_opt","span":{"filename":"src/date.rs","begin":[216,4],"end":[218,5]},"visibility":"public","docs":"Makes a new `Date` for the prior date.\n\nReturns `None` when `self` is the first representable date.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1388":{"id":"0:1388","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[81,0],"end":[751,1]},"visibility":{"restricted":{"parent":"0:1291:1893","path":"::naive::datetime"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1389:920","0:1390:4651","0:1391:3082","0:1393:2419","0:1394:1890","0:1395:1556","0:1396:2309","0:1398:2321","0:1399:2330","0:1400:2338","0:1401:2342","0:1402:2346","0:1403:2350","0:1404:2140","0:1405:2142","0:1406:2147","0:1407:2167","0:1411:671","0:1413:4865","0:1415:2160","0:1416:2161"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1878:181":{"id":"0:1878:181","crate_id":0,"name":"Output","span":{"filename":"src/offset/fixed.rs","begin":[214,4],"end":[214,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}},"0:2578:2480":{"id":"0:2578:2480","crate_id":0,"name":"with_hour","span":{"filename":"src/traits.rs","begin":[152,4],"end":[152,51]},"visibility":"default","docs":"Makes a new value with the hour number changed.\n\nReturns `None` when the resulting value would be invalid.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["hour",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:701:671":{"id":"0:701:671","crate_id":0,"name":"format","span":{"filename":"src/format/mod.rs","begin":[717,0],"end":[733,1]},"visibility":"public","docs":"Tries to format given arguments with given formatting items.\nInternally used by `DelayedFormat`.","links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["w",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10400:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["date",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"bindings":[]}}}}],["time",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"bindings":[]}}}}],["off",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"tuple","inner":[{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]}}}}],"bindings":[]}}}}],["items",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10389:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8748:157","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"B"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2792:2040","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:3217:1416":{"id":"2:3217:1416","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47753:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2597:1878":{"id":"0:2597:1878","crate_id":0,"name":"SecondsFormat","span":{"filename":"src/datetime/mod.rs","begin":[53,0],"end":[77,1]},"visibility":"public","docs":"Specific formatting options for seconds. This may be extended in the\nfuture, so exhaustive matching in external code is not recommended.\n\nSee the `TimeZone::to_rfc3339_opts` function for usage.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":true,"variants":["0:2598:2244","0:2600:2247","0:2602:2250","0:2604:2253","0:2606:2257"],"impls":["a:2:3310:7473-0:2597:1878","a:2:9408:7639-0:2597:1878","a:2:3269:211-0:2597:1878","a:2:9407:7640-0:2597:1878","a:2:3281:220-0:2597:1878","b:2:2869-0:2597:1878","b:2:4002-0:2597:1878","b:2:3198-0:2597:1878","b:2:2872-0:2597:1878","b:2:3208-0:2597:1878","b:2:3202-0:2597:1878","b:2:3213-0:2597:1878","b:5:787-0:2597:1878","0:2610","0:2612","0:2613","0:2615","0:2616","0:2618","0:2619"]}},"0:2450:1876":{"id":"0:2450:1876","crate_id":0,"name":"SubsecRound","span":{"filename":"src/round.rs","begin":[20,0],"end":[45,1]},"visibility":"public","docs":"Extension trait for subsecond rounding or truncation to a maximum number\nof digits. Rounding can be used to decrease the error variance when\nserializing/persisting to lower precision. Truncation is the default\nbehavior in Chrono display formatting.  Either can be used to guarantee\nequality (e.g. for testing) when round-tripping through a lower precision\nformat.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:2451:6565","0:2452:6570"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:2453"]}},"0:372:2287":{"id":"0:372:2287","crate_id":0,"name":"from_local","span":{"filename":"src/datetime/mod.rs","begin":[142,4],"end":[146,5]},"visibility":"public","docs":"Makes a new `DateTime` with given **local** datetime and offset that\npresents local timezone.\n\n# Example\n\n```\nuse chrono::DateTime;\nuse chrono::naive::NaiveDate;\nuse chrono::offset::{Utc, FixedOffset};\n\nlet naivedatetime_utc = NaiveDate::from_ymd(2000, 1, 12).and_hms(2, 0, 0);\nlet datetime_utc = DateTime::<Utc>::from_utc(naivedatetime_utc, Utc);\n\nlet timezone_east = FixedOffset::east(8 * 60 * 60);\nlet naivedatetime_east = NaiveDate::from_ymd(2000, 1, 12).and_hms(10, 0, 0);\nlet datetime_east = DateTime::<FixedOffset>::from_local(naivedatetime_east, timezone_east);\n\nlet timezone_west = FixedOffset::west(7 * 60 * 60);\nlet naivedatetime_west = NaiveDate::from_ymd(2000, 1, 11).and_hms(19, 0, 0);\nlet datetime_west = DateTime::<FixedOffset>::from_local(naivedatetime_west, timezone_west);\nassert_eq!(datetime_east, datetime_utc.with_timezone(&timezone_east));\nassert_eq!(datetime_west, datetime_utc.with_timezone(&timezone_west));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["datetime",{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["offset",{"kind":"qualified_path","inner":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Tz"},"trait":{"name":"","id":"0:2374:1889","args":null}}}]],"output":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2706":{"id":"0:2706","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[97,16],"end":[97,25]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2659:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2659:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2707:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1473:2502":{"id":"0:1473:2502","crate_id":0,"name":"from_str","span":{"filename":"src/naive/datetime/mod.rs","begin":[1487,4],"end":[1512,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:632:1899","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3310:7473-0:2597:1878":{"id":"a:2:3310:7473-0:2597:1878","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:7473","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SecondsFormat","id":"0:2597:1878","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:9028:7126":{"id":"2:9028:7126","crate_id":2,"name":"FusedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8748:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2281:1888":{"id":"0:2281:1888","crate_id":0,"name":"Offset","span":{"filename":"src/offset/local/mod.rs","begin":[90,4],"end":[90,30]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:620":{"id":"0:620","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[169,0],"end":[169,30]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:614:2656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9408:7639-0:614:2656":{"id":"a:2:9408:7639-0:614:2656","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9408:7639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:614:2656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3433:6598":{"id":"0:3433:6598","crate_id":0,"name":"TimestampExceedsLimit","span":{"filename":"src/round.rs","begin":[277,4],"end":[277,25]},"visibility":"default","docs":"Error when `DateTime.timestamp_nanos` exceeds the limit.\n\n``` rust\n# use chrono::{DateTime, DurationRound, Duration, RoundingError, TimeZone, Utc};\nlet dt = Utc.ymd(2300, 12, 12).and_hms(0, 0, 0);\n\nassert_eq!(dt.duration_round(Duration::days(1)), Err(RoundingError::TimestampExceedsLimit),);\n```","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:1413:4865":{"id":"0:1413:4865","crate_id":0,"name":"and_local_timezone","span":{"filename":"src/naive/datetime/mod.rs","begin":[743,4],"end":[745,5]},"visibility":"public","docs":"Converts the `NaiveDateTime` into the timezone-aware `DateTime<Tz>`\nwith the provided timezone, if possible.\n\nThis can fail in cases where the local time represented by the `NaiveDateTime`\nis not a valid local timestamp in the target timezone due to an offset transition\nfor example if the target timezone had a change from +00:00 to +01:00\noccuring at 2015-09-05 22:59:59, then a local time of 2015-09-05 23:56:04\ncould never occur. Similarly, if the offset transitioned in the opposite direction\nthen there would be two local times of 2015-09-05 23:56:04, one at +00:00 and one\nat +01:00.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Utc};\nlet dt = NaiveDate::from_ymd(2015, 9, 5).and_hms(23, 56, 4).and_local_timezone(Utc).unwrap();\nassert_eq!(dt.timezone(), Utc);","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["tz",{"kind":"generic","inner":"Tz"}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3395:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:2374:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:6420-0:2927:2039":{"id":"b:5:6420-0:2927:2039","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10447:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:6418:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2927:2039","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["5:6422:1397"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2837:408":{"id":"0:2837:408","crate_id":0,"name":"clone","span":{"filename":"src/format/mod.rs","begin":[336,16],"end":[336,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2831:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3060":{"id":"0:3060","crate_id":0,"name":null,"span":{"filename":"src/naive/isoweek.rs","begin":[19,24],"end":[19,34]},"visibility":{"restricted":{"parent":"0:1565:2959","path":"::naive::isoweek"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["le","ge","lt","gt"],"trait":{"name":"PartialOrd","id":"2:2967:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"IsoWeek","id":"0:3052:1901","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IsoWeek","id":"0:3052:1901","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3061:997"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1584":{"id":"0:1584","crate_id":0,"name":null,"span":{"filename":"src/naive/isoweek.rs","begin":[134,0],"end":[145,1]},"visibility":{"restricted":{"parent":"0:1565:2959","path":"::naive::isoweek"}},"docs":"The `Debug` output of the ISO week `w` is the same as\n[`d.format(\"%G-W%V\")`](../format/strftime/index.html)\nwhere `d` is any `NaiveDate` value in that week.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(format!(\"{:?}\", NaiveDate::from_ymd(2015,  9,  5).iso_week()), \"2015-W36\");\nassert_eq!(format!(\"{:?}\", NaiveDate::from_ymd(   0,  1,  3).iso_week()), \"0000-W01\");\nassert_eq!(format!(\"{:?}\", NaiveDate::from_ymd(9999, 12, 31).iso_week()), \"9999-W52\");\n```\n\nISO 8601 requires an explicit sign for years before 1 BCE or after 9999 CE.\n\n```\n# use chrono::{NaiveDate, Datelike};\nassert_eq!(format!(\"{:?}\", NaiveDate::from_ymd(    0,  1,  2).iso_week()),  \"-0001-W52\");\nassert_eq!(format!(\"{:?}\", NaiveDate::from_ymd(10000, 12, 31).iso_week()), \"+10000-W52\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10440:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IsoWeek","id":"0:3052:1901","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1585:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1851:3098":{"id":"0:1851:3098","crate_id":0,"name":"offset_from_utc_datetime","span":{"filename":"src/offset/fixed.rs","begin":[122,4],"end":[124,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["_utc",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3278:217":{"id":"2:3278:217","crate_id":2,"name":"StructuralEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1755":{"id":"0:1755","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[484,62],"end":[484,71]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"naive::NaiveWeek","name":"NaiveWeek","id":"0:2936:1902","glob":false}},"b:2:3198-0:2713:2238":{"id":"b:2:3198-0:2713:2238","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2713:2238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:2536"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3442":{"id":"0:3442","crate_id":0,"name":null,"span":{"filename":"src/round.rs","begin":[241,34],"end":[241,36]},"visibility":{"restricted":{"parent":"0:2418:1904","path":"::round"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3278:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RoundingError","id":"0:3428:1906","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3198-0:3052:1901":{"id":"b:2:3198-0:3052:1901","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IsoWeek","id":"0:3052:1901","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:2536"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13212:7131":{"id":"2:13212:7131","crate_id":2,"name":"Pattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13214:7162","2:13215:64093","2:13216:64098","2:13217:64094","2:13218:64096","2:13219:64095","2:13220:64097"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3310:7473-0:2936:1902":{"id":"a:2:3310:7473-0:2936:1902","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:7473","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveWeek","id":"0:2936:1902","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3523:2811":{"id":"0:3523:2811","crate_id":0,"name":"November","span":{"filename":"src/month.rs","begin":[55,4],"end":[55,17]},"visibility":"default","docs":"November","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:1565:2959":{"id":"0:1565:2959","crate_id":0,"name":"isoweek","span":{"filename":"src/naive/isoweek.rs","begin":[4,0],"end":[167,1]},"visibility":{"restricted":{"parent":"0:1061:1900","path":"::naive"}},"docs":"ISO 8601 week.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:3052:1901"],"is_stripped":true}},"23:871:7285":{"id":"23:871:7285","crate_id":23,"name":"NumAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Num","id":"23:844:7268","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"NumAssignOps","id":"23:866:7284","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2766:408":{"id":"0:2766:408","crate_id":0,"name":"clone","span":{"filename":"src/format/mod.rs","begin":[253,16],"end":[253,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2761:2702","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1866":{"id":"0:1866","crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[186,0],"end":[193,1]},"visibility":{"restricted":{"parent":"0:1795:5699","path":"::offset::fixed"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Add","id":"2:3337:2031","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1867:181","0:1868:265"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2742:2699":{"id":"0:2742:2699","crate_id":0,"name":"TimezoneOffsetZ","span":{"filename":"src/format/mod.rs","begin":[239,4],"end":[239,19]},"visibility":"default","docs":"Same as [`TimezoneOffsetColonZ`](#variant.TimezoneOffsetColonZ) but prints no colon.\nParsing allows an optional colon.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"b:5:787-0:2590:1872":{"id":"b:5:787-0:2590:1872","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["5:789:7921","5:790:7922","5:791:7923"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2506":{"id":"0:2506","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[195,0],"end":[195,47]},"visibility":{"restricted":{"parent":"0:2490:1907","path":"::weekday"}},"docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["type_id","source","provide","description","cause"],"trait":{"name":"Error","id":"1:2572:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:3482:1908","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:619:604":{"id":"0:619:604","crate_id":0,"name":"eq","span":{"filename":"src/format/mod.rs","begin":[164,4],"end":[166,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["_other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:614:2656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1844:5844":{"id":"0:1844:5844","crate_id":0,"name":"utc_minus_local","span":{"filename":"src/offset/fixed.rs","begin":[100,4],"end":[102,5]},"visibility":"public","docs":"Returns the number of seconds to add to convert from the local time to UTC.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1840:3086":{"id":"0:1840:3086","crate_id":0,"name":"east_opt","span":{"filename":"src/offset/fixed.rs","begin":[54,4],"end":[60,5]},"visibility":"public","docs":"Makes a new `FixedOffset` for the Eastern Hemisphere with given timezone difference.\nThe negative `secs` means the Western Hemisphere.\n\nReturns `None` on the out-of-bound `secs`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["secs",{"kind":"primitive","inner":"i32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3099:408":{"id":"0:3099:408","crate_id":0,"name":"clone","span":{"filename":"src/offset/fixed.rs","begin":[25,36],"end":[25,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1218:2142":{"id":"0:1218:2142","crate_id":0,"name":"checked_sub_signed","span":{"filename":"src/naive/date.rs","begin":[1083,4],"end":[1094,5]},"visibility":"public","docs":"Subtracts the `days` part of given `Duration` from the current date.\n\nReturns `None` when it will result in overflow.\n\n# Example\n\n```\nuse chrono::{Duration, NaiveDate};\n\nlet d = NaiveDate::from_ymd(2015, 9, 5);\nassert_eq!(d.checked_sub_signed(Duration::days(40)),\n           Some(NaiveDate::from_ymd(2015, 7, 27)));\nassert_eq!(d.checked_sub_signed(Duration::days(-40)),\n           Some(NaiveDate::from_ymd(2015, 10, 15)));\nassert_eq!(d.checked_sub_signed(Duration::days(1_000_000_000)), None);\nassert_eq!(d.checked_sub_signed(Duration::days(-1_000_000_000)), None);\nassert_eq!(NaiveDate::MIN.checked_sub_signed(Duration::days(1)), None);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3269:211-0:2845:2736":{"id":"a:2:3269:211-0:2845:2736","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2845:2736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:406":{"id":"0:406","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[426,0],"end":[434,1]},"visibility":{"restricted":{"parent":"0:256:1893","path":"::datetime"}},"docs":"Convert a `DateTime<FixedOffset>` instance into a `DateTime<Utc>` instance.","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:3384:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:407:681"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2872-0:2941:1885":{"id":"b:2:2872-0:2941:1885","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:7071","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:5915"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"23:2232:7297":{"id":"23:2232:7297","crate_id":23,"name":"FloatConst","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:2233:2540","23:2234:15444","23:2235:15448","23:2236:15445","23:2237:15446","23:2238:15439","23:2239:15440","23:2240:15441","23:2241:15442","23:2242:15443","23:2243:15454","23:2244:15453","23:2245:15451","23:2246:15449","23:2247:15437","23:2248:15447","23:2249:15438","23:2250:15452","23:2251:15450"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3054":{"id":"0:3054","crate_id":0,"name":null,"span":{"filename":"src/naive/isoweek.rs","begin":[19,9],"end":[19,18]},"visibility":{"restricted":{"parent":"0:1565:2959","path":"::naive::isoweek"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IsoWeek","id":"0:3052:1901","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3202-0:2597:1878":{"id":"b:2:3202-0:2597:1878","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SecondsFormat","id":"0:2597:1878","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2664:2621":{"id":"0:2664:2621","crate_id":0,"name":"YearMod100","span":{"filename":"src/format/mod.rs","begin":[105,4],"end":[105,14]},"visibility":"default","docs":"Gregorian year modulo 100 (FW=PW=2). Cannot be negative.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:780:3008":{"id":"0:780:3008","crate_id":0,"name":"set_day","span":{"filename":"src/format/parsed.rs","begin":[220,4],"end":[222,5]},"visibility":"public","docs":"Tries to set the [`day`](#structfield.day) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["value",{"kind":"primitive","inner":"i64"}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:632:1899","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6110:65428":{"id":"5:6110:65428","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:8368:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9408:7639-0:3384:1884":{"id":"a:2:9408:7639-0:3384:1884","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9408:7639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:3384:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3429:6600":{"id":"0:3429:6600","crate_id":0,"name":"DurationExceedsTimestamp","span":{"filename":"src/round.rs","begin":[254,4],"end":[254,28]},"visibility":"default","docs":"Error when the Duration exceeds the Duration from or until the Unix epoch.\n\n``` rust\n# use chrono::{DateTime, DurationRound, Duration, RoundingError, TimeZone, Utc};\nlet dt = Utc.ymd(1970, 12, 12).and_hms(0, 0, 0);\n\nassert_eq!(\n    dt.duration_round(Duration::days(365)),\n    Err(RoundingError::DurationExceedsTimestamp),\n);\n```","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:13612:3199":{"id":"2:13612:3199","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:15986:6923","self::pattern":"2:13202:1925"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3502:2805":{"id":"0:3502:2805","crate_id":0,"name":"April","span":{"filename":"src/month.rs","begin":[41,4],"end":[41,13]},"visibility":"default","docs":"April","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:1671:2167":{"id":"0:1671:2167","crate_id":0,"name":"format_with_items","span":{"filename":"src/naive/time/mod.rs","begin":[748,4],"end":[754,5]},"visibility":"public","docs":"Formats the time with the specified formatting items.\nOtherwise it is the same as the ordinary [`format`](#method.format) method.\n\nThe `Iterator` of items should be `Clone`able,\nsince the resulting `DelayedFormat` value may be formatted multiple times.\n\n# Example\n\n```\nuse chrono::NaiveTime;\nuse chrono::format::strftime::StrftimeItems;\n\nlet fmt = StrftimeItems::new(\"%H:%M:%S\");\nlet t = NaiveTime::from_hms(23, 56, 4);\nassert_eq!(t.format_with_items(fmt.clone()).to_string(), \"23:56:04\");\nassert_eq!(t.format(\"%H:%M:%S\").to_string(),             \"23:56:04\");\n```\n\nThe resulting `DelayedFormat` can be formatted directly via the `Display` trait.\n\n```\n# use chrono::NaiveTime;\n# use chrono::format::strftime::StrftimeItems;\n# let fmt = StrftimeItems::new(\"%H:%M:%S\").clone();\n# let t = NaiveTime::from_hms(23, 56, 4);\nassert_eq!(format!(\"{}\", t.format_with_items(fmt)), \"23:56:04\");\n```","links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["items",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2927:2039","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8748:157","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"B"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2792:2040","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9407:7640-0:3446:1882":{"id":"a:2:9407:7640-0:3446:1882","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9407:7640","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:3446:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3310:7473-0:2845:2736":{"id":"a:2:3310:7473-0:2845:2736","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:7473","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2845:2736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9407:7640-0:3067:1887":{"id":"a:2:9407:7640-0:3067:1887","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9407:7640","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:5:787-0:2641:2445":{"id":"b:5:787-0:2641:2445","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2641:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:7921","5:790:7922","5:791:7923"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:798:3078":{"id":"0:798:3078","crate_id":0,"name":"to_naive_datetime_with_offset","span":{"filename":"src/format/parsed.rs","begin":[542,4],"end":[612,5]},"visibility":"public","docs":"Returns a parsed naive date and time out of given fields,\nexcept for the [`offset`](#structfield.offset) field (assumed to have a given value).\nThis is required for parsing a local time or other known-timezone inputs.\n\nThis method is able to determine the combined date and time\nfrom date and time fields or a single [`timestamp`](#structfield.timestamp) field.\nEither way those fields have to be consistent to each other.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["offset",{"kind":"primitive","inner":"i32"}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:632:1899","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2872-0:2999:1886":{"id":"b:2:2872-0:2999:1886","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:7071","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:5915"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3202-0:3492:1880":{"id":"b:2:3202-0:3492:1880","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:3492:1880","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3213-0:3067:1887":{"id":"b:2:3213-0:3067:1887","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2573:2087":{"id":"0:2573:2087","crate_id":0,"name":"hour","span":{"filename":"src/traits.rs","begin":[124,4],"end":[124,26]},"visibility":"default","docs":"Returns the hour number from 0 to 23.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:1680":{"id":"0:1680","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[807,0],"end":[1014,1]},"visibility":{"restricted":{"parent":"0:1586:1556","path":"::naive::time"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hour12","num_seconds_from_midnight"],"trait":{"name":"Timelike","id":"0:2572:1881","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1681:2087","0:1682:2477","0:1683:2478","0:1684:2479","0:1685:2480","0:1686:2481","0:1687:2482","0:1688:2483","0:1689:4712"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3435":{"id":"0:3435","crate_id":0,"name":null,"span":{"filename":"src/round.rs","begin":[241,9],"end":[241,14]},"visibility":{"restricted":{"parent":"0:2418:1904","path":"::round"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10440:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RoundingError","id":"0:3428:1906","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3436:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2280":{"id":"0:2280","crate_id":0,"name":null,"span":{"filename":"src/offset/local/mod.rs","begin":[89,0],"end":[170,1]},"visibility":{"restricted":{"parent":"0:1883:816","path":"::offset::local"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["datetime_from_str","timestamp_millis","yo","timestamp","from_local_datetime","timestamp_nanos","isoywd_opt","from_utc_date","from_utc_datetime","ymd","timestamp_millis_opt","timestamp_opt","from_local_date","yo_opt","ymd_opt","isoywd"],"trait":{"name":"TimeZone","id":"0:2374:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Local","id":"0:3377:1873","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2281:1888","0:2282:2131","0:2283:5785","0:2285:5787","0:2287:5791","0:2288:3098","0:2289:2165","0:2291:2082","0:2292:2137","0:2293:2352"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3269:211-0:2908:2041":{"id":"a:2:3269:211-0:2908:2041","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2908:2041","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:4002-0:614:2656":{"id":"b:2:4002-0:614:2656","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:614:2656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:8748:157":{"id":"2:8748:157","crate_id":2,"name":"Iterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8749:2040","2:8750:922","2:8751:7879","2:8754:4358","2:8755:495","2:8757:6057","2:8760:7880","2:8761:7881","2:8762:7882","2:8763:2467","2:8765:6241","2:8767:7883","2:8768:7884","2:8770:841","2:8773:7885","2:8780:7886","2:8782:7887","2:8785:3495","2:8786:7888","2:8787:7889","2:8789:7890","2:8791:7891","2:8794:1308","2:8795:3494","2:8796:2883","2:8800:7892","2:8803:7893","2:8804:7894","2:8805:7895","2:8807:7896","2:8808:3627","2:8810:7897","2:8813:7898","2:8815:7899","2:8825:7900","2:8840:7901","2:8842:7902","2:8846:7903","2:8855:7904","2:8858:7905","2:8860:7906","2:8863:276","2:8870:294","2:8877:3655","2:8884:7907","2:8893:7908","2:8903:1014","2:8910:7909","2:8917:3100","2:8918:2088","2:8919:7076","2:8931:7075","2:8938:7074","2:8950:7073","2:8957:4587","2:8958:7910","2:8963:7911","2:8966:3488","2:8969:3988","2:8970:7912","2:8972:4502","2:8974:7913","2:8976:415","2:8979:7914","2:8982:997","2:8985:7915","2:8988:604","2:8991:7916","2:8994:907","2:8996:826","2:8998:792","2:9000:713","2:9002:696","2:9004:7917","2:9005:7918","2:9013:7919"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:451:2191":{"id":"0:451:2191","crate_id":0,"name":"ordinal0","span":{"filename":"src/datetime/mod.rs","begin":[721,4],"end":[723,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1717":{"id":"0:1717","crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[14,32],"end":[14,41]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"self::date::NaiveWeek","name":"NaiveWeek","id":"0:2936:1902","glob":false}},"b:2:2872-0:2761:2702":{"id":"b:2:2872-0:2761:2702","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:7071","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2761:2702","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:5915"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2372:1888":{"id":"0:2372:1888","crate_id":0,"name":"Offset","span":{"filename":"src/offset/mod.rs","begin":[194,0],"end":[197,1]},"visibility":"public","docs":"The offset from the local time to UTC.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:2373:2289"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:10440:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:1852","0:2345"]}},"b:2:2869-0:614:2656":{"id":"b:2:2869-0:614:2656","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:614:2656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:2030"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2869-0:2713:2238":{"id":"b:2:2869-0:2713:2238","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2713:2238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:2030"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2469:126":{"id":"0:2469:126","crate_id":0,"name":"Err","span":{"filename":"src/round.rs","begin":[161,4],"end":[161,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"RoundingError","id":"0:3428:1906","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"a:2:3281:220-0:2941:1885":{"id":"a:2:3281:220-0:2941:1885","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:2921:183":{"id":"2:2921:183","crate_id":2,"name":"PartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2923:604","2:2924:907"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:2395:5791":{"id":"0:2395:5791","crate_id":0,"name":"offset_from_utc_date","span":{"filename":"src/offset/mod.rs","begin":[460,4],"end":[460,68]},"visibility":"default","docs":"Creates the offset for given UTC `NaiveDate`. This cannot fail.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["utc",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"qualified_path","inner":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:2374:1889","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:1052:126":{"id":"0:1052:126","crate_id":0,"name":"Err","span":{"filename":"src/format/mod.rs","begin":[948,4],"end":[948,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"ParseMonthError","id":"0:3562:1911","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"b:2:4002-0:3377:1873":{"id":"b:2:4002-0:3377:1873","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Local","id":"0:3377:1873","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:6883:8521":{"id":"1:6883:8521","crate_id":1,"name":"AsRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6884:60269"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5811:8538":{"id":"1:5811:8538","crate_id":1,"name":"DirEntryExt2","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5812:61917"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10589:8515","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3202-0:3446:1882":{"id":"b:2:3202-0:3446:1882","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:3446:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:470:2087":{"id":"0:470:2087","crate_id":0,"name":"hour","span":{"filename":"src/datetime/mod.rs","begin":[771,4],"end":[773,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2388:2131":{"id":"0:2388:2131","crate_id":0,"name":"from_offset","span":{"filename":"src/offset/mod.rs","begin":[435,4],"end":[435,50]},"visibility":"default","docs":"Reconstructs the time zone from the offset.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["offset",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:2374:1889","args":null}}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:3182:227":{"id":"2:3182:227","crate_id":2,"name":"TryFrom","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3184:127","2:3185:1416"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2564:2193":{"id":"0:2564:2193","crate_id":0,"name":"with_year","span":{"filename":"src/traits.rs","begin":[59,4],"end":[59,51]},"visibility":"default","docs":"Makes a new value with the year number changed.\n\nReturns `None` when the resulting value would be invalid.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["year",{"kind":"primitive","inner":"i32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:3202-0:2908:2041":{"id":"b:2:3202-0:2908:2041","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2908:2041","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1424:2191":{"id":"0:1424:2191","crate_id":0,"name":"ordinal0","span":{"filename":"src/naive/datetime/mod.rs","begin":[881,4],"end":[883,5]},"visibility":"default","docs":"Returns the day of year starting from 0.\n\nThe return value ranges from 0 to 365. (The last day of year differs by years.)\n\nSee also the [`NaiveDate::ordinal0`](./struct.NaiveDate.html#method.ordinal0) method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Datelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 25).and_hms(12, 34, 56);\nassert_eq!(dt.ordinal0(), 267);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1695":{"id":"0:1695","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[1126,0],"end":[1133,1]},"visibility":{"restricted":{"parent":"0:1586:1556","path":"::naive::time"}},"docs":"A subtraction of `Duration` from `NaiveTime` wraps around and never overflows or underflows.\nIn particular the addition ignores integral number of days.\nIt is the same as the addition with a negated `Duration`.\n\nAs a part of Chrono's [leap second handling](#leap-second-handling),\nthe addition assumes that **there is no leap second ever**,\nexcept when the `NaiveTime` itself represents a leap second\nin which case the assumption becomes that **there is exactly a single leap second ever**.\n\n# Example\n\n```\nuse chrono::{Duration, NaiveTime};\n\nlet from_hmsm = NaiveTime::from_hms_milli;\n\nassert_eq!(from_hmsm(3, 5, 7, 0) - Duration::zero(),                  from_hmsm(3, 5, 7, 0));\nassert_eq!(from_hmsm(3, 5, 7, 0) - Duration::seconds(1),              from_hmsm(3, 5, 6, 0));\nassert_eq!(from_hmsm(3, 5, 7, 0) - Duration::seconds(60 + 5),         from_hmsm(3, 4, 2, 0));\nassert_eq!(from_hmsm(3, 5, 7, 0) - Duration::seconds(2*60*60 + 6*60), from_hmsm(0, 59, 7, 0));\nassert_eq!(from_hmsm(3, 5, 7, 0) - Duration::milliseconds(80),        from_hmsm(3, 5, 6, 920));\nassert_eq!(from_hmsm(3, 5, 7, 950) - Duration::milliseconds(280),     from_hmsm(3, 5, 7, 670));\n```\n\nThe subtraction wraps around.\n\n```\n# use chrono::{Duration, NaiveTime};\n# let from_hmsm = NaiveTime::from_hms_milli;\nassert_eq!(from_hmsm(3, 5, 7, 0) - Duration::seconds(8*60*60), from_hmsm(19, 5, 7, 0));\nassert_eq!(from_hmsm(3, 5, 7, 0) - Duration::days(800),        from_hmsm(3, 5, 7, 0));\n```\n\nLeap seconds are handled, but the subtraction assumes that it is the only leap second happened.\n\n```\n# use chrono::{Duration, NaiveTime};\n# let from_hmsm = NaiveTime::from_hms_milli;\nlet leap = from_hmsm(3, 5, 59, 1_300);\nassert_eq!(leap - Duration::zero(),            from_hmsm(3, 5, 59, 1_300));\nassert_eq!(leap - Duration::milliseconds(200), from_hmsm(3, 5, 59, 1_100));\nassert_eq!(leap - Duration::milliseconds(500), from_hmsm(3, 5, 59, 800));\nassert_eq!(leap - Duration::seconds(60),       from_hmsm(3, 5, 0, 300));\nassert_eq!(leap - Duration::days(1),           from_hmsm(3, 6, 0, 300));\n```","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:3342:2033","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Duration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1696:181","0:1697:1355"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:4002-0:2873:2237":{"id":"b:2:4002-0:2873:2237","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Parsed","id":"0:2873:2237","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:8506:8374":{"id":"2:8506:8374","crate_id":2,"name":"Sum","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8508:4502"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3202-0:2713:2238":{"id":"b:2:3202-0:2713:2238","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2713:2238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3423:7098":{"id":"2:3423:7098","crate_id":2,"name":"BitAndAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3425:352"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2958:408":{"id":"0:2958:408","crate_id":0,"name":"clone","span":{"filename":"src/naive/date.rs","begin":[166,53],"end":[166,58]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3198-0:3492:1880":{"id":"b:2:3198-0:3492:1880","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:3492:1880","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:2536"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2477:660":{"id":"0:2477:660","crate_id":0,"name":"fmt","span":{"filename":"src/round.rs","begin":[281,4],"end":[293,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10400:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10389:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4002-0:3086:1883":{"id":"b:2:4002-0:3086:1883","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2577:2479":{"id":"0:2577:2479","crate_id":0,"name":"nanosecond","span":{"filename":"src/traits.rs","begin":[147,4],"end":[147,32]},"visibility":"default","docs":"Returns the number of nanoseconds since the whole non-leap second.\nThe range from 1,000,000,000 to 1,999,999,999 represents\nthe [leap second](./naive/struct.NaiveTime.html#leap-second-handling).","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2881:2836":{"id":"0:2881:2836","crate_id":0,"name":"week_from_sun","span":{"filename":"src/format/parsed.rs","begin":[66,4],"end":[66,34]},"visibility":"public","docs":"Week number, where the week 1 starts at the first Sunday of January\n(0--53, 1--53 or 1--52 depending on the year).","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u32"}}],"bindings":[]}}}}},"a:2:3281:220-0:3446:1882":{"id":"a:2:3281:220-0:3446:1882","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:3446:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1736":{"id":"0:1736","crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[20,0],"end":[20,31]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::isoweek::IsoWeek","name":"IsoWeek","id":"0:3052:1901","glob":false}},"2:13697:60322":{"id":"2:13697:60322","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:787-0:3492:1880":{"id":"b:5:787-0:3492:1880","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:3492:1880","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:7921","5:790:7922","5:791:7923"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:789:3036":{"id":"0:789:3036","crate_id":0,"name":"to_naive_date","span":{"filename":"src/format/parsed.rs","begin":[292,4],"end":[489,5]},"visibility":"public","docs":"Returns a parsed naive date out of given fields.\n\nThis method is able to determine the date from given subset of fields:\n\n- Year, month, day.\n- Year, day of the year (ordinal).\n- Year, week number counted from Sunday or Monday, day of the week.\n- ISO week date.\n\nGregorian year and ISO week date year can have their century number (`*_div_100`) omitted,\nthe two-digit year is used to guess the century number then.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:632:1899","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6092:7417":{"id":"5:6092:7417","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:8368:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["from",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2872-0:3052:1901":{"id":"b:2:2872-0:3052:1901","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:7071","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IsoWeek","id":"0:3052:1901","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:5915"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2692:2457":{"id":"0:2692:2457","crate_id":0,"name":"Minute","span":{"filename":"src/format/mod.rs","begin":[134,4],"end":[134,10]},"visibility":"default","docs":"The number of minutes since the last whole hour (FW=PW=2).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:194:2196":{"id":"0:194:2196","crate_id":0,"name":"with_day","span":{"filename":"src/date.rs","begin":[432,4],"end":[434,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["day",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3198-0:2792:2040":{"id":"b:2:3198-0:2792:2040","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2792:2040","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3201:2536"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:153:2081":{"id":"0:153:2081","crate_id":0,"name":"timezone","span":{"filename":"src/date.rs","begin":[228,4],"end":[230,5]},"visibility":"public","docs":"Retrieves an associated time zone.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"Tz"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2813:127":{"id":"0:2813:127","crate_id":0,"name":"Error","span":{"filename":"src/format/mod.rs","begin":[296,4],"end":[296,9]},"visibility":"default","docs":"Issues a formatting error. Used to signal an invalid format string.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"b:2:2872-0:3446:1882":{"id":"b:2:2872-0:3446:1882","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:7071","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:3446:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:5915"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:34":{"id":"0:34","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[457,47],"end":[457,54]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::Weekday","name":"Weekday","id":"0:3446:1882","glob":false}},"0:3539:660":{"id":"0:3539:660","crate_id":0,"name":"fmt","span":{"filename":"src/month.rs","begin":[30,37],"end":[30,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10400:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10389:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:204":{"id":"0:204","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[454,0],"end":[454,83]},"visibility":{"restricted":{"parent":"0:61:1890","path":"::date"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:2374:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Tz"},"trait":{"name":"TimeZone","id":"0:2374:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1390:4651":{"id":"0:1390:4651","crate_id":0,"name":"from_timestamp","span":{"filename":"src/naive/datetime/mod.rs","begin":[129,4],"end":[132,5]},"visibility":"public","docs":"Makes a new `NaiveDateTime` corresponding to a UTC date and time,\nfrom the number of non-leap seconds\nsince the midnight UTC on January 1, 1970 (aka \"UNIX timestamp\")\nand the number of nanoseconds since the last whole non-leap second.\n\nFor a non-naive version of this function see\n[`TimeZone::timestamp`](../offset/trait.TimeZone.html#method.timestamp).\n\nThe nanosecond part can exceed 1,000,000,000 in order to represent the\n[leap second](./struct.NaiveTime.html#leap-second-handling). (The true \"UNIX\ntimestamp\" cannot represent a leap second unambiguously.)\n\nPanics on the out-of-range number of seconds and/or invalid nanosecond.\n\n# Example\n\n```\nuse chrono::{NaiveDateTime, NaiveDate};\n\nlet dt = NaiveDateTime::from_timestamp(0, 42_000_000);\nassert_eq!(dt, NaiveDate::from_ymd(1970, 1, 1).and_hms_milli(0, 0, 0, 42));\n\nlet dt = NaiveDateTime::from_timestamp(1_000_000_000, 0);\nassert_eq!(dt, NaiveDate::from_ymd(2001, 9, 9).and_hms(1, 46, 40));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["secs",{"kind":"primitive","inner":"i64"}],["nsecs",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4002-0:3482:1908":{"id":"b:2:4002-0:3482:1908","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:3482:1908","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:367:1896":{"id":"0:367:1896","crate_id":0,"name":"MIN_DATETIME","span":{"filename":"src/datetime/mod.rs","begin":[93,0],"end":[93,65]},"visibility":"public","docs":"The minimum possible `DateTime<Utc>`.","links":{},"attrs":["#[deprecated(since = \"0.4.20\", note = \"Use DateTime::MIN_UTC instead\")]"],"deprecation":{"since":"0.4.20","note":"Use DateTime::MIN_UTC instead"},"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:3384:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"expr":"DateTime<Utc>::MIN_UTC","value":null,"is_literal":false}},"0:1686:2481":{"id":"0:1686:2481","crate_id":0,"name":"with_minute","span":{"filename":"src/naive/time/mod.rs","begin":[928,4],"end":[934,5]},"visibility":"default","docs":"Makes a new `NaiveTime` with the minute number changed.\n\nReturns `None` when the resulting `NaiveTime` would be invalid.\n\n# Example\n\n```\nuse chrono::{NaiveTime, Timelike};\n\nlet dt = NaiveTime::from_hms_nano(23, 56, 4, 12_345_678);\nassert_eq!(dt.with_minute(45), Some(NaiveTime::from_hms_nano(23, 45, 4, 12_345_678)));\nassert_eq!(dt.with_minute(60), None);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["min",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:524":{"id":"0:524","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[906,0],"end":[913,1]},"visibility":{"restricted":{"parent":"0:256:1893","path":"::datetime"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:2374:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Tz"},"trait":{"name":"","id":"0:2374:1889","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Display","id":"2:10447:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10447:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:526:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1228:2842":{"id":"0:1228:2842","crate_id":0,"name":"week","span":{"filename":"src/naive/date.rs","begin":[1270,4],"end":[1272,5]},"visibility":"public","docs":"Returns the [`NaiveWeek`] that the date belongs to, starting with the [`Weekday`]\nspecified.","links":{"`Weekday`":"0:3446:1882","`NaiveWeek`":"0:2936:1902"},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["start",{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:3446:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveWeek","id":"0:2936:1902","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10447:119":{"id":"2:10447:119","crate_id":2,"name":"Display","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10448:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2649":{"id":"0:2649","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[74,15],"end":[74,20]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2641:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2650:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3213-0:3446:1882":{"id":"b:2:3213-0:3446:1882","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:3446:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1883:816":{"id":"0:1883:816","crate_id":0,"name":"local","span":{"filename":"src/offset/local/mod.rs","begin":[4,0],"end":[322,1]},"visibility":{"restricted":{"parent":"0:1758:957","path":"::offset"}},"docs":"The local (system) time zone.","links":{},"attrs":["#[cfg(feature = \"clock\")]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:3377:1873"],"is_stripped":true}},"0:7:1030":{"id":"0:7:1030","crate_id":0,"name":"prelude","span":{"filename":"src/lib.rs","begin":[443,0],"end":[443,15]},"visibility":"public","docs":"A convenience module appropriate for glob imports (`use chrono::prelude::*;`).","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:8","0:11","0:14","0:18","0:21","0:25","0:28","0:31","0:34","0:38","0:41","0:45","0:48","0:51","0:55","0:58"],"is_stripped":false}},"2:13644:60412":{"id":"2:13644:60412","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:15986:6923","self::pattern":"2:13202:1925","str::splitn":"1:15992:6928"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitN","id":"2:49713:7177","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13212:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13227:7161","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3202-0:2659:2444":{"id":"b:2:3202-0:2659:2444","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2659:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3379":{"id":"0:3379","crate_id":0,"name":null,"span":{"filename":"src/offset/local/mod.rs","begin":[53,9],"end":[53,13]},"visibility":{"restricted":{"parent":"0:1883:816","path":"::offset::local"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Local","id":"0:3377:1873","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1205:2115":{"id":"0:1205:2115","crate_id":0,"name":"and_hms_nano_opt","span":{"filename":"src/naive/date.rs","begin":[919,4],"end":[927,5]},"visibility":"public","docs":"Makes a new `NaiveDateTime` from the current date, hour, minute, second and nanosecond.\n\nThe nanosecond part can exceed 1,000,000,000\nin order to represent the [leap second](./struct.NaiveTime.html#leap-second-handling).\n\nReturns `None` on invalid hour, minute, second and/or nanosecond.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet d = NaiveDate::from_ymd(2015, 6, 3);\nassert!(d.and_hms_nano_opt(12, 34, 56,   789_012_345).is_some());\nassert!(d.and_hms_nano_opt(12, 34, 59, 1_789_012_345).is_some()); // leap second\nassert!(d.and_hms_nano_opt(12, 34, 59, 2_789_012_345).is_none());\nassert!(d.and_hms_nano_opt(12, 34, 60,   789_012_345).is_none());\nassert!(d.and_hms_nano_opt(12, 60, 56,   789_012_345).is_none());\nassert!(d.and_hms_nano_opt(24, 34, 56,   789_012_345).is_none());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["hour",{"kind":"primitive","inner":"u32"}],["min",{"kind":"primitive","inner":"u32"}],["sec",{"kind":"primitive","inner":"u32"}],["nano",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"23:523:7302":{"id":"23:523:7302","crate_id":23,"name":"PrimInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:524:66481","23:525:66482","23:526:66483","23:527:44002","23:528:66484","23:529:66485","23:530:1119","23:531:1120","23:532:66486","23:533:66487","23:534:66488","23:535:66489","23:536:66490","23:537:66491","23:538:66492","23:539:66493","23:540:66494","23:541:66495","23:542:7280"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Num","id":"23:844:7268","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}},{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}},{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}},{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"NumCast","id":"23:358:7299","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Bounded","id":"23:233:7296","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2967:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Ord","id":"2:2957:177","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Not","id":"2:3389:7095","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"BitAnd","id":"2:3396:7092","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"BitOr","id":"2:3401:7093","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"BitXor","id":"2:3406:7094","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Shl","id":"2:3411:7096","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Shr","id":"2:3417:7097","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"CheckedAdd","id":"23:572:7303","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"CheckedSub","id":"23:575:7310","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"CheckedMul","id":"23:577:7305","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"CheckedDiv","id":"23:579:7304","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Saturating","id":"23:715:7316","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:3006":{"id":"0:3006","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[74,20],"end":[74,22]},"visibility":{"restricted":{"parent":"0:1291:1893","path":"::naive::datetime"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2854:2752":{"id":"0:2854:2752","crate_id":0,"name":"TooShort","span":{"filename":"src/format/mod.rs","begin":[369,4],"end":[369,12]},"visibility":"default","docs":"The input string has been prematurely ended.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"b:2:3208-0:2792:2040":{"id":"b:2:3208-0:2792:2040","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2792:2040","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:4000:68":{"id":"2:4000:68","crate_id":2,"name":"Any","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4001:1429"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"outlives":"'static"}],"implementations":[]}},"0:1459":{"id":"0:1459","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1340,0],"end":[1347,1]},"visibility":{"restricted":{"parent":"0:1291:1893","path":"::naive::datetime"}},"docs":"A subtraction of `Duration` from `NaiveDateTime` yields another `NaiveDateTime`.\nIt is the same as the addition with a negated `Duration`.\n\nAs a part of Chrono's [leap second handling](./struct.NaiveTime.html#leap-second-handling),\nthe addition assumes that **there is no leap second ever**,\nexcept when the `NaiveDateTime` itself represents a leap second\nin which case the assumption becomes that **there is exactly a single leap second ever**.\n\nPanics on underflow or overflow. Use [`NaiveDateTime::checked_sub_signed`]\nto detect that.\n\n# Example\n\n```\nuse chrono::{Duration, NaiveDate};\n\nlet from_ymd = NaiveDate::from_ymd;\n\nlet d = from_ymd(2016, 7, 8);\nlet hms = |h, m, s| d.and_hms(h, m, s);\nassert_eq!(hms(3, 5, 7) - Duration::zero(),             hms(3, 5, 7));\nassert_eq!(hms(3, 5, 7) - Duration::seconds(1),         hms(3, 5, 6));\nassert_eq!(hms(3, 5, 7) - Duration::seconds(-1),        hms(3, 5, 8));\nassert_eq!(hms(3, 5, 7) - Duration::seconds(3600 + 60), hms(2, 4, 7));\nassert_eq!(hms(3, 5, 7) - Duration::seconds(86_400),\n           from_ymd(2016, 7, 7).and_hms(3, 5, 7));\nassert_eq!(hms(3, 5, 7) - Duration::days(365),\n           from_ymd(2015, 7, 9).and_hms(3, 5, 7));\n\nlet hmsm = |h, m, s, milli| d.and_hms_milli(h, m, s, milli);\nassert_eq!(hmsm(3, 5, 7, 450) - Duration::milliseconds(670), hmsm(3, 5, 6, 780));\n```\n\nLeap seconds are handled,\nbut the subtraction assumes that it is the only leap second happened.\n\n```\n# use chrono::{Duration, NaiveDate};\n# let from_ymd = NaiveDate::from_ymd;\n# let hmsm = |h, m, s, milli| from_ymd(2016, 7, 8).and_hms_milli(h, m, s, milli);\nlet leap = hmsm(3, 5, 59, 1_300);\nassert_eq!(leap - Duration::zero(),            hmsm(3, 5, 59, 1_300));\nassert_eq!(leap - Duration::milliseconds(200), hmsm(3, 5, 59, 1_100));\nassert_eq!(leap - Duration::milliseconds(500), hmsm(3, 5, 59, 800));\nassert_eq!(leap - Duration::seconds(60),       hmsm(3, 5, 0, 300));\nassert_eq!(leap - Duration::days(1),\n           from_ymd(2016, 7, 7).and_hms_milli(3, 6, 0, 300));\n```","links":{"`NaiveDateTime::checked_sub_signed`":"0:2999:1886"},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:3342:2033","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Duration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1460:181","0:1461:1355"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:9408:7639":{"id":"2:9408:7639","crate_id":2,"name":"RefUnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1234:2188":{"id":"0:1234:2188","crate_id":0,"name":"month0","span":{"filename":"src/naive/date.rs","begin":[1326,4],"end":[1328,5]},"visibility":"default","docs":"Returns the month number starting from 0.\n\nThe return value ranges from 0 to 11.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(NaiveDate::from_ymd(2015, 9, 8).month0(), 8);\nassert_eq!(NaiveDate::from_ymd(-308, 3, 14).month0(), 2);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3568:604":{"id":"0:3568:604","crate_id":0,"name":"eq","span":{"filename":"src/month.rs","begin":[204,16],"end":[204,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ParseMonthError","id":"0:3562:1911","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3198-0:2999:1886":{"id":"b:2:3198-0:2999:1886","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:2536"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3202-0:2792:2040":{"id":"b:2:3202-0:2792:2040","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2792:2040","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2654":{"id":"0:2654","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[74,33],"end":[74,35]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3278:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2641:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:8551-0:2908:2041":{"id":"b:2:8551-0:2908:2041","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8748:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8547:151","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2908:2041","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:8553:2040","2:8554:7878","2:8555:768"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"b:2:3213-0:2761:2702":{"id":"b:2:3213-0:2761:2702","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2761:2702","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1419:1909":{"id":"0:1419:1909","crate_id":0,"name":"month","span":{"filename":"src/naive/datetime/mod.rs","begin":[786,4],"end":[788,5]},"visibility":"default","docs":"Returns the month number starting from 1.\n\nThe return value ranges from 1 to 12.\n\nSee also the [`NaiveDate::month`](./struct.NaiveDate.html#method.month) method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Datelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 25).and_hms(12, 34, 56);\nassert_eq!(dt.month(), 9);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3431:7100":{"id":"2:3431:7100","crate_id":2,"name":"BitXorAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3433:357"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2796:1542":{"id":"0:2796:1542","crate_id":0,"name":"0","span":{"filename":"src/format/mod.rs","begin":[281,12],"end":[281,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}},"0:3566":{"id":"0:3566","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[204,16],"end":[204,25]},"visibility":{"restricted":{"parent":"0:2518:1909","path":"::month"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseMonthError","id":"0:3562:1911","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1429:2194":{"id":"0:1429:2194","crate_id":0,"name":"with_month","span":{"filename":"src/naive/datetime/mod.rs","begin":[944,4],"end":[946,5]},"visibility":"default","docs":"Makes a new `NaiveDateTime` with the month number (starting from 1) changed.\n\nReturns `None` when the resulting `NaiveDateTime` would be invalid.\n\nSee also the [`NaiveDate::with_month`] method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Datelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 30).and_hms(12, 34, 56);\nassert_eq!(dt.with_month(10), Some(NaiveDate::from_ymd(2015, 10, 30).and_hms(12, 34, 56)));\nassert_eq!(dt.with_month(13), None); // no month 13\nassert_eq!(dt.with_month(2), None); // no February 30\n```","links":{"`NaiveDate::with_month`":"0:2941:1885"},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["month",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2686:2640":{"id":"0:2686:2640","crate_id":0,"name":"Ordinal","span":{"filename":"src/format/mod.rs","begin":[128,4],"end":[128,11]},"visibility":"default","docs":"Day of the year (FW=PW=3).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:13699:60324":{"id":"2:13699:60324","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3247:115":{"id":"2:3247:115","crate_id":2,"name":"Default","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3248:59"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:797:3069":{"id":"0:797:3069","crate_id":0,"name":"to_naive_time","span":{"filename":"src/format/parsed.rs","begin":[500,4],"end":[533,5]},"visibility":"public","docs":"Returns a parsed naive time out of given fields.\n\nThis method is able to determine the time from given subset of fields:\n\n- Hour, minute. (second and nanosecond assumed to be 0)\n- Hour, minute, second. (nanosecond assumed to be 0)\n- Hour, minute, second, nanosecond.\n\nIt is able to handle leap seconds when given second is 60.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:632:1899","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3408:408":{"id":"0:3408:408","crate_id":0,"name":"clone","span":{"filename":"src/offset/mod.rs","begin":[40,9],"end":[40,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3395:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3517:2809":{"id":"0:3517:2809","crate_id":0,"name":"September","span":{"filename":"src/month.rs","begin":[51,4],"end":[51,17]},"visibility":"default","docs":"September","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:381:2346":{"id":"0:381:2346","crate_id":0,"name":"timestamp_subsec_micros","span":{"filename":"src/datetime/mod.rs","begin":[289,4],"end":[291,5]},"visibility":"public","docs":"Returns the number of microseconds since the last second boundary\n\nwarning: in event of a leap second, this may exceed 999_999\n\nnote: this is not the number of microseconds since January 1, 1970 0:00:00 UTC","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:185:2191":{"id":"0:185:2191","crate_id":0,"name":"ordinal0","span":{"filename":"src/date.rs","begin":[404,4],"end":[406,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:240":{"id":"0:240","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[523,0],"end":[527,1]},"visibility":{"restricted":{"parent":"0:61:1890","path":"::date"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:2374:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10440:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:242:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1389:920":{"id":"0:1389:920","crate_id":0,"name":"new","span":{"filename":"src/naive/datetime/mod.rs","begin":[99,4],"end":[101,5]},"visibility":"public","docs":"Makes a new `NaiveDateTime` from date and time components.\nEquivalent to [`date.and_time(time)`](./struct.NaiveDate.html#method.and_time)\nand many other helper constructors on `NaiveDate`.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveTime, NaiveDateTime};\n\nlet d = NaiveDate::from_ymd(2015, 6, 3);\nlet t = NaiveTime::from_hms_milli(12, 34, 56, 789);\n\nlet dt = NaiveDateTime::new(d, t);\nassert_eq!(dt.date(), d);\nassert_eq!(dt.time(), t);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["date",{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["time",{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13669:64785":{"id":"2:13669:64785","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:9367:8549":{"id":"1:9367:8549","crate_id":1,"name":"StdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9368:7335","1:9369:7273","1:9370:2214","1:9371:62712","1:9372:1904","1:9373:43927","1:9374:62711"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10589:8515","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2461:6593":{"id":"0:2461:6593","crate_id":0,"name":"duration_trunc","span":{"filename":"src/round.rs","begin":[142,4],"end":[142,75]},"visibility":"default","docs":"Return a copy truncated by Duration.\n\n# Example\n``` rust\n# use chrono::{DateTime, DurationRound, Duration, TimeZone, Utc};\nlet dt = Utc.ymd(2018, 1, 11).and_hms_milli(12, 0, 0, 154);\nassert_eq!(\n    dt.duration_trunc(Duration::milliseconds(10)).unwrap().to_string(),\n    \"2018-01-11 12:00:00.150 UTC\"\n);\nassert_eq!(\n    dt.duration_trunc(Duration::days(1)).unwrap().to_string(),\n    \"2018-01-11 00:00:00 UTC\"\n);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["duration",{"kind":"resolved_path","inner":{"name":"Duration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47753:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:2458:1905","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:1461:1355":{"id":"0:1461:1355","crate_id":0,"name":"sub","span":{"filename":"src/naive/datetime/mod.rs","begin":[1344,4],"end":[1346,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2409":{"id":"0:2409","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[491,43],"end":[491,49]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"offset::Offset","name":"Offset","id":"0:2372:1888","glob":false}},"b:2:2872-0:2659:2444":{"id":"b:2:2872-0:2659:2444","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:7071","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2659:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:5915"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3281:220-0:3377:1873":{"id":"a:2:3281:220-0:3377:1873","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Local","id":"0:3377:1873","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3729:224":{"id":"2:3729:224","crate_id":2,"name":"Try","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3730:181","2:3731:7111","2:3732:686","2:3733:369"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"FromResidual","id":"2:3734:137","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Try","id":"2:3729:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:3086:1883":{"id":"0:3086:1883","crate_id":0,"name":"FixedOffset","span":{"filename":"src/offset/fixed.rs","begin":[27,0],"end":[29,1]},"visibility":"public","docs":"The time zone with fixed offset, from UTC-23:59:59 to UTC+23:59:59.\n\nUsing the [`TimeZone`](./trait.TimeZone.html) methods\non a `FixedOffset` struct is the preferred way to construct\n`DateTime<FixedOffset>` instances. See the [`east`](#method.east) and\n[`west`](#method.west) methods for examples.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:1838","a:2:3310:7473-0:3086:1883","a:2:9408:7639-0:3086:1883","a:2:3269:211-0:3086:1883","a:2:9407:7640-0:3086:1883","a:2:3281:220-0:3086:1883","b:2:2869-0:3086:1883","b:2:4002-0:3086:1883","b:2:3198-0:3086:1883","b:2:2872-0:3086:1883","b:2:3208-0:3086:1883","b:2:3202-0:3086:1883","b:2:3213-0:3086:1883","b:5:787-0:3086:1883","b:5:6420-0:3086:1883","0:3088","0:3089","0:3091","0:3092","0:3094","0:3097","0:3098","0:1845","0:1852","0:1854","0:1856","0:1860","0:1863","0:1866","0:1869","0:1872","0:1876"]}},"2:13665:64784":{"id":"2:13665:64784","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:220-0:3052:1901":{"id":"a:2:3281:220-0:3052:1901","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IsoWeek","id":"0:3052:1901","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:387:2140":{"id":"0:387:2140","crate_id":0,"name":"checked_add_signed","span":{"filename":"src/datetime/mod.rs","begin":[326,4],"end":[330,5]},"visibility":"public","docs":"Adds given `Duration` to the current date and time.\n\nReturns `None` when it will result in overflow.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3071":{"id":"0:3071","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[190,9],"end":[190,18]},"visibility":{"restricted":{"parent":"0:1586:1556","path":"::naive::time"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3072:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3202-0:3428:1906":{"id":"b:2:3202-0:3428:1906","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RoundingError","id":"0:3428:1906","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13587:304":{"id":"2:13587:304","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"`u8`":"1:16003:6937","str::as_mut_ptr":"1:15992:6928"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"rustc_str_as_ptr\", since = \"1.32.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:220-0:2831:1898":{"id":"a:2:3281:220-0:2831:1898","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2831:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1655:2101":{"id":"0:1655:2101","crate_id":0,"name":"from_hms_milli_opt","span":{"filename":"src/naive/time/mod.rs","begin":[292,4],"end":[296,5]},"visibility":"public","docs":"Makes a new `NaiveTime` from hour, minute, second and millisecond.\n\nThe millisecond part can exceed 1,000\nin order to represent the [leap second](#leap-second-handling).\n\nReturns `None` on invalid hour, minute, second and/or millisecond.\n\n# Example\n\n```\nuse chrono::NaiveTime;\n\nlet from_hmsm_opt = NaiveTime::from_hms_milli_opt;\n\nassert!(from_hmsm_opt(0, 0, 0, 0).is_some());\nassert!(from_hmsm_opt(23, 59, 59, 999).is_some());\nassert!(from_hmsm_opt(23, 59, 59, 1_999).is_some()); // a leap second after 23:59:59\nassert!(from_hmsm_opt(24, 0, 0, 0).is_none());\nassert!(from_hmsm_opt(23, 60, 0, 0).is_none());\nassert!(from_hmsm_opt(23, 59, 60, 0).is_none());\nassert!(from_hmsm_opt(23, 59, 59, 2_000).is_none());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["hour",{"kind":"primitive","inner":"u32"}],["min",{"kind":"primitive","inner":"u32"}],["sec",{"kind":"primitive","inner":"u32"}],["milli",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1795:5699":{"id":"0:1795:5699","crate_id":0,"name":"fixed","span":{"filename":"src/offset/fixed.rs","begin":[4,0],"end":[248,1]},"visibility":{"restricted":{"parent":"0:1758:957","path":"::offset"}},"docs":"The time zone which has a fixed offset from UTC.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:3086:1883"],"is_stripped":true}},"0:1842:5840":{"id":"0:1842:5840","crate_id":0,"name":"west_opt","span":{"filename":"src/offset/fixed.rs","begin":[84,4],"end":[90,5]},"visibility":"public","docs":"Makes a new `FixedOffset` for the Western Hemisphere with given timezone difference.\nThe negative `secs` means the Eastern Hemisphere.\n\nReturns `None` on the out-of-bound `secs`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["secs",{"kind":"primitive","inner":"i32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3499:2804":{"id":"0:3499:2804","crate_id":0,"name":"March","span":{"filename":"src/month.rs","begin":[39,4],"end":[39,13]},"visibility":"default","docs":"March","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"b:2:2872-0:2927:2039":{"id":"b:2:2872-0:2927:2039","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:7071","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2927:2039","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:2874:5915"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3443":{"id":"0:3443","crate_id":0,"name":null,"span":{"filename":"src/round.rs","begin":[241,34],"end":[241,36]},"visibility":{"restricted":{"parent":"0:2418:1904","path":"::round"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RoundingError","id":"0:3428:1906","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13673:6035":{"id":"2:13673:6035","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:15986:6923","self::pattern":"2:13202:1925"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13212:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:13232:7160","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:133:2078":{"id":"0:133:2078","crate_id":0,"name":"and_time","span":{"filename":"src/date.rs","begin":[87,4],"end":[90,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date and given `NaiveTime`.\nThe offset in the current date is preserved.\n\nPanics on invalid datetime.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["time",{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2356:2083":{"id":"0:2356:2083","crate_id":0,"name":"single","span":{"filename":"src/offset/mod.rs","begin":[54,4],"end":[59,5]},"visibility":"public","docs":"Returns `Some` only when the conversion result is unique, or `None` otherwise.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:787-0:2999:1886":{"id":"b:5:787-0:2999:1886","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:7921","5:790:7922","5:791:7923"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:541:681":{"id":"0:541:681","crate_id":0,"name":"from","span":{"filename":"src/datetime/mod.rs","begin":[983,4],"end":[994,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["dt",{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"SystemTime","id":"1:12281:2234","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2755:604":{"id":"0:2755:604","crate_id":0,"name":"eq","span":{"filename":"src/format/mod.rs","begin":[181,16],"end":[181,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2713:2238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1733":{"id":"0:1733","crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[19,54],"end":[19,66]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"self::datetime::MIN_DATETIME","name":"MIN_DATETIME","id":"0:1386:1896","glob":false}},"0:2885:2190":{"id":"0:2885:2190","crate_id":0,"name":"ordinal","span":{"filename":"src/format/parsed.rs","begin":[80,4],"end":[80,28]},"visibility":"public","docs":"Day of the year (1--365 or 1--366 depending on the year).","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u32"}}],"bindings":[]}}}}},"b:2:2872-0:3067:1887":{"id":"b:2:2872-0:3067:1887","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:7071","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:5915"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2618":{"id":"0:2618","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[52,33],"end":[52,42]},"visibility":{"restricted":{"parent":"0:256:1893","path":"::datetime"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SecondsFormat","id":"0:2597:1878","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2846:2739":{"id":"0:2846:2739","crate_id":0,"name":"OutOfRange","span":{"filename":"src/format/mod.rs","begin":[350,4],"end":[350,14]},"visibility":"default","docs":"Given field is out of permitted range.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:1425:1907":{"id":"0:1425:1907","crate_id":0,"name":"weekday","span":{"filename":"src/naive/datetime/mod.rs","begin":[898,4],"end":[900,5]},"visibility":"default","docs":"Returns the day of week.\n\nSee also the [`NaiveDate::weekday`](./struct.NaiveDate.html#method.weekday) method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Datelike, Weekday};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 25).and_hms(12, 34, 56);\nassert_eq!(dt.weekday(), Weekday::Fri);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:3446:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3095:715":{"id":"0:3095:715","crate_id":0,"name":"hash","span":{"filename":"src/offset/fixed.rs","begin":[25,24],"end":[25,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10688:146","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2292:2137":{"id":"0:2292:2137","crate_id":0,"name":"from_utc_date","span":{"filename":"src/offset/local/mod.rs","begin":[144,4],"end":[147,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["utc",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Local","id":"0:3377:1873","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13682:60414":{"id":"2:13682:60414","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:15986:6923","self::pattern":"2:13202:1925"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["suffix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13212:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13227:7161","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3274:5720":{"id":"2:3274:5720","crate_id":2,"name":"Sized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3213-0:2590:1872":{"id":"b:2:3213-0:2590:1872","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"23:466:2446":{"id":"23:466:2446","crate_id":23,"name":"Zero","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:467:4503","23:468:66625","23:469:8261"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Add","id":"2:3337:2031","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:1465:181":{"id":"0:1465:181","crate_id":0,"name":"Output","span":{"filename":"src/naive/datetime/mod.rs","begin":[1396,4],"end":[1396,30]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Duration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:3417:7097":{"id":"2:3417:7097","crate_id":2,"name":"Shr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3419:181","2:3420:1236"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2504:6717":{"id":"0:2504:6717","crate_id":0,"name":"from_i64","span":{"filename":"src/weekday.rs","begin":[160,4],"end":[171,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["n",{"kind":"primitive","inner":"i64"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:3446:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2389:5785":{"id":"0:2389:5785","crate_id":0,"name":"offset_from_local_date","span":{"filename":"src/offset/mod.rs","begin":[438,4],"end":[438,85]},"visibility":"default","docs":"Creates the offset(s) for given local `NaiveDate` if possible.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["local",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3395:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:2374:1889","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2869":{"id":"0:2869","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[347,34],"end":[347,36]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3278:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2845:2736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3310:7473-0:2908:2041":{"id":"a:2:3310:7473-0:2908:2041","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:7473","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2908:2041","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2869-0:3086:1883":{"id":"b:2:2869-0:3086:1883","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:2030"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2297:5700":{"id":"0:2297:5700","crate_id":0,"name":"utc","span":{"filename":"src/offset/utc.rs","begin":[4,0],"end":[116,1]},"visibility":{"restricted":{"parent":"0:1758:957","path":"::offset"}},"docs":"The UTC (Coordinated Universal Time) time zone.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:3384:1884"],"is_stripped":true}},"a:2:9407:7640-0:3384:1884":{"id":"a:2:9407:7640-0:3384:1884","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9407:7640","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:3384:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3409":{"id":"0:3409","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[40,16],"end":[40,25]},"visibility":{"restricted":{"parent":"0:1758:957","path":"::offset"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3395:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3208-0:2590:1872":{"id":"b:2:3208-0:2590:1872","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3208-0:2845:2736":{"id":"b:2:3208-0:2845:2736","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2845:2736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3485:408":{"id":"0:3485:408","crate_id":0,"name":"clone","span":{"filename":"src/weekday.rs","begin":[189,9],"end":[189,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:3482:1908","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1466:1355":{"id":"0:1466:1355","crate_id":0,"name":"sub","span":{"filename":"src/naive/datetime/mod.rs","begin":[1399,4],"end":[1401,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:31":{"id":"0:31","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[457,37],"end":[457,45]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::Timelike","name":"Timelike","id":"0:2572:1881","glob":false}},"2:13659:64782":{"id":"2:13659:64782","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:13202:1925","prim@char":"1:15986:6923","`DoubleEndedIterator`":"2:8591:120","str::rmatch_indices":"1:15992:6928"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"MatchIndices","id":"2:49741:7181","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13609:2847":{"id":"2:13609:2847","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:15986:6923","self::pattern":"2:13202:1925"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2944":{"id":"0:2944","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[166,9],"end":[166,18]},"visibility":{"restricted":{"parent":"0:1062:1890","path":"::naive::date"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2945:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:146:2120":{"id":"0:146:2120","crate_id":0,"name":"succ","span":{"filename":"src/date.rs","begin":[192,4],"end":[194,5]},"visibility":"public","docs":"Makes a new `Date` for the next date.\n\nPanics when `self` is the last representable date.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1266:1355":{"id":"0:1266:1355","crate_id":0,"name":"sub","span":{"filename":"src/naive/date.rs","begin":[1780,4],"end":[1782,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4002-0:3543:1910":{"id":"b:2:4002-0:3543:1910","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Months","id":"0:3543:1910","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13703:64791":{"id":"2:13703:64791","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"1:15986:6923"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeUnicode","id":"2:49908:7186","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1180:2221":{"id":"0:1180:2221","crate_id":0,"name":"from_ymd","span":{"filename":"src/naive/date.rs","begin":[243,4],"end":[245,5]},"visibility":"public","docs":"Makes a new `NaiveDate` from the [calendar date](#calendar-date)\n(year, month and day).\n\nPanics on the out-of-range date, invalid month and/or day.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike, Weekday};\n\nlet d = NaiveDate::from_ymd(2015, 3, 14);\nassert_eq!(d.year(), 2015);\nassert_eq!(d.month(), 3);\nassert_eq!(d.day(), 14);\nassert_eq!(d.ordinal(), 73); // day of year\nassert_eq!(d.iso_week().year(), 2015);\nassert_eq!(d.iso_week().week(), 11);\nassert_eq!(d.weekday(), Weekday::Sat);\nassert_eq!(d.num_days_from_ce(), 735671); // days since January 1, 1 CE\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["year",{"kind":"primitive","inner":"i32"}],["month",{"kind":"primitive","inner":"u32"}],["day",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9408:7639-0:2713:2238":{"id":"a:2:9408:7639-0:2713:2238","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9408:7639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2713:2238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13232:7160":{"id":"2:13232:7160","crate_id":2,"name":"DoubleEndedSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13227:7161","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:5807:8537":{"id":"1:5807:8537","crate_id":1,"name":"DirEntryExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5808:62077"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1286:126":{"id":"0:1286:126","crate_id":0,"name":"Err","span":{"filename":"src/naive/date.rs","begin":[1944,4],"end":[1944,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2831:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:783:3017":{"id":"0:783:3017","crate_id":0,"name":"set_hour","span":{"filename":"src/format/parsed.rs","begin":[244,4],"end":[249,5]},"visibility":"public","docs":"Tries to set both [`hour_div_12`](#structfield.hour_div_12) and\n[`hour_mod_12`](#structfield.hour_mod_12) fields from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["value",{"kind":"primitive","inner":"i64"}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:632:1899","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:220-0:2999:1886":{"id":"a:2:3281:220-0:2999:1886","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2291:2082":{"id":"0:2291:2082","crate_id":0,"name":"from_local_datetime","span":{"filename":"src/offset/local/mod.rs","begin":[140,4],"end":[142,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(all(target_arch = \"wasm32\", feature = \"wasmbind\",\nnot(any(target_os = \"emscripten\", target_os = \"wasi\")))))]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["local",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3395:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Local","id":"0:3377:1873","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2869-0:2927:2039":{"id":"b:2:2869-0:2927:2039","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2927:2039","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:2871:2030"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3076":{"id":"0:3076","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[190,24],"end":[190,28]},"visibility":{"restricted":{"parent":"0:1586:1556","path":"::naive::time"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10678:142","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3077:715"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13598:64775":{"id":"2:13598:64775","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"crate::ops::IndexMut":"2:3581:7106","`str`":"1:15992:6928","str::slice_unchecked":"1:15992:6928"},"attrs":["#[stable(feature = \"str_slice_mut\", since = \"1.5.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3208-0:2999:1886":{"id":"b:2:3208-0:2999:1886","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:637:2766":{"id":"0:637:2766","crate_id":0,"name":"description","span":{"filename":"src/format/mod.rs","begin":[403,4],"end":[405,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3057":{"id":"0:3057","crate_id":0,"name":null,"span":{"filename":"src/naive/isoweek.rs","begin":[19,20],"end":[19,22]},"visibility":{"restricted":{"parent":"0:1565:2959","path":"::naive::isoweek"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3278:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IsoWeek","id":"0:3052:1901","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1244:2196":{"id":"0:1244:2196","crate_id":0,"name":"with_day","span":{"filename":"src/naive/date.rs","begin":[1550,4],"end":[1552,5]},"visibility":"default","docs":"Makes a new `NaiveDate` with the day of month (starting from 1) changed.\n\nReturns `None` when the resulting `NaiveDate` would be invalid.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(NaiveDate::from_ymd(2015, 9, 8).with_day(30),\n           Some(NaiveDate::from_ymd(2015, 9, 30)));\nassert_eq!(NaiveDate::from_ymd(2015, 9, 8).with_day(31),\n           None); // no September 31\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["day",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1690":{"id":"0:1690","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[1065,0],"end":[1072,1]},"visibility":{"restricted":{"parent":"0:1586:1556","path":"::naive::time"}},"docs":"An addition of `Duration` to `NaiveTime` wraps around and never overflows or underflows.\nIn particular the addition ignores integral number of days.\n\nAs a part of Chrono's [leap second handling](#leap-second-handling),\nthe addition assumes that **there is no leap second ever**,\nexcept when the `NaiveTime` itself represents a leap second\nin which case the assumption becomes that **there is exactly a single leap second ever**.\n\n# Example\n\n```\nuse chrono::{Duration, NaiveTime};\n\nlet from_hmsm = NaiveTime::from_hms_milli;\n\nassert_eq!(from_hmsm(3, 5, 7, 0) + Duration::zero(),                  from_hmsm(3, 5, 7, 0));\nassert_eq!(from_hmsm(3, 5, 7, 0) + Duration::seconds(1),              from_hmsm(3, 5, 8, 0));\nassert_eq!(from_hmsm(3, 5, 7, 0) + Duration::seconds(-1),             from_hmsm(3, 5, 6, 0));\nassert_eq!(from_hmsm(3, 5, 7, 0) + Duration::seconds(60 + 4),         from_hmsm(3, 6, 11, 0));\nassert_eq!(from_hmsm(3, 5, 7, 0) + Duration::seconds(7*60*60 - 6*60), from_hmsm(9, 59, 7, 0));\nassert_eq!(from_hmsm(3, 5, 7, 0) + Duration::milliseconds(80),        from_hmsm(3, 5, 7, 80));\nassert_eq!(from_hmsm(3, 5, 7, 950) + Duration::milliseconds(280),     from_hmsm(3, 5, 8, 230));\nassert_eq!(from_hmsm(3, 5, 7, 950) + Duration::milliseconds(-980),    from_hmsm(3, 5, 6, 970));\n```\n\nThe addition wraps around.\n\n```\n# use chrono::{Duration, NaiveTime};\n# let from_hmsm = NaiveTime::from_hms_milli;\nassert_eq!(from_hmsm(3, 5, 7, 0) + Duration::seconds(22*60*60), from_hmsm(1, 5, 7, 0));\nassert_eq!(from_hmsm(3, 5, 7, 0) + Duration::seconds(-8*60*60), from_hmsm(19, 5, 7, 0));\nassert_eq!(from_hmsm(3, 5, 7, 0) + Duration::days(800),         from_hmsm(3, 5, 7, 0));\n```\n\nLeap seconds are handled, but the addition assumes that it is the only leap second happened.\n\n```\n# use chrono::{Duration, NaiveTime};\n# let from_hmsm = NaiveTime::from_hms_milli;\nlet leap = from_hmsm(3, 5, 59, 1_300);\nassert_eq!(leap + Duration::zero(),             from_hmsm(3, 5, 59, 1_300));\nassert_eq!(leap + Duration::milliseconds(-500), from_hmsm(3, 5, 59, 800));\nassert_eq!(leap + Duration::milliseconds(500),  from_hmsm(3, 5, 59, 1_800));\nassert_eq!(leap + Duration::milliseconds(800),  from_hmsm(3, 6, 0, 100));\nassert_eq!(leap + Duration::seconds(10),        from_hmsm(3, 6, 9, 300));\nassert_eq!(leap + Duration::seconds(-10),       from_hmsm(3, 5, 50, 300));\nassert_eq!(leap + Duration::days(1),            from_hmsm(3, 5, 59, 300));\n```","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Add","id":"2:3337:2031","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Duration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1691:181","0:1692:265"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:5:787-0:614:2656":{"id":"b:5:787-0:614:2656","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:614:2656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:7921","5:790:7922","5:791:7923"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2728:2460":{"id":"0:2728:2460","crate_id":0,"name":"Nanosecond3","span":{"filename":"src/format/mod.rs","begin":[212,4],"end":[212,15]},"visibility":"default","docs":"Same as [`Nanosecond`](#variant.Nanosecond) but the accuracy is fixed to 3.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:13638:64778":{"id":"2:13638:64778","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"str::split":"1:15992:6928","self::pattern":"2:13202:1925","str::split_terminator":"1:15992:6928","prim@char":"1:15986:6923"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitTerminator","id":"2:49659:7174","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13212:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13227:7161","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3172:149":{"id":"2:3172:149","crate_id":2,"name":"Into","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3174:2536"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9407:7640-0:3482:1908":{"id":"a:2:9407:7640-0:3482:1908","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9407:7640","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:3482:1908","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:141:2107":{"id":"0:141:2107","crate_id":0,"name":"and_hms_micro_opt","span":{"filename":"src/date.rs","begin":[152,4],"end":[160,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date, hour, minute, second and microsecond.\nThe microsecond part can exceed 1,000,000 in order to represent the leap second.\nThe offset in the current date is preserved.\n\nReturns `None` on invalid hour, minute, second and/or microsecond.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["hour",{"kind":"primitive","inner":"u32"}],["min",{"kind":"primitive","inner":"u32"}],["sec",{"kind":"primitive","inner":"u32"}],["micro",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2341:5785":{"id":"0:2341:5785","crate_id":0,"name":"offset_from_local_date","span":{"filename":"src/offset/utc.rs","begin":[85,4],"end":[87,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["_local",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3395:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:3384:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:218":{"id":"0:218","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[476,0],"end":[480,1]},"visibility":{"restricted":{"parent":"0:61:1890","path":"::date"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:2374:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10678:142","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:220:715"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3011":{"id":"0:3011","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[74,30],"end":[74,40]},"visibility":{"restricted":{"parent":"0:1291:1893","path":"::naive::datetime"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["le","ge","lt","gt"],"trait":{"name":"PartialOrd","id":"2:2967:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3012:997"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1051":{"id":"0:1051","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[947,0],"end":[971,1]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":"Parsing a `str` into a `Month` uses the format [`%W`](./format/strftime/index.html).\n\n# Example\n\n```\nuse chrono::Month;\n\nassert_eq!(\"January\".parse::<Month>(), Ok(Month::January));\nassert!(\"any day\".parse::<Month>().is_err());\n```\n\nThe parsing is case-insensitive.\n\n```\n# use chrono::Month;\nassert_eq!(\"fEbruARy\".parse::<Month>(), Ok(Month::February));\n```\n\nOnly the shortest form (e.g. `jan`) and the longest form (e.g. `january`) is accepted.\n\n```\n# use chrono::Month;\nassert!(\"septem\".parse::<Month>().is_err());\nassert!(\"Augustin\".parse::<Month>().is_err());\n```","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:13141:2501","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:3492:1880","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1052:126","0:1053:2502"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1458:266":{"id":"0:1458:266","crate_id":0,"name":"add_assign","span":{"filename":"src/naive/datetime/mod.rs","begin":[1287,4],"end":[1289,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4002-0:2641:2445":{"id":"b:2:4002-0:2641:2445","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2641:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1407:2167":{"id":"0:1407:2167","crate_id":0,"name":"format_with_items","span":{"filename":"src/naive/datetime/mod.rs","begin":[680,4],"end":[686,5]},"visibility":"public","docs":"Formats the combined date and time with the specified formatting items.\nOtherwise it is the same as the ordinary [`format`](#method.format) method.\n\nThe `Iterator` of items should be `Clone`able,\nsince the resulting `DelayedFormat` value may be formatted multiple times.\n\n# Example\n\n```\nuse chrono::NaiveDate;\nuse chrono::format::strftime::StrftimeItems;\n\nlet fmt = StrftimeItems::new(\"%Y-%m-%d %H:%M:%S\");\nlet dt = NaiveDate::from_ymd(2015, 9, 5).and_hms(23, 56, 4);\nassert_eq!(dt.format_with_items(fmt.clone()).to_string(), \"2015-09-05 23:56:04\");\nassert_eq!(dt.format(\"%Y-%m-%d %H:%M:%S\").to_string(),    \"2015-09-05 23:56:04\");\n```\n\nThe resulting `DelayedFormat` can be formatted directly via the `Display` trait.\n\n```\n# use chrono::NaiveDate;\n# use chrono::format::strftime::StrftimeItems;\n# let fmt = StrftimeItems::new(\"%Y-%m-%d %H:%M:%S\").clone();\n# let dt = NaiveDate::from_ymd(2015, 9, 5).and_hms(23, 56, 4);\nassert_eq!(format!(\"{}\", dt.format_with_items(fmt)), \"2015-09-05 23:56:04\");\n```","links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["items",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2927:2039","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8748:157","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"B"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2792:2040","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6114:61476":{"id":"5:6114:61476","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"1:15992:6928"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1699:1356":{"id":"0:1699:1356","crate_id":0,"name":"sub_assign","span":{"filename":"src/naive/time/mod.rs","begin":[1137,4],"end":[1139,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:773:2993":{"id":"0:773:2993","crate_id":0,"name":"set_isoyear_mod_100","span":{"filename":"src/format/parsed.rs","begin":[175,4],"end":[180,5]},"visibility":"public","docs":"Tries to set the [`isoyear_mod_100`](#structfield.isoyear_mod_100) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["value",{"kind":"primitive","inner":"i64"}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:632:1899","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2705":{"id":"0:2705","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[97,16],"end":[97,25]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2659:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2869-0:2597:1878":{"id":"b:2:2869-0:2597:1878","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SecondsFormat","id":"0:2597:1878","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:2030"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:398":{"id":"0:398","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[391,0],"end":[395,1]},"visibility":{"restricted":{"parent":"0:256:1893","path":"::datetime"}},"docs":null,"links":{},"attrs":["#[cfg(feature = \"clock\")]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3247:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Local","id":"0:3377:1873","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:399:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2349":{"id":"0:2349","crate_id":0,"name":null,"span":{"filename":"src/offset/utc.rs","begin":[112,0],"end":[116,1]},"visibility":{"restricted":{"parent":"0:2297:5700","path":"::offset::utc"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10447:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:3384:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2350:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2659:2444":{"id":"0:2659:2444","crate_id":0,"name":"Numeric","span":{"filename":"src/format/mod.rs","begin":[98,0],"end":[150,1]},"visibility":"public","docs":"Numeric item types.\nThey have associated formatting width (FW) and parsing width (PW).\n\nThe **formatting width** is the minimal width to be formatted.\nIf the number is too short, and the padding is not [`Pad::None`](./enum.Pad.html#variant.None),\nthen it is left-padded.\nIf the number is too long or (in some cases) negative, it is printed as is.\n\nThe **parsing width** is the maximal width to be scanned.\nThe parser only tries to consume from one to given number of digits (greedily).\nIt also trims the preceding whitespace if any.\nIt cannot parse the negative number, so some date and time cannot be formatted then\nparsed with the same formatting items.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:2660:2450","0:2662:2619","0:2664:2621","0:2666:2623","0:2668:2625","0:2670:2627","0:2672:1880","0:2674:2453","0:2676:2631","0:2678:2633","0:2680:1901","0:2682:2636","0:2684:2638","0:2686:2640","0:2688:2455","0:2690:2643","0:2692:2457","0:2694:2458","0:2696:2463","0:2698:2651","0:2700:2655"],"impls":["a:2:3310:7473-0:2659:2444","a:2:9408:7639-0:2659:2444","a:2:3269:211-0:2659:2444","a:2:9407:7640-0:2659:2444","a:2:3281:220-0:2659:2444","b:2:2869-0:2659:2444","b:2:4002-0:2659:2444","b:2:3198-0:2659:2444","b:2:2872-0:2659:2444","b:2:3208-0:2659:2444","b:2:3202-0:2659:2444","b:2:3213-0:2659:2444","b:5:787-0:2659:2444","0:2703","0:2705","0:2706","0:2708","0:2709","0:2711"]}},"2:3492:116":{"id":"2:3492:116","crate_id":2,"name":"Deref","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3493:221","2:3494:543"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1398:2321":{"id":"0:1398:2321","crate_id":0,"name":"timestamp_millis","span":{"filename":"src/naive/datetime/mod.rs","begin":[325,4],"end":[328,5]},"visibility":"public","docs":"Returns the number of non-leap *milliseconds* since midnight on January 1, 1970.\n\nNote that this does *not* account for the timezone!\nThe true \"UNIX timestamp\" would count seconds since the midnight *UTC* on the epoch.\n\nNote also that this does reduce the number of years that can be\nrepresented from ~584 Billion to ~584 Million. (If this is a problem,\nplease file an issue to let me know what domain needs millisecond\nprecision over billions of years, I'm curious.)\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet dt = NaiveDate::from_ymd(1970, 1, 1).and_hms_milli(0, 0, 1, 444);\nassert_eq!(dt.timestamp_millis(), 1_444);\n\nlet dt = NaiveDate::from_ymd(2001, 9, 9).and_hms_milli(1, 46, 40, 555);\nassert_eq!(dt.timestamp_millis(), 1_000_000_000_555);\n\nlet dt = NaiveDate::from_ymd(1969, 12, 31).and_hms_milli(23, 59, 59, 100);\nassert_eq!(dt.timestamp_millis(), -900);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2678:2633":{"id":"0:2678:2633","crate_id":0,"name":"WeekFromMon","span":{"filename":"src/format/mod.rs","begin":[120,4],"end":[120,15]},"visibility":"default","docs":"Week number, where the week 1 starts at the first Monday of January (FW=PW=2).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"b:2:3198-0:2936:1902":{"id":"b:2:3198-0:2936:1902","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveWeek","id":"0:2936:1902","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:2536"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3208-0:614:2656":{"id":"b:2:3208-0:614:2656","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:614:2656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2941:1885":{"id":"0:2941:1885","crate_id":0,"name":"NaiveDate","span":{"filename":"src/naive/date.rs","begin":[168,0],"end":[170,1]},"visibility":"public","docs":"ISO 8601 calendar date without timezone.\nAllows for every [proleptic Gregorian date](#calendar-date)\nfrom Jan 1, 262145 BCE to Dec 31, 262143 CE.\nAlso supports the conversion from ISO 8601 ordinal and week date.\n\n# Calendar Date\n\nThe ISO 8601 **calendar date** follows the proleptic Gregorian calendar.\nIt is like a normal civil calendar but note some slight differences:\n\n* Dates before the Gregorian calendar's inception in 1582 are defined via the extrapolation.\n  Be careful, as historical dates are often noted in the Julian calendar and others\n  and the transition to Gregorian may differ across countries (as late as early 20C).\n\n  (Some example: Both Shakespeare from Britain and Cervantes from Spain seemingly died\n  on the same calendar date---April 23, 1616---but in the different calendar.\n  Britain used the Julian calendar at that time, so Shakespeare's death is later.)\n\n* ISO 8601 calendars has the year 0, which is 1 BCE (a year before 1 CE).\n  If you need a typical BCE/BC and CE/AD notation for year numbers,\n  use the [`Datelike::year_ce`](../trait.Datelike.html#method.year_ce) method.\n\n# Week Date\n\nThe ISO 8601 **week date** is a triple of year number, week number\nand [day of the week](../enum.Weekday.html) with the following rules:\n\n* A week consists of Monday through Sunday, and is always numbered within some year.\n  The week number ranges from 1 to 52 or 53 depending on the year.\n\n* The week 1 of given year is defined as the first week containing January 4 of that year,\n  or equivalently, the first week containing four or more days in that year.\n\n* The year number in the week date may *not* correspond to the actual Gregorian year.\n  For example, January 3, 2016 (Sunday) was on the last (53rd) week of 2015.\n\nChrono's date types default to the ISO 8601 [calendar date](#calendar-date),\nbut [`Datelike::iso_week`](../trait.Datelike.html#tymethod.iso_week) and\n[`Datelike::weekday`](../trait.Datelike.html#tymethod.weekday) methods\ncan be used to get the corresponding week date.\n\n# Ordinal Date\n\nThe ISO 8601 **ordinal date** is a pair of year number and day of the year (\"ordinal\").\nThe ordinal number ranges from 1 to 365 or 366 depending on the year.\nThe year number is the same as that of the [calendar date](#calendar-date).\n\nThis is currently the internal format of Chrono's date types.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:1177","a:2:3310:7473-0:2941:1885","a:2:9408:7639-0:2941:1885","a:2:3269:211-0:2941:1885","a:2:9407:7640-0:2941:1885","a:2:3281:220-0:2941:1885","b:2:2869-0:2941:1885","b:2:4002-0:2941:1885","b:2:3198-0:2941:1885","b:2:2872-0:2941:1885","b:2:3208-0:2941:1885","b:2:3202-0:2941:1885","b:2:3213-0:2941:1885","b:5:787-0:2941:1885","b:5:6420-0:2941:1885","0:2943","0:2944","0:2946","0:2947","0:2949","0:2952","0:2954","0:2956","0:2957","0:1231","0:1248","0:1251","0:1253","0:1256","0:1259","0:1262","0:1264","0:1281","0:1283","0:1285","0:1289"]}},"0:1666:4823":{"id":"0:1666:4823","crate_id":0,"name":"overflowing_sub_signed","span":{"filename":"src/naive/time/mod.rs","begin":[622,4],"end":[625,5]},"visibility":"public","docs":"Subtracts given `Duration` from the current time,\nand also returns the number of *seconds*\nin the integral number of days ignored from the subtraction.\n(We cannot return `Duration` because it is subject to overflow or underflow.)\n\n# Example\n\n```\nuse chrono::{Duration, NaiveTime};\n\nlet from_hms = NaiveTime::from_hms;\n\nassert_eq!(from_hms(3, 4, 5).overflowing_sub_signed(Duration::hours(2)),\n           (from_hms(1, 4, 5), 0));\nassert_eq!(from_hms(3, 4, 5).overflowing_sub_signed(Duration::hours(17)),\n           (from_hms(10, 4, 5), 86_400));\nassert_eq!(from_hms(3, 4, 5).overflowing_sub_signed(Duration::hours(-22)),\n           (from_hms(1, 4, 5), -86_400));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"tuple","inner":[{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},{"kind":"primitive","inner":"i64"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1263:1356":{"id":"0:1263:1356","crate_id":0,"name":"sub_assign","span":{"filename":"src/naive/date.rs","begin":[1747,4],"end":[1749,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:6420-0:2590:1872":{"id":"b:5:6420-0:2590:1872","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10447:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:6418:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["5:6422:1397"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2345":{"id":"0:2345","crate_id":0,"name":null,"span":{"filename":"src/offset/utc.rs","begin":[100,0],"end":[104,1]},"visibility":{"restricted":{"parent":"0:2297:5700","path":"::offset::utc"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Offset","id":"0:2372:1888","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:3384:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2346:2289"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2898":{"id":"0:2898","crate_id":0,"name":null,"span":{"filename":"src/format/parsed.rs","begin":[25,16],"end":[25,25]},"visibility":{"restricted":{"parent":"0:705:2399","path":"::format::parsed"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Parsed","id":"0:2873:2237","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Parsed","id":"0:2873:2237","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2899:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:25":{"id":"0:25","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[457,20],"end":[457,28]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::Datelike","name":"Datelike","id":"0:2553:1879","glob":false}},"b:2:4002-0:3446:1882":{"id":"b:2:4002-0:3446:1882","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:3446:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1043":{"id":"0:1043","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[827,0],"end":[845,1]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8748:157","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"B"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2792:2040","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10447:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2927:2039","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:1047:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1174:2224":{"id":"0:1174:2224","crate_id":0,"name":"days","span":{"filename":"src/naive/date.rs","begin":[113,4],"end":[115,5]},"visibility":"public","docs":"Returns a [`RangeInclusive<T>`] representing the whole week bounded by\n[first_day](./struct.NaiveWeek.html#method.first_day) and\n[last_day](./struct.NaiveWeek.html#method.last_day) functions.\n\n# Examples\n\n```\nuse chrono::{NaiveDate, Weekday};\n\nlet date = NaiveDate::from_ymd(2022, 4, 18);\nlet week = date.week(Weekday::Mon);\nlet days = week.days();\nassert!(days.contains(&date));\n```","links":{"`RangeInclusive<T>`":"2:46073:197"},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"RangeInclusive","id":"2:46073:197","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3269:211-0:3377:1873":{"id":"a:2:3269:211-0:3377:1873","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Local","id":"0:3377:1873","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2883:2959":{"id":"0:2883:2959","crate_id":0,"name":"isoweek","span":{"filename":"src/format/parsed.rs","begin":[74,4],"end":[74,28]},"visibility":"public","docs":"[ISO week number](../naive/struct.NaiveDate.html#week-date)\n(1--52 or 1--53 depending on the year).","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u32"}}],"bindings":[]}}}}},"2:23248:21420":{"id":"2:23248:21420","crate_id":2,"name":"ToBitMask","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23249:12269","2:23250:63302","2:23251:63303"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:23241:8515","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:3269:211-0:3446:1882":{"id":"a:2:3269:211-0:3446:1882","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:3446:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:9031:8113":{"id":"2:9031:8113","crate_id":2,"name":"TrustedLen","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8748:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:458:2195":{"id":"0:458:2195","crate_id":0,"name":"with_month0","span":{"filename":"src/datetime/mod.rs","begin":[744,4],"end":[746,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["month0",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4002-0:2659:2444":{"id":"b:2:4002-0:2659:2444","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2659:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1856":{"id":"0:1856","crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[147,0],"end":[151,1]},"visibility":{"restricted":{"parent":"0:1795:5699","path":"::offset::fixed"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10447:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1857:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3073":{"id":"0:3073","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[190,20],"end":[190,22]},"visibility":{"restricted":{"parent":"0:1586:1556","path":"::naive::time"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3278:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1658:2109":{"id":"0:1658:2109","crate_id":0,"name":"from_hms_micro_opt","span":{"filename":"src/naive/time/mod.rs","begin":[344,4],"end":[346,5]},"visibility":"public","docs":"Makes a new `NaiveTime` from hour, minute, second and microsecond.\n\nThe microsecond part can exceed 1,000,000\nin order to represent the [leap second](#leap-second-handling).\n\nReturns `None` on invalid hour, minute, second and/or microsecond.\n\n# Example\n\n```\nuse chrono::NaiveTime;\n\nlet from_hmsu_opt = NaiveTime::from_hms_micro_opt;\n\nassert!(from_hmsu_opt(0, 0, 0, 0).is_some());\nassert!(from_hmsu_opt(23, 59, 59, 999_999).is_some());\nassert!(from_hmsu_opt(23, 59, 59, 1_999_999).is_some()); // a leap second after 23:59:59\nassert!(from_hmsu_opt(24, 0, 0, 0).is_none());\nassert!(from_hmsu_opt(23, 60, 0, 0).is_none());\nassert!(from_hmsu_opt(23, 59, 60, 0).is_none());\nassert!(from_hmsu_opt(23, 59, 59, 2_000_000).is_none());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["hour",{"kind":"primitive","inner":"u32"}],["min",{"kind":"primitive","inner":"u32"}],["sec",{"kind":"primitive","inner":"u32"}],["micro",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3505:7103":{"id":"2:3505:7103","crate_id":2,"name":"DerefMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3506:545"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Deref","id":"2:3492:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:1040:920":{"id":"0:1040:920","crate_id":0,"name":"new","span":{"filename":"src/format/mod.rs","begin":[766,4],"end":[775,5]},"visibility":"public","docs":"Makes a new `DelayedFormat` value out of local date and time.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["date",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}],["time",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}],["items",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2927:2039","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2556:1909":{"id":"0:2556:1909","crate_id":0,"name":"month","span":{"filename":"src/traits.rs","begin":[23,4],"end":[23,27]},"visibility":"default","docs":"Returns the month number starting from 1.\n\nThe return value ranges from 1 to 12.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2465:126":{"id":"0:2465:126","crate_id":0,"name":"Err","span":{"filename":"src/round.rs","begin":[149,4],"end":[149,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"RoundingError","id":"0:3428:1906","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:2340:2131":{"id":"0:2340:2131","crate_id":0,"name":"from_offset","span":{"filename":"src/offset/utc.rs","begin":[81,4],"end":[83,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["_state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:3384:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:3384:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2505:6718":{"id":"0:2505:6718","crate_id":0,"name":"from_u64","span":{"filename":"src/weekday.rs","begin":[174,4],"end":[185,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["n",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:3446:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9407:7640-0:2590:1872":{"id":"a:2:9407:7640-0:2590:1872","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Tz"},"trait":{"name":"TimeZone","id":"0:2374:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9407:7640","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9407:7640","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3213-0:2597:1878":{"id":"b:2:3213-0:2597:1878","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SecondsFormat","id":"0:2597:1878","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3417":{"id":"0:3417","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[40,34],"end":[40,38]},"visibility":{"restricted":{"parent":"0:1758:957","path":"::offset"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::marker::Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3395:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1444:2478":{"id":"0:1444:2478","crate_id":0,"name":"second","span":{"filename":"src/naive/datetime/mod.rs","begin":[1112,4],"end":[1114,5]},"visibility":"default","docs":"Returns the second number from 0 to 59.\n\nSee also the [`NaiveTime::second`] method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Timelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 8).and_hms_milli(12, 34, 56, 789);\nassert_eq!(dt.second(), 56);\n```","links":{"`NaiveTime::second`":"0:3067:1887"},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:611":{"id":"0:611","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[63,0],"end":[63,32]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"strftime::StrftimeItems","name":"StrftimeItems","id":"0:2908:2041","glob":false}},"b:2:2872-0:2908:2041":{"id":"b:2:2872-0:2908:2041","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:7071","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2908:2041","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2874:5915"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3431:6601":{"id":"0:3431:6601","crate_id":0,"name":"DurationExceedsLimit","span":{"filename":"src/round.rs","begin":[267,4],"end":[267,24]},"visibility":"default","docs":"Error when `Duration.num_nanoseconds` exceeds the limit.\n\n``` rust\n# use chrono::{DateTime, DurationRound, Duration, RoundingError, TimeZone, Utc};\nlet dt = Utc.ymd(2260, 12, 31).and_hms_nano(23, 59, 59, 1_75_500_000);\n\nassert_eq!(\n    dt.duration_round(Duration::days(300 * 365)),\n    Err(RoundingError::DurationExceedsLimit)\n);\n```","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2878:2950":{"id":"0:2878:2950","crate_id":0,"name":"isoyear_div_100","span":{"filename":"src/format/parsed.rs","begin":[55,4],"end":[55,36]},"visibility":"public","docs":"Year in the [ISO week date](../naive/struct.NaiveDate.html#week-date), divided by 100.\nImplies that the year is >= 1 BCE when set.\n\nDue to the common usage, if this field is missing but\n[`isoyear_mod_100`](#structfield.isoyear_mod_100) is present,\nit is inferred to 19 when `isoyear_mod_100 >= 70` and 20 otherwise.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i32"}}],"bindings":[]}}}}},"0:2518:1909":{"id":"0:2518:1909","crate_id":0,"name":"month","span":{"filename":"src/month.rs","begin":[1,0],"end":[352,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:3492:1880","0:3543:1910","0:3562:1911"],"is_stripped":true}},"b:2:3208-0:2873:2237":{"id":"b:2:3208-0:2873:2237","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Parsed","id":"0:2873:2237","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2602:2250":{"id":"0:2602:2250","crate_id":0,"name":"Micros","span":{"filename":"src/datetime/mod.rs","begin":[63,4],"end":[63,10]},"visibility":"default","docs":"Use fixed 6 subsecond digits. This corresponds to\n[Fixed::Nanosecond6](format/enum.Fixed.html#variant.Nanosecond6).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2396:3098":{"id":"0:2396:3098","crate_id":0,"name":"offset_from_utc_datetime","span":{"filename":"src/offset/mod.rs","begin":[463,4],"end":[463,76]},"visibility":"default","docs":"Creates the offset for given UTC `NaiveDateTime`. This cannot fail.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["utc",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"qualified_path","inner":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:2374:1889","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:630":{"id":"0:630","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[339,0],"end":[344,1]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2831:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:631:782"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3399:3090":{"id":"0:3399:3090","crate_id":0,"name":"Single","span":{"filename":"src/offset/mod.rs","begin":[46,4],"end":[46,13]},"visibility":"default","docs":"Given local time representation has a single unique result.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"generic","inner":"T"}]}},"0:3397:174":{"id":"0:3397:174","crate_id":0,"name":"None","span":{"filename":"src/offset/mod.rs","begin":[44,4],"end":[44,8]},"visibility":"default","docs":"Given local time representation is invalid.\nThis can occur when, for example, the positive timezone transition.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:3558":{"id":"0:3558","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[193,39],"end":[193,48]},"visibility":{"restricted":{"parent":"0:2518:1909","path":"::month"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Months","id":"0:3543:1910","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Months","id":"0:3543:1910","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3559:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1201:2105":{"id":"0:1201:2105","crate_id":0,"name":"and_hms_micro","span":{"filename":"src/naive/date.rs","begin":[838,4],"end":[840,5]},"visibility":"public","docs":"Makes a new `NaiveDateTime` from the current date, hour, minute, second and microsecond.\n\nThe microsecond part can exceed 1,000,000\nin order to represent the [leap second](./struct.NaiveTime.html#leap-second-handling).\n\nPanics on invalid hour, minute, second and/or microsecond.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Datelike, Timelike, Weekday};\n\nlet d = NaiveDate::from_ymd(2015, 6, 3);\n\nlet dt: NaiveDateTime = d.and_hms_micro(12, 34, 56, 789_012);\nassert_eq!(dt.year(), 2015);\nassert_eq!(dt.weekday(), Weekday::Wed);\nassert_eq!(dt.second(), 56);\nassert_eq!(dt.nanosecond(), 789_012_000);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["hour",{"kind":"primitive","inner":"u32"}],["min",{"kind":"primitive","inner":"u32"}],["sec",{"kind":"primitive","inner":"u32"}],["micro",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3198-0:3428:1906":{"id":"b:2:3198-0:3428:1906","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RoundingError","id":"0:3428:1906","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:2536"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2288:3098":{"id":"0:2288:3098","crate_id":0,"name":"offset_from_utc_datetime","span":{"filename":"src/offset/local/mod.rs","begin":[109,4],"end":[111,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["utc",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3347:7086":{"id":"2:3347:7086","crate_id":2,"name":"Mul","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3349:181","2:3350:892"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:549":{"id":"0:549","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[474,29],"end":[474,42]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"datetime::SecondsFormat","name":"SecondsFormat","id":"0:2597:1878","glob":false}},"0:1235:2159":{"id":"0:1235:2159","crate_id":0,"name":"day","span":{"filename":"src/naive/date.rs","begin":[1366,4],"end":[1368,5]},"visibility":"default","docs":"Returns the day of month starting from 1.\n\nThe return value ranges from 1 to 31. (The last day of month differs by months.)\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(NaiveDate::from_ymd(2015, 9, 8).day(), 8);\nassert_eq!(NaiveDate::from_ymd(-308, 3, 14).day(), 14);\n```\n\nCombined with [`NaiveDate::pred`](#method.pred),\none can determine the number of days in a particular month.\n(Note that this panics when `year` is out of range.)\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nfn ndays_in_month(year: i32, month: u32) -> u32 {\n    // the first day of the next month...\n    let (y, m) = if month == 12 { (year + 1, 1) } else { (year, month + 1) };\n    let d = NaiveDate::from_ymd(y, m, 1);\n\n    // ...is preceded by the last day of the original month\n    d.pred().day()\n}\n\nassert_eq!(ndays_in_month(2015, 8), 31);\nassert_eq!(ndays_in_month(2015, 9), 30);\nassert_eq!(ndays_in_month(2015, 12), 31);\nassert_eq!(ndays_in_month(2016, 2), 29);\nassert_eq!(ndays_in_month(2017, 2), 28);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9407:7640-0:2659:2444":{"id":"a:2:9407:7640-0:2659:2444","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9407:7640","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2659:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2863:660":{"id":"0:2863:660","crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[347,9],"end":[347,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10400:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10389:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1841:2227":{"id":"0:1841:2227","crate_id":0,"name":"west","span":{"filename":"src/offset/fixed.rs","begin":[76,4],"end":[78,5]},"visibility":"public","docs":"Makes a new `FixedOffset` for the Western Hemisphere with given timezone difference.\nThe negative `secs` means the Eastern Hemisphere.\n\nPanics on the out-of-bound `secs`.\n\n# Example\n\n```\nuse chrono::{FixedOffset, TimeZone};\nlet hour = 3600;\nlet datetime = FixedOffset::west(5 * hour).ymd(2016, 11, 08)\n                                          .and_hms(0, 0, 0);\nassert_eq!(&datetime.to_rfc3339(), \"2016-11-08T00:00:00-05:00\")\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["secs",{"kind":"primitive","inner":"i32"}]],"output":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1693":{"id":"0:1693","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[1074,0],"end":[1079,1]},"visibility":{"restricted":{"parent":"0:1586:1556","path":"::naive::time"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AddAssign","id":"2:3368:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Duration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1694:266"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:389:2147":{"id":"0:389:2147","crate_id":0,"name":"signed_duration_since","span":{"filename":"src/datetime/mod.rs","begin":[345,4],"end":[347,5]},"visibility":"public","docs":"Subtracts another `DateTime` from the current date and time.\nThis does not overflow or underflow at all.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz2"}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Tz2","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:2374:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3775:7116":{"id":"2:3775:7116","crate_id":2,"name":"CoerceUnsized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:1443:2477":{"id":"0:1443:2477","crate_id":0,"name":"minute","span":{"filename":"src/naive/datetime/mod.rs","begin":[1095,4],"end":[1097,5]},"visibility":"default","docs":"Returns the minute number from 0 to 59.\n\nSee also the [`NaiveTime::minute`] method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Timelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 8).and_hms_milli(12, 34, 56, 789);\nassert_eq!(dt.minute(), 34);\n```","links":{"`NaiveTime::minute`":"0:3067:1887"},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3198-0:2941:1885":{"id":"b:2:3198-0:2941:1885","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:2536"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3198-0:2621:1877":{"id":"b:2:3198-0:2621:1877","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["2:3201:2536"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2342:5787":{"id":"0:2342:5787","crate_id":0,"name":"offset_from_local_datetime","span":{"filename":"src/offset/utc.rs","begin":[88,4],"end":[90,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["_local",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3395:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:3384:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3204:681":{"id":"2:3204:681","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:782:3014":{"id":"0:782:3014","crate_id":0,"name":"set_hour12","span":{"filename":"src/format/parsed.rs","begin":[234,4],"end":[239,5]},"visibility":"public","docs":"Tries to set the [`hour_mod_12`](#structfield.hour_mod_12) field from\ngiven hour number in 12-hour clocks.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["value",{"kind":"primitive","inner":"i64"}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:632:1899","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1055":{"id":"0:1055","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[480,17],"end":[480,27]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"format::ParseError","name":"ParseError","id":"0:2831:1898","glob":false}},"2:10723:7927":{"id":"2:10723:7927","crate_id":2,"name":"BuildHasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10724:146","2:10725:38424","2:10726:63090"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3269:211-0:2941:1885":{"id":"a:2:3269:211-0:2941:1885","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1404:2140":{"id":"0:1404:2140","crate_id":0,"name":"checked_add_signed","span":{"filename":"src/naive/datetime/mod.rs","begin":[524,4],"end":[534,5]},"visibility":"public","docs":"Adds given `Duration` to the current date and time.\n\nAs a part of Chrono's [leap second handling](./struct.NaiveTime.html#leap-second-handling),\nthe addition assumes that **there is no leap second ever**,\nexcept when the `NaiveDateTime` itself represents a leap second\nin which case the assumption becomes that **there is exactly a single leap second ever**.\n\nReturns `None` when it will result in overflow.\n\n# Example\n\n```\nuse chrono::{Duration, NaiveDate};\n\nlet from_ymd = NaiveDate::from_ymd;\n\nlet d = from_ymd(2016, 7, 8);\nlet hms = |h, m, s| d.and_hms(h, m, s);\nassert_eq!(hms(3, 5, 7).checked_add_signed(Duration::zero()),\n           Some(hms(3, 5, 7)));\nassert_eq!(hms(3, 5, 7).checked_add_signed(Duration::seconds(1)),\n           Some(hms(3, 5, 8)));\nassert_eq!(hms(3, 5, 7).checked_add_signed(Duration::seconds(-1)),\n           Some(hms(3, 5, 6)));\nassert_eq!(hms(3, 5, 7).checked_add_signed(Duration::seconds(3600 + 60)),\n           Some(hms(4, 6, 7)));\nassert_eq!(hms(3, 5, 7).checked_add_signed(Duration::seconds(86_400)),\n           Some(from_ymd(2016, 7, 9).and_hms(3, 5, 7)));\n\nlet hmsm = |h, m, s, milli| d.and_hms_milli(h, m, s, milli);\nassert_eq!(hmsm(3, 5, 7, 980).checked_add_signed(Duration::milliseconds(450)),\n           Some(hmsm(3, 5, 8, 430)));\n```\n\nOverflow returns `None`.\n\n```\n# use chrono::{Duration, NaiveDate};\n# let hms = |h, m, s| NaiveDate::from_ymd(2016, 7, 8).and_hms(h, m, s);\nassert_eq!(hms(3, 5, 7).checked_add_signed(Duration::days(1_000_000_000)), None);\n```\n\nLeap seconds are handled,\nbut the addition assumes that it is the only leap second happened.\n\n```\n# use chrono::{Duration, NaiveDate};\n# let from_ymd = NaiveDate::from_ymd;\n# let hmsm = |h, m, s, milli| from_ymd(2016, 7, 8).and_hms_milli(h, m, s, milli);\nlet leap = hmsm(3, 5, 59, 1_300);\nassert_eq!(leap.checked_add_signed(Duration::zero()),\n           Some(hmsm(3, 5, 59, 1_300)));\nassert_eq!(leap.checked_add_signed(Duration::milliseconds(-500)),\n           Some(hmsm(3, 5, 59, 800)));\nassert_eq!(leap.checked_add_signed(Duration::milliseconds(500)),\n           Some(hmsm(3, 5, 59, 1_800)));\nassert_eq!(leap.checked_add_signed(Duration::milliseconds(800)),\n           Some(hmsm(3, 6, 0, 100)));\nassert_eq!(leap.checked_add_signed(Duration::seconds(10)),\n           Some(hmsm(3, 6, 9, 300)));\nassert_eq!(leap.checked_add_signed(Duration::seconds(-10)),\n           Some(hmsm(3, 5, 50, 300)));\nassert_eq!(leap.checked_add_signed(Duration::days(1)),\n           Some(from_ymd(2016, 7, 9).and_hms_milli(3, 5, 59, 300)));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2794:2451":{"id":"0:2794:2451","crate_id":0,"name":"Literal","span":{"filename":"src/format/mod.rs","begin":[281,4],"end":[281,20]},"visibility":"default","docs":"A literally printed and parsed text.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}},"b:2:4002-0:3067:1887":{"id":"b:2:4002-0:3067:1887","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2700:2655":{"id":"0:2700:2655","crate_id":0,"name":"Internal","span":{"filename":"src/format/mod.rs","begin":[149,4],"end":[149,29]},"visibility":"default","docs":"Internal uses only.\n\nThis item exists so that one can add additional internal-only formatting\nwithout breaking major compatibility (as enum variants cannot be selectively private).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:614:2656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]}},"23:366:7298":{"id":"23:366:7298","crate_id":23,"name":"AsPrimitive","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:368:66155"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2760:660":{"id":"0:2760:660","crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[181,31],"end":[181,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10400:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10389:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2452:6570":{"id":"0:2452:6570","crate_id":0,"name":"trunc_subsecs","span":{"filename":"src/round.rs","begin":[44,4],"end":[44,48]},"visibility":"default","docs":"Return a copy truncated to the specified number of subsecond\ndigits. With 9 or more digits, self is returned unmodified.\n\n# Example\n``` rust\n# use chrono::{DateTime, SubsecRound, Timelike, TimeZone, Utc};\nlet dt = Utc.ymd(2018, 1, 11).and_hms_milli(12, 0, 0, 154);\nassert_eq!(dt.trunc_subsecs(2).nanosecond(), 150_000_000);\nassert_eq!(dt.trunc_subsecs(1).nanosecond(), 100_000_000);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["digits",{"kind":"primitive","inner":"u16"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:225:265":{"id":"0:225:265","crate_id":0,"name":"add","span":{"filename":"src/date.rs","begin":[486,4],"end":[488,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3014:415":{"id":"0:3014:415","crate_id":0,"name":"cmp","span":{"filename":"src/naive/datetime/mod.rs","begin":[74,42],"end":[74,45]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Ordering","id":"2:37761:178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3269:211":{"id":"2:3269:211","crate_id":2,"name":"Send","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:242:660":{"id":"0:242:660","crate_id":0,"name":"fmt","span":{"filename":"src/date.rs","begin":[524,4],"end":[526,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10400:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10389:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:220-0:2641:2445":{"id":"a:2:3281:220-0:2641:2445","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2641:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2869-0:2641:2445":{"id":"b:2:2869-0:2641:2445","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2641:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:2030"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2478":{"id":"0:2478","crate_id":0,"name":null,"span":{"filename":"src/round.rs","begin":[297,0],"end":[302,1]},"visibility":{"restricted":{"parent":"0:2418:1904","path":"::round"}},"docs":null,"links":{},"attrs":["#[cfg(any(feature = \"std\", test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["type_id","source","provide","description","cause"],"trait":{"name":"Error","id":"1:2572:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RoundingError","id":"0:3428:1906","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2479:2766"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2384:2321":{"id":"0:2384:2321","crate_id":0,"name":"timestamp_millis","span":{"filename":"src/offset/mod.rs","begin":[365,4],"end":[367,5]},"visibility":"default","docs":"Makes a new `DateTime` from the number of non-leap milliseconds\nsince January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\").\n\nPanics on out-of-range number of milliseconds for a non-panicking\nversion see [`timestamp_millis_opt`](#method.timestamp_millis_opt).\n\n# Example\n\n```\nuse chrono::{Utc, TimeZone};\n\nassert_eq!(Utc.timestamp_millis(1431648000).timestamp(), 1431648);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["millis",{"kind":"primitive","inner":"i64"}]],"output":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1703":{"id":"0:1703","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[1224,0],"end":[1244,1]},"visibility":{"restricted":{"parent":"0:1586:1556","path":"::naive::time"}},"docs":"The `Debug` output of the naive time `t` is the same as\n[`t.format(\"%H:%M:%S%.f\")`](../format/strftime/index.html).\n\nThe string printed can be readily parsed via the `parse` method on `str`.\n\nIt should be noted that, for leap seconds not on the minute boundary,\nit may print a representation not distinguishable from non-leap seconds.\nThis doesn't matter in practice, since such leap seconds never happened.\n(By the time of the first leap second on 1972-06-30,\nevery time zone offset around the world has standardized to the 5-minute alignment.)\n\n# Example\n\n```\nuse chrono::NaiveTime;\n\nassert_eq!(format!(\"{:?}\", NaiveTime::from_hms(23, 56, 4)),              \"23:56:04\");\nassert_eq!(format!(\"{:?}\", NaiveTime::from_hms_milli(23, 56, 4, 12)),    \"23:56:04.012\");\nassert_eq!(format!(\"{:?}\", NaiveTime::from_hms_micro(23, 56, 4, 1234)),  \"23:56:04.001234\");\nassert_eq!(format!(\"{:?}\", NaiveTime::from_hms_nano(23, 56, 4, 123456)), \"23:56:04.000123456\");\n```\n\nLeap seconds may also be used.\n\n```\n# use chrono::NaiveTime;\nassert_eq!(format!(\"{:?}\", NaiveTime::from_hms_milli(6, 59, 59, 1_500)), \"06:59:60.500\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10440:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1704:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3471":{"id":"0:3471","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[11,20],"end":[11,22]},"visibility":{"restricted":{"parent":"0:2490:1907","path":"::weekday"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3278:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:3446:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:445:2158":{"id":"0:445:2158","crate_id":0,"name":"year","span":{"filename":"src/datetime/mod.rs","begin":[697,4],"end":[699,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2524:2126":{"id":"0:2524:2126","crate_id":0,"name":"pred","span":{"filename":"src/month.rs","begin":[90,4],"end":[105,5]},"visibility":"public","docs":"The previous month.\n\n`m`:        | `January`  | `February` | `...` | `December`\n----------- | ---------  | ---------- | --- | ---------\n`m.pred()`: | `December` | `January`  | `...` | `November`","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Month","id":"0:3492:1880","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1869":{"id":"0:1869","crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[195,0],"end":[202,1]},"visibility":{"restricted":{"parent":"0:1795:5699","path":"::offset::fixed"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:3342:2033","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1870:181","0:1871:1355"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1062:1890":{"id":"0:1062:1890","crate_id":0,"name":"date","span":{"filename":"src/naive/date.rs","begin":[4,0],"end":[2774,1]},"visibility":{"restricted":{"parent":"0:1061:1900","path":"::naive"}},"docs":"ISO 8601 calendar date without timezone.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:2936:1902","0:2941:1885","0:1175:1892","0:1176:1891","0:2959:4198","0:2979:4206"],"is_stripped":true}},"0:2927:2039":{"id":"0:2927:2039","crate_id":0,"name":"DelayedFormat","span":{"filename":"src/format/mod.rs","begin":[747,0],"end":[761,1]},"visibility":"public","docs":"A *temporary* object which can be used as an argument to `format!` or others.\nThis is normally constructed via `format` methods of each date and time type.","links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:1036","a:2:3310:7473-0:2927:2039","a:2:9408:7639-0:2927:2039","a:2:3269:211-0:2927:2039","a:2:9407:7640-0:2927:2039","a:2:3281:220-0:2927:2039","b:2:2869-0:2927:2039","b:2:4002-0:2927:2039","b:2:3198-0:2927:2039","b:2:2872-0:2927:2039","b:2:3208-0:2927:2039","b:2:3202-0:2927:2039","b:2:3213-0:2927:2039","b:5:6420-0:2927:2039","0:2933","0:1043"]}},"0:1204:2113":{"id":"0:1204:2113","crate_id":0,"name":"and_hms_nano","span":{"filename":"src/naive/date.rs","begin":[894,4],"end":[896,5]},"visibility":"public","docs":"Makes a new `NaiveDateTime` from the current date, hour, minute, second and nanosecond.\n\nThe nanosecond part can exceed 1,000,000,000\nin order to represent the [leap second](./struct.NaiveTime.html#leap-second-handling).\n\nPanics on invalid hour, minute, second and/or nanosecond.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Datelike, Timelike, Weekday};\n\nlet d = NaiveDate::from_ymd(2015, 6, 3);\n\nlet dt: NaiveDateTime = d.and_hms_nano(12, 34, 56, 789_012_345);\nassert_eq!(dt.year(), 2015);\nassert_eq!(dt.weekday(), Weekday::Wed);\nassert_eq!(dt.second(), 56);\nassert_eq!(dt.nanosecond(), 789_012_345);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["hour",{"kind":"primitive","inner":"u32"}],["min",{"kind":"primitive","inner":"u32"}],["sec",{"kind":"primitive","inner":"u32"}],["nano",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3052:1901":{"id":"0:3052:1901","crate_id":0,"name":"IsoWeek","span":{"filename":"src/naive/isoweek.rs","begin":[21,0],"end":[26,1]},"visibility":"public","docs":"ISO 8601 week.\n\nThis type, combined with [`Weekday`](../enum.Weekday.html),\nconstitutes the ISO 8601 [week date](./struct.NaiveDate.html#week-date).\nOne can retrieve this type from the existing [`Datelike`](../trait.Datelike.html) types\nvia the [`Datelike::iso_week`](../trait.Datelike.html#tymethod.iso_week) method.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:1580","a:2:3310:7473-0:3052:1901","a:2:9408:7639-0:3052:1901","a:2:3269:211-0:3052:1901","a:2:9407:7640-0:3052:1901","a:2:3281:220-0:3052:1901","b:2:2869-0:3052:1901","b:2:4002-0:3052:1901","b:2:3198-0:3052:1901","b:2:2872-0:3052:1901","b:2:3208-0:3052:1901","b:2:3202-0:3052:1901","b:2:3213-0:3052:1901","b:5:787-0:3052:1901","0:3054","0:3055","0:3057","0:3058","0:3060","0:3062","0:3064","0:3065","0:1584"]}},"0:443":{"id":"0:443","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[695,0],"end":[767,1]},"visibility":{"restricted":{"parent":"0:256:1893","path":"::datetime"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:2374:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["num_days_from_ce","year_ce"],"trait":{"name":"Datelike","id":"0:2553:1879","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:445:2158","0:446:1909","0:447:2188","0:448:2159","0:449:2189","0:450:2190","0:451:2191","0:452:1907","0:453:2192","0:454:2193","0:456:2194","0:458:2195","0:460:2196","0:462:2197","0:464:2198","0:466:2199"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2496:2126":{"id":"0:2496:2126","crate_id":0,"name":"pred","span":{"filename":"src/weekday.rs","begin":[56,4],"end":[66,5]},"visibility":"public","docs":"The previous day in the week.\n\n`w`:        | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun`\n----------- | ----- | ----- | ----- | ----- | ----- | ----- | -----\n`w.pred()`: | `Sun` | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat`","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:3446:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2856:2754":{"id":"0:2856:2754","crate_id":0,"name":"TooLong","span":{"filename":"src/format/mod.rs","begin":[372,4],"end":[372,11]},"visibility":"default","docs":"All formatting items have been read but there is a remaining input.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:605":{"id":"0:605","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[58,0],"end":[58,21]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"parse::parse","name":"parse","id":"0:896:2236","glob":false}},"0:1405:2142":{"id":"0:1405:2142","crate_id":0,"name":"checked_sub_signed","span":{"filename":"src/naive/datetime/mod.rs","begin":[597,4],"end":[607,5]},"visibility":"public","docs":"Subtracts given `Duration` from the current date and time.\n\nAs a part of Chrono's [leap second handling](./struct.NaiveTime.html#leap-second-handling),\nthe subtraction assumes that **there is no leap second ever**,\nexcept when the `NaiveDateTime` itself represents a leap second\nin which case the assumption becomes that **there is exactly a single leap second ever**.\n\nReturns `None` when it will result in overflow.\n\n# Example\n\n```\nuse chrono::{Duration, NaiveDate};\n\nlet from_ymd = NaiveDate::from_ymd;\n\nlet d = from_ymd(2016, 7, 8);\nlet hms = |h, m, s| d.and_hms(h, m, s);\nassert_eq!(hms(3, 5, 7).checked_sub_signed(Duration::zero()),\n           Some(hms(3, 5, 7)));\nassert_eq!(hms(3, 5, 7).checked_sub_signed(Duration::seconds(1)),\n           Some(hms(3, 5, 6)));\nassert_eq!(hms(3, 5, 7).checked_sub_signed(Duration::seconds(-1)),\n           Some(hms(3, 5, 8)));\nassert_eq!(hms(3, 5, 7).checked_sub_signed(Duration::seconds(3600 + 60)),\n           Some(hms(2, 4, 7)));\nassert_eq!(hms(3, 5, 7).checked_sub_signed(Duration::seconds(86_400)),\n           Some(from_ymd(2016, 7, 7).and_hms(3, 5, 7)));\n\nlet hmsm = |h, m, s, milli| d.and_hms_milli(h, m, s, milli);\nassert_eq!(hmsm(3, 5, 7, 450).checked_sub_signed(Duration::milliseconds(670)),\n           Some(hmsm(3, 5, 6, 780)));\n```\n\nOverflow returns `None`.\n\n```\n# use chrono::{Duration, NaiveDate};\n# let hms = |h, m, s| NaiveDate::from_ymd(2016, 7, 8).and_hms(h, m, s);\nassert_eq!(hms(3, 5, 7).checked_sub_signed(Duration::days(1_000_000_000)), None);\n```\n\nLeap seconds are handled,\nbut the subtraction assumes that it is the only leap second happened.\n\n```\n# use chrono::{Duration, NaiveDate};\n# let from_ymd = NaiveDate::from_ymd;\n# let hmsm = |h, m, s, milli| from_ymd(2016, 7, 8).and_hms_milli(h, m, s, milli);\nlet leap = hmsm(3, 5, 59, 1_300);\nassert_eq!(leap.checked_sub_signed(Duration::zero()),\n           Some(hmsm(3, 5, 59, 1_300)));\nassert_eq!(leap.checked_sub_signed(Duration::milliseconds(200)),\n           Some(hmsm(3, 5, 59, 1_100)));\nassert_eq!(leap.checked_sub_signed(Duration::milliseconds(500)),\n           Some(hmsm(3, 5, 59, 800)));\nassert_eq!(leap.checked_sub_signed(Duration::seconds(60)),\n           Some(hmsm(3, 5, 0, 300)));\nassert_eq!(leap.checked_sub_signed(Duration::days(1)),\n           Some(from_ymd(2016, 7, 7).and_hms_milli(3, 6, 0, 300)));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2466:6588":{"id":"0:2466:6588","crate_id":0,"name":"duration_round","span":{"filename":"src/round.rs","begin":[151,4],"end":[153,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["duration",{"kind":"resolved_path","inner":{"name":"Duration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47753:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:2458:1905","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:397:59":{"id":"0:397:59","crate_id":0,"name":"default","span":{"filename":"src/datetime/mod.rs","begin":[385,4],"end":[387,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2346:2289":{"id":"0:2346:2289","crate_id":0,"name":"fix","span":{"filename":"src/offset/utc.rs","begin":[101,4],"end":[103,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2869-0:3543:1910":{"id":"b:2:2869-0:3543:1910","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Months","id":"0:3543:1910","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:2030"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3538":{"id":"0:3538","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[30,37],"end":[30,42]},"visibility":{"restricted":{"parent":"0:2518:1909","path":"::month"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10440:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:3492:1880","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3539:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3567":{"id":"0:3567","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[204,16],"end":[204,25]},"visibility":{"restricted":{"parent":"0:2518:1909","path":"::month"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ParseMonthError","id":"0:3562:1911","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseMonthError","id":"0:3562:1911","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3568:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:378:2330":{"id":"0:378:2330","crate_id":0,"name":"timestamp_micros","span":{"filename":"src/datetime/mod.rs","begin":[245,4],"end":[247,5]},"visibility":"public","docs":"Returns the number of non-leap-microseconds since January 1, 1970 UTC\n\nNote that this does reduce the number of years that can be represented\nfrom ~584 Billion to ~584 Thousand. (If this is a problem, please file\nan issue to let me know what domain needs microsecond precision over\nmillennia, I'm curious.)\n\n# Example\n\n```\nuse chrono::Utc;\nuse chrono::TimeZone;\n\nlet dt = Utc.ymd(1970, 1, 1).and_hms_micro(0, 0, 1, 444);\nassert_eq!(dt.timestamp_micros(), 1_000_444);\n\nlet dt = Utc.ymd(2001, 9, 9).and_hms_micro(1, 46, 40, 555);\nassert_eq!(dt.timestamp_micros(), 1_000_000_000_000_555);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3269:211-0:3395:1903":{"id":"a:2:3269:211-0:3395:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3395:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:368:1895":{"id":"0:368:1895","crate_id":0,"name":"MAX_DATETIME","span":{"filename":"src/datetime/mod.rs","begin":[96,0],"end":[96,65]},"visibility":"public","docs":"The maximum possible `DateTime<Utc>`.","links":{},"attrs":["#[deprecated(since = \"0.4.20\", note = \"Use DateTime::MAX_UTC instead\")]"],"deprecation":{"since":"0.4.20","note":"Use DateTime::MAX_UTC instead"},"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:3384:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"expr":"DateTime<Utc>::MAX_UTC","value":null,"is_literal":false}},"0:3459:2818":{"id":"0:3459:2818","crate_id":0,"name":"Fri","span":{"filename":"src/weekday.rs","begin":[24,4],"end":[24,11]},"visibility":"default","docs":"Friday.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:3486":{"id":"0:3486","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[189,16],"end":[189,25]},"visibility":{"restricted":{"parent":"0:2490:1907","path":"::weekday"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:3482:1908","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:10455:7226":{"id":"2:10455:7226","crate_id":2,"name":"UpperHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10456:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2800:2604":{"id":"0:2800:2604","crate_id":0,"name":"Space","span":{"filename":"src/format/mod.rs","begin":[286,4],"end":[286,18]},"visibility":"default","docs":"Whitespace. Prints literally but reads zero or more whitespace.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}},"b:2:3208-0:3377:1873":{"id":"b:2:3208-0:3377:1873","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Local","id":"0:3377:1873","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:472:2478":{"id":"0:472:2478","crate_id":0,"name":"second","span":{"filename":"src/datetime/mod.rs","begin":[779,4],"end":[781,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2828":{"id":"0:2828","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[278,31],"end":[278,36]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10440:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2792:2040","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:2830:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:789:7921":{"id":"5:789:7921","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"0:2648":{"id":"0:2648","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[74,9],"end":[74,13]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2641:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1457":{"id":"0:1457","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1285,0],"end":[1290,1]},"visibility":{"restricted":{"parent":"0:1291:1893","path":"::naive::datetime"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AddAssign","id":"2:3368:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Duration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1458:266"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2510:660":{"id":"0:2510:660","crate_id":0,"name":"fmt","span":{"filename":"src/weekday.rs","begin":[204,4],"end":[206,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10400:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10389:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3543:1910":{"id":"0:3543:1910","crate_id":0,"name":"Months","span":{"filename":"src/month.rs","begin":[194,0],"end":[194,34]},"visibility":"public","docs":"A duration in calendar months","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:2531","a:2:3310:7473-0:3543:1910","a:2:9408:7639-0:3543:1910","a:2:3269:211-0:3543:1910","a:2:9407:7640-0:3543:1910","a:2:3281:220-0:3543:1910","b:2:2869-0:3543:1910","b:2:4002-0:3543:1910","b:2:3198-0:3543:1910","b:2:2872-0:3543:1910","b:2:3208-0:3543:1910","b:2:3202-0:3543:1910","b:2:3213-0:3543:1910","b:5:787-0:3543:1910","0:1253","0:1256","0:3546","0:3548","0:3549","0:3551","0:3552","0:3554","0:3557","0:3558","0:3560"]}},"0:138:2099":{"id":"0:138:2099","crate_id":0,"name":"and_hms_milli_opt","span":{"filename":"src/date.rs","begin":[126,4],"end":[134,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date, hour, minute, second and millisecond.\nThe millisecond part can exceed 1,000 in order to represent the leap second.\nThe offset in the current date is preserved.\n\nReturns `None` on invalid hour, minute, second and/or millisecond.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["hour",{"kind":"primitive","inner":"u32"}],["min",{"kind":"primitive","inner":"u32"}],["sec",{"kind":"primitive","inner":"u32"}],["milli",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3208-0:3052:1901":{"id":"b:2:3208-0:3052:1901","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IsoWeek","id":"0:3052:1901","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"23:307:2926":{"id":"23:307:2926","crate_id":23,"name":"ToPrimitive","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:308:8089","23:309:8090","23:310:8091","23:311:2982","23:312:8092","23:313:8093","23:314:8094","23:315:8095","23:316:8096","23:317:2996","23:318:8097","23:319:8098","23:320:8099","23:321:8100"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2869-0:3377:1873":{"id":"b:2:2869-0:3377:1873","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Local","id":"0:3377:1873","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:2030"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3202-0:3395:1903":{"id":"b:2:3202-0:3395:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3395:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2611:408":{"id":"0:2611:408","crate_id":0,"name":"clone","span":{"filename":"src/datetime/mod.rs","begin":[52,9],"end":[52,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SecondsFormat","id":"0:2597:1878","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2872-0:2792:2040":{"id":"b:2:2872-0:2792:2040","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:7071","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2792:2040","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2874:5915"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1395:1556":{"id":"0:1395:1556","crate_id":0,"name":"time","span":{"filename":"src/naive/datetime/mod.rs","begin":[266,4],"end":[268,5]},"visibility":"public","docs":"Retrieves a time component.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveTime};\n\nlet dt = NaiveDate::from_ymd(2016, 7, 8).and_hms(9, 10, 11);\nassert_eq!(dt.time(), NaiveTime::from_hms(9, 10, 11));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2899:604":{"id":"0:2899:604","crate_id":0,"name":"eq","span":{"filename":"src/format/parsed.rs","begin":[25,16],"end":[25,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Parsed","id":"0:2873:2237","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3208-0:2597:1878":{"id":"b:2:3208-0:2597:1878","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SecondsFormat","id":"0:2597:1878","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:791:7923":{"id":"5:791:7923","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["target",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"23:584:7306":{"id":"23:584:7306","crate_id":23,"name":"CheckedNeg","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:585:66586"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:2888:104":{"id":"2:2888:104","crate_id":2,"name":"Clone","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2889:408","2:2890:410"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:513:1355":{"id":"0:513:1355","crate_id":0,"name":"sub","span":{"filename":"src/datetime/mod.rs","begin":[876,4],"end":[878,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:395:2071":{"id":"0:395:2071","crate_id":0,"name":"MAX_UTC","span":{"filename":"src/datetime/mod.rs","begin":[381,4],"end":[381,94]},"visibility":"public","docs":"The maximum possible `DateTime<Utc>`.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:3384:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"default":"_"}},"0:3555:715":{"id":"0:3555:715","crate_id":0,"name":"hash","span":{"filename":"src/month.rs","begin":[193,33],"end":[193,37]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10688:146","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3089":{"id":"0:3089","crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[25,9],"end":[25,18]},"visibility":{"restricted":{"parent":"0:1795:5699","path":"::offset::fixed"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3090:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1875:265":{"id":"0:1875:265","crate_id":0,"name":"add","span":{"filename":"src/offset/fixed.rs","begin":[208,4],"end":[210,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2530:5163":{"id":"0:2530:5163","crate_id":0,"name":"from_u32","span":{"filename":"src/month.rs","begin":[173,4],"end":[189,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["n",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Month","id":"0:3492:1880","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2768":{"id":"0:2768","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[253,23],"end":[253,32]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2761:2702","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2761:2702","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2769:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3368:2032":{"id":"2:3368:2032","crate_id":2,"name":"AddAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3370:266"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1393:2419":{"id":"0:1393:2419","crate_id":0,"name":"parse_from_str","span":{"filename":"src/naive/datetime/mod.rs","begin":[234,4],"end":[238,5]},"visibility":"public","docs":"Parses a string with the specified format string and returns a new `NaiveDateTime`.\nSee the [`format::strftime` module](../format/strftime/index.html)\non the supported escape sequences.\n\n# Example\n\n```\nuse chrono::{NaiveDateTime, NaiveDate};\n\nlet parse_from_str = NaiveDateTime::parse_from_str;\n\nassert_eq!(parse_from_str(\"2015-09-05 23:56:04\", \"%Y-%m-%d %H:%M:%S\"),\n           Ok(NaiveDate::from_ymd(2015, 9, 5).and_hms(23, 56, 4)));\nassert_eq!(parse_from_str(\"5sep2015pm012345.6789\", \"%d%b%Y%p%I%M%S%.f\"),\n           Ok(NaiveDate::from_ymd(2015, 9, 5).and_hms_micro(13, 23, 45, 678_900)));\n```\n\nOffset is ignored for the purpose of parsing.\n\n```\n# use chrono::{NaiveDateTime, NaiveDate};\n# let parse_from_str = NaiveDateTime::parse_from_str;\nassert_eq!(parse_from_str(\"2014-5-17T12:34:56+09:30\", \"%Y-%m-%dT%H:%M:%S%z\"),\n           Ok(NaiveDate::from_ymd(2014, 5, 17).and_hms(12, 34, 56)));\n```\n\n[Leap seconds](./struct.NaiveTime.html#leap-second-handling) are correctly handled by\ntreating any time of the form `hh:mm:60` as a leap second.\n(This equally applies to the formatting, so the round trip is possible.)\n\n```\n# use chrono::{NaiveDateTime, NaiveDate};\n# let parse_from_str = NaiveDateTime::parse_from_str;\nassert_eq!(parse_from_str(\"2015-07-01 08:59:60.123\", \"%Y-%m-%d %H:%M:%S%.f\"),\n           Ok(NaiveDate::from_ymd(2015, 7, 1).and_hms_milli(8, 59, 59, 1_123)));\n```\n\nMissing seconds are assumed to be zero,\nbut out-of-bound times or insufficient fields are errors otherwise.\n\n```\n# use chrono::{NaiveDateTime, NaiveDate};\n# let parse_from_str = NaiveDateTime::parse_from_str;\nassert_eq!(parse_from_str(\"94/9/4 7:15\", \"%y/%m/%d %H:%M\"),\n           Ok(NaiveDate::from_ymd(1994, 9, 4).and_hms(7, 15, 0)));\n\nassert!(parse_from_str(\"04m33s\", \"%Mm%Ss\").is_err());\nassert!(parse_from_str(\"94/9/4 12\", \"%y/%m/%d %H\").is_err());\nassert!(parse_from_str(\"94/9/4 17:60\", \"%y/%m/%d %H:%M\").is_err());\nassert!(parse_from_str(\"94/9/4 24:00:00\", \"%y/%m/%d %H:%M:%S\").is_err());\n```\n\nAll parsed fields should be consistent to each other, otherwise it's an error.\n\n```\n# use chrono::NaiveDateTime;\n# let parse_from_str = NaiveDateTime::parse_from_str;\nlet fmt = \"%Y-%m-%d %H:%M:%S = UNIX timestamp %s\";\nassert!(parse_from_str(\"2001-09-09 01:46:39 = UNIX timestamp 999999999\", fmt).is_ok());\nassert!(parse_from_str(\"1970-01-01 00:00:00 = UNIX timestamp 1\", fmt).is_err());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["fmt",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:632:1899","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:523:660":{"id":"0:523:660","crate_id":0,"name":"fmt","span":{"filename":"src/datetime/mod.rs","begin":[901,4],"end":[903,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10400:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10389:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4748:7414":{"id":"1:4748:7414","crate_id":1,"name":"BufRead","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4749:60079","1:4750:60080","1:4751:60082","1:4753:6318","1:4754:60081","1:4756:60083","1:4757:9519"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Read","id":"1:4666:6013","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:1219:2147":{"id":"0:1219:2147","crate_id":0,"name":"signed_duration_since","span":{"filename":"src/naive/date.rs","begin":[1118,4],"end":[1128,5]},"visibility":"public","docs":"Subtracts another `NaiveDate` from the current date.\nReturns a `Duration` of integral numbers.\n\nThis does not overflow or underflow at all,\nas all possible output fits in the range of `Duration`.\n\n# Example\n\n```\nuse chrono::{Duration, NaiveDate};\n\nlet from_ymd = NaiveDate::from_ymd;\nlet since = NaiveDate::signed_duration_since;\n\nassert_eq!(since(from_ymd(2014, 1, 1), from_ymd(2014, 1, 1)), Duration::zero());\nassert_eq!(since(from_ymd(2014, 1, 1), from_ymd(2013, 12, 31)), Duration::days(1));\nassert_eq!(since(from_ymd(2014, 1, 1), from_ymd(2014, 1, 2)), Duration::days(-1));\nassert_eq!(since(from_ymd(2014, 1, 1), from_ymd(2013, 9, 23)), Duration::days(100));\nassert_eq!(since(from_ymd(2014, 1, 1), from_ymd(2013, 1, 1)), Duration::days(365));\nassert_eq!(since(from_ymd(2014, 1, 1), from_ymd(2010, 1, 1)), Duration::days(365*4 + 1));\nassert_eq!(since(from_ymd(2014, 1, 1), from_ymd(1614, 1, 1)), Duration::days(365*400 + 97));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2707:604":{"id":"0:2707:604","crate_id":0,"name":"eq","span":{"filename":"src/format/mod.rs","begin":[97,16],"end":[97,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2659:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:532:126":{"id":"0:532:126","crate_id":0,"name":"Err","span":{"filename":"src/datetime/mod.rs","begin":[947,4],"end":[947,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2831:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:3066:408":{"id":"0:3066:408","crate_id":0,"name":"clone","span":{"filename":"src/naive/isoweek.rs","begin":[19,47],"end":[19,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"IsoWeek","id":"0:3052:1901","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1685:2480":{"id":"0:1685:2480","crate_id":0,"name":"with_hour","span":{"filename":"src/naive/time/mod.rs","begin":[906,4],"end":[912,5]},"visibility":"default","docs":"Makes a new `NaiveTime` with the hour number changed.\n\nReturns `None` when the resulting `NaiveTime` would be invalid.\n\n# Example\n\n```\nuse chrono::{NaiveTime, Timelike};\n\nlet dt = NaiveTime::from_hms_nano(23, 56, 4, 12_345_678);\nassert_eq!(dt.with_hour(7), Some(NaiveTime::from_hms_nano(7, 56, 4, 12_345_678)));\nassert_eq!(dt.with_hour(24), None);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["hour",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1256":{"id":"0:1256","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[1688,0],"end":[1711,1]},"visibility":{"restricted":{"parent":"0:1062:1890","path":"::naive::date"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:3342:2033","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Months","id":"0:3543:1910","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1257:181","0:1258:1355"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:614:2656":{"id":"0:614:2656","crate_id":0,"name":"InternalNumeric","span":{"filename":"src/format/mod.rs","begin":[153,0],"end":[155,1]},"visibility":"public","docs":"An opaque type representing numeric item types for internal uses only.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:3310:7473-0:614:2656","a:2:9408:7639-0:614:2656","a:2:3269:211-0:614:2656","a:2:9407:7640-0:614:2656","a:2:3281:220-0:614:2656","b:2:2869-0:614:2656","b:2:4002-0:614:2656","b:2:3198-0:614:2656","b:2:2872-0:614:2656","b:2:3208-0:614:2656","b:2:3202-0:614:2656","b:2:3213-0:614:2656","b:5:787-0:614:2656","0:616","0:618","0:620","0:621"]}},"b:2:3208-0:3384:1884":{"id":"b:2:3208-0:3384:1884","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:3384:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9408:7639-0:3446:1882":{"id":"a:2:9408:7639-0:3446:1882","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9408:7639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:3446:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:384:2081":{"id":"0:384:2081","crate_id":0,"name":"timezone","span":{"filename":"src/datetime/mod.rs","begin":[311,4],"end":[313,5]},"visibility":"public","docs":"Retrieves an associated time zone.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"Tz"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9407:7640-0:2621:1877":{"id":"a:2:9407:7640-0:2621:1877","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Tz"},"trait":{"name":"TimeZone","id":"0:2374:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9407:7640","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9407:7640","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9408:7639-0:2597:1878":{"id":"a:2:9408:7639-0:2597:1878","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9408:7639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SecondsFormat","id":"0:2597:1878","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2539":{"id":"0:2539","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[500,23],"end":[500,29]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"month::Months","name":"Months","id":"0:3543:1910","glob":false}},"b:2:3202-0:2621:1877":{"id":"b:2:3202-0:2621:1877","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2872-0:614:2656":{"id":"b:2:2872-0:614:2656","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:7071","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:614:2656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:5915"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3424":{"id":"0:3424","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[40,44],"end":[40,48]},"visibility":{"restricted":{"parent":"0:1758:957","path":"::offset"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hash","id":"2:10678:142","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10678:142","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3395:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:3426:715"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2720:2673":{"id":"0:2720:2673","crate_id":0,"name":"LongWeekdayName","span":{"filename":"src/format/mod.rs","begin":[198,4],"end":[198,19]},"visibility":"default","docs":"Full day of the week names.\n\nPrints a full name in the title case, reads either a short or full name in any case.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:1845":{"id":"0:1845","crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[105,0],"end":[125,1]},"visibility":{"restricted":{"parent":"0:1795:5699","path":"::offset::fixed"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["datetime_from_str","timestamp_millis","yo","timestamp","from_local_datetime","timestamp_nanos","isoywd_opt","from_utc_date","from_utc_datetime","ymd","timestamp_millis_opt","timestamp_opt","from_local_date","yo_opt","ymd_opt","isoywd"],"trait":{"name":"TimeZone","id":"0:2374:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1846:1888","0:1847:2131","0:1848:5785","0:1849:5787","0:1850:5791","0:1851:3098"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2503":{"id":"0:2503","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[158,0],"end":[186,1]},"visibility":{"restricted":{"parent":"0:2490:1907","path":"::weekday"}},"docs":"Any weekday can be represented as an integer from 0 to 6, which equals to\n[`Weekday::num_days_from_monday`](#method.num_days_from_monday) in this implementation.\nDo not heavily depend on this though; use explicit methods whenever possible.","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["from_u16","from_i32","from_isize","from_usize","from_f64","from_u32","from_i128","from_i8","from_u128","from_f32","from_u8","from_i16"],"trait":{"name":"FromPrimitive","id":"23:333:5076","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:3446:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2504:6717","0:2505:6718"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:484":{"id":"0:484","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[810,0],"end":[810,87]},"visibility":{"restricted":{"parent":"0:256:1893","path":"::datetime"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:2374:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Tz"},"trait":{"name":"TimeZone","id":"0:2374:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2872-0:2936:1902":{"id":"b:2:2872-0:2936:1902","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:7071","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveWeek","id":"0:2936:1902","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:5915"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:217:415":{"id":"0:217:415","crate_id":0,"name":"cmp","span":{"filename":"src/date.rs","begin":[471,4],"end":[473,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Ordering","id":"2:37761:178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2508:660":{"id":"0:2508:660","crate_id":0,"name":"fmt","span":{"filename":"src/weekday.rs","begin":[198,4],"end":[200,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10400:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10389:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:399:59":{"id":"0:399:59","crate_id":0,"name":"default","span":{"filename":"src/datetime/mod.rs","begin":[392,4],"end":[394,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:220-0:2936:1902":{"id":"a:2:3281:220-0:2936:1902","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveWeek","id":"0:2936:1902","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3269:211-0:3562:1911":{"id":"a:2:3269:211-0:3562:1911","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseMonthError","id":"0:3562:1911","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13604:37333":{"id":"2:13604:37333","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_ascii_whitespace":"1:15992:6928"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_whitespace\", since = \"1.1.0\")]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitWhitespace","id":"2:49865:7171","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2415":{"id":"0:2415","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[491,61],"end":[491,64]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"offset::Utc","name":"Utc","id":"0:3384:1884","glob":false}},"2:3401:7093":{"id":"2:3401:7093","crate_id":2,"name":"BitOr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3403:181","2:3404:353"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:412":{"id":"0:412","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[462,0],"end":[470,1]},"visibility":{"restricted":{"parent":"0:256:1893","path":"::datetime"}},"docs":"Convert a `DateTime<Local>` instance into a `DateTime<FixedOffset>` instance.","links":{},"attrs":["#[cfg(feature = \"clock\")]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Local","id":"0:3377:1873","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:413:681"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1417":{"id":"0:1417","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[753,0],"end":[1062,1]},"visibility":{"restricted":{"parent":"0:1291:1893","path":"::naive::datetime"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["num_days_from_ce","year_ce"],"trait":{"name":"Datelike","id":"0:2553:1879","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1418:2158","0:1419:1909","0:1420:2188","0:1421:2159","0:1422:2189","0:1423:2190","0:1424:2191","0:1425:1907","0:1426:2192","0:1427:2193","0:1429:2194","0:1431:2195","0:1433:2196","0:1435:2197","0:1437:2198","0:1439:2199"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:8":{"id":"0:8","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[445,4],"end":[445,24]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::Date","name":"Date","id":"0:2590:1872","glob":false}},"a:2:3310:7473-0:3543:1910":{"id":"a:2:3310:7473-0:3543:1910","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:7473","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Months","id":"0:3543:1910","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:11":{"id":"0:11","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[448,4],"end":[448,25]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"clock\")]","#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::Local","name":"Local","id":"0:3377:1873","glob":false}},"0:2463":{"id":"0:2463","crate_id":0,"name":null,"span":{"filename":"src/round.rs","begin":[148,0],"end":[158,1]},"visibility":{"restricted":{"parent":"0:2418:1904","path":"::round"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:2374:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"DurationRound","id":"0:2458:1905","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:2465:126","0:2466:6588","0:2467:6593"],"negative":false,"synthetic":false,"blanket_impl":null}},"23:757:7322":{"id":"23:757:7322","crate_id":23,"name":"WrappingNeg","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:758:64515"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:5:787-0:3543:1910":{"id":"b:5:787-0:3543:1910","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Months","id":"0:3543:1910","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:7921","5:790:7922","5:791:7923"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13700:64790":{"id":"2:13700:64790","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"1:15986:6923"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDebug","id":"2:49890:7184","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1727":{"id":"0:1727","crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[19,25],"end":[19,38]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"self::datetime::NaiveDateTime","name":"NaiveDateTime","id":"0:2999:1886","glob":false}},"a:2:3269:211-0:3086:1883":{"id":"a:2:3269:211-0:3086:1883","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3091":{"id":"0:3091","crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[25,20],"end":[25,22]},"visibility":{"restricted":{"parent":"0:1795:5699","path":"::offset::fixed"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3278:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1022:920":{"id":"0:1022:920","crate_id":0,"name":"new","span":{"filename":"src/format/strftime.rs","begin":[215,4],"end":[217,5]},"visibility":"public","docs":"Creates a new parsing iterator from the `strftime`-like format string.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["s",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2908:2041","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2557:2188":{"id":"0:2557:2188","crate_id":0,"name":"month0","span":{"filename":"src/traits.rs","begin":[28,4],"end":[28,28]},"visibility":"default","docs":"Returns the month number starting from 0.\n\nThe return value ranges from 0 to 11.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:11082:214":{"id":"2:11082:214","crate_id":2,"name":"SliceIndex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:11084:181","2:11085:5159","2:11086:60376","2:11087:60377","2:11088:60378","2:11089:753","2:11090:754"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:11073:8515","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:1230:2161":{"id":"0:1230:2161","crate_id":0,"name":"MAX","span":{"filename":"src/naive/date.rs","begin":[1277,4],"end":[1277,94]},"visibility":"public","docs":"The maximum possible `NaiveDate` (December 31, 262143 CE).","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":"_"}},"b:2:2869-0:3384:1884":{"id":"b:2:2869-0:3384:1884","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:3384:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:2030"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2751":{"id":"0:2751","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[181,9],"end":[181,14]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2713:2238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2752:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2869-0:2621:1877":{"id":"b:2:2869-0:2621:1877","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["2:2871:2030"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2467:6593":{"id":"0:2467:6593","crate_id":0,"name":"duration_trunc","span":{"filename":"src/round.rs","begin":[155,4],"end":[157,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["duration",{"kind":"resolved_path","inner":{"name":"Duration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47753:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:2458:1905","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3269:211-0:2641:2445":{"id":"a:2:3269:211-0:2641:2445","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2641:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3441:604":{"id":"0:3441:604","crate_id":0,"name":"eq","span":{"filename":"src/round.rs","begin":[241,23],"end":[241,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"RoundingError","id":"0:3428:1906","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2734:2687":{"id":"0:2734:2687","crate_id":0,"name":"TimezoneName","span":{"filename":"src/format/mod.rs","begin":[220,4],"end":[220,16]},"visibility":"default","docs":"Timezone name.\n\nIt does not support parsing, its use in the parser is an immediate failure.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:247":{"id":"0:247","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[468,15],"end":[468,19]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"date::Date","name":"Date","id":"0:2590:1872","glob":false}},"a:2:9407:7640-0:2641:2445":{"id":"a:2:9407:7640-0:2641:2445","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9407:7640","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2641:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"23:575:7310":{"id":"23:575:7310","crate_id":23,"name":"CheckedSub","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:576:3237"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sub","id":"2:3342:2033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:9408:7639-0:2927:2039":{"id":"a:2:9408:7639-0:2927:2039","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9408:7639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9408:7639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2927:2039","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2852:2750":{"id":"0:2852:2750","crate_id":0,"name":"Invalid","span":{"filename":"src/format/mod.rs","begin":[366,4],"end":[366,11]},"visibility":"default","docs":"The input string has some invalid character sequence for given formatting items.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:546":{"id":"0:546","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[474,19],"end":[474,27]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"datetime::DateTime","name":"DateTime","id":"0:2621:1877","glob":false}},"b:2:3198-0:2761:2702":{"id":"b:2:3198-0:2761:2702","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2761:2702","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:2536"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3438:408":{"id":"0:3438:408","crate_id":0,"name":"clone","span":{"filename":"src/round.rs","begin":[241,16],"end":[241,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"RoundingError","id":"0:3428:1906","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3005":{"id":"0:3005","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[74,20],"end":[74,22]},"visibility":{"restricted":{"parent":"0:1291:1893","path":"::naive::datetime"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3278:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2738:2465":{"id":"0:2738:2465","crate_id":0,"name":"TimezoneOffsetColonZ","span":{"filename":"src/format/mod.rs","begin":[233,4],"end":[233,24]},"visibility":"default","docs":"Offset from the local time to UTC (`+09:00` or `-04:00` or `Z`).\n\nIn the parser, the colon can be omitted and/or surrounded with any amount of whitespace,\nand `Z` can be either in upper case or in lower case.\nThe offset is limited from `-24:00` to `+24:00`,\nwhich is the same as [`FixedOffset`](../offset/struct.FixedOffset.html)'s range.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:13667:3575":{"id":"2:13667:3575","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2522":{"id":"0:2522","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[60,0],"end":[153,1]},"visibility":{"restricted":{"parent":"0:2518:1909","path":"::month"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:3492:1880","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2523:2120","0:2524:2126","0:2525:6797","0:2526:899"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13576":{"id":"2:13576","crate_id":2,"name":null,"span":null,"visibility":{"restricted":{"parent":"2:12662:1340","path":"::str"}},"docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["2:13577:793","2:13578:3245","2:13579:64771","2:13580:64772","2:13582:64773","2:13585:3212","2:13586:64774","2:13587:304","2:13588:60379","2:13589:5159","2:13591:60376","2:13593:60377","2:13595:60378","2:13597:8634","2:13598:64775","2:13599:60398","2:13600:60399","2:13601:3631","2:13602:8877","2:13603:3493","2:13604:37333","2:13605:37323","2:13606:9519","2:13607:64776","2:13608:37318","2:13609:2847","2:13612:3199","2:13615:6260","2:13618:3655","2:13622:7874","2:13626:60083","2:13629:37191","2:13632:60408","2:13635:64777","2:13638:64778","2:13641:60410","2:13644:60412","2:13647:64779","2:13650:64780","2:13653:1923","2:13656:64781","2:13659:64782","2:13662:64783","2:13665:64784","2:13667:3575","2:13669:64785","2:13671:3197","2:13672:64786","2:13673:6035","2:13676:64787","2:13679:19995","2:13682:60414","2:13685:64788","2:13688:3504","2:13691:64789","2:13694:2236","2:13696:9229","2:13697:60322","2:13698:60323","2:13699:60324","2:13700:64790","2:13702:8572","2:13703:64791"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3213-0:3377:1873":{"id":"b:2:3213-0:3377:1873","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Local","id":"0:3377:1873","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1660:3152":{"id":"0:1660:3152","crate_id":0,"name":"from_hms_nano","span":{"filename":"src/naive/time/mod.rs","begin":[367,4],"end":[369,5]},"visibility":"public","docs":"Makes a new `NaiveTime` from hour, minute, second and nanosecond.\n\nThe nanosecond part can exceed 1,000,000,000\nin order to represent the [leap second](#leap-second-handling).\n\nPanics on invalid hour, minute, second and/or nanosecond.\n\n# Example\n\n```\nuse chrono::{NaiveTime, Timelike};\n\nlet t = NaiveTime::from_hms_nano(23, 56, 4, 12_345_678);\nassert_eq!(t.hour(), 23);\nassert_eq!(t.minute(), 56);\nassert_eq!(t.second(), 4);\nassert_eq!(t.nanosecond(), 12_345_678);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["hour",{"kind":"primitive","inner":"u32"}],["min",{"kind":"primitive","inner":"u32"}],["sec",{"kind":"primitive","inner":"u32"}],["nano",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2943":{"id":"0:2943","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[166,9],"end":[166,18]},"visibility":{"restricted":{"parent":"0:1062:1890","path":"::naive::date"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:402":{"id":"0:402","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[404,0],"end":[412,1]},"visibility":{"restricted":{"parent":"0:256:1893","path":"::datetime"}},"docs":"Convert a `DateTime<Utc>` instance into a `DateTime<FixedOffset>` instance.","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:3384:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:403:681"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:171:2167":{"id":"0:171:2167","crate_id":0,"name":"format_with_items","span":{"filename":"src/date.rs","begin":[317,4],"end":[323,5]},"visibility":"public","docs":"Formats the date with the specified formatting items.","links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["items",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2927:2039","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8748:157","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"B"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2792:2040","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13580:64772":{"id":"2:13580:64772","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2799:1542":{"id":"0:2799:1542","crate_id":0,"name":"0","span":{"filename":"src/format/mod.rs","begin":[284,17],"end":[284,25]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:2593","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}},"0:2381:4473":{"id":"0:2381:4473","crate_id":0,"name":"isoywd_opt","span":{"filename":"src/offset/mod.rs","begin":[314,4],"end":[319,5]},"visibility":"default","docs":"Makes a new `Date` from ISO week date (year and week number), day of the week (DOW) and\nthe current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\nThe resulting `Date` may have a different year from the input year.\n\nThe time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),\nbut it will propagate to the `DateTime` values constructed via this date.\n\nReturns `None` on the out-of-range date and/or invalid week number.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["year",{"kind":"primitive","inner":"i32"}],["week",{"kind":"primitive","inner":"u32"}],["weekday",{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:3446:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3395:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2344:3098":{"id":"0:2344:3098","crate_id":0,"name":"offset_from_utc_datetime","span":{"filename":"src/offset/utc.rs","begin":[95,4],"end":[97,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["_utc",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:3384:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1194:2078":{"id":"0:1194:2078","crate_id":0,"name":"and_time","span":{"filename":"src/naive/date.rs","begin":[710,4],"end":[712,5]},"visibility":"public","docs":"Makes a new `NaiveDateTime` from the current date and given `NaiveTime`.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveTime, NaiveDateTime};\n\nlet d = NaiveDate::from_ymd(2015, 6, 3);\nlet t = NaiveTime::from_hms_milli(12, 34, 56, 789);\n\nlet dt: NaiveDateTime = d.and_time(t);\nassert_eq!(dt.date(), d);\nassert_eq!(dt.time(), t);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["time",{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3537:408":{"id":"0:3537:408","crate_id":0,"name":"clone","span":{"filename":"src/month.rs","begin":[30,30],"end":[30,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Month","id":"0:3492:1880","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:21":{"id":"0:21","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[455,30],"end":[455,43]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::SecondsFormat","name":"SecondsFormat","id":"0:2597:1878","glob":false}},"0:3384:1884":{"id":"0:3384:1884","crate_id":0,"name":"Utc","span":{"filename":"src/offset/utc.rs","begin":[44,0],"end":[44,15]},"visibility":"public","docs":"The UTC time zone. This is the most efficient time zone when you don't need the local time.\nIt is also used as an offset (which is also a dummy type).\n\nUsing the [`TimeZone`](./trait.TimeZone.html) methods\non the UTC struct is the preferred way to construct `DateTime<Utc>`\ninstances.\n\n# Example\n\n```\nuse chrono::{DateTime, TimeZone, NaiveDateTime, Utc};\n\nlet dt = DateTime::<Utc>::from_utc(NaiveDateTime::from_timestamp(61, 0), Utc);\n\nassert_eq!(Utc.timestamp(61, 0), dt);\nassert_eq!(Utc.ymd(1970, 1, 1).and_hms(0, 1, 1), dt);\n```","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"unit","generics":{"params":[],"where_predicates":[]},"fields_stripped":false,"fields":[],"impls":["0:2335","a:2:3310:7473-0:3384:1884","a:2:9408:7639-0:3384:1884","a:2:3269:211-0:3384:1884","a:2:9407:7640-0:3384:1884","a:2:3281:220-0:3384:1884","b:2:2869-0:3384:1884","b:2:4002-0:3384:1884","b:2:3198-0:3384:1884","b:2:2872-0:3384:1884","b:2:3208-0:3384:1884","b:2:3202-0:3384:1884","b:2:3213-0:3384:1884","b:5:787-0:3384:1884","b:5:6420-0:3384:1884","0:3386","0:3387","0:3389","0:3390","0:3392","0:3393","0:2338","0:2345","0:2347","0:2349"]}},"0:1460:181":{"id":"0:1460:181","crate_id":0,"name":"Output","span":{"filename":"src/naive/datetime/mod.rs","begin":[1341,4],"end":[1341,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:3094":{"id":"0:3094","crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[25,24],"end":[25,28]},"visibility":{"restricted":{"parent":"0:1795:5699","path":"::offset::fixed"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10678:142","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3095:715"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3208-0:2927:2039":{"id":"b:2:3208-0:2927:2039","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2927:2039","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:6887:8524":{"id":"1:6887:8524","crate_id":1,"name":"IntoRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6888:63069"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1189:4006":{"id":"0:1189:4006","crate_id":0,"name":"from_weekday_of_month_opt","span":{"filename":"src/naive/date.rs","begin":[537,4],"end":[550,5]},"visibility":"public","docs":"Makes a new `NaiveDate` by counting the number of occurrences of a particular day-of-week\nsince the beginning of the given month.  For instance, if you want the 2nd Friday of March\n2017, you would use `NaiveDate::from_weekday_of_month(2017, 3, Weekday::Fri, 2)`.  `n` is 1-indexed.\n\n```\nuse chrono::{NaiveDate, Weekday};\nassert_eq!(NaiveDate::from_weekday_of_month_opt(2017, 3, Weekday::Fri, 2),\n           NaiveDate::from_ymd_opt(2017, 3, 10))\n```\n\nReturns `None` if `n` out-of-range; ie. if `n` is larger than the number of `weekday` in\n`month` (eg. the 6th Friday of March 2017), or if `n == 0`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["year",{"kind":"primitive","inner":"i32"}],["month",{"kind":"primitive","inner":"u32"}],["weekday",{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:3446:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["n",{"kind":"primitive","inner":"u8"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1684:2479":{"id":"0:1684:2479","crate_id":0,"name":"nanosecond","span":{"filename":"src/naive/time/mod.rs","begin":[888,4],"end":[890,5]},"visibility":"default","docs":"Returns the number of nanoseconds since the whole non-leap second.\nThe range from 1,000,000,000 to 1,999,999,999 represents\nthe [leap second](#leap-second-handling).\n\n# Example\n\n```\nuse chrono::{NaiveTime, Timelike};\n\nassert_eq!(NaiveTime::from_hms(0, 0, 0).nanosecond(), 0);\nassert_eq!(NaiveTime::from_hms_nano(23, 56, 4, 12_345_678).nanosecond(), 12_345_678);\n```\n\nLeap seconds may have seemingly out-of-range return values.\nYou can reduce the range with `time.nanosecond() % 1_000_000_000`, or\nuse the proper [formatting method](#method.format) to get a human-readable representation.\n\n```\n# use chrono::{NaiveTime, Timelike};\nlet leap = NaiveTime::from_hms_milli(23, 59, 59, 1_000);\nassert_eq!(leap.nanosecond(), 1_000_000_000);\nassert_eq!(leap.format(\"%H:%M:%S%.9f\").to_string(), \"23:59:60.000000000\");\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:226":{"id":"0:226","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[491,0],"end":[496,1]},"visibility":{"restricted":{"parent":"0:61:1890","path":"::date"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:2374:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AddAssign","id":"2:3368:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Duration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:228:266"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1202:2107":{"id":"0:1202:2107","crate_id":0,"name":"and_hms_micro_opt","span":{"filename":"src/naive/date.rs","begin":[863,4],"end":[871,5]},"visibility":"public","docs":"Makes a new `NaiveDateTime` from the current date, hour, minute, second and microsecond.\n\nThe microsecond part can exceed 1,000,000\nin order to represent the [leap second](./struct.NaiveTime.html#leap-second-handling).\n\nReturns `None` on invalid hour, minute, second and/or microsecond.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet d = NaiveDate::from_ymd(2015, 6, 3);\nassert!(d.and_hms_micro_opt(12, 34, 56,   789_012).is_some());\nassert!(d.and_hms_micro_opt(12, 34, 59, 1_789_012).is_some()); // leap second\nassert!(d.and_hms_micro_opt(12, 34, 59, 2_789_012).is_none());\nassert!(d.and_hms_micro_opt(12, 34, 60,   789_012).is_none());\nassert!(d.and_hms_micro_opt(12, 60, 56,   789_012).is_none());\nassert!(d.and_hms_micro_opt(24, 34, 56,   789_012).is_none());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["hour",{"kind":"primitive","inner":"u32"}],["min",{"kind":"primitive","inner":"u32"}],["sec",{"kind":"primitive","inner":"u32"}],["micro",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4002-0:2908:2041":{"id":"b:2:4002-0:2908:2041","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2908:2041","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1226:4197":{"id":"0:1226:4197","crate_id":0,"name":"iter_days","span":{"filename":"src/naive/date.rs","begin":[1232,4],"end":[1234,5]},"visibility":"public","docs":"Returns an iterator that steps by days across all representable dates.\n\n# Example\n\n```\n# use chrono::NaiveDate;\n\nlet expected = [\n    NaiveDate::from_ymd(2016, 2, 27),\n    NaiveDate::from_ymd(2016, 2, 28),\n    NaiveDate::from_ymd(2016, 2, 29),\n    NaiveDate::from_ymd(2016, 3, 1),\n];\n\nlet mut count = 0;\nfor (idx, d) in NaiveDate::from_ymd(2016, 2, 27).iter_days().take(4).enumerate() {\n   assert_eq!(d, expected[idx]);\n   count += 1;\n}\nassert_eq!(count, 4);\n\nfor d in NaiveDate::from_ymd(2016, 3, 1).iter_days().rev().take(4) {\n    count -= 1;\n    assert_eq!(d, expected[count]);\n}\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveDateDaysIterator","id":"0:2959:4198","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"23:476:7301":{"id":"23:476:7301","crate_id":23,"name":"One","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:477:7300","23:478:66165","23:479:66164"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Mul","id":"2:3347:7086","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:134:2086":{"id":"0:134:2086","crate_id":0,"name":"and_hms","span":{"filename":"src/date.rs","begin":[97,4],"end":[99,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date, hour, minute and second.\nThe offset in the current date is preserved.\n\nPanics on invalid hour, minute and/or second.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["hour",{"kind":"primitive","inner":"u32"}],["min",{"kind":"primitive","inner":"u32"}],["sec",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3082:415":{"id":"0:3082:415","crate_id":0,"name":"cmp","span":{"filename":"src/naive/time/mod.rs","begin":[190,42],"end":[190,45]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Ordering","id":"2:37761:178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9407:7640-0:2908:2041":{"id":"a:2:9407:7640-0:2908:2041","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9407:7640","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2908:2041","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1196:2090":{"id":"0:1196:2090","crate_id":0,"name":"and_hms_opt","span":{"filename":"src/naive/date.rs","begin":[757,4],"end":[759,5]},"visibility":"public","docs":"Makes a new `NaiveDateTime` from the current date, hour, minute and second.\n\nNo [leap second](./struct.NaiveTime.html#leap-second-handling) is allowed here;\nuse `NaiveDate::and_hms_*_opt` methods with a subsecond parameter instead.\n\nReturns `None` on invalid hour, minute and/or second.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet d = NaiveDate::from_ymd(2015, 6, 3);\nassert!(d.and_hms_opt(12, 34, 56).is_some());\nassert!(d.and_hms_opt(12, 34, 60).is_none()); // use `and_hms_milli_opt` instead\nassert!(d.and_hms_opt(12, 60, 56).is_none());\nassert!(d.and_hms_opt(24, 34, 56).is_none());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["hour",{"kind":"primitive","inner":"u32"}],["min",{"kind":"primitive","inner":"u32"}],["sec",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2412":{"id":"0:2412","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[491,51],"end":[491,59]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"offset::TimeZone","name":"TimeZone","id":"0:2374:1889","glob":false}},"b:2:3198-0:2590:1872":{"id":"b:2:3198-0:2590:1872","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["2:3201:2536"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3213-0:2792:2040":{"id":"b:2:3213-0:2792:2040","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2792:2040","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:520:1355":{"id":"0:520:1355","crate_id":0,"name":"sub","span":{"filename":"src/datetime/mod.rs","begin":[895,4],"end":[897,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2337:5866":{"id":"0:2337:5866","crate_id":0,"name":"now","span":{"filename":"src/offset/utc.rs","begin":[59,4],"end":[64,5]},"visibility":"public","docs":"Returns a `DateTime` which corresponds to the current date and time.","links":{},"attrs":["#[cfg(not(all(target_arch = \"wasm32\", feature = \"wasmbind\",\nnot(any(target_os = \"emscripten\", target_os = \"wasi\")))))]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:3384:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:179:2158":{"id":"0:179:2158","crate_id":0,"name":"year","span":{"filename":"src/date.rs","begin":[380,4],"end":[382,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13685:64788":{"id":"2:13685:64788","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"self::pattern":"2:13202:1925","prim@char":"1:15986:6923"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13212:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13227:7161","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:373:1890":{"id":"0:373:1890","crate_id":0,"name":"date","span":{"filename":"src/datetime/mod.rs","begin":[165,4],"end":[167,5]},"visibility":"public","docs":"Retrieves a date component\n\nUnless you are immediately planning on turning this into a `DateTime`\nwith the same Timezone you should use the\n[`date_naive`](DateTime::date_naive) method.\n\n```\nuse chrono::prelude::*;\n\nlet date: Date<Utc> = Utc.ymd(2020, 1, 1);\nlet dt: DateTime<Utc> = date.and_hms(0, 0, 0);\n\nassert_eq!(dt.date(), date);\n\nassert_eq!(dt.date().and_hms(1, 1, 1), date.and_hms(1, 1, 1));\n```","links":{"DateTime::date_naive":"0:2621:1877"},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13615:6260":{"id":"2:13615:6260","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"self::pattern":"2:13202:1925","prim@char":"1:15986:6923"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13212:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13227:7161","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2750:1542":{"id":"0:2750:1542","crate_id":0,"name":"0","span":{"filename":"src/format/mod.rs","begin":[249,13],"end":[249,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2761:2702","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"b:2:3213-0:3562:1911":{"id":"b:2:3213-0:3562:1911","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseMonthError","id":"0:3562:1911","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13227:7161":{"id":"2:13227:7161","crate_id":2,"name":"ReverseSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:13229:4361","2:13230:63937","2:13231:63938"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Searcher","id":"2:13221:7162","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:617:408":{"id":"0:617:408","crate_id":0,"name":"clone","span":{"filename":"src/format/mod.rs","begin":[158,4],"end":[160,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:188:2193":{"id":"0:188:2193","crate_id":0,"name":"with_year","span":{"filename":"src/date.rs","begin":[417,4],"end":[419,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["year",{"kind":"primitive","inner":"i32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1177":{"id":"0:1177","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[207,0],"end":[1278,1]},"visibility":{"restricted":{"parent":"0:1062:1890","path":"::naive::date"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1180:2221","0:1181:3056","0:1182:3908","0:1183:3057","0:1184:3923","0:1185:3062","0:1186:3976","0:1187:3977","0:1188:4005","0:1189:4006","0:1190:2419","0:1191:4037","0:1192:4043","0:1194:2078","0:1195:2086","0:1196:2090","0:1198:2097","0:1199:2099","0:1201:2105","0:1202:2107","0:1204:2113","0:1205:2115","0:1211:2120","0:1212:2121","0:1214:2126","0:1215:2127","0:1217:2140","0:1218:2142","0:1219:2147","0:1220:2167","0:1224:671","0:1226:4197","0:1227:4205","0:1228:2842","0:1229:2160","0:1230:2161"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:4002-0:2845:2736":{"id":"b:2:4002-0:2845:2736","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2845:2736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:152:957":{"id":"0:152:957","crate_id":0,"name":"offset","span":{"filename":"src/date.rs","begin":[222,4],"end":[224,5]},"visibility":"public","docs":"Retrieves an associated offset from UTC.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Tz"},"trait":{"name":"","id":"0:2374:1889","args":null}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:401:59":{"id":"0:401:59","crate_id":0,"name":"default","span":{"filename":"src/datetime/mod.rs","begin":[398,4],"end":[400,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3269:211-0:2713:2238":{"id":"a:2:3269:211-0:2713:2238","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2713:2238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1251":{"id":"0:1251","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[1653,0],"end":[1658,1]},"visibility":{"restricted":{"parent":"0:1062:1890","path":"::naive::date"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AddAssign","id":"2:3368:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Duration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1252:266"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13603:3493":{"id":"2:13603:3493","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"2:49577:7168","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1651":{"id":"0:1651","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[197,0],"end":[805,1]},"visibility":{"restricted":{"parent":"0:1586:1556","path":"::naive::time"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1652:3149","0:1653:2093","0:1654:5390","0:1655:2101","0:1657:5402","0:1658:2109","0:1660:3152","0:1661:2117","0:1662:5426","0:1663:4665","0:1664:2419","0:1665:4802","0:1666:4823","0:1667:2147","0:1671:2167","0:1675:671"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2676:2631":{"id":"0:2676:2631","crate_id":0,"name":"WeekFromSun","span":{"filename":"src/format/mod.rs","begin":[118,4],"end":[118,15]},"visibility":"default","docs":"Week number, where the week 1 starts at the first Sunday of January (FW=PW=2).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2294":{"id":"0:2294","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[34,0],"end":[34,27]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"clock\")]"],"deprecation":null,"kind":"import","inner":{"source":"self::local::Local","name":"Local","id":"0:3377:1873","glob":false}},"a:2:9408:7639-0:2761:2702":{"id":"a:2:9408:7639-0:2761:2702","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9408:7639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2761:2702","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2830:660":{"id":"0:2830:660","crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[278,31],"end":[278,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10400:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10389:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9408:7639-0:2941:1885":{"id":"a:2:9408:7639-0:2941:1885","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9408:7639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3016":{"id":"0:3016","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[74,53],"end":[74,58]},"visibility":{"restricted":{"parent":"0:1291:1893","path":"::naive::datetime"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3017:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2872-0:2590:1872":{"id":"b:2:2872-0:2590:1872","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:7071","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["2:2874:5915"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3549":{"id":"0:3549","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[193,22],"end":[193,27]},"visibility":{"restricted":{"parent":"0:2518:1909","path":"::month"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10440:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Months","id":"0:3543:1910","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3550:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:6098:2789":{"id":"5:6098:2789","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:8368:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:787-0:2873:2237":{"id":"b:5:787-0:2873:2237","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Parsed","id":"0:2873:2237","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:7921","5:790:7922","5:791:7923"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3310:7473-0:2941:1885":{"id":"a:2:3310:7473-0:2941:1885","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:7473","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3310:7473-0:2621:1877":{"id":"a:2:3310:7473-0:2621:1877","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Tz"},"trait":{"name":"TimeZone","id":"0:2374:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3310:7473","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:7473","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2761:2702":{"id":"0:2761:2702","crate_id":0,"name":"InternalFixed","span":{"filename":"src/format/mod.rs","begin":[254,0],"end":[256,1]},"visibility":"public","docs":"An opaque type representing fixed-format item types for internal uses only.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:3310:7473-0:2761:2702","a:2:9408:7639-0:2761:2702","a:2:3269:211-0:2761:2702","a:2:9407:7640-0:2761:2702","a:2:3281:220-0:2761:2702","b:2:2869-0:2761:2702","b:2:4002-0:2761:2702","b:2:3198-0:2761:2702","b:2:2872-0:2761:2702","b:2:3208-0:2761:2702","b:2:3202-0:2761:2702","b:2:3213-0:2761:2702","b:5:787-0:2761:2702","0:2763","0:2765","0:2767","0:2768","0:2770","0:2771"]}},"2:13593:60377":{"id":"2:13593:60377","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11082:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11082:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3202-0:2831:1898":{"id":"b:2:3202-0:2831:1898","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2831:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:527":{"id":"0:527","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[926,0],"end":[932,1]},"visibility":{"restricted":{"parent":"0:256:1893","path":"::datetime"}},"docs":"Accepts a relaxed form of RFC3339.\nA space or a 'T' are acepted as the separator between the date and time\nparts. Additional spaces are allowed between each component.\n\nAll of these examples are equivalent:\n```\n# use chrono::{DateTime, Utc};\n\"2012-12-12T12:12:12Z\".parse::<DateTime<Utc>>();\n\"2012-12-12 12:12:12Z\".parse::<DateTime<Utc>>();\n\"2012-  12-12T12:  12:12Z\".parse::<DateTime<Utc>>();\n```","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:13141:2501","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:3384:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:528:126","0:529:2502"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:512:181":{"id":"0:512:181","crate_id":0,"name":"Output","span":{"filename":"src/datetime/mod.rs","begin":[873,4],"end":[873,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}},"0:517":{"id":"0:517","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[891,0],"end":[898,1]},"visibility":{"restricted":{"parent":"0:256:1893","path":"::datetime"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:2374:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:3342:2033","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:519:181","0:520:1355"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3269:211-0:3052:1901":{"id":"a:2:3269:211-0:3052:1901","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IsoWeek","id":"0:3052:1901","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:478:2482":{"id":"0:478:2482","crate_id":0,"name":"with_second","span":{"filename":"src/datetime/mod.rs","begin":[798,4],"end":[800,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["sec",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2666:2623":{"id":"0:2666:2623","crate_id":0,"name":"IsoYear","span":{"filename":"src/format/mod.rs","begin":[108,4],"end":[108,11]},"visibility":"default","docs":"Year in the ISO week date (FW=4, PW=∞).\nMay accept years before 1 BCE or after 9999 CE, given an initial sign.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"b:2:4002-0:2936:1902":{"id":"b:2:4002-0:2936:1902","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveWeek","id":"0:2936:1902","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2872-0:2713:2238":{"id":"b:2:2872-0:2713:2238","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:7071","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2713:2238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:5915"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1454":{"id":"0:1454","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1276,0],"end":[1283,1]},"visibility":{"restricted":{"parent":"0:1291:1893","path":"::naive::datetime"}},"docs":"An addition of `Duration` to `NaiveDateTime` yields another `NaiveDateTime`.\n\nAs a part of Chrono's [leap second handling](./struct.NaiveTime.html#leap-second-handling),\nthe addition assumes that **there is no leap second ever**,\nexcept when the `NaiveDateTime` itself represents a leap second\nin which case the assumption becomes that **there is exactly a single leap second ever**.\n\nPanics on underflow or overflow. Use [`NaiveDateTime::checked_add_signed`]\nto detect that.\n\n# Example\n\n```\nuse chrono::{Duration, NaiveDate};\n\nlet from_ymd = NaiveDate::from_ymd;\n\nlet d = from_ymd(2016, 7, 8);\nlet hms = |h, m, s| d.and_hms(h, m, s);\nassert_eq!(hms(3, 5, 7) + Duration::zero(),             hms(3, 5, 7));\nassert_eq!(hms(3, 5, 7) + Duration::seconds(1),         hms(3, 5, 8));\nassert_eq!(hms(3, 5, 7) + Duration::seconds(-1),        hms(3, 5, 6));\nassert_eq!(hms(3, 5, 7) + Duration::seconds(3600 + 60), hms(4, 6, 7));\nassert_eq!(hms(3, 5, 7) + Duration::seconds(86_400),\n           from_ymd(2016, 7, 9).and_hms(3, 5, 7));\nassert_eq!(hms(3, 5, 7) + Duration::days(365),\n           from_ymd(2017, 7, 8).and_hms(3, 5, 7));\n\nlet hmsm = |h, m, s, milli| d.and_hms_milli(h, m, s, milli);\nassert_eq!(hmsm(3, 5, 7, 980) + Duration::milliseconds(450), hmsm(3, 5, 8, 430));\n```\n\nLeap seconds are handled,\nbut the addition assumes that it is the only leap second happened.\n\n```\n# use chrono::{Duration, NaiveDate};\n# let from_ymd = NaiveDate::from_ymd;\n# let hmsm = |h, m, s, milli| from_ymd(2016, 7, 8).and_hms_milli(h, m, s, milli);\nlet leap = hmsm(3, 5, 59, 1_300);\nassert_eq!(leap + Duration::zero(),             hmsm(3, 5, 59, 1_300));\nassert_eq!(leap + Duration::milliseconds(-500), hmsm(3, 5, 59, 800));\nassert_eq!(leap + Duration::milliseconds(500),  hmsm(3, 5, 59, 1_800));\nassert_eq!(leap + Duration::milliseconds(800),  hmsm(3, 6, 0, 100));\nassert_eq!(leap + Duration::seconds(10),        hmsm(3, 6, 9, 300));\nassert_eq!(leap + Duration::seconds(-10),       hmsm(3, 5, 50, 300));\nassert_eq!(leap + Duration::days(1),\n           from_ymd(2016, 7, 9).and_hms_milli(3, 5, 59, 300));\n```","links":{"`NaiveDateTime::checked_add_signed`":"0:2999:1886"},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Add","id":"2:3337:2031","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Duration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1455:181","0:1456:265"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2754":{"id":"0:2754","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[181,16],"end":[181,25]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2713:2238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2713:2238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2755:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:428:2423":{"id":"0:428:2423","crate_id":0,"name":"to_rfc3339","span":{"filename":"src/datetime/mod.rs","begin":[555,4],"end":[558,5]},"visibility":"public","docs":"Returns an RFC 3339 and ISO 8601 date and time string such as `1996-12-19T16:39:57-08:00`.","links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3445":{"id":"0:3445","crate_id":0,"name":null,"span":{"filename":"src/round.rs","begin":[241,38],"end":[241,42]},"visibility":{"restricted":{"parent":"0:2418:1904","path":"::round"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RoundingError","id":"0:3428:1906","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2627:408":{"id":"0:2627:408","crate_id":0,"name":"clone","span":{"filename":"src/datetime/mod.rs","begin":[84,9],"end":[84,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"23:589:7309":{"id":"23:589:7309","crate_id":23,"name":"CheckedShr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:590:66381"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Shr","id":"2:3417:7097","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u32"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:3488:604":{"id":"0:3488:604","crate_id":0,"name":"eq","span":{"filename":"src/weekday.rs","begin":[189,16],"end":[189,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:3482:1908","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3372:2034":{"id":"2:3372:2034","crate_id":2,"name":"SubAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3374:1356"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3061:997":{"id":"0:3061:997","crate_id":0,"name":"partial_cmp","span":{"filename":"src/naive/isoweek.rs","begin":[19,24],"end":[19,34]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"IsoWeek","id":"0:3052:1901","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::option::Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Ordering","id":"2:37761:178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"23:754:7321":{"id":"23:754:7321","crate_id":23,"name":"WrappingMul","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:755:1528"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Mul","id":"2:3347:7086","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2644:2446":{"id":"0:2644:2446","crate_id":0,"name":"Zero","span":{"filename":"src/format/mod.rs","begin":[79,4],"end":[79,8]},"visibility":"default","docs":"Zero (`0`) padding.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2646:2604":{"id":"0:2646:2604","crate_id":0,"name":"Space","span":{"filename":"src/format/mod.rs","begin":[81,4],"end":[81,9]},"visibility":"default","docs":"Space padding.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:182:2159":{"id":"0:182:2159","crate_id":0,"name":"day","span":{"filename":"src/date.rs","begin":[392,4],"end":[394,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1683:2478":{"id":"0:1683:2478","crate_id":0,"name":"second","span":{"filename":"src/naive/time/mod.rs","begin":[860,4],"end":[862,5]},"visibility":"default","docs":"Returns the second number from 0 to 59.\n\n# Example\n\n```\nuse chrono::{NaiveTime, Timelike};\n\nassert_eq!(NaiveTime::from_hms(0, 0, 0).second(), 0);\nassert_eq!(NaiveTime::from_hms_nano(23, 56, 4, 12_345_678).second(), 4);\n```\n\nThis method never returns 60 even when it is a leap second.\n([Why?](#leap-second-handling))\nUse the proper [formatting method](#method.format) to get a human-readable representation.\n\n```\n# use chrono::{NaiveTime, Timelike};\nlet leap = NaiveTime::from_hms_milli(23, 59, 59, 1_000);\nassert_eq!(leap.second(), 59);\nassert_eq!(leap.format(\"%H:%M:%S\").to_string(), \"23:59:60\");\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2377:4466":{"id":"0:2377:4466","crate_id":0,"name":"ymd_opt","span":{"filename":"src/offset/mod.rs","begin":[244,4],"end":[249,5]},"visibility":"default","docs":"Makes a new `Date` from year, month, day and the current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\n\nThe time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),\nbut it will propagate to the `DateTime` values constructed via this date.\n\nReturns `None` on the out-of-range date, invalid month and/or day.\n\n# Example\n\n```\nuse chrono::{Utc, LocalResult, TimeZone};\n\nassert_eq!(Utc.ymd_opt(2015, 5, 15).unwrap().to_string(), \"2015-05-15UTC\");\nassert_eq!(Utc.ymd_opt(2000, 0, 0), LocalResult::None);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["year",{"kind":"primitive","inner":"i32"}],["month",{"kind":"primitive","inner":"u32"}],["day",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3395:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1184:3923":{"id":"0:1184:3923","crate_id":0,"name":"from_isoywd","span":{"filename":"src/naive/date.rs","begin":[341,4],"end":[343,5]},"visibility":"public","docs":"Makes a new `NaiveDate` from the [ISO week date](#week-date)\n(year, week number and day of the week).\nThe resulting `NaiveDate` may have a different year from the input year.\n\nPanics on the out-of-range date and/or invalid week number.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike, Weekday};\n\nlet d = NaiveDate::from_isoywd(2015, 11, Weekday::Sat);\nassert_eq!(d.iso_week().year(), 2015);\nassert_eq!(d.iso_week().week(), 11);\nassert_eq!(d.weekday(), Weekday::Sat);\nassert_eq!(d.year(), 2015);\nassert_eq!(d.month(), 3);\nassert_eq!(d.day(), 14);\nassert_eq!(d.ordinal(), 73); // day of year\nassert_eq!(d.num_days_from_ce(), 735671); // days since January 1, 1 CE\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["year",{"kind":"primitive","inner":"i32"}],["week",{"kind":"primitive","inner":"u32"}],["weekday",{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:3446:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1469":{"id":"0:1469","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1462,0],"end":[1466,1]},"visibility":{"restricted":{"parent":"0:1291:1893","path":"::naive::datetime"}},"docs":"The `Display` output of the naive date and time `dt` is the same as\n[`dt.format(\"%Y-%m-%d %H:%M:%S%.f\")`](crate::format::strftime).\n\nIt should be noted that, for leap seconds not on the minute boundary,\nit may print a representation not distinguishable from non-leap seconds.\nThis doesn't matter in practice, since such leap seconds never happened.\n(By the time of the first leap second on 1972-06-30,\nevery time zone offset around the world has standardized to the 5-minute alignment.)\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet dt = NaiveDate::from_ymd(2016, 11, 15).and_hms(7, 39, 24);\nassert_eq!(format!(\"{}\", dt), \"2016-11-15 07:39:24\");\n```\n\nLeap seconds may also be used.\n\n```\n# use chrono::NaiveDate;\nlet dt = NaiveDate::from_ymd(2015, 6, 30).and_hms_milli(23, 59, 59, 1_500);\nassert_eq!(format!(\"{}\", dt), \"2015-06-30 23:59:60.500\");\n```","links":{"crate::format::strftime":"0:995:2597"},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10447:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1470:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13141:2501":{"id":"2:13141:2501","crate_id":2,"name":"FromStr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13142:126","2:13143:2502"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3269:211-0:3543:1910":{"id":"a:2:3269:211-0:3543:1910","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Months","id":"0:3543:1910","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:4002-0:2590:1872":{"id":"b:2:4002-0:2590:1872","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2460:6588":{"id":"0:2460:6588","crate_id":0,"name":"duration_round","span":{"filename":"src/round.rs","begin":[125,4],"end":[125,75]},"visibility":"default","docs":"Return a copy rounded by Duration.\n\n# Example\n``` rust\n# use chrono::{DateTime, DurationRound, Duration, TimeZone, Utc};\nlet dt = Utc.ymd(2018, 1, 11).and_hms_milli(12, 0, 0, 154);\nassert_eq!(\n    dt.duration_round(Duration::milliseconds(10)).unwrap().to_string(),\n    \"2018-01-11 12:00:00.150 UTC\"\n);\nassert_eq!(\n    dt.duration_round(Duration::days(1)).unwrap().to_string(),\n    \"2018-01-12 00:00:00 UTC\"\n);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["duration",{"kind":"resolved_path","inner":{"name":"Duration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47753:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:2458:1905","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:3717:7109":{"id":"2:3717:7109","crate_id":2,"name":"OneSidedRange","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"RangeBounds","id":"2:3648:7108","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3277:218":{"id":"2:3277:218","crate_id":2,"name":"StructuralPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1427:2193":{"id":"0:1427:2193","crate_id":0,"name":"with_year","span":{"filename":"src/naive/datetime/mod.rs","begin":[923,4],"end":[925,5]},"visibility":"default","docs":"Makes a new `NaiveDateTime` with the year number changed.\n\nReturns `None` when the resulting `NaiveDateTime` would be invalid.\n\nSee also the [`NaiveDate::with_year`] method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Datelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 25).and_hms(12, 34, 56);\nassert_eq!(dt.with_year(2016), Some(NaiveDate::from_ymd(2016, 9, 25).and_hms(12, 34, 56)));\nassert_eq!(dt.with_year(-308), Some(NaiveDate::from_ymd(-308, 9, 25).and_hms(12, 34, 56)));\n```","links":{"`NaiveDate::with_year`":"0:2941:1885"},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["year",{"kind":"primitive","inner":"i32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:129:1891":{"id":"0:129:1891","crate_id":0,"name":"MAX_DATE","span":{"filename":"src/date.rs","begin":[70,0],"end":[70,53]},"visibility":"public","docs":"The maximum possible `Date`.","links":{},"attrs":["#[allow(deprecated)]","#[deprecated(since = \"0.4.20\", note = \"Use Date::MAX_UTC instead\")]"],"deprecation":{"since":"0.4.20","note":"Use Date::MAX_UTC instead"},"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:3384:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"expr":"Date<Utc>::MAX_UTC","value":null,"is_literal":false}},"2:3519:130":{"id":"2:3519:130","crate_id":2,"name":"Fn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3521:376"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3522:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:770:2987":{"id":"0:770:2987","crate_id":0,"name":"set_year_mod_100","span":{"filename":"src/format/parsed.rs","begin":[151,4],"end":[156,5]},"visibility":"public","docs":"Tries to set the [`year_mod_100`](#structfield.year_mod_100) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["value",{"kind":"primitive","inner":"i64"}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:632:1899","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2835:660":{"id":"0:2835:660","crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[336,9],"end":[336,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10400:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10389:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3310:7473-0:3482:1908":{"id":"a:2:3310:7473-0:3482:1908","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:7473","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:3482:1908","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2528:6718":{"id":"0:2528:6718","crate_id":0,"name":"from_u64","span":{"filename":"src/month.rs","begin":[163,4],"end":[165,5]},"visibility":"default","docs":"Returns an Option<Month> from a i64, assuming a 1-index, January = 1.\n\n`Month::from_i64(n: i64)`: | `1`                  | `2`                   | ... | `12`\n---------------------------| -------------------- | --------------------- | ... | -----\n``:                        | Some(Month::January) | Some(Month::February) | ... | Some(Month::December)","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["n",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Month","id":"0:3492:1880","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1212:2121":{"id":"0:1212:2121","crate_id":0,"name":"succ_opt","span":{"filename":"src/naive/date.rs","begin":[994,4],"end":[996,5]},"visibility":"public","docs":"Makes a new `NaiveDate` for the next calendar date.\n\nReturns `None` when `self` is the last representable date.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nassert_eq!(NaiveDate::from_ymd(2015, 6, 3).succ_opt(),\n           Some(NaiveDate::from_ymd(2015, 6, 4)));\nassert_eq!(NaiveDate::MAX.succ_opt(), None);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"23:762:7324":{"id":"23:762:7324","crate_id":23,"name":"WrappingShr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:763:66144"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Shr","id":"2:3417:7097","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:2869-0:2845:2736":{"id":"b:2:2869-0:2845:2736","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2845:2736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:2030"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2282:2131":{"id":"0:2282:2131","crate_id":0,"name":"from_offset","span":{"filename":"src/offset/local/mod.rs","begin":[92,4],"end":[94,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["_offset",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Local","id":"0:3377:1873","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:236":{"id":"0:236","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[514,0],"end":[521,1]},"visibility":{"restricted":{"parent":"0:61:1890","path":"::date"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:2374:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:3342:2033","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:238:181","0:239:1355"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1224:671":{"id":"0:1224:671","crate_id":0,"name":"format","span":{"filename":"src/naive/date.rs","begin":[1201,4],"end":[1203,5]},"visibility":"public","docs":"Formats the date with the specified format string.\nSee the [`format::strftime` module](../format/strftime/index.html)\non the supported escape sequences.\n\nThis returns a `DelayedFormat`,\nwhich gets converted to a string only when actual formatting happens.\nYou may use the `to_string` method to get a `String`,\nor just feed it into `print!` and other formatting macros.\n(In this way it avoids the redundant memory allocation.)\n\nA wrong format string does *not* issue an error immediately.\nRather, converting or formatting the `DelayedFormat` fails.\nYou are recommended to immediately use `DelayedFormat` for this reason.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet d = NaiveDate::from_ymd(2015, 9, 5);\nassert_eq!(d.format(\"%Y-%m-%d\").to_string(), \"2015-09-05\");\nassert_eq!(d.format(\"%A, %-d %B, %C%y\").to_string(), \"Saturday, 5 September, 2015\");\n```\n\nThe resulting `DelayedFormat` can be formatted directly via the `Display` trait.\n\n```\n# use chrono::NaiveDate;\n# let d = NaiveDate::from_ymd(2015, 9, 5);\nassert_eq!(format!(\"{}\", d.format(\"%Y-%m-%d\")), \"2015-09-05\");\nassert_eq!(format!(\"{}\", d.format(\"%A, %-d %B, %C%y\")), \"Saturday, 5 September, 2015\");\n```","links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["fmt",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2927:2039","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2908:2041","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1172:3817":{"id":"0:1172:3817","crate_id":0,"name":"first_day","span":{"filename":"src/naive/date.rs","begin":[75,4],"end":[80,5]},"visibility":"public","docs":"Returns a date representing the first day of the week.\n\n# Examples\n\n```\nuse chrono::{NaiveDate, Weekday};\n\nlet date = NaiveDate::from_ymd(2022, 4, 18);\nlet week = date.week(Weekday::Mon);\nassert!(week.first_day() <= date);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1422:2189":{"id":"0:1422:2189","crate_id":0,"name":"day0","span":{"filename":"src/naive/datetime/mod.rs","begin":[843,4],"end":[845,5]},"visibility":"default","docs":"Returns the day of month starting from 0.\n\nThe return value ranges from 0 to 30. (The last day of month differs by months.)\n\nSee also the [`NaiveDate::day0`](./struct.NaiveDate.html#method.day0) method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Datelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 25).and_hms(12, 34, 56);\nassert_eq!(dt.day0(), 24);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1187:3977":{"id":"0:1187:3977","crate_id":0,"name":"from_num_days_from_ce_opt","span":{"filename":"src/naive/date.rs","begin":[488,4],"end":[494,5]},"visibility":"public","docs":"Makes a new `NaiveDate` from a day's number in the proleptic Gregorian calendar, with\nJanuary 1, 1 being day 1.\n\nReturns `None` if the date is out of range.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet from_ndays_opt = NaiveDate::from_num_days_from_ce_opt;\nlet from_ymd = NaiveDate::from_ymd;\n\nassert_eq!(from_ndays_opt(730_000),      Some(from_ymd(1999, 9, 3)));\nassert_eq!(from_ndays_opt(1),            Some(from_ymd(1, 1, 1)));\nassert_eq!(from_ndays_opt(0),            Some(from_ymd(0, 12, 31)));\nassert_eq!(from_ndays_opt(-1),           Some(from_ymd(0, 12, 30)));\nassert_eq!(from_ndays_opt(100_000_000),  None);\nassert_eq!(from_ndays_opt(-100_000_000), None);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["days",{"kind":"primitive","inner":"i32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2952":{"id":"0:2952","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[166,30],"end":[166,40]},"visibility":{"restricted":{"parent":"0:1062:1890","path":"::naive::date"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["le","ge","lt","gt"],"trait":{"name":"PartialOrd","id":"2:2967:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2953:997"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3310:7473-0:2713:2238":{"id":"a:2:3310:7473-0:2713:2238","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:7473","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2713:2238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:6090":{"id":"5:6090","crate_id":5,"name":null,"span":null,"visibility":{"restricted":{"parent":"5:5903:1340","path":"::str"}},"docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["5:6091:65426","5:6092:7417","5:6095:65427","5:6098:2789","5:6110:65428","5:6111:65429","5:6112:6255","5:6113:61475","5:6114:61476"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2732:2462":{"id":"0:2732:2462","crate_id":0,"name":"Nanosecond9","span":{"filename":"src/format/mod.rs","begin":[216,4],"end":[216,15]},"visibility":"default","docs":"Same as [`Nanosecond`](#variant.Nanosecond) but the accuracy is fixed to 9.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:3002":{"id":"0:3002","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[74,9],"end":[74,18]},"visibility":{"restricted":{"parent":"0:1291:1893","path":"::naive::datetime"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2872-0:3543:1910":{"id":"b:2:2872-0:3543:1910","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:7071","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Months","id":"0:3543:1910","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:5915"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:12649:9222":{"id":"2:12649:9222","crate_id":2,"name":"SlicePattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:12650:2040","2:12651:63409"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2869-0:2941:1885":{"id":"b:2:2869-0:2941:1885","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:2030"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1255:265":{"id":"0:1255:265","crate_id":0,"name":"add","span":{"filename":"src/naive/date.rs","begin":[1683,4],"end":[1685,5]},"visibility":"default","docs":"An addition of months to `NaiveDate` clamped to valid days in resulting month.\n\n# Panics\n\nPanics if the resulting date would be out of range.\n\n# Example\n\n```\nuse chrono::{Duration, NaiveDate, Months};\n\nlet from_ymd = NaiveDate::from_ymd;\n\nassert_eq!(from_ymd(2014, 1, 1) + Months::new(1), from_ymd(2014, 2, 1));\nassert_eq!(from_ymd(2014, 1, 1) + Months::new(11), from_ymd(2014, 12, 1));\nassert_eq!(from_ymd(2014, 1, 1) + Months::new(12), from_ymd(2015, 1, 1));\nassert_eq!(from_ymd(2014, 1, 1) + Months::new(13), from_ymd(2015, 2, 1));\nassert_eq!(from_ymd(2014, 1, 31) + Months::new(1), from_ymd(2014, 2, 28));\nassert_eq!(from_ymd(2020, 1, 31) + Months::new(1), from_ymd(2020, 2, 29));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["months",{"kind":"resolved_path","inner":{"name":"Months","id":"0:3543:1910","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:3337:2031","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3208-0:2761:2702":{"id":"b:2:3208-0:2761:2702","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2761:2702","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2490:1907":{"id":"0:2490:1907","crate_id":0,"name":"weekday","span":{"filename":"src/weekday.rs","begin":[1,0],"end":[309,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:3446:1882","0:3482:1908"],"is_stripped":true}},"b:2:3198-0:2641:2445":{"id":"b:2:3198-0:2641:2445","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2641:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:2536"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2920:660":{"id":"0:2920:660","crate_id":0,"name":"fmt","span":{"filename":"src/format/strftime.rs","begin":[197,16],"end":[197,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10400:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10389:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1284:660":{"id":"0:1284:660","crate_id":0,"name":"fmt","span":{"filename":"src/naive/date.rs","begin":[1922,4],"end":[1924,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10400:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10389:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1053:2502":{"id":"0:1053:2502","crate_id":0,"name":"from_str","span":{"filename":"src/format/mod.rs","begin":[950,4],"end":[970,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47753:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:13141:2501","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3063:415":{"id":"0:3063:415","crate_id":0,"name":"cmp","span":{"filename":"src/naive/isoweek.rs","begin":[19,36],"end":[19,39]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"IsoWeek","id":"0:3052:1901","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Ordering","id":"2:37761:178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1394:1890":{"id":"0:1394:1890","crate_id":0,"name":"date","span":{"filename":"src/naive/datetime/mod.rs","begin":[251,4],"end":[253,5]},"visibility":"public","docs":"Retrieves a date component.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet dt = NaiveDate::from_ymd(2016, 7, 8).and_hms(9, 10, 11);\nassert_eq!(dt.date(), NaiveDate::from_ymd(2016, 7, 8));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"23:618:7313":{"id":"23:618:7313","crate_id":23,"name":"Inv","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:619:181","23:620:7334"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2625":{"id":"0:2625","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[84,9],"end":[84,14]},"visibility":{"restricted":{"parent":"0:256:1893","path":"::datetime"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"TimeZone","id":"0:2374:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Tz"},"trait":{"name":"","id":"0:2374:1889","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:2627:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:811:3096":{"id":"0:811:3096","crate_id":0,"name":"to_datetime_with_timezone","span":{"filename":"src/format/parsed.rs","begin":[651,4],"end":[694,5]},"visibility":"public","docs":"Returns a parsed timezone-aware date and time out of given fields,\nwith an additional `TimeZone` used to interpret and validate the local date.\n\nThis method is able to determine the combined date and time\nfrom date and time fields or a single [`timestamp`](#structfield.timestamp) field,\nplus a time zone offset.\nEither way those fields have to be consistent to each other.\nIf parsed fields include an UTC offset, it also has to be consistent to\n[`offset`](#structfield.offset).","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["tz",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Tz"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:632:1899","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:2374:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1653:2093":{"id":"0:1653:2093","crate_id":0,"name":"from_hms_opt","span":{"filename":"src/naive/time/mod.rs","begin":[242,4],"end":[244,5]},"visibility":"public","docs":"Makes a new `NaiveTime` from hour, minute and second.\n\nNo [leap second](#leap-second-handling) is allowed here;\nuse `NaiveTime::from_hms_*_opt` methods with a subsecond parameter instead.\n\nReturns `None` on invalid hour, minute and/or second.\n\n# Example\n\n```\nuse chrono::NaiveTime;\n\nlet from_hms_opt = NaiveTime::from_hms_opt;\n\nassert!(from_hms_opt(0, 0, 0).is_some());\nassert!(from_hms_opt(23, 59, 59).is_some());\nassert!(from_hms_opt(24, 0, 0).is_none());\nassert!(from_hms_opt(23, 60, 0).is_none());\nassert!(from_hms_opt(23, 59, 60).is_none());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["hour",{"kind":"primitive","inner":"u32"}],["min",{"kind":"primitive","inner":"u32"}],["sec",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:198:2198":{"id":"0:198:2198","crate_id":0,"name":"with_ordinal","span":{"filename":"src/date.rs","begin":[442,4],"end":[444,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["ordinal",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9408:7639-0:3086:1883":{"id":"a:2:9408:7639-0:3086:1883","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9408:7639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2672:1880":{"id":"0:2672:1880","crate_id":0,"name":"Month","span":{"filename":"src/format/mod.rs","begin":[114,4],"end":[114,9]},"visibility":"default","docs":"Month (FW=PW=2).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:3389:7095":{"id":"2:3389:7095","crate_id":2,"name":"Not","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3390:181","2:3391:952"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"23:586:7308":{"id":"23:586:7308","crate_id":23,"name":"CheckedShl","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:587:66389"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Shl","id":"2:3411:7096","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u32"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:3383:660":{"id":"0:3383:660","crate_id":0,"name":"fmt","span":{"filename":"src/offset/local/mod.rs","begin":[53,22],"end":[53,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10400:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10389:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"23:577:7305":{"id":"23:577:7305","crate_id":23,"name":"CheckedMul","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:578:3044"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Mul","id":"2:3347:7086","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"22:37:7270":{"id":"22:37:7270","crate_id":22,"name":"Roots","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["22:38:7272","22:39:7273","22:40:7271"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Integer","id":"22:109:7256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2494":{"id":"0:2494","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[31,0],"end":[139,1]},"visibility":{"restricted":{"parent":"0:2490:1907","path":"::weekday"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:3446:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2495:2120","0:2496:2126","0:2497:2843","0:2498:6707","0:2499:2839","0:2500:2837"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2769:604":{"id":"0:2769:604","crate_id":0,"name":"eq","span":{"filename":"src/format/mod.rs","begin":[253,23],"end":[253,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2761:2702","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1712:59":{"id":"0:1712:59","crate_id":0,"name":"default","span":{"filename":"src/naive/time/mod.rs","begin":[1332,4],"end":[1334,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3198-0:3543:1910":{"id":"b:2:3198-0:3543:1910","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Months","id":"0:3543:1910","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:2536"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:6091:65426":{"id":"5:6091:65426","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[stable(feature = \"str_box_extras\", since = \"1.20.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:2593","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8113:8279","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:2593","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8113:8279","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:635:660":{"id":"0:635:660","crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[386,4],"end":[397,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10400:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10389:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2499:2839":{"id":"0:2499:2839","crate_id":0,"name":"num_days_from_monday","span":{"filename":"src/weekday.rs","begin":[110,4],"end":[120,5]},"visibility":"public","docs":"Returns a day-of-week number starting from Monday = 0.\n\n`w`:                        | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun`\n--------------------------- | ----- | ----- | ----- | ----- | ----- | ----- | -----\n`w.num_days_from_monday()`: | 0     | 1     | 2     | 3     | 4     | 5     | 6","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9407:7640-0:614:2656":{"id":"a:2:9407:7640-0:614:2656","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9407:7640","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:614:2656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2682:2636":{"id":"0:2682:2636","crate_id":0,"name":"NumDaysFromSun","span":{"filename":"src/format/mod.rs","begin":[124,4],"end":[124,18]},"visibility":"default","docs":"Day of the week, where Sunday = 0 and Saturday = 6 (FW=PW=1).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"b:2:3202-0:614:2656":{"id":"b:2:3202-0:614:2656","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:614:2656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:634":{"id":"0:634","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[385,0],"end":[398,1]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10447:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2831:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:635:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3427:7099":{"id":"2:3427:7099","crate_id":2,"name":"BitOrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3429:354"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2803:2723":{"id":"0:2803:2723","crate_id":0,"name":"OwnedSpace","span":{"filename":"src/format/mod.rs","begin":[289,4],"end":[289,24]},"visibility":"default","docs":"Same as `Space` but with the string owned by the item.","links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:2593","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}]}},"0:1188:4005":{"id":"0:1188:4005","crate_id":0,"name":"from_weekday_of_month","span":{"filename":"src/naive/date.rs","begin":[521,4],"end":[523,5]},"visibility":"public","docs":"Makes a new `NaiveDate` by counting the number of occurrences of a particular day-of-week\nsince the beginning of the given month.  For instance, if you want the 2nd Friday of March\n2017, you would use `NaiveDate::from_weekday_of_month(2017, 3, Weekday::Fri, 2)`.\n\n# Panics\n\nThe resulting `NaiveDate` is guaranteed to be in `month`.  If `n` is larger than the number\nof `weekday` in `month` (eg. the 6th Friday of March 2017) then this function will panic.\n\n`n` is 1-indexed.  Passing `n=0` will cause a panic.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Weekday};\n\nlet from_weekday_of_month = NaiveDate::from_weekday_of_month;\nlet from_ymd = NaiveDate::from_ymd;\n\nassert_eq!(from_weekday_of_month(2018, 8, Weekday::Wed, 1), from_ymd(2018, 8, 1));\nassert_eq!(from_weekday_of_month(2018, 8, Weekday::Fri, 1), from_ymd(2018, 8, 3));\nassert_eq!(from_weekday_of_month(2018, 8, Weekday::Tue, 2), from_ymd(2018, 8, 14));\nassert_eq!(from_weekday_of_month(2018, 8, Weekday::Fri, 4), from_ymd(2018, 8, 24));\nassert_eq!(from_weekday_of_month(2018, 8, Weekday::Fri, 5), from_ymd(2018, 8, 31));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["year",{"kind":"primitive","inner":"i32"}],["month",{"kind":"primitive","inner":"u32"}],["weekday",{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:3446:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["n",{"kind":"primitive","inner":"u8"}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1423:2190":{"id":"0:1423:2190","crate_id":0,"name":"ordinal","span":{"filename":"src/naive/datetime/mod.rs","begin":[862,4],"end":[864,5]},"visibility":"default","docs":"Returns the day of year starting from 1.\n\nThe return value ranges from 1 to 366. (The last day of year differs by years.)\n\nSee also the [`NaiveDate::ordinal`](./struct.NaiveDate.html#method.ordinal) method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Datelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 25).and_hms(12, 34, 56);\nassert_eq!(dt.ordinal(), 268);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:376:2309":{"id":"0:376:2309","crate_id":0,"name":"timestamp","span":{"filename":"src/datetime/mod.rs","begin":[197,4],"end":[199,5]},"visibility":"public","docs":"Returns the number of non-leap seconds since January 1, 1970 0:00:00 UTC\n(aka \"UNIX timestamp\").","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:3086:1883":{"id":"b:2:3213-0:3086:1883","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1687:2482":{"id":"0:1687:2482","crate_id":0,"name":"with_second","span":{"filename":"src/naive/time/mod.rs","begin":[952,4],"end":[958,5]},"visibility":"default","docs":"Makes a new `NaiveTime` with the second number changed.\n\nReturns `None` when the resulting `NaiveTime` would be invalid.\nAs with the [`second`](#method.second) method,\nthe input range is restricted to 0 through 59.\n\n# Example\n\n```\nuse chrono::{NaiveTime, Timelike};\n\nlet dt = NaiveTime::from_hms_nano(23, 56, 4, 12_345_678);\nassert_eq!(dt.with_second(17), Some(NaiveTime::from_hms_nano(23, 56, 17, 12_345_678)));\nassert_eq!(dt.with_second(60), None);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["sec",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3380":{"id":"0:3380","crate_id":0,"name":null,"span":{"filename":"src/offset/local/mod.rs","begin":[53,15],"end":[53,20]},"visibility":{"restricted":{"parent":"0:1883:816","path":"::offset::local"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Local","id":"0:3377:1873","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3381:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1185:3062":{"id":"0:1185:3062","crate_id":0,"name":"from_isoywd_opt","span":{"filename":"src/naive/date.rs","begin":[389,4],"end":[418,5]},"visibility":"public","docs":"Makes a new `NaiveDate` from the [ISO week date](#week-date)\n(year, week number and day of the week).\nThe resulting `NaiveDate` may have a different year from the input year.\n\nReturns `None` on the out-of-range date and/or invalid week number.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Weekday};\n\nlet from_ymd = NaiveDate::from_ymd;\nlet from_isoywd_opt = NaiveDate::from_isoywd_opt;\n\nassert_eq!(from_isoywd_opt(2015, 0, Weekday::Sun), None);\nassert_eq!(from_isoywd_opt(2015, 10, Weekday::Sun), Some(from_ymd(2015, 3, 8)));\nassert_eq!(from_isoywd_opt(2015, 30, Weekday::Mon), Some(from_ymd(2015, 7, 20)));\nassert_eq!(from_isoywd_opt(2015, 60, Weekday::Mon), None);\n\nassert_eq!(from_isoywd_opt(400000, 10, Weekday::Fri), None);\nassert_eq!(from_isoywd_opt(-400000, 10, Weekday::Sat), None);\n```\n\nThe year number of ISO week date may differ from that of the calendar date.\n\n```\n# use chrono::{NaiveDate, Weekday};\n# let from_ymd = NaiveDate::from_ymd;\n# let from_isoywd_opt = NaiveDate::from_isoywd_opt;\n//           Mo Tu We Th Fr Sa Su\n// 2014-W52  22 23 24 25 26 27 28    has 4+ days of new year,\n// 2015-W01  29 30 31  1  2  3  4 <- so this is the first week\nassert_eq!(from_isoywd_opt(2014, 52, Weekday::Sun), Some(from_ymd(2014, 12, 28)));\nassert_eq!(from_isoywd_opt(2014, 53, Weekday::Mon), None);\nassert_eq!(from_isoywd_opt(2015, 1, Weekday::Mon), Some(from_ymd(2014, 12, 29)));\n\n// 2015-W52  21 22 23 24 25 26 27    has 4+ days of old year,\n// 2015-W53  28 29 30 31  1  2  3 <- so this is the last week\n// 2016-W01   4  5  6  7  8  9 10\nassert_eq!(from_isoywd_opt(2015, 52, Weekday::Sun), Some(from_ymd(2015, 12, 27)));\nassert_eq!(from_isoywd_opt(2015, 53, Weekday::Sun), Some(from_ymd(2016, 1, 3)));\nassert_eq!(from_isoywd_opt(2015, 54, Weekday::Mon), None);\nassert_eq!(from_isoywd_opt(2016, 1, Weekday::Mon), Some(from_ymd(2016, 1, 4)));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["year",{"kind":"primitive","inner":"i32"}],["week",{"kind":"primitive","inner":"u32"}],["weekday",{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:3446:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2746:2405":{"id":"0:2746:2405","crate_id":0,"name":"RFC3339","span":{"filename":"src/format/mod.rs","begin":[243,4],"end":[243,11]},"visibility":"default","docs":"RFC 3339 & ISO 8601 date and time syntax.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:1282:660":{"id":"0:1282:660","crate_id":0,"name":"fmt","span":{"filename":"src/naive/date.rs","begin":[1887,4],"end":[1896,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10400:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10389:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2653:604":{"id":"0:2653:604","crate_id":0,"name":"eq","span":{"filename":"src/format/mod.rs","begin":[74,22],"end":[74,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2641:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3202-0:2873:2237":{"id":"b:2:3202-0:2873:2237","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Parsed","id":"0:2873:2237","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1861:181":{"id":"0:1861:181","crate_id":0,"name":"Output","span":{"filename":"src/offset/fixed.rs","begin":[169,4],"end":[169,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:787:3025":{"id":"0:787:3025","crate_id":0,"name":"set_timestamp","span":{"filename":"src/format/parsed.rs","begin":[271,4],"end":[273,5]},"visibility":"public","docs":"Tries to set the [`timestamp`](#structfield.timestamp) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["value",{"kind":"primitive","inner":"i64"}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:632:1899","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2568:2197":{"id":"0:2568:2197","crate_id":0,"name":"with_day0","span":{"filename":"src/traits.rs","begin":[79,4],"end":[79,51]},"visibility":"default","docs":"Makes a new value with the day of month (starting from 0) changed.\n\nReturns `None` when the resulting value would be invalid.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["day0",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:3740:7111":{"id":"2:3740:7111","crate_id":2,"name":"Residual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3742:58886"],"generics":{"params":[{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1838":{"id":"0:1838","crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[31,0],"end":[103,1]},"visibility":{"restricted":{"parent":"0:1795:5699","path":"::offset::fixed"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1839:2225","0:1840:3086","0:1841:2227","0:1842:5840","0:1843:2859","0:1844:5844"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:5:6420-0:3446:1882":{"id":"b:5:6420-0:3446:1882","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10447:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:6418:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:3446:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:6422:1397"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2596:408":{"id":"0:2596:408","crate_id":0,"name":"clone","span":{"filename":"src/date.rs","begin":[56,9],"end":[56,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1229:2160":{"id":"0:1229:2160","crate_id":0,"name":"MIN","span":{"filename":"src/naive/date.rs","begin":[1275,4],"end":[1275,93]},"visibility":"public","docs":"The minimum possible `NaiveDate` (January 1, 262145 BCE).","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":"_"}},"0:776:3000":{"id":"0:776:3000","crate_id":0,"name":"set_week_from_mon","span":{"filename":"src/format/parsed.rs","begin":[196,4],"end":[198,5]},"visibility":"public","docs":"Tries to set the [`week_from_mon`](#structfield.week_from_mon) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["value",{"kind":"primitive","inner":"i64"}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:632:1899","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3406":{"id":"0:3406","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[40,9],"end":[40,14]},"visibility":{"restricted":{"parent":"0:1758:957","path":"::offset"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3395:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:3408:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1249:181":{"id":"0:1249:181","crate_id":0,"name":"Output","span":{"filename":"src/naive/date.rs","begin":[1645,4],"end":[1645,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"1:1075:8570":{"id":"1:1075:8570","crate_id":1,"name":"AsciiExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:1076:7921","1:1077:9229","1:1078:61475","1:1079:61476","1:1080:60322","1:1081:60323","1:1082:60324"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2655":{"id":"0:2655","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[74,33],"end":[74,35]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2641:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2955:415":{"id":"0:2955:415","crate_id":0,"name":"cmp","span":{"filename":"src/naive/date.rs","begin":[166,42],"end":[166,45]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Ordering","id":"2:37761:178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3013":{"id":"0:3013","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[74,42],"end":[74,45]},"visibility":{"restricted":{"parent":"0:1291:1893","path":"::naive::datetime"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["max","min","clamp"],"trait":{"name":"Ord","id":"2:2957:177","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3014:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2809:1543":{"id":"0:2809:1543","crate_id":0,"name":"1","span":{"filename":"src/format/mod.rs","begin":[292,21],"end":[292,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2641:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:1652:3149":{"id":"0:1652:3149","crate_id":0,"name":"from_hms","span":{"filename":"src/naive/time/mod.rs","begin":[217,4],"end":[219,5]},"visibility":"public","docs":"Makes a new `NaiveTime` from hour, minute and second.\n\nNo [leap second](#leap-second-handling) is allowed here;\nuse `NaiveTime::from_hms_*` methods with a subsecond parameter instead.\n\nPanics on invalid hour, minute and/or second.\n\n# Example\n\n```\nuse chrono::{NaiveTime, Timelike};\n\nlet t = NaiveTime::from_hms(23, 56, 4);\nassert_eq!(t.hour(), 23);\nassert_eq!(t.minute(), 56);\nassert_eq!(t.second(), 4);\nassert_eq!(t.nanosecond(), 0);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["hour",{"kind":"primitive","inner":"u32"}],["min",{"kind":"primitive","inner":"u32"}],["sec",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3559:7114":{"id":"2:3559:7114","crate_id":2,"name":"Generator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3561:237","2:3562:206","2:3563:63809"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"tuple","inner":[]},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3581:7106":{"id":"2:3581:7106","crate_id":2,"name":"IndexMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3583:754"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"Index","id":"2:3577:7105","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Idx"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:1391:3082":{"id":"0:1391:3082","crate_id":0,"name":"from_timestamp_opt","span":{"filename":"src/naive/datetime/mod.rs","begin":[160,4],"end":[171,5]},"visibility":"public","docs":"Makes a new `NaiveDateTime` corresponding to a UTC date and time,\nfrom the number of non-leap seconds\nsince the midnight UTC on January 1, 1970 (aka \"UNIX timestamp\")\nand the number of nanoseconds since the last whole non-leap second.\n\nThe nanosecond part can exceed 1,000,000,000\nin order to represent the [leap second](./struct.NaiveTime.html#leap-second-handling).\n(The true \"UNIX timestamp\" cannot represent a leap second unambiguously.)\n\nReturns `None` on the out-of-range number of seconds and/or invalid nanosecond.\n\n# Example\n\n```\nuse chrono::{NaiveDateTime, NaiveDate};\nuse std::i64;\n\nlet from_timestamp_opt = NaiveDateTime::from_timestamp_opt;\n\nassert!(from_timestamp_opt(0, 0).is_some());\nassert!(from_timestamp_opt(0, 999_999_999).is_some());\nassert!(from_timestamp_opt(0, 1_500_000_000).is_some()); // leap second\nassert!(from_timestamp_opt(0, 2_000_000_000).is_none());\nassert!(from_timestamp_opt(i64::MAX, 0).is_none());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["secs",{"kind":"primitive","inner":"i64"}],["nsecs",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:382:2350":{"id":"0:382:2350","crate_id":0,"name":"timestamp_subsec_nanos","span":{"filename":"src/datetime/mod.rs","begin":[299,4],"end":[301,5]},"visibility":"public","docs":"Returns the number of nanoseconds since the last second boundary\n\nwarning: in event of a leap second, this may exceed 999_999_999\n\nnote: this is not the number of nanoseconds since January 1, 1970 0:00:00 UTC","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1739":{"id":"0:1739","crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[21,0],"end":[21,30]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::time::NaiveTime","name":"NaiveTime","id":"0:3067:1887","glob":false}},"0:1227:4205":{"id":"0:1227:4205","crate_id":0,"name":"iter_weeks","span":{"filename":"src/naive/date.rs","begin":[1263,4],"end":[1265,5]},"visibility":"public","docs":"Returns an iterator that steps by weeks across all representable dates.\n\n# Example\n\n```\n# use chrono::NaiveDate;\n\nlet expected = [\n    NaiveDate::from_ymd(2016, 2, 27),\n    NaiveDate::from_ymd(2016, 3, 5),\n    NaiveDate::from_ymd(2016, 3, 12),\n    NaiveDate::from_ymd(2016, 3, 19),\n];\n\nlet mut count = 0;\nfor (idx, d) in NaiveDate::from_ymd(2016, 2, 27).iter_weeks().take(4).enumerate() {\n   assert_eq!(d, expected[idx]);\n   count += 1;\n}\nassert_eq!(count, 4);\n\nfor d in NaiveDate::from_ymd(2016, 3, 19).iter_weeks().rev().take(4) {\n    count -= 1;\n    assert_eq!(d, expected[count]);\n}\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveDateWeeksIterator","id":"0:2979:4206","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1843:2859":{"id":"0:1843:2859","crate_id":0,"name":"local_minus_utc","span":{"filename":"src/offset/fixed.rs","begin":[94,4],"end":[96,5]},"visibility":"public","docs":"Returns the number of seconds to add to convert from UTC to the local time.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1399:2330":{"id":"0:1399:2330","crate_id":0,"name":"timestamp_micros","span":{"filename":"src/naive/datetime/mod.rs","begin":[352,4],"end":[355,5]},"visibility":"public","docs":"Returns the number of non-leap *microseconds* since midnight on January 1, 1970.\n\nNote that this does *not* account for the timezone!\nThe true \"UNIX timestamp\" would count seconds since the midnight *UTC* on the epoch.\n\nNote also that this does reduce the number of years that can be\nrepresented from ~584 Billion to ~584 Thousand. (If this is a problem,\nplease file an issue to let me know what domain needs microsecond\nprecision over millennia, I'm curious.)\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet dt = NaiveDate::from_ymd(1970, 1, 1).and_hms_micro(0, 0, 1, 444);\nassert_eq!(dt.timestamp_micros(), 1_000_444);\n\nlet dt = NaiveDate::from_ymd(2001, 9, 9).and_hms_micro(1, 46, 40, 555);\nassert_eq!(dt.timestamp_micros(), 1_000_000_000_000_555);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13606:9519":{"id":"2:13606:9519","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are ended with either a newline (`\\n`) or a carriage return with\na line feed (`\\r\\n`).\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Lines","id":"2:49845:7170","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:490":{"id":"0:490","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[818,0],"end":[818,41]},"visibility":{"restricted":{"parent":"0:256:1893","path":"::datetime"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:2374:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1433:2196":{"id":"0:1433:2196","crate_id":0,"name":"with_day","span":{"filename":"src/naive/datetime/mod.rs","begin":[985,4],"end":[987,5]},"visibility":"default","docs":"Makes a new `NaiveDateTime` with the day of month (starting from 1) changed.\n\nReturns `None` when the resulting `NaiveDateTime` would be invalid.\n\nSee also the [`NaiveDate::with_day`] method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Datelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 8).and_hms(12, 34, 56);\nassert_eq!(dt.with_day(30), Some(NaiveDate::from_ymd(2015, 9, 30).and_hms(12, 34, 56)));\nassert_eq!(dt.with_day(31), None); // no September 31\n```","links":{"`NaiveDate::with_day`":"0:2941:1885"},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["day",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13591:60376":{"id":"2:13591:60376","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:47628:176"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11082:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11082:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3208-0:3543:1910":{"id":"b:2:3208-0:3543:1910","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Months","id":"0:3543:1910","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2812:1542":{"id":"0:2812:1542","crate_id":0,"name":"0","span":{"filename":"src/format/mod.rs","begin":[294,10],"end":[294,15]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2713:2238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"a:2:3281:220-0:2845:2736":{"id":"a:2:3281:220-0:2845:2736","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2845:2736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3213-0:614:2656":{"id":"b:2:3213-0:614:2656","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:614:2656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1682:2477":{"id":"0:1682:2477","crate_id":0,"name":"minute","span":{"filename":"src/naive/time/mod.rs","begin":[834,4],"end":[836,5]},"visibility":"default","docs":"Returns the minute number from 0 to 59.\n\n# Example\n\n```\nuse chrono::{NaiveTime, Timelike};\n\nassert_eq!(NaiveTime::from_hms(0, 0, 0).minute(), 0);\nassert_eq!(NaiveTime::from_hms_nano(23, 56, 4, 12_345_678).minute(), 56);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:2941:1885":{"id":"b:2:3213-0:2941:1885","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3492:1880":{"id":"0:3492:1880","crate_id":0,"name":"Month","span":{"filename":"src/month.rs","begin":[33,0],"end":[58,1]},"visibility":"public","docs":"The month of the year.\n\nThis enum is just a convenience implementation.\nThe month in dates created by DateLike objects does not return this enum.\n\nIt is possible to convert from a date to a month independently\n```\nuse num_traits::FromPrimitive;\nuse chrono::prelude::*;\nlet date = Utc.ymd(2019, 10, 28).and_hms(9, 10, 11);\n// `2019-10-28T09:10:11Z`\nlet month = Month::from_u32(date.month());\nassert_eq!(month, Some(Month::October))\n```\nOr from a Month to an integer usable by dates\n```\n# use chrono::prelude::*;\nlet month = Month::January;\nlet dt = Utc.ymd(2019, month.number_from_month(), 28).and_hms(9, 10, 11);\nassert_eq!((dt.year(), dt.month(), dt.day()), (2019, 1, 28));\n```\nAllows mapping from and to month, from 1-January to 12-December.\nCan be Serialized/Deserialized with serde","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:3493:2802","0:3496:2803","0:3499:2804","0:3502:2805","0:3505:2794","0:3508:2806","0:3511:2807","0:3514:2808","0:3517:2809","0:3520:2810","0:3523:2811","0:3526:2812"],"impls":["0:2522","a:2:3310:7473-0:3492:1880","a:2:9408:7639-0:3492:1880","a:2:3269:211-0:3492:1880","a:2:9407:7640-0:3492:1880","a:2:3281:220-0:3492:1880","b:2:2869-0:3492:1880","b:2:4002-0:3492:1880","b:2:3198-0:3492:1880","b:2:2872-0:3492:1880","b:2:3208-0:3492:1880","b:2:3202-0:3492:1880","b:2:3213-0:3492:1880","b:5:787-0:3492:1880","0:1051","0:3529","0:3530","0:3532","0:3533","0:3535","0:3536","0:3538","0:3540","0:2527"]}},"0:3012:997":{"id":"0:3012:997","crate_id":0,"name":"partial_cmp","span":{"filename":"src/naive/datetime/mod.rs","begin":[74,30],"end":[74,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::option::Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Ordering","id":"2:37761:178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2357:5709":{"id":"0:2357:5709","crate_id":0,"name":"earliest","span":{"filename":"src/offset/mod.rs","begin":[62,4],"end":[67,5]},"visibility":"public","docs":"Returns `Some` for the earliest possible conversion result, or `None` if none.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2845:2736":{"id":"0:2845:2736","crate_id":0,"name":"ParseErrorKind","span":{"filename":"src/format/mod.rs","begin":[348,0],"end":[380,1]},"visibility":"public","docs":"The category of parse error","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":true,"variants":["0:2846:2739","0:2848:2743","0:2850:2748","0:2852:2750","0:2854:2752","0:2856:2754","0:2858:2756"],"impls":["a:2:3310:7473-0:2845:2736","a:2:9408:7639-0:2845:2736","a:2:3269:211-0:2845:2736","a:2:9407:7640-0:2845:2736","a:2:3281:220-0:2845:2736","b:2:2869-0:2845:2736","b:2:4002-0:2845:2736","b:2:3198-0:2845:2736","b:2:2872-0:2845:2736","b:2:3208-0:2845:2736","b:2:3202-0:2845:2736","b:2:3213-0:2845:2736","b:5:787-0:2845:2736","0:2862","0:2864","0:2866","0:2867","0:2869","0:2870","0:2872"]}},"0:2542":{"id":"0:2542","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[500,31],"end":[500,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"month::ParseMonthError","name":"ParseMonthError","id":"0:3562:1911","glob":false}},"0:2959:4198":{"id":"0:2959:4198","crate_id":0,"name":"NaiveDateDaysIterator","span":{"filename":"src/naive/date.rs","begin":[1787,0],"end":[1789,1]},"visibility":"public","docs":"Iterator over `NaiveDate` with a step size of one day.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"0:468":{"id":"0:468","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[769,0],"end":[806,1]},"visibility":{"restricted":{"parent":"0:256:1893","path":"::datetime"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:2374:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["hour12","num_seconds_from_midnight"],"trait":{"name":"Timelike","id":"0:2572:1881","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:470:2087","0:471:2477","0:472:2478","0:473:2479","0:474:2480","0:476:2481","0:478:2482","0:480:2483"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:28":{"id":"0:28","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[457,30],"end":[457,35]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::Month","name":"Month","id":"0:3492:1880","glob":false}},"0:3440":{"id":"0:3440","crate_id":0,"name":null,"span":{"filename":"src/round.rs","begin":[241,23],"end":[241,32]},"visibility":{"restricted":{"parent":"0:2418:1904","path":"::round"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RoundingError","id":"0:3428:1906","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RoundingError","id":"0:3428:1906","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3441:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2650:408":{"id":"0:2650:408","crate_id":0,"name":"clone","span":{"filename":"src/format/mod.rs","begin":[74,15],"end":[74,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2641:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2558:2159":{"id":"0:2558:2159","crate_id":0,"name":"day","span":{"filename":"src/traits.rs","begin":[33,4],"end":[33,25]},"visibility":"default","docs":"Returns the day of month starting from 1.\n\nThe return value ranges from 1 to 31. (The last day of month differs by months.)","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:1743":{"id":"0:1743","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[484,16],"end":[484,23]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"naive::IsoWeek","name":"IsoWeek","id":"0:3052:1901","glob":false}},"a:2:3310:7473-0:2761:2702":{"id":"a:2:3310:7473-0:2761:2702","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:7473","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2761:2702","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1281":{"id":"0:1281","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[1886,0],"end":[1897,1]},"visibility":{"restricted":{"parent":"0:1062:1890","path":"::naive::date"}},"docs":"The `Debug` output of the naive date `d` is the same as\n[`d.format(\"%Y-%m-%d\")`](../format/strftime/index.html).\n\nThe string printed can be readily parsed via the `parse` method on `str`.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nassert_eq!(format!(\"{:?}\", NaiveDate::from_ymd(2015,  9,  5)), \"2015-09-05\");\nassert_eq!(format!(\"{:?}\", NaiveDate::from_ymd(   0,  1,  1)), \"0000-01-01\");\nassert_eq!(format!(\"{:?}\", NaiveDate::from_ymd(9999, 12, 31)), \"9999-12-31\");\n```\n\nISO 8601 requires an explicit sign for years before 1 BCE or after 9999 CE.\n\n```\n# use chrono::NaiveDate;\nassert_eq!(format!(\"{:?}\", NaiveDate::from_ymd(   -1,  1,  1)),  \"-0001-01-01\");\nassert_eq!(format!(\"{:?}\", NaiveDate::from_ymd(10000, 12, 31)), \"+10000-12-31\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10440:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1282:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:6709:8535":{"id":"1:6709:8535","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6710:62652","1:6711:11014","1:6712:11015","1:6713:11017","1:6714:11016","1:6715:11018","1:6716:11019","1:6717:11021","1:6718:10612","1:6719:11024","1:6720:11025","1:6721:11026","1:6722:11027","1:6723:11028","1:6724:11029","1:6725:11022","1:6726:11023"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3074":{"id":"0:3074","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[190,20],"end":[190,22]},"visibility":{"restricted":{"parent":"0:1586:1556","path":"::naive::time"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2348:660":{"id":"0:2348:660","crate_id":0,"name":"fmt","span":{"filename":"src/offset/utc.rs","begin":[107,4],"end":[109,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10400:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10389:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5008:8554":{"id":"1:5008:8554","crate_id":1,"name":"ToSocketAddrs","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5009:7460","1:5010:62596"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:535":{"id":"0:535","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[955,0],"end":[972,1]},"visibility":{"restricted":{"parent":"0:256:1893","path":"::datetime"}},"docs":null,"links":{},"attrs":["#[cfg(any(feature = \"std\", test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"SystemTime","id":"1:12281:2234","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:3384:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:536:681"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1689:4712":{"id":"0:1689:4712","crate_id":0,"name":"num_seconds_from_midnight","span":{"filename":"src/naive/time/mod.rs","begin":[1011,4],"end":[1013,5]},"visibility":"default","docs":"Returns the number of non-leap seconds past the last midnight.\n\n# Example\n\n```\nuse chrono::{NaiveTime, Timelike};\n\nassert_eq!(NaiveTime::from_hms(1, 2, 3).num_seconds_from_midnight(),\n           3723);\nassert_eq!(NaiveTime::from_hms_nano(23, 56, 4, 12_345_678).num_seconds_from_midnight(),\n           86164);\nassert_eq!(NaiveTime::from_hms_milli(23, 59, 59, 1_000).num_seconds_from_midnight(),\n           86399);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:243":{"id":"0:243","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[529,0],"end":[536,1]},"visibility":{"restricted":{"parent":"0:61:1890","path":"::date"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:2374:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Tz"},"trait":{"name":"","id":"0:2374:1889","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Display","id":"2:10447:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10447:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:245:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1711":{"id":"0:1711","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[1331,0],"end":[1335,1]},"visibility":{"restricted":{"parent":"0:1586:1556","path":"::naive::time"}},"docs":"The default value for a NaiveTime is midnight, 00:00:00 exactly.\n\n# Example\n\n```rust\nuse chrono::NaiveTime;\n\nlet default_time = NaiveTime::default();\nassert_eq!(default_time, NaiveTime::from_hms(0, 0, 0));\n```","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3247:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1712:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"23:819:7269":{"id":"23:819:7269","crate_id":23,"name":"Signed","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:820:4446","23:821:7328","23:822:7329","23:823:6131","23:824:63456"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Num","id":"23:844:7268","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Neg","id":"2:3364:7087","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2526:899":{"id":"0:2526:899","crate_id":0,"name":"name","span":{"filename":"src/month.rs","begin":[137,4],"end":[152,5]},"visibility":"public","docs":"Get the name of the month\n\n```\nuse chrono::Month;\n\nassert_eq!(Month::January.name(), \"January\")\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'static","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1847:2131":{"id":"0:1847:2131","crate_id":0,"name":"from_offset","span":{"filename":"src/offset/fixed.rs","begin":[108,4],"end":[110,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["offset",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9408:7639-0:3052:1901":{"id":"a:2:9408:7639-0:3052:1901","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9408:7639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IsoWeek","id":"0:3052:1901","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1446:2480":{"id":"0:1446:2480","crate_id":0,"name":"with_hour","span":{"filename":"src/naive/datetime/mod.rs","begin":[1152,4],"end":[1154,5]},"visibility":"default","docs":"Makes a new `NaiveDateTime` with the hour number changed.\n\nReturns `None` when the resulting `NaiveDateTime` would be invalid.\n\nSee also the [`NaiveTime::with_hour`] method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Timelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 8).and_hms_milli(12, 34, 56, 789);\nassert_eq!(dt.with_hour(7),\n           Some(NaiveDate::from_ymd(2015, 9, 8).and_hms_milli(7, 34, 56, 789)));\nassert_eq!(dt.with_hour(24), None);\n```","links":{"`NaiveTime::with_hour`":"0:3067:1887"},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["hour",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:499":{"id":"0:499","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[847,0],"end":[851,1]},"visibility":{"restricted":{"parent":"0:256:1893","path":"::datetime"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:2374:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10678:142","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:501:715"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1455:181":{"id":"0:1455:181","crate_id":0,"name":"Output","span":{"filename":"src/naive/datetime/mod.rs","begin":[1277,4],"end":[1277,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:253":{"id":"0:253","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[468,31],"end":[468,39]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"date::MIN_DATE","name":"MIN_DATE","id":"0:128:1892","glob":false}},"2:13662:64783":{"id":"2:13662:64783","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"str::match_indices":"1:15992:6928","`DoubleEndedIterator`":"2:8591:120","self::pattern":"2:13202:1925","prim@char":"1:15986:6923"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatchIndices","id":"2:49759:7182","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13212:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13227:7161","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:369":{"id":"0:369","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[98,0],"end":[382,1]},"visibility":{"restricted":{"parent":"0:256:1893","path":"::datetime"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:2374:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:371:2074","0:372:2287","0:373:1890","0:374:2304","0:375:1556","0:376:2309","0:377:2321","0:378:2330","0:379:2338","0:380:2342","0:381:2346","0:382:2350","0:383:957","0:384:2081","0:385:2134","0:387:2140","0:388:2142","0:389:2147","0:391:2149","0:392:2080","0:393:2155","0:394:2068","0:395:2071"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3402:3091":{"id":"0:3402:3091","crate_id":0,"name":"Ambiguous","span":{"filename":"src/offset/mod.rs","begin":[49,4],"end":[49,35]},"visibility":"default","docs":"Given local time representation has multiple results and thus ambiguous.\nThis can occur when, for example, the negative timezone transition.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"generic","inner":"T"},{"kind":"generic","inner":"T"}]}},"b:5:787-0:3446:1882":{"id":"b:5:787-0:3446:1882","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:3446:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:7921","5:790:7922","5:791:7923"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3269:211-0:2761:2702":{"id":"a:2:3269:211-0:2761:2702","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2761:2702","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1450:2482":{"id":"0:1450:2482","crate_id":0,"name":"with_second","span":{"filename":"src/naive/datetime/mod.rs","begin":[1197,4],"end":[1199,5]},"visibility":"default","docs":"Makes a new `NaiveDateTime` with the second number changed.\n\nReturns `None` when the resulting `NaiveDateTime` would be invalid. As\nwith the [`NaiveDateTime::second`] method, the input range is\nrestricted to 0 through 59.\n\nSee also the [`NaiveTime::with_second`] method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Timelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 8).and_hms_milli(12, 34, 56, 789);\nassert_eq!(dt.with_second(17),\n           Some(NaiveDate::from_ymd(2015, 9, 8).and_hms_milli(12, 34, 17, 789)));\nassert_eq!(dt.with_second(60), None);\n```","links":{"`NaiveTime::with_second`":"0:3067:1887","`NaiveDateTime::second`":"0:2999:1886"},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["sec",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9407:7640-0:3492:1880":{"id":"a:2:9407:7640-0:3492:1880","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9407:7640","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:3492:1880","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3213-0:3492:1880":{"id":"b:2:3213-0:3492:1880","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:3492:1880","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2757":{"id":"0:2757","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[181,27],"end":[181,29]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2713:2238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2373:2289":{"id":"0:2373:2289","crate_id":0,"name":"fix","span":{"filename":"src/offset/mod.rs","begin":[196,4],"end":[196,33]},"visibility":"default","docs":"Returns the fixed offset from UTC to the local time stored.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3084":{"id":"0:3084","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[190,53],"end":[190,58]},"visibility":{"restricted":{"parent":"0:1586:1556","path":"::naive::time"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3085:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3391:604":{"id":"0:3391:604","crate_id":0,"name":"eq","span":{"filename":"src/offset/utc.rs","begin":[42,22],"end":[42,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:3384:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:220-0:3384:1884":{"id":"a:2:3281:220-0:3384:1884","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:3384:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:393:2155":{"id":"0:393:2155","crate_id":0,"name":"years_since","span":{"filename":"src/datetime/mod.rs","begin":[362,4],"end":[376,5]},"visibility":"public","docs":"Retrieve the elapsed years from now to the given [`DateTime`].","links":{"`DateTime`":"0:2621:1877"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["base",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u32"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"23:636:7314":{"id":"23:636:7314","crate_id":23,"name":"MulAdd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:639:181","23:640:7335"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3310:7473-0:3384:1884":{"id":"a:2:3310:7473-0:3384:1884","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:7473","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:3384:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:537":{"id":"0:537","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[975,0],"end":[979,1]},"visibility":{"restricted":{"parent":"0:256:1893","path":"::datetime"}},"docs":null,"links":{},"attrs":["#[cfg(feature = \"clock\")]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"SystemTime","id":"1:12281:2234","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Local","id":"0:3377:1873","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:538:681"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13632:60408":{"id":"2:13632:60408","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"`DoubleEndedIterator`":"2:8591:120","prim@char":"1:15986:6923","self::pattern":"2:13202:1925","str::split":"1:15992:6928"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplit","id":"2:49609:7173","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13212:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13227:7161","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2792:2040":{"id":"0:2792:2040","crate_id":0,"name":"Item","span":{"filename":"src/format/mod.rs","begin":[279,0],"end":[297,1]},"visibility":"public","docs":"A single formatting item. This is used for both formatting and parsing.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"variants_stripped":false,"variants":["0:2794:2451","0:2797:2720","0:2800:2604","0:2803:2723","0:2806:2444","0:2810:2238","0:2813:127"],"impls":["a:2:3310:7473-0:2792:2040","a:2:9408:7639-0:2792:2040","a:2:3269:211-0:2792:2040","a:2:9407:7640-0:2792:2040","a:2:3281:220-0:2792:2040","b:2:2869-0:2792:2040","b:2:4002-0:2792:2040","b:2:3198-0:2792:2040","b:2:2872-0:2792:2040","b:2:3208-0:2792:2040","b:2:3202-0:2792:2040","b:2:3213-0:2792:2040","b:5:787-0:2792:2040","0:2815","0:2818","0:2820","0:2823","0:2825","0:2828"]}},"b:2:2872-0:3492:1880":{"id":"b:2:2872-0:3492:1880","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:7071","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:3492:1880","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:5915"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:5797:8536":{"id":"1:5797:8536","crate_id":1,"name":"FileTypeExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5798:60061","1:5799:60062","1:5800:60063","1:5801:60064"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2870":{"id":"0:2870","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[347,34],"end":[347,36]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2845:2736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2598:2244":{"id":"0:2598:2244","crate_id":0,"name":"Secs","span":{"filename":"src/datetime/mod.rs","begin":[55,4],"end":[55,8]},"visibility":"default","docs":"Format whole seconds only, with no decimal point nor subseconds.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:13691:64789":{"id":"2:13691:64789","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"self::pattern":"2:13202:1925","prim@char":"1:15986:6923"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13212:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13227:7161","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2531":{"id":"0:2531","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[196,0],"end":[201,1]},"visibility":{"restricted":{"parent":"0:2518:1909","path":"::month"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Months","id":"0:3543:1910","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2532:920"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3198-0:2659:2444":{"id":"b:2:3198-0:2659:2444","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2659:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:2536"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2897":{"id":"0:2897","crate_id":0,"name":null,"span":{"filename":"src/format/parsed.rs","begin":[25,16],"end":[25,25]},"visibility":{"restricted":{"parent":"0:705:2399","path":"::format::parsed"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Parsed","id":"0:2873:2237","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:526:660":{"id":"0:526:660","crate_id":0,"name":"fmt","span":{"filename":"src/datetime/mod.rs","begin":[910,4],"end":[912,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10400:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10389:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6885:8523":{"id":"1:6885:8523","crate_id":1,"name":"FromRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6886:62303"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3310:7473-0:2873:2237":{"id":"a:2:3310:7473-0:2873:2237","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:7473","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Parsed","id":"0:2873:2237","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2869-0:2659:2444":{"id":"b:2:2869-0:2659:2444","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2659:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:2030"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1396:2309":{"id":"0:1396:2309","crate_id":0,"name":"timestamp","span":{"filename":"src/naive/datetime/mod.rs","begin":[293,4],"end":[298,5]},"visibility":"public","docs":"Returns the number of non-leap seconds since the midnight on January 1, 1970.\n\nNote that this does *not* account for the timezone!\nThe true \"UNIX timestamp\" would count seconds since the midnight *UTC* on the epoch.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet dt = NaiveDate::from_ymd(1970, 1, 1).and_hms_milli(0, 0, 1, 980);\nassert_eq!(dt.timestamp(), 1);\n\nlet dt = NaiveDate::from_ymd(2001, 9, 9).and_hms(1, 46, 40);\nassert_eq!(dt.timestamp(), 1_000_000_000);\n\nlet dt = NaiveDate::from_ymd(1969, 12, 31).and_hms(23, 59, 59);\nassert_eq!(dt.timestamp(), -1);\n\nlet dt = NaiveDate::from_ymd(-1, 1, 1).and_hms(0, 0, 0);\nassert_eq!(dt.timestamp(), -62198755200);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1198:2097":{"id":"0:1198:2097","crate_id":0,"name":"and_hms_milli","span":{"filename":"src/naive/date.rs","begin":[782,4],"end":[784,5]},"visibility":"public","docs":"Makes a new `NaiveDateTime` from the current date, hour, minute, second and millisecond.\n\nThe millisecond part can exceed 1,000\nin order to represent the [leap second](./struct.NaiveTime.html#leap-second-handling).\n\nPanics on invalid hour, minute, second and/or millisecond.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Datelike, Timelike, Weekday};\n\nlet d = NaiveDate::from_ymd(2015, 6, 3);\n\nlet dt: NaiveDateTime = d.and_hms_milli(12, 34, 56, 789);\nassert_eq!(dt.year(), 2015);\nassert_eq!(dt.weekday(), Weekday::Wed);\nassert_eq!(dt.second(), 56);\nassert_eq!(dt.nanosecond(), 789_000_000);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["hour",{"kind":"primitive","inner":"u32"}],["min",{"kind":"primitive","inner":"u32"}],["sec",{"kind":"primitive","inner":"u32"}],["milli",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3476:408":{"id":"0:3476:408","crate_id":0,"name":"clone","span":{"filename":"src/weekday.rs","begin":[11,30],"end":[11,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:3446:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2358:5711":{"id":"0:2358:5711","crate_id":0,"name":"latest","span":{"filename":"src/offset/mod.rs","begin":[70,4],"end":[75,5]},"visibility":"public","docs":"Returns `Some` for the latest possible conversion result, or `None` if none.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:377:2321":{"id":"0:377:2321","crate_id":0,"name":"timestamp_millis","span":{"filename":"src/datetime/mod.rs","begin":[221,4],"end":[223,5]},"visibility":"public","docs":"Returns the number of non-leap-milliseconds since January 1, 1970 UTC\n\nNote that this does reduce the number of years that can be represented\nfrom ~584 Billion to ~584 Million. (If this is a problem, please file\nan issue to let me know what domain needs millisecond precision over\nbillions of years, I'm curious.)\n\n# Example\n\n```\nuse chrono::Utc;\nuse chrono::TimeZone;\n\nlet dt = Utc.ymd(1970, 1, 1).and_hms_milli(0, 0, 1, 444);\nassert_eq!(dt.timestamp_millis(), 1_444);\n\nlet dt = Utc.ymd(2001, 9, 9).and_hms_milli(1, 46, 40, 555);\nassert_eq!(dt.timestamp_millis(), 1_000_000_000_555);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:538:681":{"id":"0:538:681","crate_id":0,"name":"from","span":{"filename":"src/datetime/mod.rs","begin":[976,4],"end":[978,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"resolved_path","inner":{"name":"SystemTime","id":"1:12281:2234","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Local","id":"0:3377:1873","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3208-0:2713:2238":{"id":"b:2:3208-0:2713:2238","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2713:2238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:58":{"id":"0:58","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[463,28],"end":[463,36]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::TimeZone","name":"TimeZone","id":"0:2374:1889","glob":false}},"0:1456:265":{"id":"0:1456:265","crate_id":0,"name":"add","span":{"filename":"src/naive/datetime/mod.rs","begin":[1280,4],"end":[1282,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2714:2666":{"id":"0:2714:2666","crate_id":0,"name":"ShortMonthName","span":{"filename":"src/format/mod.rs","begin":[186,4],"end":[186,18]},"visibility":"default","docs":"Abbreviated month names.\n\nPrints a three-letter-long name in the title case, reads the same name in any case.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"b:2:3208-0:2659:2444":{"id":"b:2:3208-0:2659:2444","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2659:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2380:5746":{"id":"0:2380:5746","crate_id":0,"name":"isoywd","span":{"filename":"src/offset/mod.rs","begin":[301,4],"end":[303,5]},"visibility":"default","docs":"Makes a new `Date` from ISO week date (year and week number), day of the week (DOW) and\nthe current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\nThe resulting `Date` may have a different year from the input year.\n\nThe time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),\nbut it will propagate to the `DateTime` values constructed via this date.\n\nPanics on the out-of-range date and/or invalid week number.\n\n# Example\n\n```\nuse chrono::{Utc, Weekday, TimeZone};\n\nassert_eq!(Utc.isoywd(2015, 20, Weekday::Fri).to_string(), \"2015-05-15UTC\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["year",{"kind":"primitive","inner":"i32"}],["week",{"kind":"primitive","inner":"u32"}],["weekday",{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:3446:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1709:2502":{"id":"0:1709:2502","crate_id":0,"name":"from_str","span":{"filename":"src/naive/time/mod.rs","begin":[1302,4],"end":[1318,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:632:1899","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:418":{"id":"0:418","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[480,0],"end":[540,1]},"visibility":{"restricted":{"parent":"0:256:1893","path":"::datetime"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:419:2396","0:421:2404","0:423:2419"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3337:2031":{"id":"2:3337:2031","crate_id":2,"name":"Add","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3339:181","2:3340:265"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:9035:8372":{"id":"2:9035:8372","crate_id":2,"name":"TrustedStep","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Step","id":"2:8071:8363","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:186:1907":{"id":"0:186:1907","crate_id":0,"name":"weekday","span":{"filename":"src/date.rs","begin":[408,4],"end":[410,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:3446:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:220-0:3086:1883":{"id":"a:2:3281:220-0:3086:1883","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:514":{"id":"0:514","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[881,0],"end":[889,1]},"visibility":{"restricted":{"parent":"0:256:1893","path":"::datetime"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:2374:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"SubAssign","id":"2:3372:2034","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Duration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:516:1356"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1701:181":{"id":"0:1701:181","crate_id":0,"name":"Output","span":{"filename":"src/naive/time/mod.rs","begin":[1188,4],"end":[1188,30]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Duration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:1254:181":{"id":"0:1254:181","crate_id":0,"name":"Output","span":{"filename":"src/naive/date.rs","begin":[1661,4],"end":[1661,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:2600:2247":{"id":"0:2600:2247","crate_id":0,"name":"Millis","span":{"filename":"src/datetime/mod.rs","begin":[59,4],"end":[59,10]},"visibility":"default","docs":"Use fixed 3 subsecond digits. This corresponds to\n[Fixed::Nanosecond3](format/enum.Fixed.html#variant.Nanosecond3).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:3421":{"id":"0:3421","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[40,40],"end":[40,42]},"visibility":{"restricted":{"parent":"0:1758:957","path":"::offset"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::cmp::Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3395:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2536":{"id":"0:2536","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[500,16],"end":[500,21]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"month::Month","name":"Month","id":"0:3492:1880","glob":false}},"0:3085:408":{"id":"0:3085:408","crate_id":0,"name":"clone","span":{"filename":"src/naive/time/mod.rs","begin":[190,53],"end":[190,58]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3198-0:3086:1883":{"id":"b:2:3198-0:3086:1883","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:2536"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9408:7639-0:3482:1908":{"id":"a:2:9408:7639-0:3482:1908","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9408:7639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:3482:1908","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2869-0:3446:1882":{"id":"b:2:2869-0:3446:1882","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:3446:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:2030"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2874:5915":{"id":"2:2874:5915","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3009:715":{"id":"0:3009:715","crate_id":0,"name":"hash","span":{"filename":"src/naive/datetime/mod.rs","begin":[74,24],"end":[74,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10688:146","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1694:266":{"id":"0:1694:266","crate_id":0,"name":"add_assign","span":{"filename":"src/naive/time/mod.rs","begin":[1076,4],"end":[1078,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3446:1882":{"id":"0:3446:1882","crate_id":0,"name":"Weekday","span":{"filename":"src/weekday.rs","begin":[14,0],"end":[29,1]},"visibility":"public","docs":"The day of week.\n\nThe order of the days of week depends on the context.\n(This is why this type does *not* implement `PartialOrd` or `Ord` traits.)\nOne should prefer `*_from_monday` or `*_from_sunday` methods to get the correct result.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:3447:2814","0:3450:2815","0:3453:2816","0:3456:2817","0:3459:2818","0:3462:2819","0:3465:2813"],"impls":["0:2494","a:2:3310:7473-0:3446:1882","a:2:9408:7639-0:3446:1882","a:2:3269:211-0:3446:1882","a:2:9407:7640-0:3446:1882","a:2:3281:220-0:3446:1882","b:2:2869-0:3446:1882","b:2:4002-0:3446:1882","b:2:3198-0:3446:1882","b:2:2872-0:3446:1882","b:2:3208-0:3446:1882","b:2:3202-0:3446:1882","b:2:3213-0:3446:1882","b:5:787-0:3446:1882","b:5:6420-0:3446:1882","0:1048","0:3468","0:3469","0:3471","0:3472","0:3474","0:3475","0:3477","0:3479","0:2501","0:2503"]}},"23:236:58022":{"id":"23:236:58022","crate_id":23,"name":"LowerBounded","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:237:4508"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13629:37191":{"id":"2:13629:37191","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"self::pattern":"2:13202:1925","prim@char":"1:15986:6923"},"attrs":["#[stable(feature = \"split_inclusive\", since = \"1.51.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitInclusive","id":"2:12994:7188","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6814:8519":{"id":"1:6814:8519","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6815:13201"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10589:8515","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:3559:604":{"id":"0:3559:604","crate_id":0,"name":"eq","span":{"filename":"src/month.rs","begin":[193,39],"end":[193,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Months","id":"0:3543:1910","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2662:2619":{"id":"0:2662:2619","crate_id":0,"name":"YearDiv100","span":{"filename":"src/format/mod.rs","begin":[103,4],"end":[103,14]},"visibility":"default","docs":"Gregorian year divided by 100 (century number; FW=PW=2). Implies the non-negative year.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:1186:3976":{"id":"0:1186:3976","crate_id":0,"name":"from_num_days_from_ce","span":{"filename":"src/naive/date.rs","begin":[464,4],"end":[466,5]},"visibility":"public","docs":"Makes a new `NaiveDate` from a day's number in the proleptic Gregorian calendar, with\nJanuary 1, 1 being day 1.\n\nPanics if the date is out of range.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike, Weekday};\n\nlet d = NaiveDate::from_num_days_from_ce(735671);\nassert_eq!(d.num_days_from_ce(), 735671); // days since January 1, 1 CE\nassert_eq!(d.year(), 2015);\nassert_eq!(d.month(), 3);\nassert_eq!(d.day(), 14);\nassert_eq!(d.ordinal(), 73); // day of year\nassert_eq!(d.iso_week().year(), 2015);\nassert_eq!(d.iso_week().week(), 11);\nassert_eq!(d.weekday(), Weekday::Sat);\n```\n\nWhile not directly supported by Chrono,\nit is easy to convert from the Julian day number\n(January 1, 4713 BCE in the *Julian* calendar being Day 0)\nto Gregorian with this method.\n(Note that this panics when `jd` is out of range.)\n\n```\nuse chrono::NaiveDate;\n\nfn jd_to_date(jd: i32) -> NaiveDate {\n    // keep in mind that the Julian day number is 0-based\n    // while this method requires an 1-based number.\n    NaiveDate::from_num_days_from_ce(jd - 1721425)\n}\n\n// January 1, 4713 BCE in Julian = November 24, 4714 BCE in Gregorian\nassert_eq!(jd_to_date(0), NaiveDate::from_ymd(-4713, 11, 24));\n\nassert_eq!(jd_to_date(1721426), NaiveDate::from_ymd(1, 1, 1));\nassert_eq!(jd_to_date(2450000), NaiveDate::from_ymd(1995, 10, 9));\nassert_eq!(jd_to_date(2451545), NaiveDate::from_ymd(2000, 1, 1));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["days",{"kind":"primitive","inner":"i32"}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:14":{"id":"0:14","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[453,4],"end":[453,31]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::SubsecRound","name":"SubsecRound","id":"0:2450:1876","glob":false}},"0:1261:1355":{"id":"0:1261:1355","crate_id":0,"name":"sub","span":{"filename":"src/naive/date.rs","begin":[1740,4],"end":[1742,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:426:2421":{"id":"0:426:2421","crate_id":0,"name":"to_rfc2822","span":{"filename":"src/datetime/mod.rs","begin":[548,4],"end":[551,5]},"visibility":"public","docs":"Returns an RFC 2822 date and time string such as `Tue, 1 Jul 2003 10:52:37 +0200`.","links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:410":{"id":"0:410","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[450,0],"end":[458,1]},"visibility":{"restricted":{"parent":"0:256:1893","path":"::datetime"}},"docs":"Convert a `DateTime<Local>` instance into a `DateTime<Utc>` instance.","links":{},"attrs":["#[cfg(feature = \"clock\")]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Local","id":"0:3377:1873","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:3384:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:411:681"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:380:2342":{"id":"0:380:2342","crate_id":0,"name":"timestamp_subsec_millis","span":{"filename":"src/datetime/mod.rs","begin":[279,4],"end":[281,5]},"visibility":"public","docs":"Returns the number of milliseconds since the last second boundary\n\nwarning: in event of a leap second, this may exceed 999\n\nnote: this is not the number of milliseconds since January 1, 1970 0:00:00 UTC","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1706:660":{"id":"0:1706:660","crate_id":0,"name":"fmt","span":{"filename":"src/naive/time/mod.rs","begin":[1275,4],"end":[1277,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10400:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10389:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2886:2159":{"id":"0:2886:2159","crate_id":0,"name":"day","span":{"filename":"src/format/parsed.rs","begin":[83,4],"end":[83,24]},"visibility":"public","docs":"Day of the month (1--28, 1--29, 1--30 or 1--31 depending on the month).","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u32"}}],"bindings":[]}}}}},"0:1581:2158":{"id":"0:1581:2158","crate_id":0,"name":"year","span":{"filename":"src/naive/isoweek.rs","begin":[74,4],"end":[76,5]},"visibility":"public","docs":"Returns the year number for this ISO week.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike, Weekday};\n\nlet d = NaiveDate::from_isoywd(2015, 1, Weekday::Mon);\nassert_eq!(d.iso_week().year(), 2015);\n```\n\nThis year number might not match the calendar year number.\nContinuing the example...\n\n```\n# use chrono::{NaiveDate, Datelike, Weekday};\n# let d = NaiveDate::from_isoywd(2015, 1, Weekday::Mon);\nassert_eq!(d.year(), 2014);\nassert_eq!(d, NaiveDate::from_ymd(2014, 12, 29));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"23:581:7307":{"id":"23:581:7307","crate_id":23,"name":"CheckedRem","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:582:66574"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Rem","id":"2:3358:7088","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3202-0:2641:2445":{"id":"b:2:3202-0:2641:2445","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2641:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:474:2480":{"id":"0:474:2480","crate_id":0,"name":"with_hour","span":{"filename":"src/datetime/mod.rs","begin":[788,4],"end":[790,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["hour",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2579:2481":{"id":"0:2579:2481","crate_id":0,"name":"with_minute","span":{"filename":"src/traits.rs","begin":[157,4],"end":[157,52]},"visibility":"default","docs":"Makes a new value with the minute number changed.\n\nReturns `None` when the resulting value would be invalid.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["min",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:4002-0:2927:2039":{"id":"b:2:4002-0:2927:2039","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2927:2039","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2668:2625":{"id":"0:2668:2625","crate_id":0,"name":"IsoYearDiv100","span":{"filename":"src/format/mod.rs","begin":[110,4],"end":[110,17]},"visibility":"default","docs":"Year in the ISO week date, divided by 100 (FW=PW=2). Implies the non-negative year.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2848:2743":{"id":"0:2848:2743","crate_id":0,"name":"Impossible","span":{"filename":"src/format/mod.rs","begin":[356,4],"end":[356,14]},"visibility":"default","docs":"There is no possible date and time value with given set of fields.\n\nThis does not include the out-of-range conditions, which are trivially invalid.\nIt includes the case that there are one or more fields that are inconsistent to each other.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2903":{"id":"0:2903","crate_id":0,"name":null,"span":{"filename":"src/format/parsed.rs","begin":[25,31],"end":[25,36]},"visibility":{"restricted":{"parent":"0:705:2399","path":"::format::parsed"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10440:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Parsed","id":"0:2873:2237","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2904:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3468":{"id":"0:3468","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[11,9],"end":[11,18]},"visibility":{"restricted":{"parent":"0:2490:1907","path":"::weekday"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:3446:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3386":{"id":"0:3386","crate_id":0,"name":null,"span":{"filename":"src/offset/utc.rs","begin":[42,9],"end":[42,13]},"visibility":{"restricted":{"parent":"0:2297:5700","path":"::offset::utc"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:3384:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2559:2189":{"id":"0:2559:2189","crate_id":0,"name":"day0","span":{"filename":"src/traits.rs","begin":[38,4],"end":[38,26]},"visibility":"default","docs":"Returns the day of month starting from 0.\n\nThe return value ranges from 0 to 30. (The last day of month differs by months.)","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:1580":{"id":"0:1580","crate_id":0,"name":null,"span":{"filename":"src/naive/isoweek.rs","begin":[52,0],"end":[111,1]},"visibility":{"restricted":{"parent":"0:1565:2959","path":"::naive::isoweek"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"IsoWeek","id":"0:3052:1901","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1581:2158","0:1582:2842","0:1583:5238"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:175:671":{"id":"0:175:671","crate_id":0,"name":"format","span":{"filename":"src/date.rs","begin":[339,4],"end":[341,5]},"visibility":"public","docs":"Formats the date with the specified format string.\nSee the [`crate::format::strftime`] module\non the supported escape sequences.\n\n# Example\n```rust\nuse chrono::prelude::*;\n\nlet date_time: Date<Utc> = Utc.ymd(2017, 04, 02);\nlet formatted = format!(\"{}\", date_time.format(\"%d/%m/%Y\"));\nassert_eq!(formatted, \"02/04/2017\");\n```","links":{"`crate::format::strftime`":"0:995:2597"},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["fmt",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2927:2039","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2908:2041","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8547:151":{"id":"2:8547:151","crate_id":2,"name":"IntoIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8548:2040","2:8549:7878","2:8550:768"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2393:2082":{"id":"0:2393:2082","crate_id":0,"name":"from_local_datetime","span":{"filename":"src/offset/mod.rs","begin":[454,4],"end":[457,5]},"visibility":"default","docs":"Converts the local `NaiveDateTime` to the timezone-aware `DateTime` if possible.","links":{},"attrs":["#[allow(clippy :: wrong_self_convention)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["local",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3395:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:995:2597":{"id":"0:995:2597","crate_id":0,"name":"strftime","span":{"filename":"src/format/strftime.rs","begin":[4,0],"end":[639,1]},"visibility":"public","docs":"`strftime`/`strptime`-inspired date and time formatting syntax.\n\n## Specifiers\n\nThe following specifiers are available both to formatting and parsing.\n\n| Spec. | Example  | Description                                                                |\n|-------|----------|----------------------------------------------------------------------------|\n|       |          | **DATE SPECIFIERS:**                                                       |\n| `%Y`  | `2001`   | The full proleptic Gregorian year, zero-padded to 4 digits. chrono supports years from -262144 to 262143. |\n| `%C`  | `20`     | The proleptic Gregorian year divided by 100, zero-padded to 2 digits. [^1] |\n| `%y`  | `01`     | The proleptic Gregorian year modulo 100, zero-padded to 2 digits. [^1]     |\n|       |          |                                                                            |\n| `%m`  | `07`     | Month number (01--12), zero-padded to 2 digits.                            |\n| `%b`  | `Jul`    | Abbreviated month name. Always 3 letters.                                  |\n| `%B`  | `July`   | Full month name. Also accepts corresponding abbreviation in parsing.       |\n| `%h`  | `Jul`    | Same as `%b`.                                                              |\n|       |          |                                                                            |\n| `%d`  | `08`     | Day number (01--31), zero-padded to 2 digits.                              |\n| `%e`  | ` 8`     | Same as `%d` but space-padded. Same as `%_d`.                              |\n|       |          |                                                                            |\n| `%a`  | `Sun`    | Abbreviated weekday name. Always 3 letters.                                |\n| `%A`  | `Sunday` | Full weekday name. Also accepts corresponding abbreviation in parsing.     |\n| `%w`  | `0`      | Sunday = 0, Monday = 1, ..., Saturday = 6.                                 |\n| `%u`  | `7`      | Monday = 1, Tuesday = 2, ..., Sunday = 7. (ISO 8601)                       |\n|       |          |                                                                            |\n| `%U`  | `28`     | Week number starting with Sunday (00--53), zero-padded to 2 digits. [^2]   |\n| `%W`  | `27`     | Same as `%U`, but week 1 starts with the first Monday in that year instead.|\n|       |          |                                                                            |\n| `%G`  | `2001`   | Same as `%Y` but uses the year number in ISO 8601 week date. [^3]          |\n| `%g`  | `01`     | Same as `%y` but uses the year number in ISO 8601 week date. [^3]          |\n| `%V`  | `27`     | Same as `%U` but uses the week number in ISO 8601 week date (01--53). [^3] |\n|       |          |                                                                            |\n| `%j`  | `189`    | Day of the year (001--366), zero-padded to 3 digits.                       |\n|       |          |                                                                            |\n| `%D`  | `07/08/01`    | Month-day-year format. Same as `%m/%d/%y`.                            |\n| `%x`  | `07/08/01`    | Locale's date representation (e.g., 12/31/99).                        |\n| `%F`  | `2001-07-08`  | Year-month-day format (ISO 8601). Same as `%Y-%m-%d`.                 |\n| `%v`  | ` 8-Jul-2001` | Day-month-year format. Same as `%e-%b-%Y`.                            |\n|       |          |                                                                            |\n|       |          | **TIME SPECIFIERS:**                                                       |\n| `%H`  | `00`     | Hour number (00--23), zero-padded to 2 digits.                             |\n| `%k`  | ` 0`     | Same as `%H` but space-padded. Same as `%_H`.                              |\n| `%I`  | `12`     | Hour number in 12-hour clocks (01--12), zero-padded to 2 digits.           |\n| `%l`  | `12`     | Same as `%I` but space-padded. Same as `%_I`.                              |\n|       |          |                                                                            |\n| `%P`  | `am`     | `am` or `pm` in 12-hour clocks.                                            |\n| `%p`  | `AM`     | `AM` or `PM` in 12-hour clocks.                                            |\n|       |          |                                                                            |\n| `%M`  | `34`     | Minute number (00--59), zero-padded to 2 digits.                           |\n| `%S`  | `60`     | Second number (00--60), zero-padded to 2 digits. [^4]                      |\n| `%f`  | `026490000`   | The fractional seconds (in nanoseconds) since last whole second. [^7] |\n| `%.f` | `.026490`| Similar to `.%f` but left-aligned. These all consume the leading dot. [^7] |\n| `%.3f`| `.026`        | Similar to `.%f` but left-aligned but fixed to a length of 3. [^7]    |\n| `%.6f`| `.026490`     | Similar to `.%f` but left-aligned but fixed to a length of 6. [^7]    |\n| `%.9f`| `.026490000`  | Similar to `.%f` but left-aligned but fixed to a length of 9. [^7]    |\n| `%3f` | `026`         | Similar to `%.3f` but without the leading dot. [^7]                   |\n| `%6f` | `026490`      | Similar to `%.6f` but without the leading dot. [^7]                   |\n| `%9f` | `026490000`   | Similar to `%.9f` but without the leading dot. [^7]                   |\n|       |               |                                                                       |\n| `%R`  | `00:34`       | Hour-minute format. Same as `%H:%M`.                                  |\n| `%T`  | `00:34:60`    | Hour-minute-second format. Same as `%H:%M:%S`.                        |\n| `%X`  | `00:34:60`    | Locale's time representation (e.g., 23:13:48).                        |\n| `%r`  | `12:34:60 AM` | Hour-minute-second format in 12-hour clocks. Same as `%I:%M:%S %p`.   |\n|       |          |                                                                            |\n|       |          | **TIME ZONE SPECIFIERS:**                                                  |\n| `%Z`  | `ACST`   | Local time zone name. Skips all non-whitespace characters during parsing. [^8] |\n| `%z`  | `+0930`  | Offset from the local time to UTC (with UTC being `+0000`).                |\n| `%:z` | `+09:30` | Same as `%z` but with a colon.                                             |\n| `%#z` | `+09`    | *Parsing only:* Same as `%z` but allows minutes to be missing or present.  |\n|       |          |                                                                            |\n|       |          | **DATE & TIME SPECIFIERS:**                                                |\n|`%c`|`Sun Jul  8 00:34:60 2001`|Locale's date and time (e.g., Thu Mar  3 23:05:25 2005).       |\n| `%+`  | `2001-07-08T00:34:60.026490+09:30` | ISO 8601 / RFC 3339 date & time format. [^5]     |\n|       |               |                                                                       |\n| `%s`  | `994518299`   | UNIX timestamp, the number of seconds since 1970-01-01 00:00 UTC. [^6]|\n|       |          |                                                                            |\n|       |          | **SPECIAL SPECIFIERS:**                                                    |\n| `%t`  |          | Literal tab (`\\t`).                                                        |\n| `%n`  |          | Literal newline (`\\n`).                                                    |\n| `%%`  |          | Literal percent sign.                                                      |\n\nIt is possible to override the default padding behavior of numeric specifiers `%?`.\nThis is not allowed for other specifiers and will result in the `BAD_FORMAT` error.\n\nModifier | Description\n-------- | -----------\n`%-?`    | Suppresses any padding including spaces and zeroes. (e.g. `%j` = `012`, `%-j` = `12`)\n`%_?`    | Uses spaces as a padding. (e.g. `%j` = `012`, `%_j` = ` 12`)\n`%0?`    | Uses zeroes as a padding. (e.g. `%e` = ` 9`, `%0e` = `09`)\n\nNotes:\n\n[^1]: `%C`, `%y`:\n   This is floor division, so 100 BCE (year number -99) will print `-1` and `99` respectively.\n\n[^2]: `%U`:\n   Week 1 starts with the first Sunday in that year.\n   It is possible to have week 0 for days before the first Sunday.\n\n[^3]: `%G`, `%g`, `%V`:\n   Week 1 is the first week with at least 4 days in that year.\n   Week 0 does not exist, so this should be used with `%G` or `%g`.\n\n[^4]: `%S`:\n   It accounts for leap seconds, so `60` is possible.\n\n[^5]: `%+`: Same as `%Y-%m-%dT%H:%M:%S%.f%:z`, i.e. 0, 3, 6 or 9 fractional\n   digits for seconds and colons in the time zone offset.\n   <br>\n   <br>\n   The typical `strftime` implementations have different (and locale-dependent)\n   formats for this specifier. While Chrono's format for `%+` is far more\n   stable, it is best to avoid this specifier if you want to control the exact\n   output.\n\n[^6]: `%s`:\n   This is not padded and can be negative.\n   For the purpose of Chrono, it only accounts for non-leap seconds\n   so it slightly differs from ISO C `strftime` behavior.\n\n[^7]: `%f`, `%.f`, `%.3f`, `%.6f`, `%.9f`, `%3f`, `%6f`, `%9f`:\n   <br>\n   The default `%f` is right-aligned and always zero-padded to 9 digits\n   for the compatibility with glibc and others,\n   so it always counts the number of nanoseconds since the last whole second.\n   E.g. 7ms after the last second will print `007000000`,\n   and parsing `7000000` will yield the same.\n   <br>\n   <br>\n   The variant `%.f` is left-aligned and print 0, 3, 6 or 9 fractional digits\n   according to the precision.\n   E.g. 70ms after the last second under `%.f` will print `.070` (note: not `.07`),\n   and parsing `.07`, `.070000` etc. will yield the same.\n   Note that they can print or read nothing if the fractional part is zero or\n   the next character is not `.`.\n   <br>\n   <br>\n   The variant `%.3f`, `%.6f` and `%.9f` are left-aligned and print 3, 6 or 9 fractional digits\n   according to the number preceding `f`.\n   E.g. 70ms after the last second under `%.3f` will print `.070` (note: not `.07`),\n   and parsing `.07`, `.070000` etc. will yield the same.\n   Note that they can read nothing if the fractional part is zero or\n   the next character is not `.` however will print with the specified length.\n   <br>\n   <br>\n   The variant `%3f`, `%6f` and `%9f` are left-aligned and print 3, 6 or 9 fractional digits\n   according to the number preceding `f`, but without the leading dot.\n   E.g. 70ms after the last second under `%3f` will print `070` (note: not `07`),\n   and parsing `07`, `070000` etc. will yield the same.\n   Note that they can read nothing if the fractional part is zero.\n\n[^8]: `%Z`:\n   Offset will not be populated from the parsed data, nor will it be validated.\n   Timezone is completely ignored. Similar to the glibc `strptime` treatment of\n   this format code.\n   <br>\n   <br>\n   It is not possible to reliably convert from an abbreviation to an offset,\n   for example CDT can mean either Central Daylight Time (North America) or\n   China Daylight Time.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:2908:2041"],"is_stripped":false}},"b:2:3198-0:3377:1873":{"id":"b:2:3198-0:3377:1873","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Local","id":"0:3377:1873","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:2536"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:132:2074":{"id":"0:132:2074","crate_id":0,"name":"from_utc","span":{"filename":"src/date.rs","begin":[78,4],"end":[80,5]},"visibility":"public","docs":"Makes a new `Date` with given *UTC* date and offset.\nThe local date should be constructed via the `TimeZone` trait.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["date",{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["offset",{"kind":"qualified_path","inner":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Tz"},"trait":{"name":"","id":"0:2374:1889","args":null}}}]],"output":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2584":{"id":"0:2584","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[503,17],"end":[503,25]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"traits::Datelike","name":"Datelike","id":"0:2553:1879","glob":false}},"0:1403:2350":{"id":"0:1403:2350","crate_id":0,"name":"timestamp_subsec_nanos","span":{"filename":"src/naive/datetime/mod.rs","begin":[455,4],"end":[457,5]},"visibility":"public","docs":"Returns the number of nanoseconds since the last whole non-leap second.\n\nThe return value ranges from 0 to 999,999,999,\nor for [leap seconds](./struct.NaiveTime.html#leap-second-handling), to 1,999,999,999.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet dt = NaiveDate::from_ymd(2016, 7, 8).and_hms_nano(9, 10, 11, 123_456_789);\nassert_eq!(dt.timestamp_subsec_nanos(), 123_456_789);\n\nlet dt = NaiveDate::from_ymd(2015, 7, 1).and_hms_nano(8, 59, 59, 1_234_567_890);\nassert_eq!(dt.timestamp_subsec_nanos(), 1_234_567_890);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3551":{"id":"0:3551","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[193,29],"end":[193,31]},"visibility":{"restricted":{"parent":"0:2518:1909","path":"::month"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3278:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Months","id":"0:3543:1910","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:10440:109":{"id":"2:10440:109","crate_id":2,"name":"Debug","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10441:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:23629:21439":{"id":"2:23629:21439","crate_id":2,"name":"SimdOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23630:63643","2:23631:63642","2:23632:63644"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"SimdPartialOrd","id":"2:23624:8825","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2387:3456":{"id":"0:2387:3456","crate_id":0,"name":"datetime_from_str","span":{"filename":"src/offset/mod.rs","begin":[428,4],"end":[432,5]},"visibility":"default","docs":"Parses a string with the specified format string and returns a\n`DateTime` with the current offset.\n\nSee the [`crate::format::strftime`] module on the\nsupported escape sequences.\n\nIf the to-be-parsed string includes an offset, it *must* match the\noffset of the TimeZone, otherwise an error will be returned.\n\nSee also [`DateTime::parse_from_str`] which gives a [`DateTime`] with\nparsed [`FixedOffset`].","links":{"`crate::format::strftime`":"0:995:2597","`DateTime::parse_from_str`":"0:2621:1877","`DateTime`":"0:2621:1877","`FixedOffset`":"0:3086:1883"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["fmt",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:632:1899","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2613":{"id":"0:2613","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[52,22],"end":[52,27]},"visibility":{"restricted":{"parent":"0:256:1893","path":"::datetime"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10440:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SecondsFormat","id":"0:2597:1878","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2614:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3198-0:3446:1882":{"id":"b:2:3198-0:3446:1882","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:3446:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:2536"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2367:2107":{"id":"0:2367:2107","crate_id":0,"name":"and_hms_micro_opt","span":{"filename":"src/offset/mod.rs","begin":[143,4],"end":[156,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date, hour, minute, second and microsecond.\nThe microsecond part can exceed 1,000,000 in order to represent the leap second.\nThe offset in the current date is preserved.\n\nPropagates any error. Ambiguous result would be discarded.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["hour",{"kind":"primitive","inner":"u32"}],["min",{"kind":"primitive","inner":"u32"}],["sec",{"kind":"primitive","inner":"u32"}],["micro",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3395:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13641:60410":{"id":"2:13641:60410","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:15986:6923","self::pattern":"2:13202:1925","str::rsplitn":"1:15992:6928"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"2:49695:7178","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10453:7225":{"id":"2:10453:7225","crate_id":2,"name":"LowerHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10454:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8553:2040":{"id":"2:8553:2040","crate_id":2,"name":"Item","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8748:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:2468":{"id":"0:2468","crate_id":0,"name":null,"span":{"filename":"src/round.rs","begin":[160,0],"end":[170,1]},"visibility":{"restricted":{"parent":"0:2418:1904","path":"::round"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"DurationRound","id":"0:2458:1905","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2469:126","0:2470:6588","0:2471:6593"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:464:2198":{"id":"0:464:2198","crate_id":0,"name":"with_ordinal","span":{"filename":"src/datetime/mod.rs","begin":[759,4],"end":[761,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["ordinal",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3462:2819":{"id":"0:3462:2819","crate_id":0,"name":"Sat","span":{"filename":"src/weekday.rs","begin":[26,4],"end":[26,11]},"visibility":"default","docs":"Saturday.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:775:2998":{"id":"0:775:2998","crate_id":0,"name":"set_week_from_sun","span":{"filename":"src/format/parsed.rs","begin":[190,4],"end":[192,5]},"visibility":"public","docs":"Tries to set the [`week_from_sun`](#structfield.week_from_sun) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["value",{"kind":"primitive","inner":"i64"}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:632:1899","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2866":{"id":"0:2866","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[347,23],"end":[347,32]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2845:2736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3493:2802":{"id":"0:3493:2802","crate_id":0,"name":"January","span":{"filename":"src/month.rs","begin":[35,4],"end":[35,15]},"visibility":"default","docs":"January","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2455:6565":{"id":"0:2455:6565","crate_id":0,"name":"round_subsecs","span":{"filename":"src/round.rs","begin":[51,4],"end":[64,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["digits",{"kind":"primitive","inner":"u16"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3202-0:2845:2736":{"id":"b:2:3202-0:2845:2736","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2845:2736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2868:604":{"id":"0:2868:604","crate_id":0,"name":"eq","span":{"filename":"src/format/mod.rs","begin":[347,23],"end":[347,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2845:2736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"23:874:7286":{"id":"23:874:7286","crate_id":23,"name":"NumAssignRef","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"NumAssign","id":"23:871:7285","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"NumAssignOps","id":"23:866:7284","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":false,"type":{"kind":"generic","inner":"Self"}}}}],"bindings":[]}}},"generic_params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"implementations":[]}},"0:149:2126":{"id":"0:149:2126","crate_id":0,"name":"pred","span":{"filename":"src/date.rs","begin":[208,4],"end":[210,5]},"visibility":"public","docs":"Makes a new `Date` for the prior date.\n\nPanics when `self` is the first representable date.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3208-0:3086:1883":{"id":"b:2:3208-0:3086:1883","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1864:181":{"id":"0:1864:181","crate_id":0,"name":"Output","span":{"filename":"src/offset/fixed.rs","begin":[178,4],"end":[178,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:3377:1873":{"id":"0:3377:1873","crate_id":0,"name":"Local","span":{"filename":"src/offset/local/mod.rs","begin":[55,0],"end":[55,17]},"visibility":"public","docs":"The local timescale. This is implemented via the standard `time` crate.\n\nUsing the [`TimeZone`](./trait.TimeZone.html) methods\non the Local struct is the preferred way to construct `DateTime<Local>`\ninstances.\n\n# Example\n\n```\nuse chrono::{Local, DateTime, TimeZone};\n\nlet dt: DateTime<Local> = Local::now();\nlet dt: DateTime<Local> = Local.timestamp(0, 0);\n```","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"unit","generics":{"params":[],"where_predicates":[]},"fields_stripped":false,"fields":[],"impls":["0:2277","a:2:3310:7473-0:3377:1873","a:2:9408:7639-0:3377:1873","a:2:3269:211-0:3377:1873","a:2:9407:7640-0:3377:1873","a:2:3281:220-0:3377:1873","b:2:2869-0:3377:1873","b:2:4002-0:3377:1873","b:2:3198-0:3377:1873","b:2:2872-0:3377:1873","b:2:3208-0:3377:1873","b:2:3202-0:3377:1873","b:2:3213-0:3377:1873","b:5:787-0:3377:1873","0:3379","0:3380","0:3382","0:2280"]}},"0:2704:408":{"id":"0:2704:408","crate_id":0,"name":"clone","span":{"filename":"src/format/mod.rs","begin":[97,9],"end":[97,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2659:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:787-0:2941:1885":{"id":"b:5:787-0:2941:1885","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:7921","5:790:7922","5:791:7923"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3269:211-0:2659:2444":{"id":"a:2:3269:211-0:2659:2444","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2659:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:419:2396":{"id":"0:419:2396","crate_id":0,"name":"parse_from_rfc2822","span":{"filename":"src/datetime/mod.rs","begin":[494,4],"end":[499,5]},"visibility":"public","docs":"Parses an RFC 2822 date and time string such as `Tue, 1 Jul 2003 10:52:37 +0200`,\nthen returns a new [`DateTime`] with a parsed [`FixedOffset`].\n\nRFC 2822 is the internet message standard that specifies the\nrepresentation of times in HTTP and email headers.\n\n```\n# use chrono::{DateTime, FixedOffset, TimeZone};\nassert_eq!(\n    DateTime::parse_from_rfc2822(\"Wed, 18 Feb 2015 23:16:09 GMT\").unwrap(),\n    FixedOffset::east(0).ymd(2015, 2, 18).and_hms(23, 16, 9)\n);\n```","links":{"`FixedOffset`":"0:3086:1883","`DateTime`":"0:2621:1877"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:632:1899","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:388:2142":{"id":"0:388:2142","crate_id":0,"name":"checked_sub_signed","span":{"filename":"src/datetime/mod.rs","begin":[336,4],"end":[340,5]},"visibility":"public","docs":"Subtracts given `Duration` from the current date and time.\n\nReturns `None` when it will result in overflow.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:4783:8303":{"id":"2:4783:8303","crate_id":2,"name":"AsyncIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4784:2040","2:4785:64177","2:4786:4358"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"23:611:7311":{"id":"23:611:7311","crate_id":23,"name":"CheckedEuclid","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:612:66447","23:613:66448"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Euclid","id":"23:599:7312","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"5:6112:6255":{"id":"5:6112:6255","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:8368:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]","#[stable(feature = \"repeat_str\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2615":{"id":"0:2615","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[52,29],"end":[52,31]},"visibility":{"restricted":{"parent":"0:256:1893","path":"::datetime"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3278:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SecondsFormat","id":"0:2597:1878","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1704:660":{"id":"0:1704:660","crate_id":0,"name":"fmt","span":{"filename":"src/naive/time/mod.rs","begin":[1225,4],"end":[1243,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10400:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10389:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3269:211-0:2792:2040":{"id":"a:2:3269:211-0:2792:2040","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2792:2040","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:23099:8552":{"id":"2:23099:8552","crate_id":2,"name":"SupportedLaneCount","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:23089:8515","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:4002-0:3428:1906":{"id":"b:2:4002-0:3428:1906","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RoundingError","id":"0:3428:1906","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13653:1923":{"id":"2:13653:1923","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:13202:1925","str::matches":"1:15992:6928","prim@char":"1:15986:6923","`DoubleEndedIterator`":"2:8591:120"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"2:49795:7179","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2815":{"id":"0:2815","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[278,9],"end":[278,14]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2792:2040","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:2817:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2279:5866":{"id":"0:2279:5866","crate_id":0,"name":"now","span":{"filename":"src/offset/local/mod.rs","begin":[69,4],"end":[71,5]},"visibility":"public","docs":"Returns a `DateTime` which corresponds to the current date and time.","links":{},"attrs":["#[cfg(not(all(target_arch = \"wasm32\", feature = \"wasmbind\",\nnot(any(target_os = \"emscripten\", target_os = \"wasi\")))))]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Local","id":"0:3377:1873","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"23:233:7296":{"id":"23:233:7296","crate_id":23,"name":"Bounded","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:234:4508","23:235:4507"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:616":{"id":"0:616","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[157,0],"end":[161,1]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:614:2656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:617:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2376:2529":{"id":"0:2376:2529","crate_id":0,"name":"ymd","span":{"filename":"src/offset/mod.rs","begin":[224,4],"end":[226,5]},"visibility":"default","docs":"Makes a new `Date` from year, month, day and the current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\n\nThe time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),\nbut it will propagate to the `DateTime` values constructed via this date.\n\nPanics on the out-of-range date, invalid month and/or day.\n\n# Example\n\n```\nuse chrono::{Utc, TimeZone};\n\nassert_eq!(Utc.ymd(2015, 5, 15).to_string(), \"2015-05-15UTC\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["year",{"kind":"primitive","inner":"i32"}],["month",{"kind":"primitive","inner":"u32"}],["day",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3055":{"id":"0:3055","crate_id":0,"name":null,"span":{"filename":"src/naive/isoweek.rs","begin":[19,9],"end":[19,18]},"visibility":{"restricted":{"parent":"0:1565:2959","path":"::naive::isoweek"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"IsoWeek","id":"0:3052:1901","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IsoWeek","id":"0:3052:1901","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3056:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13582:64773":{"id":"2:13582:64773","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"1:15992:6928"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6461:8519":{"id":"1:6461:8519","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6462:8730","1:6463:8731","1:6464:13200","1:6465:59827","1:6467:59831","1:6469:59828","1:6470:59829","1:6472:59830"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10589:8515","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2553:1879":{"id":"0:2553:1879","crate_id":0,"name":"Datelike","span":{"filename":"src/traits.rs","begin":[4,0],"end":[119,1]},"visibility":"public","docs":"The common set of methods for date component.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:2554:2158","0:2555:6851","0:2556:1909","0:2557:2188","0:2558:2159","0:2559:2189","0:2560:2190","0:2561:2191","0:2562:1907","0:2563:2192","0:2564:2193","0:2565:2194","0:2566:2195","0:2567:2196","0:2568:2197","0:2569:2198","0:2570:2199","0:2571:4486"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:177","0:443","0:1231","0:1417"]}},"b:2:3208-0:2621:1877":{"id":"b:2:3208-0:2621:1877","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1248":{"id":"0:1248","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[1644,0],"end":[1651,1]},"visibility":{"restricted":{"parent":"0:1062:1890","path":"::naive::date"}},"docs":"An addition of `Duration` to `NaiveDate` discards the fractional days,\nrounding to the closest integral number of days towards `Duration::zero()`.\n\nPanics on underflow or overflow.\nUse [`NaiveDate::checked_add_signed`](#method.checked_add_signed) to detect that.\n\n# Example\n\n```\nuse chrono::{Duration, NaiveDate};\n\nlet from_ymd = NaiveDate::from_ymd;\n\nassert_eq!(from_ymd(2014, 1, 1) + Duration::zero(),             from_ymd(2014, 1, 1));\nassert_eq!(from_ymd(2014, 1, 1) + Duration::seconds(86399),     from_ymd(2014, 1, 1));\nassert_eq!(from_ymd(2014, 1, 1) + Duration::seconds(-86399),    from_ymd(2014, 1, 1));\nassert_eq!(from_ymd(2014, 1, 1) + Duration::days(1),            from_ymd(2014, 1, 2));\nassert_eq!(from_ymd(2014, 1, 1) + Duration::days(-1),           from_ymd(2013, 12, 31));\nassert_eq!(from_ymd(2014, 1, 1) + Duration::days(364),          from_ymd(2014, 12, 31));\nassert_eq!(from_ymd(2014, 1, 1) + Duration::days(365*4 + 1),    from_ymd(2018, 1, 1));\nassert_eq!(from_ymd(2014, 1, 1) + Duration::days(365*400 + 97), from_ymd(2414, 1, 1));\n```","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Add","id":"2:3337:2031","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Duration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1249:181","0:1250:265"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3202-0:3052:1901":{"id":"b:2:3202-0:3052:1901","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IsoWeek","id":"0:3052:1901","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:482":{"id":"0:482","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[809,0],"end":[809,80]},"visibility":{"restricted":{"parent":"0:256:1893","path":"::datetime"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:2374:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Tz"},"trait":{"name":"TimeZone","id":"0:2374:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1730":{"id":"0:1730","crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[19,40],"end":[19,52]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"self::datetime::MAX_DATETIME","name":"MAX_DATETIME","id":"0:1387:1895","glob":false}},"0:1437:2198":{"id":"0:1437:2198","crate_id":0,"name":"with_ordinal","span":{"filename":"src/naive/datetime/mod.rs","begin":[1032,4],"end":[1034,5]},"visibility":"default","docs":"Makes a new `NaiveDateTime` with the day of year (starting from 1) changed.\n\nReturns `None` when the resulting `NaiveDateTime` would be invalid.\n\nSee also the [`NaiveDate::with_ordinal`] method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Datelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 8).and_hms(12, 34, 56);\nassert_eq!(dt.with_ordinal(60),\n           Some(NaiveDate::from_ymd(2015, 3, 1).and_hms(12, 34, 56)));\nassert_eq!(dt.with_ordinal(366), None); // 2015 had only 365 days\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd(2016, 9, 8).and_hms(12, 34, 56);\nassert_eq!(dt.with_ordinal(60),\n           Some(NaiveDate::from_ymd(2016, 2, 29).and_hms(12, 34, 56)));\nassert_eq!(dt.with_ordinal(366),\n           Some(NaiveDate::from_ymd(2016, 12, 31).and_hms(12, 34, 56)));\n```","links":{"`NaiveDate::with_ordinal`":"0:2941:1885"},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["ordinal",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2940:660":{"id":"0:2940:660","crate_id":0,"name":"fmt","span":{"filename":"src/naive/date.rs","begin":[56,9],"end":[56,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10400:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10389:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:449:2189":{"id":"0:449:2189","crate_id":0,"name":"day0","span":{"filename":"src/datetime/mod.rs","begin":[713,4],"end":[715,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:239:1355":{"id":"0:239:1355","crate_id":0,"name":"sub","span":{"filename":"src/date.rs","begin":[518,4],"end":[520,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3198-0:3067:1887":{"id":"b:2:3198-0:3067:1887","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:2536"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3411:7096":{"id":"2:3411:7096","crate_id":2,"name":"Shl","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3413:181","2:3414:1233"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2391:2165":{"id":"0:2391:2165","crate_id":0,"name":"from_local_date","span":{"filename":"src/offset/mod.rs","begin":[445,4],"end":[450,5]},"visibility":"default","docs":"Converts the local `NaiveDate` to the timezone-aware `Date` if possible.","links":{},"attrs":["#[allow(clippy :: wrong_self_convention)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["local",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3395:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1854":{"id":"0:1854","crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[133,0],"end":[145,1]},"visibility":{"restricted":{"parent":"0:1795:5699","path":"::offset::fixed"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10440:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1855:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:41":{"id":"0:41","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[459,33],"end":[459,36]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::Utc","name":"Utc","id":"0:3384:1884","glob":false}},"0:456:2194":{"id":"0:456:2194","crate_id":0,"name":"with_month","span":{"filename":"src/datetime/mod.rs","begin":[739,4],"end":[741,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["month",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13578:3245":{"id":"2:13578:3245","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_is_empty\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:3543:1910":{"id":"b:2:3213-0:3543:1910","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Months","id":"0:3543:1910","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:22910:8819":{"id":"2:22910:8819","crate_id":2,"name":"SimdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:22911:8822","2:22912:63420","2:22913:63628","2:22914:63629","2:22915:63630","2:22916:4446","2:22917:63631","2:22918:63632","2:22919:63633","2:22920:63634","2:22921:63635","2:22922:63636","2:22923:63637","2:22924:63638","2:22925:63639","2:22926:63640","2:22927:7329","2:22928:63641","2:22929:63642","2:22930:63643","2:22931:63644","2:22932:63421","2:22933:63422","2:22934:63423","2:22935:63424"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:23012:8515","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2716:2669":{"id":"0:2716:2669","crate_id":0,"name":"LongMonthName","span":{"filename":"src/format/mod.rs","begin":[190,4],"end":[190,17]},"visibility":"default","docs":"Full month names.\n\nPrints a full name in the title case, reads either a short or full name in any case.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:1195:2086":{"id":"0:1195:2086","crate_id":0,"name":"and_hms","span":{"filename":"src/naive/date.rs","begin":[734,4],"end":[736,5]},"visibility":"public","docs":"Makes a new `NaiveDateTime` from the current date, hour, minute and second.\n\nNo [leap second](./struct.NaiveTime.html#leap-second-handling) is allowed here;\nuse `NaiveDate::and_hms_*` methods with a subsecond parameter instead.\n\nPanics on invalid hour, minute and/or second.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Datelike, Timelike, Weekday};\n\nlet d = NaiveDate::from_ymd(2015, 6, 3);\n\nlet dt: NaiveDateTime = d.and_hms(12, 34, 56);\nassert_eq!(dt.year(), 2015);\nassert_eq!(dt.weekday(), Weekday::Wed);\nassert_eq!(dt.second(), 56);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["hour",{"kind":"primitive","inner":"u32"}],["min",{"kind":"primitive","inner":"u32"}],["sec",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2901":{"id":"0:2901","crate_id":0,"name":null,"span":{"filename":"src/format/parsed.rs","begin":[25,27],"end":[25,29]},"visibility":{"restricted":{"parent":"0:705:2399","path":"::format::parsed"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Parsed","id":"0:2873:2237","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1171":{"id":"0:1171","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[62,0],"end":[116,1]},"visibility":{"restricted":{"parent":"0:1062:1890","path":"::naive::date"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"NaiveWeek","id":"0:2936:1902","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1172:3817","0:1173:3820","0:1174:2224"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3208-0:3395:1903":{"id":"b:2:3208-0:3395:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3395:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9408:7639-0:3492:1880":{"id":"a:2:9408:7639-0:3492:1880","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9408:7639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:3492:1880","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1253":{"id":"0:1253","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[1660,0],"end":[1686,1]},"visibility":{"restricted":{"parent":"0:1062:1890","path":"::naive::date"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Add","id":"2:3337:2031","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Months","id":"0:3543:1910","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1254:181","0:1255:265"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:5:6420-0:2831:1898":{"id":"b:5:6420-0:2831:1898","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10447:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:6418:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2831:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:6422:1397"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:4004:1429":{"id":"2:4004:1429","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"2:46156:7213","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6113:61475":{"id":"5:6113:61475","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"1:15992:6928"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:2641:2445":{"id":"b:2:3213-0:2641:2445","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2641:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2949":{"id":"0:2949","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[166,24],"end":[166,28]},"visibility":{"restricted":{"parent":"0:1062:1890","path":"::naive::date"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10678:142","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2950:715"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2576:2478":{"id":"0:2576:2478","crate_id":0,"name":"second","span":{"filename":"src/traits.rs","begin":[142,4],"end":[142,28]},"visibility":"default","docs":"Returns the second number from 0 to 59.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2336:2211":{"id":"0:2336:2211","crate_id":0,"name":"today","span":{"filename":"src/offset/utc.rs","begin":[49,4],"end":[51,5]},"visibility":"public","docs":"Returns a `Date` which corresponds to the current date.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:3384:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2831:1898":{"id":"0:2831:1898","crate_id":0,"name":"ParseError","span":{"filename":"src/format/mod.rs","begin":[337,0],"end":[337,38]},"visibility":"public","docs":"An error from the `parse` function.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:630","a:2:3310:7473-0:2831:1898","a:2:9408:7639-0:2831:1898","a:2:3269:211-0:2831:1898","a:2:9407:7640-0:2831:1898","a:2:3281:220-0:2831:1898","b:2:2869-0:2831:1898","b:2:4002-0:2831:1898","b:2:3198-0:2831:1898","b:2:2872-0:2831:1898","b:2:3208-0:2831:1898","b:2:3202-0:2831:1898","b:2:3213-0:2831:1898","b:5:787-0:2831:1898","b:5:6420-0:2831:1898","0:2834","0:2836","0:2838","0:2839","0:2841","0:2842","0:2844","0:634","0:636"]}},"b:5:6420-0:2621:1877":{"id":"b:5:6420-0:2621:1877","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10447:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:6418:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["5:6422:1397"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2567:2196":{"id":"0:2567:2196","crate_id":0,"name":"with_day","span":{"filename":"src/traits.rs","begin":[74,4],"end":[74,49]},"visibility":"default","docs":"Makes a new value with the day of month (starting from 1) changed.\n\nReturns `None` when the resulting value would be invalid.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["day",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:896:2236":{"id":"0:896:2236","crate_id":0,"name":"parse","span":{"filename":"src/format/parse.rs","begin":[243,0],"end":[249,1]},"visibility":"public","docs":"Tries to parse given string into `parsed` with given formatting items.\nReturns `Ok` when the entire string has been parsed (otherwise `parsed` should not be used).\nThere should be no trailing string after parsing;\nuse a stray [`Item::Space`](./enum.Item.html#variant.Space) to trim whitespaces.\n\nThis particular date and time parser is:\n\n- Greedy. It will consume the longest possible prefix.\n  For example, `April` is always consumed entirely when the long month name is requested;\n  it equally accepts `Apr`, but prefers the longer prefix in this case.\n\n- Padding-agnostic (for numeric items).\n  The [`Pad`](./enum.Pad.html) field is completely ignored,\n  so one can prepend any number of whitespace then any number of zeroes before numbers.\n\n- (Still) obeying the intrinsic parsing width. This allows, for example, parsing `HHMMSS`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["parsed",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Parsed","id":"0:2873:2237","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["items",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:632:1899","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8748:157","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"B"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2792:2040","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:3570":{"id":"0:3570","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[204,27],"end":[204,29]},"visibility":{"restricted":{"parent":"0:2518:1909","path":"::month"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseMonthError","id":"0:3562:1911","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1387:1895":{"id":"0:1387:1895","crate_id":0,"name":"MAX_DATETIME","span":{"filename":"src/naive/datetime/mod.rs","begin":[47,0],"end":[47,59]},"visibility":"public","docs":"The maximum possible `NaiveDateTime`.","links":{},"attrs":["#[deprecated(since = \"0.4.20\", note = \"Use NaiveDateTime::MAX instead\")]"],"deprecation":{"since":"0.4.20","note":"Use NaiveDateTime::MAX instead"},"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"NaiveDateTime::MAX","value":null,"is_literal":false}},"0:1386:1896":{"id":"0:1386:1896","crate_id":0,"name":"MIN_DATETIME","span":{"filename":"src/naive/datetime/mod.rs","begin":[44,0],"end":[44,59]},"visibility":"public","docs":"The minimum possible `NaiveDateTime`.","links":{},"attrs":["#[deprecated(since = \"0.4.20\", note = \"Use NaiveDateTime::MIN instead\")]"],"deprecation":{"since":"0.4.20","note":"Use NaiveDateTime::MIN instead"},"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"NaiveDateTime::MIN","value":null,"is_literal":false}},"0:2759":{"id":"0:2759","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[181,31],"end":[181,36]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10440:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2713:2238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2760:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1697:1355":{"id":"0:1697:1355","crate_id":0,"name":"sub","span":{"filename":"src/naive/time/mod.rs","begin":[1130,4],"end":[1132,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"23:847:7281":{"id":"23:847:7281","crate_id":23,"name":"NumOps","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}},{"name":"Output","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Add","id":"2:3337:2031","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Output"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sub","id":"2:3342:2033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Output"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Mul","id":"2:3347:7086","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Output"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Div","id":"2:3352:7085","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Output"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Rem","id":"2:3358:7088","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Output"}}}}]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2403":{"id":"0:2403","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[491,17],"end":[491,28]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"offset::FixedOffset","name":"FixedOffset","id":"0:3086:1883","glob":false}},"1:5819:8531":{"id":"1:5819:8531","crate_id":1,"name":"DirBuilderExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5820:11103"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9408:7639-0:2999:1886":{"id":"a:2:9408:7639-0:2999:1886","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9408:7639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9408:7639-0:3562:1911":{"id":"a:2:9408:7639-0:3562:1911","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9408:7639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseMonthError","id":"0:3562:1911","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2818":{"id":"0:2818","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[278,16],"end":[278,25]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2792:2040","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2366:2099":{"id":"0:2366:2099","crate_id":0,"name":"and_hms_milli_opt","span":{"filename":"src/offset/mod.rs","begin":[122,4],"end":[135,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date, hour, minute, second and millisecond.\nThe millisecond part can exceed 1,000 in order to represent the leap second.\nThe offset in the current date is preserved.\n\nPropagates any error. Ambiguous result would be discarded.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["hour",{"kind":"primitive","inner":"u32"}],["min",{"kind":"primitive","inner":"u32"}],["sec",{"kind":"primitive","inner":"u32"}],["milli",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3395:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2702:1542":{"id":"0:2702:1542","crate_id":0,"name":"0","span":{"filename":"src/format/mod.rs","begin":[149,13],"end":[149,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:614:2656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:1401:2342":{"id":"0:1401:2342","crate_id":0,"name":"timestamp_subsec_millis","span":{"filename":"src/naive/datetime/mod.rs","begin":[413,4],"end":[415,5]},"visibility":"public","docs":"Returns the number of milliseconds since the last whole non-leap second.\n\nThe return value ranges from 0 to 999,\nor for [leap seconds](./struct.NaiveTime.html#leap-second-handling), to 1,999.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet dt = NaiveDate::from_ymd(2016, 7, 8).and_hms_nano(9, 10, 11, 123_456_789);\nassert_eq!(dt.timestamp_subsec_millis(), 123);\n\nlet dt = NaiveDate::from_ymd(2015, 7, 1).and_hms_nano(8, 59, 59, 1_234_567_890);\nassert_eq!(dt.timestamp_subsec_millis(), 1_234);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1049:126":{"id":"0:1049:126","crate_id":0,"name":"Err","span":{"filename":"src/format/mod.rs","begin":[874,4],"end":[874,33]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:3482:1908","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:2764:660":{"id":"0:2764:660","crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[253,9],"end":[253,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10400:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10389:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3526:2812":{"id":"0:3526:2812","crate_id":0,"name":"December","span":{"filename":"src/month.rs","begin":[57,4],"end":[57,17]},"visibility":"default","docs":"December","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"a:2:3269:211-0:3482:1908":{"id":"a:2:3269:211-0:3482:1908","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:3482:1908","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3065":{"id":"0:3065","crate_id":0,"name":null,"span":{"filename":"src/naive/isoweek.rs","begin":[19,47],"end":[19,52]},"visibility":{"restricted":{"parent":"0:1565:2959","path":"::naive::isoweek"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IsoWeek","id":"0:3052:1901","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3066:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3550:660":{"id":"0:3550:660","crate_id":0,"name":"fmt","span":{"filename":"src/month.rs","begin":[193,22],"end":[193,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10400:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10389:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:22999:8971":{"id":"2:22999:8971","crate_id":2,"name":"SimdUint","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23000:63420","2:23001:1227","2:23002:1228","2:23003:63421","2:23004:63422","2:23005:63423","2:23006:63424","2:23007:63425","2:23008:63426","2:23009:63427"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:23012:8515","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"23:752:7325":{"id":"23:752:7325","crate_id":23,"name":"WrappingSub","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:753:1529"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sub","id":"2:3342:2033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:3269:211-0:614:2656":{"id":"a:2:3269:211-0:614:2656","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:614:2656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3198-0:2927:2039":{"id":"b:2:3198-0:2927:2039","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2927:2039","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3201:2536"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1258:1355":{"id":"0:1258:1355","crate_id":0,"name":"sub","span":{"filename":"src/naive/date.rs","begin":[1708,4],"end":[1710,5]},"visibility":"default","docs":"A subtraction of Months from `NaiveDate` clamped to valid days in resulting month.\n\n# Panics\n\nPanics if the resulting date would be out of range.\n\n# Example\n\n```\nuse chrono::{Duration, NaiveDate, Months};\n\nlet from_ymd = NaiveDate::from_ymd;\n\nassert_eq!(from_ymd(2014, 1, 1) - Months::new(11), from_ymd(2013, 2, 1));\nassert_eq!(from_ymd(2014, 1, 1) - Months::new(12), from_ymd(2013, 1, 1));\nassert_eq!(from_ymd(2014, 1, 1) - Months::new(13), from_ymd(2012, 12, 1));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["months",{"kind":"resolved_path","inner":{"name":"Months","id":"0:3543:1910","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:3342:2033","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2823":{"id":"0:2823","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[278,27],"end":[278,29]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3278:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2792:2040","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1746":{"id":"0:1746","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[484,25],"end":[484,34]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"naive::NaiveDate","name":"NaiveDate","id":"0:2941:1885","glob":false}},"0:3017:408":{"id":"0:3017:408","crate_id":0,"name":"clone","span":{"filename":"src/naive/datetime/mod.rs","begin":[74,53],"end":[74,58]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13597:8634":{"id":"2:13597:8634","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"crate::ops::Index":"2:3577:7105","str::slice_mut_unchecked":"1:15992:6928","`str`":"1:15992:6928"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"23:750:7320":{"id":"23:750:7320","crate_id":23,"name":"WrappingAdd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:751:1527"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Add","id":"2:3337:2031","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:506:265":{"id":"0:506:265","crate_id":0,"name":"add","span":{"filename":"src/datetime/mod.rs","begin":[857,4],"end":[859,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1406:2147":{"id":"0:1406:2147","crate_id":0,"name":"signed_duration_since","span":{"filename":"src/naive/datetime/mod.rs","begin":[647,4],"end":[649,5]},"visibility":"public","docs":"Subtracts another `NaiveDateTime` from the current date and time.\nThis does not overflow or underflow at all.\n\nAs a part of Chrono's [leap second handling](./struct.NaiveTime.html#leap-second-handling),\nthe subtraction assumes that **there is no leap second ever**,\nexcept when any of the `NaiveDateTime`s themselves represents a leap second\nin which case the assumption becomes that\n**there are exactly one (or two) leap second(s) ever**.\n\n# Example\n\n```\nuse chrono::{Duration, NaiveDate};\n\nlet from_ymd = NaiveDate::from_ymd;\n\nlet d = from_ymd(2016, 7, 8);\nassert_eq!(d.and_hms(3, 5, 7).signed_duration_since(d.and_hms(2, 4, 6)),\n           Duration::seconds(3600 + 60 + 1));\n\n// July 8 is 190th day in the year 2016\nlet d0 = from_ymd(2016, 1, 1);\nassert_eq!(d.and_hms_milli(0, 7, 6, 500).signed_duration_since(d0.and_hms(0, 0, 0)),\n           Duration::seconds(189 * 86_400 + 7 * 60 + 6) + Duration::milliseconds(500));\n```\n\nLeap seconds are handled, but the subtraction assumes that\nthere were no other leap seconds happened.\n\n```\n# use chrono::{Duration, NaiveDate};\n# let from_ymd = NaiveDate::from_ymd;\nlet leap = from_ymd(2015, 6, 30).and_hms_milli(23, 59, 59, 1_500);\nassert_eq!(leap.signed_duration_since(from_ymd(2015, 6, 30).and_hms(23, 0, 0)),\n           Duration::seconds(3600) + Duration::milliseconds(500));\nassert_eq!(from_ymd(2015, 7, 1).and_hms(1, 0, 0).signed_duration_since(leap),\n           Duration::seconds(3600) - Duration::milliseconds(500));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2487":{"id":"0:2487","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[494,46],"end":[494,57]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"round::SubsecRound","name":"SubsecRound","id":"0:2450:1876","glob":false}},"0:1452:2483":{"id":"0:1452:2483","crate_id":0,"name":"with_nanosecond","span":{"filename":"src/naive/datetime/mod.rs","begin":[1222,4],"end":[1224,5]},"visibility":"default","docs":"Makes a new `NaiveDateTime` with nanoseconds since the whole non-leap second changed.\n\nReturns `None` when the resulting `NaiveDateTime` would be invalid.\nAs with the [`NaiveDateTime::nanosecond`] method,\nthe input range can exceed 1,000,000,000 for leap seconds.\n\nSee also the [`NaiveTime::with_nanosecond`] method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Timelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 8).and_hms_milli(12, 34, 56, 789);\nassert_eq!(dt.with_nanosecond(333_333_333),\n           Some(NaiveDate::from_ymd(2015, 9, 8).and_hms_nano(12, 34, 56, 333_333_333)));\nassert_eq!(dt.with_nanosecond(1_333_333_333), // leap second\n           Some(NaiveDate::from_ymd(2015, 9, 8).and_hms_nano(12, 34, 56, 1_333_333_333)));\nassert_eq!(dt.with_nanosecond(2_000_000_000), None);\n```","links":{"`NaiveDateTime::nanosecond`":"0:2999:1886","`NaiveTime::with_nanosecond`":"0:3067:1887"},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["nano",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:460:2196":{"id":"0:460:2196","crate_id":0,"name":"with_day","span":{"filename":"src/datetime/mod.rs","begin":[749,4],"end":[751,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["day",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1862:265":{"id":"0:1862:265","crate_id":0,"name":"add","span":{"filename":"src/offset/fixed.rs","begin":[172,4],"end":[174,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1260:181":{"id":"0:1260:181","crate_id":0,"name":"Output","span":{"filename":"src/naive/date.rs","begin":[1737,4],"end":[1737,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:2680:1901":{"id":"0:2680:1901","crate_id":0,"name":"IsoWeek","span":{"filename":"src/format/mod.rs","begin":[122,4],"end":[122,11]},"visibility":"default","docs":"Week number in the ISO week date (FW=PW=2).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:3342:2033":{"id":"2:3342:2033","crate_id":2,"name":"Sub","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3344:181","2:3345:1355"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3480:715":{"id":"0:3480:715","crate_id":0,"name":"hash","span":{"filename":"src/weekday.rs","begin":[11,44],"end":[11,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10688:146","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9407:7640-0:2831:1898":{"id":"a:2:9407:7640-0:2831:1898","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9407:7640","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2831:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1264":{"id":"0:1264","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[1776,0],"end":[1783,1]},"visibility":{"restricted":{"parent":"0:1062:1890","path":"::naive::date"}},"docs":"Subtracts another `NaiveDate` from the current date.\nReturns a `Duration` of integral numbers.\n\nThis does not overflow or underflow at all,\nas all possible output fits in the range of `Duration`.\n\nThe implementation is a wrapper around\n[`NaiveDate::signed_duration_since`](#method.signed_duration_since).\n\n# Example\n\n```\nuse chrono::{Duration, NaiveDate};\n\nlet from_ymd = NaiveDate::from_ymd;\n\nassert_eq!(from_ymd(2014, 1, 1) - from_ymd(2014, 1, 1), Duration::zero());\nassert_eq!(from_ymd(2014, 1, 1) - from_ymd(2013, 12, 31), Duration::days(1));\nassert_eq!(from_ymd(2014, 1, 1) - from_ymd(2014, 1, 2), Duration::days(-1));\nassert_eq!(from_ymd(2014, 1, 1) - from_ymd(2013, 9, 23), Duration::days(100));\nassert_eq!(from_ymd(2014, 1, 1) - from_ymd(2013, 1, 1), Duration::days(365));\nassert_eq!(from_ymd(2014, 1, 1) - from_ymd(2010, 1, 1), Duration::days(365*4 + 1));\nassert_eq!(from_ymd(2014, 1, 1) - from_ymd(1614, 1, 1), Duration::days(365*400 + 97));\n```","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:3342:2033","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1265:181","0:1266:1355"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3212:1417":{"id":"2:3212:1417","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47753:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:202":{"id":"0:202","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[453,0],"end":[453,76]},"visibility":{"restricted":{"parent":"0:61:1890","path":"::date"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:2374:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Tz"},"trait":{"name":"TimeZone","id":"0:2374:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9407:7640-0:2792:2040":{"id":"a:2:9407:7640-0:2792:2040","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9407:7640","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2792:2040","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1439:2199":{"id":"0:1439:2199","crate_id":0,"name":"with_ordinal0","span":{"filename":"src/naive/datetime/mod.rs","begin":[1059,4],"end":[1061,5]},"visibility":"default","docs":"Makes a new `NaiveDateTime` with the day of year (starting from 0) changed.\n\nReturns `None` when the resulting `NaiveDateTime` would be invalid.\n\nSee also the [`NaiveDate::with_ordinal0`] method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Datelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 8).and_hms(12, 34, 56);\nassert_eq!(dt.with_ordinal0(59),\n           Some(NaiveDate::from_ymd(2015, 3, 1).and_hms(12, 34, 56)));\nassert_eq!(dt.with_ordinal0(365), None); // 2015 had only 365 days\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd(2016, 9, 8).and_hms(12, 34, 56);\nassert_eq!(dt.with_ordinal0(59),\n           Some(NaiveDate::from_ymd(2016, 2, 29).and_hms(12, 34, 56)));\nassert_eq!(dt.with_ordinal0(365),\n           Some(NaiveDate::from_ymd(2016, 12, 31).and_hms(12, 34, 56)));\n```","links":{"`NaiveDate::with_ordinal0`":"0:2941:1885"},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["ordinal0",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:787-0:3052:1901":{"id":"b:5:787-0:3052:1901","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IsoWeek","id":"0:3052:1901","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:7921","5:790:7922","5:791:7923"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3382":{"id":"0:3382","crate_id":0,"name":null,"span":{"filename":"src/offset/local/mod.rs","begin":[53,22],"end":[53,27]},"visibility":{"restricted":{"parent":"0:1883:816","path":"::offset::local"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10440:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Local","id":"0:3377:1873","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3383:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:5675:8512":{"id":"1:5675:8512","crate_id":1,"name":"OsStrExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5676:9908","1:5677:3212"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10589:8515","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:156:2140":{"id":"0:156:2140","crate_id":0,"name":"checked_add_signed","span":{"filename":"src/date.rs","begin":[243,4],"end":[246,5]},"visibility":"public","docs":"Adds given `Duration` to the current date.\n\nReturns `None` when it will result in overflow.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2620:604":{"id":"0:2620:604","crate_id":0,"name":"eq","span":{"filename":"src/datetime/mod.rs","begin":[52,33],"end":[52,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"SecondsFormat","id":"0:2597:1878","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:220-0:2927:2039":{"id":"a:2:3281:220-0:2927:2039","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2927:2039","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2869-0:2873:2237":{"id":"b:2:2869-0:2873:2237","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Parsed","id":"0:2873:2237","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:2030"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3281:220-0:3562:1911":{"id":"a:2:3281:220-0:3562:1911","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseMonthError","id":"0:3562:1911","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13599:60398":{"id":"2:13599:60398","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"1:15992:6928"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2523:2120":{"id":"0:2523:2120","crate_id":0,"name":"succ","span":{"filename":"src/month.rs","begin":[67,4],"end":[82,5]},"visibility":"public","docs":"The next month.\n\n`m`:        | `January`  | `February` | `...` | `December`\n----------- | ---------  | ---------- | --- | ---------\n`m.succ()`: | `February` | `March`    | `...` | `January`","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Month","id":"0:3492:1880","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2753":{"id":"0:2753","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[181,16],"end":[181,25]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2713:2238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3419":{"id":"0:3419","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[40,40],"end":[40,42]},"visibility":{"restricted":{"parent":"0:1758:957","path":"::offset"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3278:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3395:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:786:3023":{"id":"0:786:3023","crate_id":0,"name":"set_nanosecond","span":{"filename":"src/format/parsed.rs","begin":[265,4],"end":[267,5]},"visibility":"public","docs":"Tries to set the [`nanosecond`](#structfield.nanosecond) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["value",{"kind":"primitive","inner":"i64"}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:632:1899","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3388:408":{"id":"0:3388:408","crate_id":0,"name":"clone","span":{"filename":"src/offset/utc.rs","begin":[42,15],"end":[42,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:3384:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:631:782":{"id":"0:631:782","crate_id":0,"name":"kind","span":{"filename":"src/format/mod.rs","begin":[341,4],"end":[343,5]},"visibility":"public","docs":"The category of parse error","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2845:2736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10457:189":{"id":"2:10457:189","crate_id":2,"name":"Pointer","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10458:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2390:5787":{"id":"0:2390:5787","crate_id":0,"name":"offset_from_local_datetime","span":{"filename":"src/offset/mod.rs","begin":[441,4],"end":[441,93]},"visibility":"default","docs":"Creates the offset(s) for given local `NaiveDateTime` if possible.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["local",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3395:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:2374:1889","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:9407:7640-0:2936:1902":{"id":"a:2:9407:7640-0:2936:1902","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9407:7640","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveWeek","id":"0:2936:1902","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"23:840:7330":{"id":"23:840:7330","crate_id":23,"name":"Unsigned","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Num","id":"23:844:7268","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:1236:2189":{"id":"0:1236:2189","crate_id":0,"name":"day0","span":{"filename":"src/naive/date.rs","begin":[1383,4],"end":[1385,5]},"visibility":"default","docs":"Returns the day of month starting from 0.\n\nThe return value ranges from 0 to 30. (The last day of month differs by months.)\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(NaiveDate::from_ymd(2015, 9, 8).day0(), 7);\nassert_eq!(NaiveDate::from_ymd(-308, 3, 14).day0(), 13);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:2713:2238":{"id":"b:2:3213-0:2713:2238","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2713:2238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1867:181":{"id":"0:1867:181","crate_id":0,"name":"Output","span":{"filename":"src/offset/fixed.rs","begin":[187,4],"end":[187,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"b:2:2872-0:3384:1884":{"id":"b:2:2872-0:3384:1884","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:7071","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:3384:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:5915"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:5763:8535":{"id":"1:5763:8535","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5764:10666","1:5765:62077","1:5766:11103","1:5767:62078","1:5768:8730","1:5769:8731","1:5770:62079","1:5771:1304","1:5772:62080","1:5773:62081","1:5774:5920","1:5775:62082","1:5776:62083","1:5777:62084","1:5778:62085","1:5779:62086"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3208-0:2941:1885":{"id":"b:2:3208-0:2941:1885","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:215":{"id":"0:215","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[470,0],"end":[474,1]},"visibility":{"restricted":{"parent":"0:61:1890","path":"::date"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:2374:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["max","min","clamp"],"trait":{"name":"Ord","id":"2:2957:177","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:217:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3281:220-0:2621:1877":{"id":"a:2:3281:220-0:2621:1877","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Tz"},"trait":{"name":"TimeZone","id":"0:2374:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:503":{"id":"0:503","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[853,0],"end":[860,1]},"visibility":{"restricted":{"parent":"0:256:1893","path":"::datetime"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:2374:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Add","id":"2:3337:2031","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Duration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:505:181","0:506:265"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3387":{"id":"0:3387","crate_id":0,"name":null,"span":{"filename":"src/offset/utc.rs","begin":[42,15],"end":[42,20]},"visibility":{"restricted":{"parent":"0:2297:5700","path":"::offset::utc"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:3384:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3388:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:10451:7224":{"id":"2:10451:7224","crate_id":2,"name":"Binary","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10452:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1175:1892":{"id":"0:1175:1892","crate_id":0,"name":"MIN_DATE","span":{"filename":"src/naive/date.rs","begin":[174,0],"end":[174,47]},"visibility":"public","docs":"The minimum possible `NaiveDate` (January 1, 262145 BCE).","links":{},"attrs":["#[deprecated(since = \"0.4.20\", note = \"Use NaiveDate::MIN instead\")]"],"deprecation":{"since":"0.4.20","note":"Use NaiveDate::MIN instead"},"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"NaiveDate::MIN","value":null,"is_literal":false}},"0:1971:5858":{"id":"0:1971:5858","crate_id":0,"name":"tz_info","span":{"filename":"src/offset/local/tz_info/mod.rs","begin":[1,0],"end":[131,60]},"visibility":{"restricted":{"parent":"0:1883:816","path":"::offset::local"}},"docs":null,"links":{},"attrs":["#[cfg(unix)]","#![deny(missing_docs)]","#![allow(dead_code)]","#![warn(unreachable_pub)]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":[],"is_stripped":true}},"1:2572:127":{"id":"1:2572:127","crate_id":1,"name":"Error","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2573:5932","1:2575:2766","1:2576:8075","1:2577:8076"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Debug","id":"2:10440:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Display","id":"2:10447:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:163:2068":{"id":"0:163:2068","crate_id":0,"name":"MIN_UTC","span":{"filename":"src/date.rs","begin":[297,4],"end":[297,78]},"visibility":"public","docs":"The minimum possible `Date`.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:3384:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"default":"_"}},"0:430:2441":{"id":"0:430:2441","crate_id":0,"name":"to_rfc3339_opts","span":{"filename":"src/datetime/mod.rs","begin":[585,4],"end":[625,5]},"visibility":"public","docs":"Return an RFC 3339 and ISO 8601 date and time string with subseconds\nformatted as per a `SecondsFormat`.\n\nIf passed `use_z` true and the timezone is UTC (offset 0), use 'Z', as\nper [`Fixed::TimezoneOffsetColonZ`] If passed `use_z` false, use\n[`Fixed::TimezoneOffsetColon`]\n\n# Examples\n\n```rust\n# use chrono::{DateTime, FixedOffset, SecondsFormat, TimeZone, Utc};\nlet dt = Utc.ymd(2018, 1, 26).and_hms_micro(18, 30, 9, 453_829);\nassert_eq!(dt.to_rfc3339_opts(SecondsFormat::Millis, false),\n           \"2018-01-26T18:30:09.453+00:00\");\nassert_eq!(dt.to_rfc3339_opts(SecondsFormat::Millis, true),\n           \"2018-01-26T18:30:09.453Z\");\nassert_eq!(dt.to_rfc3339_opts(SecondsFormat::Secs, true),\n           \"2018-01-26T18:30:09Z\");\n\nlet pst = FixedOffset::east(8 * 60 * 60);\nlet dt = pst.ymd(2018, 1, 26).and_hms_micro(10, 30, 9, 453_829);\nassert_eq!(dt.to_rfc3339_opts(SecondsFormat::Secs, true),\n           \"2018-01-26T10:30:09+08:00\");\n```","links":{"`Fixed::TimezoneOffsetColonZ`":"0:2713:2238","`Fixed::TimezoneOffsetColon`":"0:2713:2238"},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["secform",{"kind":"resolved_path","inner":{"name":"SecondsFormat","id":"0:2597:1878","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["use_z",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2339:1888":{"id":"0:2339:1888","crate_id":0,"name":"Offset","span":{"filename":"src/offset/utc.rs","begin":[79,4],"end":[79,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:3384:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"b:5:6420-0:3086:1883":{"id":"b:5:6420-0:3086:1883","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10447:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:6418:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:6422:1397"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3490":{"id":"0:3490","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[189,27],"end":[189,29]},"visibility":{"restricted":{"parent":"0:2490:1907","path":"::weekday"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:3482:1908","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3056:604":{"id":"0:3056:604","crate_id":0,"name":"eq","span":{"filename":"src/naive/isoweek.rs","begin":[19,9],"end":[19,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"IsoWeek","id":"0:3052:1901","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3269:211-0:3492:1880":{"id":"a:2:3269:211-0:3492:1880","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:3492:1880","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2869-0:2936:1902":{"id":"b:2:2869-0:2936:1902","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveWeek","id":"0:2936:1902","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:2030"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13585:3212":{"id":"2:13585:3212","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:12673:5882"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"str_as_bytes\", since = \"1.39.0\")]","#[must_use]","#[allow(unused_attributes)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2817:408":{"id":"0:2817:408","crate_id":0,"name":"clone","span":{"filename":"src/format/mod.rs","begin":[278,9],"end":[278,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2792:2040","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3414":{"id":"0:3414","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[40,27],"end":[40,32]},"visibility":{"restricted":{"parent":"0:1758:957","path":"::offset"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10440:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10440:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3395:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:3416:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:5669:8514":{"id":"1:5669:8514","crate_id":1,"name":"OsStringExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5670:60058","1:5671:7851"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10589:8515","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:2869-0:3562:1911":{"id":"b:2:2869-0:3562:1911","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseMonthError","id":"0:3562:1911","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:2030"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:183:2189":{"id":"0:183:2189","crate_id":0,"name":"day0","span":{"filename":"src/date.rs","begin":[396,4],"end":[398,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2718:2671":{"id":"0:2718:2671","crate_id":0,"name":"ShortWeekdayName","span":{"filename":"src/format/mod.rs","begin":[194,4],"end":[194,20]},"visibility":"default","docs":"Abbreviated day of the week names.\n\nPrints a three-letter-long name in the title case, reads the same name in any case.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:130":{"id":"0:130","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[72,0],"end":[300,1]},"visibility":{"restricted":{"parent":"0:61:1890","path":"::date"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:2374:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:132:2074","0:133:2078","0:134:2086","0:135:2090","0:137:2097","0:138:2099","0:140:2105","0:141:2107","0:143:2113","0:144:2115","0:146:2120","0:147:2121","0:149:2126","0:150:2127","0:152:957","0:153:2081","0:154:2134","0:156:2140","0:157:2142","0:158:2147","0:160:2149","0:161:2080","0:162:2155","0:163:2068","0:164:2071"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3198-0:3562:1911":{"id":"b:2:3198-0:3562:1911","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseMonthError","id":"0:3562:1911","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:2536"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2694:2458":{"id":"0:2694:2458","crate_id":0,"name":"Second","span":{"filename":"src/format/mod.rs","begin":[136,4],"end":[136,10]},"visibility":"default","docs":"The number of seconds since the last whole minute (FW=PW=2).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"b:2:2869-0:2831:1898":{"id":"b:2:2869-0:2831:1898","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2831:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:2030"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3198-0:2908:2041":{"id":"b:2:3198-0:2908:2041","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2908:2041","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3201:2536"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3202-0:3377:1873":{"id":"b:2:3202-0:3377:1873","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Local","id":"0:3377:1873","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3269:211-0:3384:1884":{"id":"a:2:3269:211-0:3384:1884","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:3384:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:250":{"id":"0:250","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[468,21],"end":[468,29]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"date::MAX_DATE","name":"MAX_DATE","id":"0:129:1891","glob":false}},"a:2:9408:7639-0:3428:1906":{"id":"a:2:9408:7639-0:3428:1906","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9408:7639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RoundingError","id":"0:3428:1906","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:536:681":{"id":"0:536:681","crate_id":0,"name":"from","span":{"filename":"src/datetime/mod.rs","begin":[956,4],"end":[971,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"resolved_path","inner":{"name":"SystemTime","id":"1:12281:2234","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:3384:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:162:2155":{"id":"0:162:2155","crate_id":0,"name":"years_since","span":{"filename":"src/date.rs","begin":[284,4],"end":[294,5]},"visibility":"public","docs":"Returns the number of whole years from the given `base` until `self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["base",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u32"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3535":{"id":"0:3535","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[30,24],"end":[30,28]},"visibility":{"restricted":{"parent":"0:2518:1909","path":"::month"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:3492:1880","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:396":{"id":"0:396","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[384,0],"end":[388,1]},"visibility":{"restricted":{"parent":"0:256:1893","path":"::datetime"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3247:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:3384:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:397:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:200:2199":{"id":"0:200:2199","crate_id":0,"name":"with_ordinal0","span":{"filename":"src/date.rs","begin":[447,4],"end":[449,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["ordinal0",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2293:2352":{"id":"0:2293:2352","crate_id":0,"name":"from_utc_datetime","span":{"filename":"src/offset/local/mod.rs","begin":[165,4],"end":[169,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(all(target_arch = \"wasm32\", feature = \"wasmbind\",\nnot(any(target_os = \"emscripten\", target_os = \"wasi\")))))]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["utc",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Local","id":"0:3377:1873","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:220-0:3543:1910":{"id":"a:2:3281:220-0:3543:1910","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Months","id":"0:3543:1910","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"23:358:7299":{"id":"23:358:7299","crate_id":23,"name":"NumCast","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:359:681"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ToPrimitive","id":"23:307:2926","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:3413:604":{"id":"0:3413:604","crate_id":0,"name":"eq","span":{"filename":"src/offset/mod.rs","begin":[40,16],"end":[40,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3395:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4723:2831":{"id":"1:4723:2831","crate_id":1,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4724:2203","1:4725:62891","1:4727:62892","1:4728:9443","1:4729:62893","1:4730:62894","1:4731:6720","1:4740:7896"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1463:1356":{"id":"0:1463:1356","crate_id":0,"name":"sub_assign","span":{"filename":"src/naive/datetime/mod.rs","begin":[1351,4],"end":[1353,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:787-0:3395:1903":{"id":"b:5:787-0:3395:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3395:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["5:789:7921","5:790:7922","5:791:7923"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:632:1899":{"id":"0:632:1899","crate_id":0,"name":"ParseResult","span":{"filename":"src/format/mod.rs","begin":[383,0],"end":[383,48]},"visibility":"public","docs":"Same as `Result<T, ParseError>`.","links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47753:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2831:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}},"0:228:266":{"id":"0:228:266","crate_id":0,"name":"add_assign","span":{"filename":"src/date.rs","begin":[493,4],"end":[495,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3352:7085":{"id":"2:3352:7085","crate_id":2,"name":"Div","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3354:181","2:3355:558"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2736:2466":{"id":"0:2736:2466","crate_id":0,"name":"TimezoneOffsetColon","span":{"filename":"src/format/mod.rs","begin":[226,4],"end":[226,23]},"visibility":"default","docs":"Offset from the local time to UTC (`+09:00` or `-04:00` or `+00:00`).\n\nIn the parser, the colon can be omitted and/or surrounded with any amount of whitespace.\nThe offset is limited from `-24:00` to `+24:00`,\nwhich is the same as [`FixedOffset`](../offset/struct.FixedOffset.html)'s range.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2582:4712":{"id":"0:2582:4712","crate_id":0,"name":"num_seconds_from_midnight","span":{"filename":"src/traits.rs","begin":[175,4],"end":[177,5]},"visibility":"default","docs":"Returns the number of non-leap seconds past the last midnight.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3208-0:2831:1898":{"id":"b:2:3208-0:2831:1898","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2831:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9408:7639-0:3377:1873":{"id":"a:2:9408:7639-0:3377:1873","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9408:7639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Local","id":"0:3377:1873","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2343:5791":{"id":"0:2343:5791","crate_id":0,"name":"offset_from_utc_date","span":{"filename":"src/offset/utc.rs","begin":[92,4],"end":[94,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["_utc",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:3384:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1176:1891":{"id":"0:1176:1891","crate_id":0,"name":"MAX_DATE","span":{"filename":"src/naive/date.rs","begin":[177,0],"end":[177,47]},"visibility":"public","docs":"The maximum possible `NaiveDate` (December 31, 262143 CE).","links":{},"attrs":["#[deprecated(since = \"0.4.20\", note = \"Use NaiveDate::MAX instead\")]"],"deprecation":{"since":"0.4.20","note":"Use NaiveDate::MAX instead"},"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"NaiveDate::MAX","value":null,"is_literal":false}},"a:2:9408:7639-0:2845:2736":{"id":"a:2:9408:7639-0:2845:2736","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9408:7639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2845:2736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3548":{"id":"0:3548","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[193,16],"end":[193,20]},"visibility":{"restricted":{"parent":"0:2518:1909","path":"::month"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Months","id":"0:3543:1910","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13941:150":{"id":"2:13941:150","crate_id":2,"name":"IntoFuture","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13942:181","2:13943:150","2:13944:767"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2872-0:3395:1903":{"id":"b:2:2872-0:3395:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:7071","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3395:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2874:5915"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:608":{"id":"0:608","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[59,0],"end":[59,23]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"parsed::Parsed","name":"Parsed","id":"0:2873:2237","glob":false}},"0:3477":{"id":"0:3477","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[11,37],"end":[11,42]},"visibility":{"restricted":{"parent":"0:2490:1907","path":"::weekday"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10440:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:3446:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3478:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:486":{"id":"0:486","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[812,0],"end":[816,1]},"visibility":{"restricted":{"parent":"0:256:1893","path":"::datetime"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:2374:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"Tz2","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:2374:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz2"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:489:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:5:787-0:3377:1873":{"id":"b:5:787-0:3377:1873","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Local","id":"0:3377:1873","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:7921","5:790:7922","5:791:7923"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:539":{"id":"0:539","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[982,0],"end":[995,1]},"visibility":{"restricted":{"parent":"0:256:1893","path":"::datetime"}},"docs":null,"links":{},"attrs":["#[cfg(any(feature = \"std\", test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:2374:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SystemTime","id":"1:12281:2234","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:541:681"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3310:7473-0:3086:1883":{"id":"a:2:3310:7473-0:3086:1883","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:7473","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1475":{"id":"0:1475","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1526,0],"end":[1530,1]},"visibility":{"restricted":{"parent":"0:1291:1893","path":"::naive::datetime"}},"docs":"The default value for a NaiveDateTime is one with epoch 0\nthat is, 1st of January 1970 at 00:00:00.\n\n# Example\n\n```rust\nuse chrono::NaiveDateTime;\n\nlet default_date = NaiveDateTime::default();\nassert_eq!(default_date, NaiveDateTime::from_timestamp(0, 0));\n```","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3247:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1476:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2891:2479":{"id":"0:2891:2479","crate_id":0,"name":"nanosecond","span":{"filename":"src/format/parsed.rs","begin":[98,4],"end":[98,31]},"visibility":"public","docs":"The number of nanoseconds since the whole second (0--999,999,999).","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u32"}}],"bindings":[]}}}}},"b:2:3202-0:3067:1887":{"id":"b:2:3202-0:3067:1887","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2904:660":{"id":"0:2904:660","crate_id":0,"name":"fmt","span":{"filename":"src/format/parsed.rs","begin":[25,31],"end":[25,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10400:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10389:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13650:64780":{"id":"2:13650:64780","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13212:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13227:7161","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3202-0:3543:1910":{"id":"b:2:3202-0:3543:1910","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Months","id":"0:3543:1910","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2896:408":{"id":"0:2896:408","crate_id":0,"name":"clone","span":{"filename":"src/format/parsed.rs","begin":[25,9],"end":[25,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Parsed","id":"0:2873:2237","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3175:135":{"id":"2:3175:135","crate_id":2,"name":"From","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3177:681"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8616:4360":{"id":"2:8616:4360","crate_id":2,"name":"ExactSizeIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8617:793","2:8618:3245"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8748:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:2869-0:2999:1886":{"id":"b:2:2869-0:2999:1886","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:2030"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2890:2478":{"id":"0:2890:2478","crate_id":0,"name":"second","span":{"filename":"src/format/parsed.rs","begin":[95,4],"end":[95,27]},"visibility":"public","docs":"Second number (0--60, accounting for leap seconds).","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u32"}}],"bindings":[]}}}}},"23:859:7283":{"id":"23:859:7283","crate_id":23,"name":"RefNum","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"Base","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"NumOps","id":"23:847:7281","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Base"}},{"type":{"kind":"generic","inner":"Base"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"NumOps","id":"23:847:7281","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":false,"type":{"kind":"generic","inner":"Base"}}}},{"type":{"kind":"generic","inner":"Base"}}],"bindings":[]}}},"generic_params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"implementations":[]}},"a:2:3269:211-0:2831:1898":{"id":"a:2:3269:211-0:2831:1898","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2831:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3310:7473-0:3446:1882":{"id":"a:2:3310:7473-0:3446:1882","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:7473","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:3446:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1849:5787":{"id":"0:1849:5787","crate_id":0,"name":"offset_from_local_datetime","span":{"filename":"src/offset/fixed.rs","begin":[115,4],"end":[117,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["_local",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3395:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3097":{"id":"0:3097","crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[25,30],"end":[25,34]},"visibility":{"restricted":{"parent":"0:1795:5699","path":"::offset::fixed"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:22963:8994":{"id":"2:22963:8994","crate_id":2,"name":"SimdInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:22964:8822","2:22965:63420","2:22966:1227","2:22967:1228","2:22968:4446","2:22969:6075","2:22970:63455","2:22971:6131","2:22972:63456","2:22973:7329","2:22974:63421","2:22975:63422","2:22976:63423","2:22977:63424","2:22978:63425","2:22979:63426","2:22980:63427"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:23012:8515","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"23:599:7312":{"id":"23:599:7312","crate_id":23,"name":"Euclid","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:600:6891","23:601:5991"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Div","id":"2:3352:7085","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Rem","id":"2:3358:7088","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:1257:181":{"id":"0:1257:181","crate_id":0,"name":"Output","span":{"filename":"src/naive/date.rs","begin":[1689,4],"end":[1689,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:3487":{"id":"0:3487","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[189,16],"end":[189,25]},"visibility":{"restricted":{"parent":"0:2490:1907","path":"::weekday"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:3482:1908","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:3482:1908","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3488:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2515":{"id":"0:2515","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[497,37],"end":[497,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"weekday::Weekday","name":"Weekday","id":"0:3446:1882","glob":false}},"0:1220:2167":{"id":"0:1220:2167","crate_id":0,"name":"format_with_items","span":{"filename":"src/naive/date.rs","begin":[1159,4],"end":[1165,5]},"visibility":"public","docs":"Formats the date with the specified formatting items.\nOtherwise it is the same as the ordinary `format` method.\n\nThe `Iterator` of items should be `Clone`able,\nsince the resulting `DelayedFormat` value may be formatted multiple times.\n\n# Example\n\n```\nuse chrono::NaiveDate;\nuse chrono::format::strftime::StrftimeItems;\n\nlet fmt = StrftimeItems::new(\"%Y-%m-%d\");\nlet d = NaiveDate::from_ymd(2015, 9, 5);\nassert_eq!(d.format_with_items(fmt.clone()).to_string(), \"2015-09-05\");\nassert_eq!(d.format(\"%Y-%m-%d\").to_string(),             \"2015-09-05\");\n```\n\nThe resulting `DelayedFormat` can be formatted directly via the `Display` trait.\n\n```\n# use chrono::NaiveDate;\n# use chrono::format::strftime::StrftimeItems;\n# let fmt = StrftimeItems::new(\"%Y-%m-%d\").clone();\n# let d = NaiveDate::from_ymd(2015, 9, 5);\nassert_eq!(format!(\"{}\", d.format_with_items(fmt)), \"2015-09-05\");\n```","links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["items",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2927:2039","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8748:157","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"B"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2792:2040","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3062":{"id":"0:3062","crate_id":0,"name":null,"span":{"filename":"src/naive/isoweek.rs","begin":[19,36],"end":[19,39]},"visibility":{"restricted":{"parent":"0:1565:2959","path":"::naive::isoweek"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["max","min","clamp"],"trait":{"name":"Ord","id":"2:2957:177","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IsoWeek","id":"0:3052:1901","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3063:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2359:841":{"id":"0:2359:841","crate_id":0,"name":"map","span":{"filename":"src/offset/mod.rs","begin":[78,4],"end":[84,5]},"visibility":"public","docs":"Maps a `LocalResult<T>` into `LocalResult<U>` with given function.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3395:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3522:131","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"T"}],"output":{"kind":"generic","inner":"U"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:232:1355":{"id":"0:232:1355","crate_id":0,"name":"sub","span":{"filename":"src/date.rs","begin":[502,4],"end":[504,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3083":{"id":"0:3083","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[190,47],"end":[190,51]},"visibility":{"restricted":{"parent":"0:1586:1556","path":"::naive::time"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:4002-0:2597:1878":{"id":"b:2:4002-0:2597:1878","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SecondsFormat","id":"0:2597:1878","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1702:1355":{"id":"0:1702:1355","crate_id":0,"name":"sub","span":{"filename":"src/naive/time/mod.rs","begin":[1191,4],"end":[1193,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3648:7108":{"id":"2:3648:7108","crate_id":2,"name":"RangeBounds","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3650:63517","2:3651:63518","2:3652:2847"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:466:2199":{"id":"0:466:2199","crate_id":0,"name":"with_ordinal0","span":{"filename":"src/datetime/mod.rs","begin":[764,4],"end":[766,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["ordinal0",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3465:2813":{"id":"0:3465:2813","crate_id":0,"name":"Sun","span":{"filename":"src/weekday.rs","begin":[28,4],"end":[28,11]},"visibility":"default","docs":"Sunday.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:13694:2236":{"id":"2:13694:2236","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:13141:2501","`FromStr`":"2:13141:2501"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47753:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"name":"FromStr","id":"2:13141:2501","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:13141:2501","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3310:7473-0:2831:1898":{"id":"a:2:3310:7473-0:2831:1898","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:7473","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2831:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:5:787-0:2713:2238":{"id":"b:5:787-0:2713:2238","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2713:2238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:7921","5:790:7922","5:791:7923"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:48":{"id":"0:48","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[461,31],"end":[461,44]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::NaiveDateTime","name":"NaiveDateTime","id":"0:2999:1886","glob":false}},"0:1476:59":{"id":"0:1476:59","crate_id":0,"name":"default","span":{"filename":"src/naive/datetime/mod.rs","begin":[1527,4],"end":[1529,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1471":{"id":"0:1471","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1484,0],"end":[1513,1]},"visibility":{"restricted":{"parent":"0:1291:1893","path":"::naive::datetime"}},"docs":"Parsing a `str` into a `NaiveDateTime` uses the same format,\n[`%Y-%m-%dT%H:%M:%S%.f`](crate::format::strftime), as in `Debug`.\n\n# Example\n\n```\nuse chrono::{NaiveDateTime, NaiveDate};\n\nlet dt = NaiveDate::from_ymd(2015, 9, 18).and_hms(23, 56, 4);\nassert_eq!(\"2015-09-18T23:56:04\".parse::<NaiveDateTime>(), Ok(dt));\n\nlet dt = NaiveDate::from_ymd(12345, 6, 7).and_hms_milli(7, 59, 59, 1_500); // leap second\nassert_eq!(\"+12345-6-7T7:59:60.5\".parse::<NaiveDateTime>(), Ok(dt));\n\nassert!(\"foo\".parse::<NaiveDateTime>().is_err());\n```","links":{"crate::format::strftime":"0:995:2597"},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:13141:2501","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1472:126","0:1473:2502"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3405:1543":{"id":"0:3405:1543","crate_id":0,"name":"1","span":{"filename":"src/offset/mod.rs","begin":[49,25],"end":[49,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"T"}},"0:1708:126":{"id":"0:1708:126","crate_id":0,"name":"Err","span":{"filename":"src/naive/time/mod.rs","begin":[1300,4],"end":[1300,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2831:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:1880":{"id":"0:1880","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[29,0],"end":[29,33]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::fixed::FixedOffset","name":"FixedOffset","id":"0:3086:1883","glob":false}},"0:1464":{"id":"0:1464","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1395,0],"end":[1402,1]},"visibility":{"restricted":{"parent":"0:1291:1893","path":"::naive::datetime"}},"docs":"Subtracts another `NaiveDateTime` from the current date and time.\nThis does not overflow or underflow at all.\n\nAs a part of Chrono's [leap second handling](./struct.NaiveTime.html#leap-second-handling),\nthe subtraction assumes that **there is no leap second ever**,\nexcept when any of the `NaiveDateTime`s themselves represents a leap second\nin which case the assumption becomes that\n**there are exactly one (or two) leap second(s) ever**.\n\nThe implementation is a wrapper around [`NaiveDateTime::signed_duration_since`].\n\n# Example\n\n```\nuse chrono::{Duration, NaiveDate};\n\nlet from_ymd = NaiveDate::from_ymd;\n\nlet d = from_ymd(2016, 7, 8);\nassert_eq!(d.and_hms(3, 5, 7) - d.and_hms(2, 4, 6), Duration::seconds(3600 + 60 + 1));\n\n// July 8 is 190th day in the year 2016\nlet d0 = from_ymd(2016, 1, 1);\nassert_eq!(d.and_hms_milli(0, 7, 6, 500) - d0.and_hms(0, 0, 0),\n           Duration::seconds(189 * 86_400 + 7 * 60 + 6) + Duration::milliseconds(500));\n```\n\nLeap seconds are handled, but the subtraction assumes that no other leap\nseconds happened.\n\n```\n# use chrono::{Duration, NaiveDate};\n# let from_ymd = NaiveDate::from_ymd;\nlet leap = from_ymd(2015, 6, 30).and_hms_milli(23, 59, 59, 1_500);\nassert_eq!(leap - from_ymd(2015, 6, 30).and_hms(23, 0, 0),\n           Duration::seconds(3600) + Duration::milliseconds(500));\nassert_eq!(from_ymd(2015, 7, 1).and_hms(1, 0, 0) - leap,\n           Duration::seconds(3600) - Duration::milliseconds(500));\n```","links":{"`NaiveDateTime::signed_duration_since`":"0:2999:1886"},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:3342:2033","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1465:181","0:1466:1355"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2763":{"id":"0:2763","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[253,9],"end":[253,14]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10440:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2761:2702","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2764:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9408:7639-0:2641:2445":{"id":"a:2:9408:7639-0:2641:2445","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9408:7639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2641:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3281:220-0:614:2656":{"id":"a:2:3281:220-0:614:2656","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:614:2656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1181:3056":{"id":"0:1181:3056","crate_id":0,"name":"from_ymd_opt","span":{"filename":"src/naive/date.rs","begin":[266,4],"end":[269,5]},"visibility":"public","docs":"Makes a new `NaiveDate` from the [calendar date](#calendar-date)\n(year, month and day).\n\nReturns `None` on the out-of-range date, invalid month and/or day.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet from_ymd_opt = NaiveDate::from_ymd_opt;\n\nassert!(from_ymd_opt(2015, 3, 14).is_some());\nassert!(from_ymd_opt(2015, 0, 14).is_none());\nassert!(from_ymd_opt(2015, 2, 29).is_none());\nassert!(from_ymd_opt(-4, 2, 29).is_some()); // 5 BCE is a leap year\nassert!(from_ymd_opt(400000, 1, 1).is_none());\nassert!(from_ymd_opt(-400000, 1, 1).is_none());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["year",{"kind":"primitive","inner":"i32"}],["month",{"kind":"primitive","inner":"u32"}],["day",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:128:1892":{"id":"0:128:1892","crate_id":0,"name":"MIN_DATE","span":{"filename":"src/date.rs","begin":[66,0],"end":[66,53]},"visibility":"public","docs":"The minimum possible `Date`.","links":{},"attrs":["#[allow(deprecated)]","#[deprecated(since = \"0.4.20\", note = \"Use Date::MIN_UTC instead\")]"],"deprecation":{"since":"0.4.20","note":"Use Date::MIN_UTC instead"},"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:3384:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"expr":"Date<Utc>::MIN_UTC","value":null,"is_literal":false}},"0:408":{"id":"0:408","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[438,0],"end":[446,1]},"visibility":{"restricted":{"parent":"0:256:1893","path":"::datetime"}},"docs":"Convert a `DateTime<FixedOffset>` instance into a `DateTime<Local>` instance.","links":{},"attrs":["#[cfg(feature = \"clock\")]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Local","id":"0:3377:1873","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:409:681"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13602:8877":{"id":"2:13602:8877","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:15986:6923"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CharIndices","id":"2:49567:7169","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2545:1912":{"id":"0:2545:1912","crate_id":0,"name":"traits","span":{"filename":"src/traits.rs","begin":[1,0],"end":[241,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:2553:1879","0:2572:1881"],"is_stripped":true}},"0:2864":{"id":"0:2864","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[347,16],"end":[347,21]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2845:2736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2865:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2844":{"id":"0:2844","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[336,38],"end":[336,42]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2831:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1420:2188":{"id":"0:1420:2188","crate_id":0,"name":"month0","span":{"filename":"src/naive/datetime/mod.rs","begin":[805,4],"end":[807,5]},"visibility":"default","docs":"Returns the month number starting from 0.\n\nThe return value ranges from 0 to 11.\n\nSee also the [`NaiveDate::month0`](./struct.NaiveDate.html#method.month0) method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Datelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 25).and_hms(12, 34, 56);\nassert_eq!(dt.month0(), 8);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9408:7639-0:3395:1903":{"id":"a:2:9408:7639-0:3395:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9408:7639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9408:7639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3395:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3310:7473-0:3052:1901":{"id":"a:2:3310:7473-0:3052:1901","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:7473","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IsoWeek","id":"0:3052:1901","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:238:181":{"id":"0:238:181","crate_id":0,"name":"Output","span":{"filename":"src/date.rs","begin":[515,4],"end":[515,30]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Duration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:1720":{"id":"0:1720","crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[14,43],"end":[14,51]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"self::date::MAX_DATE","name":"MAX_DATE","id":"0:1176:1891","glob":false}},"0:135:2090":{"id":"0:135:2090","crate_id":0,"name":"and_hms_opt","span":{"filename":"src/date.rs","begin":[106,4],"end":[108,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date, hour, minute and second.\nThe offset in the current date is preserved.\n\nReturns `None` on invalid hour, minute and/or second.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["hour",{"kind":"primitive","inner":"u32"}],["min",{"kind":"primitive","inner":"u32"}],["sec",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:220-0:2873:2237":{"id":"a:2:3281:220-0:2873:2237","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Parsed","id":"0:2873:2237","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3474":{"id":"0:3474","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[11,24],"end":[11,28]},"visibility":{"restricted":{"parent":"0:2490:1907","path":"::weekday"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:3446:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9408:7639-0:2908:2041":{"id":"a:2:9408:7639-0:2908:2041","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9408:7639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2908:2041","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2590:1872":{"id":"0:2590:1872","crate_id":0,"name":"Date","span":{"filename":"src/date.rs","begin":[58,0],"end":[61,1]},"visibility":"public","docs":"ISO 8601 calendar date with time zone.\n\nYou almost certainly want to be using a [`NaiveDate`] instead of this type.\n\nThis type primarily exists to aid in the construction of DateTimes that\nhave a timezone by way of the [`TimeZone`] datelike constructors (e.g.\n[`TimeZone::ymd`]).\n\nThis type should be considered ambiguous at best, due to the inherent lack\nof precision required for the time zone resolution.\n\nThere are some guarantees on the usage of `Date<Tz>`:\n\n- If properly constructed via [`TimeZone::ymd`] and others without an error,\n  the corresponding local date should exist for at least a moment.\n  (It may still have a gap from the offset changes.)\n\n- The `TimeZone` is free to assign *any* [`Offset`](crate::offset::Offset) to the\n  local date, as long as that offset did occur in given day.\n\n  For example, if `2015-03-08T01:59-08:00` is followed by `2015-03-08T03:00-07:00`,\n  it may produce either `2015-03-08-08:00` or `2015-03-08-07:00`\n  but *not* `2015-03-08+00:00` and others.\n\n- Once constructed as a full `DateTime`, [`DateTime::date`] and other associated\n  methods should return those for the original `Date`. For example, if `dt =\n  tz.ymd(y,m,d).hms(h,n,s)` were valid, `dt.date() == tz.ymd(y,m,d)`.\n\n- The date is timezone-agnostic up to one day (i.e. practically always),\n  so the local date and UTC date should be equal for most cases\n  even though the raw calculation between `NaiveDate` and `Duration` may not.","links":{"`NaiveDate`":"0:2941:1885","`TimeZone::ymd`":"0:2374:1889","crate::offset::Offset":"0:2372:1888","`DateTime::date`":"0:2621:1877","`TimeZone`":"0:2374:1889"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:2374:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:130","0:169","a:2:3310:7473-0:2590:1872","a:2:9408:7639-0:2590:1872","a:2:9407:7640-0:2590:1872","a:2:3281:220-0:2590:1872","b:2:2869-0:2590:1872","b:2:4002-0:2590:1872","b:2:3198-0:2590:1872","b:2:2872-0:2590:1872","b:2:3208-0:2590:1872","b:2:3202-0:2590:1872","b:2:3213-0:2590:1872","b:5:787-0:2590:1872","b:5:6420-0:2590:1872","0:2594","0:177","0:202","0:204","0:206","0:210","0:212","0:215","0:218","0:222","0:226","0:229","0:233","0:236","0:240","0:243"]}},"2:3279:106":{"id":"2:3279:106","crate_id":2,"name":"Copy","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:2872-0:3086:1883":{"id":"b:2:2872-0:3086:1883","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:7071","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:5915"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2371:1484":{"id":"0:2371:1484","crate_id":0,"name":"unwrap","span":{"filename":"src/offset/mod.rs","begin":[182,4],"end":[190,5]},"visibility":"public","docs":"Returns the single unique conversion result, or panics accordingly.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9407:7640-0:3377:1873":{"id":"a:2:9407:7640-0:3377:1873","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9407:7640","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Local","id":"0:3377:1873","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1654:5390":{"id":"0:1654:5390","crate_id":0,"name":"from_hms_milli","span":{"filename":"src/naive/time/mod.rs","begin":[265,4],"end":[267,5]},"visibility":"public","docs":"Makes a new `NaiveTime` from hour, minute, second and millisecond.\n\nThe millisecond part can exceed 1,000\nin order to represent the [leap second](#leap-second-handling).\n\nPanics on invalid hour, minute, second and/or millisecond.\n\n# Example\n\n```\nuse chrono::{NaiveTime, Timelike};\n\nlet t = NaiveTime::from_hms_milli(23, 56, 4, 12);\nassert_eq!(t.hour(), 23);\nassert_eq!(t.minute(), 56);\nassert_eq!(t.second(), 4);\nassert_eq!(t.nanosecond(), 12_000_000);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["hour",{"kind":"primitive","inner":"u32"}],["min",{"kind":"primitive","inner":"u32"}],["sec",{"kind":"primitive","inner":"u32"}],["milli",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:473:2479":{"id":"0:473:2479","crate_id":0,"name":"nanosecond","span":{"filename":"src/datetime/mod.rs","begin":[783,4],"end":[785,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3081":{"id":"0:3081","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[190,42],"end":[190,45]},"visibility":{"restricted":{"parent":"0:1586:1556","path":"::naive::time"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["max","min","clamp"],"trait":{"name":"Ord","id":"2:2957:177","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3082:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1287:2502":{"id":"0:1287:2502","crate_id":0,"name":"from_str","span":{"filename":"src/naive/date.rs","begin":[1946,4],"end":[1961,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:632:1899","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2841":{"id":"0:2841","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[336,34],"end":[336,36]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3278:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2831:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3439":{"id":"0:3439","crate_id":0,"name":null,"span":{"filename":"src/round.rs","begin":[241,23],"end":[241,32]},"visibility":{"restricted":{"parent":"0:2418:1904","path":"::round"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RoundingError","id":"0:3428:1906","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:157:2142":{"id":"0:157:2142","crate_id":0,"name":"checked_sub_signed","span":{"filename":"src/date.rs","begin":[252,4],"end":[255,5]},"visibility":"public","docs":"Subtracts given `Duration` from the current date.\n\nReturns `None` when it will result in overflow.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3310:7473-0:2659:2444":{"id":"a:2:3310:7473-0:2659:2444","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:7473","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2659:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3554":{"id":"0:3554","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[193,33],"end":[193,37]},"visibility":{"restricted":{"parent":"0:2518:1909","path":"::month"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10678:142","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Months","id":"0:3543:1910","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3555:715"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1681:2087":{"id":"0:1681:2087","crate_id":0,"name":"hour","span":{"filename":"src/naive/time/mod.rs","begin":[819,4],"end":[821,5]},"visibility":"default","docs":"Returns the hour number from 0 to 23.\n\n# Example\n\n```\nuse chrono::{NaiveTime, Timelike};\n\nassert_eq!(NaiveTime::from_hms(0, 0, 0).hour(), 0);\nassert_eq!(NaiveTime::from_hms_nano(23, 56, 4, 12_345_678).hour(), 23);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:480:2483":{"id":"0:480:2483","crate_id":0,"name":"with_nanosecond","span":{"filename":"src/datetime/mod.rs","begin":[803,4],"end":[805,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["nano",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:505:181":{"id":"0:505:181","crate_id":0,"name":"Output","span":{"filename":"src/datetime/mod.rs","begin":[854,4],"end":[854,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}},"0:231:181":{"id":"0:231:181","crate_id":0,"name":"Output","span":{"filename":"src/date.rs","begin":[499,4],"end":[499,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}},"0:1758:957":{"id":"0:1758:957","crate_id":0,"name":"offset","span":{"filename":"src/offset/mod.rs","begin":[4,0],"end":[537,1]},"visibility":"public","docs":"The time zone, which calculates offsets from the local time to UTC.\n\nThere are four operations provided by the `TimeZone` trait:\n\n1. Converting the local `NaiveDateTime` to `DateTime<Tz>`\n2. Converting the UTC `NaiveDateTime` to `DateTime<Tz>`\n3. Converting `DateTime<Tz>` to the local `NaiveDateTime`\n4. Constructing `DateTime<Tz>` objects from various offsets\n\n1 is used for constructors. 2 is used for the `with_timezone` method of date and time types.\n3 is used for other methods, e.g. `year()` or `format()`, and provided by an associated type\nwhich implements `Offset` (which then passed to `TimeZone` for actual implementations).\nTechnically speaking `TimeZone` has a total knowledge about given timescale,\nbut `Offset` is used as a cache to avoid the repeated conversion\nand provides implementations for 1 and 3.\nAn `TimeZone` instance can be reconstructed from the corresponding `Offset` instance.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:1880","0:2294","0:2351","0:3395:1903","0:2372:1888","0:2374:1889"],"is_stripped":false}},"0:774:2995":{"id":"0:774:2995","crate_id":0,"name":"set_month","span":{"filename":"src/format/parsed.rs","begin":[184,4],"end":[186,5]},"visibility":"public","docs":"Tries to set the [`month`](#structfield.month) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["value",{"kind":"primitive","inner":"i64"}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:632:1899","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:220-0:3492:1880":{"id":"a:2:3281:220-0:3492:1880","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:3492:1880","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:0:1930":{"id":"0:0:1930","crate_id":0,"name":"chrono","span":{"filename":"src/lib.rs","begin":[4,0],"end":[532,1]},"visibility":"public","docs":"# Chrono: Date and Time for Rust\n\nIt aims to be a feature-complete superset of\nthe [time](https://github.com/rust-lang-deprecated/time) library.\nIn particular,\n\n* Chrono strictly adheres to ISO 8601.\n* Chrono is timezone-aware by default, with separate timezone-naive types.\n* Chrono is space-optimal and (while not being the primary goal) reasonably efficient.\n\nThere were several previous attempts to bring a good date and time library to Rust,\nwhich Chrono builds upon and should acknowledge:\n\n* [Initial research on\n   the wiki](https://github.com/rust-lang/rust-wiki-backup/blob/master/Lib-datetime.md)\n* Dietrich Epp's [datetime-rs](https://github.com/depp/datetime-rs)\n* Luis de Bethencourt's [rust-datetime](https://github.com/luisbg/rust-datetime)\n\nAny significant changes to Chrono are documented in\nthe [`CHANGELOG.md`](https://github.com/chronotope/chrono/blob/main/CHANGELOG.md) file.\n\n## Usage\n\nPut this in your `Cargo.toml`:\n\n```toml\n[dependencies]\nchrono = \"0.4\"\n```\n\n### Features\n\nChrono supports various runtime environments and operating systems, and has\nseveral features that may be enabled or disabled.\n\nDefault features:\n\n- `alloc`: Enable features that depend on allocation (primarily string formatting)\n- `std`: Enables functionality that depends on the standard library. This\n  is a superset of `alloc` and adds interoperation with standard library types\n  and traits.\n- `clock`: Enables reading the system time (`now`) that depends on the standard library for\nUNIX-like operating systems and the Windows API (`winapi`) for Windows.\n\nOptional features:\n\n- [`serde`][]: Enable serialization/deserialization via serde.\n- `unstable-locales`: Enable localization. This adds various methods with a\n  `_localized` suffix. The implementation and API may change or even be\n  removed in a patch release. Feedback welcome.\n\n[`serde`]: https://github.com/serde-rs/serde\n[wasm-bindgen]: https://github.com/rustwasm/wasm-bindgen\n\nSee the [cargo docs][] for examples of specifying features.\n\n[cargo docs]: https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html#choosing-features\n\n## Overview\n\n### Duration\n\nChrono currently uses its own [`Duration`] type to represent the magnitude\nof a time span. Since this has the same name as the newer, standard type for\nduration, the reference will refer this type as `OldDuration`.\n\nNote that this is an \"accurate\" duration represented as seconds and\nnanoseconds and does not represent \"nominal\" components such as days or\nmonths.\n\nWhen the `oldtime` feature is enabled, [`Duration`] is an alias for the\n[`time::Duration`](https://docs.rs/time/0.1.40/time/struct.Duration.html)\ntype from v0.1 of the time crate. time v0.1 is deprecated, so new code\nshould disable the `oldtime` feature and use the `chrono::Duration` type\ninstead. The `oldtime` feature is enabled by default for backwards\ncompatibility, but future versions of Chrono are likely to remove the\nfeature entirely.\n\nChrono does not yet natively support\nthe standard [`Duration`](https://doc.rust-lang.org/std/time/struct.Duration.html) type,\nbut it will be supported in the future.\nMeanwhile you can convert between two types with\n[`Duration::from_std`](https://docs.rs/time/0.1.40/time/struct.Duration.html#method.from_std)\nand\n[`Duration::to_std`](https://docs.rs/time/0.1.40/time/struct.Duration.html#method.to_std)\nmethods.\n\n### Date and Time\n\nChrono provides a\n[**`DateTime`**](./struct.DateTime.html)\ntype to represent a date and a time in a timezone.\n\nFor more abstract moment-in-time tracking such as internal timekeeping\nthat is unconcerned with timezones, consider\n[`time::SystemTime`](https://doc.rust-lang.org/std/time/struct.SystemTime.html),\nwhich tracks your system clock, or\n[`time::Instant`](https://doc.rust-lang.org/std/time/struct.Instant.html), which\nis an opaque but monotonically-increasing representation of a moment in time.\n\n`DateTime` is timezone-aware and must be constructed from\nthe [**`TimeZone`**](./offset/trait.TimeZone.html) object,\nwhich defines how the local date is converted to and back from the UTC date.\nThere are three well-known `TimeZone` implementations:\n\n* [**`Utc`**](./offset/struct.Utc.html) specifies the UTC time zone. It is most efficient.\n\n* [**`Local`**](./offset/struct.Local.html) specifies the system local time zone.\n\n* [**`FixedOffset`**](./offset/struct.FixedOffset.html) specifies\n  an arbitrary, fixed time zone such as UTC+09:00 or UTC-10:30.\n  This often results from the parsed textual date and time.\n  Since it stores the most information and does not depend on the system environment,\n  you would want to normalize other `TimeZone`s into this type.\n\n`DateTime`s with different `TimeZone` types are distinct and do not mix,\nbut can be converted to each other using\nthe [`DateTime::with_timezone`](./struct.DateTime.html#method.with_timezone) method.\n\nYou can get the current date and time in the UTC time zone\n([`Utc::now()`](./offset/struct.Utc.html#method.now))\nor in the local time zone\n([`Local::now()`](./offset/struct.Local.html#method.now)).\n\n```rust\nuse chrono::prelude::*;\n\nlet utc: DateTime<Utc> = Utc::now();       // e.g. `2014-11-28T12:45:59.324310806Z`\nlet local: DateTime<Local> = Local::now(); // e.g. `2014-11-28T21:45:59.324310806+09:00`\n# let _ = utc; let _ = local;\n```\n\nAlternatively, you can create your own date and time.\nThis is a bit verbose due to Rust's lack of function and method overloading,\nbut in turn we get a rich combination of initialization methods.\n\n```rust\nuse chrono::prelude::*;\nuse chrono::offset::LocalResult;\n\nlet dt = Utc.ymd(2014, 7, 8).and_hms(9, 10, 11); // `2014-07-08T09:10:11Z`\n// July 8 is 188th day of the year 2014 (`o` for \"ordinal\")\nassert_eq!(dt, Utc.yo(2014, 189).and_hms(9, 10, 11));\n// July 8 is Tuesday in ISO week 28 of the year 2014.\nassert_eq!(dt, Utc.isoywd(2014, 28, Weekday::Tue).and_hms(9, 10, 11));\n\nlet dt = Utc.ymd(2014, 7, 8).and_hms_milli(9, 10, 11, 12); // `2014-07-08T09:10:11.012Z`\nassert_eq!(dt, Utc.ymd(2014, 7, 8).and_hms_micro(9, 10, 11, 12_000));\nassert_eq!(dt, Utc.ymd(2014, 7, 8).and_hms_nano(9, 10, 11, 12_000_000));\n\n// dynamic verification\nassert_eq!(Utc.ymd_opt(2014, 7, 8).and_hms_opt(21, 15, 33),\n           LocalResult::Single(Utc.ymd(2014, 7, 8).and_hms(21, 15, 33)));\nassert_eq!(Utc.ymd_opt(2014, 7, 8).and_hms_opt(80, 15, 33), LocalResult::None);\nassert_eq!(Utc.ymd_opt(2014, 7, 38).and_hms_opt(21, 15, 33), LocalResult::None);\n\n// other time zone objects can be used to construct a local datetime.\n// obviously, `local_dt` is normally different from `dt`, but `fixed_dt` should be identical.\nlet local_dt = Local.ymd(2014, 7, 8).and_hms_milli(9, 10, 11, 12);\nlet fixed_dt = FixedOffset::east(9 * 3600).ymd(2014, 7, 8).and_hms_milli(18, 10, 11, 12);\nassert_eq!(dt, fixed_dt);\n# let _ = local_dt;\n```\n\nVarious properties are available to the date and time, and can be altered individually.\nMost of them are defined in the traits [`Datelike`](./trait.Datelike.html) and\n[`Timelike`](./trait.Timelike.html) which you should `use` before.\nAddition and subtraction is also supported.\nThe following illustrates most supported operations to the date and time:\n\n```rust\nuse chrono::prelude::*;\nuse chrono::Duration;\n\n// assume this returned `2014-11-28T21:45:59.324310806+09:00`:\nlet dt = FixedOffset::east(9*3600).ymd(2014, 11, 28).and_hms_nano(21, 45, 59, 324310806);\n\n// property accessors\nassert_eq!((dt.year(), dt.month(), dt.day()), (2014, 11, 28));\nassert_eq!((dt.month0(), dt.day0()), (10, 27)); // for unfortunate souls\nassert_eq!((dt.hour(), dt.minute(), dt.second()), (21, 45, 59));\nassert_eq!(dt.weekday(), Weekday::Fri);\nassert_eq!(dt.weekday().number_from_monday(), 5); // Mon=1, ..., Sun=7\nassert_eq!(dt.ordinal(), 332); // the day of year\nassert_eq!(dt.num_days_from_ce(), 735565); // the number of days from and including Jan 1, 1\n\n// time zone accessor and manipulation\nassert_eq!(dt.offset().fix().local_minus_utc(), 9 * 3600);\nassert_eq!(dt.timezone(), FixedOffset::east(9 * 3600));\nassert_eq!(dt.with_timezone(&Utc), Utc.ymd(2014, 11, 28).and_hms_nano(12, 45, 59, 324310806));\n\n// a sample of property manipulations (validates dynamically)\nassert_eq!(dt.with_day(29).unwrap().weekday(), Weekday::Sat); // 2014-11-29 is Saturday\nassert_eq!(dt.with_day(32), None);\nassert_eq!(dt.with_year(-300).unwrap().num_days_from_ce(), -109606); // November 29, 301 BCE\n\n// arithmetic operations\nlet dt1 = Utc.ymd(2014, 11, 14).and_hms(8, 9, 10);\nlet dt2 = Utc.ymd(2014, 11, 14).and_hms(10, 9, 8);\nassert_eq!(dt1.signed_duration_since(dt2), Duration::seconds(-2 * 3600 + 2));\nassert_eq!(dt2.signed_duration_since(dt1), Duration::seconds(2 * 3600 - 2));\nassert_eq!(Utc.ymd(1970, 1, 1).and_hms(0, 0, 0) + Duration::seconds(1_000_000_000),\n           Utc.ymd(2001, 9, 9).and_hms(1, 46, 40));\nassert_eq!(Utc.ymd(1970, 1, 1).and_hms(0, 0, 0) - Duration::seconds(1_000_000_000),\n           Utc.ymd(1938, 4, 24).and_hms(22, 13, 20));\n```\n\n### Formatting and Parsing\n\nFormatting is done via the [`format`](./struct.DateTime.html#method.format) method,\nwhich format is equivalent to the familiar `strftime` format.\n\nSee [`format::strftime`](./format/strftime/index.html#specifiers)\ndocumentation for full syntax and list of specifiers.\n\nThe default `to_string` method and `{:?}` specifier also give a reasonable representation.\nChrono also provides [`to_rfc2822`](./struct.DateTime.html#method.to_rfc2822) and\n[`to_rfc3339`](./struct.DateTime.html#method.to_rfc3339) methods\nfor well-known formats.\n\nChrono now also provides date formatting in almost any language without the\nhelp of an additional C library. This functionality is under the feature\n`unstable-locales`:\n\n```toml\nchrono = { version = \"0.4\", features = [\"unstable-locales\"] }\n```\n\nThe `unstable-locales` feature requires and implies at least the `alloc` feature.\n\n```rust\nuse chrono::prelude::*;\n\n# #[cfg(feature = \"unstable-locales\")]\n# fn test() {\nlet dt = Utc.ymd(2014, 11, 28).and_hms(12, 0, 9);\nassert_eq!(dt.format(\"%Y-%m-%d %H:%M:%S\").to_string(), \"2014-11-28 12:00:09\");\nassert_eq!(dt.format(\"%a %b %e %T %Y\").to_string(), \"Fri Nov 28 12:00:09 2014\");\nassert_eq!(dt.format_localized(\"%A %e %B %Y, %T\", Locale::fr_BE).to_string(), \"vendredi 28 novembre 2014, 12:00:09\");\n\nassert_eq!(dt.format(\"%a %b %e %T %Y\").to_string(), dt.format(\"%c\").to_string());\nassert_eq!(dt.to_string(), \"2014-11-28 12:00:09 UTC\");\nassert_eq!(dt.to_rfc2822(), \"Fri, 28 Nov 2014 12:00:09 +0000\");\nassert_eq!(dt.to_rfc3339(), \"2014-11-28T12:00:09+00:00\");\nassert_eq!(format!(\"{:?}\", dt), \"2014-11-28T12:00:09Z\");\n\n// Note that milli/nanoseconds are only printed if they are non-zero\nlet dt_nano = Utc.ymd(2014, 11, 28).and_hms_nano(12, 0, 9, 1);\nassert_eq!(format!(\"{:?}\", dt_nano), \"2014-11-28T12:00:09.000000001Z\");\n# }\n# #[cfg(not(feature = \"unstable-locales\"))]\n# fn test() {}\n# if cfg!(feature = \"unstable-locales\") {\n#    test();\n# }\n```\n\nParsing can be done with three methods:\n\n1. The standard [`FromStr`](https://doc.rust-lang.org/std/str/trait.FromStr.html) trait\n   (and [`parse`](https://doc.rust-lang.org/std/primitive.str.html#method.parse) method\n   on a string) can be used for parsing `DateTime<FixedOffset>`, `DateTime<Utc>` and\n   `DateTime<Local>` values. This parses what the `{:?}`\n   ([`std::fmt::Debug`](https://doc.rust-lang.org/std/fmt/trait.Debug.html))\n   format specifier prints, and requires the offset to be present.\n\n2. [`DateTime::parse_from_str`](./struct.DateTime.html#method.parse_from_str) parses\n   a date and time with offsets and returns `DateTime<FixedOffset>`.\n   This should be used when the offset is a part of input and the caller cannot guess that.\n   It *cannot* be used when the offset can be missing.\n   [`DateTime::parse_from_rfc2822`](./struct.DateTime.html#method.parse_from_rfc2822)\n   and\n   [`DateTime::parse_from_rfc3339`](./struct.DateTime.html#method.parse_from_rfc3339)\n   are similar but for well-known formats.\n\n3. [`Offset::datetime_from_str`](./offset/trait.TimeZone.html#method.datetime_from_str) is\n   similar but returns `DateTime` of given offset.\n   When the explicit offset is missing from the input, it simply uses given offset.\n   It issues an error when the input contains an explicit offset different\n   from the current offset.\n\nMore detailed control over the parsing process is available via\n[`format`](./format/index.html) module.\n\n```rust\nuse chrono::prelude::*;\n\nlet dt = Utc.ymd(2014, 11, 28).and_hms(12, 0, 9);\nlet fixed_dt = dt.with_timezone(&FixedOffset::east(9*3600));\n\n// method 1\nassert_eq!(\"2014-11-28T12:00:09Z\".parse::<DateTime<Utc>>(), Ok(dt.clone()));\nassert_eq!(\"2014-11-28T21:00:09+09:00\".parse::<DateTime<Utc>>(), Ok(dt.clone()));\nassert_eq!(\"2014-11-28T21:00:09+09:00\".parse::<DateTime<FixedOffset>>(), Ok(fixed_dt.clone()));\n\n// method 2\nassert_eq!(DateTime::parse_from_str(\"2014-11-28 21:00:09 +09:00\", \"%Y-%m-%d %H:%M:%S %z\"),\n           Ok(fixed_dt.clone()));\nassert_eq!(DateTime::parse_from_rfc2822(\"Fri, 28 Nov 2014 21:00:09 +0900\"),\n           Ok(fixed_dt.clone()));\nassert_eq!(DateTime::parse_from_rfc3339(\"2014-11-28T21:00:09+09:00\"), Ok(fixed_dt.clone()));\n\n// method 3\nassert_eq!(Utc.datetime_from_str(\"2014-11-28 12:00:09\", \"%Y-%m-%d %H:%M:%S\"), Ok(dt.clone()));\nassert_eq!(Utc.datetime_from_str(\"Fri Nov 28 12:00:09 2014\", \"%a %b %e %T %Y\"), Ok(dt.clone()));\n\n// oops, the year is missing!\nassert!(Utc.datetime_from_str(\"Fri Nov 28 12:00:09\", \"%a %b %e %T %Y\").is_err());\n// oops, the format string does not include the year at all!\nassert!(Utc.datetime_from_str(\"Fri Nov 28 12:00:09\", \"%a %b %e %T\").is_err());\n// oops, the weekday is incorrect!\nassert!(Utc.datetime_from_str(\"Sat Nov 28 12:00:09 2014\", \"%a %b %e %T %Y\").is_err());\n```\n\nAgain : See [`format::strftime`](./format/strftime/index.html#specifiers)\ndocumentation for full syntax and list of specifiers.\n\n### Conversion from and to EPOCH timestamps\n\nUse [`Utc.timestamp(seconds, nanoseconds)`](./offset/trait.TimeZone.html#method.timestamp)\nto construct a [`DateTime<Utc>`](./struct.DateTime.html) from a UNIX timestamp\n(seconds, nanoseconds that passed since January 1st 1970).\n\nUse [`DateTime.timestamp`](./struct.DateTime.html#method.timestamp) to get the timestamp (in seconds)\nfrom a [`DateTime`](./struct.DateTime.html). Additionally, you can use\n[`DateTime.timestamp_subsec_nanos`](./struct.DateTime.html#method.timestamp_subsec_nanos)\nto get the number of additional number of nanoseconds.\n\n```rust\n// We need the trait in scope to use Utc::timestamp().\nuse chrono::{DateTime, TimeZone, Utc};\n\n// Construct a datetime from epoch:\nlet dt = Utc.timestamp(1_500_000_000, 0);\nassert_eq!(dt.to_rfc2822(), \"Fri, 14 Jul 2017 02:40:00 +0000\");\n\n// Get epoch value from a datetime:\nlet dt = DateTime::parse_from_rfc2822(\"Fri, 14 Jul 2017 02:40:00 +0000\").unwrap();\nassert_eq!(dt.timestamp(), 1_500_000_000);\n```\n\n### Individual date\n\nChrono also provides an individual date type ([**`Date`**](./struct.Date.html)).\nIt also has time zones attached, and have to be constructed via time zones.\nMost operations available to `DateTime` are also available to `Date` whenever appropriate.\n\n```rust\nuse chrono::prelude::*;\nuse chrono::offset::LocalResult;\n\n# // these *may* fail, but only very rarely. just rerun the test if you were that unfortunate ;)\nassert_eq!(Utc::today(), Utc::now().date());\nassert_eq!(Local::today(), Local::now().date());\n\nassert_eq!(Utc.ymd(2014, 11, 28).weekday(), Weekday::Fri);\nassert_eq!(Utc.ymd_opt(2014, 11, 31), LocalResult::None);\nassert_eq!(Utc.ymd(2014, 11, 28).and_hms_milli(7, 8, 9, 10).format(\"%H%M%S\").to_string(),\n           \"070809\");\n```\n\nThere is no timezone-aware `Time` due to the lack of usefulness and also the complexity.\n\n`DateTime` has [`date`](./struct.DateTime.html#method.date) method\nwhich returns a `Date` which represents its date component.\nThere is also a [`time`](./struct.DateTime.html#method.time) method,\nwhich simply returns a naive local time described below.\n\n### Naive date and time\n\nChrono provides naive counterparts to `Date`, (non-existent) `Time` and `DateTime`\nas [**`NaiveDate`**](./naive/struct.NaiveDate.html),\n[**`NaiveTime`**](./naive/struct.NaiveTime.html) and\n[**`NaiveDateTime`**](./naive/struct.NaiveDateTime.html) respectively.\n\nThey have almost equivalent interfaces as their timezone-aware twins,\nbut are not associated to time zones obviously and can be quite low-level.\nThey are mostly useful for building blocks for higher-level types.\n\nTimezone-aware `DateTime` and `Date` types have two methods returning naive versions:\n[`naive_local`](./struct.DateTime.html#method.naive_local) returns\na view to the naive local time,\nand [`naive_utc`](./struct.DateTime.html#method.naive_utc) returns\na view to the naive UTC time.\n\n## Limitations\n\nOnly proleptic Gregorian calendar (i.e. extended to support older dates) is supported.\nBe very careful if you really have to deal with pre-20C dates, they can be in Julian or others.\n\nDate types are limited in about +/- 262,000 years from the common epoch.\nTime types are limited in the nanosecond accuracy.\n\n[Leap seconds are supported in the representation but\nChrono doesn't try to make use of them](./naive/struct.NaiveTime.html#leap-second-handling).\n(The main reason is that leap seconds are not really predictable.)\nAlmost *every* operation over the possible leap seconds will ignore them.\nConsider using `NaiveDateTime` with the implicit TAI (International Atomic Time) scale\nif you want.\n\nChrono inherently does not support an inaccurate or partial date and time representation.\nAny operation that can be ambiguous will return `None` in such cases.\nFor example, \"a month later\" of 2014-01-30 is not well-defined\nand consequently `Utc.ymd(2014, 1, 30).with_month(2)` returns `None`.\n\nNon ISO week handling is not yet supported.\nFor now you can use the [chrono_ext](https://crates.io/crates/chrono_ext)\ncrate ([sources](https://github.com/bcourtine/chrono-ext/)).\n\nAdvanced time zone handling is not yet supported.\nFor now you can try the [Chrono-tz](https://github.com/chronotope/chrono-tz/) crate instead.","links":{"`Duration`":"20:405:121"},"attrs":["#![doc(html_root_url = \"https://docs.rs/chrono/latest/\")]","#![deny(missing_docs)]","#![deny(missing_debug_implementations)]","#![warn(unreachable_pub)]","#![deny(dead_code)]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:7:1030","0:558:671","0:1061:1900","0:1758:957","0:4","0:247","0:250","0:253","0:546","0:549","0:552","0:555","0:1055","0:1058","0:1743","0:1746","0:1749","0:1752","0:1755","0:2399","0:2403","0:2406","0:2409","0:2412","0:2415","0:2481","0:2484","0:2487","0:2512","0:2515","0:2536","0:2539","0:2542","0:2584","0:2587"],"is_stripped":false}},"2:3166:75":{"id":"2:3166:75","crate_id":2,"name":"AsRef","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3168:305"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:3435:7101":{"id":"2:3435:7101","crate_id":2,"name":"ShlAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3437:1234"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13656:64781":{"id":"2:13656:64781","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"`DoubleEndedIterator`":"2:8591:120","self::pattern":"2:13202:1925","prim@char":"1:15986:6923","str::matches":"1:15992:6928"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatches","id":"2:49813:7180","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13212:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13227:7161","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1865:1355":{"id":"0:1865:1355","crate_id":0,"name":"sub","span":{"filename":"src/offset/fixed.rs","begin":[181,4],"end":[183,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2767":{"id":"0:2767","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[253,23],"end":[253,32]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2761:2702","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2481":{"id":"0:2481","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[494,16],"end":[494,29]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"round::DurationRound","name":"DurationRound","id":"0:2458:1905","glob":false}},"0:187:2192":{"id":"0:187:2192","crate_id":0,"name":"iso_week","span":{"filename":"src/date.rs","begin":[412,4],"end":[414,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"IsoWeek","id":"0:3052:1901","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:2873:2237":{"id":"b:2:3213-0:2873:2237","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Parsed","id":"0:2873:2237","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"23:854:7282":{"id":"23:854:7282","crate_id":23,"name":"NumRef","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Num","id":"23:844:7268","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"NumOps","id":"23:847:7281","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":false,"type":{"kind":"generic","inner":"Self"}}}},{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"implementations":[]}},"b:2:4002-0:2999:1886":{"id":"b:2:4002-0:2999:1886","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1863":{"id":"0:1863","crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[177,0],"end":[184,1]},"visibility":{"restricted":{"parent":"0:1795:5699","path":"::offset::fixed"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:3342:2033","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1864:181","0:1865:1355"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2674:2453":{"id":"0:2674:2453","crate_id":0,"name":"Day","span":{"filename":"src/format/mod.rs","begin":[116,4],"end":[116,7]},"visibility":"default","docs":"Day of the month (FW=PW=2).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:3453:2816":{"id":"0:3453:2816","crate_id":0,"name":"Wed","span":{"filename":"src/weekday.rs","begin":[20,4],"end":[20,11]},"visibility":"default","docs":"Wednesday.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:3547:408":{"id":"0:3547:408","crate_id":0,"name":"clone","span":{"filename":"src/month.rs","begin":[193,9],"end":[193,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Months","id":"0:3543:1910","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13586:64774":{"id":"2:13586:64774","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[stable(feature = \"str_mut_extras\", since = \"1.20.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:220:715":{"id":"0:220:715","crate_id":0,"name":"hash","span":{"filename":"src/date.rs","begin":[477,4],"end":[479,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"hash::Hasher","id":"2:10688:146","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:558:671":{"id":"0:558:671","crate_id":0,"name":"format","span":{"filename":"src/format/mod.rs","begin":[4,0],"end":[971,1]},"visibility":"public","docs":"Formatting (and parsing) utilities for date and time.\n\nThis module provides the common types and routines to implement,\nfor example, [`DateTime::format`](../struct.DateTime.html#method.format) or\n[`DateTime::parse_from_str`](../struct.DateTime.html#method.parse_from_str) methods.\nFor most cases you should use these high-level interfaces.\n\nInternally the formatting and parsing shares the same abstract **formatting items**,\nwhich are just an [`Iterator`](https://doc.rust-lang.org/std/iter/trait.Iterator.html) of\nthe [`Item`](./enum.Item.html) type.\nThey are generated from more readable **format strings**;\ncurrently Chrono supports a built-in syntax closely resembling\nC's `strftime` format. The available options can be found [here](./strftime/index.html).\n\n# Example\n```rust\n# use std::error::Error;\nuse chrono::prelude::*;\n\nlet date_time = Utc.ymd(2020, 11, 10).and_hms(0, 1, 32);\n\nlet formatted = format!(\"{}\", date_time.format(\"%Y-%m-%d %H:%M:%S\"));\nassert_eq!(formatted, \"2020-11-10 00:01:32\");\n\nlet parsed = Utc.datetime_from_str(&formatted, \"%Y-%m-%d %H:%M:%S\")?;\nassert_eq!(parsed, date_time);\n# Ok::<(), chrono::ParseError>(())\n```","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:995:2597","0:605","0:608","0:611","0:2641:2445","0:2659:2444","0:614:2656","0:2713:2238","0:2761:2702","0:2792:2040","0:2831:1898","0:2845:2736","0:632:1899","0:645:2776","0:701:671","0:2927:2039"],"is_stripped":false}},"0:2810:2238":{"id":"0:2810:2238","crate_id":0,"name":"Fixed","span":{"filename":"src/format/mod.rs","begin":[294,4],"end":[294,16]},"visibility":"default","docs":"Fixed-format item.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2713:2238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]}},"1:6811:8517":{"id":"1:6811:8517","crate_id":1,"name":"ChildExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6812:11132","1:6813:62054"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10589:8515","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:3269:211-0:2936:1902":{"id":"a:2:3269:211-0:2936:1902","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveWeek","id":"0:2936:1902","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:501:715":{"id":"0:501:715","crate_id":0,"name":"hash","span":{"filename":"src/datetime/mod.rs","begin":[848,4],"end":[850,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"hash::Hasher","id":"2:10688:146","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3479":{"id":"0:3479","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[11,44],"end":[11,48]},"visibility":{"restricted":{"parent":"0:2490:1907","path":"::weekday"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10678:142","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:3446:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3480:715"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2820":{"id":"0:2820","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[278,16],"end":[278,25]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2792:2040","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2792:2040","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:2822:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:552":{"id":"0:552","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[474,44],"end":[474,56]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"datetime::MAX_DATETIME","name":"MAX_DATETIME","id":"0:368:1895","glob":false}},"b:2:2869-0:3492:1880":{"id":"b:2:2869-0:3492:1880","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:3492:1880","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:2030"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13926:138":{"id":"2:13926:138","crate_id":2,"name":"Future","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13927:181","2:13928:1013"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2484":{"id":"0:2484","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[494,31],"end":[494,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"round::RoundingError","name":"RoundingError","id":"0:3428:1906","glob":false}},"0:2892:2309":{"id":"0:2892:2309","crate_id":0,"name":"timestamp","span":{"filename":"src/format/parsed.rs","begin":[103,4],"end":[103,30]},"visibility":"public","docs":"The number of non-leap seconds since the midnight UTC on January 1, 1970.\n\nThis can be off by one if [`second`](#structfield.second) is 60 (a leap second).","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i64"}}],"bindings":[]}}}}},"0:2456:6570":{"id":"0:2456:6570","crate_id":0,"name":"trunc_subsecs","span":{"filename":"src/round.rs","begin":[66,4],"end":[74,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["digits",{"kind":"primitive","inner":"u16"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13676:64787":{"id":"2:13676:64787","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"self::pattern":"2:13202:1925","prim@char":"1:15986:6923"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3395:1903":{"id":"0:3395:1903","crate_id":0,"name":"LocalResult","span":{"filename":"src/offset/mod.rs","begin":[41,0],"end":[50,1]},"visibility":"public","docs":"The conversion result from the local time to the timezone-aware datetime types.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"variants_stripped":false,"variants":["0:3397:174","0:3399:3090","0:3402:3091"],"impls":["0:2354","0:2362","0:2369","a:2:3310:7473-0:3395:1903","a:2:9408:7639-0:3395:1903","a:2:3269:211-0:3395:1903","a:2:9407:7640-0:3395:1903","a:2:3281:220-0:3395:1903","b:2:2869-0:3395:1903","b:2:4002-0:3395:1903","b:2:3198-0:3395:1903","b:2:2872-0:3395:1903","b:2:3208-0:3395:1903","b:2:3202-0:3395:1903","b:2:3213-0:3395:1903","b:5:787-0:3395:1903","0:3406","0:3409","0:3411","0:3414","0:3417","0:3419","0:3421","0:3424"]}},"0:154:2134":{"id":"0:154:2134","crate_id":0,"name":"with_timezone","span":{"filename":"src/date.rs","begin":[235,4],"end":[237,5]},"visibility":"public","docs":"Changes the associated time zone.\nThis does not change the actual `Date` (but will change the string representation).","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["tz",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Tz2"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz2"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Tz2","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:2374:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3269:211-0:3428:1906":{"id":"a:2:3269:211-0:3428:1906","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RoundingError","id":"0:3428:1906","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1190:2419":{"id":"0:1190:2419","crate_id":0,"name":"parse_from_str","span":{"filename":"src/naive/date.rs","begin":[594,4],"end":[598,5]},"visibility":"public","docs":"Parses a string with the specified format string and returns a new `NaiveDate`.\nSee the [`format::strftime` module](../format/strftime/index.html)\non the supported escape sequences.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet parse_from_str = NaiveDate::parse_from_str;\n\nassert_eq!(parse_from_str(\"2015-09-05\", \"%Y-%m-%d\"),\n           Ok(NaiveDate::from_ymd(2015, 9, 5)));\nassert_eq!(parse_from_str(\"5sep2015\", \"%d%b%Y\"),\n           Ok(NaiveDate::from_ymd(2015, 9, 5)));\n```\n\nTime and offset is ignored for the purpose of parsing.\n\n```\n# use chrono::NaiveDate;\n# let parse_from_str = NaiveDate::parse_from_str;\nassert_eq!(parse_from_str(\"2014-5-17T12:34:56+09:30\", \"%Y-%m-%dT%H:%M:%S%z\"),\n           Ok(NaiveDate::from_ymd(2014, 5, 17)));\n```\n\nOut-of-bound dates or insufficient fields are errors.\n\n```\n# use chrono::NaiveDate;\n# let parse_from_str = NaiveDate::parse_from_str;\nassert!(parse_from_str(\"2015/9\", \"%Y/%m\").is_err());\nassert!(parse_from_str(\"2015/9/31\", \"%Y/%m/%d\").is_err());\n```\n\nAll parsed fields should be consistent to each other, otherwise it's an error.\n\n```\n# use chrono::NaiveDate;\n# let parse_from_str = NaiveDate::parse_from_str;\nassert!(parse_from_str(\"Sat, 09 Aug 2013\", \"%a, %d %b %Y\").is_err());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["fmt",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:632:1899","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1241:2193":{"id":"0:1241:2193","crate_id":0,"name":"with_year","span":{"filename":"src/naive/date.rs","begin":[1486,4],"end":[1495,5]},"visibility":"default","docs":"Makes a new `NaiveDate` with the year number changed.\n\nReturns `None` when the resulting `NaiveDate` would be invalid.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(NaiveDate::from_ymd(2015, 9, 8).with_year(2016),\n           Some(NaiveDate::from_ymd(2016, 9, 8)));\nassert_eq!(NaiveDate::from_ymd(2015, 9, 8).with_year(-308),\n           Some(NaiveDate::from_ymd(-308, 9, 8)));\n```\n\nA leap day (February 29) is a good example that this method can return `None`.\n\n```\n# use chrono::{NaiveDate, Datelike};\nassert!(NaiveDate::from_ymd(2016, 2, 29).with_year(2015).is_none());\nassert!(NaiveDate::from_ymd(2016, 2, 29).with_year(2020).is_some());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["year",{"kind":"primitive","inner":"i32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6418:223":{"id":"5:6418:223","crate_id":5,"name":"ToString","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:6419:1397"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13622:7874":{"id":"2:13622:7874","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"prim@char":"1:15986:6923","`None`":"2:47628:176","self::pattern":"2:13202:1925"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13212:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13227:7161","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2451:6565":{"id":"0:2451:6565","crate_id":0,"name":"round_subsecs","span":{"filename":"src/round.rs","begin":[32,4],"end":[32,48]},"visibility":"default","docs":"Return a copy rounded to the specified number of subsecond digits. With\n9 or more digits, self is returned unmodified. Halfway values are\nrounded up (away from zero).\n\n# Example\n``` rust\n# use chrono::{DateTime, SubsecRound, Timelike, TimeZone, Utc};\nlet dt = Utc.ymd(2018, 1, 11).and_hms_milli(12, 0, 0, 154);\nassert_eq!(dt.round_subsecs(2).nanosecond(), 150_000_000);\nassert_eq!(dt.round_subsecs(1).nanosecond(), 200_000_000);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["digits",{"kind":"primitive","inner":"u16"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:196:2197":{"id":"0:196:2197","crate_id":0,"name":"with_day0","span":{"filename":"src/date.rs","begin":[437,4],"end":[439,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["day0",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:2936:1902":{"id":"b:2:3213-0:2936:1902","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveWeek","id":"0:2936:1902","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:8591:120":{"id":"2:8591:120","crate_id":2,"name":"DoubleEndedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8592:4361","2:8593:7870","2:8594:7871","2:8595:7872","2:8599:7873","2:8602:7874"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8748:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2936:1902":{"id":"0:2936:1902","crate_id":0,"name":"NaiveWeek","span":{"filename":"src/naive/date.rs","begin":[57,0],"end":[60,1]},"visibility":"public","docs":"A week represented by a [`NaiveDate`] and a [`Weekday`] which is the first\nday of the week.","links":{"`NaiveDate`":"0:2941:1885","`Weekday`":"0:3446:1882"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:1171","a:2:3310:7473-0:2936:1902","a:2:9408:7639-0:2936:1902","a:2:3269:211-0:2936:1902","a:2:9407:7640-0:2936:1902","a:2:3281:220-0:2936:1902","b:2:2869-0:2936:1902","b:2:4002-0:2936:1902","b:2:3198-0:2936:1902","b:2:2872-0:2936:1902","b:2:3208-0:2936:1902","b:2:3202-0:2936:1902","b:2:3213-0:2936:1902","0:2939"]}},"0:45":{"id":"0:45","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[461,20],"end":[461,29]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::NaiveDate","name":"NaiveDate","id":"0:2941:1885","glob":false}},"2:13647:64779":{"id":"2:13647:64779","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9407:7640-0:2927:2039":{"id":"a:2:9407:7640-0:2927:2039","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9407:7640","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9407:7640","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2927:2039","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1192:4043":{"id":"0:1192:4043","crate_id":0,"name":"checked_sub_months","span":{"filename":"src/naive/date.rs","begin":[641,4],"end":[651,5]},"visibility":"public","docs":"Subtract a duration in [`Months`] from the date\n\nIf the day would be out of range for the resulting month, use the last day for that month.\n\nReturns `None` if the resulting date would be out of range.\n\n```\n# use chrono::{NaiveDate, Months};\nassert_eq!(\n    NaiveDate::from_ymd(2022, 2, 20).checked_sub_months(Months::new(6)),\n    Some(NaiveDate::from_ymd(2021, 8, 20))\n);\n```","links":{"`Months`":"0:3543:1910"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["months",{"kind":"resolved_path","inner":{"name":"Months","id":"0:3543:1910","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2900":{"id":"0:2900","crate_id":0,"name":null,"span":{"filename":"src/format/parsed.rs","begin":[25,27],"end":[25,29]},"visibility":{"restricted":{"parent":"0:705:2399","path":"::format::parsed"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3278:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Parsed","id":"0:2873:2237","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1692:265":{"id":"0:1692:265","crate_id":0,"name":"add","span":{"filename":"src/naive/time/mod.rs","begin":[1069,4],"end":[1071,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3202-0:3384:1884":{"id":"b:2:3202-0:3384:1884","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:3384:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3469":{"id":"0:3469","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[11,9],"end":[11,18]},"visibility":{"restricted":{"parent":"0:2490:1907","path":"::weekday"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:3446:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:3446:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3470:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2399":{"id":"0:2399","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[489,0],"end":[489,22]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"clock\")]","#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"offset::Local","name":"Local","id":"0:3377:1873","glob":false}},"0:767:920":{"id":"0:767:920","crate_id":0,"name":"new","span":{"filename":"src/format/parsed.rs","begin":[130,4],"end":[132,5]},"visibility":"public","docs":"Returns the initial value of parsed parts.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Parsed","id":"0:2873:2237","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1707":{"id":"0:1707","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[1299,0],"end":[1319,1]},"visibility":{"restricted":{"parent":"0:1586:1556","path":"::naive::time"}},"docs":"Parsing a `str` into a `NaiveTime` uses the same format,\n[`%H:%M:%S%.f`](../format/strftime/index.html), as in `Debug` and `Display`.\n\n# Example\n\n```\nuse chrono::NaiveTime;\n\nlet t = NaiveTime::from_hms(23, 56, 4);\nassert_eq!(\"23:56:04\".parse::<NaiveTime>(), Ok(t));\n\nlet t = NaiveTime::from_hms_nano(23, 56, 4, 12_345_678);\nassert_eq!(\"23:56:4.012345678\".parse::<NaiveTime>(), Ok(t));\n\nlet t = NaiveTime::from_hms_nano(23, 59, 59, 1_234_567_890); // leap second\nassert_eq!(\"23:59:60.23456789\".parse::<NaiveTime>(), Ok(t));\n\nassert!(\"foo\".parse::<NaiveTime>().is_err());\n```","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:13141:2501","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1708:126","0:1709:2502"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3520:2810":{"id":"0:3520:2810","crate_id":0,"name":"October","span":{"filename":"src/month.rs","begin":[53,4],"end":[53,15]},"visibility":"default","docs":"October","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:18":{"id":"0:18","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[455,20],"end":[455,28]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::DateTime","name":"DateTime","id":"0:2621:1877","glob":false}},"b:2:2869-0:3395:1903":{"id":"b:2:2869-0:3395:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3395:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2871:2030"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1870:181":{"id":"0:1870:181","crate_id":0,"name":"Output","span":{"filename":"src/offset/fixed.rs","begin":[196,4],"end":[196,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:2406":{"id":"0:2406","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[491,30],"end":[491,41]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"offset::LocalResult","name":"LocalResult","id":"0:3395:1903","glob":false}},"0:2498:6707":{"id":"0:2498:6707","crate_id":0,"name":"number_from_sunday","span":{"filename":"src/weekday.rs","begin":[92,4],"end":[102,5]},"visibility":"public","docs":"Returns a day-of-week number starting from Sunday = 1.\n\n`w`:                      | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun`\n------------------------- | ----- | ----- | ----- | ----- | ----- | ----- | -----\n`w.number_from_sunday()`: | 2     | 3     | 4     | 5     | 6     | 7     | 1","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9408:7639-0:3067:1887":{"id":"a:2:9408:7639-0:3067:1887","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9408:7639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1416:2161":{"id":"0:1416:2161","crate_id":0,"name":"MAX","span":{"filename":"src/naive/datetime/mod.rs","begin":[750,4],"end":[750,78]},"visibility":"public","docs":"The maximum possible `NaiveDateTime`.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"0:2397:2137":{"id":"0:2397:2137","crate_id":0,"name":"from_utc_date","span":{"filename":"src/offset/mod.rs","begin":[468,4],"end":[470,5]},"visibility":"default","docs":"Converts the UTC `NaiveDate` to the local time.\nThe UTC is continuous and thus this cannot fail (but can give the duplicate local time).","links":{},"attrs":["#[allow(clippy :: wrong_self_convention)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["utc",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4002-0:2941:1885":{"id":"b:2:4002-0:2941:1885","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3178:228":{"id":"2:3178:228","crate_id":2,"name":"TryInto","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3180:127","2:3181:1417"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2756":{"id":"0:2756","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[181,27],"end":[181,29]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3278:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2713:2238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1259":{"id":"0:1259","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[1736,0],"end":[1743,1]},"visibility":{"restricted":{"parent":"0:1062:1890","path":"::naive::date"}},"docs":"A subtraction of `Duration` from `NaiveDate` discards the fractional days,\nrounding to the closest integral number of days towards `Duration::zero()`.\nIt is the same as the addition with a negated `Duration`.\n\nPanics on underflow or overflow.\nUse [`NaiveDate::checked_sub_signed`](#method.checked_sub_signed) to detect that.\n\n# Example\n\n```\nuse chrono::{Duration, NaiveDate};\n\nlet from_ymd = NaiveDate::from_ymd;\n\nassert_eq!(from_ymd(2014, 1, 1) - Duration::zero(),             from_ymd(2014, 1, 1));\nassert_eq!(from_ymd(2014, 1, 1) - Duration::seconds(86399),     from_ymd(2014, 1, 1));\nassert_eq!(from_ymd(2014, 1, 1) - Duration::seconds(-86399),    from_ymd(2014, 1, 1));\nassert_eq!(from_ymd(2014, 1, 1) - Duration::days(1),            from_ymd(2013, 12, 31));\nassert_eq!(from_ymd(2014, 1, 1) - Duration::days(-1),           from_ymd(2014, 1, 2));\nassert_eq!(from_ymd(2014, 1, 1) - Duration::days(364),          from_ymd(2013, 1, 2));\nassert_eq!(from_ymd(2014, 1, 1) - Duration::days(365*4 + 1),    from_ymd(2010, 1, 1));\nassert_eq!(from_ymd(2014, 1, 1) - Duration::days(365*400 + 97), from_ymd(1614, 1, 1));\n```","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:3342:2033","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Duration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1260:181","0:1261:1355"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9408:7639-0:2792:2040":{"id":"a:2:9408:7639-0:2792:2040","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9408:7639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2792:2040","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13595:60378":{"id":"2:13595:60378","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11082:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11082:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:2365:2090":{"id":"0:2365:2090","crate_id":0,"name":"and_hms_opt","span":{"filename":"src/offset/mod.rs","begin":[107,4],"end":[114,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date, hour, minute and second.\nThe offset in the current date is preserved.\n\nPropagates any error. Ambiguous result would be discarded.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["hour",{"kind":"primitive","inner":"u32"}],["min",{"kind":"primitive","inner":"u32"}],["sec",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3395:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:787-0:2761:2702":{"id":"b:5:787-0:2761:2702","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2761:2702","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:7921","5:790:7922","5:791:7923"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:771:2989":{"id":"0:771:2989","crate_id":0,"name":"set_isoyear","span":{"filename":"src/format/parsed.rs","begin":[160,4],"end":[162,5]},"visibility":"public","docs":"Tries to set the [`isoyear`](#structfield.isoyear) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["value",{"kind":"primitive","inner":"i64"}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:632:1899","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3396:7092":{"id":"2:3396:7092","crate_id":2,"name":"BitAnd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3398:181","2:3399:351"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3533":{"id":"0:3533","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[30,20],"end":[30,22]},"visibility":{"restricted":{"parent":"0:2518:1909","path":"::month"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:3492:1880","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2587":{"id":"0:2587","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[503,27],"end":[503,35]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"traits::Timelike","name":"Timelike","id":"0:2572:1881","glob":false}},"0:3562:1911":{"id":"0:3562:1911","crate_id":0,"name":"ParseMonthError","span":{"filename":"src/month.rs","begin":[205,0],"end":[207,1]},"visibility":"public","docs":"An error resulting from reading `<Month>` value with `FromStr`.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:3310:7473-0:3562:1911","a:2:9408:7639-0:3562:1911","a:2:3269:211-0:3562:1911","a:2:9407:7640-0:3562:1911","a:2:3281:220-0:3562:1911","b:2:2869-0:3562:1911","b:2:4002-0:3562:1911","b:2:3198-0:3562:1911","b:2:2872-0:3562:1911","b:2:3208-0:3562:1911","b:2:3202-0:3562:1911","b:2:3213-0:3562:1911","b:5:787-0:3562:1911","0:3564","0:3566","0:3567","0:3569","0:3570","0:2533"]}},"0:2606:2257":{"id":"0:2606:2257","crate_id":0,"name":"AutoSi","span":{"filename":"src/datetime/mod.rs","begin":[72,4],"end":[72,10]},"visibility":"default","docs":"Automatically select one of `Secs`, `Millis`, `Micros`, or `Nanos` to\ndisplay all available non-zero sub-second digits.  This corresponds to\n[Fixed::Nanosecond](format/enum.Fixed.html#variant.Nanosecond).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2350:660":{"id":"0:2350:660","crate_id":0,"name":"fmt","span":{"filename":"src/offset/utc.rs","begin":[113,4],"end":[115,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10400:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10389:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1238:2191":{"id":"0:1238:2191","crate_id":0,"name":"ordinal0","span":{"filename":"src/naive/date.rs","begin":[1439,4],"end":[1441,5]},"visibility":"default","docs":"Returns the day of year starting from 0.\n\nThe return value ranges from 0 to 365. (The last day of year differs by years.)\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(NaiveDate::from_ymd(2015, 9, 8).ordinal0(), 250);\nassert_eq!(NaiveDate::from_ymd(-308, 3, 14).ordinal0(), 73);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2887:2964":{"id":"0:2887:2964","crate_id":0,"name":"hour_div_12","span":{"filename":"src/format/parsed.rs","begin":[86,4],"end":[86,32]},"visibility":"public","docs":"Hour number divided by 12 (0--1). 0 indicates AM and 1 indicates PM.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u32"}}],"bindings":[]}}}}},"0:1050:2502":{"id":"0:1050:2502","crate_id":0,"name":"from_str","span":{"filename":"src/format/mod.rs","begin":[876,4],"end":[882,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47753:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:13141:2501","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2285:5787":{"id":"0:2285:5787","crate_id":0,"name":"offset_from_local_datetime","span":{"filename":"src/offset/local/mod.rs","begin":[101,4],"end":[103,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["local",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3395:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:424":{"id":"0:424","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[542,0],"end":[693,1]},"visibility":{"restricted":{"parent":"0:256:1893","path":"::datetime"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:2374:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Tz"},"trait":{"name":"","id":"0:2374:1889","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Display","id":"2:10447:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:426:2421","0:428:2423","0:430:2441","0:437:2167","0:441:671"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1698":{"id":"0:1698","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[1135,0],"end":[1140,1]},"visibility":{"restricted":{"parent":"0:1586:1556","path":"::naive::time"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"SubAssign","id":"2:3372:2034","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Duration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1699:1356"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2722:2676":{"id":"0:2722:2676","crate_id":0,"name":"LowerAmPm","span":{"filename":"src/format/mod.rs","begin":[202,4],"end":[202,13]},"visibility":"default","docs":"AM/PM.\n\nPrints in lower case, reads in any case.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"b:2:2872-0:2831:1898":{"id":"b:2:2872-0:2831:1898","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:7071","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2831:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:5915"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3478:660":{"id":"0:3478:660","crate_id":0,"name":"fmt","span":{"filename":"src/weekday.rs","begin":[11,37],"end":[11,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10400:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10389:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13679:19995":{"id":"2:13679:19995","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"self::pattern":"2:13202:1925","prim@char":"1:15986:6923"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3540":{"id":"0:3540","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[30,44],"end":[30,48]},"visibility":{"restricted":{"parent":"0:2518:1909","path":"::month"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10678:142","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:3492:1880","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3541:715"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3541:715":{"id":"0:3541:715","crate_id":0,"name":"hash","span":{"filename":"src/month.rs","begin":[30,44],"end":[30,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10688:146","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9407:7640-0:2999:1886":{"id":"a:2:9407:7640-0:2999:1886","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9407:7640","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2497:2843":{"id":"0:2497:2843","crate_id":0,"name":"number_from_monday","span":{"filename":"src/weekday.rs","begin":[74,4],"end":[84,5]},"visibility":"public","docs":"Returns a day-of-week number starting from Monday = 1. (ISO 8601 weekday number)\n\n`w`:                      | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun`\n------------------------- | ----- | ----- | ----- | ----- | ----- | ----- | -----\n`w.number_from_monday()`: | 1     | 2     | 3     | 4     | 5     | 6     | 7","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:2659:2444":{"id":"b:2:3213-0:2659:2444","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2659:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2726:2463":{"id":"0:2726:2463","crate_id":0,"name":"Nanosecond","span":{"filename":"src/format/mod.rs","begin":[210,4],"end":[210,14]},"visibility":"default","docs":"An optional dot plus one or more digits for left-aligned nanoseconds.\nMay print nothing, 3, 6 or 9 digits according to the available accuracy.\nSee also [`Numeric::Nanosecond`](./enum.Numeric.html#variant.Nanosecond).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"b:5:787-0:3562:1911":{"id":"b:5:787-0:3562:1911","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseMonthError","id":"0:3562:1911","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:7921","5:790:7922","5:791:7923"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2354":{"id":"0:2354","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[52,0],"end":[85,1]},"visibility":{"restricted":{"parent":"0:1758:957","path":"::offset"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3395:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:2356:2083","0:2357:5709","0:2358:5711","0:2359:841"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2574:2844":{"id":"0:2574:2844","crate_id":0,"name":"hour12","span":{"filename":"src/traits.rs","begin":[129,4],"end":[136,5]},"visibility":"default","docs":"Returns the hour number from 1 to 12 with a boolean flag,\nwhich is false for AM and true for PM.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"bool"},{"kind":"primitive","inner":"u32"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1472:126":{"id":"0:1472:126","crate_id":0,"name":"Err","span":{"filename":"src/naive/datetime/mod.rs","begin":[1485,4],"end":[1485,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2831:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:1448:2481":{"id":"0:1448:2481","crate_id":0,"name":"with_minute","span":{"filename":"src/naive/datetime/mod.rs","begin":[1174,4],"end":[1176,5]},"visibility":"default","docs":"Makes a new `NaiveDateTime` with the minute number changed.\n\nReturns `None` when the resulting `NaiveDateTime` would be invalid.\n\nSee also the\n[`NaiveTime::with_minute`] method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Timelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 8).and_hms_milli(12, 34, 56, 789);\nassert_eq!(dt.with_minute(45),\n           Some(NaiveDate::from_ymd(2015, 9, 8).and_hms_milli(12, 45, 56, 789)));\nassert_eq!(dt.with_minute(60), None);\n```","links":{"`NaiveTime::with_minute`":"0:3067:1887"},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["min",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1173:3820":{"id":"0:1173:3820","crate_id":0,"name":"last_day","span":{"filename":"src/naive/date.rs","begin":[94,4],"end":[96,5]},"visibility":"public","docs":"Returns a date representing the last day of the week.\n\n# Examples\n\n```\nuse chrono::{NaiveDate, Weekday};\n\nlet date = NaiveDate::from_ymd(2022, 4, 18);\nlet week = date.week(Weekday::Mon);\nassert!(week.last_day() >= date);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3364:7087":{"id":"2:3364:7087","crate_id":2,"name":"Neg","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3365:181","2:3366:913"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13618:3655":{"id":"2:13618:3655","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:47628:176","prim@char":"1:15986:6923","self::pattern":"2:13202:1925"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:7131","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2880:1909":{"id":"0:2880:1909","crate_id":0,"name":"month","span":{"filename":"src/format/parsed.rs","begin":[62,4],"end":[62,26]},"visibility":"public","docs":"Month (1--12).","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u32"}}],"bindings":[]}}}}},"0:2385:5761":{"id":"0:2385:5761","crate_id":0,"name":"timestamp_millis_opt","span":{"filename":"src/offset/mod.rs","begin":[386,4],"end":[393,5]},"visibility":"default","docs":"Makes a new `DateTime` from the number of non-leap milliseconds\nsince January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\").\n\n\nReturns `LocalResult::None` on out-of-range number of milliseconds\nand/or invalid nanosecond, otherwise always returns\n`LocalResult::Single`.\n\n# Example\n\n```\nuse chrono::{Utc, TimeZone, LocalResult};\nmatch Utc.timestamp_millis_opt(1431648000) {\n    LocalResult::Single(dt) => assert_eq!(dt.timestamp(), 1431648),\n    _ => panic!(\"Incorrect timestamp_millis\"),\n};\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["millis",{"kind":"primitive","inner":"i64"}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3395:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:137:2097":{"id":"0:137:2097","crate_id":0,"name":"and_hms_milli","span":{"filename":"src/date.rs","begin":[116,4],"end":[118,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date, hour, minute, second and millisecond.\nThe millisecond part can exceed 1,000 in order to represent the leap second.\nThe offset in the current date is preserved.\n\nPanics on invalid hour, minute, second and/or millisecond.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["hour",{"kind":"primitive","inner":"u32"}],["min",{"kind":"primitive","inner":"u32"}],["sec",{"kind":"primitive","inner":"u32"}],["milli",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2908:2041":{"id":"0:2908:2041","crate_id":0,"name":"StrftimeItems","span":{"filename":"src/format/strftime.rs","begin":[198,0],"end":[211,1]},"visibility":"public","docs":"Parsing iterator for `strftime`-like format strings.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:1020","a:2:3310:7473-0:2908:2041","a:2:9408:7639-0:2908:2041","a:2:3269:211-0:2908:2041","a:2:9407:7640-0:2908:2041","a:2:3281:220-0:2908:2041","b:2:2869-0:2908:2041","b:2:4002-0:2908:2041","b:2:3198-0:2908:2041","b:2:8551-0:2908:2041","b:2:2872-0:2908:2041","b:2:3208-0:2908:2041","b:2:3202-0:2908:2041","b:2:3213-0:2908:2041","b:5:787-0:2908:2041","0:2915","0:2918","0:1027"]}},"0:1265:181":{"id":"0:1265:181","crate_id":0,"name":"Output","span":{"filename":"src/naive/date.rs","begin":[1777,4],"end":[1777,30]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Duration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:507":{"id":"0:507","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[862,0],"end":[870,1]},"visibility":{"restricted":{"parent":"0:256:1893","path":"::datetime"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:2374:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AddAssign","id":"2:3368:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Duration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:509:266"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2562:1907":{"id":"0:2562:1907","crate_id":0,"name":"weekday","span":{"filename":"src/traits.rs","begin":[51,4],"end":[51,33]},"visibility":"default","docs":"Returns the day of week.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:3446:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:13579:64771":{"id":"2:13579:64771","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"is_char_boundary\", since = \"1.9.0\")]","#[rustc_const_unstable(feature = \"const_is_char_boundary\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3310:7473-0:3395:1903":{"id":"a:2:3310:7473-0:3395:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3310:7473","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:7473","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3395:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:8554:7878":{"id":"2:8554:7878","crate_id":2,"name":"IntoIter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"I"}}},"23:866:7284":{"id":"23:866:7284","crate_id":23,"name":"NumAssignOps","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"AddAssign","id":"2:3368:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"SubAssign","id":"2:3372:2034","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"MulAssign","id":"2:3376:7090","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"DivAssign","id":"2:3380:7089","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"RemAssign","id":"2:3384:7091","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2872":{"id":"0:2872","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[347,38],"end":[347,42]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2845:2736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2374:1889":{"id":"0:2374:1889","crate_id":0,"name":"TimeZone","span":{"filename":"src/offset/mod.rs","begin":[203,0],"end":[478,1]},"visibility":"public","docs":"The time zone.\n\nThe methods here are the primarily constructors for [`Date`](../struct.Date.html) and\n[`DateTime`](../struct.DateTime.html) types.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:2375:1888","0:2376:2529","0:2377:4466","0:2378:5739","0:2379:4469","0:2380:5746","0:2381:4473","0:2382:2309","0:2383:5752","0:2384:2321","0:2385:5761","0:2386:2338","0:2387:3456","0:2388:2131","0:2389:5785","0:2390:5787","0:2391:2165","0:2393:2082","0:2395:5791","0:2396:3098","0:2397:2137","0:2398:2352"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:1845","0:2280","0:2338"]}},"0:510":{"id":"0:510","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[872,0],"end":[879,1]},"visibility":{"restricted":{"parent":"0:256:1893","path":"::datetime"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:2374:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:3342:2033","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Duration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:512:181","0:513:1355"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3522:131":{"id":"2:3522:131","crate_id":2,"name":"FnMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3524:377"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3525:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:1874:181":{"id":"0:1874:181","crate_id":0,"name":"Output","span":{"filename":"src/offset/fixed.rs","begin":[205,4],"end":[205,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}},"0:2459:126":{"id":"0:2459:126","crate_id":0,"name":"Err","span":{"filename":"src/round.rs","begin":[104,4],"end":[104,32]},"visibility":"default","docs":"Error that can occur in rounding or truncating","links":{},"attrs":["#[cfg(any(feature = \"std\", test))]"],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"std::error::Error","id":"1:2572:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}},"b:2:2872-0:3562:1911":{"id":"b:2:2872-0:3562:1911","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:7071","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseMonthError","id":"0:3562:1911","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:5915"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"23:579:7304":{"id":"23:579:7304","crate_id":23,"name":"CheckedDiv","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:580:66645"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Div","id":"2:3352:7085","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2882:2838":{"id":"0:2882:2838","crate_id":0,"name":"week_from_mon","span":{"filename":"src/format/parsed.rs","begin":[70,4],"end":[70,34]},"visibility":"public","docs":"Week number, where the week 1 starts at the first Monday of January\n(0--53, 1--53 or 1--52 depending on the year).","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u32"}}],"bindings":[]}}}}},"0:2534:660":{"id":"0:2534:660","crate_id":0,"name":"fmt","span":{"filename":"src/month.rs","begin":[210,4],"end":[212,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10400:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10389:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2724:2678":{"id":"0:2724:2678","crate_id":0,"name":"UpperAmPm","span":{"filename":"src/format/mod.rs","begin":[206,4],"end":[206,13]},"visibility":"default","docs":"AM/PM.\n\nPrints in upper case, reads in any case.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:3080:997":{"id":"0:3080:997","crate_id":0,"name":"partial_cmp","span":{"filename":"src/naive/time/mod.rs","begin":[190,30],"end":[190,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::option::Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Ordering","id":"2:37761:178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3393":{"id":"0:3393","crate_id":0,"name":null,"span":{"filename":"src/offset/utc.rs","begin":[42,33],"end":[42,35]},"visibility":{"restricted":{"parent":"0:2297:5700","path":"::offset::utc"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:3384:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1696:181":{"id":"0:1696:181","crate_id":0,"name":"Output","span":{"filename":"src/naive/time/mod.rs","begin":[1127,4],"end":[1127,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:1586:1556":{"id":"0:1586:1556","crate_id":0,"name":"time","span":{"filename":"src/naive/time/mod.rs","begin":[4,0],"end":[1413,1]},"visibility":{"restricted":{"parent":"0:1061:1900","path":"::naive"}},"docs":"ISO 8601 time without timezone.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:3067:1887"],"is_stripped":true}},"0:400":{"id":"0:400","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[397,0],"end":[401,1]},"visibility":{"restricted":{"parent":"0:256:1893","path":"::datetime"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3247:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:401:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2621:1877":{"id":"0:2621:1877","crate_id":0,"name":"DateTime","span":{"filename":"src/datetime/mod.rs","begin":[86,0],"end":[89,1]},"visibility":"public","docs":"ISO 8601 combined date and time with time zone.\n\nThere are some constructors implemented here (the `from_*` methods), but\nthe general-purpose constructors are all via the methods on the\n[`TimeZone`](./offset/trait.TimeZone.html) implementations.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:2374:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:369","0:418","0:424","a:2:3310:7473-0:2621:1877","a:2:9408:7639-0:2621:1877","a:2:9407:7640-0:2621:1877","a:2:3281:220-0:2621:1877","b:2:2869-0:2621:1877","b:2:4002-0:2621:1877","b:2:3198-0:2621:1877","b:2:2872-0:2621:1877","b:2:3208-0:2621:1877","b:2:3202-0:2621:1877","b:2:3213-0:2621:1877","b:5:787-0:2621:1877","b:5:6420-0:2621:1877","0:2625","0:396","0:398","0:400","0:402","0:404","0:406","0:408","0:410","0:412","0:443","0:468","0:482","0:484","0:486","0:490","0:492","0:496","0:499","0:503","0:507","0:510","0:514","0:517","0:521","0:524","0:527","0:531","0:535","0:537","0:539","0:924","0:1872","0:1876","0:2463"]}},"0:1691:181":{"id":"0:1691:181","crate_id":0,"name":"Output","span":{"filename":"src/naive/time/mod.rs","begin":[1066,4],"end":[1066,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"a:2:9407:7640-0:2845:2736":{"id":"a:2:9407:7640-0:2845:2736","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9407:7640","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2845:2736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2375:1888":{"id":"0:2375:1888","crate_id":0,"name":"Offset","span":{"filename":"src/offset/mod.rs","begin":[207,4],"end":[207,24]},"visibility":"default","docs":"An associated offset type.\nThis type is used to store the actual offset in date and time types.\nThe original `TimeZone` value can be recovered via `TimeZone::from_offset`.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Offset","id":"0:2372:1888","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}},"2:13607:64776":{"id":"2:13607:64776","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]","#[allow(deprecated)]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LinesAny","id":"2:49855:7172","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2863:97":{"id":"2:2863:97","crate_id":2,"name":"Borrow","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2865:2030"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:3411":{"id":"0:3411","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[40,16],"end":[40,25]},"visibility":{"restricted":{"parent":"0:1758:957","path":"::offset"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::cmp::PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3395:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3395:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:3413:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2872-0:2641:2445":{"id":"b:2:2872-0:2641:2445","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:7071","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2641:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:5915"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:23036:8824":{"id":"2:23036:8824","crate_id":2,"name":"SimdPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23037:8822","2:23038:1247","2:23039:1272"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:495:997":{"id":"0:495:997","crate_id":0,"name":"partial_cmp","span":{"filename":"src/datetime/mod.rs","begin":[836,4],"end":[838,5]},"visibility":"default","docs":"Compare two DateTimes based on their true time, ignoring time zones\n\n# Example\n\n```\nuse chrono::prelude::*;\n\nlet earlier = Utc.ymd(2015, 5, 15).and_hms(2, 0, 0).with_timezone(&FixedOffset::west(1 * 3600));\nlet later   = Utc.ymd(2015, 5, 15).and_hms(3, 0, 0).with_timezone(&FixedOffset::west(5 * 3600));\n\nassert_eq!(earlier.to_string(), \"2015-05-15 01:00:00 -01:00\");\nassert_eq!(later.to_string(), \"2015-05-14 22:00:00 -05:00\");\n\nassert!(later > earlier);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz2"}}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Ordering","id":"2:37761:178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2709":{"id":"0:2709","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[97,27],"end":[97,29]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2659:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:371:2074":{"id":"0:371:2074","crate_id":0,"name":"from_utc","span":{"filename":"src/datetime/mod.rs","begin":[113,4],"end":[115,5]},"visibility":"public","docs":"Makes a new `DateTime` with given *UTC* datetime and offset.\nThe local datetime should be constructed via the `TimeZone` trait.\n\n# Example\n\n```\nuse chrono::{DateTime, TimeZone, NaiveDateTime, Utc};\n\nlet dt = DateTime::<Utc>::from_utc(NaiveDateTime::from_timestamp(61, 0), Utc);\nassert_eq!(Utc.timestamp(61, 0), dt);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["datetime",{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["offset",{"kind":"qualified_path","inner":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Tz"},"trait":{"name":"","id":"0:2374:1889","args":null}}}]],"output":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3211:127":{"id":"2:3211:127","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}},"0:2398:2352":{"id":"0:2398:2352","crate_id":0,"name":"from_utc_datetime","span":{"filename":"src/offset/mod.rs","begin":[475,4],"end":[477,5]},"visibility":"default","docs":"Converts the UTC `NaiveDateTime` to the local time.\nThe UTC is continuous and thus this cannot fail (but can give the duplicate local time).","links":{},"attrs":["#[allow(clippy :: wrong_self_convention)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["utc",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1041:2172":{"id":"0:1041:2172","crate_id":0,"name":"new_with_offset","span":{"filename":"src/format/mod.rs","begin":[778,4],"end":[796,5]},"visibility":"public","docs":"Makes a new `DelayedFormat` value out of local date and time and UTC offset.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["date",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}],["time",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}],["offset",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Off"}}}],["items",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2927:2039","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Off","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Off"},"bounds":[{"trait_bound":{"trait":{"name":"Offset","id":"0:2372:1888","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"fmt::Display","id":"2:10447:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3561:997":{"id":"0:3561:997","crate_id":0,"name":"partial_cmp","span":{"filename":"src/month.rs","begin":[193,50],"end":[193,60]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Months","id":"0:3543:1910","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::option::Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Ordering","id":"2:37761:178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3208-0:3428:1906":{"id":"b:2:3208-0:3428:1906","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RoundingError","id":"0:3428:1906","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:6422:1397":{"id":"5:6422:1397","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2825":{"id":"0:2825","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[278,27],"end":[278,29]},"visibility":{"restricted":{"parent":"0:558:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2792:2040","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3213-0:2999:1886":{"id":"b:2:3213-0:2999:1886","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2338":{"id":"0:2338","crate_id":0,"name":null,"span":{"filename":"src/offset/utc.rs","begin":[78,0],"end":[98,1]},"visibility":{"restricted":{"parent":"0:2297:5700","path":"::offset::utc"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["datetime_from_str","timestamp_millis","yo","timestamp","from_local_datetime","timestamp_nanos","isoywd_opt","from_utc_date","from_utc_datetime","ymd","timestamp_millis_opt","timestamp_opt","from_local_date","yo_opt","ymd_opt","isoywd"],"trait":{"name":"TimeZone","id":"0:2374:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:3384:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2339:1888","0:2340:2131","0:2341:5785","0:2342:5787","0:2343:5791","0:2344:3098"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9408:7639-0:2936:1902":{"id":"a:2:9408:7639-0:2936:1902","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9408:7639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveWeek","id":"0:2936:1902","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3475":{"id":"0:3475","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[11,30],"end":[11,35]},"visibility":{"restricted":{"parent":"0:2490:1907","path":"::weekday"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:3446:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3476:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:453:2192":{"id":"0:453:2192","crate_id":0,"name":"iso_week","span":{"filename":"src/datetime/mod.rs","begin":[729,4],"end":[731,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"IsoWeek","id":"0:3052:1901","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3202-0:2761:2702":{"id":"b:2:3202-0:2761:2702","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2761:2702","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2479:2766":{"id":"0:2479:2766","crate_id":0,"name":"description","span":{"filename":"src/round.rs","begin":[299,4],"end":[301,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1262":{"id":"0:1262","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[1745,0],"end":[1750,1]},"visibility":{"restricted":{"parent":"0:1062:1890","path":"::naive::date"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"SubAssign","id":"2:3372:2034","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Duration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1263:1356"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2740:2697":{"id":"0:2740:2697","crate_id":0,"name":"TimezoneOffset","span":{"filename":"src/format/mod.rs","begin":[236,4],"end":[236,18]},"visibility":"default","docs":"Same as [`TimezoneOffsetColon`](#variant.TimezoneOffsetColon) but prints no colon.\nParsing allows an optional colon.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:383:957":{"id":"0:383:957","crate_id":0,"name":"offset","span":{"filename":"src/datetime/mod.rs","begin":[305,4],"end":[307,5]},"visibility":"public","docs":"Retrieves an associated offset from UTC.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Tz"},"trait":{"name":"","id":"0:2374:1889","args":null}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13605:37323":{"id":"2:13605:37323","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_whitespace":"1:15992:6928"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_ascii_whitespace\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitAsciiWhitespace","id":"2:49874:7187","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1583:5238":{"id":"0:1583:5238","crate_id":0,"name":"week0","span":{"filename":"src/naive/isoweek.rs","begin":[108,4],"end":[110,5]},"visibility":"public","docs":"Returns the ISO week number starting from 0.\n\nThe return value ranges from 0 to 52. (The last week of year differs by years.)\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike, Weekday};\n\nlet d = NaiveDate::from_isoywd(2015, 15, Weekday::Mon);\nassert_eq!(d.iso_week().week0(), 14);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2797:2720":{"id":"0:2797:2720","crate_id":0,"name":"OwnedLiteral","span":{"filename":"src/format/mod.rs","begin":[284,4],"end":[284,26]},"visibility":"default","docs":"Same as `Literal` but with the string owned by the item.","links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:2593","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}]}},"b:2:3213-0:3482:1908":{"id":"b:2:3213-0:3482:1908","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:3482:1908","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3213-0:3395:1903":{"id":"b:2:3213-0:3395:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3395:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2999:1886":{"id":"0:2999:1886","crate_id":0,"name":"NaiveDateTime","span":{"filename":"src/naive/datetime/mod.rs","begin":[76,0],"end":[79,1]},"visibility":"public","docs":"ISO 8601 combined date and time without timezone.\n\n# Example\n\n`NaiveDateTime` is commonly created from [`NaiveDate`](./struct.NaiveDate.html).\n\n```\nuse chrono::{NaiveDate, NaiveDateTime};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd(2016, 7, 8).and_hms(9, 10, 11);\n# let _ = dt;\n```\n\nYou can use typical [date-like](../trait.Datelike.html) and\n[time-like](../trait.Timelike.html) methods,\nprovided that relevant traits are in the scope.\n\n```\n# use chrono::{NaiveDate, NaiveDateTime};\n# let dt: NaiveDateTime = NaiveDate::from_ymd(2016, 7, 8).and_hms(9, 10, 11);\nuse chrono::{Datelike, Timelike, Weekday};\n\nassert_eq!(dt.weekday(), Weekday::Fri);\nassert_eq!(dt.num_seconds_from_midnight(), 33011);\n```","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:1388","a:2:3310:7473-0:2999:1886","a:2:9408:7639-0:2999:1886","a:2:3269:211-0:2999:1886","a:2:9407:7640-0:2999:1886","a:2:3281:220-0:2999:1886","b:2:2869-0:2999:1886","b:2:4002-0:2999:1886","b:2:3198-0:2999:1886","b:2:2872-0:2999:1886","b:2:3208-0:2999:1886","b:2:3202-0:2999:1886","b:2:3213-0:2999:1886","b:5:787-0:2999:1886","b:5:6420-0:2999:1886","0:3002","0:3003","0:3005","0:3006","0:3008","0:3011","0:3013","0:3015","0:3016","0:1417","0:1441","0:1454","0:1457","0:1459","0:1462","0:1464","0:1467","0:1469","0:1471","0:1475","0:1866","0:1869","0:2468"]}},"23:572:7303":{"id":"23:572:7303","crate_id":23,"name":"CheckedAdd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:573:3045"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Add","id":"2:3337:2031","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2509":{"id":"0:2509","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[203,0],"end":[207,1]},"visibility":{"restricted":{"parent":"0:2490:1907","path":"::weekday"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10440:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:3482:1908","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2510:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1860":{"id":"0:1860","crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[168,0],"end":[175,1]},"visibility":{"restricted":{"parent":"0:1795:5699","path":"::offset::fixed"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Add","id":"2:3337:2031","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1861:181","0:1862:265"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2283:5785":{"id":"0:2283:5785","crate_id":0,"name":"offset_from_local_date","span":{"filename":"src/offset/local/mod.rs","begin":[97,4],"end":[99,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["local",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3395:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6111:65429":{"id":"5:6111:65429","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`String`":"5:8368:216","`Box<str>`":"5:432:2593"},"attrs":["#[stable(feature = \"box_str\", since = \"1.4.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:2593","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8113:8279","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13672:64786":{"id":"2:13672:64786","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4002-0:2831:1898":{"id":"b:2:4002-0:2831:1898","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2831:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3310:7473-0:2792:2040":{"id":"a:2:3310:7473-0:2792:2040","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:7473","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2792:2040","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1714":{"id":"0:1714","crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[14,21],"end":[14,30]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"self::date::NaiveDate","name":"NaiveDate","id":"0:2941:1885","glob":false}},"0:2879:2952":{"id":"0:2879:2952","crate_id":0,"name":"isoyear_mod_100","span":{"filename":"src/format/parsed.rs","begin":[59,4],"end":[59,36]},"visibility":"public","docs":"Year in the [ISO week date](../naive/struct.NaiveDate.html#week-date), modulo 100.\nImplies that the year is >= 1 BCE when set.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i32"}}],"bindings":[]}}}}},"2:3310:7473":{"id":"2:3310:7473","crate_id":2,"name":"Unpin","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:421:2404":{"id":"0:421:2404","crate_id":0,"name":"parse_from_rfc3339","span":{"filename":"src/datetime/mod.rs","begin":[506,4],"end":[511,5]},"visibility":"public","docs":"Parses an RFC 3339 and ISO 8601 date and time string such as `1996-12-19T16:39:57-08:00`,\nthen returns a new [`DateTime`] with a parsed [`FixedOffset`].\n\nWhy isn't this named `parse_from_iso8601`? That's because ISO 8601 allows some freedom\nover the syntax and RFC 3339 exercises that freedom to rigidly define a fixed format.","links":{"`FixedOffset`":"0:3086:1883","`DateTime`":"0:2621:1877"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:632:1899","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2621:1877","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8556:7474":{"id":"2:8556:7474","crate_id":2,"name":"Extend","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8558:7875","2:8560:7876","2:8561:7877"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1183:3057":{"id":"0:1183:3057","crate_id":0,"name":"from_yo_opt","span":{"filename":"src/naive/date.rs","begin":[315,4],"end":[318,5]},"visibility":"public","docs":"Makes a new `NaiveDate` from the [ordinal date](#ordinal-date)\n(year and day of the year).\n\nReturns `None` on the out-of-range date and/or invalid day of year.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet from_yo_opt = NaiveDate::from_yo_opt;\n\nassert!(from_yo_opt(2015, 100).is_some());\nassert!(from_yo_opt(2015, 0).is_none());\nassert!(from_yo_opt(2015, 365).is_some());\nassert!(from_yo_opt(2015, 366).is_none());\nassert!(from_yo_opt(-4, 366).is_some()); // 5 BCE is a leap year\nassert!(from_yo_opt(400000, 1).is_none());\nassert!(from_yo_opt(-400000, 1).is_none());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["year",{"kind":"primitive","inner":"i32"}],["ordinal",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2941:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2730:2461":{"id":"0:2730:2461","crate_id":0,"name":"Nanosecond6","span":{"filename":"src/format/mod.rs","begin":[214,4],"end":[214,15]},"visibility":"default","docs":"Same as [`Nanosecond`](#variant.Nanosecond) but the accuracy is fixed to 6.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2641:2445":{"id":"0:2641:2445","crate_id":0,"name":"Pad","span":{"filename":"src/format/mod.rs","begin":[75,0],"end":[82,1]},"visibility":"public","docs":"Padding characters for numeric items.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:2642:174","0:2644:2446","0:2646:2604"],"impls":["a:2:3310:7473-0:2641:2445","a:2:9408:7639-0:2641:2445","a:2:3269:211-0:2641:2445","a:2:9407:7640-0:2641:2445","a:2:3281:220-0:2641:2445","b:2:2869-0:2641:2445","b:2:4002-0:2641:2445","b:2:3198-0:2641:2445","b:2:2872-0:2641:2445","b:2:3208-0:2641:2445","b:2:3202-0:2641:2445","b:2:3213-0:2641:2445","b:5:787-0:2641:2445","0:2648","0:2649","0:2651","0:2652","0:2654","0:2655","0:2657"]}},"b:2:3202-0:2936:1902":{"id":"b:2:3202-0:2936:1902","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveWeek","id":"0:2936:1902","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1027":{"id":"0:1027","crate_id":0,"name":null,"span":{"filename":"src/format/strftime.rs","begin":[256,0],"end":[475,1]},"visibility":{"restricted":{"parent":"0:995:2597","path":"::format::strftime"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["scan","gt","is_sorted_by","collect","array_chunks","try_reduce","cmp","partition_in_place","eq","fuse","peekable","step_by","ge","count","is_sorted_by_key","product","take","any","find_map","is_partitioned","cloned","inspect","all","skip_while","cycle","intersperse","position","__iterator_get_unchecked","cmp_by","enumerate","try_find","min_by","try_fold","by_ref","take_while","intersperse_with","lt","rev","min","rposition","min_by_key","try_for_each","skip","try_collect","max","map_while","sum","for_each","partial_cmp","next_chunk","find","partial_cmp_by","eq_by","last","unzip","chain","fold","max_by","collect_into","flat_map","filter","ne","advance_by","is_sorted","copied","max_by_key","reduce","zip","partition","le","flatten","filter_map","map","nth","size_hint"],"trait":{"name":"Iterator","id":"2:8748:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2908:2041","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:1029:2040","0:1030:922"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:772:2991":{"id":"0:772:2991","crate_id":0,"name":"set_isoyear_div_100","span":{"filename":"src/format/parsed.rs","begin":[166,4],"end":[171,5]},"visibility":"public","docs":"Tries to set the [`isoyear_div_100`](#structfield.isoyear_div_100) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["value",{"kind":"primitive","inner":"i64"}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:632:1899","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:2927:2039":{"id":"b:2:3213-0:2927:2039","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2927:2039","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"23:796:7327":{"id":"23:796:7327","crate_id":23,"name":"Pow","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:798:181","23:799:7280"],"generics":{"params":[{"name":"RHS","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:206":{"id":"0:206","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[456,0],"end":[460,1]},"visibility":{"restricted":{"parent":"0:61:1890","path":"::date"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:2374:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"Tz2","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:2374:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz2"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:209:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2869-0:3428:1906":{"id":"b:2:2869-0:3428:1906","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RoundingError","id":"0:3428:1906","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:2030"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2351":{"id":"0:2351","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[37,0],"end":[37,23]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::utc::Utc","name":"Utc","id":"0:3384:1884","glob":false}},"0:1468:660":{"id":"0:1468:660","crate_id":0,"name":"fmt","span":{"filename":"src/naive/datetime/mod.rs","begin":[1432,4],"end":[1434,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10400:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10389:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2569:2198":{"id":"0:2569:2198","crate_id":0,"name":"with_ordinal","span":{"filename":"src/traits.rs","begin":[84,4],"end":[84,57]},"visibility":"default","docs":"Makes a new value with the day of year (starting from 1) changed.\n\nReturns `None` when the resulting value would be invalid.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["ordinal",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:3281:220-0:2590:1872":{"id":"a:2:3281:220-0:2590:1872","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Tz"},"trait":{"name":"TimeZone","id":"0:2374:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2590:1872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3447:2814":{"id":"0:3447:2814","crate_id":0,"name":"Mon","span":{"filename":"src/weekday.rs","begin":[16,4],"end":[16,11]},"visibility":"default","docs":"Monday.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"a:2:3281:220-0:3395:1903":{"id":"a:2:3281:220-0:3395:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:3395:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1688:2483":{"id":"0:1688:2483","crate_id":0,"name":"with_nanosecond","span":{"filename":"src/naive/time/mod.rs","begin":[989,4],"end":[994,5]},"visibility":"default","docs":"Makes a new `NaiveTime` with nanoseconds since the whole non-leap second changed.\n\nReturns `None` when the resulting `NaiveTime` would be invalid.\nAs with the [`nanosecond`](#method.nanosecond) method,\nthe input range can exceed 1,000,000,000 for leap seconds.\n\n# Example\n\n```\nuse chrono::{NaiveTime, Timelike};\n\nlet dt = NaiveTime::from_hms_nano(23, 56, 4, 12_345_678);\nassert_eq!(dt.with_nanosecond(333_333_333),\n           Some(NaiveTime::from_hms_nano(23, 56, 4, 333_333_333)));\nassert_eq!(dt.with_nanosecond(2_000_000_000), None);\n```\n\nLeap seconds can theoretically follow *any* whole second.\nThe following would be a proper leap second at the time zone offset of UTC-00:03:57\n(there are several historical examples comparable to this \"non-sense\" offset),\nand therefore is allowed.\n\n```\n# use chrono::{NaiveTime, Timelike};\n# let dt = NaiveTime::from_hms_nano(23, 56, 4, 12_345_678);\nassert_eq!(dt.with_nanosecond(1_333_333_333),\n           Some(NaiveTime::from_hms_nano(23, 56, 4, 1_333_333_333)));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["nano",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3088":{"id":"0:3088","crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[25,9],"end":[25,18]},"visibility":{"restricted":{"parent":"0:1795:5699","path":"::offset::fixed"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:3086:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:766":{"id":"0:766","crate_id":0,"name":null,"span":{"filename":"src/format/parsed.rs","begin":[128,0],"end":[695,1]},"visibility":{"restricted":{"parent":"0:705:2399","path":"::format::parsed"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Parsed","id":"0:2873:2237","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:767:920","0:768:2980","0:769:2985","0:770:2987","0:771:2989","0:772:2991","0:773:2993","0:774:2995","0:775:2998","0:776:3000","0:777:3002","0:778:3004","0:779:3006","0:780:3008","0:781:3011","0:782:3014","0:783:3017","0:784:3019","0:785:3021","0:786:3023","0:787:3025","0:788:3027","0:789:3036","0:797:3069","0:798:3078","0:809:3085","0:810:2400","0:811:3096"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1665:4802":{"id":"0:1665:4802","crate_id":0,"name":"overflowing_add_signed","span":{"filename":"src/naive/time/mod.rs","begin":[539,4],"end":[600,5]},"visibility":"public","docs":"Adds given `Duration` to the current time,\nand also returns the number of *seconds*\nin the integral number of days ignored from the addition.\n(We cannot return `Duration` because it is subject to overflow or underflow.)\n\n# Example\n\n```\nuse chrono::{Duration, NaiveTime};\n\nlet from_hms = NaiveTime::from_hms;\n\nassert_eq!(from_hms(3, 4, 5).overflowing_add_signed(Duration::hours(11)),\n           (from_hms(14, 4, 5), 0));\nassert_eq!(from_hms(3, 4, 5).overflowing_add_signed(Duration::hours(23)),\n           (from_hms(2, 4, 5), 86_400));\nassert_eq!(from_hms(3, 4, 5).overflowing_add_signed(Duration::hours(-7)),\n           (from_hms(20, 4, 5), -86_400));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"tuple","inner":[{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},{"kind":"primitive","inner":"i64"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3208-0:2641:2445":{"id":"b:2:3208-0:2641:2445","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2641:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:787-0:2845:2736":{"id":"b:5:787-0:2845:2736","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2845:2736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:7921","5:790:7922","5:791:7923"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2906:59":{"id":"0:2906:59","crate_id":0,"name":"default","span":{"filename":"src/format/parsed.rs","begin":[25,38],"end":[25,45]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Parsed","id":"0:2873:2237","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2869-0:2792:2040":{"id":"b:2:2869-0:2792:2040","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2792:2040","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2871:2030"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2525:6797":{"id":"0:2525:6797","crate_id":0,"name":"number_from_month","span":{"filename":"src/month.rs","begin":[113,4],"end":[128,5]},"visibility":"public","docs":"Returns a month-of-year number starting from January = 1.\n\n`m`:                     | `January` | `February` | `...` | `December`\n-------------------------| --------- | ---------- | --- | -----\n`m.number_from_month()`: | 1         | 2          | `...` | 12","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2840:604":{"id":"0:2840:604","crate_id":0,"name":"eq","span":{"filename":"src/format/mod.rs","begin":[336,23],"end":[336,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2831:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8510:8373":{"id":"2:8510:8373","crate_id":2,"name":"Product","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8512:7913"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2876:2941":{"id":"0:2876:2941","crate_id":0,"name":"year_mod_100","span":{"filename":"src/format/parsed.rs","begin":[41,4],"end":[41,33]},"visibility":"public","docs":"Year modulo 100. Implies that the year is >= 1 BCE when set.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i32"}}],"bindings":[]}}}}},"0:2850:2748":{"id":"0:2850:2748","crate_id":0,"name":"NotEnough","span":{"filename":"src/format/mod.rs","begin":[363,4],"end":[363,13]},"visibility":"default","docs":"Given set of fields is not enough to make a requested date and time value.\n\nNote that there *may* be a case that given fields constrain the possible values so much\nthat there is a unique possible value. Chrono only tries to be correct for\nmost useful sets of fields however, as such constraint solving can be expensive.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:1441":{"id":"0:1441","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1064,0],"end":[1225,1]},"visibility":{"restricted":{"parent":"0:1291:1893","path":"::naive::datetime"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hour12","num_seconds_from_midnight"],"trait":{"name":"Timelike","id":"0:2572:1881","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1442:2087","0:1443:2477","0:1444:2478","0:1445:2479","0:1446:2480","0:1448:2481","0:1450:2482","0:1452:2483"],"negative":false,"synthetic":false,"blanket_impl":null}},"23:844:7268":{"id":"23:844:7268","crate_id":23,"name":"Num","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:845:66629","23:846:9146"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Zero","id":"23:466:2446","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"One","id":"23:476:7301","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"NumOps","id":"23:847:7281","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:3281:220-0:3067:1887":{"id":"a:2:3281:220-0:3067:1887","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:3067:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2950:715":{"id":"0:2950:715","crate_id":0,"name":"hash","span":{"filename":"src/naive/date.rs","begin":[166,24],"end":[166,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10688:146","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:6420-0:2999:1886":{"id":"b:5:6420-0:2999:1886","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10447:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:5720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:6418:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:6422:1397"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3202-0:2999:1886":{"id":"b:2:3202-0:2999:1886","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2999:1886","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3310:7473-0:614:2656":{"id":"a:2:3310:7473-0:614:2656","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:7473","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:614:2656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1442:2087":{"id":"0:1442:2087","crate_id":0,"name":"hour","span":{"filename":"src/naive/datetime/mod.rs","begin":[1078,4],"end":[1080,5]},"visibility":"default","docs":"Returns the hour number from 0 to 23.\n\nSee also the [`NaiveTime::hour`] method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Timelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 8).and_hms_milli(12, 34, 56, 789);\nassert_eq!(dt.hour(), 12);\n```","links":{"`NaiveTime::hour`":"0:3067:1887"},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"paths":{"6:3896:10447":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"2:8556:7474":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"2:46904:8382":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"16:4599:11980":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"0:2714:2666":{"crate_id":0,"path":["chrono","format","Fixed","ShortMonthName"],"kind":"variant"},"17:10266:9918":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"21:4270:10639":{"crate_id":21,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"21:4519:10753":{"crate_id":21,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"1:14617:118":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"18:637:11166":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"17:11563:11338":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"17:510:13108":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"21:4355:10684":{"crate_id":21,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"16:7379:9593":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"9:927:49250":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"1:12057:8658":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"17:12607:11536":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"2:49795:7179":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"5:8128:9294":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"2:49759:7182":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"17:11002:13153":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"17:13257:11745":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"17:9746:13114":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"1:15335:8707":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"2:4783:8303":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"1:12403:8181":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"12:2036:7878":{"crate_id":12,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"2:48925:7930":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"2:3247:115":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"16:7131:9666":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"2:11559:7177":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"6:1576:10326":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"21:5399:10908":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"5:1674:8577":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"21:6908:11145":{"crate_id":21,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"5:5903:1340":{"crate_id":5,"path":["alloc","str"],"kind":"module"},"20:556:7034":{"crate_id":20,"path":["time","TmFmt"],"kind":"struct"},"0:2696:2463":{"crate_id":0,"path":["chrono","format","Numeric","Nanosecond"],"kind":"variant"},"6:6688:11140":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"6:5240:10814":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"21:6237:11116":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"1:3736:7425":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"2:56455:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:1438:7878":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"2:56403:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"17:11671:11351":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"5:8390:7121":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"2:3358:7088":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"16:6604:9654":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"6:1588:10335":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"2:48182:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"1:7310:13192":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:53215:8941":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"12:952:8580":{"crate_id":12,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"0:632:1899":{"crate_id":0,"path":["chrono","format","ParseResult"],"kind":"typedef"},"21:6919:11149":{"crate_id":21,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"16:7721:9583":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"17:10851:11303":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"18:720:11168":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"5:7460:10130":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"5:5833:7364":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"2:46190:7238":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"1:5819:8531":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"2:3352:7085":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"2:11082:214":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"17:9796:65943":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"17:1311:10000":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"23:722:7319":{"crate_id":23,"path":["num_traits","ops","saturating","SaturatingSub"],"kind":"trait"},"21:1550:10315":{"crate_id":21,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"1:12257:8676":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"2:10443:109":{"crate_id":2,"path":["core","fmt","macros","Debug"],"kind":"proc_derive"},"2:3275:7348":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"16:7826:4427":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"0:2845:2736":{"crate_id":0,"path":["chrono","format","ParseErrorKind"],"kind":"enum"},"2:51272:8933":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"1:5398:8708":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"17:13774:11898":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"6:4485:10738":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"2:3758:8798":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"21:4349:10681":{"crate_id":21,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"12:1784:10128":{"crate_id":12,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"1:15989:6925":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"17:9561:9933":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"2:3337:2031":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"21:3900:10455":{"crate_id":21,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"5:3970:10130":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"2:47888:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"21:4021:10528":{"crate_id":21,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"17:10503:9941":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"16:6331:9488":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"2:5631:779":{"crate_id":2,"path":["core","iter"],"kind":"module"},"1:7701:5876":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"16:4716:11984":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"2:6514:8389":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"16:7471:9568":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"16:5516:9803":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"21:3980:10507":{"crate_id":21,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"1:1190:16245":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"12:1147:8585":{"crate_id":12,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"17:12482:11508":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"23:724:7318":{"crate_id":23,"path":["num_traits","ops","saturating","SaturatingMul"],"kind":"trait"},"17:11810:11385":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"2:56046:8905":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"1:8051:8139":{"crate_id":1,"path":["std","sync","mpsc","oneshot","Packet"],"kind":"struct"},"17:13463:11796":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"1:5807:8537":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"17:10435:9901":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"1:13932:12674":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"6:1694:10402":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"0:2659:2444":{"crate_id":0,"path":["chrono","format","Numeric"],"kind":"enum"},"16:7309:9575":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"5:3300:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"17:10058:9999":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"17:9087:51478":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"18:645:10024":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"6:4509:10745":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"2:3519:130":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"17:12406:11498":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"17:9883:65942":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"1:14812:8658":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"2:47685:7878":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"2:47753:205":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"21:6199:11096":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"17:12634:11538":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"6:1704:10408":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"2:22761:63923":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"17:9836:65940":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"0:614:2656":{"crate_id":0,"path":["chrono","format","InternalNumeric"],"kind":"struct"},"2:13232:7160":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"0:2803:2723":{"crate_id":0,"path":["chrono","format","Item","OwnedSpace"],"kind":"variant"},"5:5889:10141":{"crate_id":5,"path":["alloc","slice","merge","MergeHole"],"kind":"struct"},"16:2733:9543":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"17:10445:11218":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"5:1215:9302":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"5:7264:10130":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"17:10598:13137":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"5:994:9293":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"21:154:44294":{"crate_id":21,"path":["libc","unix","fpos_t"],"kind":"enum"},"2:23248:21420":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"2:50334:7158":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"12:880:8281":{"crate_id":12,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"14:0:6904":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"3:0:430":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"9:234:9364":{"crate_id":9,"path":["miniz_oxide","deflate","core","HuffmanOxide"],"kind":"struct"},"15:0:6905":{"crate_id":15,"path":["addr2line"],"kind":"module"},"21:0:798":{"crate_id":21,"path":["libc"],"kind":"module"},"16:3297:9885":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"2:47821:178":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"21:6948:11156":{"crate_id":21,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"0:2668:2625":{"crate_id":0,"path":["chrono","format","Numeric","IsoYearDiv100"],"kind":"variant"},"2:2187:578":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"17:12455:11505":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"21:3889:10447":{"crate_id":21,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"6:6080:11032":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"17:11031:51481":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"21:514:10232":{"crate_id":21,"path":["libc","unix","utimbuf"],"kind":"struct"},"6:6931:11150":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"1:16001:6935":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"2:47694:7636":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"1:15033:59772":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"23:796:7327":{"crate_id":23,"path":["num_traits","pow","Pow"],"kind":"trait"},"17:13029:11673":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"17:10586:13136":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"21:6244:11119":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"17:11907:11396":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"1:3134:5911":{"crate_id":1,"path":["std","fs"],"kind":"module"},"1:8404:8139":{"crate_id":1,"path":["std","sync","mpsc","sync","Packet"],"kind":"struct"},"23:752:7325":{"crate_id":23,"path":["num_traits","ops","wrapping","WrappingSub"],"kind":"trait"},"17:10925:13147":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"1:11420:8776":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"21:3959:10498":{"crate_id":21,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"2:21:672":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"17:10455:9937":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"2:49390:9101":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"2:9529:7131":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"21:5295:10845":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"21:1626:10354":{"crate_id":21,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"2:3310:7473":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"2:32469:8277":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"6:4218:10617":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"2:53339:8926":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"1:15185:8629":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"2:49491:9108":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"12:1682:9483":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"5:7831:10143":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"5:8269:8593":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"1:1530:8582":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"5:1607:8112":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"21:4333:10673":{"crate_id":21,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"17:11457:11329":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"17:607:13109":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"6:4075:10550":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"2:47804:8112":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"21:6208:11099":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"1:5008:8554":{"crate_id":1,"path":["std","net","addr","ToSocketAddrs"],"kind":"trait"},"16:5698:9630":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"2:46884:8396":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"1:7816:8659":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"15:269:9496":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"17:11181:11320":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"6:6671:11131":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"2:46117:7107":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"1:12740:7369":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"0:2684:2638":{"crate_id":0,"path":["chrono","format","Numeric","WeekdayFromMon"],"kind":"variant"},"17:10489:11267":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"17:2543:9935":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"1:15491:9500":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"2:13227:7161":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"5:1441:8583":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"1:15736:10186":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"5:7649:8287":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"5:8210:7878":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"2:8307:13458":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"20:426:7036":{"crate_id":20,"path":["time","duration","OutOfRangeError"],"kind":"struct"},"16:5649:9627":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"16:6691:9655":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"2:22742:63924":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"1:11682:7462":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"16:5326:9613":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"16:5784:9633":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"2:49874:7187":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"2:49890:7184":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"6:4410:10706":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"21:6262:11122":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"1:9658:10173":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutexGuard"],"kind":"struct"},"17:13016:11667":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"2:46678:13183":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"5:1472:8584":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"17:12170:11443":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"5:1644:8574":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"17:11603:11343":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"17:10660:51665":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"1:6719:11024":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"0:645:2776":{"crate_id":0,"path":["chrono","format","format_item"],"kind":"function"},"2:10723:7927":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"2:48962:6226":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"1:10838:7372":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"16:6643:9859":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"21:1523:10304":{"crate_id":21,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"2:11311:7175":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"17:13138:11715":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"17:13440:11791":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"17:294:13106":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"2:3577:7105":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"1:4078:205":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"17:12512:11513":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"21:6937:11152":{"crate_id":21,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"21:1704:10409":{"crate_id":21,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"1:11413:8556":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"6:6856:11141":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"5:8445:8281":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"5:6961:9234":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"17:11937:11404":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"2:6591:8379":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"2:22910:8819":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"2:8748:157":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"0:1061:1900":{"crate_id":0,"path":["chrono","naive"],"kind":"module"},"6:1669:10383":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"17:12543:11518":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"17:8954:9932":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"0:2718:2671":{"crate_id":0,"path":["chrono","format","Fixed","ShortWeekdayName"],"kind":"variant"},"2:52229:8960":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"17:10240:9890":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"6:4321:10664":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"0:995:2597":{"crate_id":0,"path":["chrono","format","strftime"],"kind":"module"},"1:10848:7373":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"2:3734:137":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"5:8137:7123":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"16:2937:9846":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"2:49330:9097":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"16:4381:11974":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"1:15009:8656":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"2:2062:7406":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"16:7063:9660":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"6:1740:10421":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"21:5305:10852":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"2:3423:7098":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"17:12731:11551":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"6:4440:10717":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"2:4885:7350":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"17:9587:65935":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"2:47106:8364":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"1:6581:8509":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"2:50176:8865":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"21:6123:11045":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"12:379:9477":{"crate_id":12,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"17:13247:11744":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"6:4208:10616":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"2:46555:9211":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"2:5111:7238":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"1:2456:8181":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"2:77:1491":{"crate_id":2,"path":["core","usize"],"kind":"module"},"2:23036:8824":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"0:2720:2673":{"crate_id":0,"path":["chrono","format","Fixed","LongWeekdayName"],"kind":"variant"},"16:7659:9671":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"2:49741:7181":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"18:712:7072":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"21:5561:10962":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"1:16005:6939":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"17:12383:11497":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"20:0:1556":{"crate_id":20,"path":["time"],"kind":"module"},"16:3177:9828":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"0:2761:2702":{"crate_id":0,"path":["chrono","format","InternalFixed"],"kind":"struct"},"22:109:7256":{"crate_id":22,"path":["num_integer","Integer"],"kind":"trait"},"17:12469:11507":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"2:46156:7213":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"1:13585:12673":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"21:5325:10868":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"17:11212:9959":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"21:6925:11150":{"crate_id":21,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"1:4394:8692":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"1:15998:6932":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"23:403:58050":{"crate_id":23,"path":["num_traits","float","FloatCore"],"kind":"trait"},"17:13352:11768":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"21:4339:10675":{"crate_id":21,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"21:6010:11004":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"12:895:9462":{"crate_id":12,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"6:1727:10418":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"17:13735:11887":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"1:11155:7168":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"16:7264:194":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"1:10390:11324":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"1:10669:16241":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"2:46487:7186":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"5:1843:10130":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"9:1020:9406":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"21:5482:10936":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"17:11234:9957":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"1:12189:8619":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"2:51873:8928":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"2:47113:8063":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"5:4443:7460":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"16:5902:9635":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"1:1075:8570":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"17:13917:11937":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"2:51204:8965":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"1:15059:7023":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"1:11089:7436":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"2:32635:63917":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum64"],"kind":"enum"},"2:3525:132":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"16:5685:9629":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"21:4223:10626":{"crate_id":21,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"2:24367:12383":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"23:333:5076":{"crate_id":23,"path":["num_traits","cast","FromPrimitive"],"kind":"trait"},"23:307:2926":{"crate_id":23,"path":["num_traits","cast","ToPrimitive"],"kind":"trait"},"21:520:10235":{"crate_id":21,"path":["libc","unix","timeval"],"kind":"struct"},"16:7025:9563":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"2:53499:12496":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"2:2292:8914":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"17:13428:11785":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"21:5180:10788":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"1:15996:6930":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"17:10390:9938":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"6:6268:11122":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"2:50114:8862":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"2:23089:8515":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"6:5229:10806":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"5:6264:8286":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"6:88:44227":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"6:1721:10415":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"4:0:6898":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"23:0:1929":{"crate_id":23,"path":["num_traits"],"kind":"module"},"5:8183:9239":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"2:46051:198":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"2:32295:7353":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"1:8498:202":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"18:896:10020":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"18:668:10026":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"1:2594:13191":{"crate_id":1,"path":["std","error","from","StringError"],"kind":"struct"},"2:51457:8938":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"12:979:8582":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"1:16000:6934":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"6:5149:10762":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"6:4493:10740":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"2:10461:7228":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"5:69:8280":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"1:16004:6938":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"2:32535:63916":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum32"],"kind":"enum"},"2:46512:7185":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"1:10981:6129":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"6:3907:10455":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"21:558:10260":{"crate_id":21,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"16:6858:9866":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"2:10389:205":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"2:3368:2032":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"2:53583:12502":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"1:15952:5917":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"17:9431:11257":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"17:10814:9986":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"16:3521:11965":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"2:8543:136":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"21:5198:10801":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"1:9618:10172":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"16:6089:9639":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"2:3372:2034":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"2:50375:9164":{"crate_id":2,"path":["core","time","FromFloatSecsErrorKind"],"kind":"enum"},"21:4457:10731":{"crate_id":21,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"6:593:10275":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"2:49501:9109":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"2:2283:8913":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"17:11653:11350":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"17:11013:13154":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"2:48628:67":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"17:11822:11388":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"5:6418:223":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"16:6656:9860":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"1:6814:8519":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"21:6114:11041":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"17:9676:65938":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"2:24209:12367":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"21:5976:10985":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"6:1537:10307":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"6:5488:10936":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"2:4740:8848":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"2:2921:183":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"1:1488:8575":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"2:3435:7101":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"12:432:9475":{"crate_id":12,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"6:6665:11129":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"2:51334:8954":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"6:6097:11034":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"6:4012:10523":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"1:9367:8549":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"9:603:13313":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"1:16007:6941":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"6:6908:11144":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"23:4513:7289":{"crate_id":23,"path":["num_traits","ParseFloatError"],"kind":"struct"},"2:5039:7340":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"6:4446:10720":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"6:5331:10868":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"24:24:8218":{"crate_id":24,"path":["iana_time_zone","GetTimezoneError"],"kind":"enum"},"6:612:10285":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"21:1559:10320":{"crate_id":21,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"21:6637:11128":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"2:49855:7172":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"1:15957:16246":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"0:2374:1889":{"crate_id":0,"path":["chrono","offset","TimeZone"],"kind":"trait"},"1:8505:8614":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"6:4434:10716":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"17:9240:9894":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"23:236:58022":{"crate_id":23,"path":["num_traits","bounds","LowerBounded"],"kind":"trait"},"17:10571:9988":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"2:47736:7740":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"14:244:12217":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"2:5208:7240":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"17:13522:11814":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"12:971:8581":{"crate_id":12,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"21:4005:10523":{"crate_id":21,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"21:6074:11032":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"21:4308:10661":{"crate_id":21,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"9:749:9341":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLStatus"],"kind":"enum"},"2:49419:9104":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"2:23152:8822":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"23:233:7296":{"crate_id":23,"path":["num_traits","bounds","Bounded"],"kind":"trait"},"2:3775:7116":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"1:15992:6928":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"17:11628:11348":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"17:10048:13122":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"2:47140:8368":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"16:7281:9576":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"1:15991:6927":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"6:4538:10758":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"2:24284:12373":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"2:7033:8401":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"5:8302:9265":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"17:11354:9926":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"2:24:600":{"crate_id":2,"path":["core","env"],"kind":"macro"},"0:2680:1901":{"crate_id":0,"path":["chrono","format","Numeric","IsoWeek"],"kind":"variant"},"2:24748:172":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"6:5288:10839":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"2:23093:8550":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"0:2700:2655":{"crate_id":0,"path":["chrono","format","Numeric","Internal"],"kind":"variant"},"2:8001:8846":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"16:5948:9820":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"17:11514:11335":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"5:3772:8112":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"1:4300:7392":{"crate_id":1,"path":["std","io","readbuf","ReadBuf"],"kind":"struct"},"16:7247:9604":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"2:52419:8936":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"1:11376:8711":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"2:51356:8958":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"6:6027:11009":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"2:53534:12499":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"21:1672:10391":{"crate_id":21,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"16:3029:9826":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"2:56481:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"5:5415:7406":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"6:4416:10707":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"23:466:2446":{"crate_id":23,"path":["num_traits","identities","Zero"],"kind":"trait"},"21:4280:10646":{"crate_id":21,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"16:7200:9589":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"2:5185:7241":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"6:6954:11156":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"2:3648:7108":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"1:696:7781":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"2:46774:8387":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"14:216:49828":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"17:13271:11746":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"2:48266:9157":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"17:11085:9961":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"1:6885:8523":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"2:25012:7355":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"22:37:7270":{"crate_id":22,"path":["num_integer","roots","Roots"],"kind":"trait"},"5:7856:10147":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"2:2957:177":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"17:10364:9968":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"1:2177:8601":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"1:4397:8693":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"2:47669:7460":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"1:14942:10184":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"2:51475:12488":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"16:3314:9812":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"21:5992:10997":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"21:6108:11039":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"2:48646:70":{"crate_id":2,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"1:2793:7207":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"2:46176:4427":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"2:46783:8388":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"5:8113:8279":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"17:12070:11427":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"17:13377:11773":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"2:48056:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"17:12183:11445":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"6:5455:10928":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"1:8434:9288":{"crate_id":1,"path":["std","sync","mpsc","sync","Node"],"kind":"struct"},"5:3759:7460":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"17:13495:11807":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"21:1732:10421":{"crate_id":21,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"2:23298:8822":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"2:46423:8996":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"21:1713:10415":{"crate_id":21,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"6:607:10283":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"16:6931:9869":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"21:5234:10814":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"2:50165:8864":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"21:538:10243":{"crate_id":21,"path":["libc","unix","rusage"],"kind":"struct"},"21:6973:11159":{"crate_id":21,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"17:11142:11317":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"1:6721:11026":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"6:6034:11013":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"1:3339:7381":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"0:2726:2463":{"crate_id":0,"path":["chrono","format","Fixed","Nanosecond"],"kind":"variant"},"17:9064:51477":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"0:2856:2754":{"crate_id":0,"path":["chrono","format","ParseErrorKind","TooLong"],"kind":"variant"},"6:4346:10675":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"16:2813:9840":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"1:10601:60042":{"crate_id":1,"path":["std","thread","local","fast","DtorState"],"kind":"enum"},"1:15984:6921":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"16:3265:9832":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"21:3926:10475":{"crate_id":21,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"17:10801:9985":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"5:4699:10135":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"6:626:10293":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"21:1756:10431":{"crate_id":21,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"17:13539:11818":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"17:13602:11832":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"21:1613:10347":{"crate_id":21,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"17:13369:11771":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"1:1302:143":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"21:6931:11151":{"crate_id":21,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"5:8316:9153":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:10971:8644":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"6:5210:10804":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"17:13481:11800":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"0:558:671":{"crate_id":0,"path":["chrono","format"],"kind":"module"},"16:6482:9855":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"0:2642:174":{"crate_id":0,"path":["chrono","format","Pad","None"],"kind":"variant"},"17:13908:11935":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"18:866:10018":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"20:464:7026":{"crate_id":20,"path":["time","PreciseTime"],"kind":"struct"},"6:6896:11142":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"1:12242:8667":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"2:10390:2831":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"2:48765:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"2:9409:7638":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"2:10440:109":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"16:5639:9626":{"crate_id":16,"path":["gimli","read","cfi","UninitializedUnwindContext"],"kind":"struct"},"22:131:2833":{"crate_id":22,"path":["num_integer","mod_floor"],"kind":"function"},"1:2183:8602":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"6:4356:10681":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"2:24322:43647":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"6:1551:10312":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"23:241:58023":{"crate_id":23,"path":["num_traits","bounds","UpperBounded"],"kind":"trait"},"21:564:10263":{"crate_id":21,"path":["libc","unix","hostent"],"kind":"struct"},"2:5101:7345":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"2:3380:7089":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"1:7999:10158":{"crate_id":1,"path":["std","sync","mpsc","mpsc_queue","Queue"],"kind":"struct"},"1:1651:8586":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"6:3987:10507":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"9:900:12323":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"2:51435:8934":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"16:6310:9646":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"13:120:49794":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"1:11425:8779":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"17:9636:13112":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"2:46736:8377":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"1:15993:6929":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"2:47745:188":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"6:6114:11039":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"1:2751:7206":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"5:8362:12359":{"crate_id":5,"path":["alloc","slice","merge_sort","Run"],"kind":"struct"},"16:6190:9644":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"16:6159:9574":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"16:7110:9664":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"14:56:11329":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"2:14228:8305":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"18:744:65948":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"5:3044:12665":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"1:15990:6926":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"2:13202:1925":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"2:49567:7169":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"0:2738:2465":{"crate_id":0,"path":["chrono","format","Fixed","TimezoneOffsetColonZ"],"kind":"variant"},"1:12205:8620":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"6:4379:10695":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"2:50199:7164":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"21:5282:10839":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"2:52529:8925":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"5:432:2593":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"17:10949:13149":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"2:53488:12495":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"17:9873:13116":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"6:5419:10919":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"2:48652:133":{"crate_id":2,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"6:539:10240":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"21:3965:10500":{"crate_id":21,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"5:1597:7460":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"2:4921:7351":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"21:611:10288":{"crate_id":21,"path":["libc","unix","tms"],"kind":"struct"},"2:53560:12501":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"6:6979:11159":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"1:11197:8557":{"crate_id":1,"path":["std","net","addr","SocketAddrV4"],"kind":"struct"},"2:53137:8957":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"23:586:7308":{"crate_id":23,"path":["num_traits","ops","checked","CheckedShl"],"kind":"trait"},"5:5837:7365":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"1:14229:7430":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"6:4116:10572":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"16:3243:9831":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"17:12957:11615":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"1:15480:9500":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"17:9326:9925":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"17:10937:13148":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"0:2688:2455":{"crate_id":0,"path":["chrono","format","Numeric","Hour"],"kind":"variant"},"2:12920:7194":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"2:32483:63919":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum16"],"kind":"enum"},"1:11209:8558":{"crate_id":1,"path":["std","net","addr","SocketAddrV6"],"kind":"struct"},"17:12646:11539":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"1:10690:8587":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"2:5408:7125":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"21:6147:11057":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"21:5204:10804":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"2:5030:5910":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"2:51304:8966":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"2:56468:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:24781:169":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"21:5360:10890":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"2:47846:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"2:48388:7224":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"0:2722:2676":{"crate_id":0,"path":["chrono","format","Fixed","LowerAmPm"],"kind":"variant"},"12:2419:7133":{"crate_id":12,"path":["hashbrown","TryReserveError"],"kind":"enum"},"1:10831:7371":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"6:3981:10505":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"17:13747:11890":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"0:2740:2697":{"crate_id":0,"path":["chrono","format","Fixed","TimezoneOffset"],"kind":"variant"},"0:2728:2460":{"crate_id":0,"path":["chrono","format","Fixed","Nanosecond3"],"kind":"variant"},"16:6060:9610":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"1:6461:8519":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"2:13976:63700":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"2:47122:8366":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"21:4211:10617":{"crate_id":21,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"5:3341:9240":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"2:53545:12500":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"21:1661:10383":{"crate_id":21,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"2:22740:63926":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"12:1238:9473":{"crate_id":12,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"18:661:10025":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"2:46668:10149":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"21:5535:10947":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"17:12496:11511":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"21:6902:11144":{"crate_id":21,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"2:9031:8113":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"2:10453:7225":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"2:51250:8945":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"17:9466:11258":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"13:232:12264":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"1:3323:7377":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"16:5443:9620":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"2:46548:9210":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"6:4230:10626":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"1:10861:129":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"23:760:7323":{"crate_id":23,"path":["num_traits","ops","wrapping","WrappingShl"],"kind":"trait"},"1:16006:6940":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"5:6695:9249":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"12:787:8576":{"crate_id":12,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"0:2676:2631":{"crate_id":0,"path":["chrono","format","Numeric","WeekFromSun"],"kind":"variant"},"6:634:10298":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"2:48661:67":{"crate_id":2,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"21:6850:11141":{"crate_id":21,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"2:53636:12505":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"6:4516:10748":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"16:5273:11253":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"21:6021:11009":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"2:24172:12365":{"crate_id":2,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"0:2692:2457":{"crate_id":0,"path":["chrono","format","Numeric","Minute"],"kind":"variant"},"1:15021:8657":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"17:11017:127":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"1:4080:127":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"11:0:6902":{"crate_id":11,"path":["adler"],"kind":"module"},"17:13938:11940":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"5:1635:8573":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"2:10447:119":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"2:51635:8959":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"1:8412:6226":{"crate_id":1,"path":["std","sync","mpsc","sync","State"],"kind":"struct"},"1:12087:12551":{"crate_id":1,"path":["std","sync","mpsc","cache_aligned","CacheAligned"],"kind":"struct"},"6:4340:10673":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"17:13129:11711":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"2:2397:7349":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"5:1685:194":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"16:4775:11986":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"16:4316:11972":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"1:15986:6923":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"1:11624:7458":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"2:46534:7184":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"6:6016:11004":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"6:1712:10409":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"5:783:222":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"17:2314:9969":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"16:2754:9814":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"17:12143:11275":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"21:4081:10556":{"crate_id":21,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"2:48140:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"16:6468:9650":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"17:11102:51482":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"1:14601:129":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"2:9407:7640":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"2:47972:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"2:24249:7289":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"17:12746:11552":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"1:11223:8560":{"crate_id":1,"path":["std","net","ip","IpAddr"],"kind":"enum"},"1:9795:10175":{"crate_id":1,"path":["std","sys_common","rwlock","StaticRwLockWriteGuard"],"kind":"struct"},"6:3877:10437":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"21:4201:10616":{"crate_id":21,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"1:1428:8112":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"2:10067:660":{"crate_id":2,"path":["core","fmt"],"kind":"module"},"12:764:8112":{"crate_id":12,"path":["hashbrown","map","IterMut"],"kind":"struct"},"5:5315:200":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"1:10727:2655":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"1:7531:119":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"21:5449:10928":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"1:10641:8065":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"1:1633:8584":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"1:11263:8562":{"crate_id":1,"path":["std","net","ip","Ipv6Addr"],"kind":"struct"},"6:565:10260":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"2:46935:8399":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"1:7673:8652":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"16:7369:9573":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"6:4198:10609":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"2:49176:9226":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"17:9930:65937":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"2:46593:9152":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"17:12093:11433":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"7:0:1481":{"crate_id":7,"path":["unwind"],"kind":"module"},"2:14325:141":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"21:4379:10697":{"crate_id":21,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"21:627:10298":{"crate_id":21,"path":["libc","unix","protoent"],"kind":"struct"},"6:5998:10997":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"16:4271:11971":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"2:10611:715":{"crate_id":2,"path":["core","hash"],"kind":"module"},"16:4660:11982":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"1:8313:8139":{"crate_id":1,"path":["std","sync","mpsc","stream","Packet"],"kind":"struct"},"6:545:10243":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"21:4191:10609":{"crate_id":21,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"16:6907:9657":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"1:7639:8650":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"1:8949:8755":{"crate_id":1,"path":["std","sync","once","WaiterQueue"],"kind":"struct"},"5:2200:10132":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"2:49695:7178":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"2:24225:12369":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"12:856:8574":{"crate_id":12,"path":["hashbrown","map","Values"],"kind":"struct"},"5:923:9292":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"1:2166:8281":{"crate_id":1,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"2:3746:7113":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"16:6980:9658":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"5:2310:9322":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"17:12348:11486":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"2:3581:7106":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"0:2730:2461":{"crate_id":0,"path":["chrono","format","Fixed","Nanosecond6"],"kind":"variant"},"3:321:205":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"23:720:7317":{"crate_id":23,"path":["num_traits","ops","saturating","SaturatingAdd"],"kind":"trait"},"2:2866:7071":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"23:698:58130":{"crate_id":23,"path":["num_traits","ops","overflowing","OverflowingAdd"],"kind":"trait"},"6:1621:10347":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"2:24101:9133":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"17:10831:9939":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"2:24814:7356":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"6:6135:11046":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"6:4160:10593":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"0:2854:2752":{"crate_id":0,"path":["chrono","format","ParseErrorKind","TooShort"],"kind":"variant"},"2:22999:8971":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"6:3993:10510":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"2:49908:7186":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"2:10728:7928":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"2:49469:9106":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"18:790:10011":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"21:4418:10710":{"crate_id":21,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"2:45991:196":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"1:13653:8641":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"23:579:7304":{"crate_id":23,"path":["num_traits","ops","checked","CheckedDiv"],"kind":"trait"},"17:11689:11352":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"12:928:8575":{"crate_id":12,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"2:3376:7090":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"1:7465:185":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"21:1904:45597":{"crate_id":21,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"1:15985:6922":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"16:3155:9827":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"1:5990:8780":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"5:8379:7120":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"6:6205:11096":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"21:4128:10580":{"crate_id":21,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"16:7295:9577":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"2:4378:7878":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"16:4628:11981":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"6:6937:11151":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"5:1653:8575":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"21:4054:10542":{"crate_id":21,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"2:3505:7103":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"2:9911:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"1:2362:600":{"crate_id":1,"path":["std","env"],"kind":"module"},"17:10988:13152":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"16:7208:9669":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"23:750:7320":{"crate_id":23,"path":["num_traits","ops","wrapping","WrappingAdd"],"kind":"trait"},"17:9183:9930":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"2:51803:8942":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"9:692:9339":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressionStrategy"],"kind":"enum"},"1:7141:7627":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"2:46588:100":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"12:2412:12271":{"crate_id":12,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"16:6557:9653":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"18:611:10022":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"23:523:7302":{"crate_id":23,"path":["num_traits","int","PrimInt"],"kind":"trait"},"2:12072:9111":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"2:12943:7191":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"1:9790:10174":{"crate_id":1,"path":["std","sys_common","rwlock","StaticRwLockReadGuard"],"kind":"struct"},"2:49172:9227":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"12:162:9474":{"crate_id":12,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"5:8368:216":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"2:24880:165":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"1:7956:12668":{"crate_id":1,"path":["std","sync","mpsc","blocking","WaitToken"],"kind":"struct"},"1:6221:8726":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"21:6665:11131":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"1:11693:7463":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"2:52105:8968":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"1:3197:5940":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"12:2269:8584":{"crate_id":12,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"0:0:1930":{"crate_id":0,"path":["chrono"],"kind":"module"},"0:701:671":{"crate_id":0,"path":["chrono","format","format"],"kind":"function"},"21:4048:10540":{"crate_id":21,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"21:4068:10550":{"crate_id":21,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"20:470:7027":{"crate_id":20,"path":["time","SteadyTime"],"kind":"struct"},"9:809:6226":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"2:48409:7226":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"16:6026:9567":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"16:4803:11987":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"18:729:65947":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"16:3051:9883":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"16:7238:9590":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"17:10093:9994":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"2:46806:8390":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"1:12281:2234":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"2:50581:7209":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"17:13557:11822":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"5:2218:9243":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"2:48972:12479":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"2:3172:149":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"2:49609:7173":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"21:4433:10717":{"crate_id":21,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"21:1686:10402":{"crate_id":21,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"2:45917:7118":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"21:1518:10302":{"crate_id":21,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"16:4743:11985":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"17:9786:13115":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"23:476:7301":{"crate_id":23,"path":["num_traits","identities","One"],"kind":"trait"},"17:10028:13120":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"17:9361:11255":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"17:12620:11537":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"17:11713:11356":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"18:754:65945":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"12:843:8573":{"crate_id":12,"path":["hashbrown","map","Keys"],"kind":"struct"},"21:6028:11013":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"2:13430:109":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"1:4032:8647":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"5:5536:9248":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"5:3375:9241":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"2:3103:8515":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"21:1543:10312":{"crate_id":21,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"5:2777:9307":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"12:869:7123":{"crate_id":12,"path":["hashbrown","map","Drain"],"kind":"struct"},"17:12660:11540":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"17:10464:9936":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"2:12105:9112":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"1:10878:118":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"17:9206:51480":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"16:3770:11968":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"2:49549:7167":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"1:8156:8139":{"crate_id":1,"path":["std","sync","mpsc","shared","Packet"],"kind":"struct"},"0:2678:2633":{"crate_id":0,"path":["chrono","format","Numeric","WeekFromMon"],"kind":"variant"},"16:6433:9649":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"6:3966:10498":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"16:0:6906":{"crate_id":16,"path":["gimli"],"kind":"module"},"1:12160:8617":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"2:49456:8375":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"2:48691:127":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"1:12080:60051":{"crate_id":1,"path":["std","sync","mpsc","sync","Failure"],"kind":"enum"},"2:25381:7316":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"21:6091:11034":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"21:4427:10716":{"crate_id":21,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"6:6153:11057":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"2:50488:12484":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"21:4486:10740":{"crate_id":21,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"17:9920:13117":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"17:11256:11321":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"21:5576:10973":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"2:48014:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"2:51849:8927":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"2:12673:5882":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"0:2690:2643":{"crate_id":0,"path":["chrono","format","Numeric","Hour12"],"kind":"variant"},"6:0:798":{"crate_id":6,"path":["libc"],"kind":"module"},"17:11968:11410":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"16:5605:9625":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"21:5420:10920":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"2:4965:7237":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"2:51705:8947":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"1:13954:8655":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"2:46149:7110":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"17:9539:9956":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"2:12994:7188":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"17:13595:11830":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"17:9275:11253":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"16:2959:9824":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"17:12892:11564":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"17:10962:13150":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"6:1544:10310":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"6:1733:8721":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"1:15170:8628":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"2:49561:7134":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"21:6682:11140":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"2:24338:43656":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"2:46235:9016":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"21:4135:10582":{"crate_id":21,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"12:183:9478":{"crate_id":12,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"16:4689:11983":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"17:10318:9939":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"2:46435:8997":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"21:1568:10326":{"crate_id":21,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"16:3366:9838":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"2:56416:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"17:13037:11675":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"6:5204:10801":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"17:10788:13141":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"6:4402:10703":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"6:6057:11031":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"0:2372:1888":{"crate_id":0,"path":["chrono","offset","Offset"],"kind":"trait"},"2:53508:12497":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"2:53675:12506":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"1:14634:59779":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"1:1459:8574":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"6:1606:7064":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"21:5143:10762":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"1:15394:8715":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"21:5392:10907":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"1:11489:8522":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"1:14310:8065":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"17:9259:11252":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"1:783:10176":{"crate_id":1,"path":["std","thread","local","fast","Key"],"kind":"struct"},"2:46925:8398":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"12:750:7460":{"crate_id":12,"path":["hashbrown","map","Iter"],"kind":"struct"},"21:4074:10553":{"crate_id":21,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"6:4098:10563":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"16:4467:11977":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"16:5998:9541":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"5:8122:7878":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"22:145:7264":{"crate_id":22,"path":["num_integer","IterBinomial"],"kind":"struct"},"2:50478:201":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"1:2027:145":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"1:1642:8585":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"15:248:9492":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"16:5941:9637":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"1:820:10176":{"crate_id":1,"path":["std","thread","local","os","Key"],"kind":"struct"},"6:601:10280":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"2:10678:142":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"16:4495:11978":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"17:11433:11328":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"16:3908:11969":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"2:51605:8955":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"17:11945:11406":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"1:11534:7447":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"2:51657:8962":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"1:11463:8518":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"1:12029:8656":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"0:2646:2604":{"crate_id":0,"path":["chrono","format","Pad","Space"],"kind":"variant"},"6:4526:10753":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"1:11138:7205":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"21:4109:10572":{"crate_id":21,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"5:792:108":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"16:3340:9813":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"2:24388:5950":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"16:2839:9821":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"17:10874:11304":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"16:4871:11989":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"12:1103:8583":{"crate_id":12,"path":["hashbrown","map","Entry"],"kind":"enum"},"1:1415:7460":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"2:24374:7354":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"2:47727:7637":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"1:1493:8576":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"1:15968:59775":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"2:4670:7406":{"crate_id":2,"path":["core","array","try_collect_into_array","Guard"],"kind":"struct"},"6:4362:10684":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"17:9756:65941":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"1:3648:7423":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"17:13721:11881":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"17:12157:11442":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"5:1091:10130":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"17:12209:11448":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"6:527:10235":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"1:1507:8579":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"16:7079:9661":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"1:12069:59774":{"crate_id":1,"path":["std","sync","mpsc","shared","StartResult"],"kind":"enum"},"6:5426:10920":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"17:12302:11462":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"18:801:10012":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"1:15211:8635":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"0:2846:2739":{"crate_id":0,"path":["chrono","format","ParseErrorKind","OutOfRange"],"kind":"variant"},"1:5395:8707":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"23:358:7299":{"crate_id":23,"path":["num_traits","cast","NumCast"],"kind":"trait"},"6:4088:10556":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"2:10457:189":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"17:10775:13139":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"16:6504:9652":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"17:13507:11810":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"16:6130:9641":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"1:9742:8701":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutex"],"kind":"struct"},"2:46792:12466":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"5:6771:7406":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"6:4464:10731":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"2:46183:8899":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"6:4135:10580":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"1:2937:179":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"2:5605:8843":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"1:15373:8708":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"23:641:7315":{"crate_id":23,"path":["num_traits","ops","mul_add","MulAddAssign"],"kind":"trait"},"24:0:1927":{"crate_id":24,"path":["iana_time_zone"],"kind":"module"},"6:5247:10818":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"17:10127:9939":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"12:2059:8601":{"crate_id":12,"path":["hashbrown","set","Difference"],"kind":"struct"},"1:8512:8615":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"2:48713:71":{"crate_id":2,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"16:6533:9853":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"16:5374:9616":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"18:829:10015":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"1:3200:7374":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"2:49845:7170":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"23:840:7330":{"crate_id":23,"path":["num_traits","sign","Unsigned"],"kind":"trait"},"17:11615:11346":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"21:6223:11107":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"21:5441:10926":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"2:13278:8855":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"0:2732:2462":{"crate_id":0,"path":["chrono","format","Fixed","Nanosecond9"],"kind":"variant"},"16:6490:9651":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"17:13293:11750":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"12:559:143":{"crate_id":12,"path":["hashbrown","map","HashMap"],"kind":"struct"},"17:11494:11334":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"0:2806:2444":{"crate_id":0,"path":["chrono","format","Item","Numeric"],"kind":"variant"},"1:10826:7369":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"2:2769:579":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"1:9885:10176":{"crate_id":1,"path":["std","sys_common","thread_local_key","Key"],"kind":"struct"},"2:51160:12485":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"5:1235:9303":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"12:2392:12268":{"crate_id":12,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"17:13529:11815":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"0:2813:127":{"crate_id":0,"path":["chrono","format","Item","Error"],"kind":"variant"},"21:4403:10706":{"crate_id":21,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"16:6549:9588":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"0:2674:2453":{"crate_id":0,"path":["chrono","format","Numeric","Day"],"kind":"variant"},"2:52885:8969":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"2:3281:220":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"2:3169:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"1:16008:6942":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"21:5427:10921":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"2:50087:8861":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"2:10127:9081":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"17:9958:65944":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"6:521:10232":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"2:3269:211":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"2:50539:9121":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"17:12431:11502":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"1:1524:8581":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"1:2188:8603":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"1:12017:181":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"21:1725:8721":{"crate_id":21,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"2:12649:9222":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"17:10975:13151":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"21:4013:10525":{"crate_id":21,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"16:6679:9862":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"5:5875:10139":{"crate_id":5,"path":["alloc","slice","insert_head","InsertionHole"],"kind":"struct"},"2:53385:8944":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"1:10976:8645":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"21:1598:7064":{"crate_id":21,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"12:2045:8281":{"crate_id":12,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"17:11890:11390":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"1:5811:8538":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"2:24913:166":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"2:11573:9098":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"21:3876:10438":{"crate_id":21,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"2:52183:8956":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"0:3397:174":{"crate_id":0,"path":["chrono","offset","LocalResult","None"],"kind":"variant"},"12:2052:8600":{"crate_id":12,"path":["hashbrown","set","Intersection"],"kind":"struct"},"1:3366:5953":{"crate_id":1,"path":["std","io"],"kind":"module"},"10:0:6901":{"crate_id":10,"path":["rustc_std_workspace_alloc"],"kind":"module"},"18:857:10017":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"1:2458:8182":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"2:50322:7155":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"2:3287:7242":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"17:13573:11825":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"1:11607:7457":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"14:189:13168":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"2:14052:13182":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"18:739:13104":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"6:1764:10431":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"21:3913:10465":{"crate_id":21,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"1:4473:7433":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"0:2686:2640":{"crate_id":0,"path":["chrono","format","Numeric","Ordinal"],"kind":"variant"},"16:7141:9667":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"21:6178:11082":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"16:7155:9668":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"0:2682:2636":{"crate_id":0,"path":["chrono","format","Numeric","NumDaysFromSun"],"kind":"variant"},"1:15115:8663":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"21:5968:10980":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"1:5522:8715":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"1:4748:7414":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"16:7637:9670":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"19:117:11161":{"crate_id":19,"path":["panic_unwind","dwarf","eh","EHContext"],"kind":"struct"},"1:8863:13193":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"17:10039:13121":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"1:12252:8675":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"6:571:10263":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"21:6051:11031":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"17:11530:11336":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"2:11262:7460":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"0:7:1030":{"crate_id":0,"path":["chrono","prelude"],"kind":"module"},"16:5668:9628":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"2:22763:63921":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"2:51405:8946":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"16:2792:9559":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"6:1526:10302":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"2:11354:7188":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"6:6120:11041":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"6:1567:10320":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"9:1056:9399":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"6:5293:10840":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"6:4256:10638":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"16:6286:9489":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"22:127:2925":{"crate_id":22,"path":["num_integer","div_rem"],"kind":"function"},"2:7896:8384":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"12:777:7878":{"crate_id":12,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"17:10082:9993":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"21:4372:10695":{"crate_id":21,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"1:9325:2235":{"crate_id":1,"path":["std","time","UNIX_EPOCH"],"kind":"constant"},"2:46495:9207":{"crate_id":2,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"2:11286:8112":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"1:15078:7138":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"16:5498:9622":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"17:12527:11517":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"2:50008:8856":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"5:8257:7133":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"2:3384:7091":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"1:6811:8517":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"21:532:10240":{"crate_id":21,"path":["libc","unix","rlimit"],"kind":"struct"},"1:900:8148":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"16:6012:9569":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"2:46095:199":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"6:4148:10584":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"1:11365:8709":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"21:526:10238":{"crate_id":21,"path":["libc","unix","timespec"],"kind":"struct"},"6:5366:10890":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"17:11130:11316":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"6:6914:11145":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"16:7754:9673":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"1:4732:62762":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"5:3396:8603":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"5:7118:10143":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"2:48402:7225":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"21:150:44293":{"crate_id":21,"path":["libc","unix","FILE"],"kind":"enum"},"8:0:6899":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"12:2280:8585":{"crate_id":12,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"17:12687:11544":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"12:2040:7123":{"crate_id":12,"path":["hashbrown","set","Drain"],"kind":"struct"},"17:2512:9967":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"21:4325:10669":{"crate_id":21,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"2:46518:9208":{"crate_id":2,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"1:11439:8709":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"2:46574:9001":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"23:715:7316":{"crate_id":23,"path":["num_traits","ops","saturating","Saturating"],"kind":"trait"},"6:4081:10553":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"12:353:12265":{"crate_id":12,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"16:6381:9584":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"23:700:58131":{"crate_id":23,"path":["num_traits","ops","overflowing","OverflowingSub"],"kind":"trait"},"21:4172:10608":{"crate_id":21,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"1:14558:12554":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"12:1703:9484":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"1:1482:8281":{"crate_id":1,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"23:599:7312":{"crate_id":23,"path":["num_traits","ops","euclid","Euclid"],"kind":"trait"},"16:5412:9618":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"2:7810:6241":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"21:5541:10948":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"1:6887:8524":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"17:11579:11339":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"16:5238:49899":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"6:6229:11107":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"1:7356:186":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"1:13566:8174":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"16:6035:9609":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"17:11381:6263":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"18:678:142":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"2:46764:8386":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"1:5797:8536":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"1:4471:7432":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"17:4157:9989":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"2:23823:8551":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"21:506:10227":{"crate_id":21,"path":["libc","unix","group"],"kind":"struct"},"12:815:8577":{"crate_id":12,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"21:4409:10707":{"crate_id":21,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"17:10253:9893":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"2:5034:7339":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"5:4643:10135":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"1:6104:8717":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"2:50496:190":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"16:5530:9623":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"17:8849:9955":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"2:53479:12494":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"0:2797:2720":{"crate_id":0,"path":["chrono","format","Item","OwnedLiteral"],"kind":"variant"},"21:573:10269":{"crate_id":21,"path":["libc","unix","iovec"],"kind":"struct"},"5:374:8308":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"21:4447:10725":{"crate_id":21,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"0:2831:1898":{"crate_id":0,"path":["chrono","format","ParseError"],"kind":"struct"},"5:1011:7460":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"1:14795:8176":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"2:48224:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"2:3104:8851":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"1:12300:5952":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"2:24715:171":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"12:2404:65933":{"crate_id":12,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"9:41:9389":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","LocalBuf"],"kind":"struct"},"21:4385:10700":{"crate_id":21,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"2:3516:7104":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"2:11587:9099":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"17:10558:13134":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"1:1041:8141":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"16:3103:9837":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"12:940:8579":{"crate_id":12,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"2:10455:7226":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"0:2746:2405":{"crate_id":0,"path":["chrono","format","Fixed","RFC3339"],"kind":"variant"},"6:4373:10692":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"5:8175:194":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"21:3998:10519":{"crate_id":21,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"9:27:9388":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","HashBuffers"],"kind":"struct"},"21:4120:10576":{"crate_id":21,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"6:4179:10608":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"6:4005:10519":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"16:6518:9586":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"17:12282:11461":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"11:54:9460":{"crate_id":11,"path":["adler","Adler32"],"kind":"struct"},"21:619:10293":{"crate_id":21,"path":["libc","unix","servent"],"kind":"struct"},"17:13785:11899":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"9:686:9337":{"crate_id":9,"path":["miniz_oxide","deflate","core","SymFreq"],"kind":"struct"},"6:4296:10651":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"1:6343:8727":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"17:10422:13127":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"17:10407:9965":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"21:6890:11142":{"crate_id":21,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"6:4532:10755":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"1:10902:6225":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"2:10595:13181":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"16:5887:9810":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"16:6595:9585":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"2:46894:8397":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"2:50314:7153":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"2:51781:8939":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"1:1472:7123":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"21:6659:11129":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"16:7355:9572":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"2:52002:12492":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"0:2664:2621":{"crate_id":0,"path":["chrono","format","Numeric","YearMod100"],"kind":"variant"},"17:12117:11435":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"2:52465:8940":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"2:3522:131":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"17:11547:11337":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"17:12048:11426":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"6:3883:10438":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"2:11466:7173":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"2:11545:7178":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"17:12360:11488":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"5:3038:7921":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"1:6723:11028":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"17:13281:11747":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"17:11797:11384":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"21:4301:10658":{"crate_id":21,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"16:5923:9636":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"1:13779:8662":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"2:46465:9212":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"21:4235:10627":{"crate_id":21,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"1:4512:7429":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"2:3406:7094":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"17:13472:11799":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"2:47131:7437":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"1:2155:7460":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"6:6943:11152":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"6:4048:10537":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"14:250:12219":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"18:136:13445":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"21:6961:11157":{"crate_id":21,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"2:51924:12490":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"16:3494:11182":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"2:2269:8910":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"23:844:7268":{"crate_id":23,"path":["num_traits","Num"],"kind":"trait"},"9:776:9386":{"crate_id":9,"path":["miniz_oxide","deflate","CompressionLevel"],"kind":"enum"},"6:3920:10465":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"16:4351:11973":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"2:48950:146":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"17:11985:11413":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"2:49482:9107":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"23:618:7313":{"crate_id":23,"path":["num_traits","ops","inv","Inv"],"kind":"trait"},"0:2850:2748":{"crate_id":0,"path":["chrono","format","ParseErrorKind","NotEnough"],"kind":"variant"},"17:1236:13110":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"2:4066:7211":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"1:15313:8563":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"2:2194:12361":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"2:49535:5951":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"21:6896:11143":{"crate_id":21,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"17:10223:9899":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"1:7279:13192":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:3175:135":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"17:13549:11821":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"1:10611:8129":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"0:2641:2445":{"crate_id":0,"path":["chrono","format","Pad"],"kind":"enum"},"23:702:58132":{"crate_id":23,"path":["num_traits","ops","overflowing","OverflowingMul"],"kind":"trait"},"17:9396:11256":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"2:0:488":{"crate_id":2,"path":["core"],"kind":"module"},"5:3040:12355":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"21:3870:10437":{"crate_id":21,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"1:12247:8747":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"1:12771:13196":{"crate_id":1,"path":["std","sys","unix","fs","TimespecDebugAdapter"],"kind":"struct"},"2:8547:151":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"17:13306:11756":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"1:8217:10158":{"crate_id":1,"path":["std","sync","mpsc","spsc_queue","Queue"],"kind":"struct"},"21:664:2081":{"crate_id":21,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"17:13975:11947":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"12:2398:12269":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"23:874:7286":{"crate_id":23,"path":["num_traits","NumAssignRef"],"kind":"trait"},"1:3561:7422":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"6:5405:10908":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"2:13221:7162":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"2:3440:7102":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"12:1881:145":{"crate_id":12,"path":["hashbrown","set","HashSet"],"kind":"struct"},"1:10894:7424":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"17:0:6907":{"crate_id":17,"path":["object"],"kind":"module"},"1:11467:11013":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"17:11282:51483":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"6:4425:10710":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"16:5348:9614":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"17:13361:11769":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"2:48749:7222":{"crate_id":2,"path":["core","fmt","FlagV1"],"kind":"enum"},"17:12417:11500":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"17:13817:11914":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"23:762:7324":{"crate_id":23,"path":["num_traits","ops","wrapping","WrappingShr"],"kind":"trait"},"21:4395:10703":{"crate_id":21,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"19:0:994":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"1:12011:8654":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"2:5165:7239":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"2:14017:187":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"17:10610:13138":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"2:4:979":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"6:618:10288":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"1:11329:59778":{"crate_id":1,"path":["std","net","parser","AddrKind"],"kind":"enum"},"17:13763:11894":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"17:13331:11764":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"2:23287:8515":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"12:466:13452":{"crate_id":12,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"2:46007:194":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"21:5287:10840":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"17:13660:11874":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"16:3686:11966":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"17:13180:11727":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"2:51180:12486":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"17:10394:9966":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"2:2863:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"1:15107:12564":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"1:15217:8636":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"5:8462:8282":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"6:5301:10845":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"2:14122:63748":{"crate_id":2,"path":["core","future","from_generator","GenFuture"],"kind":"struct"},"16:5396:9617":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"5:7386:7878":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"2:3740:7111":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"5:7627:8286":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"1:9491:13224":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"2:23241:8515":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"1:11168:7170":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"2:3401:7093":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"2:53613:12504":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"2:11073:8515":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"1:2934:180":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"2:47151:8370":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"20:488:7029":{"crate_id":20,"path":["time","Tm"],"kind":"struct"},"1:5880:8772":{"crate_id":1,"path":["std","os","unix","net","addr","AsciiEscaped"],"kind":"struct"},"17:13794:11901":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"1:12742:10181":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"21:5372:10895":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"1:12228:8742":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"2:53423:8964":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"2:51512:12489":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"0:2810:2238":{"crate_id":0,"path":["chrono","format","Item","Fixed"],"kind":"variant"},"6:4392:10700":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"2:57777:12513":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"2:14:2203":{"crate_id":2,"path":["core","write"],"kind":"macro"},"2:49659:7174":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"0:3399:3090":{"crate_id":0,"path":["chrono","offset","LocalResult","Single"],"kind":"variant"},"6:6214:11099":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"1:5669:8514":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"0:2666:2623":{"crate_id":0,"path":["chrono","format","Numeric","IsoYear"],"kind":"variant"},"21:1592:10343":{"crate_id":21,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"21:5413:10919":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"21:4467:10732":{"crate_id":21,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"6:4038:10534":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"2:23933:8823":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"17:542:9547":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"2:46745:8378":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"5:4242:10130":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"1:4434:7431":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"1:14799:8516":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"2:2926:124":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"6:6250:11119":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"2:4051:7212":{"crate_id":2,"path":["core","any","Provider"],"kind":"trait"},"16:6050:9638":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"2:3427:7099":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"1:8670:8736":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"18:651:10021":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"16:7768:9578":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"1:14926:10183":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"16:6407:9648":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"1:6883:8521":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"2:53461:8929":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"1:1152:13186":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"14:231:1898":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"2:12959:7193":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"1:14568:7371":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"5:2330:9304":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"12:1183:9471":{"crate_id":12,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"6:5216:10805":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"2:46915:7415":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"1:11246:8561":{"crate_id":1,"path":["std","net","ip","Ipv4Addr"],"kind":"struct"},"2:12883:7192":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"2:50219:7132":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"2:52495:8943":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"17:13708:11875":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"16:6873:7636":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"16:3077:9884":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"16:7051:9659":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"2:24979:164":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"2:22708:63804":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"1:12262:7138":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"1:3194:7370":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"1:15199:8630":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"16:6342:9647":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"6:1748:10425":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"5:1694:9300":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"1:1149:13184":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"1:8663:8734":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"2:49899:7185":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"16:5362:9615":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"2:49409:9103":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"5:8145:9295":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"21:4103:10569":{"crate_id":21,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"2:11504:9096":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"17:13584:11829":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"21:1654:10379":{"crate_id":21,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"2:49865:7171":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"6:1558:10315":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"16:7792:9607":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"2:47660:2040":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"16:5427:9619":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"2:3492:116":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"16:3478:9833":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"1:8997:8649":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"2:50569:7210":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"1:3658:10157":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"2:3279:106":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"1:5952:8775":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"1:12173:8618":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"0:2800:2604":{"crate_id":0,"path":["chrono","format","Item","Space"],"kind":"variant"},"2:46754:8385":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"6:580:10269":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"16:5303:9612":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"17:10340:9970":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"23:581:7307":{"crate_id":23,"path":["num_traits","ops","checked","CheckedRem"],"kind":"trait"},"16:6630:9858":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"0:2716:2669":{"crate_id":0,"path":["chrono","format","Fixed","LongMonthName"],"kind":"variant"},"2:56429:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"0:1758:957":{"crate_id":0,"path":["chrono","offset"],"kind":"module"},"16:2905:9823":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"1:3682:7418":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"5:3039:64647":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"16:5289:9570":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"12:0:6903":{"crate_id":12,"path":["hashbrown"],"kind":"module"},"6:4242:10627":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"2:48941:7929":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"12:1203:9472":{"crate_id":12,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"17:10015:13119":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"21:5254:10827":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"1:12127:8613":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"21:4366:10692":{"crate_id":21,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"0:3395:1903":{"crate_id":0,"path":["chrono","offset","LocalResult"],"kind":"enum"},"2:3277:218":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"1:16002:6936":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"17:10198:13125":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"2:51559:8967":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"21:1618:10349":{"crate_id":21,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"23:636:7314":{"crate_id":23,"path":["num_traits","ops","mul_add","MulAdd"],"kind":"trait"},"2:38941:7208":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"2:48980:12480":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"6:4287:10646":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"2:4752:102":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"2:24030:9132":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"1:14096:10182":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"2:49971:8852":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"1:7653:8651":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"1:13916:5876":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"1:9087:8671":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"6:1531:10304":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"17:13233:11739":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"2:23624:8825":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"16:7121:9665":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"2:53027:8937":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"1:8827:162":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"21:4249:10638":{"crate_id":21,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"1:14543:8527":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"2:2888:104":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"16:5460:9621":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"16:7684:9582":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"17:11335:9927":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"17:11314:9928":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"2:46815:8391":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"5:8204:7878":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"16:6277:9645":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"2:24649:173":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"0:2694:2458":{"crate_id":0,"path":["chrono","format","Numeric","Second"],"kind":"variant"},"2:48933:12475":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"1:7687:8653":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"9:996:9405":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"16:6949:9870":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"5:3488:8281":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"2:10400:134":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"5:3370:8600":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"16:3199:9829":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"16:5176:11993":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"17:9826:9939":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"20:514:1898":{"crate_id":20,"path":["time","ParseError"],"kind":"enum"},"2:49577:7168":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"17:13859:11920":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"1:16009:6943":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"6:5982:10985":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"1:11148:7415":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"6:161:44294":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"16:6141:9642":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"16:7449:9580":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"16:4942:11991":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"17:10913:13146":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"16:2981:9835":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"17:9646:65936":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"17:9948:13118":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"21:4531:10758":{"crate_id":21,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"18:0:6908":{"crate_id":18,"path":["memchr"],"kind":"module"},"2:23012:8515":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"16:4439:11976":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"2:68:729":{"crate_id":2,"path":["core","i32"],"kind":"module"},"23:866:7284":{"crate_id":23,"path":["num_traits","NumAssignOps"],"kind":"trait"},"2:4728:8847":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"1:15997:6931":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"2:3431:7100":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"2:9408:7639":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"5:8332:9266":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"17:13421:11784":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"17:13840:11915":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"1:10732:7205":{"crate_id":1,"path":["std","error","Chain"],"kind":"struct"},"2:47628:176":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"12:399:9476":{"crate_id":12,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"17:13147:11716":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"17:9004:51475":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"1:6709:8535":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"16:7169:9587":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"17:10068:9918":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"17:13899:11931":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"2:46853:8393":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"17:9291:11254":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"12:2066:8602":{"crate_id":12,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"1:10476:10179":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"21:1580:10335":{"crate_id":21,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"17:13565:11824":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"21:6001:11003":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"2:32831:8989":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"1:14593:7372":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"21:5384:10902":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"16:3576:11186":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"1:1017:8139":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"1:11174:8556":{"crate_id":1,"path":["std","net","addr","SocketAddr"],"kind":"enum"},"2:3729:224":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"2:8510:8373":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"17:10104:9995":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"2:46621:9154":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"2:51971:12491":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"1:9663:60225":{"crate_id":1,"path":["std","sys_common","mutex","MovableMutex"],"kind":"struct"},"2:51494:8923":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"5:5788:10130":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"1:11161:7175":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"2:23629:21439":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"2:46605:9153":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"16:7100:9663":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"21:600:10283":{"crate_id":21,"path":["libc","unix","sigval"],"kind":"struct"},"1:4666:6013":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"5:1195:13457":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"6:4020:10525":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"17:3743:9982":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"18:152:13446":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"17:13887:11929":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"6:6967:11157":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"0:2852:2750":{"crate_id":0,"path":["chrono","format","ParseErrorKind","Invalid"],"kind":"variant"},"17:13094:11710":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"5:3362:8602":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"21:6129:11046":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"20:405:121":{"crate_id":20,"path":["time","duration","Duration"],"kind":"struct"},"2:50531:9120":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"2:12205:10155":{"crate_id":2,"path":["core","slice","sort","CopyOnDrop"],"kind":"struct"},"16:2772:9847":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"17:11591:11342":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"2:3364:7087":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"1:10590:8149":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"17:9131:51479":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"17:12674:11543":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"2:46475:9213":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"6:5311:10852":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"5:7787:234":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"2:10122:9080":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"2:50039:8860":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"1:14948:10185":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"2:46073:197":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"2:47930:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"2:4000:68":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"2:46031:195":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"16:6099:9640":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"2:8071:8363":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"16:4411:11975":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"17:9706:13113":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"2:51751:8935":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"9:157:9356":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressorOxide"],"kind":"struct"},"18:169:13449":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"21:4509:10748":{"crate_id":21,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"1:14581:12562":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"2:5584:16247":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"2:48679:107":{"crate_id":2,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"2:13941:150":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"2:5156:7346":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"5:6679:9248":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"2:24400:7357":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"16:547:9805":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"1:11280:8639":{"crate_id":1,"path":["std","net","ip","Ipv6MulticastScope"],"kind":"enum"},"2:39004:7479":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"2:49511:9110":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"16:4198:11970":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"23:859:7283":{"crate_id":23,"path":["num_traits","RefNum"],"kind":"trait"},"17:9517:7168":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"1:7756:8655":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"6:6643:11128":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"21:4525:10755":{"crate_id":21,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"9:1075:9407":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"17:9033:51476":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"16:7184:9871":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"2:46723:7205":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"23:572:7303":{"crate_id":23,"path":["num_traits","ops","checked","CheckedAdd"],"kind":"trait"},"0:2670:2627":{"crate_id":0,"path":["chrono","format","Numeric","IsoYearMod100"],"kind":"variant"},"5:6659:69":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"18:782:11166":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"5:920:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"21:4289:10651":{"crate_id":21,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"2:6774:63626":{"crate_id":2,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"6:6007:11003":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"18:820:10014":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"5:4515:9277":{"crate_id":5,"path":["alloc","collections","vec_deque","pair_slices","PairSlices"],"kind":"struct"},"5:3048:12666":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"6:4277:10639":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"2:10459:7227":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"17:13155:11717":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"17:13404:11777":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"17:9579:128":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"5:3329:7460":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"17:11769:11374":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"2:52341:8948":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"17:13196:11730":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"6:5260:10827":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"17:13452:11792":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"1:4684:7391":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"18:885:10019":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"21:1536:10310":{"crate_id":21,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"2:50363:7141":{"crate_id":2,"path":["core","time","FromFloatSecsError"],"kind":"struct"},"17:13073:11705":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"23:366:7298":{"crate_id":23,"path":["num_traits","cast","AsPrimitive"],"kind":"trait"},"16:2883:9841":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"0:2927:2039":{"crate_id":0,"path":["chrono","format","DelayedFormat"],"kind":"struct"},"6:6925:11149":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"1:10723:8176":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"2:3559:7114":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"17:13873:11922":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"0:2848:2743":{"crate_id":0,"path":["chrono","format","ParseErrorKind","Impossible"],"kind":"variant"},"1:2395:8163":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"6:4142:10582":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"18:849:10016":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"2:46863:8394":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"21:4478:10738":{"crate_id":21,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"2:8591:120":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"17:10643:11271":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"17:10622:11269":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"2:8323:7338":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"22:266:7257":{"crate_id":22,"path":["num_integer","ExtendedGcd"],"kind":"struct"},"1:6983:8520":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"16:5869:189":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"2:3166:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"6:6129:11045":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"2:9028:7126":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"1:3192:128":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"17:10530:11306":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"1:10589:8515":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"2:49381:9100":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"6:157:44293":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"2:50338:7159":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"1:2159:7878":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"1:4510:7428":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"23:584:7306":{"crate_id":23,"path":["num_traits","ops","checked","CheckedNeg"],"kind":"trait"},"1:15999:6933":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"16:5721:9631":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"1:12135:7878":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"6:4315:10661":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"2:3417:7097":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"1:15456:12566":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"2:2219:1050":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"2:10688:146":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"2:3411:7096":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"17:2484:51565":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"1:11666:7459":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"6:5447:10926":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"0:2744:2398":{"crate_id":0,"path":["chrono","format","Fixed","RFC2822"],"kind":"variant"},"0:2660:2450":{"crate_id":0,"path":["chrono","format","Numeric","Year"],"kind":"variant"},"1:1497:8577":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"13:0:6897":{"crate_id":13,"path":["std_detect"],"kind":"module"},"5:8345:9267":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"17:12758:11555":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"2:50186:8866":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"2:2967:184":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"5:1457:8585":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"6:4332:10669":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"2:3396:7092":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"0:3402:3091":{"crate_id":0,"path":["chrono","offset","LocalResult","Ambiguous"],"kind":"variant"},"18:766:11176":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"17:10115:9996":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"20:443:7023":{"crate_id":20,"path":["time","Timespec"],"kind":"struct"},"16:4840:11988":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"1:11105:7390":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"6:1912:45597":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"12:1121:8584":{"crate_id":12,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"21:5241:10818":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"23:589:7309":{"crate_id":23,"path":["num_traits","ops","checked","CheckedShr"],"kind":"trait"},"6:5582:10973":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"17:12573:11523":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"16:6173:9643":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"1:9163:7632":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"17:12196:11446":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"21:4263:8728":{"crate_id":21,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"1:15465:60041":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"6:533:10238":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"2:52025:12493":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"1:7951:8138":{"crate_id":1,"path":["std","sync","mpsc","blocking","Inner"],"kind":"struct"},"6:4454:10725":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"5:5093:660":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"2:8616:4360":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"1:12065:12550":{"crate_id":1,"path":["std","sync","mpsc","blocking","SignalToken"],"kind":"struct"},"0:2742:2699":{"crate_id":0,"path":["chrono","format","Fixed","TimezoneOffsetZ"],"kind":"variant"},"2:3278:217":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"2:22963:8994":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"6:1680:10391":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"2:24682:170":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"16:5566:9624":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"18:811:10013":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"1:8762:8745":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"1:11445:8729":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"1:6483:8546":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"2:23835:63802":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"17:12003:11414":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"1:1132:7214":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"2:46844:8380":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"21:586:10275":{"crate_id":21,"path":["libc","unix","winsize"],"kind":"struct"},"23:854:7282":{"crate_id":23,"path":["num_traits","NumRef"],"kind":"trait"},"17:13961:11944":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"21:579:10272":{"crate_id":21,"path":["libc","unix","pollfd"],"kind":"struct"},"6:5186:10788":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"1:9651:60233":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutex"],"kind":"struct"},"14:47:13168":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"17:12250:11454":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"17:12700:11545":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"6:4474:10732":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"5:3839:10130":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"21:5268:10838":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"17:10899:13142":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"21:5210:10805":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"2:28191:7295":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"17:11742:11365":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"2:23929:8515":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"16:5257:11252":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"2:14289:201":{"crate_id":2,"path":["core","task","ready","Ready"],"kind":"struct"},"6:1626:10349":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"1:15987:6924":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"2:24193:9036":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"21:4314:10664":{"crate_id":21,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"17:11409:11327":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"5:1939:8281":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"23:871:7285":{"crate_id":23,"path":["num_traits","NumAssign"],"kind":"trait"},"1:8714:8737":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"1:9757:8702":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutexGuard"],"kind":"struct"},"2:9916:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"0:2748:2655":{"crate_id":0,"path":["chrono","format","Fixed","Internal"],"kind":"variant"},"12:933:8578":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"2:46414:12456":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"16:3221:9830":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"1:4741:7393":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"16:5959:9562":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"9:469:13303":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"6:4067:10545":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"2:49430:9105":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"6:513:10227":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"17:12921:11584":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"16:4903:11990":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"6:4061:10542":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"23:2232:7297":{"crate_id":23,"path":["num_traits","float","FloatConst"],"kind":"trait"},"17:11305:11552":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"21:3986:10510":{"crate_id":21,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"2:3182:227":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"17:12130:11438":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"23:577:7305":{"crate_id":23,"path":["num_traits","ops","checked","CheckedMul"],"kind":"trait"},"2:52679:8949":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"1:6961:8525":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"1:14563:12556":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"17:11068:9931":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"0:2734:2687":{"crate_id":0,"path":["chrono","format","Fixed","TimezoneName"],"kind":"variant"},"2:13141:2501":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"21:594:10280":{"crate_id":21,"path":["libc","unix","linger"],"kind":"struct"},"1:14624:7390":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"12:2072:8603":{"crate_id":12,"path":["hashbrown","set","Union"],"kind":"struct"},"1:2572:127":{"crate_id":1,"path":["std","error","Error"],"kind":"trait"},"17:13612:11837":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"1:4723:2831":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"2:11393:9094":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"1:14232:7432":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"9:963:9404":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"17:9716:65939":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"16:4975:11992":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"16:6717:9656":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"6:4028:10528":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"2:49641:7176":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"2:10451:7224":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"2:47796:7460":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"1:3341:7382":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"5:3882:6225":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"2:24276:12372":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"20:563:3608":{"crate_id":20,"path":["time","Fmt"],"kind":"enum"},"17:299:13107":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"16:5745:9632":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"1:5741:8532":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"2:56442:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"22:0:1928":{"crate_id":22,"path":["num_integer"],"kind":"module"},"2:22723:63804":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"6:1600:10343":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"5:8153:64581":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"21:4502:10745":{"crate_id":21,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"2:24847:168":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"1:4432:7430":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"5:2262:9305":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"16:7323:9592":{"crate_id":16,"path":["gimli","read","unit","UnitOffset"],"kind":"struct"},"11:46:12274":{"crate_id":11,"path":["adler","algo","U32X4"],"kind":"struct"},"17:11725:11357":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"16:2861:9822":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"2:46714:8376":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"6:586:10272":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"1:3351:7387":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"6:5547:10948":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"1:10684:16243":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"17:13953:11941":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"6:3933:10475":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"2:3812:7117":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"1:10886:8688":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"23:575:7310":{"crate_id":23,"path":["num_traits","ops","checked","CheckedSub"],"kind":"trait"},"2:13212:7131":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"17:10516:11268":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"2:37761:178":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"16:3402:9560":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"2:57756:12512":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"5:3951:8281":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"2:48098:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"12:1162:9470":{"crate_id":12,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"1:8932:8063":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"20:440:7027":{"crate_id":20,"path":["time","sys","inner","unix","SteadyTime"],"kind":"struct"},"16:4573:11979":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"6:4386:10697":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"21:5472:10934":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"17:12222:11450":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"16:7782:9579":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"6:4055:10540":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"2:23296:8922":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"21:1719:10418":{"crate_id":21,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"2:12662:1340":{"crate_id":2,"path":["core","str"],"kind":"module"},"1:7819:8660":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"5:2553:9308":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"2:50318:7154":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"6:4308:10658":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"1:11117:7394":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"17:10304:9924":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"5:8285:101":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"1:894:8147":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"2:50326:7156":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"2:51226:8953":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"17:12318:11467":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"1:16010:6944":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"16:7741:9672":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"6:5567:10962":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"7:85:49154":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"1:5757:8534":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"5:8167:7878":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"2:3342:2033":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"17:12237:11453":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"21:81:44227":{"crate_id":21,"path":["libc","unix","DIR"],"kind":"enum"},"6:5178:10786":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"2:3717:7109":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"0:2724:2678":{"crate_id":0,"path":["chrono","format","Fixed","UpperAmPm"],"kind":"variant"},"17:4008:13111":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"2:24261:7288":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"1:12119:7460":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"2:48395:7223":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"1:1157:16244":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"1:10707:8169":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"2:32435:8276":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"17:12716:11547":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"2:2508:8304":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"17:10211:13126":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"1:11676:7460":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"2:49993:8853":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"1:10821:7368":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"18:621:11165":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"14:11:13168":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"1:2162:7123":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"17:11474:11333":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"6:5274:10838":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"1:10401:13203":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"1:0:1331":{"crate_id":1,"path":["std"],"kind":"module"},"6:5398:10907":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"21:5433:10924":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"17:13755:11893":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"2:11431:9095":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"2:14238:9122":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"17:10187:13124":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"1:2171:8600":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"1:5749:8533":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"17:12557:11520":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"2:23099:8552":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"1:5982:8778":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"5:1560:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"1:15041:2234":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"0:2736:2466":{"crate_id":0,"path":["chrono","format","Fixed","TimezoneOffsetColon"],"kind":"variant"},"2:3347:7086":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"17:13345:11766":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"5:4628:235":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"5:3336:8601":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"23:4506:7288":{"crate_id":23,"path":["num_traits","FloatErrorKind"],"kind":"enum"},"1:9198:13193":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"2:53277:8961":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"1:1518:8580":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"1:14027:8654":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"16:7090:9662":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"5:0:277":{"crate_id":5,"path":["alloc"],"kind":"module"},"1:5675:8512":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"21:3974:10505":{"crate_id":21,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"16:7415:9591":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"17:11701:11355":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"21:3953:10497":{"crate_id":21,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"1:10616:8137":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"1:12733:128":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"5:4215:7123":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"1:11516:7628":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"2:8506:8374":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"16:3743:11967":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"1:11309:12529":{"crate_id":1,"path":["std","net","ip","fmt","Span"],"kind":"struct"},"2:49813:7180":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"1:5085:8640":{"crate_id":1,"path":["std","net","ip","display_buffer","IpDisplayBuffer"],"kind":"struct"},"16:5855:9634":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"2:8250:7436":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"12:1666:9482":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"6:1662:10379":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"1:13420:8722":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"2:50552:158":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"17:9160:9958":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"17:12026:11417":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"17:11754:11368":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"21:1696:10408":{"crate_id":21,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"0:2662:2619":{"crate_id":0,"path":["chrono","format","Numeric","YearDiv100"],"kind":"variant"},"2:45944:7115":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"16:3129:9836":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"2:49591:7175":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"17:11640:11349":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"2:51827:8924":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"2:3297:7478":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"2:49883:7183":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"23:819:7269":{"crate_id":23,"path":["num_traits","sign","Signed"],"kind":"trait"},"21:4153:10593":{"crate_id":21,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"21:4439:10720":{"crate_id":21,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"2:3178:228":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"18:694:10027":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"16:3461:9834":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"2:3274:5720":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"17:12770:11562":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"2:53519:12498":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"17:12015:11416":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"2:50151:8863":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"17:10136:13116":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"2:53598:12503":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"23:757:7322":{"crate_id":23,"path":["num_traits","ops","wrapping","WrappingNeg"],"kind":"trait"},"23:611:7311":{"crate_id":23,"path":["num_traits","ops","euclid","CheckedEuclid"],"kind":"trait"},"1:6003:8781":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"2:49399:9102":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"12:1256:8586":{"crate_id":12,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"2:10449:7223":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"17:12262:11455":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"17:10291:9921":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"5:3748:160":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"2:50310:7152":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"0:2672:1880":{"crate_id":0,"path":["chrono","format","Numeric","Month"],"kind":"variant"},"17:10545:13131":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"6:6243:11116":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"17:10147:11264":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"1:16003:6937":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"1:5974:8777":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"17:11956:11409":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"17:8902:51473":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"12:472:13453":{"crate_id":12,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"21:4060:10545":{"crate_id":21,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"17:10166:11266":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"22:86:7274":{"crate_id":22,"path":["num_integer","average","Average"],"kind":"trait"},"1:11584:6226":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"21:4041:10537":{"crate_id":21,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"2:37785:7072":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"1:14235:7428":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"2:51374:12487":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"1:9084:8743":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"21:5172:10786":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"2:24301:43655":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"15:230:9491":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"6:4110:10569":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"0:2698:2651":{"crate_id":0,"path":["chrono","format","Numeric","Timestamp"],"kind":"variant"},"2:47677:8112":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"2:49713:7177":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"5:6482:7123":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"16:7702:9581":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"5:4306:8112":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"2:47812:7878":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"16:7868:127":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"2:46408:7185":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"1:2397:8164":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"2:50330:7157":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"6:5974:10980":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"5:1618:7878":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"6:4127:10576":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"2:46835:8392":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"18:704:11166":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"1:11352:12535":{"crate_id":1,"path":["std","net","parser","AddrParseError"],"kind":"struct"},"0:2858:2756":{"crate_id":0,"path":["chrono","format","ParseErrorKind","BadFormat"],"kind":"variant"},"1:4400:8694":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"17:13167:11722":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"17:10476:9940":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"22:133:3798":{"crate_id":22,"path":["num_integer","div_mod_floor"],"kind":"function"},"6:5390:10902":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"21:4091:10563":{"crate_id":21,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"5:3894:9289":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"17:13515:11813":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"1:1446:8573":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"6:672:2081":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"2:52259:8963":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"17:11922:11400":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"1:16011:6945":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"2:46541:9209":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"1:10451:10177":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"0:2713:2238":{"crate_id":0,"path":["chrono","format","Fixed"],"kind":"enum"},"6:5541:10947":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"0:2644:2446":{"crate_id":0,"path":["chrono","format","Pad","Zero"],"kind":"variant"},"16:3007:9825":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"1:1619:8583":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"1:2502:2594":{"crate_id":1,"path":["std","error"],"kind":"module"},"1:10700:8588":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"2:50306:7150":{"crate_id":2,"path":["core","str","LinesAnyMap"],"kind":"struct"},"17:9988:51527":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"18:774:11166":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"2:50022:8859":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"1:4607:7437":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"2:24946:167":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"16:5217:9815":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"2:50342:121":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"2:46451:8999":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"23:754:7321":{"crate_id":23,"path":["num_traits","ops","wrapping","WrappingMul"],"kind":"trait"},"17:8929:51474":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"6:6902:11143":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"21:1740:10425":{"crate_id":21,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"7:38:49147":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"2:13926:138":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"18:837:7162":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"5:1663:8576":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"14:194:49822":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"12:2253:8583":{"crate_id":12,"path":["hashbrown","set","Entry"],"kind":"enum"},"21:605:10285":{"crate_id":21,"path":["libc","unix","itimerval"],"kind":"struct"},"2:32475:9167":{"crate_id":2,"path":["core","mem","valid_align","ValidAlign"],"kind":"struct"},"17:11168:11318":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"5:7219:7123":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"2:14401:8278":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"21:4141:10584":{"crate_id":21,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"1:11371:8710":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"1:12043:8657":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"9:0:6900":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"1:12141:8616":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"6:5478:10934":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"2:46872:8395":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"17:13323:11761":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"17:12442:11503":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"6:5378:10895":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"2:3389:7095":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"0:2908:2041":{"crate_id":0,"path":["chrono","format","strftime","StrftimeItems"],"kind":"struct"},"17:13215:11731":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"2:46824:8400":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"21:4031:10534":{"crate_id":21,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"2:22695:7072":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"12:114:13451":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"6:5433:10921":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"1:11096:7438":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"1:4639:7406":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"23:847:7281":{"crate_id":23,"path":["num_traits","NumOps"],"kind":"trait"},"6:4270:8728":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"17:12585:11525":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"17:11784:11380":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"12:2032:7460":{"crate_id":12,"path":["hashbrown","set","Iter"],"kind":"struct"},"2:9035:8372":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"1:2433:8174":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"6:6184:11082":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"6:1634:10354":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"21:5223:10806":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"1:5763:8535":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"16:6075:9571":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"6:3960:10497":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"5:4599:10133":{"crate_id":5,"path":["alloc","collections","vec_deque","spec_extend","spec_extend","WrapAddOnDrop"],"kind":"struct"},"5:1486:8586":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"9:722:9340":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLFlush"],"kind":"enum"},"1:3325:5926":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"6:5439:10924":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"17:681:11324":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"0:2794:2451":{"crate_id":0,"path":["chrono","format","Item","Literal"],"kind":"variant"},"1:11431:8720":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"1:1501:8578":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"6:3972:10500":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"0:2792:2040":{"crate_id":0,"path":["chrono","format","Item"],"kind":"enum"},"2:46698:8375":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"21:1529:10307":{"crate_id":21,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"}},"external_crates":{"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"20":{"name":"time","html_root_url":"https://doc.rust-lang.org/time/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"23":{"name":"num_traits","html_root_url":"https://docs.rs/num-traits/0.2/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"22":{"name":"num_integer","html_root_url":"https://docs.rs/num-integer/0.1/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"adler","html_root_url":"https://docs.rs/adler/0.2.3/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"21":{"name":"libc","html_root_url":null},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"24":{"name":"iana_time_zone","html_root_url":null},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":18}