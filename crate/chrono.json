{"root":"0:0:2168","crate_version":"0.4.31","includes_private":false,"index":{"0:485":{"id":"0:485","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1305,0],"end":[1312,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:2850:2288","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:487:203","0:488:1525"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2556:3371":{"id":"0:2556:3371","crate_id":0,"name":"Impossible","span":{"filename":"src/format/mod.rs","begin":[395,4],"end":[395,14]},"visibility":"default","docs":"There is no possible date and time value with given set of fields.\n\nThis does not include the out-of-range conditions, which are trivially invalid.\nIt includes the case that there are one or more fields that are inconsistent to each other.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:2333:660":{"id":"0:2333:660","crate_id":0,"name":"eq","span":{"filename":"src/format/mod.rs","begin":[161,26],"end":[161,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"InternalNumeric","id":"0:2321:3242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2486:660":{"id":"0:2486:660","crate_id":0,"name":"eq","span":{"filename":"src/format/mod.rs","begin":[319,29],"end":[319,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Colons","id":"0:2472:3319","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2064:3465":{"id":"0:2064:3465","crate_id":0,"name":"hour12","span":{"filename":"src/traits.rs","begin":[274,4],"end":[281,5]},"visibility":"default","docs":"Returns the hour number from 1 to 12 with a boolean flag,\nwhich is false for AM and true for PM.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"bool"},{"primitive":"u32"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:37:2362":{"id":"0:37:2362","crate_id":0,"name":"num_days","span":{"filename":"src/duration.rs","begin":[156,4],"end":[158,5]},"visibility":"public","docs":"Returns the total number of whole days in the duration.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:43:2380":{"id":"0:43:2380","crate_id":0,"name":"num_microseconds","span":{"filename":"src/duration.rs","begin":[204,4],"end":[208,5]},"visibility":"public","docs":"Returns the total number of whole microseconds in the duration,\nor `None` on overflow (exceeding 2^63 microseconds in either direction).","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"primitive":"i64"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:345:2899":{"id":"0:345:2899","crate_id":0,"name":"to_rfc3339_opts","span":{"filename":"src/datetime/mod.rs","begin":[578,4],"end":[583,5]},"visibility":"public","docs":"Return an RFC 3339 and ISO 8601 date and time string with subseconds\nformatted as per `SecondsFormat`.\n\nIf `use_z` is true and the timezone is UTC (offset 0), uses `Z` as\nper [`Fixed::TimezoneOffsetColonZ`]. If `use_z` is false, uses\n[`Fixed::TimezoneOffsetColon`]\n\n# Examples\n\n```rust\n# use chrono::{FixedOffset, SecondsFormat, TimeZone, Utc, NaiveDate};\nlet dt = NaiveDate::from_ymd_opt(2018, 1, 26).unwrap().and_hms_micro_opt(18, 30, 9, 453_829).unwrap().and_local_timezone(Utc).unwrap();\nassert_eq!(dt.to_rfc3339_opts(SecondsFormat::Millis, false),\n           \"2018-01-26T18:30:09.453+00:00\");\nassert_eq!(dt.to_rfc3339_opts(SecondsFormat::Millis, true),\n           \"2018-01-26T18:30:09.453Z\");\nassert_eq!(dt.to_rfc3339_opts(SecondsFormat::Secs, true),\n           \"2018-01-26T18:30:09Z\");\n\nlet pst = FixedOffset::east_opt(8 * 60 * 60).unwrap();\nlet dt = pst.from_local_datetime(&NaiveDate::from_ymd_opt(2018, 1, 26).unwrap().and_hms_micro_opt(10, 30, 9, 453_829).unwrap()).unwrap();\nassert_eq!(dt.to_rfc3339_opts(SecondsFormat::Secs, true),\n           \"2018-01-26T10:30:09+08:00\");\n```","links":{"`Fixed::TimezoneOffsetColonZ`":"0:2363:3290","`Fixed::TimezoneOffsetColon`":"0:2357:3280"},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\"))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["secform",{"resolved_path":{"name":"SecondsFormat","id":"0:2127:2112","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["use_z",{"primitive":"bool"}]],"output":{"resolved_path":{"name":"String","id":"5:7489:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2216":{"id":"0:2216","crate_id":0,"name":null,"span":{"filename":"src/format/strftime.rs","begin":[165,16],"end":[165,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9531:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StrftimeItems","id":"0:2209:2527","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:2218:718"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2509:1725":{"id":"0:2509:1725","crate_id":0,"name":"0","span":{"filename":"src/format/mod.rs","begin":[346,12],"end":[346,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Numeric","id":"0:2264:3194","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:1169:2714":{"id":"0:1169:2714","crate_id":0,"name":"parse_and_remainder","span":{"filename":"src/naive/datetime/mod.rs","begin":[336,4],"end":[340,5]},"visibility":"public","docs":"Parses a string with the specified format string and returns a new `NaiveDateTime`, and a\nslice with the remaining portion of the string.\nSee the [`format::strftime` module](../format/strftime/index.html)\non the supported escape sequences.\n\nSimilar to [`parse_from_str`](#method.parse_from_str).\n\n# Example\n\n```rust\n# use chrono::{NaiveDate, NaiveDateTime};\nlet (datetime, remainder) = NaiveDateTime::parse_and_remainder(\n    \"2015-02-18 23:16:09 trailing text\", \"%Y-%m-%d %H:%M:%S\").unwrap();\nassert_eq!(\n    datetime,\n    NaiveDate::from_ymd_opt(2015, 2, 18).unwrap().and_hms_opt(23, 16, 9).unwrap()\n);\nassert_eq!(remainder, \" trailing text\");\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}],["fmt",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:906:2133","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1994:3846":{"id":"0:1994:3846","crate_id":0,"name":"num_days_from_monday","span":{"filename":"src/weekday.rs","begin":[131,4],"end":[133,5]},"visibility":"public","docs":"Returns a day-of-week number starting from Monday = 0.\n\n`w`:                        | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun`\n--------------------------- | ----- | ----- | ----- | ----- | ----- | ----- | -----\n`w.num_days_from_monday()`: | 0     | 1     | 2     | 3     | 4     | 5     | 6\n\n# Example\n\n```rust\n# use chrono::{Local, Datelike};\n// MTWRFSU is occasionally used as a single-letter abbreviation of the weekdays.\n// Use `num_days_from_monday` to index into the array.\nconst MTWRFSU: [char; 7] = ['M', 'T', 'W', 'R', 'F', 'S', 'U'];\n\nlet today = Local::now().weekday();\nprintln!(\"{}\", MTWRFSU[today.num_days_from_monday() as usize]);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:397:2675":{"id":"0:397:2675","crate_id":0,"name":"ordinal0","span":{"filename":"src/datetime/mod.rs","begin":[959,4],"end":[961,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1240":{"id":"0:1240","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1553,0],"end":[1560,1]},"visibility":"default","docs":"An addition of `Duration` to `NaiveDateTime` yields another `NaiveDateTime`.\n\nAs a part of Chrono's [leap second handling], the addition assumes that **there is no leap\nsecond ever**, except when the `NaiveDateTime` itself represents a leap  second in which case\nthe assumption becomes that **there is exactly a single leap second ever**.\n\n# Panics\n\nPanics if the resulting date would be out of range. Use [`NaiveDateTime::checked_add_signed`]\nto detect that.\n\n# Example\n\n```\nuse chrono::{Duration, NaiveDate};\n\nlet from_ymd = |y, m, d| NaiveDate::from_ymd_opt(y, m, d).unwrap();\n\nlet d = from_ymd(2016, 7, 8);\nlet hms = |h, m, s| d.and_hms_opt(h, m, s).unwrap();\nassert_eq!(hms(3, 5, 7) + Duration::zero(),             hms(3, 5, 7));\nassert_eq!(hms(3, 5, 7) + Duration::seconds(1),         hms(3, 5, 8));\nassert_eq!(hms(3, 5, 7) + Duration::seconds(-1),        hms(3, 5, 6));\nassert_eq!(hms(3, 5, 7) + Duration::seconds(3600 + 60), hms(4, 6, 7));\nassert_eq!(hms(3, 5, 7) + Duration::seconds(86_400),\n           from_ymd(2016, 7, 9).and_hms_opt(3, 5, 7).unwrap());\nassert_eq!(hms(3, 5, 7) + Duration::days(365),\n           from_ymd(2017, 7, 8).and_hms_opt(3, 5, 7).unwrap());\n\nlet hmsm = |h, m, s, milli| d.and_hms_milli_opt(h, m, s, milli).unwrap();\nassert_eq!(hmsm(3, 5, 7, 980) + Duration::milliseconds(450), hmsm(3, 5, 8, 430));\n```\n\nLeap seconds are handled,\nbut the addition assumes that it is the only leap second happened.\n\n```\n# use chrono::{Duration, NaiveDate};\n# let from_ymd = |y, m, d| NaiveDate::from_ymd_opt(y, m, d).unwrap();\n# let hmsm = |h, m, s, milli| from_ymd(2016, 7, 8).and_hms_milli_opt(h, m, s, milli).unwrap();\nlet leap = hmsm(3, 5, 59, 1_300);\nassert_eq!(leap + Duration::zero(),             hmsm(3, 5, 59, 1_300));\nassert_eq!(leap + Duration::milliseconds(-500), hmsm(3, 5, 59, 800));\nassert_eq!(leap + Duration::milliseconds(500),  hmsm(3, 5, 59, 1_800));\nassert_eq!(leap + Duration::milliseconds(800),  hmsm(3, 6, 0, 100));\nassert_eq!(leap + Duration::seconds(10),        hmsm(3, 6, 9, 300));\nassert_eq!(leap + Duration::seconds(-10),       hmsm(3, 5, 50, 300));\nassert_eq!(leap + Duration::days(1),\n           from_ymd(2016, 7, 9).and_hms_milli_opt(3, 5, 59, 300).unwrap());\n```\n\n[leap second handling]: crate::NaiveTime#leap-second-handling","links":{"crate::NaiveTime#leap-second-handling":"0:2742:2121","`NaiveDateTime::checked_add_signed`":"0:1184:2633"},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Add","id":"2:2845:2284","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1241:203","0:1242:301"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:161:1053":{"id":"0:161:1053","crate_id":0,"name":"offset","span":{"filename":"src/date.rs","begin":[243,4],"end":[245,5]},"visibility":"public","docs":"Retrieves an associated offset from UTC.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Tz"},"trait":{"name":"","id":"0:1906:2123","args":null}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:993:5136":{"id":"0:993:5136","crate_id":0,"name":"from_num_days_from_ce_opt","span":{"filename":"src/naive/date.rs","begin":[474,4],"end":[481,5]},"visibility":"public","docs":"Makes a new `NaiveDate` from a day's number in the proleptic Gregorian calendar, with\nJanuary 1, 1 being day 1.\n\n# Errors\n\nReturns `None` if the date is out of range.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet from_ndays_opt = NaiveDate::from_num_days_from_ce_opt;\nlet from_ymd = |y, m, d| NaiveDate::from_ymd_opt(y, m, d).unwrap();\n\nassert_eq!(from_ndays_opt(730_000),      Some(from_ymd(1999, 9, 3)));\nassert_eq!(from_ndays_opt(1),            Some(from_ymd(1, 1, 1)));\nassert_eq!(from_ndays_opt(0),            Some(from_ymd(0, 12, 31)));\nassert_eq!(from_ndays_opt(-1),           Some(from_ymd(0, 12, 30)));\nassert_eq!(from_ndays_opt(100_000_000),  None);\nassert_eq!(from_ndays_opt(-100_000_000), None);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["days",{"primitive":"i32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2684":{"id":"0:2684","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[75,47],"end":[75,51]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2788:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2261-0:3160:2143":{"id":"b:2:2261-0:3160:2143","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2255:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseWeekdayError","id":"0:3160:2143","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2263:2522"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2120:2106":{"id":"0:2120:2106","crate_id":0,"name":"Date","span":{"filename":"src/date.rs","begin":[60,0],"end":[63,1]},"visibility":"public","docs":"ISO 8601 calendar date with time zone.\n\nYou almost certainly want to be using a [`NaiveDate`] instead of this type.\n\nThis type primarily exists to aid in the construction of DateTimes that\nhave a timezone by way of the [`TimeZone`] datelike constructors (e.g.\n[`TimeZone::ymd`]).\n\nThis type should be considered ambiguous at best, due to the inherent lack\nof precision required for the time zone resolution.\n\nThere are some guarantees on the usage of `Date<Tz>`:\n\n- If properly constructed via [`TimeZone::ymd`] and others without an error,\n  the corresponding local date should exist for at least a moment.\n  (It may still have a gap from the offset changes.)\n\n- The `TimeZone` is free to assign *any* [`Offset`](crate::offset::Offset) to the\n  local date, as long as that offset did occur in given day.\n\n  For example, if `2015-03-08T01:59-08:00` is followed by `2015-03-08T03:00-07:00`,\n  it may produce either `2015-03-08-08:00` or `2015-03-08-07:00`\n  but *not* `2015-03-08+00:00` and others.\n\n- Once constructed as a full `DateTime`, [`DateTime::date`] and other associated\n  methods should return those for the original `Date`. For example, if `dt =\n  tz.ymd_opt(y,m,d).unwrap().hms(h,n,s)` were valid, `dt.date() == tz.ymd_opt(y,m,d).unwrap()`.\n\n- The date is timezone-agnostic up to one day (i.e. practically always),\n  so the local date and UTC date should be equal for most cases\n  even though the raw calculation between `NaiveDate` and `Duration` may not.","links":{"crate::offset::Offset":"0:1904:2122","`DateTime::date`":"0:316:2124","`TimeZone`":"0:1906:2123","`NaiveDate`":"0:2610:2119","`TimeZone::ymd`":"0:1910:3610"},"attrs":["#[deprecated(since = \"0.4.23\", note =\n\"Use `NaiveDate` or `DateTime<Tz>` instead\")]"],"deprecation":{"since":"0.4.23","note":"Use `NaiveDate` or `DateTime<Tz>` instead"},"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:139","0:178","a:2:2793:252-0:2120:2106","a:2:8606:8818-0:2120:2106","a:2:2833:8772-0:2120:2106","a:2:8607:8817-0:2120:2106","b:2:2571-0:2120:2106","b:2:2577-0:2120:2106","b:2:2582-0:2120:2106","b:2:2261-0:2120:2106","b:2:3412-0:2120:2106","b:2:2264-0:2120:2106","b:2:2567-0:2120:2106","b:5:5792-0:2120:2106","b:5:682-0:2120:2106","0:2124","0:186","0:245","0:215","0:238","0:235","0:213","0:231","0:227","0:252","0:242","0:219","0:224","0:249","0:211","0:221"]}}},"2:2573:744":{"id":"2:2573:744","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:101-0:2761:2117":{"id":"0:101-0:2761:2117","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[504,20],"end":[504,31]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"inner":{"import":{"source":"crate::FixedOffset","name":"FixedOffset","id":"0:2761:2117","glob":false}}},"0:2326":{"id":"0:2326","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[161,16],"end":[161,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2330:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalNumeric","id":"0:2321:3242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2328":{"id":"0:2328","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[161,20],"end":[161,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9747:148","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalNumeric","id":"0:2321:3242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2329:781"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8606:8818-0:3124:2116":{"id":"a:2:8606:8818-0:3124:2116","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8606:8818","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Weekday","id":"0:3124:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8606:8818-0:2120:2106":{"id":"a:2:8606:8818-0:2120:2106","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Tz"},"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:8606:8818","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8606:8818","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1172:2124":{"id":"0:1172:2124","crate_id":0,"name":"date","span":{"filename":"src/naive/datetime/mod.rs","begin":[353,4],"end":[355,5]},"visibility":"public","docs":"Retrieves a date component.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet dt = NaiveDate::from_ymd_opt(2016, 7, 8).unwrap().and_hms_opt(9, 10, 11).unwrap();\nassert_eq!(dt.date(), NaiveDate::from_ymd_opt(2016, 7, 8).unwrap());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2261-0:3106:2141":{"id":"b:2:2261-0:3106:2141","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2255:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RoundingError","id":"0:3106:2141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2263:2522"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:3242":{"id":"0:3242","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[221,50],"end":[221,60]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","lt","le","ge"],"trait":{"name":"PartialOrd","id":"2:2367:206","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Months","id":"0:3225:2145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3243:1100"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3240":{"id":"0:3240","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[221,39],"end":[221,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2325:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Months","id":"0:3225:2145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3241:660"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2036-0:3170:2114":{"id":"0:2036-0:3170:2114","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[548,16],"end":[548,21]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"month::Month","name":"Month","id":"0:3170:2114","glob":false}}},"2:12522:2713":{"id":"2:12522:2713","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:12067:132","`FromStr`":"2:12066:3084"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41709:231","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:12066:3084","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:12066:3084","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2345:3263":{"id":"0:2345:3263","crate_id":0,"name":"UpperAmPm","span":{"filename":"src/format/mod.rs","begin":[201,4],"end":[201,13]},"visibility":"default","docs":"AM/PM.\n\nPrints in upper case, reads in any case.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:3218":{"id":"0:3218","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[31,44],"end":[31,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9747:148","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Month","id":"0:3170:2114","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3219:781"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:242":{"id":"0:242","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[527,0],"end":[532,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"SubAssign","id":"2:2880:2524","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:244:1526"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2127:2112":{"id":"0:2127:2112","crate_id":0,"name":"SecondsFormat","span":{"filename":"src/datetime/mod.rs","begin":[53,0],"end":[77,1]},"visibility":"public","docs":"Specific formatting options for seconds. This may be extended in the\nfuture, so exhaustive matching in external code is not recommended.\n\nSee the `TimeZone::to_rfc3339_opts` function for usage.","links":{},"attrs":["#[allow(clippy :: manual_non_exhaustive)]"],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":true,"variants":["0:2128:2726","0:2130:2729","0:2132:2732","0:2134:2735","0:2136:2739"],"impls":["a:2:2793:252-0:2127:2112","a:2:2776:242-0:2127:2112","a:2:8606:8818-0:2127:2112","a:2:2833:8772-0:2127:2112","a:2:8607:8817-0:2127:2112","b:2:2571-0:2127:2112","b:2:2577-0:2127:2112","b:2:2582-0:2127:2112","b:2:2261-0:2127:2112","b:2:3412-0:2127:2112","b:2:2264-0:2127:2112","b:2:2567-0:2127:2112","b:5:682-0:2127:2112","0:2140","0:2149","0:2142","0:2148","0:2151","0:2145","0:2146","0:2143"]}}},"a:2:2833:8772-0:2472:3319":{"id":"a:2:2833:8772-0:2472:3319","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2833:8772","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Colons","id":"0:2472:3319","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1847:2624":{"id":"0:1847:2624","crate_id":0,"name":"from_offset","span":{"filename":"src/offset/local/mod.rs","begin":[155,4],"end":[157,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["_offset",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Local","id":"0:3052:2107","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:0:1956-0:2668:2120":{"id":"b:0:1956-0:2668:2120","crate_id":0,"name":null,"span":{"filename":"src/round.rs","begin":[47,0],"end":[75,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Add","id":"2:2845:2284","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sub","id":"2:2850:2288","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Timelike","id":"0:2062:2115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"SubsecRound","id":"0:1953:2110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1958:7892","0:1959:7897"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:86-0:2106:2104":{"id":"0:86-0:2106:2104","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[480,0],"end":[480,34]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"import":{"source":"duration::OutOfRangeError","name":"OutOfRangeError","id":"0:2106:2104","glob":false}}},"0:1181:2829":{"id":"0:1181:2829","crate_id":0,"name":"timestamp_subsec_millis","span":{"filename":"src/naive/datetime/mod.rs","begin":[546,4],"end":[548,5]},"visibility":"public","docs":"Returns the number of milliseconds since the last whole non-leap second.\n\nThe return value ranges from 0 to 999,\nor for [leap seconds](./struct.NaiveTime.html#leap-second-handling), to 1,999.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet dt = NaiveDate::from_ymd_opt(2016, 7, 8).unwrap().and_hms_nano_opt(9, 10, 11, 123_456_789).unwrap();\nassert_eq!(dt.timestamp_subsec_millis(), 123);\n\nlet dt = NaiveDate::from_ymd_opt(2015, 7, 1).unwrap().and_hms_nano_opt(8, 59, 59, 1_234_567_890).unwrap();\nassert_eq!(dt.timestamp_subsec_millis(), 1_234);\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2582-0:2610:2119":{"id":"b:2:2582-0:2610:2119","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2585:133","2:2586:1588"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1231:3041":{"id":"0:1231:3041","crate_id":0,"name":"nanosecond","span":{"filename":"src/naive/datetime/mod.rs","begin":[1395,4],"end":[1397,5]},"visibility":"default","docs":"Returns the number of nanoseconds since the whole non-leap second.\nThe range from 1,000,000,000 to 1,999,999,999 represents\nthe [leap second](./struct.NaiveTime.html#leap-second-handling).\n\nSee also the [`NaiveTime::nanosecond`] method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Timelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().and_hms_milli_opt(12, 34, 56, 789).unwrap();\nassert_eq!(dt.nanosecond(), 789_000_000);\n```","links":{"`NaiveTime::nanosecond`":"0:1430:3041"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5535:40136":{"id":"5:5535:40136","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:276:3166","`String`":"5:7489:248"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:276:3166","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7489:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2261-0:2389:3299":{"id":"b:2:2261-0:2389:3299","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2255:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalFixed","id":"0:2389:3299","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2263:2522"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2833:8772-0:2243:3177":{"id":"a:2:2833:8772-0:2243:3177","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2833:8772","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Pad","id":"0:2243:3177","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:477:1526":{"id":"0:477:1526","crate_id":0,"name":"sub_assign","span":{"filename":"src/datetime/mod.rs","begin":[1280,4],"end":[1285,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["rhs",{"resolved_path":{"name":"OldDuration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2382":{"id":"0:2382","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[176,27],"end":[176,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2330:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Fixed","id":"0:2334:2716","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1961:2140":{"id":"0:1961:2140","crate_id":0,"name":"DurationRound","span":{"filename":"src/round.rs","begin":[101,0],"end":[143,1]},"visibility":"public","docs":"Extension trait for rounding or truncating a DateTime by a Duration.\n\n# Limitations\nBoth rounding and truncating are done via [`Duration::num_nanoseconds`] and\n[`DateTime::timestamp_nanos`]. This means that they will fail if either the\n`Duration` or the `DateTime` are too big to represented as nanoseconds. They\nwill also fail if the `Duration` is bigger than the timestamp.","links":{"`Duration::num_nanoseconds`":"0:44:2384","`DateTime::timestamp_nanos`":"0:322:2820"},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"items":["0:1962:132","0:1963:7915","0:1964:7920"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:1965","0:1970"]}}},"0:1999":{"id":"0:1999","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[173,0],"end":[188,1]},"visibility":"default","docs":"Any weekday can be represented as an integer from 0 to 6, which equals to\n[`Weekday::num_days_from_monday`](#method.num_days_from_monday) in this implementation.\nDo not heavily depend on this though; use explicit methods whenever possible.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Weekday","id":"0:3124:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2000:133","0:2001:1588"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2054:2677":{"id":"0:2054:2677","crate_id":0,"name":"with_year","span":{"filename":"src/traits.rs","begin":[119,4],"end":[119,51]},"visibility":"default","docs":"Makes a new value with the year number changed, while keeping the same month and day.\n\nThis method assumes you want to work on the date as a year-month-day value. Don't use it if\nyou want the ordinal to stay the same after changing the year, of if you want the week and\nweekday values to stay the same.\n\n# Errors\n\nReturns `None` when:\n\n- The resulting date does not exist (February 29 in a non-leap year).\n- The year is out of range for [`NaiveDate`].\n- In case of [`DateTime<Tz>`] if the resulting date and time fall within a timezone\n  transition such as from DST to standard time.\n\n[`NaiveDate`]: crate::NaiveDate\n[`DateTime<Tz>`]: crate::DateTime\n\n# Examples\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(\n    NaiveDate::from_ymd_opt(2020, 5, 13).unwrap().with_year(2023).unwrap(),\n    NaiveDate::from_ymd_opt(2023, 5, 13).unwrap()\n);\n// Resulting date 2023-02-29 does not exist:\nassert!(NaiveDate::from_ymd_opt(2020, 2, 29).unwrap().with_year(2023).is_none());\n\n// Don't use `with_year` if you want the ordinal date to stay the same:\nassert_ne!(\n    NaiveDate::from_yo_opt(2020, 100).unwrap().with_year(2023).unwrap(),\n    NaiveDate::from_yo_opt(2023, 100).unwrap() // result is 2023-101\n);\n```","links":{"crate::NaiveDate":"0:2610:2119","crate::DateTime":"0:2154:2111"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["year",{"primitive":"i32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"b:2:2264-0:2761:2117":{"id":"b:2:2264-0:2761:2117","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2258:101","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2266:7207"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1246":{"id":"0:1246","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1573,0],"end":[1578,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AddAssign","id":"2:2876:2523","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1247:302"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1088:744":{"id":"0:1088:744","crate_id":0,"name":"from","span":{"filename":"src/naive/date.rs","begin":[2011,4],"end":[2013,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["naive_datetime",{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1248":{"id":"0:1248","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1580,0],"end":[1585,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AddAssign","id":"2:2876:2523","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"2:44300:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1249:302"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2261-0:2742:2121":{"id":"b:2:2261-0:2742:2121","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2255:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2263:2522"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8606:8818-0:2243:3177":{"id":"a:2:8606:8818-0:2243:3177","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8606:8818","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Pad","id":"0:2243:3177","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2776:242-0:2472:3319":{"id":"a:2:2776:242-0:2472:3319","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2776:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Colons","id":"0:2472:3319","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8606:8818-0:3052:2107":{"id":"a:2:8606:8818-0:3052:2107","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8606:8818","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Local","id":"0:3052:2107","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2264-0:2321:3242":{"id":"b:2:2264-0:2321:3242","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2258:101","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalNumeric","id":"0:2321:3242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2266:7207"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1561:203":{"id":"0:1561:203","crate_id":0,"name":"Output","span":{"filename":"src/offset/fixed.rs","begin":[211,4],"end":[211,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:3248":{"id":"0:3248","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[233,9],"end":[233,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseMonthError","id":"0:3246:2146","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3249:454"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1197:2853":{"id":"0:1197:2853","crate_id":0,"name":"and_local_timezone","span":{"filename":"src/naive/datetime/mod.rs","begin":[969,4],"end":[971,5]},"visibility":"public","docs":"Converts the `NaiveDateTime` into the timezone-aware `DateTime<Tz>`\nwith the provided timezone, if possible.\n\nThis can fail in cases where the local time represented by the `NaiveDateTime`\nis not a valid local timestamp in the target timezone due to an offset transition\nfor example if the target timezone had a change from +00:00 to +01:00\noccuring at 2015-09-05 22:59:59, then a local time of 2015-09-05 23:56:04\ncould never occur. Similarly, if the offset transitioned in the opposite direction\nthen there would be two local times of 2015-09-05 23:56:04, one at +00:00 and one\nat +01:00.\n\n# Example\n\n```\nuse chrono::{NaiveDate, FixedOffset};\nlet hour = 3600;\nlet tz = FixedOffset::east_opt(5 * hour).unwrap();\nlet dt = NaiveDate::from_ymd_opt(2015, 9, 5).unwrap().and_hms_opt(23, 56, 4).unwrap().and_local_timezone(tz).unwrap();\nassert_eq!(dt.timezone(), tz);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["tz",{"generic":"Tz"}]],"output":{"resolved_path":{"name":"LocalResult","id":"0:3073:2138","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2606":{"id":"0:2606","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[134,50],"end":[134,60]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","lt","le","ge"],"trait":{"name":"PartialOrd","id":"2:2367:206","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Days","id":"0:2589:2135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2607:1100"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2571-0:2553:3365":{"id":"b:2:2571-0:2553:3365","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseErrorKind","id":"0:2553:3365","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2573:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2608":{"id":"0:2608","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[134,62],"end":[134,65]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["min","max","clamp"],"trait":{"name":"Ord","id":"2:2361:199","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Days","id":"0:2589:2135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2609:461"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1364:2670":{"id":"0:1364:2670","crate_id":0,"name":"year","span":{"filename":"src/naive/isoweek.rs","begin":[75,4],"end":[77,5]},"visibility":"public","docs":"Returns the year number for this ISO week.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike, Weekday};\n\nlet d = NaiveDate::from_isoywd_opt(2015, 1, Weekday::Mon).unwrap();\nassert_eq!(d.iso_week().year(), 2015);\n```\n\nThis year number might not match the calendar year number.\nContinuing the example...\n\n```\n# use chrono::{NaiveDate, Datelike, Weekday};\n# let d = NaiveDate::from_isoywd_opt(2015, 1, Weekday::Mon).unwrap();\nassert_eq!(d.year(), 2014);\nassert_eq!(d, NaiveDate::from_ymd_opt(2014, 12, 29).unwrap());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1915:5666":{"id":"0:1915:5666","crate_id":0,"name":"isoywd_opt","span":{"filename":"src/offset/mod.rs","begin":[339,4],"end":[344,5]},"visibility":"default","docs":"Makes a new `Date` from ISO week date (year and week number), day of the week (DOW) and\nthe current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\nThe resulting `Date` may have a different year from the input year.\n\nThe time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),\nbut it will propagate to the `DateTime` values constructed via this date.\n\nReturns `None` on the out-of-range date and/or invalid week number.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note =\n\"use `from_local_datetime()` with a `NaiveDateTime` instead\")]","#[allow(deprecated)]"],"deprecation":{"since":"0.4.23","note":"use `from_local_datetime()` with a `NaiveDateTime` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["year",{"primitive":"i32"}],["week",{"primitive":"u32"}],["weekday",{"resolved_path":{"name":"Weekday","id":"0:3124:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"LocalResult","id":"0:3073:2138","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3192:3429":{"id":"0:3192:3429","crate_id":0,"name":"August","span":{"filename":"src/month.rs","begin":[51,4],"end":[51,14]},"visibility":"default","docs":"August","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":{"expr":"7","value":"7"}}}},"0:2181:2142":{"id":"0:2181:2142","crate_id":0,"name":"weekday","span":{"filename":"src/format/parsed.rs","begin":[73,4],"end":[73,32]},"visibility":"public","docs":"Day of the week.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::Weekday","id":"0:3124:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}},"0:46:2387":{"id":"0:46:2387","crate_id":0,"name":"checked_sub","span":{"filename":"src/duration.rs","begin":[239,4],"end":[254,5]},"visibility":"public","docs":"Subtract two durations, returning `None` if overflow occurred.","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2576:660":{"id":"0:2576:660","crate_id":0,"name":"eq","span":{"filename":"src/format/mod.rs","begin":[386,23],"end":[386,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ParseErrorKind","id":"0:2553:3365","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1408:5871":{"id":"0:1408:5871","crate_id":0,"name":"from_num_seconds_from_midnight_opt","span":{"filename":"src/naive/time/mod.rs","begin":[465,4],"end":[470,5]},"visibility":"public","docs":"Makes a new `NaiveTime` from the number of seconds since midnight and nanosecond.\n\nThe nanosecond part is allowed to exceed 1,000,000,000 in order to represent a\n[leap second](#leap-second-handling), but only when `secs % 60 == 59`.\n\n# Errors\n\nReturns `None` on invalid number of seconds and/or nanosecond.\n\n# Example\n\n```\nuse chrono::NaiveTime;\n\nlet from_nsecs_opt = NaiveTime::from_num_seconds_from_midnight_opt;\n\nassert!(from_nsecs_opt(0, 0).is_some());\nassert!(from_nsecs_opt(86399, 999_999_999).is_some());\nassert!(from_nsecs_opt(86399, 1_999_999_999).is_some()); // a leap second after 23:59:59\nassert!(from_nsecs_opt(86_400, 0).is_none());\nassert!(from_nsecs_opt(86399, 2_000_000_000).is_none());\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["secs",{"primitive":"u32"}],["nano",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1851:3880":{"id":"0:1851:3880","crate_id":0,"name":"offset_from_utc_datetime","span":{"filename":"src/offset/local/mod.rs","begin":[175,4],"end":[177,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["utc",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8606:8818-0:3246:2146":{"id":"a:2:8606:8818-0:3246:2146","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8606:8818","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseMonthError","id":"0:3246:2146","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2443:781":{"id":"0:2443:781","crate_id":0,"name":"hash","span":{"filename":"src/format/mod.rs","begin":[285,44],"end":[285,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9755:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2577-0:3073:2138":{"id":"b:2:2577-0:3073:2138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2547:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LocalResult","id":"0:3073:2138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2580:133","2:2581:1590"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8607:8817-0:3052:2107":{"id":"a:2:8607:8817-0:3052:2107","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8607:8817","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Local","id":"0:3052:2107","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1932:2630":{"id":"0:1932:2630","crate_id":0,"name":"from_utc_date","span":{"filename":"src/offset/mod.rs","begin":[518,4],"end":[520,5]},"visibility":"default","docs":"Converts the UTC `NaiveDate` to the local time.\nThe UTC is continuous and thus this cannot fail (but can give the duplicate local time).","links":{},"attrs":["#[allow(clippy :: wrong_self_convention)]","#[deprecated(since = \"0.4.23\", note = \"use `from_utc_datetime()` instead\")]","#[allow(deprecated)]"],"deprecation":{"since":"0.4.23","note":"use `from_utc_datetime()` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["utc",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2004:8066":{"id":"0:2004:8066","crate_id":0,"name":"from_u64","span":{"filename":"src/weekday.rs","begin":[209,4],"end":[220,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["n",{"primitive":"u64"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Weekday","id":"0:3124:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2626":{"id":"0:2626","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[193,53],"end":[193,58]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2627:454"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1535:7121":{"id":"0:1535:7121","crate_id":0,"name":"west","span":{"filename":"src/offset/fixed.rs","begin":[74,4],"end":[76,5]},"visibility":"public","docs":"Makes a new `FixedOffset` for the Western Hemisphere with given timezone difference.\nThe negative `secs` means the Eastern Hemisphere.\n\nPanics on the out-of-bound `secs`.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `west_opt()` instead\")]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"use `west_opt()` instead"},"inner":{"function":{"decl":{"inputs":[["secs",{"primitive":"i32"}]],"output":{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2833:8772-0:2493:168":{"id":"a:2:2833:8772-0:2493:168","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2833:8772","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Item","id":"0:2493:168","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1569":{"id":"0:1569","crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[237,0],"end":[244,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Add","id":"2:2845:2284","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:1571:203","0:1572:301"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3131:3840":{"id":"0:3131:3840","crate_id":0,"name":"Wed","span":{"filename":"src/weekday.rs","begin":[42,4],"end":[42,11]},"visibility":"default","docs":"Wednesday.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":{"expr":"2","value":"2"}}}},"0:2373:3241":{"id":"0:2373:3241","crate_id":0,"name":"Internal","span":{"filename":"src/format/mod.rs","begin":[256,4],"end":[256,27]},"visibility":"default","docs":"Internal uses only.\n\nThis item exists so that one can add additional internal-only formatting\nwithout breaking major compatibility (as enum variants cannot be selectively private).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:2375:1725"]},"discriminant":null}}},"0:1934-0:3052:2107":{"id":"0:1934-0:3052:2107","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[537,0],"end":[537,22]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"clock\")]","#[doc(no_inline)]"],"deprecation":null,"inner":{"import":{"source":"offset::Local","name":"Local","id":"0:3052:2107","glob":false}}},"0:320:2806":{"id":"0:320:2806","crate_id":0,"name":"timestamp_millis","span":{"filename":"src/datetime/mod.rs","begin":[245,4],"end":[247,5]},"visibility":"public","docs":"Returns the number of non-leap-milliseconds since January 1, 1970 UTC.\n\n# Example\n\n```\nuse chrono::{Utc, NaiveDate};\n\nlet dt = NaiveDate::from_ymd_opt(1970, 1, 1).unwrap().and_hms_milli_opt(0, 0, 1, 444).unwrap().and_local_timezone(Utc).unwrap();\nassert_eq!(dt.timestamp_millis(), 1_444);\n\nlet dt = NaiveDate::from_ymd_opt(2001, 9, 9).unwrap().and_hms_milli_opt(1, 46, 40, 555).unwrap().and_local_timezone(Utc).unwrap();\nassert_eq!(dt.timestamp_millis(), 1_000_000_000_555);\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2833:8772-0:2742:2121":{"id":"a:2:2833:8772-0:2742:2121","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2833:8772","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3412-0:2209:2527":{"id":"b:2:3412-0:2209:2527","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3410:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StrftimeItems","id":"0:2209:2527","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3414:1603"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2347:3234":{"id":"0:2347:3234","crate_id":0,"name":"Nanosecond","span":{"filename":"src/format/mod.rs","begin":[205,4],"end":[205,14]},"visibility":"default","docs":"An optional dot plus one or more digits for left-aligned nanoseconds.\nMay print nothing, 3, 6 or 9 digits according to the available accuracy.\nSee also [`Numeric::Nanosecond`](./enum.Numeric.html#variant.Nanosecond).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:2577-0:2389:3299":{"id":"b:2:2577-0:2389:3299","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2547:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalFixed","id":"0:2389:3299","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2580:133","2:2581:1590"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:338:2640":{"id":"0:338:2640","crate_id":0,"name":"signed_duration_since","span":{"filename":"src/datetime/mod.rs","begin":[472,4],"end":[477,5]},"visibility":"public","docs":"Subtracts another `DateTime` from the current date and time.\nThis does not overflow or underflow at all.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"impl_trait":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2255:100","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz2"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"resolved_path":{"name":"OldDuration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Tz2","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"impl Borrow<DateTime<Tz2>>","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2255:100","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz2"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2158":{"id":"0:2158","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[84,9],"end":[84,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Tz"},"trait":{"name":"","id":"0:1906:2123","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:2160:454"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1455:1526":{"id":"0:1455:1526","crate_id":0,"name":"sub_assign","span":{"filename":"src/naive/time/mod.rs","begin":[1230,4],"end":[1234,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["rhs",{"resolved_path":{"name":"Duration","id":"2:44300:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2571-0:3073:2138":{"id":"b:2:2571-0:3073:2138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LocalResult","id":"0:3073:2138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2573:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2582-0:2243:3177":{"id":"b:2:2582-0:2243:3177","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Pad","id":"0:2243:3177","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2585:133","2:2586:1588"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2264-0:3170:2114":{"id":"b:2:2264-0:3170:2114","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2258:101","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Month","id":"0:3170:2114","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2266:7207"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:362:744":{"id":"0:362:744","crate_id":0,"name":"from","span":{"filename":"src/datetime/mod.rs","begin":[680,4],"end":[682,5]},"visibility":"default","docs":"Convert this `DateTime<FixedOffset>` instance into a `DateTime<Utc>` instance.\n\nConversion is performed via [`DateTime::with_timezone`], accounting for the timezone\ndifference.","links":{"`DateTime::with_timezone`":"0:329:2627"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2571-0:2445:3316":{"id":"b:2:2571-0:2445:3316","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetPrecision","id":"0:2445:3316","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2573:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1451":{"id":"0:1451","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[1217,0],"end":[1226,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:2850:2288","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"2:44300:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1452:203","0:1453:1525"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2463":{"id":"0:2463","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[298,29],"end":[298,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2786:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetPrecision","id":"0:2445:3316","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1278:718":{"id":"0:1278:718","crate_id":0,"name":"fmt","span":{"filename":"src/naive/datetime/mod.rs","begin":[1871,4],"end":[1875,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9506:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9487:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1037:5386":{"id":"0:1037:5386","crate_id":0,"name":"leap_year","span":{"filename":"src/naive/date.rs","begin":[1432,4],"end":[1434,5]},"visibility":"public","docs":"Returns `true` if this is a leap year.\n\n```\n# use chrono::NaiveDate;\nassert_eq!(NaiveDate::from_ymd_opt(2000, 1, 1).unwrap().leap_year(), true);\nassert_eq!(NaiveDate::from_ymd_opt(2001, 1, 1).unwrap().leap_year(), false);\nassert_eq!(NaiveDate::from_ymd_opt(2002, 1, 1).unwrap().leap_year(), false);\nassert_eq!(NaiveDate::from_ymd_opt(2003, 1, 1).unwrap().leap_year(), false);\nassert_eq!(NaiveDate::from_ymd_opt(2004, 1, 1).unwrap().leap_year(), true);\nassert_eq!(NaiveDate::from_ymd_opt(2100, 1, 1).unwrap().leap_year(), false);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8607:8817-0:2589:2135":{"id":"a:2:8607:8817-0:2589:2135","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8607:8817","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Days","id":"0:2589:2135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:343:2875":{"id":"0:343:2875","crate_id":0,"name":"to_rfc2822","span":{"filename":"src/datetime/mod.rs","begin":[530,4],"end":[535,5]},"visibility":"public","docs":"Returns an RFC 2822 date and time string such as `Tue, 1 Jul 2003 10:52:37 +0200`.\n\n# Panics\n\nPanics if the date can not be represented in this format: the year may not be negative and\ncan not have more than 4 digits.","links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\"))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7489:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:511":{"id":"0:511","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1393,0],"end":[1399,1]},"visibility":"default","docs":"Accepts a relaxed form of RFC3339.\nA space or a 'T' are accepted as the separator between the date and time\nparts.\n\nAll of these examples are equivalent:\n```\n# use chrono::{DateTime, Local};\n\"2012-12-12T12:12:12Z\".parse::<DateTime<Local>>()?;\n\"2012-12-12 12:12:12Z\".parse::<DateTime<Local>>()?;\n\"2012-12-12 12:12:12+0000\".parse::<DateTime<Local>>()?;\n\"2012-12-12 12:12:12+00:00\".parse::<DateTime<Local>>()?;\n# Ok::<(), chrono::ParseError>(())\n```","links":{},"attrs":["#[cfg(feature = \"clock\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:12066:3084","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::offset::Local","id":"0:3052:2107","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:512:132","0:513:3085"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8606:8818-0:2389:3299":{"id":"a:2:8606:8818-0:2389:3299","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8606:8818","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalFixed","id":"0:2389:3299","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1097":{"id":"0:1097","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[2058,0],"end":[2071,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["eq_by","rposition","try_fold","take","by_ref","fold","take_while","max_by_key","intersperse_with","ne","map","is_sorted","unzip","all","try_for_each","cloned","try_collect","map_while","for_each","find","next_chunk","eq","any","is_sorted_by","array_chunks","reduce","enumerate","collect_into","size_hint","flatten","collect","filter","advance_by","copied","partial_cmp","is_sorted_by_key","product","last","try_reduce","partition","map_windows","min_by","filter_map","nth","flat_map","position","cycle","chain","min","rev","cmp","lt","skip","cmp_by","gt","find_map","__iterator_get_unchecked","partition_in_place","fuse","min_by_key","peekable","sum","step_by","scan","partial_cmp_by","try_find","ge","is_partitioned","inspect","zip","skip_while","max","intersperse","count","max_by","le"],"trait":{"name":"Iterator","id":"2:7627:173","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateWeeksIterator","id":"0:2648:4960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1098:168","0:1099:1016","0:1100:5549"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1403:6666":{"id":"0:1403:6666","crate_id":0,"name":"from_hms_micro","span":{"filename":"src/naive/time/mod.rs","begin":[334,4],"end":[336,5]},"visibility":"public","docs":"Makes a new `NaiveTime` from hour, minute, second and microsecond.\n\nThe microsecond part is allowed to exceed 1,000,000,000 in order to represent a\n[leap second](#leap-second-handling), but only when `sec == 59`.\n\n# Panics\n\nPanics on invalid hour, minute, second and/or microsecond.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `from_hms_micro_opt()` instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"use `from_hms_micro_opt()` instead"},"inner":{"function":{"decl":{"inputs":[["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}],["micro",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2128:2726":{"id":"0:2128:2726","crate_id":0,"name":"Secs","span":{"filename":"src/datetime/mod.rs","begin":[55,4],"end":[55,8]},"visibility":"default","docs":"Format whole seconds only, with no decimal point nor subseconds.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"a:2:2833:8772-0:2724:2136":{"id":"a:2:2833:8772-0:2724:2136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2833:8772","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IsoWeek","id":"0:2724:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2085:127":{"id":"0:2085:127","crate_id":0,"name":"Duration","span":{"filename":"src/duration.rs","begin":[55,0],"end":[58,1]},"visibility":"public","docs":"ISO 8601 time duration with nanosecond precision.\n\nThis also allows for the negative duration; see individual methods for details.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:27","a:2:2793:252-0:2085:127","a:2:2776:242-0:2085:127","a:2:8606:8818-0:2085:127","a:2:2833:8772-0:2085:127","a:2:8607:8817-0:2085:127","b:2:2571-0:2085:127","b:2:2577-0:2085:127","b:2:2582-0:2085:127","b:2:2261-0:2085:127","b:2:3412-0:2085:127","b:2:2264-0:2085:127","b:2:2567-0:2085:127","b:5:5792-0:2085:127","b:5:682-0:2085:127","0:2091","0:1240","0:74","0:2095","0:1439","0:66","0:2097","0:2094","0:78","0:2099","0:457","0:1436","0:57","0:2101","0:238","0:467","0:2092","0:1446","0:235","0:2090","0:1246","0:2088","0:231","0:1082","0:1259","0:1253","0:475","0:2103","0:1079","0:54","0:1449","0:69","0:63","0:1062","0:449","0:242","0:60","0:1065"]}}},"b:5:5792-0:2106:2104":{"id":"b:5:5792-0:2106:2104","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9536:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5790:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRangeError","id":"0:2106:2104","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5794:1565"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2748":{"id":"0:2748","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[205,20],"end":[205,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2787:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1489-0:2589:2135":{"id":"0:1489-0:2589:2135","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[531,16],"end":[531,20]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"inner":{"import":{"source":"naive::Days","name":"Days","id":"0:2589:2135","glob":false}}},"0:327:1053":{"id":"0:327:1053","crate_id":0,"name":"offset","span":{"filename":"src/datetime/mod.rs","begin":[342,4],"end":[344,5]},"visibility":"public","docs":"Retrieves an associated offset from UTC.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Tz"},"trait":{"name":"","id":"0:1906:2123","args":null}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1908:3116":{"id":"0:1908:3116","crate_id":0,"name":"with_ymd_and_hms","span":{"filename":"src/offset/mod.rs","begin":[227,4],"end":[241,5]},"visibility":"default","docs":"Make a new `DateTime` from year, month, day, time components and current time zone.\n\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\n\nReturns `LocalResult::None` on invalid input data.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["year",{"primitive":"i32"}],["month",{"primitive":"u32"}],["day",{"primitive":"u32"}],["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"LocalResult","id":"0:3073:2138","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2571-0:3256:2158":{"id":"b:2:2571-0:3256:2158","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRange","id":"0:3256:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2573:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2027:8153":{"id":"0:2027:8153","crate_id":0,"name":"from_u32","span":{"filename":"src/month.rs","begin":[201,4],"end":[217,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["n",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Month","id":"0:3170:2114","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2571-0:2584:2137":{"id":"b:2:2571-0:2584:2137","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveWeek","id":"0:2584:2137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2573:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:5792-0:2610:2119":{"id":"b:5:5792-0:2610:2119","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9536:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5790:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5794:1565"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1881":{"id":"0:1881","crate_id":0,"name":null,"span":{"filename":"src/offset/utc.rs","begin":[139,0],"end":[143,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9531:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Utc","id":"0:3059:2118","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1882:718"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2571-0:2761:2117":{"id":"b:2:2571-0:2761:2117","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2573:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:224":{"id":"0:224","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[490,0],"end":[494,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["min","max","clamp"],"trait":{"name":"Ord","id":"2:2361:199","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:226:461"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:356:60":{"id":"0:356:60","crate_id":0,"name":"default","span":{"filename":"src/datetime/mod.rs","begin":[646,4],"end":[648,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2180:3743":{"id":"0:2180:3743","crate_id":0,"name":"isoweek","span":{"filename":"src/format/parsed.rs","begin":[70,4],"end":[70,28]},"visibility":"public","docs":"[ISO week number](../naive/struct.NaiveDate.html#week-date)\n(1--52 or 1--53 depending on the year).","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"bindings":[]}}}}}},"0:2594":{"id":"0:2594","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[134,16],"end":[134,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2788:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Days","id":"0:2589:2135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1402:2590":{"id":"0:1402:2590","crate_id":0,"name":"from_hms_milli_opt","span":{"filename":"src/naive/time/mod.rs","begin":[313,4],"end":[321,5]},"visibility":"public","docs":"Makes a new `NaiveTime` from hour, minute, second and millisecond.\n\nThe millisecond part is allowed to exceed 1,000,000,000 in order to represent a\n[leap second](#leap-second-handling), but only when `sec == 59`.\n\n# Errors\n\nReturns `None` on invalid hour, minute, second and/or millisecond.\n\n# Example\n\n```\nuse chrono::NaiveTime;\n\nlet from_hmsm_opt = NaiveTime::from_hms_milli_opt;\n\nassert!(from_hmsm_opt(0, 0, 0, 0).is_some());\nassert!(from_hmsm_opt(23, 59, 59, 999).is_some());\nassert!(from_hmsm_opt(23, 59, 59, 1_999).is_some()); // a leap second after 23:59:59\nassert!(from_hmsm_opt(24, 0, 0, 0).is_none());\nassert!(from_hmsm_opt(23, 60, 0, 0).is_none());\nassert!(from_hmsm_opt(23, 59, 60, 0).is_none());\nassert!(from_hmsm_opt(23, 59, 59, 2_000).is_none());\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}],["milli",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:98-0:2062:2115":{"id":"0:98-0:2062:2115","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[502,37],"end":[502,45]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"inner":{"import":{"source":"crate::Timelike","name":"Timelike","id":"0:2062:2115","glob":false}}},"0:694:3818":{"id":"0:694:3818","crate_id":0,"name":"to_naive_date","span":{"filename":"src/format/parsed.rs","begin":[296,4],"end":[491,5]},"visibility":"public","docs":"Returns a parsed naive date out of given fields.\n\nThis method is able to determine the date from given subset of fields:\n\n- Year, month, day.\n- Year, day of the year (ordinal).\n- Year, week number counted from Sunday or Monday, day of the week.\n- ISO week date.\n\nGregorian year and ISO week date year can have their century number (`*_div_100`) omitted,\nthe two-digit year is used to guess the century number then.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:906:2133","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2776:242-0:2389:3299":{"id":"a:2:2776:242-0:2389:3299","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2776:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalFixed","id":"0:2389:3299","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2261-0:2154:2111":{"id":"b:2:2261-0:2154:2111","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2255:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["2:2263:2522"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2104:781":{"id":"0:2104:781","crate_id":0,"name":"hash","span":{"filename":"src/duration.rs","begin":[53,61],"end":[53,65]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9755:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:322:2820":{"id":"0:322:2820","crate_id":0,"name":"timestamp_nanos","span":{"filename":"src/datetime/mod.rs","begin":[280,4],"end":[283,5]},"visibility":"public","docs":"Returns the number of non-leap-nanoseconds since January 1, 1970 UTC.\n\n# Panics\n\nAn `i64` with nanosecond precision can span a range of ~584 years. This function panics on\nan out of range `DateTime`.\n\nThe dates that can be represented as nanoseconds are between 1677-09-21T00:12:44.0 and\n2262-04-11T23:47:16.854775804.","links":{},"attrs":["#[deprecated(since = \"0.4.31\", note = \"use `timestamp_nanos_opt()` instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.31","note":"use `timestamp_nanos_opt()` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1459":{"id":"0:1459","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[1319,0],"end":[1345,1]},"visibility":"default","docs":"The `Debug` output of the naive time `t` is the same as\n[`t.format(\"%H:%M:%S%.f\")`](../format/strftime/index.html).\n\nThe string printed can be readily parsed via the `parse` method on `str`.\n\nIt should be noted that, for leap seconds not on the minute boundary,\nit may print a representation not distinguishable from non-leap seconds.\nThis doesn't matter in practice, since such leap seconds never happened.\n(By the time of the first leap second on 1972-06-30,\nevery time zone offset around the world has standardized to the 5-minute alignment.)\n\n# Example\n\n```\nuse chrono::NaiveTime;\n\nassert_eq!(format!(\"{:?}\", NaiveTime::from_hms_opt(23, 56, 4).unwrap()),              \"23:56:04\");\nassert_eq!(format!(\"{:?}\", NaiveTime::from_hms_milli_opt(23, 56, 4, 12).unwrap()),    \"23:56:04.012\");\nassert_eq!(format!(\"{:?}\", NaiveTime::from_hms_micro_opt(23, 56, 4, 1234).unwrap()),  \"23:56:04.001234\");\nassert_eq!(format!(\"{:?}\", NaiveTime::from_hms_nano_opt(23, 56, 4, 123456).unwrap()), \"23:56:04.000123456\");\n```\n\nLeap seconds may also be used.\n\n```\n# use chrono::NaiveTime;\nassert_eq!(format!(\"{:?}\", NaiveTime::from_hms_milli_opt(6, 59, 59, 1_500).unwrap()), \"06:59:60.500\");\n```","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9531:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1460:718"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12524:32633":{"id":"2:12524:32633","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2582-0:2154:2111":{"id":"b:2:2582-0:2154:2111","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["2:2585:133","2:2586:1588"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:347:2558":{"id":"0:347:2558","crate_id":0,"name":"MAX_UTC","span":{"filename":"src/datetime/mod.rs","begin":[588,4],"end":[588,94]},"visibility":"public","docs":"The maximum possible `DateTime<Utc>`.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Utc","id":"0:3059:2118","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"default":"_"}}},"0:2185:3750":{"id":"0:2185:3750","crate_id":0,"name":"hour_mod_12","span":{"filename":"src/format/parsed.rs","begin":[85,4],"end":[85,32]},"visibility":"public","docs":"Hour number modulo 12 (0--11).","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"bindings":[]}}}}}},"0:106-0:2742:2121":{"id":"0:106-0:2742:2121","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[506,46],"end":[506,55]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"inner":{"import":{"source":"crate::NaiveTime","name":"NaiveTime","id":"0:2742:2121","glob":false}}},"0:2349:3268":{"id":"0:2349:3268","crate_id":0,"name":"Nanosecond3","span":{"filename":"src/format/mod.rs","begin":[207,4],"end":[207,15]},"visibility":"default","docs":"Same as [`Nanosecond`](#variant.Nanosecond) but the accuracy is fixed to 3.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:666:3776":{"id":"0:666:3776","crate_id":0,"name":"set_isoyear_mod_100","span":{"filename":"src/format/parsed.rs","begin":[176,4],"end":[184,5]},"visibility":"public","docs":"Tries to set the [`isoyear_mod_100`](#structfield.isoyear_mod_100) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:906:2133","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2574":{"id":"0:2574","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[386,23],"end":[386,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(clippy :: manual_non_exhaustive)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2786:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseErrorKind","id":"0:2553:3365","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2572":{"id":"0:2572","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[386,16],"end":[386,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(clippy :: manual_non_exhaustive)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseErrorKind","id":"0:2553:3365","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2573:454"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2793:252-0:2584:2137":{"id":"a:2:2793:252-0:2584:2137","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2793:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveWeek","id":"0:2584:2137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1273:203":{"id":"0:1273:203","crate_id":0,"name":"Output","span":{"filename":"src/naive/datetime/mod.rs","begin":[1803,4],"end":[1803,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"2:2585:133":{"id":"2:2585:133","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:31991:12706","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:2554:2158":{"id":"0:2554:2158","crate_id":0,"name":"OutOfRange","span":{"filename":"src/format/mod.rs","begin":[389,4],"end":[389,14]},"visibility":"default","docs":"Given field is out of permitted range.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:402:2678":{"id":"0:402:2678","crate_id":0,"name":"with_month","span":{"filename":"src/datetime/mod.rs","begin":[999,4],"end":[1001,5]},"visibility":"default","docs":"Makes a new `DateTime` with the month number (starting from 1) changed.\n\nSee also the [`NaiveDate::with_month`] method.\n\n# Errors\n\nReturns `None` if:\n- The resulting date does not exist.\n- The value for `month` is invalid.\n- The local time at the resulting date does not exist or is ambiguous, for example during a\n  daylight saving time transition.","links":{"`NaiveDate::with_month`":"0:1055:2678"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["month",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1363":{"id":"0:1363","crate_id":0,"name":null,"span":{"filename":"src/naive/isoweek.rs","begin":[53,0],"end":[112,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"IsoWeek","id":"0:2724:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1364:2670","0:1365:3462","0:1366:6486"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2673:660":{"id":"0:2673:660","crate_id":0,"name":"eq","span":{"filename":"src/naive/datetime/mod.rs","begin":[75,9],"end":[75,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1091:1016":{"id":"0:1091:1016","crate_id":0,"name":"next","span":{"filename":"src/naive/date.rs","begin":[2025,4],"end":[2031,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:7627:173","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2683:461":{"id":"0:2683:461","crate_id":0,"name":"cmp","span":{"filename":"src/naive/datetime/mod.rs","begin":[75,42],"end":[75,45]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:30807:200","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3092":{"id":"0:3092","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[41,27],"end":[41,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:9531:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9531:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LocalResult","id":"0:3073:2138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:3094:718"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1087":{"id":"0:1087","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[2010,0],"end":[2014,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1088:744"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2098:1100":{"id":"0:2098:1100","crate_id":0,"name":"partial_cmp","span":{"filename":"src/duration.rs","begin":[53,37],"end":[53,47]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::option::Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:30807:200","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1463:718":{"id":"0:1463:718","crate_id":0,"name":"fmt","span":{"filename":"src/naive/time/mod.rs","begin":[1376,4],"end":[1378,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9506:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9487:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:508:132":{"id":"0:508:132","crate_id":0,"name":"Err","span":{"filename":"src/datetime/mod.rs","begin":[1371,4],"end":[1371,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"ParseError","id":"0:2536:2132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:3068":{"id":"0:3068","crate_id":0,"name":null,"span":{"filename":"src/offset/utc.rs","begin":[43,33],"end":[43,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2330:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Utc","id":"0:3059:2118","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3207":{"id":"0:3207","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[31,9],"end":[31,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2786:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Month","id":"0:3170:2114","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12431:4528":{"id":"2:12431:4528","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:43512:8550","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2427:1128":{"id":"0:2427:1128","crate_id":0,"name":"precision","span":{"filename":"src/format/mod.rs","begin":[288,4],"end":[288,34]},"visibility":"public","docs":"See `OffsetPrecision`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"OffsetPrecision","id":"0:2445:3316","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:1271:301":{"id":"0:1271:301","crate_id":0,"name":"add","span":{"filename":"src/naive/datetime/mod.rs","begin":[1797,4],"end":[1799,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["days",{"resolved_path":{"name":"Days","id":"0:2589:2135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:2845:2284","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3082:1725":{"id":"0:3082:1725","crate_id":0,"name":"0","span":{"filename":"src/offset/mod.rs","begin":[50,14],"end":[50,15]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"generic":"T"}}},"0:1445:302":{"id":"0:1445:302","crate_id":0,"name":"add_assign","span":{"filename":"src/naive/time/mod.rs","begin":[1148,4],"end":[1152,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["rhs",{"resolved_path":{"name":"Duration","id":"2:44300:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2172:3723":{"id":"0:2172:3723","crate_id":0,"name":"year_div_100","span":{"filename":"src/format/parsed.rs","begin":[34,4],"end":[34,33]},"visibility":"public","docs":"Year divided by 100. Implies that the year is >= 1 BCE when set.\n\nDue to the common usage, if this field is missing but\n[`year_mod_100`](#structfield.year_mod_100) is present,\nit is inferred to 19 when `year_mod_100 >= 70` and 20 otherwise.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"primitive":"i32"}}],"bindings":[]}}}}}},"b:2:2577-0:3246:2146":{"id":"b:2:2577-0:3246:2146","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2547:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseMonthError","id":"0:3246:2146","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2580:133","2:2581:1590"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2793:252-0:2426:3314":{"id":"a:2:2793:252-0:2426:3314","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2793:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetFormat","id":"0:2426:3314","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2264-0:3052:2107":{"id":"b:2:2264-0:3052:2107","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2258:101","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Local","id":"0:3052:2107","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2266:7207"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2524":{"id":"0:2524","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[330,27],"end":[330,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2787:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Item","id":"0:2493:168","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2264-0:2610:2119":{"id":"b:2:2264-0:2610:2119","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2258:101","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2266:7207"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2609:461":{"id":"0:2609:461","crate_id":0,"name":"cmp","span":{"filename":"src/naive/date.rs","begin":[134,62],"end":[134,65]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Days","id":"0:2589:2135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:30807:200","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2560:3378":{"id":"0:2560:3378","crate_id":0,"name":"Invalid","span":{"filename":"src/format/mod.rs","begin":[405,4],"end":[405,11]},"visibility":"default","docs":"The input string has some invalid character sequence for given formatting items.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:32:2334":{"id":"0:32:2334","crate_id":0,"name":"seconds","span":{"filename":"src/duration.rs","begin":[118,4],"end":[124,5]},"visibility":"public","docs":"Makes a new `Duration` with given number of seconds.\nPanics when the duration is more than `i64::MAX` milliseconds\nor less than `i64::MIN` milliseconds.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seconds",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2203:60":{"id":"0:2203:60","crate_id":0,"name":"default","span":{"filename":"src/format/parsed.rs","begin":[21,38],"end":[21,45]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Parsed","id":"0:2170:2717","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8607:8817-0:2742:2121":{"id":"a:2:8607:8817-0:2742:2121","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8607:8817","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:5:682-0:2321:3242":{"id":"b:5:682-0:2321:3242","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalNumeric","id":"0:2321:3242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:684:9349","5:685:9350","5:686:9351"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1052:2142":{"id":"0:1052:2142","crate_id":0,"name":"weekday","span":{"filename":"src/naive/date.rs","begin":[1640,4],"end":[1642,5]},"visibility":"default","docs":"Returns the day of week.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike, Weekday};\n\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().weekday(), Weekday::Tue);\nassert_eq!(NaiveDate::from_ymd_opt(-308, 3, 14).unwrap().weekday(), Weekday::Fri);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Weekday","id":"0:3124:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8606:8818-0:3073:2138":{"id":"a:2:8606:8818-0:3073:2138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:8606:8818","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8606:8818","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LocalResult","id":"0:3073:2138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:238":{"id":"0:238","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[518,0],"end":[525,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:2850:2288","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:240:203","0:241:1525"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:328:2568":{"id":"0:328:2568","crate_id":0,"name":"timezone","span":{"filename":"src/datetime/mod.rs","begin":[349,4],"end":[351,5]},"visibility":"public","docs":"Retrieves an associated time zone.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Tz"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:463":{"id":"0:463","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1250,0],"end":[1256,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Add","id":"2:2845:2284","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Months","id":"0:3225:2145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:465:203","0:466:301"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:5792-0:3124:2116":{"id":"b:5:5792-0:3124:2116","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9536:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5790:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Weekday","id":"0:3124:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5794:1565"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:453":{"id":"0:453","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1220,0],"end":[1229,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Add","id":"2:2845:2284","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"2:44300:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:455:203","0:456:301"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3111:7924":{"id":"0:3111:7924","crate_id":0,"name":"TimestampExceedsLimit","span":{"filename":"src/round.rs","begin":[274,4],"end":[274,25]},"visibility":"default","docs":"Error when `DateTime.timestamp_nanos` exceeds the limit.\n\n``` rust\n# use chrono::{DurationRound, Duration, RoundingError, TimeZone, Utc};\nlet dt = Utc.with_ymd_and_hms(2300, 12, 12, 0, 0, 0).unwrap();\n\nassert_eq!(dt.duration_round(Duration::days(1)), Err(RoundingError::TimestampExceedsLimit),);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:39:2368":{"id":"0:39:2368","crate_id":0,"name":"num_minutes","span":{"filename":"src/duration.rs","begin":[168,4],"end":[170,5]},"visibility":"public","docs":"Returns the total number of whole minutes in the duration.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:215":{"id":"0:215","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[476,0],"end":[480,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"Tz2","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2325:205","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz2"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:218:660"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:419:3041":{"id":"0:419:3041","crate_id":0,"name":"nanosecond","span":{"filename":"src/datetime/mod.rs","begin":[1098,4],"end":[1100,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2793:252-0:2264:3194":{"id":"a:2:2793:252-0:2264:3194","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2793:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Numeric","id":"0:2264:3194","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:3156:718":{"id":"0:3156:718","crate_id":0,"name":"fmt","span":{"filename":"src/weekday.rs","begin":[32,37],"end":[32,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9506:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9487:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2025:8066":{"id":"0:2025:8066","crate_id":0,"name":"from_u64","span":{"filename":"src/month.rs","begin":[191,4],"end":[193,5]},"visibility":"default","docs":"Returns an `Option<Month>` from a i64, assuming a 1-index, January = 1.\n\n`Month::from_i64(n: i64)`: | `1`                  | `2`                   | ... | `12`\n---------------------------| -------------------- | --------------------- | ... | -----\n``:                        | Some(Month::January) | Some(Month::February) | ... | Some(Month::December)","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["n",{"primitive":"u64"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Month","id":"0:3170:2114","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:361":{"id":"0:361","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[675,0],"end":[683,1]},"visibility":"default","docs":"Convert a `DateTime<FixedOffset>` instance into a `DateTime<Utc>` instance.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::offset::Utc","id":"0:3059:2118","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:362:744"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2518:454":{"id":"0:2518:454","crate_id":0,"name":"clone","span":{"filename":"src/format/mod.rs","begin":[330,9],"end":[330,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Item","id":"0:2493:168","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2209:2527":{"id":"0:2209:2527","crate_id":0,"name":"StrftimeItems","span":{"filename":"src/format/strftime.rs","begin":[166,0],"end":[176,1]},"visibility":"public","docs":"Parsing iterator for `strftime`-like format strings.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:848","a:2:2793:252-0:2209:2527","a:2:2776:242-0:2209:2527","a:2:8606:8818-0:2209:2527","a:2:2833:8772-0:2209:2527","a:2:8607:8817-0:2209:2527","b:2:2571-0:2209:2527","b:2:2577-0:2209:2527","b:2:2582-0:2209:2527","b:2:7484-0:2209:2527","b:2:2261-0:2209:2527","b:2:3412-0:2209:2527","b:2:2264-0:2209:2527","b:2:2567-0:2209:2527","b:5:682-0:2209:2527","0:2216","0:2213","0:852"]}}},"0:1074:203":{"id":"0:1074:203","crate_id":0,"name":"Output","span":{"filename":"src/naive/date.rs","begin":[1922,4],"end":[1922,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:3163:454":{"id":"0:3163:454","crate_id":0,"name":"clone","span":{"filename":"src/weekday.rs","begin":[224,9],"end":[224,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ParseWeekdayError","id":"0:3160:2143","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:351":{"id":"0:351","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[631,0],"end":[635,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2618:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::offset::Utc","id":"0:3059:2118","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:352:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3063:454":{"id":"0:3063:454","crate_id":0,"name":"clone","span":{"filename":"src/offset/utc.rs","begin":[43,15],"end":[43,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Utc","id":"0:3059:2118","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12446:4707":{"id":"2:12446:4707","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:41566:196","prim@char":"1:12067:450","self::pattern":"2:12106:8527"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12111:8541","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:889-0:2161:2526":{"id":"0:889-0:2161:2526","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[65,42],"end":[65,55]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\"))]"],"deprecation":null,"inner":{"import":{"source":"formatting::DelayedFormat","name":"DelayedFormat","id":"0:2161:2526","glob":false}}},"0:398:2142":{"id":"0:398:2142","crate_id":0,"name":"weekday","span":{"filename":"src/datetime/mod.rs","begin":[963,4],"end":[965,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Weekday","id":"0:3124:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2261-0:2170:2717":{"id":"b:2:2261-0:2170:2717","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2255:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parsed","id":"0:2170:2717","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2263:2522"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2264-0:2243:3177":{"id":"b:2:2264-0:2243:3177","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2258:101","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Pad","id":"0:2243:3177","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2266:7207"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1490-0:2724:2136":{"id":"0:1490-0:2724:2136","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[531,22],"end":[531,29]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"inner":{"import":{"source":"naive::IsoWeek","name":"IsoWeek","id":"0:2724:2136","glob":false}}},"0:459:302":{"id":"0:459:302","crate_id":0,"name":"add_assign","span":{"filename":"src/datetime/mod.rs","begin":[1233,4],"end":[1238,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["rhs",{"resolved_path":{"name":"OldDuration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2082":{"id":"0:2082","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[597,0],"end":[597,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["description","source","cause","provide","type_id"],"trait":{"name":"Error","id":"2:2629:133","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRange","id":"0:3256:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12427:32726":{"id":"2:12427:32726","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"2:12428:32727"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:424:3055":{"id":"0:424:3055","crate_id":0,"name":"with_second","span":{"filename":"src/datetime/mod.rs","begin":[1145,4],"end":[1147,5]},"visibility":"default","docs":"Makes a new `DateTime` with the second number changed.\n\nAs with the [`second`](#method.second) method,\nthe input range is restricted to 0 through 59.\n\nSee also the [`NaiveTime::with_second`] method.\n\n# Errors\n\nReturns `None` if:\n- The value for `second` is invalid.\n- The local time at the resulting date does not exist or is ambiguous, for example during a\n  daylight saving time transition.","links":{"`NaiveTime::with_second`":"0:1433:3055"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["sec",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1428:3039":{"id":"0:1428:3039","crate_id":0,"name":"minute","span":{"filename":"src/naive/time/mod.rs","begin":[875,4],"end":[877,5]},"visibility":"default","docs":"Returns the minute number from 0 to 59.\n\n# Example\n\n```\nuse chrono::{NaiveTime, Timelike};\n\nassert_eq!(NaiveTime::from_hms_opt(0, 0, 0).unwrap().minute(), 0);\nassert_eq!(NaiveTime::from_hms_nano_opt(23, 56, 4, 12_345_678).unwrap().minute(), 56);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12419:32702":{"id":"2:12419:32702","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:41566:196"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10196:244","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10196:244","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2196:660":{"id":"0:2196:660","crate_id":0,"name":"eq","span":{"filename":"src/format/parsed.rs","begin":[21,16],"end":[21,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Parsed","id":"0:2170:2717","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1849:7061":{"id":"0:1849:7061","crate_id":0,"name":"offset_from_local_datetime","span":{"filename":"src/offset/local/mod.rs","begin":[165,4],"end":[167,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["local",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"LocalResult","id":"0:3073:2138","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:178":{"id":"0:178","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[331,0],"end":[396,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Tz"},"trait":{"name":"","id":"0:1906:2123","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Display","id":"2:9536:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:180:2656","0:184:729"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2267:3199":{"id":"0:2267:3199","crate_id":0,"name":"YearDiv100","span":{"filename":"src/format/mod.rs","begin":[111,4],"end":[111,14]},"visibility":"default","docs":"Gregorian year divided by 100 (century number; FW=PW=2). Implies the non-negative year.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:1547:7066":{"id":"0:1547:7066","crate_id":0,"name":"offset_from_utc_date","span":{"filename":"src/offset/fixed.rs","begin":[140,4],"end":[142,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["_utc",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12500:39470":{"id":"2:12500:39470","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2381":{"id":"0:2381","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[176,27],"end":[176,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2787:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Fixed","id":"0:2334:2716","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8606:8818-0:2584:2137":{"id":"a:2:8606:8818-0:2584:2137","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8606:8818","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveWeek","id":"0:2584:2137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2776:242-0:2668:2120":{"id":"a:2:2776:242-0:2668:2120","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2776:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1534:2702":{"id":"0:1534:2702","crate_id":0,"name":"east_opt","span":{"filename":"src/offset/fixed.rs","begin":[60,4],"end":[66,5]},"visibility":"public","docs":"Makes a new `FixedOffset` for the Eastern Hemisphere with given timezone difference.\nThe negative `secs` means the Western Hemisphere.\n\nReturns `None` on the out-of-bound `secs`.\n\n# Example\n\n```\nuse chrono::{FixedOffset, TimeZone};\nlet hour = 3600;\nlet datetime = FixedOffset::east_opt(5 * hour)\n    .unwrap()\n    .with_ymd_and_hms(2016, 11, 08, 0, 0, 0)\n    .unwrap();\nassert_eq!(&datetime.to_rfc3339(), \"2016-11-08T00:00:00+05:00\")\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["secs",{"primitive":"i32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1938-0:1904:2122":{"id":"0:1938-0:1904:2122","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[539,43],"end":[539,49]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"inner":{"import":{"source":"offset::Offset","name":"Offset","id":"0:1904:2122","glob":false}}},"b:5:5792-0:3256:2158":{"id":"b:5:5792-0:3256:2158","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9536:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5790:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRange","id":"0:3256:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5794:1565"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2833:8772-0:2321:3242":{"id":"a:2:2833:8772-0:2321:3242","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2833:8772","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalNumeric","id":"0:2321:3242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2571-0:2127:2112":{"id":"b:2:2571-0:2127:2112","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SecondsFormat","id":"0:2127:2112","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2573:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2833:8772-0:3124:2116":{"id":"a:2:2833:8772-0:3124:2116","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2833:8772","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Weekday","id":"0:3124:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1203":{"id":"0:1203","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[998,0],"end":[1326,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["num_days_from_ce","year_ce"],"trait":{"name":"Datelike","id":"0:2043:2113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1204:2670","0:1205:2144","0:1206:2671","0:1207:2672","0:1208:2673","0:1209:2674","0:1210:2675","0:1211:2142","0:1212:2676","0:1213:2677","0:1215:2678","0:1217:2679","0:1219:2680","0:1221:2681","0:1223:2682","0:1225:2683"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:5792-0:2161:2526":{"id":"b:5:5792-0:2161:2526","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9536:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5790:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DelayedFormat","id":"0:2161:2526","args":{"angle_bracketed":{"args":[{"type":{"generic":"I"}}],"bindings":[]}}}},"items":["5:5794:1565"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2601:781":{"id":"0:2601:781","crate_id":0,"name":"hash","span":{"filename":"src/naive/date.rs","begin":[134,33],"end":[134,37]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9755:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2389:3299":{"id":"0:2389:3299","crate_id":0,"name":"InternalFixed","span":{"filename":"src/format/mod.rs","begin":[261,0],"end":[263,1]},"visibility":"public","docs":"An opaque type representing fixed-format item types for internal uses only.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:2793:252-0:2389:3299","a:2:2776:242-0:2389:3299","a:2:8606:8818-0:2389:3299","a:2:2833:8772-0:2389:3299","a:2:8607:8817-0:2389:3299","b:2:2571-0:2389:3299","b:2:2577-0:2389:3299","b:2:2582-0:2389:3299","b:2:2261-0:2389:3299","b:2:3412-0:2389:3299","b:2:2264-0:2389:3299","b:2:2567-0:2389:3299","b:5:682-0:2389:3299","0:2391","0:2396","0:2399","0:2393","0:2398","0:2395","0:2401"]}}},"0:2738:454":{"id":"0:2738:454","crate_id":0,"name":"clone","span":{"filename":"src/naive/isoweek.rs","begin":[19,47],"end":[19,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"IsoWeek","id":"0:2724:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3412-0:3160:2143":{"id":"b:2:3412-0:3160:2143","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3410:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseWeekdayError","id":"0:3160:2143","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3414:1603"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2776:242-0:2321:3242":{"id":"a:2:2776:242-0:2321:3242","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2776:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalNumeric","id":"0:2321:3242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2367:3295":{"id":"0:2367:3295","crate_id":0,"name":"TimezoneOffsetZ","span":{"filename":"src/format/mod.rs","begin":[246,4],"end":[246,19]},"visibility":"default","docs":"Same as [`TimezoneOffsetColonZ`](#variant.TimezoneOffsetColonZ) but prints no colon.\nParsing allows an optional colon.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:2567-0:2553:3365":{"id":"b:2:2567-0:2553:3365","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseErrorKind","id":"0:2553:3365","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2570:3122"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2737":{"id":"0:2737","crate_id":0,"name":null,"span":{"filename":"src/naive/isoweek.rs","begin":[19,47],"end":[19,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IsoWeek","id":"0:2724:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2738:454"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2030":{"id":"0:2030","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[240,0],"end":[240,45]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["description","source","cause","provide","type_id"],"trait":{"name":"Error","id":"2:2629:133","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseMonthError","id":"0:3246:2146","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:910":{"id":"0:910","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[441,0],"end":[446,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["description","source","cause","provide","type_id"],"trait":{"name":"Error","id":"2:2629:133","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:2536:2132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:911:2435"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2006":{"id":"0:2006","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[233,0],"end":[237,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9536:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseWeekdayError","id":"0:3160:2143","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2007:718"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1365:3462":{"id":"0:1365:3462","crate_id":0,"name":"week","span":{"filename":"src/naive/isoweek.rs","begin":[92,4],"end":[94,5]},"visibility":"public","docs":"Returns the ISO week number starting from 1.\n\nThe return value ranges from 1 to 53. (The last week of year differs by years.)\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike, Weekday};\n\nlet d = NaiveDate::from_isoywd_opt(2015, 15, Weekday::Mon).unwrap();\nassert_eq!(d.iso_week().week(), 15);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1229:3039":{"id":"0:1229:3039","crate_id":0,"name":"minute","span":{"filename":"src/naive/datetime/mod.rs","begin":[1359,4],"end":[1361,5]},"visibility":"default","docs":"Returns the minute number from 0 to 59.\n\nSee also the [`NaiveTime::minute`] method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Timelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().and_hms_milli_opt(12, 34, 56, 789).unwrap();\nassert_eq!(dt.minute(), 34);\n```","links":{"`NaiveTime::minute`":"0:1428:3039"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1914:7016":{"id":"0:1914:7016","crate_id":0,"name":"isoywd","span":{"filename":"src/offset/mod.rs","begin":[321,4],"end":[323,5]},"visibility":"default","docs":"Makes a new `Date` from ISO week date (year and week number), day of the week (DOW) and\nthe current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\nThe resulting `Date` may have a different year from the input year.\n\nThe time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),\nbut it will propagate to the `DateTime` values constructed via this date.\n\nPanics on the out-of-range date and/or invalid week number.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note =\n\"use `from_local_datetime()` with a `NaiveDateTime` instead\")]","#[allow(deprecated)]"],"deprecation":{"since":"0.4.23","note":"use `from_local_datetime()` with a `NaiveDateTime` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["year",{"primitive":"i32"}],["week",{"primitive":"u32"}],["weekday",{"resolved_path":{"name":"Weekday","id":"0:3124:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:509:3085":{"id":"0:509:3085","crate_id":0,"name":"from_str","span":{"filename":"src/datetime/mod.rs","begin":[1373,4],"end":[1375,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:906:2133","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Utc","id":"0:3059:2118","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2661":{"id":"0:2661","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[2053,46],"end":[2053,56]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","lt","le","ge"],"trait":{"name":"PartialOrd","id":"2:2367:206","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateWeeksIterator","id":"0:2648:4960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2662:1100"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2484":{"id":"0:2484","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[319,29],"end":[319,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2786:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Colons","id":"0:2472:3319","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3249:454":{"id":"0:3249:454","crate_id":0,"name":"clone","span":{"filename":"src/month.rs","begin":[233,9],"end":[233,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ParseMonthError","id":"0:3246:2146","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1253":{"id":"0:1253","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1680,0],"end":[1687,1]},"visibility":"default","docs":"A subtraction of `Duration` from `NaiveDateTime` yields another `NaiveDateTime`.\nIt is the same as the addition with a negated `Duration`.\n\nAs a part of Chrono's [leap second handling] the subtraction assumes that **there is no leap\nsecond ever**, except when the `NaiveDateTime` itself represents a leap second in which case\nthe assumption becomes that **there is exactly a single leap second ever**.\n\nPanics on underflow or overflow. Use [`NaiveDateTime::checked_sub_signed`]\nto detect that.\n\n# Example\n\n```\nuse chrono::{Duration, NaiveDate};\n\nlet from_ymd = |y, m, d| NaiveDate::from_ymd_opt(y, m, d).unwrap();\n\nlet d = from_ymd(2016, 7, 8);\nlet hms = |h, m, s| d.and_hms_opt(h, m, s).unwrap();\nassert_eq!(hms(3, 5, 7) - Duration::zero(),             hms(3, 5, 7));\nassert_eq!(hms(3, 5, 7) - Duration::seconds(1),         hms(3, 5, 6));\nassert_eq!(hms(3, 5, 7) - Duration::seconds(-1),        hms(3, 5, 8));\nassert_eq!(hms(3, 5, 7) - Duration::seconds(3600 + 60), hms(2, 4, 7));\nassert_eq!(hms(3, 5, 7) - Duration::seconds(86_400),\n           from_ymd(2016, 7, 7).and_hms_opt(3, 5, 7).unwrap());\nassert_eq!(hms(3, 5, 7) - Duration::days(365),\n           from_ymd(2015, 7, 9).and_hms_opt(3, 5, 7).unwrap());\n\nlet hmsm = |h, m, s, milli| d.and_hms_milli_opt(h, m, s, milli).unwrap();\nassert_eq!(hmsm(3, 5, 7, 450) - Duration::milliseconds(670), hmsm(3, 5, 6, 780));\n```\n\nLeap seconds are handled,\nbut the subtraction assumes that it is the only leap second happened.\n\n```\n# use chrono::{Duration, NaiveDate};\n# let from_ymd = |y, m, d| NaiveDate::from_ymd_opt(y, m, d).unwrap();\n# let hmsm = |h, m, s, milli| from_ymd(2016, 7, 8).and_hms_milli_opt(h, m, s, milli).unwrap();\nlet leap = hmsm(3, 5, 59, 1_300);\nassert_eq!(leap - Duration::zero(),            hmsm(3, 5, 59, 1_300));\nassert_eq!(leap - Duration::milliseconds(200), hmsm(3, 5, 59, 1_100));\nassert_eq!(leap - Duration::milliseconds(500), hmsm(3, 5, 59, 800));\nassert_eq!(leap - Duration::seconds(60),       hmsm(3, 5, 0, 300));\nassert_eq!(leap - Duration::days(1),\n           from_ymd(2016, 7, 7).and_hms_milli_opt(3, 6, 0, 300).unwrap());\n```\n\n[leap second handling]: crate::NaiveTime#leap-second-handling","links":{"crate::NaiveTime#leap-second-handling":"0:2742:2121","`NaiveDateTime::checked_sub_signed`":"0:1186:2635"},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:2850:2288","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1254:203","0:1255:1525"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1956":{"id":"0:1956","crate_id":0,"name":null,"span":{"filename":"src/round.rs","begin":[47,0],"end":[75,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Timelike","id":"0:2062:2115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Add","id":"2:2845:2284","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::duration::Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sub","id":"2:2850:2288","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::duration::Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"SubsecRound","id":"0:1953:2110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"generic":"T"},"items":["0:1958:7892","0:1959:7897"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:682-0:2334:2716":{"id":"b:5:682-0:2334:2716","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Fixed","id":"0:2334:2716","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:684:9349","5:685:9350","5:686:9351"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1012:2595":{"id":"0:1012:2595","crate_id":0,"name":"and_hms_micro","span":{"filename":"src/naive/date.rs","begin":[943,4],"end":[945,5]},"visibility":"public","docs":"Makes a new `NaiveDateTime` from the current date, hour, minute, second and microsecond.\n\nThe microsecond part is allowed to exceed 1,000,000,000 in order to represent a [leap second](\n./struct.NaiveTime.html#leap-second-handling), but only when `sec == 59`.\n\n# Panics\n\nPanics on invalid hour, minute, second and/or microsecond.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Datelike, Timelike, Weekday};\n\nlet d = NaiveDate::from_ymd_opt(2015, 6, 3).unwrap();\n\nlet dt: NaiveDateTime = d.and_hms_micro_opt(12, 34, 56, 789_012).unwrap();\nassert_eq!(dt.year(), 2015);\nassert_eq!(dt.weekday(), Weekday::Wed);\nassert_eq!(dt.second(), 56);\nassert_eq!(dt.nanosecond(), 789_012_000);\n```","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `and_hms_micro_opt()` instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"use `and_hms_micro_opt()` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}],["micro",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:152:2604":{"id":"0:152:2604","crate_id":0,"name":"and_hms_nano","span":{"filename":"src/date.rs","begin":[181,4],"end":[183,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date, hour, minute, second and nanosecond.\nThe nanosecond part can exceed 1,000,000,000 in order to represent the leap second.\nThe offset in the current date is preserved.\n\nPanics on invalid hour, minute, second and/or nanosecond.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"Use and_hms_nano_opt() instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"Use and_hms_nano_opt() instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}],["nano",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2115":{"id":"0:2115","crate_id":0,"name":null,"span":{"filename":"src/duration.rs","begin":[443,29],"end":[443,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2325:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRangeError","id":"0:2106:2104","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2116:660"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:352:60":{"id":"0:352:60","crate_id":0,"name":"default","span":{"filename":"src/datetime/mod.rs","begin":[632,4],"end":[634,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:59:301":{"id":"0:59:301","crate_id":0,"name":"add","span":{"filename":"src/duration.rs","begin":[334,4],"end":[342,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2113":{"id":"0:2113","crate_id":0,"name":null,"span":{"filename":"src/duration.rs","begin":[443,23],"end":[443,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2788:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRangeError","id":"0:2106:2104","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:682-0:2553:3365":{"id":"b:5:682-0:2553:3365","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseErrorKind","id":"0:2553:3365","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:684:9349","5:685:9350","5:686:9351"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1249:302":{"id":"0:1249:302","crate_id":0,"name":"add_assign","span":{"filename":"src/naive/datetime/mod.rs","begin":[1582,4],"end":[1584,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["rhs",{"resolved_path":{"name":"Duration","id":"2:44300:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2264-0:2161:2526":{"id":"b:2:2264-0:2161:2526","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2258:101","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DelayedFormat","id":"0:2161:2526","args":{"angle_bracketed":{"args":[{"type":{"generic":"I"}}],"bindings":[]}}}},"items":["2:2266:7207"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:229:781":{"id":"0:229:781","crate_id":0,"name":"hash","span":{"filename":"src/date.rs","begin":[497,4],"end":[499,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"hash::Hasher","id":"2:9755:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2397:660":{"id":"0:2397:660","crate_id":0,"name":"eq","span":{"filename":"src/format/mod.rs","begin":[260,23],"end":[260,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"InternalFixed","id":"0:2389:3299","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:906:2133":{"id":"0:906:2133","crate_id":0,"name":"ParseResult","span":{"filename":"src/format/mod.rs","begin":[422,0],"end":[422,48]},"visibility":"public","docs":"Same as `Result<T, ParseError>`.","links":{},"attrs":[],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"Result","id":"2:41709:231","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"resolved_path":{"name":"ParseError","id":"0:2536:2132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}}},"0:2769":{"id":"0:2769","crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[25,24],"end":[25,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9747:148","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2770:781"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12487:39465":{"id":"2:12487:39465","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:12106:8527","`DoubleEndedIterator`":"2:7518:126","prim@char":"1:12067:450","str::rmatch_indices":"2:12490:39466"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:43676:8564","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12111:8541","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2261-0:2209:2527":{"id":"b:2:2261-0:2209:2527","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2255:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"StrftimeItems","id":"0:2209:2527","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2263:2522"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12532:39475":{"id":"2:12532:39475","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4571:39475"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:43843:8569","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12408:39456":{"id":"2:12408:39456","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2776:242-0:3246:2146":{"id":"a:2:2776:242-0:3246:2146","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2776:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseMonthError","id":"0:3246:2146","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1550:2774":{"id":"0:1550:2774","crate_id":0,"name":"fix","span":{"filename":"src/offset/fixed.rs","begin":[149,4],"end":[151,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:702:3854":{"id":"0:702:3854","crate_id":0,"name":"to_naive_time","span":{"filename":"src/format/parsed.rs","begin":[502,4],"end":[535,5]},"visibility":"public","docs":"Returns a parsed naive time out of given fields.\n\nThis method is able to determine the time from given subset of fields:\n\n- Hour, minute. (second and nanosecond assumed to be 0)\n- Hour, minute, second. (nanosecond assumed to be 0)\n- Hour, minute, second, nanosecond.\n\nIt is able to handle leap seconds when given second is 60.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:906:2133","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2460":{"id":"0:2460","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[298,16],"end":[298,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2788:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetPrecision","id":"0:2445:3316","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12478:32745":{"id":"2:12478:32745","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12111:8541","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12111:8541","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12126:8543","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1083:1526":{"id":"0:1083:1526","crate_id":0,"name":"sub_assign","span":{"filename":"src/naive/date.rs","begin":[1972,4],"end":[1974,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["rhs",{"resolved_path":{"name":"OldDuration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2633":{"id":"0:2633","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[2017,22],"end":[2017,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateDaysIterator","id":"0:2628:4959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2634:454"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3155":{"id":"0:3155","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[32,37],"end":[32,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9531:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Weekday","id":"0:3124:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3156:718"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2402:781":{"id":"0:2402:781","crate_id":0,"name":"hash","span":{"filename":"src/format/mod.rs","begin":[260,38],"end":[260,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9755:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2062:2115":{"id":"0:2062:2115","crate_id":0,"name":"Timelike","span":{"filename":"src/traits.rs","begin":[267,0],"end":[328,1]},"visibility":"public","docs":"The common set of methods for time component.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"items":["0:2063:2575","0:2064:3465","0:2065:3039","0:2066:3040","0:2067:3041","0:2068:3045","0:2069:3049","0:2070:3055","0:2071:3062","0:2072:5929"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:414","0:1426","0:1227"]}}},"b:2:2567-0:2668:2120":{"id":"b:2:2567-0:2668:2120","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2570:3122"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2776:242-0:3106:2141":{"id":"a:2:2776:242-0:3106:2141","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2776:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RoundingError","id":"0:3106:2141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2776:242-0:2170:2717":{"id":"a:2:2776:242-0:2170:2717","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2776:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parsed","id":"0:2170:2717","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2145":{"id":"0:2145","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[51,29],"end":[51,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(clippy :: manual_non_exhaustive)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2787:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SecondsFormat","id":"0:2127:2112","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3061":{"id":"0:3061","crate_id":0,"name":null,"span":{"filename":"src/offset/utc.rs","begin":[43,9],"end":[43,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2788:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Utc","id":"0:3059:2118","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2577-0:2553:3365":{"id":"b:2:2577-0:2553:3365","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2547:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseErrorKind","id":"0:2553:3365","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2580:133","2:2581:1590"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2776:242-0:2553:3365":{"id":"a:2:2776:242-0:2553:3365","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2776:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseErrorKind","id":"0:2553:3365","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1447:203":{"id":"0:1447:203","crate_id":0,"name":"Output","span":{"filename":"src/naive/time/mod.rs","begin":[1202,4],"end":[1202,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:2132:2732":{"id":"0:2132:2732","crate_id":0,"name":"Micros","span":{"filename":"src/datetime/mod.rs","begin":[63,4],"end":[63,10]},"visibility":"default","docs":"Use fixed 6 subsecond digits. This corresponds to\n[Fixed::Nanosecond6](format/enum.Fixed.html#variant.Nanosecond6).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:1071:203":{"id":"0:1071:203","crate_id":0,"name":"Output","span":{"filename":"src/naive/date.rs","begin":[1897,4],"end":[1897,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"a:2:2793:252-0:2724:2136":{"id":"a:2:2793:252-0:2724:2136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2793:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IsoWeek","id":"0:2724:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:513:3085":{"id":"0:513:3085","crate_id":0,"name":"from_str","span":{"filename":"src/datetime/mod.rs","begin":[1396,4],"end":[1398,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:906:2133","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Local","id":"0:3052:2107","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2595":{"id":"0:2595","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[134,22],"end":[134,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9531:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Days","id":"0:2589:2135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2596:718"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2571-0:3052:2107":{"id":"b:2:2571-0:3052:2107","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Local","id":"0:3052:2107","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2573:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:316:2124":{"id":"0:316:2124","crate_id":0,"name":"date","span":{"filename":"src/datetime/mod.rs","begin":[175,4],"end":[177,5]},"visibility":"public","docs":"Retrieves the date component with an associated timezone.\n\nUnless you are immediately planning on turning this into a `DateTime`\nwith the same timezone you should use the [`date_naive`](DateTime::date_naive) method.\n\n[`NaiveDate`] is a more well-defined type, and has more traits implemented on it,\nso should be preferred to [`Date`] any time you truly want to operate on dates.\n\n# Panics\n\n[`DateTime`] internally stores the date and time in UTC with a [`NaiveDateTime`]. This\nmethod will panic if the offset from UTC would push the local date outside of the\nrepresentable range of a [`Date`].","links":{"DateTime::date_naive":"0:317:2789","`NaiveDateTime`":"0:2668:2120","`DateTime`":"0:2154:2111","`NaiveDate`":"0:2610:2119","`Date`":"0:2120:2106"},"attrs":["#[inline]","#[deprecated(since = \"0.4.23\", note = \"Use `date_naive()` instead\")]","#[allow(deprecated)]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"Use `date_naive()` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:784:3085":{"id":"0:784:3085","crate_id":0,"name":"from_str","span":{"filename":"src/format/parse.rs","begin":[530,4],"end":[537,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:906:2133","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2571-0:2610:2119":{"id":"b:2:2571-0:2610:2119","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2573:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2582-0:3160:2143":{"id":"b:2:2582-0:3160:2143","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseWeekdayError","id":"0:3160:2143","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2585:133","2:2586:1588"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1046:2144":{"id":"0:1046:2144","crate_id":0,"name":"month","span":{"filename":"src/naive/date.rs","begin":[1495,4],"end":[1497,5]},"visibility":"default","docs":"Returns the month number starting from 1.\n\nThe return value ranges from 1 to 12.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().month(), 9);\nassert_eq!(NaiveDate::from_ymd_opt(-308, 3, 14).unwrap().month(), 3);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1075:301":{"id":"0:1075:301","crate_id":0,"name":"add","span":{"filename":"src/naive/date.rs","begin":[1924,4],"end":[1926,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["days",{"resolved_path":{"name":"Days","id":"0:2589:2135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:2845:2284","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2571-0:2209:2527":{"id":"b:2:2571-0:2209:2527","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"StrftimeItems","id":"0:2209:2527","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2573:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2582-0:2724:2136":{"id":"b:2:2582-0:2724:2136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IsoWeek","id":"0:2724:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2585:133","2:2586:1588"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:852":{"id":"0:852","crate_id":0,"name":null,"span":{"filename":"src/format/strftime.rs","begin":[203,0],"end":[226,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["eq_by","rposition","try_fold","take","by_ref","fold","take_while","max_by_key","intersperse_with","ne","map","is_sorted","unzip","all","try_for_each","cloned","try_collect","map_while","for_each","find","next_chunk","eq","any","is_sorted_by","array_chunks","reduce","enumerate","collect_into","size_hint","flatten","collect","filter","advance_by","copied","partial_cmp","is_sorted_by_key","product","last","try_reduce","partition","map_windows","min_by","filter_map","nth","flat_map","position","cycle","chain","min","rev","cmp","lt","skip","cmp_by","gt","find_map","__iterator_get_unchecked","partition_in_place","fuse","min_by_key","peekable","sum","step_by","scan","partial_cmp_by","try_find","ge","is_partitioned","inspect","zip","skip_while","max","intersperse","count","max_by","le"],"trait":{"name":"Iterator","id":"2:7627:173","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StrftimeItems","id":"0:2209:2527","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:854:168","0:855:1016"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2332":{"id":"0:2332","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[161,26],"end":[161,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2325:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalNumeric","id":"0:2321:3242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2333:660"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2466":{"id":"0:2466","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[298,40],"end":[298,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2787:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetPrecision","id":"0:2445:3316","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8607:8817-0:2493:168":{"id":"a:2:8607:8817-0:2493:168","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8607:8817","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Item","id":"0:2493:168","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1199:2920":{"id":"0:1199:2920","crate_id":0,"name":"and_utc","span":{"filename":"src/naive/datetime/mod.rs","begin":[983,4],"end":[985,5]},"visibility":"public","docs":"Converts the `NaiveDateTime` into the timezone-aware `DateTime<Utc>`.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Utc};\nlet dt = NaiveDate::from_ymd_opt(2023, 1, 30).unwrap().and_hms_opt(19, 32, 33).unwrap().and_utc();\nassert_eq!(dt.timezone(), Utc);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Utc","id":"0:3059:2118","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1985-0:1953:2110":{"id":"0:1985-0:1953:2110","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[542,46],"end":[542,57]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"round::SubsecRound","name":"SubsecRound","id":"0:1953:2110","glob":false}}},"0:2317:718":{"id":"0:2317:718","crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[105,31],"end":[105,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9506:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9487:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:256-0:2120:2106":{"id":"0:256-0:2120:2106","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[513,15],"end":[513,19]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"import":{"source":"date::Date","name":"Date","id":"0:2120:2106","glob":false}}},"b:2:3412-0:2761:2117":{"id":"b:2:3412-0:2761:2117","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3410:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3414:1603"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5538:33889":{"id":"5:5538:33889","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:12528:32637"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7489:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2577-0:2742:2121":{"id":"b:2:2577-0:2742:2121","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2547:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2580:133","2:2581:1590"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12531:15983":{"id":"2:12531:15983","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4574:15983"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:43834:8568","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2070:3055":{"id":"0:2070:3055","crate_id":0,"name":"with_second","span":{"filename":"src/traits.rs","begin":[309,4],"end":[309,52]},"visibility":"default","docs":"Makes a new value with the second number changed.\n\nReturns `None` when the resulting value would be invalid.\nAs with the [`second`](#tymethod.second) method,\nthe input range is restricted to 0 through 59.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["sec",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:1257:203":{"id":"0:1257:203","crate_id":0,"name":"Output","span":{"filename":"src/naive/datetime/mod.rs","begin":[1690,4],"end":[1690,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:3067":{"id":"0:3067","crate_id":0,"name":null,"span":{"filename":"src/offset/utc.rs","begin":[43,33],"end":[43,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2787:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Utc","id":"0:3059:2118","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:990:5095":{"id":"0:990:5095","crate_id":0,"name":"from_isoywd","span":{"filename":"src/naive/date.rs","begin":[352,4],"end":[354,5]},"visibility":"public","docs":"Makes a new `NaiveDate` from the [ISO week date](#week-date)\n(year, week number and day of the week).\nThe resulting `NaiveDate` may have a different year from the input year.\n\n# Panics\n\nPanics if the specified week does not exist in that year, on invalid values for `week`, or\nif the resulting date is out of range for `NaiveDate`.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `from_isoywd_opt()` instead\")]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"use `from_isoywd_opt()` instead"},"inner":{"function":{"decl":{"inputs":[["year",{"primitive":"i32"}],["week",{"primitive":"u32"}],["weekday",{"resolved_path":{"name":"Weekday","id":"0:3124:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3201:3432":{"id":"0:3201:3432","crate_id":0,"name":"November","span":{"filename":"src/month.rs","begin":[57,4],"end":[57,17]},"visibility":"default","docs":"November","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":{"expr":"10","value":"10"}}}},"0:2170:2717":{"id":"0:2170:2717","crate_id":0,"name":"Parsed","span":{"filename":"src/format/parsed.rs","begin":[22,0],"end":[107,1]},"visibility":"public","docs":"Parsed parts of date and time. There are two classes of methods:\n\n- `set_*` methods try to set given field(s) while checking for the consistency.\n  It may or may not check for the range constraint immediately (for efficiency reasons).\n\n- `to_*` methods try to make a concrete date and time value out of set fields.\n  It fully checks any remaining out-of-range conditions and inconsistent/impossible fields.","links":{},"attrs":["#[allow(clippy :: manual_non_exhaustive)]"],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:2171:2670","0:2172:3723","0:2173:3725","0:2174:3729","0:2175:3734","0:2176:3736","0:2177:2144","0:2178:3456","0:2179:3459","0:2180:3743","0:2181:2142","0:2182:2674","0:2183:2672","0:2184:3748","0:2185:3750","0:2186:3039","0:2187:3040","0:2188:3041","0:2189:2799","0:2190:1053"],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:654","a:2:2793:252-0:2170:2717","a:2:2776:242-0:2170:2717","a:2:8606:8818-0:2170:2717","a:2:2833:8772-0:2170:2717","a:2:8607:8817-0:2170:2717","b:2:2571-0:2170:2717","b:2:2577-0:2170:2717","b:2:2582-0:2170:2717","b:2:2261-0:2170:2717","b:2:3412-0:2170:2717","b:2:2264-0:2170:2717","b:2:2567-0:2170:2717","b:5:682-0:2170:2717","0:2204","0:2202","0:2198","0:2194","0:2195","0:2197","0:2200","0:2192"]}}},"0:55:203":{"id":"0:55:203","crate_id":0,"name":"Output","span":{"filename":"src/duration.rs","begin":[319,4],"end":[319,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:81:718":{"id":"0:81:718","crate_id":0,"name":"fmt","span":{"filename":"src/duration.rs","begin":[447,4],"end":[449,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9506:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9487:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2571-0:3246:2146":{"id":"b:2:2571-0:3246:2146","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseMonthError","id":"0:3246:2146","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2573:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1164:5851":{"id":"0:1164:5851","crate_id":0,"name":"from_timestamp_millis","span":{"filename":"src/naive/datetime/mod.rs","begin":[156,4],"end":[160,5]},"visibility":"public","docs":"Creates a new [NaiveDateTime] from milliseconds since the UNIX epoch.\n\nThe UNIX epoch starts on midnight, January 1, 1970, UTC.\n\n# Errors\n\nReturns `None` if the number of milliseconds would be out of range for a `NaiveDateTime`\n(more than ca. 262,000 years away from common era)\n\n# Example\n\n```\nuse chrono::NaiveDateTime;\nlet timestamp_millis: i64 = 1662921288000; //Sunday, September 11, 2022 6:34:48 PM\nlet naive_datetime = NaiveDateTime::from_timestamp_millis(timestamp_millis);\nassert!(naive_datetime.is_some());\nassert_eq!(timestamp_millis, naive_datetime.unwrap().timestamp_millis());\n\n// Negative timestamps (before the UNIX epoch) are supported as well.\nlet timestamp_millis: i64 = -2208936075000; //Mon Jan 01 1900 14:38:45 GMT+0000\nlet naive_datetime = NaiveDateTime::from_timestamp_millis(timestamp_millis);\nassert!(naive_datetime.is_some());\nassert_eq!(timestamp_millis, naive_datetime.unwrap().timestamp_millis());\n```","links":{"NaiveDateTime":"0:2668:2120"},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["millis",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2261-0:2628:4959":{"id":"b:2:2261-0:2628:4959","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2255:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateDaysIterator","id":"0:2628:4959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2263:2522"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:3140:3843":{"id":"0:3140:3843","crate_id":0,"name":"Sat","span":{"filename":"src/weekday.rs","begin":[48,4],"end":[48,11]},"visibility":"default","docs":"Saturday.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":{"expr":"5","value":"5"}}}},"0:412:2683":{"id":"0:412:2683","crate_id":0,"name":"with_ordinal0","span":{"filename":"src/datetime/mod.rs","begin":[1079,4],"end":[1081,5]},"visibility":"default","docs":"Makes a new `DateTime` with the month number (starting from 0) changed.\n\nSee also the [`NaiveDate::with_ordinal0`] method.\n\n# Errors\n\nReturns `None` if:\n- The resulting date does not exist.\n- The value for `ordinal0` is invalid.\n- The local time at the resulting date does not exist or is ambiguous, for example during a\n  daylight saving time transition.","links":{"`NaiveDate::with_ordinal0`":"0:1061:2683"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["ordinal0",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3412-0:3246:2146":{"id":"b:2:3412-0:3246:2146","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3410:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseMonthError","id":"0:3246:2146","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3414:1603"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12430:14127":{"id":"2:12430:14127","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the previous character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:12067:450"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:43502:8551","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1228:2575":{"id":"0:1228:2575","crate_id":0,"name":"hour","span":{"filename":"src/naive/datetime/mod.rs","begin":[1342,4],"end":[1344,5]},"visibility":"default","docs":"Returns the hour number from 0 to 23.\n\nSee also the [`NaiveTime::hour`] method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Timelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().and_hms_milli_opt(12, 34, 56, 789).unwrap();\nassert_eq!(dt.hour(), 12);\n```","links":{"`NaiveTime::hour`":"0:1427:2575"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:329:2627":{"id":"0:329:2627","crate_id":0,"name":"with_timezone","span":{"filename":"src/datetime/mod.rs","begin":[358,4],"end":[360,5]},"visibility":"public","docs":"Changes the associated time zone.\nThe returned `DateTime` references the same instant of time from the perspective of the\nprovided time zone.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["tz",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Tz2"}}}]],"output":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz2"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Tz2","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3254":{"id":"0:3254","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[233,27],"end":[233,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2330:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseMonthError","id":"0:3246:2146","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:391:2670":{"id":"0:391:2670","crate_id":0,"name":"year","span":{"filename":"src/datetime/mod.rs","begin":[935,4],"end":[937,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:570:2659":{"id":"0:570:2659","crate_id":0,"name":"new_with_offset","span":{"filename":"src/format/formatting.rs","begin":[84,4],"end":[102,5]},"visibility":"public","docs":"Makes a new `DelayedFormat` value out of local date and time and UTC offset.","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["date",{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}],["time",{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}],["offset",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Off"}}}],["items",{"generic":"I"}]],"output":{"resolved_path":{"name":"DelayedFormat","id":"0:2161:2526","args":{"angle_bracketed":{"args":[{"type":{"generic":"I"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Off","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Off"},"bounds":[{"trait_bound":{"trait":{"name":"Offset","id":"0:1904:2122","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"fmt::Display","id":"2:9536:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2577-0:2445:3316":{"id":"b:2:2577-0:2445:3316","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2547:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetPrecision","id":"0:2445:3316","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2580:133","2:2581:1590"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2740:781":{"id":"0:2740:781","crate_id":0,"name":"hash","span":{"filename":"src/naive/isoweek.rs","begin":[19,54],"end":[19,58]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9755:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3266:660":{"id":"0:3266:660","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[573,28],"end":[573,37]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"OutOfRange","id":"0:3256:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:677:3788":{"id":"0:677:3788","crate_id":0,"name":"set_ordinal","span":{"filename":"src/format/parsed.rs","begin":[218,4],"end":[220,5]},"visibility":"public","docs":"Tries to set the [`ordinal`](#structfield.ordinal) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:906:2133","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:682:3796":{"id":"0:682:3796","crate_id":0,"name":"set_hour12","span":{"filename":"src/format/parsed.rs","begin":[238,4],"end":[243,5]},"visibility":"public","docs":"Tries to set the [`hour_mod_12`](#structfield.hour_mod_12) field from\ngiven hour number in 12-hour clocks.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:906:2133","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8607:8817-0:3073:2138":{"id":"a:2:8607:8817-0:3073:2138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8607:8817","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8607:8817","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LocalResult","id":"0:3073:2138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1398":{"id":"0:1398","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[228,0],"end":[846,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1399:6640","0:1400:2581","0:1401:6654","0:1402:2590","0:1403:6666","0:1404:2599","0:1405:6678","0:1406:2608","0:1407:6692","0:1408:5871","0:1409:2998","0:1410:2714","0:1413:6010","0:1414:6036","0:1415:2640","0:1417:2656","0:1421:729","0:1424:2325"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:104-0:2610:2119":{"id":"0:104-0:2610:2119","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[506,20],"end":[506,29]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"inner":{"import":{"source":"crate::NaiveDate","name":"NaiveDate","id":"0:2610:2119","glob":false}}},"0:2182:2674":{"id":"0:2182:2674","crate_id":0,"name":"ordinal","span":{"filename":"src/format/parsed.rs","begin":[76,4],"end":[76,28]},"visibility":"public","docs":"Day of the year (1--365 or 1--366 depending on the year).","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"bindings":[]}}}}}},"0:3099":{"id":"0:3099","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[41,40],"end":[41,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::cmp::Eq","id":"2:2330:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2330:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LocalResult","id":"0:3073:2138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:749:2713":{"id":"0:749:2713","crate_id":0,"name":"parse","span":{"filename":"src/format/parse.rs","begin":[243,0],"end":[249,1]},"visibility":"public","docs":"Tries to parse given string into `parsed` with given formatting items.\nReturns `Ok` when the entire string has been parsed (otherwise `parsed` should not be used).\nThere should be no trailing string after parsing;\nuse a stray [`Item::Space`](./enum.Item.html#variant.Space) to trim whitespaces.\n\nThis particular date and time parser is:\n\n- Greedy. It will consume the longest possible prefix.\n  For example, `April` is always consumed entirely when the long month name is requested;\n  it equally accepts `Apr`, but prefers the longer prefix in this case.\n\n- Padding-agnostic (for numeric items).\n  The [`Pad`](./enum.Pad.html) field is completely ignored,\n  so one can prepend any number of whitespace then any number of zeroes before numbers.\n\n- (Still) obeying the intrinsic parsing width. This allows, for example, parsing `HHMMSS`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["parsed",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"super::Parsed","id":"0:2170:2717","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["items",{"generic":"I"}]],"output":{"resolved_path":{"name":"super::ParseResult","id":"0:906:2133","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7627:173","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"B"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2255:100","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"super::Item","id":"0:2493:168","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2318":{"id":"0:2318","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[105,38],"end":[105,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9747:148","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Numeric","id":"0:2264:3194","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2319:781"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3412-0:2668:2120":{"id":"b:2:3412-0:2668:2120","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3410:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3414:1603"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:40:2364":{"id":"0:40:2364","crate_id":0,"name":"num_seconds","span":{"filename":"src/duration.rs","begin":[173,4],"end":[180,5]},"visibility":"public","docs":"Returns the total number of whole seconds in the duration.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1460:718":{"id":"0:1460:718","crate_id":0,"name":"fmt","span":{"filename":"src/naive/time/mod.rs","begin":[1320,4],"end":[1344,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9506:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9487:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2385:718":{"id":"0:2385:718","crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[176,31],"end":[176,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9506:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9487:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8607:8817-0:2553:3365":{"id":"a:2:8607:8817-0:2553:3365","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8607:8817","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseErrorKind","id":"0:2553:3365","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:3230":{"id":"0:3230","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[221,16],"end":[221,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2788:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Months","id":"0:3225:2145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8607:8817-0:2170:2717":{"id":"a:2:8607:8817-0:2170:2717","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8607:8817","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parsed","id":"0:2170:2717","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2396":{"id":"0:2396","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[260,23],"end":[260,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2325:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalFixed","id":"0:2389:3299","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2397:660"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1872":{"id":"0:1872","crate_id":0,"name":null,"span":{"filename":"src/offset/utc.rs","begin":[111,0],"end":[131,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ymd_opt","ymd","timestamp_opt","isoywd","yo","yo_opt","timestamp_millis_opt","timestamp_micros","isoywd_opt","timestamp_millis","datetime_from_str","from_utc_datetime","timestamp_nanos","from_local_date","timestamp","with_ymd_and_hms","from_local_datetime","from_utc_date"],"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Utc","id":"0:3059:2118","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1873:2122","0:1874:2624","0:1875:7059","0:1876:7061","0:1877:7066","0:1878:3880"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:366:744":{"id":"0:366:744","crate_id":0,"name":"from","span":{"filename":"src/datetime/mod.rs","begin":[706,4],"end":[708,5]},"visibility":"default","docs":"Convert this `DateTime<Local>` instance into a `DateTime<Utc>` instance.\n\nConversion is performed via [`DateTime::with_timezone`], accounting for the difference in\ntimezones.","links":{"`DateTime::with_timezone`":"0:329:2627"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Local","id":"0:3052:2107","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:565":{"id":"0:565","crate_id":0,"name":null,"span":{"filename":"src/format/formatting.rs","begin":[68,0],"end":[134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\"))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7627:173","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"B"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2255:100","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"super::Item","id":"0:2493:168","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"DelayedFormat","id":"0:2161:2526","args":{"angle_bracketed":{"args":[{"type":{"generic":"I"}}],"bindings":[]}}}},"items":["0:569:1002","0:570:2659"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:54":{"id":"0:54","crate_id":0,"name":null,"span":{"filename":"src/duration.rs","begin":[318,0],"end":[329,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Neg","id":"2:2872:2287","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:55:203","0:56:994"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2651:718":{"id":"0:2651:718","crate_id":0,"name":"fmt","span":{"filename":"src/naive/date.rs","begin":[2053,9],"end":[2053,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9506:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9487:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3198:3431":{"id":"0:3198:3431","crate_id":0,"name":"October","span":{"filename":"src/month.rs","begin":[55,4],"end":[55,15]},"visibility":"default","docs":"October","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":{"expr":"9","value":"9"}}}},"0:1105":{"id":"0:1105","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[2107,0],"end":[2126,1]},"visibility":"default","docs":"The `Debug` output of the naive date `d` is the same as\n[`d.format(\"%Y-%m-%d\")`](../format/strftime/index.html).\n\nThe string printed can be readily parsed via the `parse` method on `str`.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nassert_eq!(format!(\"{:?}\", NaiveDate::from_ymd_opt(2015,  9,  5).unwrap()), \"2015-09-05\");\nassert_eq!(format!(\"{:?}\", NaiveDate::from_ymd_opt(   0,  1,  1).unwrap()), \"0000-01-01\");\nassert_eq!(format!(\"{:?}\", NaiveDate::from_ymd_opt(9999, 12, 31).unwrap()), \"9999-12-31\");\n```\n\nISO 8601 requires an explicit sign for years before 1 BCE or after 9999 CE.\n\n```\n# use chrono::NaiveDate;\nassert_eq!(format!(\"{:?}\", NaiveDate::from_ymd_opt(   -1,  1,  1).unwrap()),  \"-0001-01-01\");\nassert_eq!(format!(\"{:?}\", NaiveDate::from_ymd_opt(10000, 12, 31).unwrap()), \"+10000-12-31\");\n```","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9531:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1106:718"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2047:2671":{"id":"0:2047:2671","crate_id":0,"name":"month0","span":{"filename":"src/traits.rs","begin":[55,4],"end":[55,28]},"visibility":"default","docs":"Returns the month number starting from 0.\n\nThe return value ranges from 0 to 11.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:2200":{"id":"0:2200","crate_id":0,"name":null,"span":{"filename":"src/format/parsed.rs","begin":[21,31],"end":[21,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(clippy :: manual_non_exhaustive)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9531:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parsed","id":"0:2170:2717","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2201:718"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2289:3220":{"id":"0:2289:3220","crate_id":0,"name":"WeekdayFromMon","span":{"filename":"src/format/mod.rs","begin":[134,4],"end":[134,18]},"visibility":"default","docs":"Day of the week, where Monday = 1 and Sunday = 7 (FW=PW=1).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:240:203":{"id":"0:240:203","crate_id":0,"name":"Output","span":{"filename":"src/date.rs","begin":[519,4],"end":[519,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}}},"0:2144:718":{"id":"0:2144:718","crate_id":0,"name":"fmt","span":{"filename":"src/datetime/mod.rs","begin":[51,22],"end":[51,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9506:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9487:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2582-0:2628:4959":{"id":"b:2:2582-0:2628:4959","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateDaysIterator","id":"0:2628:4959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2585:133","2:2586:1588"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1965":{"id":"0:1965","crate_id":0,"name":null,"span":{"filename":"src/round.rs","begin":[145,0],"end":[155,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"DurationRound","id":"0:1961:2140","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::datetime::DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:1967:132","0:1968:7915","0:1969:7920"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1920:2820":{"id":"0:1920:2820","crate_id":0,"name":"timestamp_nanos","span":{"filename":"src/offset/mod.rs","begin":[437,4],"end":[444,5]},"visibility":"default","docs":"Makes a new `DateTime` from the number of non-leap nanoseconds\nsince January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\").\n\nUnlike [`timestamp_millis`](#method.timestamp_millis), this never\npanics.\n\n# Example\n\n```\nuse chrono::{Utc, TimeZone};\n\nassert_eq!(Utc.timestamp_nanos(1431648000000000).timestamp(), 1431648);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["nanos",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2577-0:3124:2116":{"id":"b:2:2577-0:3124:2116","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2547:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Weekday","id":"0:3124:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2580:133","2:2581:1590"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1917:3095":{"id":"0:1917:3095","crate_id":0,"name":"timestamp_opt","span":{"filename":"src/offset/mod.rs","begin":[383,4],"end":[388,5]},"visibility":"default","docs":"Makes a new `DateTime` from the number of non-leap seconds\nsince January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\")\nand the number of nanoseconds since the last whole non-leap second.\n\nThe nanosecond part can exceed 1,000,000,000 in order to represent a\n[leap second](NaiveTime#leap-second-handling), but only when `secs % 60 == 59`.\n(The true \"UNIX timestamp\" cannot represent a leap second unambiguously.)\n\n# Errors\n\nReturns `LocalResult::None` on out-of-range number of seconds and/or\ninvalid nanosecond, otherwise always returns `LocalResult::Single`.\n\n# Example\n\n```\nuse chrono::{Utc, TimeZone};\n\nassert_eq!(Utc.timestamp_opt(1431648000, 0).unwrap().to_string(), \"2015-05-15 00:00:00 UTC\");\n```","links":{"NaiveTime#leap-second-handling":"0:2742:2121"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["secs",{"primitive":"i64"}],["nsecs",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"LocalResult","id":"0:3073:2138","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:471":{"id":"0:471","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1267,0],"end":[1276,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:2850:2288","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"2:44300:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:473:203","0:474:1525"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:155:2612":{"id":"0:155:2612","crate_id":0,"name":"succ","span":{"filename":"src/date.rs","begin":[208,4],"end":[210,5]},"visibility":"public","docs":"Makes a new `Date` for the next date.\n\nPanics when `self` is the last representable date.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"Use succ_opt() instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"Use succ_opt() instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3260":{"id":"0:3260","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[573,16],"end":[573,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2788:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRange","id":"0:3256:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:979:1002":{"id":"0:979:1002","crate_id":0,"name":"new","span":{"filename":"src/naive/date.rs","begin":[139,4],"end":[141,5]},"visibility":"public","docs":"Construct a new `Days` from a number of days","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["num",{"primitive":"u64"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2577-0:3059:2118":{"id":"b:2:2577-0:3059:2118","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2547:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Utc","id":"0:3059:2118","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2580:133","2:2581:1590"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1880:2774":{"id":"0:1880:2774","crate_id":0,"name":"fix","span":{"filename":"src/offset/utc.rs","begin":[134,4],"end":[136,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:29:2337":{"id":"0:29:2337","crate_id":0,"name":"days","span":{"filename":"src/duration.rs","begin":[88,4],"end":[91,5]},"visibility":"public","docs":"Makes a new `Duration` with given number of days.\nEquivalent to `Duration::seconds(days * 24 * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["days",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3252:660":{"id":"0:3252:660","crate_id":0,"name":"eq","span":{"filename":"src/month.rs","begin":[233,16],"end":[233,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ParseMonthError","id":"0:3246:2146","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1565:301":{"id":"0:1565:301","crate_id":0,"name":"add","span":{"filename":"src/offset/fixed.rs","begin":[223,4],"end":[225,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2091":{"id":"0:2091","crate_id":0,"name":null,"span":{"filename":"src/duration.rs","begin":[53,22],"end":[53,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2786:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2656:781":{"id":"0:2656:781","crate_id":0,"name":"hash","span":{"filename":"src/naive/date.rs","begin":[2053,29],"end":[2053,33]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9755:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2754":{"id":"0:2754","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[205,30],"end":[205,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","lt","le","ge"],"trait":{"name":"PartialOrd","id":"2:2367:206","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2755:1100"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2571-0:2536:2132":{"id":"b:2:2571-0:2536:2132","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:2536:2132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2573:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2571-0:3225:2145":{"id":"b:2:2571-0:3225:2145","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Months","id":"0:3225:2145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2573:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:3236":{"id":"0:3236","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[221,33],"end":[221,37]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9747:148","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Months","id":"0:3225:2145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3237:781"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1163:2917":{"id":"0:1163:2917","crate_id":0,"name":"from_timestamp","span":{"filename":"src/naive/datetime/mod.rs","begin":[125,4],"end":[128,5]},"visibility":"public","docs":"Makes a new `NaiveDateTime` corresponding to a UTC date and time,\nfrom the number of non-leap seconds\nsince the midnight UTC on January 1, 1970 (aka \"UNIX timestamp\")\nand the number of nanoseconds since the last whole non-leap second.\n\nFor a non-naive version of this function see\n[`TimeZone::timestamp`](../offset/trait.TimeZone.html#method.timestamp).\n\nThe nanosecond part can exceed 1,000,000,000 in order to represent a\n[leap second](NaiveTime#leap-second-handling), but only when `secs % 60 == 59`.\n(The true \"UNIX timestamp\" cannot represent a leap second unambiguously.)\n\n# Panics\n\nPanics if the number of seconds would be out of range for a `NaiveDateTime` (more than\nca. 262,000 years away from common era), and panics on an invalid nanosecond (2 seconds or\nmore).","links":{"NaiveTime#leap-second-handling":"0:2742:2121"},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `from_timestamp_opt()` instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"use `from_timestamp_opt()` instead"},"inner":{"function":{"decl":{"inputs":[["secs",{"primitive":"i64"}],["nsecs",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:373":{"id":"0:373","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[731,0],"end":[851,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::offset::FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:374:2969","0:376:2985","0:377:2998","0:378:2714"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2577-0:2209:2527":{"id":"b:2:2577-0:2209:2527","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2547:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"StrftimeItems","id":"0:2209:2527","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2580:133","2:2581:1590"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:67:203":{"id":"0:67:203","crate_id":0,"name":"Output","span":{"filename":"src/duration.rs","begin":[372,4],"end":[372,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:2426:3314":{"id":"0:2426:3314","crate_id":0,"name":"OffsetFormat","span":{"filename":"src/format/mod.rs","begin":[286,0],"end":[295,1]},"visibility":"public","docs":"Type for specifying the format of UTC offsets.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:2427:1128","0:2428:3318","0:2429:3321","0:2430:3323"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:2793:252-0:2426:3314","a:2:2776:242-0:2426:3314","a:2:8606:8818-0:2426:3314","a:2:2833:8772-0:2426:3314","a:2:8607:8817-0:2426:3314","b:2:2571-0:2426:3314","b:2:2577-0:2426:3314","b:2:2582-0:2426:3314","b:2:2261-0:2426:3314","b:2:3412-0:2426:3314","b:2:2264-0:2426:3314","b:2:2567-0:2426:3314","b:5:682-0:2426:3314","0:2440","0:2434","0:2431","0:2437","0:2433","0:2436","0:2442","0:2439"]}}},"0:2250":{"id":"0:2250","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[82,9],"end":[82,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2788:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Pad","id":"0:2243:3177","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2504:3353":{"id":"0:2504:3353","crate_id":0,"name":"OwnedSpace","span":{"filename":"src/format/mod.rs","begin":[343,4],"end":[343,24]},"visibility":"default","docs":"Same as `Space` but with the string owned by the item.","links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\"))]"],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:2506:1725"]},"discriminant":null}}},"0:1885-0:3059:2118":{"id":"0:1885-0:3059:2118","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[38,0],"end":[38,23]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::utc::Utc","name":"Utc","id":"0:3059:2118","glob":false}}},"0:1926:2654":{"id":"0:1926:2654","crate_id":0,"name":"from_local_date","span":{"filename":"src/offset/mod.rs","begin":[493,4],"end":[498,5]},"visibility":"default","docs":"Converts the local `NaiveDate` to the timezone-aware `Date` if possible.","links":{},"attrs":["#[allow(clippy :: wrong_self_convention)]","#[deprecated(since = \"0.4.23\", note = \"use `from_local_datetime()` instead\")]","#[allow(deprecated)]"],"deprecation":{"since":"0.4.23","note":"use `from_local_datetime()` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["local",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"LocalResult","id":"0:3073:2138","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3143:3458":{"id":"0:3143:3458","crate_id":0,"name":"Sun","span":{"filename":"src/weekday.rs","begin":[50,4],"end":[50,11]},"visibility":"default","docs":"Sunday.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":{"expr":"6","value":"6"}}}},"0:3164":{"id":"0:3164","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[224,16],"end":[224,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2786:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseWeekdayError","id":"0:3160:2143","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3412-0:3256:2158":{"id":"b:2:3412-0:3256:2158","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3410:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRange","id":"0:3256:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3414:1603"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1066:302":{"id":"0:1066:302","crate_id":0,"name":"add_assign","span":{"filename":"src/naive/date.rs","begin":[1863,4],"end":[1865,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["rhs",{"resolved_path":{"name":"OldDuration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2793:252-0:2445:3316":{"id":"a:2:2793:252-0:2445:3316","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2793:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetPrecision","id":"0:2445:3316","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1842":{"id":"0:1842","crate_id":0,"name":null,"span":{"filename":"src/offset/local/mod.rs","begin":[111,0],"end":[150,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Local","id":"0:3052:2107","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1843:2691","0:1844:7165"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3204:3434":{"id":"0:3204:3434","crate_id":0,"name":"December","span":{"filename":"src/month.rs","begin":[59,4],"end":[59,17]},"visibility":"default","docs":"December","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":{"expr":"11","value":"11"}}}},"0:191:2672":{"id":"0:191:2672","crate_id":0,"name":"day","span":{"filename":"src/date.rs","begin":[412,4],"end":[414,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3120":{"id":"0:3120","crate_id":0,"name":null,"span":{"filename":"src/round.rs","begin":[238,34],"end":[238,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2787:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RoundingError","id":"0:3106:2141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1476-0:2628:4959":{"id":"0:1476-0:2628:4959","crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[13,38],"end":[13,59]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::date::NaiveDateDaysIterator","name":"NaiveDateDaysIterator","id":"0:2628:4959","glob":false}}},"a:2:8607:8817-0:3170:2114":{"id":"a:2:8607:8817-0:3170:2114","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8607:8817","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Month","id":"0:3170:2114","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8607:8817-0:2085:127":{"id":"a:2:8607:8817-0:2085:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8607:8817","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2244:196":{"id":"0:2244:196","crate_id":0,"name":"None","span":{"filename":"src/format/mod.rs","begin":[85,4],"end":[85,8]},"visibility":"default","docs":"No padding.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:2734":{"id":"0:2734","crate_id":0,"name":null,"span":{"filename":"src/naive/isoweek.rs","begin":[19,36],"end":[19,39]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["min","max","clamp"],"trait":{"name":"Ord","id":"2:2361:199","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IsoWeek","id":"0:2724:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2735:461"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2093:660":{"id":"0:2093:660","crate_id":0,"name":"eq","span":{"filename":"src/duration.rs","begin":[53,22],"end":[53,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:88:1135":{"id":"0:88:1135","crate_id":0,"name":"prelude","span":{"filename":"src/lib.rs","begin":[485,0],"end":[485,15]},"visibility":"public","docs":"A convenience module appropriate for glob imports (`use chrono::prelude::*;`).","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:89-0:2120:2106","0:90-0:3052:2107","0:91-0:1953:2110","0:93-0:2154:2111","0:94-0:2127:2112","0:96-0:2043:2113","0:97-0:3170:2114","0:98-0:2062:2115","0:99-0:3124:2116","0:101-0:2761:2117","0:102-0:3059:2118","0:104-0:2610:2119","0:105-0:2668:2120","0:106-0:2742:2121","0:108-0:1904:2122","0:109-0:1906:2123"],"is_stripped":false}}},"b:2:2582-0:2127:2112":{"id":"b:2:2582-0:2127:2112","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SecondsFormat","id":"0:2127:2112","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2585:133","2:2586:1588"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2674":{"id":"0:2674","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[75,20],"end":[75,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2787:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2732":{"id":"0:2732","crate_id":0,"name":null,"span":{"filename":"src/naive/isoweek.rs","begin":[19,24],"end":[19,34]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","lt","le","ge"],"trait":{"name":"PartialOrd","id":"2:2367:206","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IsoWeek","id":"0:2724:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2733:1100"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2031":{"id":"0:2031","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[242,0],"end":[246,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9536:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseMonthError","id":"0:3246:2146","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2032:718"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2141:454":{"id":"0:2141:454","crate_id":0,"name":"clone","span":{"filename":"src/datetime/mod.rs","begin":[51,9],"end":[51,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SecondsFormat","id":"0:2127:2112","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2252:454":{"id":"0:2252:454","crate_id":0,"name":"clone","span":{"filename":"src/format/mod.rs","begin":[82,15],"end":[82,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Pad","id":"0:2243:3177","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2588:718":{"id":"0:2588:718","crate_id":0,"name":"fmt","span":{"filename":"src/naive/date.rs","begin":[39,9],"end":[39,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9506:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9487:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1563":{"id":"0:1563","crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[219,0],"end":[226,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Add","id":"2:2845:2284","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::naive::NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1564:203","0:1565:301"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1266":{"id":"0:1266","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1785,0],"end":[1792,1]},"visibility":"default","docs":"Subtracts another `NaiveDateTime` from the current date and time.\nThis does not overflow or underflow at all.\n\nAs a part of Chrono's [leap second handling](./struct.NaiveTime.html#leap-second-handling),\nthe subtraction assumes that **there is no leap second ever**,\nexcept when any of the `NaiveDateTime`s themselves represents a leap second\nin which case the assumption becomes that\n**there are exactly one (or two) leap second(s) ever**.\n\nThe implementation is a wrapper around [`NaiveDateTime::signed_duration_since`].\n\n# Example\n\n```\nuse chrono::{Duration, NaiveDate};\n\nlet from_ymd = |y, m, d| NaiveDate::from_ymd_opt(y, m, d).unwrap();\n\nlet d = from_ymd(2016, 7, 8);\nassert_eq!(d.and_hms_opt(3, 5, 7).unwrap() - d.and_hms_opt(2, 4, 6).unwrap(), Duration::seconds(3600 + 60 + 1));\n\n// July 8 is 190th day in the year 2016\nlet d0 = from_ymd(2016, 1, 1);\nassert_eq!(d.and_hms_milli_opt(0, 7, 6, 500).unwrap() - d0.and_hms_opt(0, 0, 0).unwrap(),\n           Duration::seconds(189 * 86_400 + 7 * 60 + 6) + Duration::milliseconds(500));\n```\n\nLeap seconds are handled, but the subtraction assumes that no other leap\nseconds happened.\n\n```\n# use chrono::{Duration, NaiveDate};\n# let from_ymd = |y, m, d| NaiveDate::from_ymd_opt(y, m, d).unwrap();\nlet leap = from_ymd(2015, 6, 30).and_hms_milli_opt(23, 59, 59, 1_500).unwrap();\nassert_eq!(leap - from_ymd(2015, 6, 30).and_hms_opt(23, 0, 0).unwrap(),\n           Duration::seconds(3600) + Duration::milliseconds(500));\nassert_eq!(from_ymd(2015, 7, 1).and_hms_opt(1, 0, 0).unwrap() - leap,\n           Duration::seconds(3600) - Duration::milliseconds(500));\n```","links":{"`NaiveDateTime::signed_duration_since`":"0:1190:2640"},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:2850:2288","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1267:203","0:1268:1525"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2005":{"id":"0:2005","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[231,0],"end":[231,47]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["description","source","cause","provide","type_id"],"trait":{"name":"Error","id":"2:2629:133","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseWeekdayError","id":"0:3160:2143","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2011-0:3160:2143":{"id":"0:2011-0:3160:2143","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[545,18],"end":[545,35]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"weekday::ParseWeekdayError","name":"ParseWeekdayError","id":"0:3160:2143","glob":false}}},"b:5:5792-0:2761:2117":{"id":"b:5:5792-0:2761:2117","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9536:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5790:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5794:1565"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:36:2361":{"id":"0:36:2361","crate_id":0,"name":"num_weeks","span":{"filename":"src/duration.rs","begin":[151,4],"end":[153,5]},"visibility":"public","docs":"Returns the total number of whole weeks in the duration.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:249":{"id":"0:249","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[543,0],"end":[548,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9531:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:251:718"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3268":{"id":"0:3268","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[573,39],"end":[573,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2330:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRange","id":"0:3256:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2571-0:2648:4960":{"id":"b:2:2571-0:2648:4960","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateWeeksIterator","id":"0:2648:4960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2573:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:7486:168":{"id":"2:7486:168","crate_id":2,"name":"Item","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"Iterator","id":"2:7627:173","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}},"a:2:8606:8818-0:2170:2717":{"id":"a:2:8606:8818-0:2170:2717","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8606:8818","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parsed","id":"0:2170:2717","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1250":{"id":"0:1250","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1587,0],"end":[1629,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Add","id":"2:2845:2284","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Months","id":"0:3225:2145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1251:203","0:1252:301"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2097":{"id":"0:2097","crate_id":0,"name":null,"span":{"filename":"src/duration.rs","begin":[53,37],"end":[53,47]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","lt","le","ge"],"trait":{"name":"PartialOrd","id":"2:2367:206","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2098:1100"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2099":{"id":"0:2099","crate_id":0,"name":null,"span":{"filename":"src/duration.rs","begin":[53,49],"end":[53,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["min","max","clamp"],"trait":{"name":"Ord","id":"2:2361:199","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2100:461"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2175:3734":{"id":"0:2175:3734","crate_id":0,"name":"isoyear_div_100","span":{"filename":"src/format/parsed.rs","begin":[51,4],"end":[51,36]},"visibility":"public","docs":"Year in the [ISO week date](../naive/struct.NaiveDate.html#week-date), divided by 100.\nImplies that the year is >= 1 BCE when set.\n\nDue to the common usage, if this field is missing but\n[`isoyear_mod_100`](#structfield.isoyear_mod_100) is present,\nit is inferred to 19 when `isoyear_mod_100 >= 70` and 20 otherwise.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"primitive":"i32"}}],"bindings":[]}}}}}},"0:676:3786":{"id":"0:676:3786","crate_id":0,"name":"set_weekday","span":{"filename":"src/format/parsed.rs","begin":[212,4],"end":[214,5]},"visibility":"public","docs":"Tries to set the [`weekday`](#structfield.weekday) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["value",{"resolved_path":{"name":"Weekday","id":"0:3124:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:906:2133","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2401":{"id":"0:2401","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[260,38],"end":[260,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9747:148","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalFixed","id":"0:2389:3299","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2402:781"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1409:2998":{"id":"0:1409:2998","crate_id":0,"name":"parse_from_str","span":{"filename":"src/naive/time/mod.rs","begin":[533,4],"end":[537,5]},"visibility":"public","docs":"Parses a string with the specified format string and returns a new `NaiveTime`.\nSee the [`format::strftime` module](../format/strftime/index.html)\non the supported escape sequences.\n\n# Example\n\n```\nuse chrono::NaiveTime;\n\nlet parse_from_str = NaiveTime::parse_from_str;\n\nassert_eq!(parse_from_str(\"23:56:04\", \"%H:%M:%S\"),\n           Ok(NaiveTime::from_hms_opt(23, 56, 4).unwrap()));\nassert_eq!(parse_from_str(\"pm012345.6789\", \"%p%I%M%S%.f\"),\n           Ok(NaiveTime::from_hms_micro_opt(13, 23, 45, 678_900).unwrap()));\n```\n\nDate and offset is ignored for the purpose of parsing.\n\n```\n# use chrono::NaiveTime;\n# let parse_from_str = NaiveTime::parse_from_str;\nassert_eq!(parse_from_str(\"2014-5-17T12:34:56+09:30\", \"%Y-%m-%dT%H:%M:%S%z\"),\n           Ok(NaiveTime::from_hms_opt(12, 34, 56).unwrap()));\n```\n\n[Leap seconds](#leap-second-handling) are correctly handled by\ntreating any time of the form `hh:mm:60` as a leap second.\n(This equally applies to the formatting, so the round trip is possible.)\n\n```\n# use chrono::NaiveTime;\n# let parse_from_str = NaiveTime::parse_from_str;\nassert_eq!(parse_from_str(\"08:59:60.123\", \"%H:%M:%S%.f\"),\n           Ok(NaiveTime::from_hms_milli_opt(8, 59, 59, 1_123).unwrap()));\n```\n\nMissing seconds are assumed to be zero,\nbut out-of-bound times or insufficient fields are errors otherwise.\n\n```\n# use chrono::NaiveTime;\n# let parse_from_str = NaiveTime::parse_from_str;\nassert_eq!(parse_from_str(\"7:15\", \"%H:%M\"),\n           Ok(NaiveTime::from_hms_opt(7, 15, 0).unwrap()));\n\nassert!(parse_from_str(\"04m33s\", \"%Mm%Ss\").is_err());\nassert!(parse_from_str(\"12\", \"%H\").is_err());\nassert!(parse_from_str(\"17:60\", \"%H:%M\").is_err());\nassert!(parse_from_str(\"24:00:00\", \"%H:%M:%S\").is_err());\n```\n\nAll parsed fields should be consistent to each other, otherwise it's an error.\nHere `%H` is for 24-hour clocks, unlike `%I`,\nand thus can be independently determined without AM/PM.\n\n```\n# use chrono::NaiveTime;\n# let parse_from_str = NaiveTime::parse_from_str;\nassert!(parse_from_str(\"13:07 AM\", \"%H:%M %p\").is_err());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["fmt",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:906:2133","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2582-0:3073:2138":{"id":"b:2:2582-0:3073:2138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LocalResult","id":"0:3073:2138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2585:133","2:2586:1588"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:418:3040":{"id":"0:418:3040","crate_id":0,"name":"second","span":{"filename":"src/datetime/mod.rs","begin":[1094,4],"end":[1096,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1205:2144":{"id":"0:1205:2144","crate_id":0,"name":"month","span":{"filename":"src/naive/datetime/mod.rs","begin":[1031,4],"end":[1033,5]},"visibility":"default","docs":"Returns the month number starting from 1.\n\nThe return value ranges from 1 to 12.\n\nSee also the [`NaiveDate::month`](./struct.NaiveDate.html#method.month) method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Datelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2015, 9, 25).unwrap().and_hms_opt(12, 34, 56).unwrap();\nassert_eq!(dt.month(), 9);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1998:718":{"id":"0:1998:718","crate_id":0,"name":"fmt","span":{"filename":"src/weekday.rs","begin":[157,4],"end":[167,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9506:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9487:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1954:7892":{"id":"0:1954:7892","crate_id":0,"name":"round_subsecs","span":{"filename":"src/round.rs","begin":[32,4],"end":[32,48]},"visibility":"default","docs":"Return a copy rounded to the specified number of subsecond digits. With\n9 or more digits, self is returned unmodified. Halfway values are\nrounded up (away from zero).\n\n# Example\n``` rust\n# use chrono::{SubsecRound, Timelike, Utc, NaiveDate};\nlet dt = NaiveDate::from_ymd_opt(2018, 1, 11).unwrap().and_hms_milli_opt(12, 0, 0, 154).unwrap().and_local_timezone(Utc).unwrap();\nassert_eq!(dt.round_subsecs(2).nanosecond(), 150_000_000);\nassert_eq!(dt.round_subsecs(1).nanosecond(), 200_000_000);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["digits",{"primitive":"u16"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:3134:3841":{"id":"0:3134:3841","crate_id":0,"name":"Thu","span":{"filename":"src/weekday.rs","begin":[44,4],"end":[44,11]},"visibility":"default","docs":"Thursday.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":{"expr":"3","value":"3"}}}},"0:89-0:2120:2106":{"id":"0:89-0:2120:2106","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[488,4],"end":[488,24]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]","#[allow(deprecated)]"],"deprecation":null,"inner":{"import":{"source":"crate::Date","name":"Date","id":"0:2120:2106","glob":false}}},"0:1176:2806":{"id":"0:1176:2806","crate_id":0,"name":"timestamp_millis","span":{"filename":"src/naive/datetime/mod.rs","begin":[424,4],"end":[427,5]},"visibility":"public","docs":"Returns the number of non-leap *milliseconds* since midnight on January 1, 1970.\n\nNote that this does *not* account for the timezone!\nThe true \"UNIX timestamp\" would count seconds since the midnight *UTC* on the epoch.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet dt = NaiveDate::from_ymd_opt(1970, 1, 1).unwrap().and_hms_milli_opt(0, 0, 1, 444).unwrap();\nassert_eq!(dt.timestamp_millis(), 1_444);\n\nlet dt = NaiveDate::from_ymd_opt(2001, 9, 9).unwrap().and_hms_milli_opt(1, 46, 40, 555).unwrap();\nassert_eq!(dt.timestamp_millis(), 1_000_000_000_555);\n\nlet dt = NaiveDate::from_ymd_opt(1969, 12, 31).unwrap().and_hms_milli_opt(23, 59, 59, 100).unwrap();\nassert_eq!(dt.timestamp_millis(), -900);\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2764":{"id":"0:2764","crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[25,9],"end":[25,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2325:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2765:660"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2074-0:2043:2113":{"id":"0:2074-0:2043:2113","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[551,17],"end":[551,25]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"traits::Datelike","name":"Datelike","id":"0:2043:2113","glob":false}}},"0:2646":{"id":"0:2646","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[2017,62],"end":[2017,65]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["min","max","clamp"],"trait":{"name":"Ord","id":"2:2361:199","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateDaysIterator","id":"0:2628:4959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2647:461"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1989":{"id":"0:1989","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[53,0],"end":[154,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Weekday","id":"0:3124:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1990:2612","0:1991:2619","0:1992:3464","0:1993:8045","0:1994:3846","0:1995:3463"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8607:8817-0:2106:2104":{"id":"a:2:8607:8817-0:2106:2104","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8607:8817","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRangeError","id":"0:2106:2104","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1260:1526":{"id":"0:1260:1526","crate_id":0,"name":"sub_assign","span":{"filename":"src/naive/datetime/mod.rs","begin":[1702,4],"end":[1704,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["rhs",{"resolved_path":{"name":"OldDuration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:7484-0:2209:2527":{"id":"b:2:7484-0:2209:2527","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7627:173","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7480:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StrftimeItems","id":"0:2209:2527","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:7486:168","2:7487:9308","2:7488:838"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"I"}}}},"0:1905:2774":{"id":"0:1905:2774","crate_id":0,"name":"fix","span":{"filename":"src/offset/mod.rs","begin":[209,4],"end":[209,33]},"visibility":"default","docs":"Returns the fixed offset from UTC to the local time stored.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:2319:781":{"id":"0:2319:781","crate_id":0,"name":"hash","span":{"filename":"src/format/mod.rs","begin":[105,38],"end":[105,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9755:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:976:4990":{"id":"0:976:4990","crate_id":0,"name":"last_day","span":{"filename":"src/naive/date.rs","begin":[92,4],"end":[100,5]},"visibility":"public","docs":"Returns a date representing the last day of the week.\n\n# Panics\n\nPanics if the last day of the week happens to fall just out of range of `NaiveDate`\n(more than ca. 262,000 years away from common era).\n\n# Examples\n\n```\nuse chrono::{NaiveDate, Weekday};\n\nlet date = NaiveDate::from_ymd_opt(2022, 4, 18).unwrap();\nlet week = date.week(Weekday::Mon);\nassert!(week.last_day() >= date);\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3152":{"id":"0:3152","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[32,24],"end":[32,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2788:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Weekday","id":"0:3124:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3150":{"id":"0:3150","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[32,20],"end":[32,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2330:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Weekday","id":"0:3124:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:926-0:2536:2132":{"id":"0:926-0:2536:2132","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[527,17],"end":[527,27]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"format::ParseError","name":"ParseError","id":"0:2536:2132","glob":false}}},"0:139":{"id":"0:139","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[74,0],"end":[321,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:141:2561","0:142:2565","0:143:2574","0:144:2578","0:146:2586","0:147:2588","0:149:2595","0:150:2597","0:152:2604","0:153:2606","0:155:2612","0:156:2613","0:158:2619","0:159:2620","0:161:1053","0:162:2568","0:163:2627","0:165:2633","0:166:2635","0:167:2640","0:169:2642","0:170:2567","0:171:2648","0:172:2555","0:173:2558"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:337:2861":{"id":"0:337:2861","crate_id":0,"name":"checked_sub_days","span":{"filename":"src/datetime/mod.rs","begin":[461,4],"end":[466,5]},"visibility":"public","docs":"Subtract a duration in [`Days`] from the date part of the `DateTime`.\n\n# Errors\n\nReturns `None` if:\n- The resulting date would be out of range.\n- The local time at the resulting date does not exist or is ambiguous, for example during a\n  daylight saving time transition.","links":{"`Days`":"0:2589:2135"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["days",{"resolved_path":{"name":"Days","id":"0:2589:2135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12429:3483":{"id":"2:12429:3483","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:12067:450"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:43496:8552","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2553:3365":{"id":"0:2553:3365","crate_id":0,"name":"ParseErrorKind","span":{"filename":"src/format/mod.rs","begin":[387,0],"end":[419,1]},"visibility":"public","docs":"The category of parse error","links":{},"attrs":["#[allow(clippy :: manual_non_exhaustive)]"],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":true,"variants":["0:2554:2158","0:2556:3371","0:2558:3376","0:2560:3378","0:2562:3380","0:2564:3382","0:2566:3384"],"impls":["a:2:2793:252-0:2553:3365","a:2:2776:242-0:2553:3365","a:2:8606:8818-0:2553:3365","a:2:2833:8772-0:2553:3365","a:2:8607:8817-0:2553:3365","b:2:2571-0:2553:3365","b:2:2577-0:2553:3365","b:2:2582-0:2553:3365","b:2:2261-0:2553:3365","b:2:3412-0:2553:3365","b:2:2264-0:2553:3365","b:2:2567-0:2553:3365","b:5:682-0:2553:3365","0:2578","0:2580","0:2570","0:2577","0:2574","0:2581","0:2575","0:2572"]}}},"0:2664":{"id":"0:2664","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[2053,58],"end":[2053,60]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2330:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateWeeksIterator","id":"0:2648:4960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2152:781":{"id":"0:2152:781","crate_id":0,"name":"hash","span":{"filename":"src/datetime/mod.rs","begin":[51,44],"end":[51,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9755:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2546":{"id":"0:2546","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[374,34],"end":[374,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2787:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:2536:2132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1891:921":{"id":"0:1891:921","crate_id":0,"name":"map","span":{"filename":"src/offset/mod.rs","begin":[83,4],"end":[89,5]},"visibility":"public","docs":"Maps a `LocalResult<T>` into `LocalResult<U>` with given function.","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["f",{"generic":"F"}]],"output":{"resolved_path":{"name":"LocalResult","id":"0:3073:2138","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3041:2653","args":{"parenthesized":{"inputs":[{"generic":"T"}],"output":{"generic":"U"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2582-0:3256:2158":{"id":"b:2:2582-0:3256:2158","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRange","id":"0:3256:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2585:133","2:2586:1588"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2776:242-0:3160:2143":{"id":"a:2:2776:242-0:3160:2143","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2776:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseWeekdayError","id":"0:3160:2143","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2567-0:2628:4959":{"id":"b:2:2567-0:2628:4959","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateDaysIterator","id":"0:2628:4959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2570:3122"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2341:3258":{"id":"0:2341:3258","crate_id":0,"name":"LongWeekdayName","span":{"filename":"src/format/mod.rs","begin":[193,4],"end":[193,19]},"visibility":"default","docs":"Full day of the week names.\n\nPrints a full name in the title case, reads either a short or full name in any case.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:2140":{"id":"0:2140","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[51,9],"end":[51,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(clippy :: manual_non_exhaustive)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SecondsFormat","id":"0:2127:2112","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2141:454"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2142":{"id":"0:2142","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[51,16],"end":[51,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(clippy :: manual_non_exhaustive)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2788:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SecondsFormat","id":"0:2127:2112","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2793:252-0:2209:2527":{"id":"a:2:2793:252-0:2209:2527","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2793:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StrftimeItems","id":"0:2209:2527","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1256":{"id":"0:1256","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1689,0],"end":[1698,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:2850:2288","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"2:44300:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1257:203","0:1258:1525"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:184:729":{"id":"0:184:729","crate_id":0,"name":"format","span":{"filename":"src/date.rs","begin":[355,4],"end":[357,5]},"visibility":"public","docs":"Formats the date with the specified format string.\nSee the [`crate::format::strftime`] module\non the supported escape sequences.","links":{"`crate::format::strftime`":"0:835:3169"},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\"))]","#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["fmt",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"DelayedFormat","id":"0:2161:2526","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"StrftimeItems","id":"0:2209:2527","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1963:7915":{"id":"0:1963:7915","crate_id":0,"name":"duration_round","span":{"filename":"src/round.rs","begin":[125,4],"end":[125,75]},"visibility":"default","docs":"Return a copy rounded by Duration.\n\n# Example\n``` rust\n# use chrono::{DurationRound, Duration, Utc, NaiveDate};\nlet dt = NaiveDate::from_ymd_opt(2018, 1, 11).unwrap().and_hms_milli_opt(12, 0, 0, 154).unwrap().and_local_timezone(Utc).unwrap();\nassert_eq!(\n    dt.duration_round(Duration::milliseconds(10)).unwrap().to_string(),\n    \"2018-01-11 12:00:00.150 UTC\"\n);\nassert_eq!(\n    dt.duration_round(Duration::days(1)).unwrap().to_string(),\n    \"2018-01-12 00:00:00 UTC\"\n);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["duration",{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41709:231","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:1961:2140","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"2:12469:32740":{"id":"2:12469:32740","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:12067:450","self::pattern":"2:12106:8527","str::rsplitn":"2:12472:32742"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:43630:8561","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12111:8541","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2118":{"id":"0:2118","crate_id":0,"name":null,"span":{"filename":"src/duration.rs","begin":[443,40],"end":[443,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2330:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRangeError","id":"0:2106:2104","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2550":{"id":"0:2550","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[374,44],"end":[374,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9747:148","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:2536:2132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2551:781"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:922":{"id":"0:922","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[520,0],"end":[544,1]},"visibility":"default","docs":"Parsing a `str` into a `Month` uses the format [`%B`](./format/strftime/index.html).\n\n# Example\n\n```\nuse chrono::Month;\n\nassert_eq!(\"January\".parse::<Month>(), Ok(Month::January));\nassert!(\"any day\".parse::<Month>().is_err());\n```\n\nThe parsing is case-insensitive.\n\n```\n# use chrono::Month;\nassert_eq!(\"fEbruARy\".parse::<Month>(), Ok(Month::February));\n```\n\nOnly the shortest form (e.g. `jan`) and the longest form (e.g. `january`) is accepted.\n\n```\n# use chrono::Month;\nassert!(\"septem\".parse::<Month>().is_err());\nassert!(\"Augustin\".parse::<Month>().is_err());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:12066:3084","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::Month","id":"0:3170:2114","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:923:132","0:924:3085"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2616":{"id":"0:2616","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[193,20],"end":[193,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2330:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2089:454":{"id":"0:2089:454","crate_id":0,"name":"clone","span":{"filename":"src/duration.rs","begin":[53,9],"end":[53,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1414:6036":{"id":"0:1414:6036","crate_id":0,"name":"overflowing_sub_signed","span":{"filename":"src/naive/time/mod.rs","begin":[661,4],"end":[664,5]},"visibility":"public","docs":"Subtracts given `Duration` from the current time, and also returns the number of *seconds*\nin the integral number of days ignored from the subtraction.\n\n# Example\n\n```\nuse chrono::{Duration, NaiveTime};\n\nlet from_hms = |h, m, s| { NaiveTime::from_hms_opt(h, m, s).unwrap() };\n\nassert_eq!(from_hms(3, 4, 5).overflowing_sub_signed(Duration::hours(2)),\n           (from_hms(1, 4, 5), 0));\nassert_eq!(from_hms(3, 4, 5).overflowing_sub_signed(Duration::hours(17)),\n           (from_hms(10, 4, 5), 86_400));\nassert_eq!(from_hms(3, 4, 5).overflowing_sub_signed(Duration::hours(-22)),\n           (from_hms(1, 4, 5), -86_400));\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"resolved_path":{"name":"OldDuration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"tuple":[{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},{"primitive":"i64"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:233:203":{"id":"0:233:203","crate_id":0,"name":"Output","span":{"filename":"src/date.rs","begin":[503,4],"end":[503,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}}},"b:2:2261-0:3073:2138":{"id":"b:2:2261-0:3073:2138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2255:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LocalResult","id":"0:3073:2138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2263:2522"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:682-0:3052:2107":{"id":"b:5:682-0:3052:2107","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Local","id":"0:3052:2107","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:684:9349","5:685:9350","5:686:9351"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2194":{"id":"0:2194","crate_id":0,"name":null,"span":{"filename":"src/format/parsed.rs","begin":[21,16],"end":[21,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(clippy :: manual_non_exhaustive)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2786:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parsed","id":"0:2170:2717","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2331":{"id":"0:2331","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[161,26],"end":[161,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2786:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalNumeric","id":"0:2321:3242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1206:2671":{"id":"0:1206:2671","crate_id":0,"name":"month0","span":{"filename":"src/naive/datetime/mod.rs","begin":[1050,4],"end":[1052,5]},"visibility":"default","docs":"Returns the month number starting from 0.\n\nThe return value ranges from 0 to 11.\n\nSee also the [`NaiveDate::month0`](./struct.NaiveDate.html#method.month0) method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Datelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2015, 9, 25).unwrap().and_hms_opt(12, 34, 56).unwrap();\nassert_eq!(dt.month0(), 8);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1023:2620":{"id":"0:1023:2620","crate_id":0,"name":"pred_opt","span":{"filename":"src/naive/date.rs","begin":[1126,4],"end":[1131,5]},"visibility":"public","docs":"Makes a new `NaiveDate` for the previous calendar date.\n\n# Errors\n\nReturns `None` when `self` is the first representable date.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nassert_eq!(NaiveDate::from_ymd_opt(2015, 6, 3).unwrap().pred_opt(),\n           Some(NaiveDate::from_ymd_opt(2015, 6, 2).unwrap()));\nassert_eq!(NaiveDate::MIN.pred_opt(), None);\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:470:1525":{"id":"0:470:1525","crate_id":0,"name":"sub","span":{"filename":"src/datetime/mod.rs","begin":[1262,4],"end":[1264,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"OldDuration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2833:8772-0:2209:2527":{"id":"a:2:2833:8772-0:2209:2527","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2833:8772","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StrftimeItems","id":"0:2209:2527","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:3084":{"id":"0:3084","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[41,9],"end":[41,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LocalResult","id":"0:3073:2138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:3086:454"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2567-0:3225:2145":{"id":"b:2:2567-0:3225:2145","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Months","id":"0:3225:2145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2570:3122"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2375:1725":{"id":"0:2375:1725","crate_id":0,"name":"0","span":{"filename":"src/format/mod.rs","begin":[256,13],"end":[256,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"InternalFixed","id":"0:2389:3299","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:97-0:3170:2114":{"id":"0:97-0:3170:2114","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[502,30],"end":[502,35]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"inner":{"import":{"source":"crate::Month","name":"Month","id":"0:3170:2114","glob":false}}},"0:374:2969":{"id":"0:374:2969","crate_id":0,"name":"parse_from_rfc2822","span":{"filename":"src/datetime/mod.rs","begin":[764,4],"end":[769,5]},"visibility":"public","docs":"Parses an RFC 2822 date-and-time string into a `DateTime<FixedOffset>` value.\n\nThis parses valid RFC 2822 datetime strings (such as `Tue, 1 Jul 2003 10:52:37 +0200`)\nand returns a new [`DateTime`] instance with the parsed timezone as the [`FixedOffset`].\n\nRFC 2822 is the internet message standard that specifies the representation of times in HTTP\nand email headers. It is the 2001 revision of RFC 822, and is itself revised as RFC 5322 in\n2008.\n\n# Support for the obsolete date format\n\n- A 2-digit year is interpreted to be a year in 1950-2049.\n- The standard allows comments and whitespace between many of the tokens. See [4.3] and\n  [Appendix A.5]\n- Single letter 'military' time zone names are parsed as a `-0000` offset.\n  They were defined with the wrong sign in RFC 822 and corrected in RFC 2822. But because\n  the meaning is now ambiguous, the standard says they should be be considered as `-0000`\n  unless there is out-of-band information confirming their meaning.\n  The exception is `Z`, which remains identical to `+0000`.\n\n[4.3]: https://www.rfc-editor.org/rfc/rfc2822#section-4.3\n[Appendix A.5]: https://www.rfc-editor.org/rfc/rfc2822#appendix-A.5\n\n# Example\n\n```\n# use chrono::{DateTime, FixedOffset, TimeZone};\nassert_eq!(\n    DateTime::parse_from_rfc2822(\"Wed, 18 Feb 2015 23:16:09 GMT\").unwrap(),\n    FixedOffset::east_opt(0).unwrap().with_ymd_and_hms(2015, 2, 18, 23, 16, 9).unwrap()\n);\n```","links":{"`DateTime`":"0:2154:2111","`FixedOffset`":"0:2761:2117"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:906:2133","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8606:8818-0:2742:2121":{"id":"a:2:8606:8818-0:2742:2121","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8606:8818","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2261-0:2106:2104":{"id":"b:2:2261-0:2106:2104","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2255:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRangeError","id":"0:2106:2104","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2263:2522"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1889:6979":{"id":"0:1889:6979","crate_id":0,"name":"earliest","span":{"filename":"src/offset/mod.rs","begin":[65,4],"end":[70,5]},"visibility":"public","docs":"Returns `Some` for the earliest possible conversion result, or `None` if none.","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1001:2857":{"id":"0:1001:2857","crate_id":0,"name":"checked_sub_months","span":{"filename":"src/naive/date.rs","begin":[667,4],"end":[677,5]},"visibility":"public","docs":"Subtract a duration in [`Months`] from the date\n\nUses the last day of the month if the day does not exist in the resulting month.\n\n# Errors\n\nReturns `None` if the resulting date would be out of range.\n\n# Example\n\n```\n# use chrono::{NaiveDate, Months};\nassert_eq!(\n    NaiveDate::from_ymd_opt(2022, 2, 20).unwrap().checked_sub_months(Months::new(6)),\n    Some(NaiveDate::from_ymd_opt(2021, 8, 20).unwrap())\n);\n\nassert_eq!(\n    NaiveDate::from_ymd_opt(2014, 1, 1).unwrap()\n        .checked_sub_months(Months::new(core::i32::MAX as u32 + 1)),\n    None\n);\n```","links":{"`Months`":"0:3225:2145"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["months",{"resolved_path":{"name":"Months","id":"0:3225:2145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2733:1100":{"id":"0:2733:1100","crate_id":0,"name":"partial_cmp","span":{"filename":"src/naive/isoweek.rs","begin":[19,24],"end":[19,34]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"IsoWeek","id":"0:2724:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::option::Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:30807:200","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:755:2714":{"id":"0:755:2714","crate_id":0,"name":"parse_and_remainder","span":{"filename":"src/format/parse.rs","begin":[265,0],"end":[279,1]},"visibility":"public","docs":"Tries to parse given string into `parsed` with given formatting items.\nReturns `Ok` with a slice of the unparsed remainder.\n\nThis particular date and time parser is:\n\n- Greedy. It will consume the longest possible prefix.\n  For example, `April` is always consumed entirely when the long month name is requested;\n  it equally accepts `Apr`, but prefers the longer prefix in this case.\n\n- Padding-agnostic (for numeric items).\n  The [`Pad`](./enum.Pad.html) field is completely ignored,\n  so one can prepend any number of zeroes before numbers.\n\n- (Still) obeying the intrinsic parsing width. This allows, for example, parsing `HHMMSS`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["parsed",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"super::Parsed","id":"0:2170:2717","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["s",{"borrowed_ref":{"lifetime":"'b","mutable":false,"type":{"primitive":"str"}}}],["items",{"generic":"I"}]],"output":{"resolved_path":{"name":"super::ParseResult","id":"0:906:2133","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'b","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7627:173","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"B"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2255:100","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"super::Item","id":"0:2493:168","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1441":{"id":"0:1441","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[1135,0],"end":[1144,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Add","id":"2:2845:2284","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"2:44300:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1442:203","0:1443:301"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2454:3337":{"id":"0:2454:3337","crate_id":0,"name":"OptionalSeconds","span":{"filename":"src/format/mod.rs","begin":[313,4],"end":[313,19]},"visibility":"default","docs":"Format offset from UTC as hours and minutes, and optionally seconds.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:2624:461":{"id":"0:2624:461","crate_id":0,"name":"cmp","span":{"filename":"src/naive/date.rs","begin":[193,42],"end":[193,45]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:30807:200","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1234:3049":{"id":"0:1234:3049","crate_id":0,"name":"with_minute","span":{"filename":"src/naive/datetime/mod.rs","begin":[1441,4],"end":[1443,5]},"visibility":"default","docs":"Makes a new `NaiveDateTime` with the minute number changed.\n\nSee also the [`NaiveTime::with_minute`] method.\n\n# Errors\n\nReturns `None` if the value for `minute` is invalid.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Timelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().and_hms_milli_opt(12, 34, 56, 789).unwrap();\nassert_eq!(dt.with_minute(45),\n           Some(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().and_hms_milli_opt(12, 45, 56, 789).unwrap()));\nassert_eq!(dt.with_minute(60), None);\n```","links":{"`NaiveTime::with_minute`":"0:1432:3049"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["min",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8606:8818-0:3170:2114":{"id":"a:2:8606:8818-0:3170:2114","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8606:8818","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Month","id":"0:3170:2114","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2511:2716":{"id":"0:2511:2716","crate_id":0,"name":"Fixed","span":{"filename":"src/format/mod.rs","begin":[348,4],"end":[348,16]},"visibility":"default","docs":"Fixed-format item.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:2513:1725"]},"discriminant":null}}},"b:2:2577-0:2584:2137":{"id":"b:2:2577-0:2584:2137","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2547:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveWeek","id":"0:2584:2137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2580:133","2:2581:1590"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:137:2126":{"id":"0:137:2126","crate_id":0,"name":"MIN_DATE","span":{"filename":"src/date.rs","begin":[68,0],"end":[68,53]},"visibility":"public","docs":"The minimum possible `Date`.","links":{},"attrs":["#[allow(deprecated)]","#[deprecated(since = \"0.4.20\", note = \"Use Date::MIN_UTC instead\")]"],"deprecation":{"since":"0.4.20","note":"Use Date::MIN_UTC instead"},"inner":{"constant":{"type":{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::offset::Utc","id":"0:3059:2118","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"expr":"Date<Utc>::MIN_UTC","value":null,"is_literal":false}}},"b:2:2577-0:2127:2112":{"id":"b:2:2577-0:2127:2112","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2547:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SecondsFormat","id":"0:2127:2112","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2580:133","2:2581:1590"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:507":{"id":"0:507","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1370,0],"end":[1376,1]},"visibility":"default","docs":"Accepts a relaxed form of RFC3339.\nA space or a 'T' are accepted as the separator between the date and time\nparts.\n\nAll of these examples are equivalent:\n```\n# use chrono::{DateTime, Utc};\n\"2012-12-12T12:12:12Z\".parse::<DateTime<Utc>>()?;\n\"2012-12-12 12:12:12Z\".parse::<DateTime<Utc>>()?;\n\"2012-12-12 12:12:12+0000\".parse::<DateTime<Utc>>()?;\n\"2012-12-12 12:12:12+00:00\".parse::<DateTime<Utc>>()?;\n# Ok::<(), chrono::ParseError>(())\n```","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:12066:3084","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::offset::Utc","id":"0:3059:2118","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:508:132","0:509:3085"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2334:2716":{"id":"0:2334:2716","crate_id":0,"name":"Fixed","span":{"filename":"src/format/mod.rs","begin":[177,0],"end":[257,1]},"visibility":"public","docs":"Fixed-format item types.\n\nThey have their own rules of formatting and parsing.\nOtherwise noted, they print in the specified cases but parse case-insensitively.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:2335:3251","0:2337:3254","0:2339:3256","0:2341:3258","0:2343:3261","0:2345:3263","0:2347:3234","0:2349:3268","0:2351:3270","0:2353:3272","0:2355:3275","0:2357:3280","0:2359:3283","0:2361:3286","0:2363:3290","0:2365:3293","0:2367:3295","0:2369:2971","0:2371:3298","0:2373:3241"],"impls":["a:2:2793:252-0:2334:2716","a:2:2776:242-0:2334:2716","a:2:8606:8818-0:2334:2716","a:2:2833:8772-0:2334:2716","a:2:8607:8817-0:2334:2716","b:2:2571-0:2334:2716","b:2:2577-0:2334:2716","b:2:2582-0:2334:2716","b:2:2261-0:2334:2716","b:2:3412-0:2334:2716","b:2:2264-0:2334:2716","b:2:2567-0:2334:2716","b:5:682-0:2334:2716","0:2384","0:2378","0:2386","0:2382","0:2376","0:2381","0:2379"]}}},"a:2:2833:8772-0:3059:2118":{"id":"a:2:2833:8772-0:3059:2118","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2833:8772","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Utc","id":"0:3059:2118","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8606:8818-0:2209:2527":{"id":"a:2:8606:8818-0:2209:2527","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8606:8818","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StrftimeItems","id":"0:2209:2527","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2003:8065":{"id":"0:2003:8065","crate_id":0,"name":"from_i64","span":{"filename":"src/weekday.rs","begin":[195,4],"end":[206,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["n",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Weekday","id":"0:3124:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3253":{"id":"0:3253","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[233,27],"end":[233,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2787:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseMonthError","id":"0:3246:2146","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1937-0:3073:2138":{"id":"0:1937-0:3073:2138","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[539,30],"end":[539,41]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"inner":{"import":{"source":"offset::LocalResult","name":"LocalResult","id":"0:3073:2138","glob":false}}},"0:1055:2678":{"id":"0:1055:2678","crate_id":0,"name":"with_month","span":{"filename":"src/naive/date.rs","begin":[1703,4],"end":[1705,5]},"visibility":"default","docs":"Makes a new `NaiveDate` with the month number (starting from 1) changed.\n\n# Errors\n\nReturns `None` if the resulting date does not exist, or if the value for `month` is invalid.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().with_month(10),\n           Some(NaiveDate::from_ymd_opt(2015, 10, 8).unwrap()));\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().with_month(13), None); // no month 13\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 30).unwrap().with_month(2), None); // no February 30\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["month",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2793:252-0:2106:2104":{"id":"a:2:2793:252-0:2106:2104","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2793:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRangeError","id":"0:2106:2104","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:201:2679":{"id":"0:201:2679","crate_id":0,"name":"with_month0","span":{"filename":"src/date.rs","begin":[447,4],"end":[449,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["month0",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2049:2673":{"id":"0:2049:2673","crate_id":0,"name":"day0","span":{"filename":"src/traits.rs","begin":[65,4],"end":[65,26]},"visibility":"default","docs":"Returns the day of month starting from 0.\n\nThe return value ranges from 0 to 30. (The last day of month differs by months.)","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:2052:2142":{"id":"0:2052:2142","crate_id":0,"name":"weekday","span":{"filename":"src/traits.rs","begin":[78,4],"end":[78,33]},"visibility":"default","docs":"Returns the day of week.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Weekday","id":"0:3124:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"a:2:2776:242-0:2648:4960":{"id":"a:2:2776:242-0:2648:4960","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2776:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateWeeksIterator","id":"0:2648:4960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:456:301":{"id":"0:456:301","crate_id":0,"name":"add","span":{"filename":"src/datetime/mod.rs","begin":[1224,4],"end":[1228,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"Duration","id":"2:44300:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2179:3459":{"id":"0:2179:3459","crate_id":0,"name":"week_from_mon","span":{"filename":"src/format/parsed.rs","begin":[66,4],"end":[66,34]},"visibility":"public","docs":"Week number, where the week 1 starts at the first Monday of January\n(0--53, 1--53 or 1--52 depending on the year).","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"bindings":[]}}}}}},"a:2:2833:8772-0:3225:2145":{"id":"a:2:2833:8772-0:3225:2145","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2833:8772","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Months","id":"0:3225:2145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1449":{"id":"0:1449","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[1210,0],"end":[1215,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"SubAssign","id":"2:2880:2524","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1450:1526"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1433:3055":{"id":"0:1433:3055","crate_id":0,"name":"with_second","span":{"filename":"src/naive/time/mod.rs","begin":[1002,4],"end":[1008,5]},"visibility":"default","docs":"Makes a new `NaiveTime` with the second number changed.\n\nAs with the [`second`](#method.second) method,\nthe input range is restricted to 0 through 59.\n\n# Errors\n\nReturns `None` if the value for `second` is invalid.\n\n# Example\n\n```\nuse chrono::{NaiveTime, Timelike};\n\nlet dt = NaiveTime::from_hms_nano_opt(23, 56, 4, 12_345_678).unwrap();\nassert_eq!(dt.with_second(17), Some(NaiveTime::from_hms_nano_opt(23, 56, 17, 12_345_678).unwrap()));\nassert_eq!(dt.with_second(60), None);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["sec",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2395":{"id":"0:2395","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[260,23],"end":[260,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2786:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalFixed","id":"0:2389:3299","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2022:133":{"id":"0:2022:133","crate_id":0,"name":"Error","span":{"filename":"src/month.rs","begin":[162,4],"end":[162,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"OutOfRange","id":"0:3256:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:1000:2852":{"id":"0:1000:2852","crate_id":0,"name":"checked_add_months","span":{"filename":"src/naive/date.rs","begin":[632,4],"end":[641,5]},"visibility":"public","docs":"Add a duration in [`Months`] to the date\n\nUses the last day of the month if the day does not exist in the resulting month.\n\n# Errors\n\nReturns `None` if the resulting date would be out of range.\n\n# Example\n\n```\n# use chrono::{NaiveDate, Months};\nassert_eq!(\n    NaiveDate::from_ymd_opt(2022, 2, 20).unwrap().checked_add_months(Months::new(6)),\n    Some(NaiveDate::from_ymd_opt(2022, 8, 20).unwrap())\n);\nassert_eq!(\n    NaiveDate::from_ymd_opt(2022, 7, 31).unwrap().checked_add_months(Months::new(2)),\n    Some(NaiveDate::from_ymd_opt(2022, 9, 30).unwrap())\n);\n```","links":{"`Months`":"0:3225:2145"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["months",{"resolved_path":{"name":"Months","id":"0:3225:2145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2566:3384":{"id":"0:2566:3384","crate_id":0,"name":"BadFormat","span":{"filename":"src/format/mod.rs","begin":[414,4],"end":[414,13]},"visibility":"default","docs":"There was an error on the formatting string, or there were non-supported formating items.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:2058:2681":{"id":"0:2058:2681","crate_id":0,"name":"with_day0","span":{"filename":"src/traits.rs","begin":[206,4],"end":[206,51]},"visibility":"default","docs":"Makes a new value with the day of month (starting from 0) changed.\n\n# Errors\n\nReturns `None` when:\n\n- The resulting date does not exist (for example `day0(30)` in April).\n- In case of [`DateTime<Tz>`] if the resulting date and time fall within a timezone\n  transition such as from DST to standard time.\n- The value for `day0` is out of range.\n\n[`DateTime<Tz>`]: crate::DateTime","links":{"crate::DateTime":"0:2154:2111"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["day0",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"b:2:2264-0:2536:2132":{"id":"b:2:2264-0:2536:2132","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2258:101","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:2536:2132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2266:7207"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2582-0:3225:2145":{"id":"b:2:2582-0:3225:2145","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Months","id":"0:3225:2145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2585:133","2:2586:1588"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2567-0:3052:2107":{"id":"b:2:2567-0:3052:2107","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Local","id":"0:3052:2107","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2570:3122"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2324:454":{"id":"0:2324:454","crate_id":0,"name":"clone","span":{"filename":"src/format/mod.rs","begin":[161,9],"end":[161,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"InternalNumeric","id":"0:2321:3242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1048:2672":{"id":"0:1048:2672","crate_id":0,"name":"day","span":{"filename":"src/naive/date.rs","begin":[1552,4],"end":[1554,5]},"visibility":"default","docs":"Returns the day of month starting from 1.\n\nThe return value ranges from 1 to 31. (The last day of month differs by months.)\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().day(), 8);\nassert_eq!(NaiveDate::from_ymd_opt(-308, 3, 14).unwrap().day(), 14);\n```\n\nCombined with [`NaiveDate::pred`](#method.pred),\none can determine the number of days in a particular month.\n(Note that this panics when `year` is out of range.)\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nfn ndays_in_month(year: i32, month: u32) -> u32 {\n    // the first day of the next month...\n    let (y, m) = if month == 12 { (year + 1, 1) } else { (year, month + 1) };\n    let d = NaiveDate::from_ymd_opt(y, m, 1).unwrap();\n\n    // ...is preceded by the last day of the original month\n    d.pred_opt().unwrap().day()\n}\n\nassert_eq!(ndays_in_month(2015, 8), 31);\nassert_eq!(ndays_in_month(2015, 9), 30);\nassert_eq!(ndays_in_month(2015, 12), 31);\nassert_eq!(ndays_in_month(2016, 2), 29);\nassert_eq!(ndays_in_month(2017, 2), 28);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2514:133":{"id":"0:2514:133","crate_id":0,"name":"Error","span":{"filename":"src/format/mod.rs","begin":[350,4],"end":[350,9]},"visibility":"default","docs":"Issues a formatting error. Used to signal an invalid format string.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:2134:2735":{"id":"0:2134:2735","crate_id":0,"name":"Nanos","span":{"filename":"src/datetime/mod.rs","begin":[67,4],"end":[67,9]},"visibility":"default","docs":"Use fixed 9 subsecond digits. This corresponds to\n[Fixed::Nanosecond9](format/enum.Fixed.html#variant.Nanosecond9).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:193:2674":{"id":"0:193:2674","crate_id":0,"name":"ordinal","span":{"filename":"src/date.rs","begin":[420,4],"end":[422,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2793:252-0:2170:2717":{"id":"a:2:2793:252-0:2170:2717","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2793:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parsed","id":"0:2170:2717","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1274:1525":{"id":"0:1274:1525","crate_id":0,"name":"sub","span":{"filename":"src/naive/datetime/mod.rs","begin":[1805,4],"end":[1807,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["days",{"resolved_path":{"name":"Days","id":"0:2589:2135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:2850:2288","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1427:2575":{"id":"0:1427:2575","crate_id":0,"name":"hour","span":{"filename":"src/naive/time/mod.rs","begin":[860,4],"end":[862,5]},"visibility":"default","docs":"Returns the hour number from 0 to 23.\n\n# Example\n\n```\nuse chrono::{NaiveTime, Timelike};\n\nassert_eq!(NaiveTime::from_hms_opt(0, 0, 0).unwrap().hour(), 0);\nassert_eq!(NaiveTime::from_hms_nano_opt(23, 56, 4, 12_345_678).unwrap().hour(), 23);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8606:8818-0:2334:2716":{"id":"a:2:8606:8818-0:2334:2716","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8606:8818","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Fixed","id":"0:2334:2716","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2776:242-0:2628:4959":{"id":"a:2:2776:242-0:2628:4959","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2776:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateDaysIterator","id":"0:2628:4959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:3083:1726":{"id":"0:3083:1726","crate_id":0,"name":"1","span":{"filename":"src/offset/mod.rs","begin":[50,25],"end":[50,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"generic":"T"}}},"0:2050:2674":{"id":"0:2050:2674","crate_id":0,"name":"ordinal","span":{"filename":"src/traits.rs","begin":[70,4],"end":[70,29]},"visibility":"default","docs":"Returns the day of year starting from 1.\n\nThe return value ranges from 1 to 366. (The last day of year differs by years.)","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"b:2:2567-0:2589:2135":{"id":"b:2:2567-0:2589:2135","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Days","id":"0:2589:2135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2570:3122"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1491-0:2610:2119":{"id":"0:1491-0:2610:2119","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[531,31],"end":[531,40]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"inner":{"import":{"source":"naive::NaiveDate","name":"NaiveDate","id":"0:2610:2119","glob":false}}},"0:1983-0:1961:2140":{"id":"0:1983-0:1961:2140","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[542,16],"end":[542,29]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"round::DurationRound","name":"DurationRound","id":"0:1961:2140","glob":false}}},"0:336:2859":{"id":"0:336:2859","crate_id":0,"name":"checked_add_days","span":{"filename":"src/datetime/mod.rs","begin":[445,4],"end":[450,5]},"visibility":"public","docs":"Add a duration in [`Days`] to the date part of the `DateTime`.\n\n# Errors\n\nReturns `None` if:\n- The resulting date would be out of range.\n- The local time at the resulting date does not exist or is ambiguous, for example during a\n  daylight saving time transition.","links":{"`Days`":"0:2589:2135"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["days",{"resolved_path":{"name":"Days","id":"0:2589:2135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8607:8817-0:3256:2158":{"id":"a:2:8607:8817-0:3256:2158","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8607:8817","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRange","id":"0:3256:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:3261":{"id":"0:3261","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[573,22],"end":[573,26]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9747:148","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRange","id":"0:3256:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3262:781"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2776:242-0:3124:2116":{"id":"a:2:2776:242-0:3124:2116","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2776:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Weekday","id":"0:3124:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:353":{"id":"0:353","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[639,0],"end":[643,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"clock\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2618:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::offset::Local","id":"0:3052:2107","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:354:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:682-0:2243:3177":{"id":"b:5:682-0:2243:3177","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Pad","id":"0:2243:3177","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:684:9349","5:685:9350","5:686:9351"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1085:203":{"id":"0:1085:203","crate_id":0,"name":"Output","span":{"filename":"src/naive/date.rs","begin":[2002,4],"end":[2002,30]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:1465:132":{"id":"0:1465:132","crate_id":0,"name":"Err","span":{"filename":"src/naive/time/mod.rs","begin":[1405,4],"end":[1405,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"ParseError","id":"0:2536:2132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:1486-0:2724:2136":{"id":"0:1486-0:2724:2136","crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[21,0],"end":[21,31]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::isoweek::IsoWeek","name":"IsoWeek","id":"0:2724:2136","glob":false}}},"0:2063:2575":{"id":"0:2063:2575","crate_id":0,"name":"hour","span":{"filename":"src/traits.rs","begin":[269,4],"end":[269,26]},"visibility":"default","docs":"Returns the hour number from 0 to 23.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:1879":{"id":"0:1879","crate_id":0,"name":null,"span":{"filename":"src/offset/utc.rs","begin":[133,0],"end":[137,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Offset","id":"0:1904:2122","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Utc","id":"0:3059:2118","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1880:2774"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1095:5552":{"id":"0:1095:5552","crate_id":0,"name":"next_back","span":{"filename":"src/naive/date.rs","begin":[2042,4],"end":[2047,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:7627:173","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2534:781":{"id":"0:2534:781","crate_id":0,"name":"hash","span":{"filename":"src/format/mod.rs","begin":[330,38],"end":[330,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9755:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2582-0:2648:4960":{"id":"b:2:2582-0:2648:4960","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateWeeksIterator","id":"0:2648:4960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2585:133","2:2586:1588"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2655":{"id":"0:2655","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[2053,29],"end":[2053,33]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9747:148","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateWeeksIterator","id":"0:2648:4960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2656:781"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2724:2136":{"id":"0:2724:2136","crate_id":0,"name":"IsoWeek","span":{"filename":"src/naive/isoweek.rs","begin":[21,0],"end":[26,1]},"visibility":"public","docs":"ISO 8601 week.\n\nThis type, combined with [`Weekday`](../enum.Weekday.html),\nconstitutes the ISO 8601 [week date](./struct.NaiveDate.html#week-date).\nOne can retrieve this type from the existing [`Datelike`](../trait.Datelike.html) types\nvia the [`Datelike::iso_week`](../trait.Datelike.html#tymethod.iso_week) method.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:1363","a:2:2793:252-0:2724:2136","a:2:2776:242-0:2724:2136","a:2:8606:8818-0:2724:2136","a:2:2833:8772-0:2724:2136","a:2:8607:8817-0:2724:2136","b:2:2571-0:2724:2136","b:2:2577-0:2724:2136","b:2:2582-0:2724:2136","b:2:2261-0:2724:2136","b:2:3412-0:2724:2136","b:2:2264-0:2724:2136","b:2:2567-0:2724:2136","b:5:682-0:2724:2136","0:2730","0:2737","0:1367","0:2729","0:2734","0:2726","0:2736","0:2732","0:2727","0:2739"]}}},"0:33:2352":{"id":"0:33:2352","crate_id":0,"name":"milliseconds","span":{"filename":"src/duration.rs","begin":[128,4],"end":[132,5]},"visibility":"public","docs":"Makes a new `Duration` with given number of milliseconds.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["milliseconds",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2251":{"id":"0:2251","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[82,15],"end":[82,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Pad","id":"0:2243:3177","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2252:454"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1115:60":{"id":"0:1115:60","crate_id":0,"name":"default","span":{"filename":"src/naive/date.rs","begin":[2204,4],"end":[2206,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1108":{"id":"0:1108","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[2150,0],"end":[2154,1]},"visibility":"default","docs":"The `Display` output of the naive date `d` is the same as\n[`d.format(\"%Y-%m-%d\")`](../format/strftime/index.html).\n\nThe string printed can be readily parsed via the `parse` method on `str`.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nassert_eq!(format!(\"{}\", NaiveDate::from_ymd_opt(2015,  9,  5).unwrap()), \"2015-09-05\");\nassert_eq!(format!(\"{}\", NaiveDate::from_ymd_opt(   0,  1,  1).unwrap()), \"0000-01-01\");\nassert_eq!(format!(\"{}\", NaiveDate::from_ymd_opt(9999, 12, 31).unwrap()), \"9999-12-31\");\n```\n\nISO 8601 requires an explicit sign for years before 1 BCE or after 9999 CE.\n\n```\n# use chrono::NaiveDate;\nassert_eq!(format!(\"{}\", NaiveDate::from_ymd_opt(   -1,  1,  1).unwrap()),  \"-0001-01-01\");\nassert_eq!(format!(\"{}\", NaiveDate::from_ymd_opt(10000, 12, 31).unwrap()), \"+10000-12-31\");\n```","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9536:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1109:718"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2729":{"id":"0:2729","crate_id":0,"name":null,"span":{"filename":"src/naive/isoweek.rs","begin":[19,20],"end":[19,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2787:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IsoWeek","id":"0:2724:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2151":{"id":"0:2151","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[51,44],"end":[51,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(clippy :: manual_non_exhaustive)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9747:148","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SecondsFormat","id":"0:2127:2112","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2152:781"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3195:3430":{"id":"0:3195:3430","crate_id":0,"name":"September","span":{"filename":"src/month.rs","begin":[53,4],"end":[53,17]},"visibility":"default","docs":"September","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":{"expr":"8","value":"8"}}}},"0:3121":{"id":"0:3121","crate_id":0,"name":null,"span":{"filename":"src/round.rs","begin":[238,34],"end":[238,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2330:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RoundingError","id":"0:3106:2141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1103:5552":{"id":"0:1103:5552","crate_id":0,"name":"next_back","span":{"filename":"src/naive/date.rs","begin":[2076,4],"end":[2080,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:7627:173","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1399:6640":{"id":"0:1399:6640","crate_id":0,"name":"from_hms","span":{"filename":"src/naive/time/mod.rs","begin":[240,4],"end":[242,5]},"visibility":"public","docs":"Makes a new `NaiveTime` from hour, minute and second.\n\nNo [leap second](#leap-second-handling) is allowed here;\nuse `NaiveTime::from_hms_*` methods with a subsecond parameter instead.\n\n# Panics\n\nPanics on invalid hour, minute and/or second.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `from_hms_opt()` instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"use `from_hms_opt()` instead"},"inner":{"function":{"decl":{"inputs":[["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2248:3182":{"id":"0:2248:3182","crate_id":0,"name":"Space","span":{"filename":"src/format/mod.rs","begin":[89,4],"end":[89,9]},"visibility":"default","docs":"Space padding.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"a:2:2833:8772-0:2154:2111":{"id":"a:2:2833:8772-0:2154:2111","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Tz"},"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2833:8772","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2833:8772","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1178:2820":{"id":"0:1178:2820","crate_id":0,"name":"timestamp_nanos","span":{"filename":"src/naive/datetime/mod.rs","begin":[467,4],"end":[470,5]},"visibility":"public","docs":"Returns the number of non-leap *nanoseconds* since midnight on January 1, 1970.\n\nNote that this does *not* account for the timezone!\nThe true \"UNIX timestamp\" would count seconds since the midnight *UTC* on the epoch.\n\n# Panics\n\nAn `i64` with nanosecond precision can span a range of ~584 years. This function panics on\nan out of range `NaiveDateTime`.\n\nThe dates that can be represented as nanoseconds are between 1677-09-21T00:12:44.0 and\n2262-04-11T23:47:16.854775804.","links":{},"attrs":["#[deprecated(since = \"0.4.31\", note = \"use `timestamp_nanos_opt()` instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.31","note":"use `timestamp_nanos_opt()` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3117":{"id":"0:3117","crate_id":0,"name":null,"span":{"filename":"src/round.rs","begin":[238,23],"end":[238,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2786:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RoundingError","id":"0:3106:2141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1182:2832":{"id":"0:1182:2832","crate_id":0,"name":"timestamp_subsec_micros","span":{"filename":"src/naive/datetime/mod.rs","begin":[568,4],"end":[570,5]},"visibility":"public","docs":"Returns the number of microseconds since the last whole non-leap second.\n\nThe return value ranges from 0 to 999,999,\nor for [leap seconds](./struct.NaiveTime.html#leap-second-handling), to 1,999,999.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet dt = NaiveDate::from_ymd_opt(2016, 7, 8).unwrap().and_hms_nano_opt(9, 10, 11, 123_456_789).unwrap();\nassert_eq!(dt.timestamp_subsec_micros(), 123_456);\n\nlet dt = NaiveDate::from_ymd_opt(2015, 7, 1).unwrap().and_hms_nano_opt(8, 59, 59, 1_234_567_890).unwrap();\nassert_eq!(dt.timestamp_subsec_micros(), 1_234_567);\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:5792-0:3106:2141":{"id":"b:5:5792-0:3106:2141","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9536:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5790:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RoundingError","id":"0:3106:2141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5794:1565"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:254:718":{"id":"0:254:718","crate_id":0,"name":"fmt","span":{"filename":"src/date.rs","begin":[554,4],"end":[557,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9506:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9487:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2577-0:2610:2119":{"id":"b:2:2577-0:2610:2119","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2547:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2580:133","2:2581:1590"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3412-0:2264:3194":{"id":"b:2:3412-0:2264:3194","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3410:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Numeric","id":"0:2264:3194","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3414:1603"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:3171:3422":{"id":"0:3171:3422","crate_id":0,"name":"January","span":{"filename":"src/month.rs","begin":[37,4],"end":[37,15]},"visibility":"default","docs":"January","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":{"expr":"0","value":"0"}}}},"0:1179:2821":{"id":"0:1179:2821","crate_id":0,"name":"timestamp_nanos_opt","span":{"filename":"src/naive/datetime/mod.rs","begin":[505,4],"end":[526,5]},"visibility":"public","docs":"Returns the number of non-leap *nanoseconds* since midnight on January 1, 1970.\n\nNote that this does *not* account for the timezone!\nThe true \"UNIX timestamp\" would count seconds since the midnight *UTC* on the epoch.\n\n# Errors\n\nAn `i64` with nanosecond precision can span a range of ~584 years. This function returns\n`None` on an out of range `NaiveDateTime`.\n\nThe dates that can be represented as nanoseconds are between 1677-09-21T00:12:44.0 and\n2262-04-11T23:47:16.854775804.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime};\n\nlet dt = NaiveDate::from_ymd_opt(1970, 1, 1).unwrap().and_hms_nano_opt(0, 0, 1, 444).unwrap();\nassert_eq!(dt.timestamp_nanos_opt(), Some(1_000_000_444));\n\nlet dt = NaiveDate::from_ymd_opt(2001, 9, 9).unwrap().and_hms_nano_opt(1, 46, 40, 555).unwrap();\n\nconst A_BILLION: i64 = 1_000_000_000;\nlet nanos = dt.timestamp_nanos_opt().unwrap();\nassert_eq!(nanos, 1_000_000_000_000_000_555);\nassert_eq!(\n    Some(dt),\n    NaiveDateTime::from_timestamp_opt(nanos / A_BILLION, (nanos % A_BILLION) as u32)\n);\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"primitive":"i64"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1969:7920":{"id":"0:1969:7920","crate_id":0,"name":"duration_trunc","span":{"filename":"src/round.rs","begin":[152,4],"end":[154,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["duration",{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41709:231","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:1961:2140","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2057:2680":{"id":"0:2057:2680","crate_id":0,"name":"with_day","span":{"filename":"src/traits.rs","begin":[192,4],"end":[192,49]},"visibility":"default","docs":"Makes a new value with the day of month (starting from 1) changed.\n\n# Errors\n\nReturns `None` when:\n\n- The resulting date does not exist (for example `day(31)` in April).\n- In case of [`DateTime<Tz>`] if the resulting date and time fall within a timezone\n  transition such as from DST to standard time.\n- The value for `day` is out of range.\n\n[`DateTime<Tz>`]: crate::DateTime","links":{"crate::DateTime":"0:2154:2111"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["day",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:2116:660":{"id":"0:2116:660","crate_id":0,"name":"eq","span":{"filename":"src/duration.rs","begin":[443,29],"end":[443,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"OutOfRangeError","id":"0:2106:2104","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2377:454":{"id":"0:2377:454","crate_id":0,"name":"clone","span":{"filename":"src/format/mod.rs","begin":[176,9],"end":[176,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Fixed","id":"0:2334:2716","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3267":{"id":"0:3267","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[573,39],"end":[573,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2787:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRange","id":"0:3256:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:172:2555":{"id":"0:172:2555","crate_id":0,"name":"MIN_UTC","span":{"filename":"src/date.rs","begin":[318,4],"end":[318,78]},"visibility":"public","docs":"The minimum possible `Date`.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Utc","id":"0:3059:2118","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"default":"_"}}},"0:2551:781":{"id":"0:2551:781","crate_id":0,"name":"hash","span":{"filename":"src/format/mod.rs","begin":[374,44],"end":[374,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9755:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1003:2859":{"id":"0:1003:2859","crate_id":0,"name":"checked_add_days","span":{"filename":"src/naive/date.rs","begin":[749,4],"end":[754,5]},"visibility":"public","docs":"Add a duration in [`Days`] to the date\n\n# Errors\n\nReturns `None` if the resulting date would be out of range.\n\n# Example\n\n```\n# use chrono::{NaiveDate, Days};\nassert_eq!(\n    NaiveDate::from_ymd_opt(2022, 2, 20).unwrap().checked_add_days(Days::new(9)),\n    Some(NaiveDate::from_ymd_opt(2022, 3, 1).unwrap())\n);\nassert_eq!(\n    NaiveDate::from_ymd_opt(2022, 7, 31).unwrap().checked_add_days(Days::new(2)),\n    Some(NaiveDate::from_ymd_opt(2022, 8, 2).unwrap())\n);\nassert_eq!(\n    NaiveDate::from_ymd_opt(2022, 7, 31).unwrap().checked_add_days(Days::new(1000000000000)),\n    None\n);\n```","links":{"`Days`":"0:2589:2135"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["days",{"resolved_path":{"name":"Days","id":"0:2589:2135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2625":{"id":"0:2625","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[193,47],"end":[193,51]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2788:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3149":{"id":"0:3149","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[32,20],"end":[32,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2787:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Weekday","id":"0:3124:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2094":{"id":"0:2094","crate_id":0,"name":null,"span":{"filename":"src/duration.rs","begin":[53,33],"end":[53,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2787:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1532":{"id":"0:1532","crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[31,0],"end":[115,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1533:7109","0:1534:2702","0:1535:7121","0:1536:2703","0:1537:3466","0:1538:7127"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1047:2671":{"id":"0:1047:2671","crate_id":0,"name":"month0","span":{"filename":"src/naive/date.rs","begin":[1512,4],"end":[1514,5]},"visibility":"default","docs":"Returns the month number starting from 0.\n\nThe return value ranges from 0 to 11.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().month0(), 8);\nassert_eq!(NaiveDate::from_ymd_opt(-308, 3, 14).unwrap().month0(), 2);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2833:8772-0:2389:3299":{"id":"a:2:2833:8772-0:2389:3299","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2833:8772","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalFixed","id":"0:2389:3299","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12406:2986":{"id":"2:12406:2986","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2567-0:3106:2141":{"id":"b:2:2567-0:3106:2141","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RoundingError","id":"0:3106:2141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2570:3122"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2257":{"id":"0:2257","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[82,33],"end":[82,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2330:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Pad","id":"0:2243:3177","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:162:2568":{"id":"0:162:2568","crate_id":0,"name":"timezone","span":{"filename":"src/date.rs","begin":[250,4],"end":[252,5]},"visibility":"public","docs":"Retrieves an associated time zone.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Tz"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:158:2619":{"id":"0:158:2619","crate_id":0,"name":"pred","span":{"filename":"src/date.rs","begin":[227,4],"end":[229,5]},"visibility":"public","docs":"Makes a new `Date` for the prior date.\n\nPanics when `self` is the first representable date.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"Use pred_opt() instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"Use pred_opt() instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2577-0:2243:3177":{"id":"b:2:2577-0:2243:3177","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2547:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Pad","id":"0:2243:3177","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2580:133","2:2581:1590"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2363:3290":{"id":"0:2363:3290","crate_id":0,"name":"TimezoneOffsetColonZ","span":{"filename":"src/format/mod.rs","begin":[240,4],"end":[240,24]},"visibility":"default","docs":"Offset from the local time to UTC (`+09:00` or `-04:00` or `Z`).\n\nIn the parser, the colon can be omitted and/or surrounded with any amount of whitespace,\nand `Z` can be either in upper case or in lower case.\nThe offset is limited from `-24:00` to `+24:00`,\nwhich is the same as [`FixedOffset`](../offset/struct.FixedOffset.html)'s range.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:2000:133":{"id":"0:2000:133","crate_id":0,"name":"Error","span":{"filename":"src/weekday.rs","begin":[174,4],"end":[174,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"OutOfRange","id":"0:3256:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:2452:3335":{"id":"0:2452:3335","crate_id":0,"name":"OptionalMinutes","span":{"filename":"src/format/mod.rs","begin":[311,4],"end":[311,19]},"visibility":"default","docs":"Format offset from UTC as hours, and optionally with minutes.\nAny seconds will be rounded to the nearest minute.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:674:3784":{"id":"0:674:3784","crate_id":0,"name":"set_isoweek","span":{"filename":"src/format/parsed.rs","begin":[206,4],"end":[208,5]},"visibility":"public","docs":"Tries to set the [`isoweek`](#structfield.isoweek) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:906:2133","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:523-0:2154:2111":{"id":"0:523-0:2154:2111","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[520,19],"end":[520,27]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"import":{"source":"datetime::DateTime","name":"DateTime","id":"0:2154:2111","glob":false}}},"0:2510:1726":{"id":"0:2510:1726","crate_id":0,"name":"1","span":{"filename":"src/format/mod.rs","begin":[346,21],"end":[346,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Pad","id":"0:2243:3177","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:1484-0:1160:2129":{"id":"0:1484-0:1160:2129","crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[20,40],"end":[20,52]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"import":{"source":"self::datetime::MAX_DATETIME","name":"MAX_DATETIME","id":"0:1160:2129","glob":false}}},"5:5520:9116":{"id":"5:5520:9116","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7489:248"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7489:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12111:8541","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2497:1725":{"id":"0:2497:1725","crate_id":0,"name":"0","span":{"filename":"src/format/mod.rs","begin":[333,12],"end":[333,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}},"0:163:2627":{"id":"0:163:2627","crate_id":0,"name":"with_timezone","span":{"filename":"src/date.rs","begin":[258,4],"end":[260,5]},"visibility":"public","docs":"Changes the associated time zone.\nThis does not change the actual `Date` (but will change the string representation).","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["tz",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Tz2"}}}]],"output":{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz2"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Tz2","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2793:252-0:2120:2106":{"id":"a:2:2793:252-0:2120:2106","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Tz"},"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2793:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2793:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:668:3778":{"id":"0:668:3778","crate_id":0,"name":"set_month","span":{"filename":"src/format/parsed.rs","begin":[188,4],"end":[190,5]},"visibility":"public","docs":"Tries to set the [`month`](#structfield.month) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:906:2133","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12519:39473":{"id":"2:12519:39473","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12067:450","self::pattern":"2:12106:8527"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12111:8541","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12111:8541","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12126:8543","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2793:252-0:2493:168":{"id":"a:2:2793:252-0:2493:168","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2793:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Item","id":"0:2493:168","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:364:744":{"id":"0:364:744","crate_id":0,"name":"from","span":{"filename":"src/datetime/mod.rs","begin":[693,4],"end":[695,5]},"visibility":"default","docs":"Convert this `DateTime<FixedOffset>` instance into a `DateTime<Local>` instance.\n\nConversion is performed via [`DateTime::with_timezone`]. Returns the equivalent value in local\ntime.","links":{"`DateTime::with_timezone`":"0:329:2627"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2833:8772-0:2553:3365":{"id":"a:2:2833:8772-0:2553:3365","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2833:8772","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseErrorKind","id":"0:2553:3365","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:980:2126":{"id":"0:980:2126","crate_id":0,"name":"MIN_DATE","span":{"filename":"src/naive/date.rs","begin":[201,0],"end":[201,47]},"visibility":"public","docs":"The minimum possible `NaiveDate` (January 1, 262145 BCE).","links":{},"attrs":["#[deprecated(since = \"0.4.20\", note = \"Use NaiveDate::MIN instead\")]"],"deprecation":{"since":"0.4.20","note":"Use NaiveDate::MIN instead"},"inner":{"constant":{"type":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"NaiveDate::MIN","value":null,"is_literal":false}}},"a:2:8607:8817-0:2264:3194":{"id":"a:2:8607:8817-0:2264:3194","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8607:8817","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Numeric","id":"0:2264:3194","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2776:242-0:2209:2527":{"id":"a:2:2776:242-0:2209:2527","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2776:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StrftimeItems","id":"0:2209:2527","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1268:1525":{"id":"0:1268:1525","crate_id":0,"name":"sub","span":{"filename":"src/naive/datetime/mod.rs","begin":[1789,4],"end":[1791,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"OldDuration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2582-0:2761:2117":{"id":"b:2:2582-0:2761:2117","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2585:133","2:2586:1588"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2261-0:2161:2526":{"id":"b:2:2261-0:2161:2526","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2255:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DelayedFormat","id":"0:2161:2526","args":{"angle_bracketed":{"args":[{"type":{"generic":"I"}}],"bindings":[]}}}},"items":["2:2263:2522"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2261-0:2243:3177":{"id":"b:2:2261-0:2243:3177","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2255:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Pad","id":"0:2243:3177","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2263:2522"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8607:8817-0:2584:2137":{"id":"a:2:8607:8817-0:2584:2137","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8607:8817","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveWeek","id":"0:2584:2137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1077:203":{"id":"0:1077:203","crate_id":0,"name":"Output","span":{"filename":"src/naive/date.rs","begin":[1930,4],"end":[1930,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:2749":{"id":"0:2749","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[205,20],"end":[205,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2330:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:660:3770":{"id":"0:660:3770","crate_id":0,"name":"set_year_mod_100","span":{"filename":"src/format/parsed.rs","begin":[149,4],"end":[154,5]},"visibility":"public","docs":"Tries to set the [`year_mod_100`](#structfield.year_mod_100) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:906:2133","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2577-0:2154:2111":{"id":"b:2:2577-0:2154:2111","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2547:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["2:2580:133","2:2581:1590"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:368:744":{"id":"0:368:744","crate_id":0,"name":"from","span":{"filename":"src/datetime/mod.rs","begin":[718,4],"end":[720,5]},"visibility":"default","docs":"Convert this `DateTime<Local>` instance into a `DateTime<FixedOffset>` instance.\n\nConversion is performed via [`DateTime::with_timezone`].","links":{"`DateTime::with_timezone`":"0:329:2627"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Local","id":"0:3052:2107","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:465:203":{"id":"0:465:203","crate_id":0,"name":"Output","span":{"filename":"src/datetime/mod.rs","begin":[1251,4],"end":[1251,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}}},"0:2631:718":{"id":"0:2631:718","crate_id":0,"name":"fmt","span":{"filename":"src/naive/date.rs","begin":[2017,9],"end":[2017,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9506:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9487:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2016":{"id":"0:2016","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[62,0],"end":[159,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Month","id":"0:3170:2114","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2017:2612","0:2018:2619","0:2019:8146","0:2020:980"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1070":{"id":"0:1070","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[1896,0],"end":[1919,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:2850:2288","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Months","id":"0:3225:2145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1071:203","0:1072:1525"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2007:718":{"id":"0:2007:718","crate_id":0,"name":"fmt","span":{"filename":"src/weekday.rs","begin":[234,4],"end":[236,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9506:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9487:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8606:8818-0:2106:2104":{"id":"a:2:8606:8818-0:2106:2104","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8606:8818","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRangeError","id":"0:2106:2104","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2567-0:2120:2106":{"id":"b:2:2567-0:2120:2106","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["2:2570:3122"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:3124:2116":{"id":"0:3124:2116","crate_id":0,"name":"Weekday","span":{"filename":"src/weekday.rs","begin":[36,0],"end":[51,1]},"visibility":"public","docs":"The day of week.\n\nThe order of the days of week depends on the context.\n(This is why this type does *not* implement `PartialOrd` or `Ord` traits.)\nOne should prefer `*_from_monday` or `*_from_sunday` methods to get the correct result.\n\n# Example\n```\nuse chrono::Weekday;\n\nlet monday = \"Monday\".parse::<Weekday>().unwrap();\nassert_eq!(monday, Weekday::Mon);\n\nlet sunday = Weekday::try_from(6).unwrap();\nassert_eq!(sunday, Weekday::Sun);\n\nassert_eq!(sunday.num_days_from_monday(), 6); // starts counting with Monday = 0\nassert_eq!(sunday.number_from_monday(), 7); // starts counting with Monday = 1\nassert_eq!(sunday.num_days_from_sunday(), 0); // starts counting with Sunday = 0\nassert_eq!(sunday.number_from_sunday(), 1); // starts counting with Sunday = 1\n\nassert_eq!(sunday.succ(), monday);\nassert_eq!(sunday.pred(), Weekday::Sat);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:3125:3460","0:3128:3839","0:3131:3840","0:3134:3841","0:3137:3842","0:3140:3843","0:3143:3458"],"impls":["0:1989","a:2:2793:252-0:3124:2116","a:2:2776:242-0:3124:2116","a:2:8606:8818-0:3124:2116","a:2:2833:8772-0:3124:2116","a:2:8607:8817-0:3124:2116","b:2:2571-0:3124:2116","b:2:2577-0:3124:2116","b:2:2582-0:3124:2116","b:2:2261-0:3124:2116","b:2:3412-0:3124:2116","b:2:2264-0:3124:2116","b:2:2567-0:3124:2116","b:5:5792-0:3124:2116","b:5:682-0:3124:2116","0:2002","0:3153","0:1997","0:3146","0:3155","0:3147","0:1999","0:3149","0:3152","0:3157","0:3150","0:919"]}}},"0:31:2345":{"id":"0:31:2345","crate_id":0,"name":"minutes","span":{"filename":"src/duration.rs","begin":[108,4],"end":[111,5]},"visibility":"public","docs":"Makes a new `Duration` with given number of minutes.\nEquivalent to `Duration::seconds(minutes * 60)` with overflow checks.\nPanics when the duration is out of bounds.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["minutes",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:47:2389":{"id":"0:47:2389","crate_id":0,"name":"abs","span":{"filename":"src/duration.rs","begin":[258,4],"end":[264,5]},"visibility":"public","docs":"Returns the duration as an absolute (non-negative) value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1440:302":{"id":"0:1440:302","crate_id":0,"name":"add_assign","span":{"filename":"src/naive/time/mod.rs","begin":[1130,4],"end":[1132,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["rhs",{"resolved_path":{"name":"OldDuration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1258:1525":{"id":"0:1258:1525","crate_id":0,"name":"sub","span":{"filename":"src/naive/datetime/mod.rs","begin":[1693,4],"end":[1697,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"Duration","id":"2:44300:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2755:1100":{"id":"0:2755:1100","crate_id":0,"name":"partial_cmp","span":{"filename":"src/naive/time/mod.rs","begin":[205,30],"end":[205,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::option::Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:30807:200","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1875:7059":{"id":"0:1875:7059","crate_id":0,"name":"offset_from_local_date","span":{"filename":"src/offset/utc.rs","begin":[118,4],"end":[120,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["_local",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"LocalResult","id":"0:3073:2138","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Utc","id":"0:3059:2118","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:898:718":{"id":"0:898:718","crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[167,4],"end":[169,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9506:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9487:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2068:3045":{"id":"0:2068:3045","crate_id":0,"name":"with_hour","span":{"filename":"src/traits.rs","begin":[297,4],"end":[297,51]},"visibility":"default","docs":"Makes a new value with the hour number changed.\n\nReturns `None` when the resulting value would be invalid.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["hour",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"2:12421:32703":{"id":"2:12421:32703","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10196:244","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10196:244","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:500:1525":{"id":"0:500:1525","crate_id":0,"name":"sub","span":{"filename":"src/datetime/mod.rs","begin":[1334,4],"end":[1336,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["days",{"resolved_path":{"name":"Days","id":"0:2589:2135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:2850:2288","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1454":{"id":"0:1454","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[1228,0],"end":[1235,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"SubAssign","id":"2:2880:2524","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"2:44300:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1455:1526"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1913:5663":{"id":"0:1913:5663","crate_id":0,"name":"yo_opt","span":{"filename":"src/offset/mod.rs","begin":[300,4],"end":[305,5]},"visibility":"default","docs":"Makes a new `Date` from year, day of year (DOY or \"ordinal\") and the current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\n\nThe time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),\nbut it will propagate to the `DateTime` values constructed via this date.\n\nReturns `None` on the out-of-range date and/or invalid DOY.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note =\n\"use `from_local_datetime()` with a `NaiveDateTime` instead\")]","#[allow(deprecated)]"],"deprecation":{"since":"0.4.23","note":"use `from_local_datetime()` with a `NaiveDateTime` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["year",{"primitive":"i32"}],["ordinal",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"LocalResult","id":"0:3073:2138","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:516:744":{"id":"0:516:744","crate_id":0,"name":"from","span":{"filename":"src/datetime/mod.rs","begin":[1404,4],"end":[1419,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"resolved_path":{"name":"SystemTime","id":"1:9165:2711","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Utc","id":"0:3059:2118","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1495:1053":{"id":"0:1495:1053","crate_id":0,"name":"offset","span":{"filename":"src/offset/mod.rs","begin":[4,0],"end":[601,1]},"visibility":"public","docs":"The time zone, which calculates offsets from the local time to UTC.\n\nThere are four operations provided by the `TimeZone` trait:\n\n1. Converting the local `NaiveDateTime` to `DateTime<Tz>`\n2. Converting the UTC `NaiveDateTime` to `DateTime<Tz>`\n3. Converting `DateTime<Tz>` to the local `NaiveDateTime`\n4. Constructing `DateTime<Tz>` objects from various offsets\n\n1 is used for constructors. 2 is used for the `with_timezone` method of date and time types.\n3 is used for other methods, e.g. `year()` or `format()`, and provided by an associated type\nwhich implements `Offset` (which then passed to `TimeZone` for actual implementations).\nTechnically speaking `TimeZone` has a total knowledge about given timescale,\nbut `Offset` is used as a cache to avoid the repeated conversion\nand provides implementations for 1 and 3.\nAn `TimeZone` instance can be reconstructed from the corresponding `Offset` instance.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:1577-0:2761:2117","0:1852-0:3052:2107","0:1885-0:3059:2118","0:3073:2138","0:1904:2122","0:1906:2123"],"is_stripped":false}}},"a:2:2776:242-0:2243:3177":{"id":"a:2:2776:242-0:2243:3177","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2776:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Pad","id":"0:2243:3177","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:313:2763":{"id":"0:313:2763","crate_id":0,"name":"from_naive_utc_and_offset","span":{"filename":"src/datetime/mod.rs","begin":[123,4],"end":[125,5]},"visibility":"public","docs":"Makes a new `DateTime` from its components: a `NaiveDateTime` in UTC and an `Offset`.\n\nThis is a low-level method, intended for use cases such as deserializing a `DateTime` or\npassing it through FFI.\n\nFor regular use you will probably want to use a method such as\n[`TimeZone::from_local_datetime`] or [`NaiveDateTime::and_local_timezone`] instead.\n\n# Example\n\n```rust\nuse chrono::{Local, DateTime};\n\nlet dt = Local::now();\n// Get components\nlet naive_utc = dt.naive_utc();\nlet offset = dt.offset().clone();\n// Serialize, pass through FFI... and recreate the `DateTime`:\nlet dt_new = DateTime::<Local>::from_naive_utc_and_offset(naive_utc, offset);\nassert_eq!(dt, dt_new);\n```","links":{"`NaiveDateTime::and_local_timezone`":"0:1197:2853","`TimeZone::from_local_datetime`":"0:1928:2569"},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["datetime",{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["offset",{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Tz"},"trait":{"name":"","id":"0:1906:2123","args":null}}}]],"output":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:480:1526":{"id":"0:480:1526","crate_id":0,"name":"sub_assign","span":{"filename":"src/datetime/mod.rs","begin":[1290,4],"end":[1294,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["rhs",{"resolved_path":{"name":"Duration","id":"2:44300:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1011:2588":{"id":"0:1011:2588","crate_id":0,"name":"and_hms_milli_opt","span":{"filename":"src/naive/date.rs","begin":[907,4],"end":[916,5]},"visibility":"public","docs":"Makes a new `NaiveDateTime` from the current date, hour, minute, second and millisecond.\n\nThe millisecond part is allowed to exceed 1,000,000,000 in order to represent a [leap second](\n./struct.NaiveTime.html#leap-second-handling), but only when `sec == 59`.\n\n# Errors\n\nReturns `None` on invalid hour, minute, second and/or millisecond.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet d = NaiveDate::from_ymd_opt(2015, 6, 3).unwrap();\nassert!(d.and_hms_milli_opt(12, 34, 56,   789).is_some());\nassert!(d.and_hms_milli_opt(12, 34, 59, 1_789).is_some()); // leap second\nassert!(d.and_hms_milli_opt(12, 34, 59, 2_789).is_none());\nassert!(d.and_hms_milli_opt(12, 34, 60,   789).is_none());\nassert!(d.and_hms_milli_opt(12, 60, 56,   789).is_none());\nassert!(d.and_hms_milli_opt(24, 34, 56,   789).is_none());\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}],["milli",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1424:2325":{"id":"0:1424:2325","crate_id":0,"name":"MIN","span":{"filename":"src/naive/time/mod.rs","begin":[844,4],"end":[844,52]},"visibility":"public","docs":"The earliest possible `NaiveTime`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1870:2691":{"id":"0:1870:2691","crate_id":0,"name":"today","span":{"filename":"src/offset/utc.rs","begin":[58,4],"end":[60,5]},"visibility":"public","docs":"Returns a `Date` which corresponds to the current date.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note =\n\"use `Utc::now()` instead, potentially with `.date_naive()`\")]","#[allow(deprecated)]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"use `Utc::now()` instead, potentially with `.date_naive()`"},"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Utc","id":"0:3059:2118","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:169:2642":{"id":"0:169:2642","crate_id":0,"name":"naive_utc","span":{"filename":"src/date.rs","begin":[296,4],"end":[298,5]},"visibility":"public","docs":"Returns a view to the naive UTC date.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2531:718":{"id":"0:2531:718","crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[330,31],"end":[330,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9506:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9487:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2044:2670":{"id":"0:2044:2670","crate_id":0,"name":"year","span":{"filename":"src/traits.rs","begin":[33,4],"end":[33,26]},"visibility":"default","docs":"Returns the year number in the [calendar date](./naive/struct.NaiveDate.html#calendar-date).","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"2:12499:39469":{"id":"2:12499:39469","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1082":{"id":"0:1082","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[1970,0],"end":[1975,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"SubAssign","id":"2:2880:2524","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1083:1526"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2793:252-0:2334:2716":{"id":"a:2:2793:252-0:2334:2716","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2793:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Fixed","id":"0:2334:2716","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:85-0:2085:127":{"id":"0:85-0:2085:127","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[478,0],"end":[478,27]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"duration::Duration","name":"Duration","id":"0:2085:127","glob":false}}},"b:2:2261-0:3059:2118":{"id":"b:2:2261-0:3059:2118","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2255:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Utc","id":"0:3059:2118","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2263:2522"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:525-0:310:2129":{"id":"0:525-0:310:2129","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[520,44],"end":[520,56]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"import":{"source":"datetime::MAX_DATETIME","name":"MAX_DATETIME","id":"0:310:2129","glob":false}}},"0:995:5161":{"id":"0:995:5161","crate_id":0,"name":"from_weekday_of_month_opt","span":{"filename":"src/naive/date.rs","begin":[525,4],"end":[538,5]},"visibility":"public","docs":"Makes a new `NaiveDate` by counting the number of occurrences of a particular day-of-week\nsince the beginning of the given month. For instance, if you want the 2nd Friday of March\n2017, you would use `NaiveDate::from_weekday_of_month(2017, 3, Weekday::Fri, 2)`.\n\n`n` is 1-indexed.\n\n# Errors\n\nReturns `None` if:\n- The specified day does not exist in that month (for example the 5th Monday of Apr. 2023).\n- The value for `month` or `n` is invalid.\n- `year` is out of range for `NaiveDate`.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Weekday};\nassert_eq!(NaiveDate::from_weekday_of_month_opt(2017, 3, Weekday::Fri, 2),\n           NaiveDate::from_ymd_opt(2017, 3, 10))\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["year",{"primitive":"i32"}],["month",{"primitive":"u32"}],["weekday",{"resolved_path":{"name":"Weekday","id":"0:3124:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["n",{"primitive":"u8"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12425:39459":{"id":"2:12425:39459","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:12073:1506","str::slice_mut_unchecked":"2:12426:39460","crate::ops::Index":"2:3073:8462"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:2055:2678":{"id":"0:2055:2678","crate_id":0,"name":"with_month","span":{"filename":"src/traits.rs","begin":[164,4],"end":[164,53]},"visibility":"default","docs":"Makes a new value with the month number (starting from 1) changed.\n\n# Errors\n\nReturns `None` when:\n\n- The resulting date does not exist (for example `month(4)` when day of the month is 31).\n- In case of [`DateTime<Tz>`] if the resulting date and time fall within a timezone\n  transition such as from DST to standard time.\n- The value for `month` is out of range.\n\n[`DateTime<Tz>`]: crate::DateTime\n\n# Examples\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(\n    NaiveDate::from_ymd_opt(2023, 5, 12).unwrap().with_month(9).unwrap(),\n    NaiveDate::from_ymd_opt(2023, 9, 12).unwrap()\n);\n// Resulting date 2023-09-31 does not exist:\nassert!(NaiveDate::from_ymd_opt(2023, 5, 31).unwrap().with_month(9).is_none());\n```\n\nDon't combine multiple `Datelike::with_*` methods. The intermediate value may not exist.\n```\nuse chrono::{NaiveDate, Datelike};\n\nfn with_year_month(date: NaiveDate, year: i32, month: u32) -> Option<NaiveDate> {\n    date.with_year(year)?.with_month(month)\n}\nlet d = NaiveDate::from_ymd_opt(2020, 2, 29).unwrap();\nassert!(with_year_month(d, 2019, 1).is_none()); // fails because of invalid intermediate value\n\n// Correct version:\nfn with_year_month_fixed(date: NaiveDate, year: i32, month: u32) -> Option<NaiveDate> {\n    NaiveDate::from_ymd_opt(year, month, date.day())\n}\nlet d = NaiveDate::from_ymd_opt(2020, 2, 29).unwrap();\nassert_eq!(with_year_month_fixed(d, 2019, 1), NaiveDate::from_ymd_opt(2019, 1, 29));\n```","links":{"crate::DateTime":"0:2154:2111"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["month",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:1874:2624":{"id":"0:1874:2624","crate_id":0,"name":"from_offset","span":{"filename":"src/offset/utc.rs","begin":[114,4],"end":[116,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["_state",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Utc","id":"0:3059:2118","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Utc","id":"0:3059:2118","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2264-0:2154:2111":{"id":"b:2:2264-0:2154:2111","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2258:101","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["2:2266:7207"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2264-0:2472:3319":{"id":"b:2:2264-0:2472:3319","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2258:101","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Colons","id":"0:2472:3319","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2266:7207"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:381":{"id":"0:381","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[853,0],"end":[931,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Tz"},"trait":{"name":"","id":"0:1906:2123","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Display","id":"2:9536:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:383:2656","0:387:729"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1010:2586":{"id":"0:1010:2586","crate_id":0,"name":"and_hms_milli","span":{"filename":"src/naive/date.rs","begin":[879,4],"end":[881,5]},"visibility":"public","docs":"Makes a new `NaiveDateTime` from the current date, hour, minute, second and millisecond.\n\nThe millisecond part is allowed to exceed 1,000,000,000 in order to represent a [leap second](\n./struct.NaiveTime.html#leap-second-handling), but only when `sec == 59`.\n\n# Panics\n\nPanics on invalid hour, minute, second and/or millisecond.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `and_hms_milli_opt()` instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"use `and_hms_milli_opt()` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}],["milli",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2264-0:3059:2118":{"id":"b:2:2264-0:3059:2118","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2258:101","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Utc","id":"0:3059:2118","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2266:7207"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1844:7165":{"id":"0:1844:7165","crate_id":0,"name":"now","span":{"filename":"src/offset/local/mod.rs","begin":[147,4],"end":[149,5]},"visibility":"public","docs":"Returns a `DateTime<Local>` which corresponds to the current date, time and offset from\nUTC.\n\nSee also the similar [`Utc::now()`] which returns `DateTime<Utc>`, i.e. without the local\noffset.\n\n# Example\n\n```\n# #![allow(unused_variables)]\n# use chrono::{DateTime, FixedOffset, Local};\n// Current local time\nlet now = Local::now();\n\n// Current local date\nlet today = now.date_naive();\n\n// Current local time, converted to `DateTime<FixedOffset>`\nlet now_fixed_offset = Local::now().fixed_offset();\n// or\nlet now_fixed_offset: DateTime<FixedOffset> = Local::now().into();\n\n// Current time in some timezone (let's use +05:00)\n// Note that it is usually more efficient to use `Utc::now` for this use case.\nlet offset = FixedOffset::east_opt(5 * 60 * 60).unwrap();\nlet now_with_offset = Local::now().with_timezone(&offset);\n```","links":{"`Utc::now()`":"0:1871:7165"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Local","id":"0:3052:2107","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1177:2812":{"id":"0:1177:2812","crate_id":0,"name":"timestamp_micros","span":{"filename":"src/naive/datetime/mod.rs","begin":[447,4],"end":[450,5]},"visibility":"public","docs":"Returns the number of non-leap *microseconds* since midnight on January 1, 1970.\n\nNote that this does *not* account for the timezone!\nThe true \"UNIX timestamp\" would count seconds since the midnight *UTC* on the epoch.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet dt = NaiveDate::from_ymd_opt(1970, 1, 1).unwrap().and_hms_micro_opt(0, 0, 1, 444).unwrap();\nassert_eq!(dt.timestamp_micros(), 1_000_444);\n\nlet dt = NaiveDate::from_ymd_opt(2001, 9, 9).unwrap().and_hms_micro_opt(1, 46, 40, 555).unwrap();\nassert_eq!(dt.timestamp_micros(), 1_000_000_000_000_555);\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3222:1100":{"id":"0:3222:1100","crate_id":0,"name":"partial_cmp","span":{"filename":"src/month.rs","begin":[31,50],"end":[31,60]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Month","id":"0:3170:2114","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::option::Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:30807:200","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1191:2656":{"id":"0:1191:2656","crate_id":0,"name":"format_with_items","span":{"filename":"src/naive/datetime/mod.rs","begin":[900,4],"end":[906,5]},"visibility":"public","docs":"Formats the combined date and time with the specified formatting items.\nOtherwise it is the same as the ordinary [`format`](#method.format) method.\n\nThe `Iterator` of items should be `Clone`able,\nsince the resulting `DelayedFormat` value may be formatted multiple times.\n\n# Example\n\n```\nuse chrono::NaiveDate;\nuse chrono::format::strftime::StrftimeItems;\n\nlet fmt = StrftimeItems::new(\"%Y-%m-%d %H:%M:%S\");\nlet dt = NaiveDate::from_ymd_opt(2015, 9, 5).unwrap().and_hms_opt(23, 56, 4).unwrap();\nassert_eq!(dt.format_with_items(fmt.clone()).to_string(), \"2015-09-05 23:56:04\");\nassert_eq!(dt.format(\"%Y-%m-%d %H:%M:%S\").to_string(),    \"2015-09-05 23:56:04\");\n```\n\nThe resulting `DelayedFormat` can be formatted directly via the `Display` trait.\n\n```\n# use chrono::NaiveDate;\n# use chrono::format::strftime::StrftimeItems;\n# let fmt = StrftimeItems::new(\"%Y-%m-%d %H:%M:%S\").clone();\n# let dt = NaiveDate::from_ymd_opt(2015, 9, 5).unwrap().and_hms_opt(23, 56, 4).unwrap();\nassert_eq!(format!(\"{}\", dt.format_with_items(fmt)), \"2015-09-05 23:56:04\");\n```","links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\"))]","#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["items",{"generic":"I"}]],"output":{"resolved_path":{"name":"DelayedFormat","id":"0:2161:2526","args":{"angle_bracketed":{"args":[{"type":{"generic":"I"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7627:173","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"B"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2255:100","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Item","id":"0:2493:168","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2593:454":{"id":"0:2593:454","crate_id":0,"name":"clone","span":{"filename":"src/naive/date.rs","begin":[134,9],"end":[134,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Days","id":"0:2589:2135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2369:2971":{"id":"0:2369:2971","crate_id":0,"name":"RFC2822","span":{"filename":"src/format/mod.rs","begin":[248,4],"end":[248,11]},"visibility":"default","docs":"RFC 2822 date and time syntax. Commonly used for email and MIME date and time.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:12490:39466":{"id":"2:12490:39466","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:12106:8527","`DoubleEndedIterator`":"2:7518:126","prim@char":"1:12067:450","str::match_indices":"2:12487:39465"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:43694:8565","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12111:8541","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12111:8541","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12126:8543","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3109:7922":{"id":"0:3109:7922","crate_id":0,"name":"DurationExceedsLimit","span":{"filename":"src/round.rs","begin":[264,4],"end":[264,24]},"visibility":"default","docs":"Error when `Duration.num_nanoseconds` exceeds the limit.\n\n``` rust\n# use chrono::{DurationRound, Duration, RoundingError, Utc, NaiveDate};\nlet dt = NaiveDate::from_ymd_opt(2260, 12, 31).unwrap().and_hms_nano_opt(23, 59, 59, 1_75_500_000).unwrap().and_local_timezone(Utc).unwrap();\n\nassert_eq!(\n    dt.duration_round(Duration::days(300 * 365)),\n    Err(RoundingError::DurationExceedsLimit)\n);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:2577-0:2493:168":{"id":"b:2:2577-0:2493:168","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2547:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Item","id":"0:2493:168","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2580:133","2:2581:1590"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:435:660":{"id":"0:435:660","crate_id":0,"name":"eq","span":{"filename":"src/datetime/mod.rs","begin":[1171,4],"end":[1173,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz2"}}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2833:8772-0:2536:2132":{"id":"a:2:2833:8772-0:2536:2132","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2833:8772","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:2536:2132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1452:203":{"id":"0:1452:203","crate_id":0,"name":"Output","span":{"filename":"src/naive/time/mod.rs","begin":[1218,4],"end":[1218,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"b:2:2261-0:2724:2136":{"id":"b:2:2261-0:2724:2136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2255:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IsoWeek","id":"0:2724:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2263:2522"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1446":{"id":"0:1446","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[1201,0],"end":[1208,1]},"visibility":"default","docs":"A subtraction of `Duration` from `NaiveTime` wraps around and never overflows or underflows.\nIn particular the addition ignores integral number of days.\nIt is the same as the addition with a negated `Duration`.\n\nAs a part of Chrono's [leap second handling], the subtraction assumes that **there is no leap\nsecond ever**, except when the `NaiveTime` itself represents a leap second in which case the\nassumption becomes that **there is exactly a single leap second ever**.\n\n# Example\n\n```\nuse chrono::{Duration, NaiveTime};\n\nlet from_hmsm = |h, m, s, milli| { NaiveTime::from_hms_milli_opt(h, m, s, milli).unwrap() };\n\nassert_eq!(from_hmsm(3, 5, 7, 0) - Duration::zero(),                  from_hmsm(3, 5, 7, 0));\nassert_eq!(from_hmsm(3, 5, 7, 0) - Duration::seconds(1),              from_hmsm(3, 5, 6, 0));\nassert_eq!(from_hmsm(3, 5, 7, 0) - Duration::seconds(60 + 5),         from_hmsm(3, 4, 2, 0));\nassert_eq!(from_hmsm(3, 5, 7, 0) - Duration::seconds(2*60*60 + 6*60), from_hmsm(0, 59, 7, 0));\nassert_eq!(from_hmsm(3, 5, 7, 0) - Duration::milliseconds(80),        from_hmsm(3, 5, 6, 920));\nassert_eq!(from_hmsm(3, 5, 7, 950) - Duration::milliseconds(280),     from_hmsm(3, 5, 7, 670));\n```\n\nThe subtraction wraps around.\n\n```\n# use chrono::{Duration, NaiveTime};\n# let from_hmsm = |h, m, s, milli| { NaiveTime::from_hms_milli_opt(h, m, s, milli).unwrap() };\nassert_eq!(from_hmsm(3, 5, 7, 0) - Duration::seconds(8*60*60), from_hmsm(19, 5, 7, 0));\nassert_eq!(from_hmsm(3, 5, 7, 0) - Duration::days(800),        from_hmsm(3, 5, 7, 0));\n```\n\nLeap seconds are handled, but the subtraction assumes that it is the only leap second happened.\n\n```\n# use chrono::{Duration, NaiveTime};\n# let from_hmsm = |h, m, s, milli| { NaiveTime::from_hms_milli_opt(h, m, s, milli).unwrap() };\nlet leap = from_hmsm(3, 5, 59, 1_300);\nassert_eq!(leap - Duration::zero(),            from_hmsm(3, 5, 59, 1_300));\nassert_eq!(leap - Duration::milliseconds(200), from_hmsm(3, 5, 59, 1_100));\nassert_eq!(leap - Duration::milliseconds(500), from_hmsm(3, 5, 59, 800));\nassert_eq!(leap - Duration::seconds(60),       from_hmsm(3, 5, 0, 300));\nassert_eq!(leap - Duration::days(1),           from_hmsm(3, 6, 0, 300));\n```\n\n[leap second handling]: crate::NaiveTime#leap-second-handling","links":{"crate::NaiveTime#leap-second-handling":"0:2742:2121"},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:2850:2288","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1447:203","0:1448:1525"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:895-0:2170:2717":{"id":"0:895-0:2170:2717","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[74,0],"end":[74,23]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"parsed::Parsed","name":"Parsed","id":"0:2170:2717","glob":false}}},"0:1444":{"id":"0:1444","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[1146,0],"end":[1153,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AddAssign","id":"2:2876:2523","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"2:44300:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1445:302"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3174:3423":{"id":"0:3174:3423","crate_id":0,"name":"February","span":{"filename":"src/month.rs","begin":[39,4],"end":[39,16]},"visibility":"default","docs":"February","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":{"expr":"1","value":"1"}}}},"0:147:2588":{"id":"0:147:2588","crate_id":0,"name":"and_hms_milli_opt","span":{"filename":"src/date.rs","begin":[134,4],"end":[142,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date, hour, minute, second and millisecond.\nThe millisecond part can exceed 1,000 in order to represent the leap second.\nThe offset in the current date is preserved.\n\nReturns `None` on invalid hour, minute, second and/or millisecond.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}],["milli",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:394:2672":{"id":"0:394:2672","crate_id":0,"name":"day","span":{"filename":"src/datetime/mod.rs","begin":[947,4],"end":[949,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:689:3805":{"id":"0:689:3805","crate_id":0,"name":"set_nanosecond","span":{"filename":"src/format/parsed.rs","begin":[269,4],"end":[271,5]},"visibility":"public","docs":"Tries to set the [`nanosecond`](#structfield.nanosecond) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:906:2133","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2567-0:2724:2136":{"id":"b:2:2567-0:2724:2136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IsoWeek","id":"0:2724:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2570:3122"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12454:32734":{"id":"2:12454:32734","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:12106:8527","`DoubleEndedIterator`":"2:7518:126","prim@char":"1:12067:450","str::split_whitespace":"2:12432:37951","str::rsplit":"2:12460:32738"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:43526:8558","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12111:8541","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:521:744":{"id":"0:521:744","crate_id":0,"name":"from","span":{"filename":"src/datetime/mod.rs","begin":[1433,4],"end":[1442,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["dt",{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"SystemTime","id":"1:9165:2711","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3225:2145":{"id":"0:3225:2145","crate_id":0,"name":"Months","span":{"filename":"src/month.rs","begin":[223,0],"end":[223,34]},"visibility":"public","docs":"A duration in calendar months","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:2028","a:2:2793:252-0:3225:2145","a:2:2776:242-0:3225:2145","a:2:8606:8818-0:3225:2145","a:2:2833:8772-0:3225:2145","a:2:8607:8817-0:3225:2145","b:2:2571-0:3225:2145","b:2:2577-0:3225:2145","b:2:2582-0:3225:2145","b:2:2261-0:3225:2145","b:2:3412-0:3225:2145","b:2:2264-0:3225:2145","b:2:2567-0:3225:2145","b:5:682-0:3225:2145","0:3228","0:3231","0:1263","0:3233","0:3242","0:3244","0:1250","0:3240","0:3239","0:3236","0:1067","0:481","0:3234","0:3230","0:463","0:1070"]}}},"0:190:2671":{"id":"0:190:2671","crate_id":0,"name":"month0","span":{"filename":"src/date.rs","begin":[408,4],"end":[410,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1195:729":{"id":"0:1195:729","crate_id":0,"name":"format","span":{"filename":"src/naive/datetime/mod.rs","begin":[944,4],"end":[946,5]},"visibility":"public","docs":"Formats the combined date and time with the specified format string.\nSee the [`format::strftime` module](../format/strftime/index.html)\non the supported escape sequences.\n\nThis returns a `DelayedFormat`,\nwhich gets converted to a string only when actual formatting happens.\nYou may use the `to_string` method to get a `String`,\nor just feed it into `print!` and other formatting macros.\n(In this way it avoids the redundant memory allocation.)\n\nA wrong format string does *not* issue an error immediately.\nRather, converting or formatting the `DelayedFormat` fails.\nYou are recommended to immediately use `DelayedFormat` for this reason.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet dt = NaiveDate::from_ymd_opt(2015, 9, 5).unwrap().and_hms_opt(23, 56, 4).unwrap();\nassert_eq!(dt.format(\"%Y-%m-%d %H:%M:%S\").to_string(), \"2015-09-05 23:56:04\");\nassert_eq!(dt.format(\"around %l %p on %b %-d\").to_string(), \"around 11 PM on Sep 5\");\n```\n\nThe resulting `DelayedFormat` can be formatted directly via the `Display` trait.\n\n```\n# use chrono::NaiveDate;\n# let dt = NaiveDate::from_ymd_opt(2015, 9, 5).unwrap().and_hms_opt(23, 56, 4).unwrap();\nassert_eq!(format!(\"{}\", dt.format(\"%Y-%m-%d %H:%M:%S\")), \"2015-09-05 23:56:04\");\nassert_eq!(format!(\"{}\", dt.format(\"around %l %p on %b %-d\")), \"around 11 PM on Sep 5\");\n```","links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\"))]","#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["fmt",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"DelayedFormat","id":"0:2161:2526","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"StrftimeItems","id":"0:2209:2527","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1541:3085":{"id":"0:1541:3085","crate_id":0,"name":"from_str","span":{"filename":"src/offset/fixed.rs","begin":[120,4],"end":[123,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41709:231","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:12066:3084","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2264-0:2209:2527":{"id":"b:2:2264-0:2209:2527","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2258:101","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"StrftimeItems","id":"0:2209:2527","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2266:7207"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2065:3039":{"id":"0:2065:3039","crate_id":0,"name":"minute","span":{"filename":"src/traits.rs","begin":[284,4],"end":[284,28]},"visibility":"default","docs":"Returns the minute number from 0 to 59.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"b:2:2261-0:2553:3365":{"id":"b:2:2261-0:2553:3365","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2255:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseErrorKind","id":"0:2553:3365","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2263:2522"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1930:7066":{"id":"0:1930:7066","crate_id":0,"name":"offset_from_utc_date","span":{"filename":"src/offset/mod.rs","begin":[508,4],"end":[508,68]},"visibility":"default","docs":"Creates the offset for given UTC `NaiveDate`. This cannot fail.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["utc",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:1906:2123","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:196:2676":{"id":"0:196:2676","crate_id":0,"name":"iso_week","span":{"filename":"src/date.rs","begin":[432,4],"end":[434,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"IsoWeek","id":"0:2724:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:318:2289":{"id":"0:318:2289","crate_id":0,"name":"time","span":{"filename":"src/datetime/mod.rs","begin":[206,4],"end":[208,5]},"visibility":"public","docs":"Retrieves the time component.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:333:2852":{"id":"0:333:2852","crate_id":0,"name":"checked_add_months","span":{"filename":"src/datetime/mod.rs","begin":[396,4],"end":[401,5]},"visibility":"public","docs":"Adds given `Months` to the current date and time.\n\nUses the last day of the month if the day does not exist in the resulting month.\n\nSee [`NaiveDate::checked_add_months`] for more details on behavior.\n\n# Errors\n\nReturns `None` if:\n- The resulting date would be out of range.\n- The local time at the resulting date does not exist or is ambiguous, for example during a\n  daylight saving time transition.","links":{"`NaiveDate::checked_add_months`":"0:1000:2852"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"Months","id":"0:3225:2145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2378":{"id":"0:2378","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[176,16],"end":[176,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2786:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Fixed","id":"0:2334:2716","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8606:8818-0:2553:3365":{"id":"a:2:8606:8818-0:2553:3365","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8606:8818","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseErrorKind","id":"0:2553:3365","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1251:203":{"id":"0:1251:203","crate_id":0,"name":"Output","span":{"filename":"src/naive/datetime/mod.rs","begin":[1588,4],"end":[1588,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"b:5:682-0:2648:4960":{"id":"b:5:682-0:2648:4960","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateWeeksIterator","id":"0:2648:4960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:684:9349","5:685:9350","5:686:9351"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1894":{"id":"0:1894","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[93,0],"end":[189,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"LocalResult","id":"0:3073:2138","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:1896:2565","0:1897:2578","0:1898:2588","0:1899:2597","0:1900:2606"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:0:1956-0:2742:2121":{"id":"b:0:1956-0:2742:2121","crate_id":0,"name":null,"span":{"filename":"src/round.rs","begin":[47,0],"end":[75,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Add","id":"2:2845:2284","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sub","id":"2:2850:2288","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Timelike","id":"0:2062:2115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"SubsecRound","id":"0:1953:2110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1958:7892","0:1959:7897"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2053:2676":{"id":"0:2053:2676","crate_id":0,"name":"iso_week","span":{"filename":"src/traits.rs","begin":[81,4],"end":[81,34]},"visibility":"default","docs":"Returns the ISO week.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"IsoWeek","id":"0:2724:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:3228":{"id":"0:3228","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[221,9],"end":[221,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Months","id":"0:3225:2145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3229:454"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12417:7621":{"id":"2:12417:7621","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:41566:196"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10196:244","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10196:244","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1021:2613":{"id":"0:1021:2613","crate_id":0,"name":"succ_opt","span":{"filename":"src/naive/date.rs","begin":[1090,4],"end":[1095,5]},"visibility":"public","docs":"Makes a new `NaiveDate` for the next calendar date.\n\n# Errors\n\nReturns `None` when `self` is the last representable date.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nassert_eq!(NaiveDate::from_ymd_opt(2015, 6, 3).unwrap().succ_opt(),\n           Some(NaiveDate::from_ymd_opt(2015, 6, 4).unwrap()));\nassert_eq!(NaiveDate::MAX.succ_opt(), None);\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12463:39462":{"id":"2:12463:39462","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:12106:8527","str::split":"2:12454:32734","prim@char":"1:12067:450","`DoubleEndedIterator`":"2:7518:126","str::rsplit_terminator":"2:12466:39463"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:43576:8559","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12111:8541","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:346:2555":{"id":"0:346:2555","crate_id":0,"name":"MIN_UTC","span":{"filename":"src/datetime/mod.rs","begin":[586,4],"end":[586,94]},"visibility":"public","docs":"The minimum possible `DateTime<Utc>`.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Utc","id":"0:3059:2118","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"default":"_"}}},"0:3224:461":{"id":"0:3224:461","crate_id":0,"name":"cmp","span":{"filename":"src/month.rs","begin":[31,62],"end":[31,65]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Month","id":"0:3170:2114","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:30807:200","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2567-0:2209:2527":{"id":"b:2:2567-0:2209:2527","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"StrftimeItems","id":"0:2209:2527","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2570:3122"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1417:2656":{"id":"0:1417:2656","crate_id":0,"name":"format_with_items","span":{"filename":"src/naive/time/mod.rs","begin":[784,4],"end":[790,5]},"visibility":"public","docs":"Formats the time with the specified formatting items.\nOtherwise it is the same as the ordinary [`format`](#method.format) method.\n\nThe `Iterator` of items should be `Clone`able,\nsince the resulting `DelayedFormat` value may be formatted multiple times.\n\n# Example\n\n```\nuse chrono::NaiveTime;\nuse chrono::format::strftime::StrftimeItems;\n\nlet fmt = StrftimeItems::new(\"%H:%M:%S\");\nlet t = NaiveTime::from_hms_opt(23, 56, 4).unwrap();\nassert_eq!(t.format_with_items(fmt.clone()).to_string(), \"23:56:04\");\nassert_eq!(t.format(\"%H:%M:%S\").to_string(),             \"23:56:04\");\n```\n\nThe resulting `DelayedFormat` can be formatted directly via the `Display` trait.\n\n```\n# use chrono::NaiveTime;\n# use chrono::format::strftime::StrftimeItems;\n# let fmt = StrftimeItems::new(\"%H:%M:%S\").clone();\n# let t = NaiveTime::from_hms_opt(23, 56, 4).unwrap();\nassert_eq!(format!(\"{}\", t.format_with_items(fmt)), \"23:56:04\");\n```","links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\"))]","#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["items",{"generic":"I"}]],"output":{"resolved_path":{"name":"DelayedFormat","id":"0:2161:2526","args":{"angle_bracketed":{"args":[{"type":{"generic":"I"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7627:173","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"B"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2255:100","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Item","id":"0:2493:168","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12407:39455":{"id":"2:12407:39455","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2567-0:2472:3319":{"id":"b:2:2567-0:2472:3319","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Colons","id":"0:2472:3319","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2570:3122"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:682-0:2389:3299":{"id":"b:5:682-0:2389:3299","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalFixed","id":"0:2389:3299","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:684:9349","5:685:9350","5:686:9351"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2650":{"id":"0:2650","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[2053,9],"end":[2053,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9531:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateWeeksIterator","id":"0:2648:4960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2651:718"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2263:2522":{"id":"2:2263:2522","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1450:1526":{"id":"0:1450:1526","crate_id":0,"name":"sub_assign","span":{"filename":"src/naive/time/mod.rs","begin":[1212,4],"end":[1214,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["rhs",{"resolved_path":{"name":"OldDuration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1100:5549":{"id":"0:1100:5549","crate_id":0,"name":"size_hint","span":{"filename":"src/naive/date.rs","begin":[2067,4],"end":[2070,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2264-0:2668:2120":{"id":"b:2:2264-0:2668:2120","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2258:101","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2266:7207"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3412-0:3124:2116":{"id":"b:2:3412-0:3124:2116","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3410:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Weekday","id":"0:3124:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3414:1603"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1472:60":{"id":"0:1472:60","crate_id":0,"name":"default","span":{"filename":"src/naive/time/mod.rs","begin":[1443,4],"end":[1445,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12481:7444":{"id":"2:12481:7444","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::rmatches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:12106:8527","`DoubleEndedIterator`":"2:7518:126","prim@char":"1:12067:450","str::rmatches":"2:12484:39464"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:43730:8562","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12111:8541","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2607:1100":{"id":"0:2607:1100","crate_id":0,"name":"partial_cmp","span":{"filename":"src/naive/date.rs","begin":[134,50],"end":[134,60]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Days","id":"0:2589:2135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::option::Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:30807:200","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3244":{"id":"0:3244","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[221,62],"end":[221,65]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["min","max","clamp"],"trait":{"name":"Ord","id":"2:2361:199","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Months","id":"0:3225:2145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3245:461"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2582-0:3059:2118":{"id":"b:2:2582-0:3059:2118","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Utc","id":"0:3059:2118","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2585:133","2:2586:1588"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2312:660":{"id":"0:2312:660","crate_id":0,"name":"eq","span":{"filename":"src/format/mod.rs","begin":[105,16],"end":[105,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Numeric","id":"0:2264:3194","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1026:2640":{"id":"0:1026:2640","crate_id":0,"name":"signed_duration_since","span":{"filename":"src/naive/date.rs","begin":[1208,4],"end":[1218,5]},"visibility":"public","docs":"Subtracts another `NaiveDate` from the current date.\nReturns a `Duration` of integral numbers.\n\nThis does not overflow or underflow at all,\nas all possible output fits in the range of `Duration`.\n\n# Example\n\n```\nuse chrono::{Duration, NaiveDate};\n\nlet from_ymd = |y, m, d| NaiveDate::from_ymd_opt(y, m, d).unwrap();\nlet since = NaiveDate::signed_duration_since;\n\nassert_eq!(since(from_ymd(2014, 1, 1), from_ymd(2014, 1, 1)), Duration::zero());\nassert_eq!(since(from_ymd(2014, 1, 1), from_ymd(2013, 12, 31)), Duration::days(1));\nassert_eq!(since(from_ymd(2014, 1, 1), from_ymd(2014, 1, 2)), Duration::days(-1));\nassert_eq!(since(from_ymd(2014, 1, 1), from_ymd(2013, 9, 23)), Duration::days(100));\nassert_eq!(since(from_ymd(2014, 1, 1), from_ymd(2013, 1, 1)), Duration::days(365));\nassert_eq!(since(from_ymd(2014, 1, 1), from_ymd(2010, 1, 1)), Duration::days(365*4 + 1));\nassert_eq!(since(from_ymd(2014, 1, 1), from_ymd(1614, 1, 1)), Duration::days(365*400 + 97));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"OldDuration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:444:461":{"id":"0:444:461","crate_id":0,"name":"cmp","span":{"filename":"src/datetime/mod.rs","begin":[1200,4],"end":[1202,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Ordering","id":"2:30807:200","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:848":{"id":"0:848","crate_id":0,"name":null,"span":{"filename":"src/format/strftime.rs","begin":[178,0],"end":[199,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"StrftimeItems","id":"0:2209:2527","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:850:1002"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1280:132":{"id":"0:1280:132","crate_id":0,"name":"Err","span":{"filename":"src/naive/datetime/mod.rs","begin":[1895,4],"end":[1895,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"ParseError","id":"0:2536:2132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:1204:2670":{"id":"0:1204:2670","crate_id":0,"name":"year","span":{"filename":"src/naive/datetime/mod.rs","begin":[1012,4],"end":[1014,5]},"visibility":"default","docs":"Returns the year number in the [calendar date](./struct.NaiveDate.html#calendar-date).\n\nSee also the [`NaiveDate::year`](./struct.NaiveDate.html#method.year) method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Datelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2015, 9, 25).unwrap().and_hms_opt(12, 34, 56).unwrap();\nassert_eq!(dt.year(), 2015);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2577-0:2264:3194":{"id":"b:2:2577-0:2264:3194","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2547:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Numeric","id":"0:2264:3194","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2580:133","2:2581:1590"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2584:2137":{"id":"0:2584:2137","crate_id":0,"name":"NaiveWeek","span":{"filename":"src/naive/date.rs","begin":[40,0],"end":[43,1]},"visibility":"public","docs":"A week represented by a [`NaiveDate`] and a [`Weekday`] which is the first\nday of the week.","links":{"`NaiveDate`":"0:2610:2119","`Weekday`":"0:3124:2116"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:974","a:2:2793:252-0:2584:2137","a:2:2776:242-0:2584:2137","a:2:8606:8818-0:2584:2137","a:2:2833:8772-0:2584:2137","a:2:8607:8817-0:2584:2137","b:2:2571-0:2584:2137","b:2:2577-0:2584:2137","b:2:2582-0:2584:2137","b:2:2261-0:2584:2137","b:2:3412-0:2584:2137","b:2:2264-0:2584:2137","b:2:2567-0:2584:2137","0:2587"]}}},"0:1964:7920":{"id":"0:1964:7920","crate_id":0,"name":"duration_trunc","span":{"filename":"src/round.rs","begin":[142,4],"end":[142,75]},"visibility":"default","docs":"Return a copy truncated by Duration.\n\n# Example\n``` rust\n# use chrono::{DurationRound, Duration, Utc, NaiveDate};\nlet dt = NaiveDate::from_ymd_opt(2018, 1, 11).unwrap().and_hms_milli_opt(12, 0, 0, 154).unwrap().and_local_timezone(Utc).unwrap();\nassert_eq!(\n    dt.duration_trunc(Duration::milliseconds(10)).unwrap().to_string(),\n    \"2018-01-11 12:00:00.150 UTC\"\n);\nassert_eq!(\n    dt.duration_trunc(Duration::days(1)).unwrap().to_string(),\n    \"2018-01-11 00:00:00 UTC\"\n);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["duration",{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41709:231","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:1961:2140","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:654":{"id":"0:654","crate_id":0,"name":null,"span":{"filename":"src/format/parsed.rs","begin":[125,0],"end":[702,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Parsed","id":"0:2170:2717","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:655:1002","0:656:3764","0:658:3768","0:660:3770","0:662:3772","0:664:3774","0:666:3776","0:668:3778","0:670:3780","0:672:3782","0:674:3784","0:676:3786","0:677:3788","0:679:3790","0:681:3793","0:682:3796","0:683:3799","0:685:3801","0:687:3803","0:689:3805","0:691:3807","0:692:3809","0:694:3818","0:702:3854","0:703:3863","0:708:3868","0:709:2973","0:710:3878"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8607:8817-0:2761:2117":{"id":"a:2:8607:8817-0:2761:2117","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8607:8817","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1264:203":{"id":"0:1264:203","crate_id":0,"name":"Output","span":{"filename":"src/naive/datetime/mod.rs","begin":[1739,4],"end":[1739,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:2299:3230":{"id":"0:2299:3230","crate_id":0,"name":"Second","span":{"filename":"src/format/mod.rs","begin":[144,4],"end":[144,10]},"visibility":"default","docs":"The number of seconds since the last whole minute (FW=PW=2).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:2580:133":{"id":"2:2580:133","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"b:2:2567-0:3160:2143":{"id":"b:2:2567-0:3160:2143","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseWeekdayError","id":"0:3160:2143","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2570:3122"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1262:1526":{"id":"0:1262:1526","crate_id":0,"name":"sub_assign","span":{"filename":"src/naive/datetime/mod.rs","begin":[1709,4],"end":[1711,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["rhs",{"resolved_path":{"name":"Duration","id":"2:44300:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2264-0:2584:2137":{"id":"b:2:2264-0:2584:2137","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2258:101","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveWeek","id":"0:2584:2137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2266:7207"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2384":{"id":"0:2384","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[176,31],"end":[176,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9531:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Fixed","id":"0:2334:2716","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2385:718"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2658":{"id":"0:2658","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[2053,35],"end":[2053,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2786:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateWeeksIterator","id":"0:2648:4960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5536:7569":{"id":"5:5536:7569","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7489:248"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7489:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12507:32746":{"id":"2:12507:32746","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12067:450","self::pattern":"2:12106:8527"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12111:8541","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:684:9349":{"id":"5:684:9349","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:2183:2672":{"id":"0:2183:2672","crate_id":0,"name":"day","span":{"filename":"src/format/parsed.rs","begin":[79,4],"end":[79,24]},"visibility":"public","docs":"Day of the month (1--28, 1--29, 1--30 or 1--31 depending on the month).","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"bindings":[]}}}}}},"0:1219:2680":{"id":"0:1219:2680","crate_id":0,"name":"with_day","span":{"filename":"src/naive/datetime/mod.rs","begin":[1241,4],"end":[1243,5]},"visibility":"default","docs":"Makes a new `NaiveDateTime` with the day of month (starting from 1) changed.\n\nSee also the [`NaiveDate::with_day`] method.\n\n# Errors\n\nReturns `None` if the resulting date does not exist, or if the value for `day` is invalid.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Datelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().and_hms_opt(12, 34, 56).unwrap();\nassert_eq!(dt.with_day(30), Some(NaiveDate::from_ymd_opt(2015, 9, 30).unwrap().and_hms_opt(12, 34, 56).unwrap()));\nassert_eq!(dt.with_day(31), None); // no September 31\n```","links":{"`NaiveDate::with_day`":"0:1057:2680"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["day",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3243:1100":{"id":"0:3243:1100","crate_id":0,"name":"partial_cmp","span":{"filename":"src/month.rs","begin":[221,50],"end":[221,60]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Months","id":"0:3225:2145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::option::Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:30807:200","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:66":{"id":"0:66","crate_id":0,"name":null,"span":{"filename":"src/duration.rs","begin":[371,0],"end":[389,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Div","id":"2:2860:2285","args":{"angle_bracketed":{"args":[{"type":{"primitive":"i32"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:67:203","0:68:612"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:679:3790":{"id":"0:679:3790","crate_id":0,"name":"set_day","span":{"filename":"src/format/parsed.rs","begin":[224,4],"end":[226,5]},"visibility":"public","docs":"Tries to set the [`day`](#structfield.day) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:906:2133","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:93-0:2154:2111":{"id":"0:93-0:2154:2111","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[500,20],"end":[500,28]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"inner":{"import":{"source":"crate::DateTime","name":"DateTime","id":"0:2154:2111","glob":false}}},"0:986:5060":{"id":"0:986:5060","crate_id":0,"name":"from_ymd","span":{"filename":"src/naive/date.rs","begin":[259,4],"end":[261,5]},"visibility":"public","docs":"Makes a new `NaiveDate` from the [calendar date](#calendar-date)\n(year, month and day).\n\n# Panics\n\nPanics if the specified calendar day does not exist, on invalid values for `month` or `day`,\nor if `year` is out of range for `NaiveDate`.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `from_ymd_opt()` instead\")]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"use `from_ymd_opt()` instead"},"inner":{"function":{"decl":{"inputs":[["year",{"primitive":"i32"}],["month",{"primitive":"u32"}],["day",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:996:2998":{"id":"0:996:2998","crate_id":0,"name":"parse_from_str","span":{"filename":"src/naive/date.rs","begin":[582,4],"end":[586,5]},"visibility":"public","docs":"Parses a string with the specified format string and returns a new `NaiveDate`.\nSee the [`format::strftime` module](../format/strftime/index.html)\non the supported escape sequences.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet parse_from_str = NaiveDate::parse_from_str;\n\nassert_eq!(parse_from_str(\"2015-09-05\", \"%Y-%m-%d\"),\n           Ok(NaiveDate::from_ymd_opt(2015, 9, 5).unwrap()));\nassert_eq!(parse_from_str(\"5sep2015\", \"%d%b%Y\"),\n           Ok(NaiveDate::from_ymd_opt(2015, 9, 5).unwrap()));\n```\n\nTime and offset is ignored for the purpose of parsing.\n\n```\n# use chrono::NaiveDate;\n# let parse_from_str = NaiveDate::parse_from_str;\nassert_eq!(parse_from_str(\"2014-5-17T12:34:56+09:30\", \"%Y-%m-%dT%H:%M:%S%z\"),\n           Ok(NaiveDate::from_ymd_opt(2014, 5, 17).unwrap()));\n```\n\nOut-of-bound dates or insufficient fields are errors.\n\n```\n# use chrono::NaiveDate;\n# let parse_from_str = NaiveDate::parse_from_str;\nassert!(parse_from_str(\"2015/9\", \"%Y/%m\").is_err());\nassert!(parse_from_str(\"2015/9/31\", \"%Y/%m/%d\").is_err());\n```\n\nAll parsed fields should be consistent to each other, otherwise it's an error.\n\n```\n# use chrono::NaiveDate;\n# let parse_from_str = NaiveDate::parse_from_str;\nassert!(parse_from_str(\"Sat, 09 Aug 2013\", \"%a, %d %b %Y\").is_err());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["fmt",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:906:2133","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2793:252-0:3256:2158":{"id":"a:2:2793:252-0:3256:2158","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2793:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRange","id":"0:3256:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1241:203":{"id":"0:1241:203","crate_id":0,"name":"Output","span":{"filename":"src/naive/datetime/mod.rs","begin":[1554,4],"end":[1554,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:1925:7061":{"id":"0:1925:7061","crate_id":0,"name":"offset_from_local_datetime","span":{"filename":"src/offset/mod.rs","begin":[487,4],"end":[487,93]},"visibility":"default","docs":"Creates the offset(s) for given local `NaiveDateTime` if possible.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["local",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"LocalResult","id":"0:3073:2138","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:1906:2123","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"a:2:2793:252-0:3160:2143":{"id":"a:2:2793:252-0:3160:2143","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2793:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseWeekdayError","id":"0:3160:2143","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2776:242-0:2724:2136":{"id":"a:2:2776:242-0:2724:2136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2776:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IsoWeek","id":"0:2724:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1173:2289":{"id":"0:1173:2289","crate_id":0,"name":"time","span":{"filename":"src/naive/datetime/mod.rs","begin":[368,4],"end":[370,5]},"visibility":"public","docs":"Retrieves a time component.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveTime};\n\nlet dt = NaiveDate::from_ymd_opt(2016, 7, 8).unwrap().and_hms_opt(9, 10, 11).unwrap();\nassert_eq!(dt.time(), NaiveTime::from_hms_opt(9, 10, 11).unwrap());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:166:2635":{"id":"0:166:2635","crate_id":0,"name":"checked_sub_signed","span":{"filename":"src/date.rs","begin":[277,4],"end":[280,5]},"visibility":"public","docs":"Subtracts given `Duration` from the current date.\n\nReturns `None` when it will result in overflow.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"OldDuration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2536:2132":{"id":"0:2536:2132","crate_id":0,"name":"ParseError","span":{"filename":"src/format/mod.rs","begin":[375,0],"end":[375,38]},"visibility":"public","docs":"An error from the `parse` function.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:904","a:2:2793:252-0:2536:2132","a:2:2776:242-0:2536:2132","a:2:8606:8818-0:2536:2132","a:2:2833:8772-0:2536:2132","a:2:8607:8817-0:2536:2132","b:2:2571-0:2536:2132","b:2:2577-0:2536:2132","b:2:2582-0:2536:2132","b:2:2261-0:2536:2132","b:2:3412-0:2536:2132","b:2:2264-0:2536:2132","b:2:2567-0:2536:2132","b:5:5792-0:2536:2132","b:5:682-0:2536:2132","0:2549","0:2543","0:910","0:908","0:2541","0:2550","0:2547","0:2544","0:2539","0:2546"]}}},"b:2:2577-0:2161:2526":{"id":"b:2:2577-0:2161:2526","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2547:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DelayedFormat","id":"0:2161:2526","args":{"angle_bracketed":{"args":[{"type":{"generic":"I"}}],"bindings":[]}}}},"items":["2:2580:133","2:2581:1590"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2567-0:2106:2104":{"id":"b:2:2567-0:2106:2104","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRangeError","id":"0:2106:2104","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2570:3122"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2793:252-0:2553:3365":{"id":"a:2:2793:252-0:2553:3365","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2793:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseErrorKind","id":"0:2553:3365","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2833:8772-0:2668:2120":{"id":"a:2:2833:8772-0:2668:2120","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2833:8772","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:5:682-0:2106:2104":{"id":"b:5:682-0:2106:2104","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRangeError","id":"0:2106:2104","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:684:9349","5:685:9350","5:686:9351"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2112:454":{"id":"0:2112:454","crate_id":0,"name":"clone","span":{"filename":"src/duration.rs","begin":[443,16],"end":[443,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"OutOfRangeError","id":"0:2106:2104","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:96-0:2043:2113":{"id":"0:96-0:2043:2113","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[502,20],"end":[502,28]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"inner":{"import":{"source":"crate::Datelike","name":"Datelike","id":"0:2043:2113","glob":false}}},"a:2:2833:8772-0:2085:127":{"id":"a:2:2833:8772-0:2085:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2833:8772","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:685:9350":{"id":"5:685:9350","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:241:1525":{"id":"0:241:1525","crate_id":0,"name":"sub","span":{"filename":"src/date.rs","begin":[522,4],"end":[524,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"OldDuration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3412-0:2584:2137":{"id":"b:2:3412-0:2584:2137","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3410:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveWeek","id":"0:2584:2137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3414:1603"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8606:8818-0:2321:3242":{"id":"a:2:8606:8818-0:2321:3242","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8606:8818","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalNumeric","id":"0:2321:3242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1086:1525":{"id":"0:1086:1525","crate_id":0,"name":"sub","span":{"filename":"src/naive/date.rs","begin":[2005,4],"end":[2007,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"OldDuration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2275:3208":{"id":"0:2275:3208","crate_id":0,"name":"IsoYearMod100","span":{"filename":"src/format/mod.rs","begin":[120,4],"end":[120,17]},"visibility":"default","docs":"Year in the ISO week date, modulo 100 (FW=PW=2). Cannot be negative.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:1281:3085":{"id":"0:1281:3085","crate_id":0,"name":"from_str","span":{"filename":"src/naive/datetime/mod.rs","begin":[1897,4],"end":[1922,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:906:2133","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:782":{"id":"0:782","crate_id":0,"name":null,"span":{"filename":"src/format/parse.rs","begin":[527,0],"end":[538,1]},"visibility":"default","docs":"Accepts a relaxed form of RFC3339.\nA space or a 'T' are acepted as the separator between the date and time\nparts. Additional spaces are allowed between each component.\n\nAll of these examples are equivalent:\n```\n# use chrono::{DateTime, offset::FixedOffset};\n\"2012-12-12T12:12:12Z\".parse::<DateTime<FixedOffset>>()?;\n\"2012-12-12 12:12:12Z\".parse::<DateTime<FixedOffset>>()?;\n\"2012-  12-12T12:  12:12Z\".parse::<DateTime<FixedOffset>>()?;\n# Ok::<(), chrono::ParseError>(())\n```","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:12066:3084","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:783:132","0:784:3085"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2545:660":{"id":"0:2545:660","crate_id":0,"name":"eq","span":{"filename":"src/format/mod.rs","begin":[374,23],"end":[374,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ParseError","id":"0:2536:2132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:682-0:2761:2117":{"id":"b:5:682-0:2761:2117","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:684:9349","5:685:9350","5:686:9351"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1162:1002":{"id":"0:1162:1002","crate_id":0,"name":"new","span":{"filename":"src/naive/datetime/mod.rs","begin":[101,4],"end":[103,5]},"visibility":"public","docs":"Makes a new `NaiveDateTime` from date and time components.\nEquivalent to [`date.and_time(time)`](./struct.NaiveDate.html#method.and_time)\nand many other helper constructors on `NaiveDate`.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveTime, NaiveDateTime};\n\nlet d = NaiveDate::from_ymd_opt(2015, 6, 3).unwrap();\nlet t = NaiveTime::from_hms_milli_opt(12, 34, 56, 789).unwrap();\n\nlet dt = NaiveDateTime::new(d, t);\nassert_eq!(dt.date(), d);\nassert_eq!(dt.time(), t);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["date",{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["time",{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:231":{"id":"0:231","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[502,0],"end":[509,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Add","id":"2:2845:2284","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:233:203","0:234:301"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1401:6654":{"id":"0:1401:6654","crate_id":0,"name":"from_hms_milli","span":{"filename":"src/naive/time/mod.rs","begin":[283,4],"end":[285,5]},"visibility":"public","docs":"Makes a new `NaiveTime` from hour, minute, second and millisecond.\n\nThe millisecond part can exceed 1,000\nin order to represent the [leap second](#leap-second-handling).\n\n# Panics\n\nPanics on invalid hour, minute, second and/or millisecond.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `from_hms_milli_opt()` instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"use `from_hms_milli_opt()` instead"},"inner":{"function":{"decl":{"inputs":[["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}],["milli",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1573":{"id":"0:1573","crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[246,0],"end":[253,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:2850:2288","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:1575:203","0:1576:1525"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:408:2681":{"id":"0:408:2681","crate_id":0,"name":"with_day0","span":{"filename":"src/datetime/mod.rs","begin":[1047,4],"end":[1049,5]},"visibility":"default","docs":"Makes a new `DateTime` with the month number (starting from 0) changed.\n\nSee also the [`NaiveDate::with_day0`] method.\n\n# Errors\n\nReturns `None` if:\n- The resulting date does not exist.\n- The value for `day0` is invalid.\n- The local time at the resulting date does not exist or is ambiguous, for example during a\n  daylight saving time transition.","links":{"`NaiveDate::with_day0`":"0:1058:2681"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["day0",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2261-0:2085:127":{"id":"b:2:2261-0:2085:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2255:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2263:2522"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2793:252-0:2389:3299":{"id":"a:2:2793:252-0:2389:3299","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2793:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalFixed","id":"0:2389:3299","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2686:454":{"id":"0:2686:454","crate_id":0,"name":"clone","span":{"filename":"src/naive/datetime/mod.rs","begin":[75,53],"end":[75,58]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1284:60":{"id":"0:1284:60","crate_id":0,"name":"default","span":{"filename":"src/naive/datetime/mod.rs","begin":[1937,4],"end":[1939,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1429:3040":{"id":"0:1429:3040","crate_id":0,"name":"second","span":{"filename":"src/naive/time/mod.rs","begin":[902,4],"end":[904,5]},"visibility":"default","docs":"Returns the second number from 0 to 59.\n\n# Example\n\n```\nuse chrono::{NaiveTime, Timelike};\n\nassert_eq!(NaiveTime::from_hms_opt(0, 0, 0).unwrap().second(), 0);\nassert_eq!(NaiveTime::from_hms_nano_opt(23, 56, 4, 12_345_678).unwrap().second(), 4);\n```\n\nThis method never returns 60 even when it is a leap second.\n([Why?](#leap-second-handling))\nUse the proper [formatting method](#method.format) to get a human-readable representation.\n\n```\n# use chrono::{NaiveTime, Timelike};\nlet leap = NaiveTime::from_hms_milli_opt(23, 59, 59, 1_000).unwrap();\nassert_eq!(leap.second(), 59);\nassert_eq!(leap.format(\"%H:%M:%S\").to_string(), \"23:59:60\");\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2567-0:2264:3194":{"id":"b:2:2567-0:2264:3194","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Numeric","id":"0:2264:3194","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2570:3122"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2048:2672":{"id":"0:2048:2672","crate_id":0,"name":"day","span":{"filename":"src/traits.rs","begin":[60,4],"end":[60,25]},"visibility":"default","docs":"Returns the day of month starting from 1.\n\nThe return value ranges from 1 to 31. (The last day of month differs by months.)","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:65:972":{"id":"0:65:972","crate_id":0,"name":"mul","span":{"filename":"src/duration.rs","begin":[362,4],"end":[368,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"primitive":"i32"}]],"output":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2161:2526":{"id":"0:2161:2526","crate_id":0,"name":"DelayedFormat","span":{"filename":"src/format/formatting.rs","begin":[51,0],"end":[65,1]},"visibility":"public","docs":"A *temporary* object which can be used as an argument to `format!` or others.\nThis is normally constructed via `format` methods of each date and time type.","links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\"))]"],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:565","a:2:2793:252-0:2161:2526","a:2:2776:242-0:2161:2526","a:2:8606:8818-0:2161:2526","a:2:2833:8772-0:2161:2526","a:2:8607:8817-0:2161:2526","b:2:2571-0:2161:2526","b:2:2577-0:2161:2526","b:2:2582-0:2161:2526","b:2:2261-0:2161:2526","b:2:3412-0:2161:2526","b:2:2264-0:2161:2526","b:2:2567-0:2161:2526","b:5:5792-0:2161:2526","0:2167","0:572"]}}},"0:1069:301":{"id":"0:1069:301","crate_id":0,"name":"add","span":{"filename":"src/naive/date.rs","begin":[1891,4],"end":[1893,5]},"visibility":"default","docs":"An addition of months to `NaiveDate` clamped to valid days in resulting month.\n\n# Panics\n\nPanics if the resulting date would be out of range.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Months};\n\nlet from_ymd = |y, m, d| NaiveDate::from_ymd_opt(y, m, d).unwrap();\n\nassert_eq!(from_ymd(2014, 1, 1) + Months::new(1), from_ymd(2014, 2, 1));\nassert_eq!(from_ymd(2014, 1, 1) + Months::new(11), from_ymd(2014, 12, 1));\nassert_eq!(from_ymd(2014, 1, 1) + Months::new(12), from_ymd(2015, 1, 1));\nassert_eq!(from_ymd(2014, 1, 1) + Months::new(13), from_ymd(2015, 2, 1));\nassert_eq!(from_ymd(2014, 1, 31) + Months::new(1), from_ymd(2014, 2, 28));\nassert_eq!(from_ymd(2020, 1, 31) + Months::new(1), from_ymd(2020, 2, 29));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["months",{"resolved_path":{"name":"Months","id":"0:3225:2145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:2845:2284","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1453:1525":{"id":"0:1453:1525","crate_id":0,"name":"sub","span":{"filename":"src/naive/time/mod.rs","begin":[1221,4],"end":[1225,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"Duration","id":"2:44300:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2681:1100":{"id":"0:2681:1100","crate_id":0,"name":"partial_cmp","span":{"filename":"src/naive/datetime/mod.rs","begin":[75,30],"end":[75,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::option::Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:30807:200","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2431":{"id":"0:2431","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[285,9],"end":[285,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9531:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetFormat","id":"0:2426:3314","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2432:718"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2577-0:2106:2104":{"id":"b:2:2577-0:2106:2104","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2547:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRangeError","id":"0:2106:2104","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2580:133","2:2581:1590"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2577-0:2761:2117":{"id":"b:2:2577-0:2761:2117","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2547:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2580:133","2:2581:1590"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:682-0:3059:2118":{"id":"b:5:682-0:3059:2118","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Utc","id":"0:3059:2118","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:684:9349","5:685:9350","5:686:9351"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2264-0:2120:2106":{"id":"b:2:2264-0:2120:2106","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2258:101","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["2:2266:7207"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1873:2122":{"id":"0:1873:2122","crate_id":0,"name":"Offset","span":{"filename":"src/offset/utc.rs","begin":[112,4],"end":[112,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Utc","id":"0:3059:2118","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:167:2640":{"id":"0:167:2640","crate_id":0,"name":"signed_duration_since","span":{"filename":"src/date.rs","begin":[289,4],"end":[291,5]},"visibility":"public","docs":"Subtracts another `Date` from the current date.\nReturns a `Duration` of integral numbers.\n\nThis does not overflow or underflow at all,\nas all possible output fits in the range of `Duration`.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz2"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"OldDuration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Tz2","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:491:203":{"id":"0:491:203","crate_id":0,"name":"Output","span":{"filename":"src/datetime/mod.rs","begin":[1315,4],"end":[1315,30]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"b:2:2567-0:2243:3177":{"id":"b:2:2567-0:2243:3177","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Pad","id":"0:2243:3177","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2570:3122"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2473:196":{"id":"0:2473:196","crate_id":0,"name":"None","span":{"filename":"src/format/mod.rs","begin":[322,4],"end":[322,8]},"visibility":"default","docs":"No separator","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:2467":{"id":"0:2467","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[298,40],"end":[298,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2330:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetPrecision","id":"0:2445:3316","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:527:729":{"id":"0:527:729","crate_id":0,"name":"format","span":{"filename":"src/format/mod.rs","begin":[4,0],"end":[544,1]},"visibility":"public","docs":"Formatting (and parsing) utilities for date and time.\n\nThis module provides the common types and routines to implement,\nfor example, [`DateTime::format`](../struct.DateTime.html#method.format) or\n[`DateTime::parse_from_str`](../struct.DateTime.html#method.parse_from_str) methods.\nFor most cases you should use these high-level interfaces.\n\nInternally the formatting and parsing shares the same abstract **formatting items**,\nwhich are just an [`Iterator`](https://doc.rust-lang.org/std/iter/trait.Iterator.html) of\nthe [`Item`](./enum.Item.html) type.\nThey are generated from more readable **format strings**;\ncurrently Chrono supports a built-in syntax closely resembling\nC's `strftime` format. The available options can be found [here](./strftime/index.html).\n\n# Example\n```rust\nuse chrono::{NaiveDateTime, TimeZone, Utc};\n\nlet date_time = Utc.with_ymd_and_hms(2020, 11, 10, 0, 1, 32).unwrap();\n\nlet formatted = format!(\"{}\", date_time.format(\"%Y-%m-%d %H:%M:%S\"));\nassert_eq!(formatted, \"2020-11-10 00:01:32\");\n\nlet parsed = NaiveDateTime::parse_from_str(&formatted, \"%Y-%m-%d %H:%M:%S\")?.and_utc();\nassert_eq!(parsed, date_time);\n# Ok::<(), chrono::ParseError>(())\n```","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:835:3169","0:887-0:577:729","0:888-0:581:3172","0:889-0:2161:2526","0:893-0:749:2713","0:894-0:755:2714","0:895-0:2170:2717","0:896-0:2209:2527","0:2243:3177","0:2264:3194","0:2321:3242","0:2334:2716","0:2389:3299","0:2426:3314","0:2445:3316","0:2472:3319","0:2493:168","0:2536:2132","0:2553:3365","0:906:2133"],"is_stripped":false}}},"b:2:3412-0:2334:2716":{"id":"b:2:3412-0:2334:2716","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3410:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Fixed","id":"0:2334:2716","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3414:1603"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:3177:3424":{"id":"0:3177:3424","crate_id":0,"name":"March","span":{"filename":"src/month.rs","begin":[41,4],"end":[41,13]},"visibility":"default","docs":"March","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":{"expr":"2","value":"2"}}}},"0:467":{"id":"0:467","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1258,0],"end":[1265,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:2850:2288","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:469:203","0:470:1525"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:662:3772":{"id":"0:662:3772","crate_id":0,"name":"set_isoyear","span":{"filename":"src/format/parsed.rs","begin":[158,4],"end":[160,5]},"visibility":"public","docs":"Tries to set the [`isoyear`](#structfield.isoyear) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:906:2133","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2264-0:2648:4960":{"id":"b:2:2264-0:2648:4960","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2258:101","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateWeeksIterator","id":"0:2648:4960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2266:7207"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1213:2677":{"id":"0:1213:2677","crate_id":0,"name":"with_year","span":{"filename":"src/naive/datetime/mod.rs","begin":[1172,4],"end":[1174,5]},"visibility":"default","docs":"Makes a new `NaiveDateTime` with the year number changed, while keeping the same month and\nday.\n\nSee also the [`NaiveDate::with_year`] method.\n\n# Errors\n\nReturns `None` if the resulting date does not exist, or when the `NaiveDateTime` would be\nout of range.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Datelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2015, 9, 25).unwrap().and_hms_opt(12, 34, 56).unwrap();\nassert_eq!(dt.with_year(2016), Some(NaiveDate::from_ymd_opt(2016, 9, 25).unwrap().and_hms_opt(12, 34, 56).unwrap()));\nassert_eq!(dt.with_year(-308), Some(NaiveDate::from_ymd_opt(-308, 9, 25).unwrap().and_hms_opt(12, 34, 56).unwrap()));\n```","links":{"`NaiveDate::with_year`":"0:1054:2677"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["year",{"primitive":"i32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:221":{"id":"0:221","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[484,0],"end":[488,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["gt","lt","le","ge"],"trait":{"name":"PartialOrd","id":"2:2367:206","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:223:1100"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2472:3319":{"id":"0:2472:3319","crate_id":0,"name":"Colons","span":{"filename":"src/format/mod.rs","begin":[320,0],"end":[327,1]},"visibility":"public","docs":"The separator between hours and minutes in an offset.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:2473:196","0:2475:3343","0:2477:3345"],"impls":["a:2:2793:252-0:2472:3319","a:2:2776:242-0:2472:3319","a:2:8606:8818-0:2472:3319","a:2:2833:8772-0:2472:3319","a:2:8607:8817-0:2472:3319","b:2:2571-0:2472:3319","b:2:2577-0:2472:3319","b:2:2582-0:2472:3319","b:2:2261-0:2472:3319","b:2:3412-0:2472:3319","b:2:2264-0:2472:3319","b:2:2567-0:2472:3319","b:5:682-0:2472:3319","0:2488","0:2485","0:2481","0:2484","0:2490","0:2482","0:2479","0:2487"]}}},"b:5:682-0:2742:2121":{"id":"b:5:682-0:2742:2121","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:684:9349","5:685:9350","5:686:9351"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2311":{"id":"0:2311","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[105,16],"end":[105,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2325:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Numeric","id":"0:2264:3194","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2312:660"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2264-0:2426:3314":{"id":"b:2:2264-0:2426:3314","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2258:101","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetFormat","id":"0:2426:3314","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2266:7207"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:5792-0:3246:2146":{"id":"b:5:5792-0:3246:2146","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9536:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5790:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseMonthError","id":"0:3246:2146","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5794:1565"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2148":{"id":"0:2148","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[51,33],"end":[51,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(clippy :: manual_non_exhaustive)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2786:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SecondsFormat","id":"0:2127:2112","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2339:3256":{"id":"0:2339:3256","crate_id":0,"name":"ShortWeekdayName","span":{"filename":"src/format/mod.rs","begin":[189,4],"end":[189,20]},"visibility":"default","docs":"Abbreviated day of the week names.\n\nPrints a three-letter-long name in the title case, reads the same name in any case.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:365":{"id":"0:365","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[701,0],"end":[709,1]},"visibility":"default","docs":"Convert a `DateTime<Local>` instance into a `DateTime<Utc>` instance.","links":{},"attrs":["#[cfg(feature = \"clock\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Local","id":"0:3052:2107","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::offset::Utc","id":"0:3059:2118","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:366:744"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2765:660":{"id":"0:2765:660","crate_id":0,"name":"eq","span":{"filename":"src/offset/fixed.rs","begin":[25,9],"end":[25,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1883":{"id":"0:1883","crate_id":0,"name":null,"span":{"filename":"src/offset/utc.rs","begin":[145,0],"end":[149,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9536:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Utc","id":"0:3059:2118","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1884:718"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3062":{"id":"0:3062","crate_id":0,"name":null,"span":{"filename":"src/offset/utc.rs","begin":[43,15],"end":[43,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Utc","id":"0:3059:2118","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3063:454"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3064":{"id":"0:3064","crate_id":0,"name":null,"span":{"filename":"src/offset/utc.rs","begin":[43,22],"end":[43,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2786:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Utc","id":"0:3059:2118","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3079:1725":{"id":"0:3079:1725","crate_id":0,"name":"0","span":{"filename":"src/offset/mod.rs","begin":[47,11],"end":[47,12]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"generic":"T"}}},"0:1079":{"id":"0:1079","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[1961,0],"end":[1968,1]},"visibility":"default","docs":"A subtraction of `Duration` from `NaiveDate` discards the fractional days,\nrounding to the closest integral number of days towards `Duration::zero()`.\nIt is the same as the addition with a negated `Duration`.\n\nPanics on underflow or overflow. Use [`NaiveDate::checked_sub_signed`] to detect that.\n\n# Example\n\n```\nuse chrono::{Duration, NaiveDate};\n\nlet from_ymd = |y, m, d| NaiveDate::from_ymd_opt(y, m, d).unwrap();\n\nassert_eq!(from_ymd(2014, 1, 1) - Duration::zero(),             from_ymd(2014, 1, 1));\nassert_eq!(from_ymd(2014, 1, 1) - Duration::seconds(86399),     from_ymd(2014, 1, 1));\nassert_eq!(from_ymd(2014, 1, 1) - Duration::seconds(-86399),    from_ymd(2014, 1, 1));\nassert_eq!(from_ymd(2014, 1, 1) - Duration::days(1),            from_ymd(2013, 12, 31));\nassert_eq!(from_ymd(2014, 1, 1) - Duration::days(-1),           from_ymd(2014, 1, 2));\nassert_eq!(from_ymd(2014, 1, 1) - Duration::days(364),          from_ymd(2013, 1, 2));\nassert_eq!(from_ymd(2014, 1, 1) - Duration::days(365*4 + 1),    from_ymd(2010, 1, 1));\nassert_eq!(from_ymd(2014, 1, 1) - Duration::days(365*400 + 97), from_ymd(1614, 1, 1));\n```\n\n[`NaiveDate::checked_sub_signed`]: crate::NaiveDate::checked_sub_signed","links":{"crate::NaiveDate::checked_sub_signed":"0:1025:2635"},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:2850:2288","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1080:203","0:1081:1525"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2361:3286":{"id":"0:2361:3286","crate_id":0,"name":"TimezoneOffsetTripleColon","span":{"filename":"src/format/mod.rs","begin":[233,4],"end":[233,29]},"visibility":"default","docs":"Offset from the local time to UTC without minutes (`+09` or `-04` or `+00`).\n\nIn the parser, the colon can be omitted and/or surrounded with any amount of whitespace.\nThe offset is limited from `-24` to `+24`,\nwhich is the same as [`FixedOffset`](../offset/struct.FixedOffset.html)'s range.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:2582-0:2120:2106":{"id":"b:2:2582-0:2120:2106","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["2:2585:133","2:2586:1588"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8607:8817-0:2648:4960":{"id":"a:2:8607:8817-0:2648:4960","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8607:8817","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateWeeksIterator","id":"0:2648:4960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:78":{"id":"0:78","crate_id":0,"name":null,"span":{"filename":"src/duration.rs","begin":[403,0],"end":[435,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9536:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:79:718"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:893-0:749:2713":{"id":"0:893-0:749:2713","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[73,16],"end":[73,21]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"parse::parse","name":"parse","id":"0:749:2713","glob":false}}},"0:2598":{"id":"0:2598","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[134,29],"end":[134,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2330:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Days","id":"0:2589:2135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2678:781":{"id":"0:2678:781","crate_id":0,"name":"hash","span":{"filename":"src/naive/datetime/mod.rs","begin":[75,24],"end":[75,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9755:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2480:718":{"id":"0:2480:718","crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[319,9],"end":[319,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9506:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9487:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2437":{"id":"0:2437","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[285,29],"end":[285,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2325:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetFormat","id":"0:2426:3314","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2438:660"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2439":{"id":"0:2439","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[285,40],"end":[285,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2787:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetFormat","id":"0:2426:3314","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8607:8817-0:2628:4959":{"id":"a:2:8607:8817-0:2628:4959","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8607:8817","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateDaysIterator","id":"0:2628:4959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8606:8818-0:2161:2526":{"id":"a:2:8606:8818-0:2161:2526","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:8606:8818","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8606:8818","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DelayedFormat","id":"0:2161:2526","args":{"angle_bracketed":{"args":[{"type":{"generic":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:3071:781":{"id":"0:3071:781","crate_id":0,"name":"hash","span":{"filename":"src/offset/utc.rs","begin":[43,37],"end":[43,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9755:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2793:252-0:3170:2114":{"id":"a:2:2793:252-0:3170:2114","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2793:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Month","id":"0:3170:2114","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2610:2119":{"id":"0:2610:2119","crate_id":0,"name":"NaiveDate","span":{"filename":"src/naive/date.rs","begin":[195,0],"end":[197,1]},"visibility":"public","docs":"ISO 8601 calendar date without timezone.\nAllows for every [proleptic Gregorian date] from Jan 1, 262145 BCE to Dec 31, 262143 CE.\nAlso supports the conversion from ISO 8601 ordinal and week date.\n\n# Calendar Date\n\nThe ISO 8601 **calendar date** follows the proleptic Gregorian calendar.\nIt is like a normal civil calendar but note some slight differences:\n\n* Dates before the Gregorian calendar's inception in 1582 are defined via the extrapolation.\n  Be careful, as historical dates are often noted in the Julian calendar and others\n  and the transition to Gregorian may differ across countries (as late as early 20C).\n\n  (Some example: Both Shakespeare from Britain and Cervantes from Spain seemingly died\n  on the same calendar date---April 23, 1616---but in the different calendar.\n  Britain used the Julian calendar at that time, so Shakespeare's death is later.)\n\n* ISO 8601 calendars has the year 0, which is 1 BCE (a year before 1 CE).\n  If you need a typical BCE/BC and CE/AD notation for year numbers,\n  use the [`Datelike::year_ce`](../trait.Datelike.html#method.year_ce) method.\n\n# Week Date\n\nThe ISO 8601 **week date** is a triple of year number, week number\nand [day of the week](../enum.Weekday.html) with the following rules:\n\n* A week consists of Monday through Sunday, and is always numbered within some year.\n  The week number ranges from 1 to 52 or 53 depending on the year.\n\n* The week 1 of given year is defined as the first week containing January 4 of that year,\n  or equivalently, the first week containing four or more days in that year.\n\n* The year number in the week date may *not* correspond to the actual Gregorian year.\n  For example, January 3, 2016 (Sunday) was on the last (53rd) week of 2015.\n\nChrono's date types default to the ISO 8601 [calendar date](#calendar-date),\nbut [`Datelike::iso_week`](../trait.Datelike.html#tymethod.iso_week) and\n[`Datelike::weekday`](../trait.Datelike.html#tymethod.weekday) methods\ncan be used to get the corresponding week date.\n\n# Ordinal Date\n\nThe ISO 8601 **ordinal date** is a pair of year number and day of the year (\"ordinal\").\nThe ordinal number ranges from 1 to 365 or 366 depending on the year.\nThe year number is the same as that of the [calendar date](#calendar-date).\n\nThis is currently the internal format of Chrono's date types.\n\n[proleptic Gregorian date]: crate::NaiveDate#calendar-date","links":{"crate::NaiveDate#calendar-date":"0:2610:2119"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:982","a:2:2793:252-0:2610:2119","a:2:2776:242-0:2610:2119","a:2:8606:8818-0:2610:2119","a:2:2833:8772-0:2610:2119","a:2:8607:8817-0:2610:2119","b:2:2571-0:2610:2119","b:2:2577-0:2610:2119","b:2:2582-0:2610:2119","b:2:2261-0:2610:2119","b:2:3412-0:2610:2119","b:2:2264-0:2610:2119","b:2:2567-0:2610:2119","b:5:5792-0:2610:2119","b:5:682-0:2610:2119","0:1073","0:2625","0:1114","0:1076","0:2612","0:1105","0:1044","0:2618","0:2616","0:1082","0:2613","0:2615","0:2626","0:1079","0:1084","0:1087","0:2621","0:1067","0:2623","0:1108","0:1062","0:1110","0:1070","0:1065"]}}},"a:2:8606:8818-0:2426:3314":{"id":"a:2:8606:8818-0:2426:3314","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8606:8818","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetFormat","id":"0:2426:3314","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:3221":{"id":"0:3221","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[31,50],"end":[31,60]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","lt","le","ge"],"trait":{"name":"PartialOrd","id":"2:2367:206","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Month","id":"0:3170:2114","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3222:1100"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1054:2677":{"id":"0:1054:2677","crate_id":0,"name":"with_year","span":{"filename":"src/naive/date.rs","begin":[1675,4],"end":[1684,5]},"visibility":"default","docs":"Makes a new `NaiveDate` with the year number changed, while keeping the same month and day.\n\n# Errors\n\nReturns `None` if the resulting date does not exist, or when the `NaiveDate` would be\nout of range.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().with_year(2016),\n           Some(NaiveDate::from_ymd_opt(2016, 9, 8).unwrap()));\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().with_year(-308),\n           Some(NaiveDate::from_ymd_opt(-308, 9, 8).unwrap()));\n```\n\nA leap day (February 29) is a good example that this method can return `None`.\n\n```\n# use chrono::{NaiveDate, Datelike};\nassert!(NaiveDate::from_ymd_opt(2016, 2, 29).unwrap().with_year(2015).is_none());\nassert!(NaiveDate::from_ymd_opt(2016, 2, 29).unwrap().with_year(2020).is_some());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["year",{"primitive":"i32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1043:2327":{"id":"0:1043:2327","crate_id":0,"name":"MAX","span":{"filename":"src/naive/date.rs","begin":[1463,4],"end":[1463,94]},"visibility":"public","docs":"The maximum possible `NaiveDate` (December 31, 262143 CE).","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":"_"}}},"b:5:5792-0:2536:2132":{"id":"b:5:5792-0:2536:2132","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9536:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5790:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:2536:2132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5794:1565"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8607:8817-0:2610:2119":{"id":"a:2:8607:8817-0:2610:2119","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8607:8817","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:226:461":{"id":"0:226:461","crate_id":0,"name":"cmp","span":{"filename":"src/date.rs","begin":[491,4],"end":[493,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Ordering","id":"2:30807:200","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2261-0:2426:3314":{"id":"b:2:2261-0:2426:3314","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2255:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetFormat","id":"0:2426:3314","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2263:2522"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2654:454":{"id":"0:2654:454","crate_id":0,"name":"clone","span":{"filename":"src/naive/date.rs","begin":[2053,22],"end":[2053,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"NaiveDateWeeksIterator","id":"0:2648:4960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1367":{"id":"0:1367","crate_id":0,"name":null,"span":{"filename":"src/naive/isoweek.rs","begin":[135,0],"end":[146,1]},"visibility":"default","docs":"The `Debug` output of the ISO week `w` is the same as\n[`d.format(\"%G-W%V\")`](../format/strftime/index.html)\nwhere `d` is any `NaiveDate` value in that week.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(format!(\"{:?}\", NaiveDate::from_ymd_opt(2015,  9,  5).unwrap().iso_week()), \"2015-W36\");\nassert_eq!(format!(\"{:?}\", NaiveDate::from_ymd_opt(   0,  1,  3).unwrap().iso_week()), \"0000-W01\");\nassert_eq!(format!(\"{:?}\", NaiveDate::from_ymd_opt(9999, 12, 31).unwrap().iso_week()), \"9999-W52\");\n```\n\nISO 8601 requires an explicit sign for years before 1 BCE or after 9999 CE.\n\n```\n# use chrono::{NaiveDate, Datelike};\nassert_eq!(format!(\"{:?}\", NaiveDate::from_ymd_opt(    0,  1,  2).unwrap().iso_week()),  \"-0001-W52\");\nassert_eq!(format!(\"{:?}\", NaiveDate::from_ymd_opt(10000, 12, 31).unwrap().iso_week()), \"+10000-W52\");\n```","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9531:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IsoWeek","id":"0:2724:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1368:718"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:686:9351":{"id":"5:686:9351","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3104:781":{"id":"0:3104:781","crate_id":0,"name":"hash","span":{"filename":"src/offset/mod.rs","begin":[41,44],"end":[41,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9755:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3215:454":{"id":"0:3215:454","crate_id":0,"name":"clone","span":{"filename":"src/month.rs","begin":[31,30],"end":[31,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Month","id":"0:3170:2114","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:50:2393":{"id":"0:50:2393","crate_id":0,"name":"zero","span":{"filename":"src/duration.rs","begin":[280,4],"end":[282,5]},"visibility":"public","docs":"A duration where the stored seconds and nanoseconds are equal to zero.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:474:1525":{"id":"0:474:1525","crate_id":0,"name":"sub","span":{"filename":"src/datetime/mod.rs","begin":[1271,4],"end":[1275,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"Duration","id":"2:44300:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1007:2565":{"id":"0:1007:2565","crate_id":0,"name":"and_time","span":{"filename":"src/naive/date.rs","begin":[822,4],"end":[824,5]},"visibility":"public","docs":"Makes a new `NaiveDateTime` from the current date and given `NaiveTime`.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveTime, NaiveDateTime};\n\nlet d = NaiveDate::from_ymd_opt(2015, 6, 3).unwrap();\nlet t = NaiveTime::from_hms_milli_opt(12, 34, 56, 789).unwrap();\n\nlet dt: NaiveDateTime = d.and_time(t);\nassert_eq!(dt.date(), d);\nassert_eq!(dt.time(), t);\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["time",{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1540:132":{"id":"0:1540:132","crate_id":0,"name":"Err","span":{"filename":"src/offset/fixed.rs","begin":[119,4],"end":[119,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"ParseError","id":"0:2536:2132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:2038-0:3246:2146":{"id":"0:2038-0:3246:2146","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[548,31],"end":[548,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"month::ParseMonthError","name":"ParseMonthError","id":"0:3246:2146","glob":false}}},"2:12435:39461":{"id":"2:12435:39461","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\", suggestion =\n\"lines\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:43790:8555","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:854:168":{"id":"0:854:168","crate_id":0,"name":"Item","span":{"filename":"src/format/strftime.rs","begin":[204,4],"end":[204,25]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Item","id":"0:2493:168","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}},"0:359":{"id":"0:359","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[665,0],"end":[672,1]},"visibility":"default","docs":"Convert a `DateTime<Utc>` instance into a `DateTime<Local>` instance.","links":{},"attrs":["#[cfg(feature = \"clock\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Utc","id":"0:3059:2118","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::offset::Local","id":"0:3052:2107","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:360:744"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1089":{"id":"0:1089","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[2022,0],"end":[2037,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["eq_by","rposition","try_fold","take","by_ref","fold","take_while","max_by_key","intersperse_with","ne","map","is_sorted","unzip","all","try_for_each","cloned","try_collect","map_while","for_each","find","next_chunk","eq","any","is_sorted_by","array_chunks","reduce","enumerate","collect_into","size_hint","flatten","collect","filter","advance_by","copied","partial_cmp","is_sorted_by_key","product","last","try_reduce","partition","map_windows","min_by","filter_map","nth","flat_map","position","cycle","chain","min","rev","cmp","lt","skip","cmp_by","gt","find_map","__iterator_get_unchecked","partition_in_place","fuse","min_by_key","peekable","sum","step_by","scan","partial_cmp_by","try_find","ge","is_partitioned","inspect","zip","skip_while","max","intersperse","count","max_by","le"],"trait":{"name":"Iterator","id":"2:7627:173","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateDaysIterator","id":"0:2628:4959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1090:168","0:1091:1016","0:1092:5549"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2269:3201":{"id":"0:2269:3201","crate_id":0,"name":"YearMod100","span":{"filename":"src/format/mod.rs","begin":[113,4],"end":[113,14]},"visibility":"default","docs":"Gregorian year modulo 100 (FW=PW=2). Cannot be negative.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"a:2:2776:242-0:2536:2132":{"id":"a:2:2776:242-0:2536:2132","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2776:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:2536:2132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:28:2331":{"id":"0:28:2331","crate_id":0,"name":"weeks","span":{"filename":"src/duration.rs","begin":[78,4],"end":[81,5]},"visibility":"public","docs":"Makes a new `Duration` with given number of weeks.\nEquivalent to `Duration::seconds(weeks * 7 * 24 * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["weeks",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2305:3241":{"id":"0:2305:3241","crate_id":0,"name":"Internal","span":{"filename":"src/format/mod.rs","begin":[157,4],"end":[157,29]},"visibility":"default","docs":"Internal uses only.\n\nThis item exists so that one can add additional internal-only formatting\nwithout breaking major compatibility (as enum variants cannot be selectively private).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:2307:1725"]},"discriminant":null}}},"0:1223:2682":{"id":"0:1223:2682","crate_id":0,"name":"with_ordinal","span":{"filename":"src/naive/datetime/mod.rs","begin":[1293,4],"end":[1295,5]},"visibility":"default","docs":"Makes a new `NaiveDateTime` with the day of year (starting from 1) changed.\n\nSee also the [`NaiveDate::with_ordinal`] method.\n\n# Errors\n\nReturns `None` if the resulting date does not exist, or if the value for `ordinal` is\ninvalid.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Datelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().and_hms_opt(12, 34, 56).unwrap();\nassert_eq!(dt.with_ordinal(60),\n           Some(NaiveDate::from_ymd_opt(2015, 3, 1).unwrap().and_hms_opt(12, 34, 56).unwrap()));\nassert_eq!(dt.with_ordinal(366), None); // 2015 had only 365 days\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2016, 9, 8).unwrap().and_hms_opt(12, 34, 56).unwrap();\nassert_eq!(dt.with_ordinal(60),\n           Some(NaiveDate::from_ymd_opt(2016, 2, 29).unwrap().and_hms_opt(12, 34, 56).unwrap()));\nassert_eq!(dt.with_ordinal(366),\n           Some(NaiveDate::from_ymd_opt(2016, 12, 31).unwrap().and_hms_opt(12, 34, 56).unwrap()));\n```","links":{"`NaiveDate::with_ordinal`":"0:1059:2682"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["ordinal",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2432:718":{"id":"0:2432:718","crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[285,9],"end":[285,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9506:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9487:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2582-0:2668:2120":{"id":"b:2:2582-0:2668:2120","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2585:133","2:2586:1588"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12513:39471":{"id":"2:12513:39471","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12067:450","self::pattern":"2:12106:8527"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12111:8541","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12111:8541","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12126:8543","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2353:3272":{"id":"0:2353:3272","crate_id":0,"name":"Nanosecond9","span":{"filename":"src/format/mod.rs","begin":[211,4],"end":[211,15]},"visibility":"default","docs":"Same as [`Nanosecond`](#variant.Nanosecond) but the accuracy is fixed to 9.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:3211":{"id":"0:3211","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[31,20],"end":[31,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2330:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Month","id":"0:3170:2114","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3213":{"id":"0:3213","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[31,24],"end":[31,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2788:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Month","id":"0:3170:2114","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:325:2832":{"id":"0:325:2832","crate_id":0,"name":"timestamp_subsec_micros","span":{"filename":"src/datetime/mod.rs","begin":[326,4],"end":[328,5]},"visibility":"public","docs":"Returns the number of microseconds since the last second boundary.\n\nIn event of a leap second this may exceed 999,999.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2582-0:2389:3299":{"id":"b:2:2582-0:2389:3299","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalFixed","id":"0:2389:3299","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2585:133","2:2586:1588"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2571-0:3160:2143":{"id":"b:2:2571-0:3160:2143","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseWeekdayError","id":"0:3160:2143","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2573:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:144:2578":{"id":"0:144:2578","crate_id":0,"name":"and_hms_opt","span":{"filename":"src/date.rs","begin":[111,4],"end":[113,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date, hour, minute and second.\nThe offset in the current date is preserved.\n\nReturns `None` on invalid hour, minute and/or second.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2526":{"id":"0:2526","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[330,27],"end":[330,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2330:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Item","id":"0:2493:168","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:203:2680":{"id":"0:203:2680","crate_id":0,"name":"with_day","span":{"filename":"src/date.rs","begin":[452,4],"end":[454,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["day",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:400:2677":{"id":"0:400:2677","crate_id":0,"name":"with_year","span":{"filename":"src/datetime/mod.rs","begin":[983,4],"end":[985,5]},"visibility":"default","docs":"Makes a new `DateTime` with the year number changed, while keeping the same month and day.\n\nSee also the [`NaiveDate::with_year`] method.\n\n# Errors\n\nReturns `None` if:\n- The resulting date does not exist.\n- When the `NaiveDateTime` would be out of range.\n- The local time at the resulting date does not exist or is ambiguous, for example during a\n  daylight saving time transition.","links":{"`NaiveDate::with_year`":"0:1054:2677"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["year",{"primitive":"i32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1919:3100":{"id":"0:1919:3100","crate_id":0,"name":"timestamp_millis_opt","span":{"filename":"src/offset/mod.rs","begin":[417,4],"end":[422,5]},"visibility":"default","docs":"Makes a new `DateTime` from the number of non-leap milliseconds\nsince January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\").\n\n\nReturns `LocalResult::None` on out-of-range number of milliseconds\nand/or invalid nanosecond, otherwise always returns\n`LocalResult::Single`.\n\n# Example\n\n```\nuse chrono::{Utc, TimeZone, LocalResult};\nmatch Utc.timestamp_millis_opt(1431648000) {\n    LocalResult::Single(dt) => assert_eq!(dt.timestamp(), 1431648),\n    _ => panic!(\"Incorrect timestamp_millis\"),\n};\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["millis",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"LocalResult","id":"0:3073:2138","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3412-0:3073:2138":{"id":"b:2:3412-0:3073:2138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3410:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LocalResult","id":"0:3073:2138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:3414:1603"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:38:2366":{"id":"0:38:2366","crate_id":0,"name":"num_hours","span":{"filename":"src/duration.rs","begin":[162,4],"end":[164,5]},"visibility":"public","docs":"Returns the total number of whole hours in the duration.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:49:2391":{"id":"0:49:2391","crate_id":0,"name":"max_value","span":{"filename":"src/duration.rs","begin":[274,4],"end":[276,5]},"visibility":"public","docs":"The maximum possible `Duration`: `i64::MAX` milliseconds.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2215:454":{"id":"0:2215:454","crate_id":0,"name":"clone","span":{"filename":"src/format/strftime.rs","begin":[165,9],"end":[165,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"StrftimeItems","id":"0:2209:2527","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2261":{"id":"0:2261","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[82,44],"end":[82,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9747:148","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Pad","id":"0:2243:3177","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2262:781"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1207:2672":{"id":"0:1207:2672","crate_id":0,"name":"day","span":{"filename":"src/naive/datetime/mod.rs","begin":[1069,4],"end":[1071,5]},"visibility":"default","docs":"Returns the day of month starting from 1.\n\nThe return value ranges from 1 to 31. (The last day of month differs by months.)\n\nSee also the [`NaiveDate::day`](./struct.NaiveDate.html#method.day) method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Datelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2015, 9, 25).unwrap().and_hms_opt(12, 34, 56).unwrap();\nassert_eq!(dt.day(), 25);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3137:3842":{"id":"0:3137:3842","crate_id":0,"name":"Fri","span":{"filename":"src/weekday.rs","begin":[46,4],"end":[46,11]},"visibility":"default","docs":"Friday.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":{"expr":"4","value":"4"}}}},"2:12414:39458":{"id":"2:12414:39458","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2567-0:2154:2111":{"id":"b:2:2567-0:2154:2111","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["2:2570:3122"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:186":{"id":"0:186","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[398,0],"end":[470,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["num_days_from_ce","year_ce"],"trait":{"name":"Datelike","id":"0:2043:2113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:188:2670","0:189:2144","0:190:2671","0:191:2672","0:192:2673","0:193:2674","0:194:2675","0:195:2142","0:196:2676","0:197:2677","0:199:2678","0:201:2679","0:203:2680","0:205:2681","0:207:2682","0:209:2683"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1068:203":{"id":"0:1068:203","crate_id":0,"name":"Output","span":{"filename":"src/naive/date.rs","begin":[1869,4],"end":[1869,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:1992:3464":{"id":"0:1992:3464","crate_id":0,"name":"number_from_monday","span":{"filename":"src/weekday.rs","begin":[98,4],"end":[100,5]},"visibility":"public","docs":"Returns a day-of-week number starting from Monday = 1. (ISO 8601 weekday number)\n\n`w`:                      | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun`\n------------------------- | ----- | ----- | ----- | ----- | ----- | ----- | -----\n`w.number_from_monday()`: | 1     | 2     | 3     | 4     | 5     | 6     | 7","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1564:203":{"id":"0:1564:203","crate_id":0,"name":"Output","span":{"filename":"src/offset/fixed.rs","begin":[220,4],"end":[220,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"b:2:2571-0:3059:2118":{"id":"b:2:2571-0:3059:2118","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Utc","id":"0:3059:2118","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2573:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:5792-0:2742:2121":{"id":"b:5:5792-0:2742:2121","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9536:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5790:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5794:1565"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:3170:2114":{"id":"0:3170:2114","crate_id":0,"name":"Month","span":{"filename":"src/month.rs","begin":[35,0],"end":[60,1]},"visibility":"public","docs":"The month of the year.\n\nThis enum is just a convenience implementation.\nThe month in dates created by DateLike objects does not return this enum.\n\nIt is possible to convert from a date to a month independently\n```\nuse chrono::prelude::*;\nlet date = Utc.with_ymd_and_hms(2019, 10, 28, 9, 10, 11).unwrap();\n// `2019-10-28T09:10:11Z`\nlet month = Month::try_from(u8::try_from(date.month()).unwrap()).ok();\nassert_eq!(month, Some(Month::October))\n```\nOr from a Month to an integer usable by dates\n```\n# use chrono::prelude::*;\nlet month = Month::January;\nlet dt = Utc.with_ymd_and_hms(2019, month.number_from_month(), 28, 9, 10, 11).unwrap();\nassert_eq!((dt.year(), dt.month(), dt.day()), (2019, 1, 28));\n```\nAllows mapping from and to month, from 1-January to 12-December.\nCan be Serialized/Deserialized with serde","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:3171:3422","0:3174:3423","0:3177:3424","0:3180:3425","0:3183:3426","0:3186:3427","0:3189:3428","0:3192:3429","0:3195:3430","0:3198:3431","0:3201:3432","0:3204:3434"],"impls":["0:2016","a:2:2793:252-0:3170:2114","a:2:2776:242-0:3170:2114","a:2:8606:8818-0:3170:2114","a:2:2833:8772-0:3170:2114","a:2:8607:8817-0:3170:2114","b:2:2571-0:3170:2114","b:2:2577-0:3170:2114","b:2:2582-0:3170:2114","b:2:2261-0:3170:2114","b:2:3412-0:3170:2114","b:2:2264-0:3170:2114","b:2:2567-0:3170:2114","b:5:682-0:3170:2114","0:3211","0:3213","0:3208","0:3216","0:3221","0:3214","0:2024","0:922","0:3223","0:3207","0:3210","0:3218","0:2021"]}}},"b:2:2261-0:3052:2107":{"id":"b:2:2261-0:3052:2107","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2255:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Local","id":"0:3052:2107","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2263:2522"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2776:242-0:2589:2135":{"id":"a:2:2776:242-0:2589:2135","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2776:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Days","id":"0:2589:2135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:149:2595":{"id":"0:149:2595","crate_id":0,"name":"and_hms_micro","span":{"filename":"src/date.rs","begin":[152,4],"end":[154,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date, hour, minute, second and microsecond.\nThe microsecond part can exceed 1,000,000 in order to represent the leap second.\nThe offset in the current date is preserved.\n\nPanics on invalid hour, minute, second and/or microsecond.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"Use and_hms_micro_opt() instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"Use and_hms_micro_opt() instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}],["micro",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:143:2574":{"id":"0:143:2574","crate_id":0,"name":"and_hms","span":{"filename":"src/date.rs","begin":[101,4],"end":[103,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date, hour, minute and second.\nThe offset in the current date is preserved.\n\nPanics on invalid hour, minute and/or second.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"Use and_hms_opt() instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"Use and_hms_opt() instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2603":{"id":"0:2603","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[134,39],"end":[134,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2786:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Days","id":"0:2589:2135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2009:718":{"id":"0:2009:718","crate_id":0,"name":"fmt","span":{"filename":"src/weekday.rs","begin":[240,4],"end":[242,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9506:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9487:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3165":{"id":"0:3165","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[224,16],"end":[224,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2325:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseWeekdayError","id":"0:3160:2143","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3166:660"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:209:2683":{"id":"0:209:2683","crate_id":0,"name":"with_ordinal0","span":{"filename":"src/date.rs","begin":[467,4],"end":[469,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["ordinal0",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2793:252-0:3246:2146":{"id":"a:2:2793:252-0:3246:2146","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2793:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseMonthError","id":"0:3246:2146","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2029:1002":{"id":"0:2029:1002","crate_id":0,"name":"new","span":{"filename":"src/month.rs","begin":[227,4],"end":[229,5]},"visibility":"public","docs":"Construct a new `Months` from a number of months","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["num",{"primitive":"u32"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2793:252-0:2472:3319":{"id":"a:2:2793:252-0:2472:3319","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2793:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Colons","id":"0:2472:3319","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3412-0:3052:2107":{"id":"b:2:3412-0:3052:2107","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3410:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Local","id":"0:3052:2107","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3414:1603"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1049:2673":{"id":"0:1049:2673","crate_id":0,"name":"day0","span":{"filename":"src/naive/date.rs","begin":[1569,4],"end":[1571,5]},"visibility":"default","docs":"Returns the day of month starting from 0.\n\nThe return value ranges from 0 to 30. (The last day of month differs by months.)\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().day0(), 7);\nassert_eq!(NaiveDate::from_ymd_opt(-308, 3, 14).unwrap().day0(), 13);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2571-0:2742:2121":{"id":"b:2:2571-0:2742:2121","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2573:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1208:2673":{"id":"0:1208:2673","crate_id":0,"name":"day0","span":{"filename":"src/naive/datetime/mod.rs","begin":[1088,4],"end":[1090,5]},"visibility":"default","docs":"Returns the day of month starting from 0.\n\nThe return value ranges from 0 to 30. (The last day of month differs by months.)\n\nSee also the [`NaiveDate::day0`](./struct.NaiveDate.html#method.day0) method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Datelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2015, 9, 25).unwrap().and_hms_opt(12, 34, 56).unwrap();\nassert_eq!(dt.day0(), 24);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2309:454":{"id":"0:2309:454","crate_id":0,"name":"clone","span":{"filename":"src/format/mod.rs","begin":[105,9],"end":[105,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Numeric","id":"0:2264:3194","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2450:3333":{"id":"0:2450:3333","crate_id":0,"name":"Seconds","span":{"filename":"src/format/mod.rs","begin":[308,4],"end":[308,11]},"visibility":"default","docs":"Format offset from UTC as hours, minutes and seconds.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:3148:660":{"id":"0:3148:660","crate_id":0,"name":"eq","span":{"filename":"src/weekday.rs","begin":[32,9],"end":[32,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Weekday","id":"0:3124:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3160:2143":{"id":"0:3160:2143","crate_id":0,"name":"ParseWeekdayError","span":{"filename":"src/weekday.rs","begin":[225,0],"end":[227,1]},"visibility":"public","docs":"An error resulting from reading `Weekday` value with `FromStr`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:2793:252-0:3160:2143","a:2:2776:242-0:3160:2143","a:2:8606:8818-0:3160:2143","a:2:2833:8772-0:3160:2143","a:2:8607:8817-0:3160:2143","b:2:2571-0:3160:2143","b:2:2577-0:3160:2143","b:2:2582-0:3160:2143","b:2:2261-0:3160:2143","b:2:3412-0:3160:2143","b:2:2264-0:3160:2143","b:2:2567-0:3160:2143","b:5:5792-0:3160:2143","b:5:682-0:3160:2143","0:3162","0:2008","0:3165","0:3167","0:2005","0:2006","0:3164","0:3168"]}}},"a:2:2776:242-0:3225:2145":{"id":"a:2:2776:242-0:3225:2145","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2776:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Months","id":"0:3225:2145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1110":{"id":"0:1110","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[2172,0],"end":[2191,1]},"visibility":"default","docs":"Parsing a `str` into a `NaiveDate` uses the same format,\n[`%Y-%m-%d`](../format/strftime/index.html), as in `Debug` and `Display`.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet d = NaiveDate::from_ymd_opt(2015, 9, 18).unwrap();\nassert_eq!(\"2015-09-18\".parse::<NaiveDate>(), Ok(d));\n\nlet d = NaiveDate::from_ymd_opt(12345, 6, 7).unwrap();\nassert_eq!(\"+12345-6-7\".parse::<NaiveDate>(), Ok(d));\n\nassert!(\"foo\".parse::<NaiveDate>().is_err());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:12066:3084","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1111:132","0:1112:3085"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2567-0:2610:2119":{"id":"b:2:2567-0:2610:2119","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2570:3122"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1406:2608":{"id":"0:1406:2608","crate_id":0,"name":"from_hms_nano_opt","span":{"filename":"src/naive/time/mod.rs","begin":[415,4],"end":[424,5]},"visibility":"public","docs":"Makes a new `NaiveTime` from hour, minute, second and nanosecond.\n\nThe nanosecond part is allowed to exceed 1,000,000,000 in order to represent a\n[leap second](#leap-second-handling), but only when `sec == 59`.\n\n# Errors\n\nReturns `None` on invalid hour, minute, second and/or nanosecond.\n\n# Example\n\n```\nuse chrono::NaiveTime;\n\nlet from_hmsn_opt = NaiveTime::from_hms_nano_opt;\n\nassert!(from_hmsn_opt(0, 0, 0, 0).is_some());\nassert!(from_hmsn_opt(23, 59, 59, 999_999_999).is_some());\nassert!(from_hmsn_opt(23, 59, 59, 1_999_999_999).is_some()); // a leap second after 23:59:59\nassert!(from_hmsn_opt(24, 0, 0, 0).is_none());\nassert!(from_hmsn_opt(23, 60, 0, 0).is_none());\nassert!(from_hmsn_opt(23, 59, 60, 0).is_none());\nassert!(from_hmsn_opt(23, 59, 59, 2_000_000_000).is_none());\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}],["nano",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1474-0:2589:2135":{"id":"0:1474-0:2589:2135","crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[13,21],"end":[13,25]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::date::Days","name":"Days","id":"0:2589:2135","glob":false}}},"0:2188:3041":{"id":"0:2188:3041","crate_id":0,"name":"nanosecond","span":{"filename":"src/format/parsed.rs","begin":[94,4],"end":[94,31]},"visibility":"public","docs":"The number of nanoseconds since the whole second (0--999,999,999).","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"bindings":[]}}}}}},"0:1560":{"id":"0:1560","crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[210,0],"end":[217,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:2850:2288","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::naive::NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1561:203","0:1562:1525"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2002":{"id":"0:2002","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[193,0],"end":[221,1]},"visibility":"default","docs":"Any weekday can be represented as an integer from 0 to 6, which equals to\n[`Weekday::num_days_from_monday`](#method.num_days_from_monday) in this implementation.\nDo not heavily depend on this though; use explicit methods whenever possible.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["from_u16","from_i32","from_isize","from_usize","from_f64","from_u128","from_i128","from_i8","from_f32","from_u8","from_i16","from_u32"],"trait":{"name":"FromPrimitive","id":"21:162:8064","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Weekday","id":"0:3124:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2003:8065","0:2004:8066"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2066:3040":{"id":"0:2066:3040","crate_id":0,"name":"second","span":{"filename":"src/traits.rs","begin":[287,4],"end":[287,28]},"visibility":"default","docs":"Returns the second number from 0 to 59.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:1907:2122":{"id":"0:1907:2122","crate_id":0,"name":"Offset","span":{"filename":"src/offset/mod.rs","begin":[220,4],"end":[220,24]},"visibility":"default","docs":"An associated offset type.\nThis type is used to store the actual offset in date and time types.\nThe original `TimeZone` value can be recovered via `TimeZone::from_offset`.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Offset","id":"0:1904:2122","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}}},"0:1022:2619":{"id":"0:1022:2619","crate_id":0,"name":"pred","span":{"filename":"src/naive/date.rs","begin":[1105,4],"end":[1107,5]},"visibility":"public","docs":"Makes a new `NaiveDate` for the previous calendar date.\n\n# Panics\n\nPanics when `self` is the first representable date.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `pred_opt()` instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"use `pred_opt()` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2793:252-0:2085:127":{"id":"a:2:2793:252-0:2085:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2793:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2776:242-0:2127:2112":{"id":"a:2:2776:242-0:2127:2112","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2776:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SecondsFormat","id":"0:2127:2112","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12436:37961":{"id":"2:12436:37961","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:43818:8566","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2634:454":{"id":"0:2634:454","crate_id":0,"name":"clone","span":{"filename":"src/naive/date.rs","begin":[2017,22],"end":[2017,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"NaiveDateDaysIterator","id":"0:2628:4959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:835:3169":{"id":"0:835:3169","crate_id":0,"name":"strftime","span":{"filename":"src/format/strftime.rs","begin":[4,0],"end":[925,1]},"visibility":"public","docs":"`strftime`/`strptime`-inspired date and time formatting syntax.\n\n## Specifiers\n\nThe following specifiers are available both to formatting and parsing.\n\n| Spec. | Example  | Description                                                                |\n|-------|----------|----------------------------------------------------------------------------|\n|       |          | **DATE SPECIFIERS:**                                                       |\n| `%Y`  | `2001`   | The full proleptic Gregorian year, zero-padded to 4 digits. chrono supports years from -262144 to 262143. Note: years before 1 BCE or after 9999 CE, require an initial sign (+/-).|\n| `%C`  | `20`     | The proleptic Gregorian year divided by 100, zero-padded to 2 digits. [^1] |\n| `%y`  | `01`     | The proleptic Gregorian year modulo 100, zero-padded to 2 digits. [^1]     |\n|       |          |                                                                            |\n| `%m`  | `07`     | Month number (01--12), zero-padded to 2 digits.                            |\n| `%b`  | `Jul`    | Abbreviated month name. Always 3 letters.                                  |\n| `%B`  | `July`   | Full month name. Also accepts corresponding abbreviation in parsing.       |\n| `%h`  | `Jul`    | Same as `%b`.                                                              |\n|       |          |                                                                            |\n| `%d`  | `08`     | Day number (01--31), zero-padded to 2 digits.                              |\n| `%e`  | ` 8`     | Same as `%d` but space-padded. Same as `%_d`.                              |\n|       |          |                                                                            |\n| `%a`  | `Sun`    | Abbreviated weekday name. Always 3 letters.                                |\n| `%A`  | `Sunday` | Full weekday name. Also accepts corresponding abbreviation in parsing.     |\n| `%w`  | `0`      | Sunday = 0, Monday = 1, ..., Saturday = 6.                                 |\n| `%u`  | `7`      | Monday = 1, Tuesday = 2, ..., Sunday = 7. (ISO 8601)                       |\n|       |          |                                                                            |\n| `%U`  | `28`     | Week number starting with Sunday (00--53), zero-padded to 2 digits. [^2]   |\n| `%W`  | `27`     | Same as `%U`, but week 1 starts with the first Monday in that year instead.|\n|       |          |                                                                            |\n| `%G`  | `2001`   | Same as `%Y` but uses the year number in ISO 8601 week date. [^3]          |\n| `%g`  | `01`     | Same as `%y` but uses the year number in ISO 8601 week date. [^3]          |\n| `%V`  | `27`     | Same as `%U` but uses the week number in ISO 8601 week date (01--53). [^3] |\n|       |          |                                                                            |\n| `%j`  | `189`    | Day of the year (001--366), zero-padded to 3 digits.                       |\n|       |          |                                                                            |\n| `%D`  | `07/08/01`    | Month-day-year format. Same as `%m/%d/%y`.                            |\n| `%x`  | `07/08/01`    | Locale's date representation (e.g., 12/31/99).                        |\n| `%F`  | `2001-07-08`  | Year-month-day format (ISO 8601). Same as `%Y-%m-%d`.                 |\n| `%v`  | ` 8-Jul-2001` | Day-month-year format. Same as `%e-%b-%Y`.                            |\n|       |          |                                                                            |\n|       |          | **TIME SPECIFIERS:**                                                       |\n| `%H`  | `00`     | Hour number (00--23), zero-padded to 2 digits.                             |\n| `%k`  | ` 0`     | Same as `%H` but space-padded. Same as `%_H`.                              |\n| `%I`  | `12`     | Hour number in 12-hour clocks (01--12), zero-padded to 2 digits.           |\n| `%l`  | `12`     | Same as `%I` but space-padded. Same as `%_I`.                              |\n|       |          |                                                                            |\n| `%P`  | `am`     | `am` or `pm` in 12-hour clocks.                                            |\n| `%p`  | `AM`     | `AM` or `PM` in 12-hour clocks.                                            |\n|       |          |                                                                            |\n| `%M`  | `34`     | Minute number (00--59), zero-padded to 2 digits.                           |\n| `%S`  | `60`     | Second number (00--60), zero-padded to 2 digits. [^4]                      |\n| `%f`  | `26490000`    | Number of nanoseconds since last whole second. [^7]                   |\n| `%.f` | `.026490`| Decimal fraction of a second. Consumes the leading dot. [^7]               |\n| `%.3f`| `.026`        | Decimal fraction of a second with a fixed length of 3.                |\n| `%.6f`| `.026490`     | Decimal fraction of a second with a fixed length of 6.                |\n| `%.9f`| `.026490000`  | Decimal fraction of a second with a fixed length of 9.                |\n| `%3f` | `026`         | Decimal fraction of a second like `%.3f` but without the leading dot. |\n| `%6f` | `026490`      | Decimal fraction of a second like `%.6f` but without the leading dot. |\n| `%9f` | `026490000`   | Decimal fraction of a second like `%.9f` but without the leading dot. |\n|       |               |                                                                       |\n| `%R`  | `00:34`       | Hour-minute format. Same as `%H:%M`.                                  |\n| `%T`  | `00:34:60`    | Hour-minute-second format. Same as `%H:%M:%S`.                        |\n| `%X`  | `00:34:60`    | Locale's time representation (e.g., 23:13:48).                        |\n| `%r`  | `12:34:60 AM` | Locale's 12 hour clock time. (e.g., 11:11:04 PM). Falls back to `%X` if the locale does not have a 12 hour clock format. |\n|       |          |                                                                            |\n|       |          | **TIME ZONE SPECIFIERS:**                                                  |\n| `%Z`  | `ACST`   | Local time zone name. Skips all non-whitespace characters during parsing. Identical to `%:z` when formatting. [^8] |\n| `%z`  | `+0930`  | Offset from the local time to UTC (with UTC being `+0000`).                |\n| `%:z` | `+09:30` | Same as `%z` but with a colon.                                             |\n|`%::z`|`+09:30:00`| Offset from the local time to UTC with seconds.                            |\n|`%:::z`| `+09`    | Offset from the local time to UTC without minutes.                         |\n| `%#z` | `+09`    | *Parsing only:* Same as `%z` but allows minutes to be missing or present.  |\n|       |          |                                                                            |\n|       |          | **DATE & TIME SPECIFIERS:**                                                |\n|`%c`|`Sun Jul  8 00:34:60 2001`|Locale's date and time (e.g., Thu Mar  3 23:05:25 2005).       |\n| `%+`  | `2001-07-08T00:34:60.026490+09:30` | ISO 8601 / RFC 3339 date & time format. [^5]     |\n|       |               |                                                                       |\n| `%s`  | `994518299`   | UNIX timestamp, the number of seconds since 1970-01-01 00:00 UTC. [^6]|\n|       |          |                                                                            |\n|       |          | **SPECIAL SPECIFIERS:**                                                    |\n| `%t`  |          | Literal tab (`\\t`).                                                        |\n| `%n`  |          | Literal newline (`\\n`).                                                    |\n| `%%`  |          | Literal percent sign.                                                      |\n\nIt is possible to override the default padding behavior of numeric specifiers `%?`.\nThis is not allowed for other specifiers and will result in the `BAD_FORMAT` error.\n\nModifier | Description\n-------- | -----------\n`%-?`    | Suppresses any padding including spaces and zeroes. (e.g. `%j` = `012`, `%-j` = `12`)\n`%_?`    | Uses spaces as a padding. (e.g. `%j` = `012`, `%_j` = ` 12`)\n`%0?`    | Uses zeroes as a padding. (e.g. `%e` = ` 9`, `%0e` = `09`)\n\nNotes:\n\n[^1]: `%C`, `%y`:\n   This is floor division, so 100 BCE (year number -99) will print `-1` and `99` respectively.\n\n[^2]: `%U`:\n   Week 1 starts with the first Sunday in that year.\n   It is possible to have week 0 for days before the first Sunday.\n\n[^3]: `%G`, `%g`, `%V`:\n   Week 1 is the first week with at least 4 days in that year.\n   Week 0 does not exist, so this should be used with `%G` or `%g`.\n\n[^4]: `%S`:\n   It accounts for leap seconds, so `60` is possible.\n\n[^5]: `%+`: Same as `%Y-%m-%dT%H:%M:%S%.f%:z`, i.e. 0, 3, 6 or 9 fractional\n   digits for seconds and colons in the time zone offset.\n   <br>\n   <br>\n   This format also supports having a `Z` or `UTC` in place of `%:z`. They\n   are equivalent to `+00:00`.\n   <br>\n   <br>\n   Note that all `T`, `Z`, and `UTC` are parsed case-insensitively.\n   <br>\n   <br>\n   The typical `strftime` implementations have different (and locale-dependent)\n   formats for this specifier. While Chrono's format for `%+` is far more\n   stable, it is best to avoid this specifier if you want to control the exact\n   output.\n\n[^6]: `%s`:\n   This is not padded and can be negative.\n   For the purpose of Chrono, it only accounts for non-leap seconds\n   so it slightly differs from ISO C `strftime` behavior.\n\n[^7]: `%f`, `%.f`:\n   <br>\n   `%f` and `%.f` are notably different formatting specifiers.<br>\n   `%f` counts the number of nanoseconds since the last whole second, while `%.f` is a fraction of a\n   second.<br>\n   Example: 7μs is formatted as `7000` with `%f`, and formatted as `.000007` with `%.f`.\n\n[^8]: `%Z`:\n   Since `chrono` is not aware of timezones beyond their offsets, this specifier\n   **only prints the offset** when used for formatting. The timezone abbreviation\n   will NOT be printed. See [this issue](https://github.com/chronotope/chrono/issues/960)\n   for more information.\n   <br>\n   <br>\n   Offset will not be populated from the parsed data, nor will it be validated.\n   Timezone is completely ignored. Similar to the glibc `strptime` treatment of\n   this format code.\n   <br>\n   <br>\n   It is not possible to reliably convert from an abbreviation to an offset,\n   for example CDT can mean either Central Daylight Time (North America) or\n   China Daylight Time.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:2209:2527"],"is_stripped":false}}},"0:2060:2683":{"id":"0:2060:2683","crate_id":0,"name":"with_ordinal0","span":{"filename":"src/traits.rs","begin":[234,4],"end":[234,59]},"visibility":"default","docs":"Makes a new value with the day of year (starting from 0) changed.\n\n# Errors\n\nReturns `None` when:\n\n- The resulting date does not exist (`with_ordinal0(365)` in a non-leap year).\n- In case of [`DateTime<Tz>`] if the resulting date and time fall within a timezone\n  transition such as from DST to standard time.\n- The value for `ordinal0` is out of range.\n\n[`DateTime<Tz>`]: crate::DateTime","links":{"crate::DateTime":"0:2154:2111"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["ordinal0",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"a:2:2776:242-0:2584:2137":{"id":"a:2:2776:242-0:2584:2137","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2776:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveWeek","id":"0:2584:2137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1081:1525":{"id":"0:1081:1525","crate_id":0,"name":"sub","span":{"filename":"src/naive/date.rs","begin":[1965,4],"end":[1967,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"OldDuration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2271:3204":{"id":"0:2271:3204","crate_id":0,"name":"IsoYear","span":{"filename":"src/format/mod.rs","begin":[116,4],"end":[116,11]},"visibility":"default","docs":"Year in the ISO week date (FW=4, PW=∞).\nMay accept years before 1 BCE or after 9999 CE, given an initial sign.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"5:5526:3485":{"id":"5:5526:3485","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7489:248"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7489:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2264-0:2628:4959":{"id":"b:2:2264-0:2628:4959","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2258:101","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateDaysIterator","id":"0:2628:4959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2266:7207"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1160:2129":{"id":"0:1160:2129","crate_id":0,"name":"MAX_DATETIME","span":{"filename":"src/naive/datetime/mod.rs","begin":[48,0],"end":[48,59]},"visibility":"public","docs":"The maximum possible `NaiveDateTime`.","links":{},"attrs":["#[deprecated(since = \"0.4.20\", note = \"Use NaiveDateTime::MAX instead\")]"],"deprecation":{"since":"0.4.20","note":"Use NaiveDateTime::MAX instead"},"inner":{"constant":{"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"NaiveDateTime::MAX","value":null,"is_literal":false}}},"b:2:2264-0:2389:3299":{"id":"b:2:2264-0:2389:3299","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2258:101","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalFixed","id":"0:2389:3299","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2266:7207"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1434:3062":{"id":"0:1434:3062","crate_id":0,"name":"with_nanosecond","span":{"filename":"src/naive/time/mod.rs","begin":[1042,4],"end":[1047,5]},"visibility":"default","docs":"Makes a new `NaiveTime` with nanoseconds since the whole non-leap second changed.\n\nAs with the [`nanosecond`](#method.nanosecond) method,\nthe input range can exceed 1,000,000,000 for leap seconds.\n\n# Errors\n\nReturns `None` if `nanosecond >= 2,000,000,000`.\n\n# Example\n\n```\nuse chrono::{NaiveTime, Timelike};\n\nlet dt = NaiveTime::from_hms_nano_opt(23, 56, 4, 12_345_678).unwrap();\nassert_eq!(dt.with_nanosecond(333_333_333),\n           Some(NaiveTime::from_hms_nano_opt(23, 56, 4, 333_333_333).unwrap()));\nassert_eq!(dt.with_nanosecond(2_000_000_000), None);\n```\n\nLeap seconds can theoretically follow *any* whole second.\nThe following would be a proper leap second at the time zone offset of UTC-00:03:57\n(there are several historical examples comparable to this \"non-sense\" offset),\nand therefore is allowed.\n\n```\n# use chrono::{NaiveTime, Timelike};\nlet dt = NaiveTime::from_hms_nano_opt(23, 56, 4, 12_345_678).unwrap();\nlet strange_leap_second = dt.with_nanosecond(1_333_333_333).unwrap();\nassert_eq!(strange_leap_second.nanosecond(), 1_333_333_333);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["nano",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:682-0:2493:168":{"id":"b:5:682-0:2493:168","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Item","id":"0:2493:168","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["5:684:9349","5:685:9350","5:686:9351"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2763":{"id":"0:2763","crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[25,9],"end":[25,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2786:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1970":{"id":"0:1970","crate_id":0,"name":null,"span":{"filename":"src/round.rs","begin":[157,0],"end":[167,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"DurationRound","id":"0:1961:2140","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1971:132","0:1972:7915","0:1973:7920"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12526:4031":{"id":"2:12526:4031","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2459:718":{"id":"0:2459:718","crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[298,9],"end":[298,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9506:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9487:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2739":{"id":"0:2739","crate_id":0,"name":null,"span":{"filename":"src/naive/isoweek.rs","begin":[19,54],"end":[19,58]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9747:148","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IsoWeek","id":"0:2724:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2740:781"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2833:8772-0:3160:2143":{"id":"a:2:2833:8772-0:3160:2143","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2833:8772","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseWeekdayError","id":"0:3160:2143","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2261-0:2334:2716":{"id":"b:2:2261-0:2334:2716","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2255:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Fixed","id":"0:2334:2716","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2263:2522"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:383:2656":{"id":"0:383:2656","crate_id":0,"name":"format_with_items","span":{"filename":"src/datetime/mod.rs","begin":[862,4],"end":[869,5]},"visibility":"public","docs":"Formats the combined date and time with the specified formatting items.","links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\"))]","#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["items",{"generic":"I"}]],"output":{"resolved_path":{"name":"DelayedFormat","id":"0:2161:2526","args":{"angle_bracketed":{"args":[{"type":{"generic":"I"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7627:173","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"B"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2255:100","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Item","id":"0:2493:168","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:447:781":{"id":"0:447:781","crate_id":0,"name":"hash","span":{"filename":"src/datetime/mod.rs","begin":[1206,4],"end":[1208,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"hash::Hasher","id":"2:9755:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1566":{"id":"0:1566","crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[228,0],"end":[235,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:2850:2288","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::naive::NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1567:203","0:1568:1525"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2008":{"id":"0:2008","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[239,0],"end":[243,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9531:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseWeekdayError","id":"0:3160:2143","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2009:718"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:923:132":{"id":"0:923:132","crate_id":0,"name":"Err","span":{"filename":"src/format/mod.rs","begin":[521,4],"end":[521,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"ParseMonthError","id":"0:3246:2146","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:445":{"id":"0:445","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1205,0],"end":[1209,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9747:148","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:447:781"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2663":{"id":"0:2663","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[2053,58],"end":[2053,60]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2787:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateWeeksIterator","id":"0:2648:4960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1044":{"id":"0:1044","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[1466,0],"end":[1827,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["num_days_from_ce","year_ce"],"trait":{"name":"Datelike","id":"0:2043:2113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1045:2670","0:1046:2144","0:1047:2671","0:1048:2672","0:1049:2673","0:1050:2674","0:1051:2675","0:1052:2142","0:1053:2676","0:1054:2677","0:1055:2678","0:1056:2679","0:1057:2680","0:1058:2681","0:1059:2682","0:1061:2683"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1400:2581":{"id":"0:1400:2581","crate_id":0,"name":"from_hms_opt","span":{"filename":"src/naive/time/mod.rs","begin":[268,4],"end":[270,5]},"visibility":"public","docs":"Makes a new `NaiveTime` from hour, minute and second.\n\nThe millisecond part is allowed to exceed 1,000,000,000 in order to represent a\n[leap second](#leap-second-handling), but only when `sec == 59`.\n\n# Errors\n\nReturns `None` on invalid hour, minute and/or second.\n\n# Example\n\n```\nuse chrono::NaiveTime;\n\nlet from_hms_opt = NaiveTime::from_hms_opt;\n\nassert!(from_hms_opt(0, 0, 0).is_some());\nassert!(from_hms_opt(23, 59, 59).is_some());\nassert!(from_hms_opt(24, 0, 0).is_none());\nassert!(from_hms_opt(23, 60, 0).is_none());\nassert!(from_hms_opt(23, 59, 60).is_none());\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:682-0:3225:2145":{"id":"b:5:682-0:3225:2145","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Months","id":"0:3225:2145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:684:9349","5:685:9350","5:686:9351"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2776:242-0:2106:2104":{"id":"a:2:2776:242-0:2106:2104","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2776:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRangeError","id":"0:2106:2104","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:664:3774":{"id":"0:664:3774","crate_id":0,"name":"set_isoyear_div_100","span":{"filename":"src/format/parsed.rs","begin":[164,4],"end":[172,5]},"visibility":"public","docs":"Tries to set the [`isoyear_div_100`](#structfield.isoyear_div_100) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:906:2133","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1850:7066":{"id":"0:1850:7066","crate_id":0,"name":"offset_from_utc_date","span":{"filename":"src/offset/local/mod.rs","begin":[170,4],"end":[173,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["utc",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1056:2679":{"id":"0:1056:2679","crate_id":0,"name":"with_month0","span":{"filename":"src/naive/date.rs","begin":[1725,4],"end":[1728,5]},"visibility":"default","docs":"Makes a new `NaiveDate` with the month number (starting from 0) changed.\n\n# Errors\n\nReturns `None` if the resulting date does not exist, or if the value for `month0` is\ninvalid.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().with_month0(9),\n           Some(NaiveDate::from_ymd_opt(2015, 10, 8).unwrap()));\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().with_month0(12), None); // no month 13\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 30).unwrap().with_month0(1), None); // no February 30\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["month0",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2117":{"id":"0:2117","crate_id":0,"name":null,"span":{"filename":"src/duration.rs","begin":[443,40],"end":[443,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2787:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRangeError","id":"0:2106:2104","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3412-0:2426:3314":{"id":"b:2:3412-0:2426:3314","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3410:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetFormat","id":"0:2426:3314","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3414:1603"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2394:454":{"id":"0:2394:454","crate_id":0,"name":"clone","span":{"filename":"src/format/mod.rs","begin":[260,16],"end":[260,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"InternalFixed","id":"0:2389:3299","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1050:2674":{"id":"0:1050:2674","crate_id":0,"name":"ordinal","span":{"filename":"src/naive/date.rs","begin":[1608,4],"end":[1610,5]},"visibility":"default","docs":"Returns the day of year starting from 1.\n\nThe return value ranges from 1 to 366. (The last day of year differs by years.)\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().ordinal(), 251);\nassert_eq!(NaiveDate::from_ymd_opt(-308, 3, 14).unwrap().ordinal(), 74);\n```\n\nCombined with [`NaiveDate::pred`](#method.pred),\none can determine the number of days in a particular year.\n(Note that this panics when `year` is out of range.)\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nfn ndays_in_year(year: i32) -> u32 {\n    // the first day of the next year...\n    let d = NaiveDate::from_ymd_opt(year + 1, 1, 1).unwrap();\n\n    // ...is preceded by the last day of the original year\n    d.pred_opt().unwrap().ordinal()\n}\n\nassert_eq!(ndays_in_year(2015), 365);\nassert_eq!(ndays_in_year(2016), 366);\nassert_eq!(ndays_in_year(2017), 365);\nassert_eq!(ndays_in_year(2000), 366);\nassert_eq!(ndays_in_year(2100), 365);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:924:3085":{"id":"0:924:3085","crate_id":0,"name":"from_str","span":{"filename":"src/format/mod.rs","begin":[523,4],"end":[543,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41709:231","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:12066:3084","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2567-0:3073:2138":{"id":"b:2:2567-0:3073:2138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LocalResult","id":"0:3073:2138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2570:3122"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2017:2612":{"id":"0:2017:2612","crate_id":0,"name":"succ","span":{"filename":"src/month.rs","begin":[70,4],"end":[85,5]},"visibility":"public","docs":"The next month.\n\n`m`:        | `January`  | `February` | `...` | `December`\n----------- | ---------  | ---------- | --- | ---------\n`m.succ()`: | `February` | `March`    | `...` | `January`","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Month","id":"0:3170:2114","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1238:3062":{"id":"0:1238:3062","crate_id":0,"name":"with_nanosecond","span":{"filename":"src/naive/datetime/mod.rs","begin":[1496,4],"end":[1498,5]},"visibility":"default","docs":"Makes a new `NaiveDateTime` with nanoseconds since the whole non-leap second changed.\n\nReturns `None` when the resulting `NaiveDateTime` would be invalid.\nAs with the [`NaiveDateTime::nanosecond`] method,\nthe input range can exceed 1,000,000,000 for leap seconds.\n\nSee also the [`NaiveTime::with_nanosecond`] method.\n\n# Errors\n\nReturns `None` if `nanosecond >= 2,000,000,000`.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Timelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().and_hms_milli_opt(12, 34, 59, 789).unwrap();\nassert_eq!(dt.with_nanosecond(333_333_333),\n           Some(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().and_hms_nano_opt(12, 34, 59, 333_333_333).unwrap()));\nassert_eq!(dt.with_nanosecond(1_333_333_333), // leap second\n           Some(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().and_hms_nano_opt(12, 34, 59, 1_333_333_333).unwrap()));\nassert_eq!(dt.with_nanosecond(2_000_000_000), None);\n```","links":{"`NaiveTime::with_nanosecond`":"0:1434:3062","`NaiveDateTime::nanosecond`":"0:1231:3041"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["nano",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3256:2158":{"id":"0:3256:2158","crate_id":0,"name":"OutOfRange","span":{"filename":"src/lib.rs","begin":[574,0],"end":[576,1]},"visibility":"public","docs":"Out of range error type used in various converting APIs","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:2793:252-0:3256:2158","a:2:2776:242-0:3256:2158","a:2:8606:8818-0:3256:2158","a:2:2833:8772-0:3256:2158","a:2:8607:8817-0:3256:2158","b:2:2571-0:3256:2158","b:2:2577-0:3256:2158","b:2:2582-0:3256:2158","b:2:2261-0:3256:2158","b:2:3412-0:3256:2158","b:2:2264-0:3256:2158","b:2:2567-0:3256:2158","b:5:5792-0:3256:2158","b:5:682-0:3256:2158","0:2082","0:2078","0:3267","0:3268","0:3265","0:3264","0:3258","0:2080","0:3260","0:3261"]}}},"0:310:2129":{"id":"0:310:2129","crate_id":0,"name":"MAX_DATETIME","span":{"filename":"src/datetime/mod.rs","begin":[96,0],"end":[96,65]},"visibility":"public","docs":"The maximum possible `DateTime<Utc>`.","links":{},"attrs":["#[deprecated(since = \"0.4.20\", note = \"Use DateTime::MAX_UTC instead\")]"],"deprecation":{"since":"0.4.20","note":"Use DateTime::MAX_UTC instead"},"inner":{"constant":{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::offset::Utc","id":"0:3059:2118","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"expr":"DateTime<Utc>::MAX_UTC","value":null,"is_literal":false}}},"0:989:3836":{"id":"0:989:3836","crate_id":0,"name":"from_yo_opt","span":{"filename":"src/naive/date.rs","begin":[337,4],"end":[340,5]},"visibility":"public","docs":"Makes a new `NaiveDate` from the [ordinal date](#ordinal-date)\n(year and day of the year).\n\n# Errors\n\nReturns `None` if:\n- The specified ordinal day does not exist (for example 2023-366).\n- The value for `ordinal` is invalid (for example: `0`, `400`).\n- `year` is out of range for `NaiveDate`.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet from_yo_opt = NaiveDate::from_yo_opt;\n\nassert!(from_yo_opt(2015, 100).is_some());\nassert!(from_yo_opt(2015, 0).is_none());\nassert!(from_yo_opt(2015, 365).is_some());\nassert!(from_yo_opt(2015, 366).is_none());\nassert!(from_yo_opt(-4, 366).is_some()); // 5 BCE is a leap year\nassert!(from_yo_opt(400000, 1).is_none());\nassert!(from_yo_opt(-400000, 1).is_none());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["year",{"primitive":"i32"}],["ordinal",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1430:3041":{"id":"0:1430:3041","crate_id":0,"name":"nanosecond","span":{"filename":"src/naive/time/mod.rs","begin":[931,4],"end":[933,5]},"visibility":"default","docs":"Returns the number of nanoseconds since the whole non-leap second.\nThe range from 1,000,000,000 to 1,999,999,999 represents\nthe [leap second](#leap-second-handling).\n\n# Example\n\n```\nuse chrono::{NaiveTime, Timelike};\n\nassert_eq!(NaiveTime::from_hms_opt(0, 0, 0).unwrap().nanosecond(), 0);\nassert_eq!(NaiveTime::from_hms_nano_opt(23, 56, 4, 12_345_678).unwrap().nanosecond(), 12_345_678);\n```\n\nLeap seconds may have seemingly out-of-range return values.\nYou can reduce the range with `time.nanosecond() % 1_000_000_000`, or\nuse the proper [formatting method](#method.format) to get a human-readable representation.\n\n```\n# use chrono::{NaiveTime, Timelike};\nlet leap = NaiveTime::from_hms_milli_opt(23, 59, 59, 1_000).unwrap();\nassert_eq!(leap.nanosecond(), 1_000_000_000);\nassert_eq!(leap.format(\"%H:%M:%S%.9f\").to_string(), \"23:59:60.000000000\");\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2542:454":{"id":"0:2542:454","crate_id":0,"name":"clone","span":{"filename":"src/format/mod.rs","begin":[374,16],"end":[374,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ParseError","id":"0:2536:2132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:682-0:2589:2135":{"id":"b:5:682-0:2589:2135","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Days","id":"0:2589:2135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:684:9349","5:685:9350","5:686:9351"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1024:2633":{"id":"0:1024:2633","crate_id":0,"name":"checked_add_signed","span":{"filename":"src/naive/date.rs","begin":[1154,4],"end":[1157,5]},"visibility":"public","docs":"Adds the number of whole days in the given `Duration` to the current date.\n\n# Errors\n\nReturns `None` if the resulting date would be out of range.\n\n# Example\n\n```\nuse chrono::{Duration, NaiveDate};\n\nlet d = NaiveDate::from_ymd_opt(2015, 9, 5).unwrap();\nassert_eq!(d.checked_add_signed(Duration::days(40)),\n           Some(NaiveDate::from_ymd_opt(2015, 10, 15).unwrap()));\nassert_eq!(d.checked_add_signed(Duration::days(-40)),\n           Some(NaiveDate::from_ymd_opt(2015, 7, 27).unwrap()));\nassert_eq!(d.checked_add_signed(Duration::days(1_000_000_000)), None);\nassert_eq!(d.checked_add_signed(Duration::days(-1_000_000_000)), None);\nassert_eq!(NaiveDate::MAX.checked_add_signed(Duration::days(1)), None);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"OldDuration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2567-0:2536:2132":{"id":"b:2:2567-0:2536:2132","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:2536:2132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2570:3122"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2018:2619":{"id":"0:2018:2619","crate_id":0,"name":"pred","span":{"filename":"src/month.rs","begin":[94,4],"end":[109,5]},"visibility":"public","docs":"The previous month.\n\n`m`:        | `January`  | `February` | `...` | `December`\n----------- | ---------  | ---------- | --- | ---------\n`m.pred()`: | `December` | `January`  | `...` | `November`","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Month","id":"0:3170:2114","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2026:8065":{"id":"0:2026:8065","crate_id":0,"name":"from_i64","span":{"filename":"src/month.rs","begin":[196,4],"end":[198,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["n",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Month","id":"0:3170:2114","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2264-0:2724:2136":{"id":"b:2:2264-0:2724:2136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2258:101","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IsoWeek","id":"0:2724:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2266:7207"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2635":{"id":"0:2635","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[2017,29],"end":[2017,33]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9747:148","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateDaysIterator","id":"0:2628:4959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2636:781"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3157":{"id":"0:3157","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[32,44],"end":[32,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9747:148","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Weekday","id":"0:3124:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3158:781"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2110:718":{"id":"0:2110:718","crate_id":0,"name":"fmt","span":{"filename":"src/duration.rs","begin":[443,9],"end":[443,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9506:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9487:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2458":{"id":"0:2458","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[298,9],"end":[298,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9531:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetPrecision","id":"0:2445:3316","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2459:718"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1094":{"id":"0:1094","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[2041,0],"end":[2048,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["rfind","nth_back","rfold","advance_back_by","try_rfold"],"trait":{"name":"DoubleEndedIterator","id":"2:7518:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateDaysIterator","id":"0:2628:4959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1095:5552"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2045:8222":{"id":"0:2045:8222","crate_id":0,"name":"year_ce","span":{"filename":"src/traits.rs","begin":[38,4],"end":[45,5]},"visibility":"default","docs":"Returns the absolute year number starting from 1 with a boolean flag,\nwhich is false when the year predates the epoch (BCE/BC) and true otherwise (CE/AD).","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"bool"},{"primitive":"u32"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2061:5680":{"id":"0:2061:5680","crate_id":0,"name":"num_days_from_ce","span":{"filename":"src/traits.rs","begin":[248,4],"end":[263,5]},"visibility":"default","docs":"Counts the days in the proleptic Gregorian calendar, with January 1, Year 1 (CE) as day 1.\n\n# Examples\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(NaiveDate::from_ymd_opt(1970, 1, 1).unwrap().num_days_from_ce(), 719_163);\nassert_eq!(NaiveDate::from_ymd_opt(2, 1, 1).unwrap().num_days_from_ce(), 366);\nassert_eq!(NaiveDate::from_ymd_opt(1, 1, 1).unwrap().num_days_from_ce(), 1);\nassert_eq!(NaiveDate::from_ymd_opt(0, 1, 1).unwrap().num_days_from_ce(), -365);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:393:2671":{"id":"0:393:2671","crate_id":0,"name":"month0","span":{"filename":"src/datetime/mod.rs","begin":[943,4],"end":[945,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:441:1100":{"id":"0:441:1100","crate_id":0,"name":"partial_cmp","span":{"filename":"src/datetime/mod.rs","begin":[1194,4],"end":[1196,5]},"visibility":"default","docs":"Compare two DateTimes based on their true time, ignoring time zones\n\n# Example\n\n```\nuse chrono::prelude::*;\n\nlet earlier = Utc.with_ymd_and_hms(2015, 5, 15, 2, 0, 0).unwrap().with_timezone(&FixedOffset::west_opt(1 * 3600).unwrap());\nlet later   = Utc.with_ymd_and_hms(2015, 5, 15, 3, 0, 0).unwrap().with_timezone(&FixedOffset::west_opt(5 * 3600).unwrap());\n\nassert_eq!(earlier.to_string(), \"2015-05-15 01:00:00 -01:00\");\nassert_eq!(later.to_string(), \"2015-05-14 22:00:00 -05:00\");\n\nassert!(later > earlier);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz2"}}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Ordering","id":"2:30807:200","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2301:3234":{"id":"0:2301:3234","crate_id":0,"name":"Nanosecond","span":{"filename":"src/format/mod.rs","begin":[148,4],"end":[148,14]},"visibility":"default","docs":"The number of nanoseconds since the last whole second (FW=PW=9).\nNote that this is *not* left-aligned;\nsee also [`Fixed::Nanosecond`](./enum.Fixed.html#variant.Nanosecond).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:2149":{"id":"0:2149","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[51,33],"end":[51,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(clippy :: manual_non_exhaustive)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2325:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SecondsFormat","id":"0:2127:2112","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2150:660"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:83:2435":{"id":"0:83:2435","crate_id":0,"name":"description","span":{"filename":"src/duration.rs","begin":[455,4],"end":[457,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:572":{"id":"0:572","crate_id":0,"name":null,"span":{"filename":"src/format/formatting.rs","begin":[137,0],"end":[155,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\"))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7627:173","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"B"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2255:100","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"super::Item","id":"0:2493:168","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9536:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DelayedFormat","id":"0:2161:2526","args":{"angle_bracketed":{"args":[{"type":{"generic":"I"}}],"bindings":[]}}}},"items":["0:576:718"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1558:203":{"id":"0:1558:203","crate_id":0,"name":"Output","span":{"filename":"src/offset/fixed.rs","begin":[202,4],"end":[202,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"2:12413:3983":{"id":"2:12413:3983","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:11666:7574"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:430":{"id":"0:430","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1168,0],"end":[1168,87]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Tz"},"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2776:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2776:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8607:8817-0:2209:2527":{"id":"a:2:8607:8817-0:2209:2527","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8607:8817","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StrftimeItems","id":"0:2209:2527","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:82":{"id":"0:82","crate_id":0,"name":null,"span":{"filename":"src/duration.rs","begin":[453,0],"end":[458,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["description","source","cause","provide","type_id"],"trait":{"name":"Error","id":"2:2629:133","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRangeError","id":"0:2106:2104","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:83:2435"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2597":{"id":"0:2597","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[134,29],"end":[134,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2787:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Days","id":"0:2589:2135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2793:252-0:2742:2121":{"id":"a:2:2793:252-0:2742:2121","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2793:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1990:2612":{"id":"0:1990:2612","crate_id":0,"name":"succ","span":{"filename":"src/weekday.rs","begin":[61,4],"end":[71,5]},"visibility":"public","docs":"The next day in the week.\n\n`w`:        | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun`\n----------- | ----- | ----- | ----- | ----- | ----- | ----- | -----\n`w.succ()`: | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun` | `Mon`","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Weekday","id":"0:3124:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2571:718":{"id":"0:2571:718","crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[386,9],"end":[386,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9506:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9487:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3412-0:2553:3365":{"id":"b:2:3412-0:2553:3365","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3410:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseErrorKind","id":"0:2553:3365","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3414:1603"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2567-0:2584:2137":{"id":"b:2:2567-0:2584:2137","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveWeek","id":"0:2584:2137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2570:3122"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1057:2680":{"id":"0:1057:2680","crate_id":0,"name":"with_day","span":{"filename":"src/naive/date.rs","begin":[1747,4],"end":[1749,5]},"visibility":"default","docs":"Makes a new `NaiveDate` with the day of month (starting from 1) changed.\n\n# Errors\n\nReturns `None` if the resulting date does not exist, or if the value for `day` is invalid.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().with_day(30),\n           Some(NaiveDate::from_ymd_opt(2015, 9, 30).unwrap()));\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().with_day(31),\n           None); // no September 31\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["day",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3158:781":{"id":"0:3158:781","crate_id":0,"name":"hash","span":{"filename":"src/weekday.rs","begin":[32,44],"end":[32,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9755:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:478":{"id":"0:478","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1288,0],"end":[1295,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"SubAssign","id":"2:2880:2524","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"2:44300:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:480:1526"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:171:2648":{"id":"0:171:2648","crate_id":0,"name":"years_since","span":{"filename":"src/date.rs","begin":[313,4],"end":[315,5]},"visibility":"public","docs":"Returns the number of whole years from the given `base` until `self`.","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["base",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2430:3323":{"id":"0:2430:3323","crate_id":0,"name":"padding","span":{"filename":"src/format/mod.rs","begin":[294,4],"end":[294,20]},"visibility":"public","docs":"Pad the hour value to two digits.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Pad","id":"0:2243:3177","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:2434":{"id":"0:2434","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[285,22],"end":[285,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetFormat","id":"0:2426:3314","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2435:454"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1020:2612":{"id":"0:1020:2612","crate_id":0,"name":"succ","span":{"filename":"src/naive/date.rs","begin":[1069,4],"end":[1071,5]},"visibility":"public","docs":"Makes a new `NaiveDate` for the next calendar date.\n\n# Panics\n\nPanics when `self` is the last representable date.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `succ_opt()` instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"use `succ_opt()` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:524-0:2127:2112":{"id":"0:524-0:2127:2112","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[520,29],"end":[520,42]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"import":{"source":"datetime::SecondsFormat","name":"SecondsFormat","id":"0:2127:2112","glob":false}}},"0:3250":{"id":"0:3250","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[233,16],"end":[233,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2786:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseMonthError","id":"0:3246:2146","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2264-0:3256:2158":{"id":"b:2:2264-0:3256:2158","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2258:101","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRange","id":"0:3256:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2266:7207"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2567-0:2761:2117":{"id":"b:2:2567-0:2761:2117","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2570:3122"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12466:39463":{"id":"2:12466:39463","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:12106:8527","str::split":"2:12454:32734","prim@char":"1:12067:450","str::split_terminator":"2:12463:39462"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:43594:8557","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12111:8541","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12111:8541","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12126:8543","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2428:3318":{"id":"0:2428:3318","crate_id":0,"name":"colons","span":{"filename":"src/format/mod.rs","begin":[290,4],"end":[290,22]},"visibility":"public","docs":"Separator between hours, minutes and seconds.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Colons","id":"0:2472:3319","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"b:2:2571-0:2334:2716":{"id":"b:2:2571-0:2334:2716","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Fixed","id":"0:2334:2716","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2573:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:237:302":{"id":"0:237:302","crate_id":0,"name":"add_assign","span":{"filename":"src/date.rs","begin":[513,4],"end":[515,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["rhs",{"resolved_path":{"name":"OldDuration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2833:8772-0:2584:2137":{"id":"a:2:2833:8772-0:2584:2137","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2833:8772","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveWeek","id":"0:2584:2137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1247:302":{"id":"0:1247:302","crate_id":0,"name":"add_assign","span":{"filename":"src/naive/datetime/mod.rs","begin":[1575,4],"end":[1577,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["rhs",{"resolved_path":{"name":"OldDuration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:489":{"id":"0:489","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1314,0],"end":[1321,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:2850:2288","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:491:203","0:492:1525"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2193:454":{"id":"0:2193:454","crate_id":0,"name":"clone","span":{"filename":"src/format/parsed.rs","begin":[21,9],"end":[21,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Parsed","id":"0:2170:2717","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2261-0:3124:2116":{"id":"b:2:2261-0:3124:2116","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2255:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Weekday","id":"0:3124:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2263:2522"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5794:1565":{"id":"5:5794:1565","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7489:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2564:3382":{"id":"0:2564:3382","crate_id":0,"name":"TooLong","span":{"filename":"src/format/mod.rs","begin":[411,4],"end":[411,11]},"visibility":"default","docs":"All formatting items have been read but there is a remaining input.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:2264:3194":{"id":"0:2264:3194","crate_id":0,"name":"Numeric","span":{"filename":"src/format/mod.rs","begin":[106,0],"end":[158,1]},"visibility":"public","docs":"Numeric item types.\nThey have associated formatting width (FW) and parsing width (PW).\n\nThe **formatting width** is the minimal width to be formatted.\nIf the number is too short, and the padding is not [`Pad::None`](./enum.Pad.html#variant.None),\nthen it is left-padded.\nIf the number is too long or (in some cases) negative, it is printed as is.\n\nThe **parsing width** is the maximal width to be scanned.\nThe parser only tries to consume from one to given number of digits (greedily).\nIt also trims the preceding whitespace if any.\nIt cannot parse the negative number, so some date and time cannot be formatted then\nparsed with the same formatting items.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:2265:3197","0:2267:3199","0:2269:3201","0:2271:3204","0:2273:3206","0:2275:3208","0:2277:2114","0:2279:3211","0:2281:3213","0:2283:3215","0:2285:2136","0:2287:3218","0:2289:3220","0:2291:3222","0:2293:3224","0:2295:3226","0:2297:3228","0:2299:3230","0:2301:3234","0:2303:3237","0:2305:3241"],"impls":["a:2:2793:252-0:2264:3194","a:2:2776:242-0:2264:3194","a:2:8606:8818-0:2264:3194","a:2:2833:8772-0:2264:3194","a:2:8607:8817-0:2264:3194","b:2:2571-0:2264:3194","b:2:2577-0:2264:3194","b:2:2582-0:2264:3194","b:2:2261-0:2264:3194","b:2:3412-0:2264:3194","b:2:2264-0:2264:3194","b:2:2567-0:2264:3194","b:5:682-0:2264:3194","0:2311","0:2313","0:2310","0:2314","0:2308","0:2316","0:2318"]}}},"0:1432:3049":{"id":"0:1432:3049","crate_id":0,"name":"with_minute","span":{"filename":"src/naive/time/mod.rs","begin":[975,4],"end":[981,5]},"visibility":"default","docs":"Makes a new `NaiveTime` with the minute number changed.\n\n# Errors\n\nReturns `None` if the value for `minute` is invalid.\n\n# Example\n\n```\nuse chrono::{NaiveTime, Timelike};\n\nlet dt = NaiveTime::from_hms_nano_opt(23, 56, 4, 12_345_678).unwrap();\nassert_eq!(dt.with_minute(45), Some(NaiveTime::from_hms_nano_opt(23, 45, 4, 12_345_678).unwrap()));\nassert_eq!(dt.with_minute(60), None);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["min",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3095":{"id":"0:3095","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[41,34],"end":[41,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::marker::Copy","id":"2:2788:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2788:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LocalResult","id":"0:3073:2138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2567-0:2085:127":{"id":"b:2:2567-0:2085:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2570:3122"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2314":{"id":"0:2314","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[105,27],"end":[105,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2330:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Numeric","id":"0:2264:3194","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2571-0:2668:2120":{"id":"b:2:2571-0:2668:2120","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2573:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8607:8817-0:3225:2145":{"id":"a:2:8607:8817-0:3225:2145","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8607:8817","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Months","id":"0:3225:2145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2293:3224":{"id":"0:2293:3224","crate_id":0,"name":"Hour","span":{"filename":"src/format/mod.rs","begin":[138,4],"end":[138,8]},"visibility":"default","docs":"Hour number in the 24-hour clocks (FW=PW=2).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:1546:7061":{"id":"0:1546:7061","crate_id":0,"name":"offset_from_local_datetime","span":{"filename":"src/offset/fixed.rs","begin":[136,4],"end":[138,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["_local",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"LocalResult","id":"0:3073:2138","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1217:2679":{"id":"0:1217:2679","crate_id":0,"name":"with_month0","span":{"filename":"src/naive/datetime/mod.rs","begin":[1219,4],"end":[1221,5]},"visibility":"default","docs":"Makes a new `NaiveDateTime` with the month number (starting from 0) changed.\n\nSee also the [`NaiveDate::with_month0`] method.\n\n# Errors\n\nReturns `None` if the resulting date does not exist, or if the value for `month0` is\ninvalid.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Datelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2015, 9, 30).unwrap().and_hms_opt(12, 34, 56).unwrap();\nassert_eq!(dt.with_month0(9), Some(NaiveDate::from_ymd_opt(2015, 10, 30).unwrap().and_hms_opt(12, 34, 56).unwrap()));\nassert_eq!(dt.with_month0(12), None); // no month 13\nassert_eq!(dt.with_month0(1), None); // no February 30\n```","links":{"`NaiveDate::with_month0`":"0:1056:2679"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["month0",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1886":{"id":"0:1886","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[53,0],"end":[90,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"LocalResult","id":"0:3073:2138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:1888:2570","0:1889:6979","0:1890:6981","0:1891:921"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2567-0:2445:3316":{"id":"b:2:2567-0:2445:3316","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetPrecision","id":"0:2445:3316","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2570:3122"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8606:8818-0:2628:4959":{"id":"a:2:8606:8818-0:2628:4959","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8606:8818","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateDaysIterator","id":"0:2628:4959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2596:718":{"id":"0:2596:718","crate_id":0,"name":"fmt","span":{"filename":"src/naive/date.rs","begin":[134,22],"end":[134,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9506:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9487:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3209:660":{"id":"0:3209:660","crate_id":0,"name":"eq","span":{"filename":"src/month.rs","begin":[31,9],"end":[31,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Month","id":"0:3170:2114","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2059:2682":{"id":"0:2059:2682","crate_id":0,"name":"with_ordinal","span":{"filename":"src/traits.rs","begin":[220,4],"end":[220,57]},"visibility":"default","docs":"Makes a new value with the day of year (starting from 1) changed.\n\n# Errors\n\nReturns `None` when:\n\n- The resulting date does not exist (`with_ordinal(366)` in a non-leap year).\n- In case of [`DateTime<Tz>`] if the resulting date and time fall within a timezone\n  transition such as from DST to standard time.\n- The value for `ordinal` is out of range.\n\n[`DateTime<Tz>`]: crate::DateTime","links":{"crate::DateTime":"0:2154:2111"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["ordinal",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"a:2:8606:8818-0:3160:2143":{"id":"a:2:8606:8818-0:3160:2143","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8606:8818","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseWeekdayError","id":"0:3160:2143","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:159:2620":{"id":"0:159:2620","crate_id":0,"name":"pred_opt","span":{"filename":"src/date.rs","begin":[236,4],"end":[238,5]},"visibility":"public","docs":"Makes a new `Date` for the prior date.\n\nReturns `None` when `self` is the first representable date.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:483:203":{"id":"0:483:203","crate_id":0,"name":"Output","span":{"filename":"src/datetime/mod.rs","begin":[1298,4],"end":[1298,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}}},"0:64:203":{"id":"0:64:203","crate_id":0,"name":"Output","span":{"filename":"src/duration.rs","begin":[360,4],"end":[360,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:894-0:755:2714":{"id":"0:894-0:755:2714","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[73,23],"end":[73,42]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"parse::parse_and_remainder","name":"parse_and_remainder","id":"0:755:2714","glob":false}}},"b:2:3412-0:2648:4960":{"id":"b:2:3412-0:2648:4960","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3410:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateWeeksIterator","id":"0:2648:4960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3414:1603"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1475-0:2610:2119":{"id":"0:1475-0:2610:2119","crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[13,27],"end":[13,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::date::NaiveDate","name":"NaiveDate","id":"0:2610:2119","glob":false}}},"0:1101":{"id":"0:1101","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[2073,0],"end":[2073,52]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["len","is_empty"],"trait":{"name":"ExactSizeIterator","id":"2:7571:5551","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateWeeksIterator","id":"0:2648:4960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2833:8772-0:2161:2526":{"id":"a:2:2833:8772-0:2161:2526","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2833:8772","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2833:8772","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DelayedFormat","id":"0:2161:2526","args":{"angle_bracketed":{"args":[{"type":{"generic":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2577-0:2536:2132":{"id":"b:2:2577-0:2536:2132","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2547:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:2536:2132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2580:133","2:2581:1590"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1543:2122":{"id":"0:1543:2122","crate_id":0,"name":"Offset","span":{"filename":"src/offset/fixed.rs","begin":[127,4],"end":[127,30]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:1061:2683":{"id":"0:1061:2683","crate_id":0,"name":"with_ordinal0","span":{"filename":"src/naive/date.rs","begin":[1823,4],"end":[1826,5]},"visibility":"default","docs":"Makes a new `NaiveDate` with the day of year (starting from 0) changed.\n\n# Errors\n\nReturns `None` if the resulting date does not exist, or if the value for `ordinal0` is\ninvalid.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(NaiveDate::from_ymd_opt(2015, 1, 1).unwrap().with_ordinal0(59),\n           Some(NaiveDate::from_ymd_opt(2015, 3, 1).unwrap()));\nassert_eq!(NaiveDate::from_ymd_opt(2015, 1, 1).unwrap().with_ordinal0(365),\n           None); // 2015 had only 365 days\n\nassert_eq!(NaiveDate::from_ymd_opt(2016, 1, 1).unwrap().with_ordinal0(59),\n           Some(NaiveDate::from_ymd_opt(2016, 2, 29).unwrap()));\nassert_eq!(NaiveDate::from_ymd_opt(2016, 1, 1).unwrap().with_ordinal0(365),\n           Some(NaiveDate::from_ymd_opt(2016, 12, 31).unwrap()));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["ordinal0",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8606:8818-0:2724:2136":{"id":"a:2:8606:8818-0:2724:2136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8606:8818","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IsoWeek","id":"0:2724:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1165:5858":{"id":"0:1165:5858","crate_id":0,"name":"from_timestamp_micros","span":{"filename":"src/naive/datetime/mod.rs","begin":[188,4],"end":[192,5]},"visibility":"public","docs":"Creates a new [NaiveDateTime] from microseconds since the UNIX epoch.\n\nThe UNIX epoch starts on midnight, January 1, 1970, UTC.\n\n# Errors\n\nReturns `None` if the number of microseconds would be out of range for a `NaiveDateTime`\n(more than ca. 262,000 years away from common era)\n\n# Example\n\n```\nuse chrono::NaiveDateTime;\nlet timestamp_micros: i64 = 1662921288000000; //Sunday, September 11, 2022 6:34:48 PM\nlet naive_datetime = NaiveDateTime::from_timestamp_micros(timestamp_micros);\nassert!(naive_datetime.is_some());\nassert_eq!(timestamp_micros, naive_datetime.unwrap().timestamp_micros());\n\n// Negative timestamps (before the UNIX epoch) are supported as well.\nlet timestamp_micros: i64 = -2208936075000000; //Mon Jan 01 1900 14:38:45 GMT+0000\nlet naive_datetime = NaiveDateTime::from_timestamp_micros(timestamp_micros);\nassert!(naive_datetime.is_some());\nassert_eq!(timestamp_micros, naive_datetime.unwrap().timestamp_micros());\n```","links":{"NaiveDateTime":"0:2668:2120"},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["micros",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8607:8817-0:2127:2112":{"id":"a:2:8607:8817-0:2127:2112","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8607:8817","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SecondsFormat","id":"0:2127:2112","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1443:301":{"id":"0:1443:301","crate_id":0,"name":"add","span":{"filename":"src/naive/time/mod.rs","begin":[1139,4],"end":[1143,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"Duration","id":"2:44300:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12529:39474":{"id":"2:12529:39474","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4573:39474"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:43825:8567","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3059:2118":{"id":"0:3059:2118","crate_id":0,"name":"Utc","span":{"filename":"src/offset/utc.rs","begin":[46,0],"end":[46,15]},"visibility":"public","docs":"The UTC time zone. This is the most efficient time zone when you don't need the local time.\nIt is also used as an offset (which is also a dummy type).\n\nUsing the [`TimeZone`](./trait.TimeZone.html) methods\non the UTC struct is the preferred way to construct `DateTime<Utc>`\ninstances.\n\n# Example\n\n```\nuse chrono::{TimeZone, NaiveDateTime, Utc};\n\nlet dt = Utc.from_utc_datetime(&NaiveDateTime::from_timestamp_opt(61, 0).unwrap());\n\nassert_eq!(Utc.timestamp_opt(61, 0).unwrap(), dt);\nassert_eq!(Utc.with_ymd_and_hms(1970, 1, 1, 0, 1, 1).unwrap(), dt);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":"unit","generics":{"params":[],"where_predicates":[]},"impls":["0:1869","a:2:2793:252-0:3059:2118","a:2:2776:242-0:3059:2118","a:2:8606:8818-0:3059:2118","a:2:2833:8772-0:3059:2118","a:2:8607:8817-0:3059:2118","b:2:2571-0:3059:2118","b:2:2577-0:3059:2118","b:2:2582-0:3059:2118","b:2:2261-0:3059:2118","b:2:3412-0:3059:2118","b:2:2264-0:3059:2118","b:2:2567-0:3059:2118","b:5:5792-0:3059:2118","b:5:682-0:3059:2118","0:1879","0:1872","0:3061","0:3067","0:1883","0:3062","0:3064","0:3068","0:1881","0:3070","0:3065"]}}},"0:683:3799":{"id":"0:683:3799","crate_id":0,"name":"set_hour","span":{"filename":"src/format/parsed.rs","begin":[248,4],"end":[253,5]},"visibility":"public","docs":"Tries to set both [`hour_div_12`](#structfield.hour_div_12) and\n[`hour_mod_12`](#structfield.hour_mod_12) fields from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:906:2133","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1053:2676":{"id":"0:1053:2676","crate_id":0,"name":"iso_week","span":{"filename":"src/naive/date.rs","begin":[1645,4],"end":[1647,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"IsoWeek","id":"0:2724:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:928:2134":{"id":"0:928:2134","crate_id":0,"name":"naive","span":{"filename":"src/naive/mod.rs","begin":[1,0],"end":[40,1]},"visibility":"public","docs":"Date and time types unconcerned with timezones.\n\nThey are primarily building blocks for other types\n(e.g. [`TimeZone`](../offset/trait.TimeZone.html)),\nbut can be also used for the simpler date and time handling.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:1474-0:2589:2135","0:1475-0:2610:2119","0:1476-0:2628:4959","0:1477-0:2648:4960","0:1478-0:2584:2137","0:1480-0:981:2125","0:1481-0:980:2126","0:1483-0:2668:2120","0:1484-0:1160:2129","0:1485-0:1159:2130","0:1486-0:2724:2136","0:1487-0:2742:2121"],"is_stripped":false}}},"0:2277:2114":{"id":"0:2277:2114","crate_id":0,"name":"Month","span":{"filename":"src/format/mod.rs","begin":[122,4],"end":[122,9]},"visibility":"default","docs":"Month (FW=PW=2).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:335:2857":{"id":"0:335:2857","crate_id":0,"name":"checked_sub_months","span":{"filename":"src/datetime/mod.rs","begin":[429,4],"end":[434,5]},"visibility":"public","docs":"Subtracts given `Months` from the current date and time.\n\nUses the last day of the month if the day does not exist in the resulting month.\n\nSee [`NaiveDate::checked_sub_months`] for more details on behavior.\n\n# Errors\n\nReturns `None` if:\n- The resulting date would be out of range.\n- The local time at the resulting date does not exist or is ambiguous, for example during a\n  daylight saving time transition.","links":{"`NaiveDate::checked_sub_months`":"0:1001:2857"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"Months","id":"0:3225:2145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5519:40133":{"id":"5:5519:40133","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:276:3166","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:276:3166","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2069:3049":{"id":"0:2069:3049","crate_id":0,"name":"with_minute","span":{"filename":"src/traits.rs","begin":[302,4],"end":[302,52]},"visibility":"default","docs":"Makes a new value with the minute number changed.\n\nReturns `None` when the resulting value would be invalid.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["min",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:199:2678":{"id":"0:199:2678","crate_id":0,"name":"with_month","span":{"filename":"src/date.rs","begin":[442,4],"end":[444,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["month",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:484:1525":{"id":"0:484:1525","crate_id":0,"name":"sub","span":{"filename":"src/datetime/mod.rs","begin":[1300,4],"end":[1302,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"Months","id":"0:3225:2145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:2850:2288","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2351:3270":{"id":"0:2351:3270","crate_id":0,"name":"Nanosecond6","span":{"filename":"src/format/mod.rs","begin":[209,4],"end":[209,15]},"visibility":"default","docs":"Same as [`Nanosecond`](#variant.Nanosecond) but the accuracy is fixed to 6.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:2371:3298":{"id":"0:2371:3298","crate_id":0,"name":"RFC3339","span":{"filename":"src/format/mod.rs","begin":[250,4],"end":[250,11]},"visibility":"default","docs":"RFC 3339 & ISO 8601 date and time syntax.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:1916:2799":{"id":"0:1916:2799","crate_id":0,"name":"timestamp","span":{"filename":"src/offset/mod.rs","begin":[359,4],"end":[361,5]},"visibility":"default","docs":"Makes a new `DateTime` from the number of non-leap seconds\nsince January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\")\nand the number of nanoseconds since the last whole non-leap second.\n\nThe nanosecond part can exceed 1,000,000,000 in order to represent a\n[leap second](NaiveTime#leap-second-handling), but only when `secs % 60 == 59`.\n(The true \"UNIX timestamp\" cannot represent a leap second unambiguously.)\n\n# Panics\n\nPanics on the out-of-range number of seconds and/or invalid nanosecond,\nfor a non-panicking version see [`timestamp_opt`](#method.timestamp_opt).","links":{"NaiveTime#leap-second-handling":"0:2742:2121"},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `timestamp_opt()` instead\")]"],"deprecation":{"since":"0.4.23","note":"use `timestamp_opt()` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["secs",{"primitive":"i64"}],["nsecs",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:173:2558":{"id":"0:173:2558","crate_id":0,"name":"MAX_UTC","span":{"filename":"src/date.rs","begin":[320,4],"end":[320,78]},"visibility":"public","docs":"The maximum possible `Date`.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Utc","id":"0:3059:2118","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"default":"_"}}},"0:146:2586":{"id":"0:146:2586","crate_id":0,"name":"and_hms_milli","span":{"filename":"src/date.rs","begin":[123,4],"end":[125,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date, hour, minute, second and millisecond.\nThe millisecond part can exceed 1,000 in order to represent the leap second.\nThe offset in the current date is preserved.\n\nPanics on invalid hour, minute, second and/or millisecond.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"Use and_hms_milli_opt() instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"Use and_hms_milli_opt() instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}],["milli",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:376:2985":{"id":"0:376:2985","crate_id":0,"name":"parse_from_rfc3339","span":{"filename":"src/datetime/mod.rs","begin":[784,4],"end":[791,5]},"visibility":"public","docs":"Parses an RFC 3339 date-and-time string into a `DateTime<FixedOffset>` value.\n\nParses all valid RFC 3339 values (as well as the subset of valid ISO 8601 values that are\nalso valid RFC 3339 date-and-time values) and returns a new [`DateTime`] with a\n[`FixedOffset`] corresponding to the parsed timezone. While RFC 3339 values come in a wide\nvariety of shapes and sizes, `1996-12-19T16:39:57-08:00` is an example of the most commonly\nencountered variety of RFC 3339 formats.\n\nWhy isn't this named `parse_from_iso8601`? That's because ISO 8601 allows representing\nvalues in a wide range of formats, only some of which represent actual date-and-time\ninstances (rather than periods, ranges, dates, or times). Some valid ISO 8601 values are\nalso simultaneously valid RFC 3339 values, but not all RFC 3339 values are valid ISO 8601\nvalues (or the other way around).","links":{"`DateTime`":"0:2154:2111","`FixedOffset`":"0:2761:2117"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:906:2133","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:326:2835":{"id":"0:326:2835","crate_id":0,"name":"timestamp_subsec_nanos","span":{"filename":"src/datetime/mod.rs","begin":[335,4],"end":[337,5]},"visibility":"public","docs":"Returns the number of nanoseconds since the last second boundary\n\nIn event of a leap second this may exceed 999,999,999.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:855:1016":{"id":"0:855:1016","crate_id":0,"name":"next","span":{"filename":"src/format/strftime.rs","begin":[206,4],"end":[225,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Item","id":"0:2493:168","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2398":{"id":"0:2398","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[260,34],"end":[260,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2787:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalFixed","id":"0:2389:3299","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2833:8772-0:2589:2135":{"id":"a:2:2833:8772-0:2589:2135","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2833:8772","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Days","id":"0:2589:2135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2287:3218":{"id":"0:2287:3218","crate_id":0,"name":"NumDaysFromSun","span":{"filename":"src/format/mod.rs","begin":[132,4],"end":[132,18]},"visibility":"default","docs":"Day of the week, where Sunday = 0 and Saturday = 6 (FW=PW=1).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:58:203":{"id":"0:58:203","crate_id":0,"name":"Output","span":{"filename":"src/duration.rs","begin":[332,4],"end":[332,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:63":{"id":"0:63","crate_id":0,"name":null,"span":{"filename":"src/duration.rs","begin":[359,0],"end":[369,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Mul","id":"2:2855:2286","args":{"angle_bracketed":{"args":[{"type":{"primitive":"i32"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:64:203","0:65:972"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:417:3039":{"id":"0:417:3039","crate_id":0,"name":"minute","span":{"filename":"src/datetime/mod.rs","begin":[1090,4],"end":[1092,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:354:60":{"id":"0:354:60","crate_id":0,"name":"default","span":{"filename":"src/datetime/mod.rs","begin":[640,4],"end":[642,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2582-0:2493:168":{"id":"b:2:2582-0:2493:168","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Item","id":"0:2493:168","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2585:133","2:2586:1588"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2726":{"id":"0:2726","crate_id":0,"name":null,"span":{"filename":"src/naive/isoweek.rs","begin":[19,9],"end":[19,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2786:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IsoWeek","id":"0:2724:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2582-0:2742:2121":{"id":"b:2:2582-0:2742:2121","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2585:133","2:2586:1588"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1485-0:1159:2130":{"id":"0:1485-0:1159:2130","crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[20,54],"end":[20,66]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"import":{"source":"self::datetime::MIN_DATETIME","name":"MIN_DATETIME","id":"0:1159:2130","glob":false}}},"0:1901":{"id":"0:1901","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[191,0],"end":[204,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:9531:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"LocalResult","id":"0:3073:2138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:1903:1661"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2187:3040":{"id":"0:2187:3040","crate_id":0,"name":"second","span":{"filename":"src/format/parsed.rs","begin":[91,4],"end":[91,27]},"visibility":"public","docs":"Second number (0--60, accounting for leap seconds).","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"bindings":[]}}}}}},"0:1995:3463":{"id":"0:1995:3463","crate_id":0,"name":"num_days_from_sunday","span":{"filename":"src/weekday.rs","begin":[141,4],"end":[143,5]},"visibility":"public","docs":"Returns a day-of-week number starting from Sunday = 0.\n\n`w`:                        | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun`\n--------------------------- | ----- | ----- | ----- | ----- | ----- | ----- | -----\n`w.num_days_from_sunday()`: | 1     | 2     | 3     | 4     | 5     | 6     | 0","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2582-0:3124:2116":{"id":"b:2:2582-0:3124:2116","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Weekday","id":"0:3124:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2585:133","2:2586:1588"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2021":{"id":"0:2021","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[161,0],"end":[181,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Month","id":"0:3170:2114","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2022:133","0:2023:1588"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2202":{"id":"0:2202","crate_id":0,"name":null,"span":{"filename":"src/format/parsed.rs","begin":[21,38],"end":[21,45]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(clippy :: manual_non_exhaustive)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2618:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parsed","id":"0:2170:2717","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2203:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2577-0:3256:2158":{"id":"b:2:2577-0:3256:2158","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2547:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRange","id":"0:3256:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2580:133","2:2581:1590"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1032:729":{"id":"0:1032:729","crate_id":0,"name":"format","span":{"filename":"src/naive/date.rs","begin":[1315,4],"end":[1317,5]},"visibility":"public","docs":"Formats the date with the specified format string.\nSee the [`format::strftime` module](../format/strftime/index.html)\non the supported escape sequences.\n\nThis returns a `DelayedFormat`,\nwhich gets converted to a string only when actual formatting happens.\nYou may use the `to_string` method to get a `String`,\nor just feed it into `print!` and other formatting macros.\n(In this way it avoids the redundant memory allocation.)\n\nA wrong format string does *not* issue an error immediately.\nRather, converting or formatting the `DelayedFormat` fails.\nYou are recommended to immediately use `DelayedFormat` for this reason.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet d = NaiveDate::from_ymd_opt(2015, 9, 5).unwrap();\nassert_eq!(d.format(\"%Y-%m-%d\").to_string(), \"2015-09-05\");\nassert_eq!(d.format(\"%A, %-d %B, %C%y\").to_string(), \"Saturday, 5 September, 2015\");\n```\n\nThe resulting `DelayedFormat` can be formatted directly via the `Display` trait.\n\n```\n# use chrono::NaiveDate;\n# let d = NaiveDate::from_ymd_opt(2015, 9, 5).unwrap();\nassert_eq!(format!(\"{}\", d.format(\"%Y-%m-%d\")), \"2015-09-05\");\nassert_eq!(format!(\"{}\", d.format(\"%A, %-d %B, %C%y\")), \"Saturday, 5 September, 2015\");\n```","links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\"))]","#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["fmt",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"DelayedFormat","id":"0:2161:2526","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"StrftimeItems","id":"0:2209:2527","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:682-0:2426:3314":{"id":"b:5:682-0:2426:3314","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetFormat","id":"0:2426:3314","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:684:9349","5:685:9350","5:686:9351"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1979:718":{"id":"0:1979:718","crate_id":0,"name":"fmt","span":{"filename":"src/round.rs","begin":[278,4],"end":[290,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9506:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9487:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:682-0:2264:3194":{"id":"b:5:682-0:2264:3194","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Numeric","id":"0:2264:3194","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:684:9349","5:685:9350","5:686:9351"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2264-0:2127:2112":{"id":"b:2:2264-0:2127:2112","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2258:101","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SecondsFormat","id":"0:2127:2112","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2266:7207"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1904:2122":{"id":"0:1904:2122","crate_id":0,"name":"Offset","span":{"filename":"src/offset/mod.rs","begin":[207,0],"end":[210,1]},"visibility":"public","docs":"The offset from the local time to UTC.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"items":["0:1905:2774"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:9531:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:1879","0:1549"]}}},"0:1159:2130":{"id":"0:1159:2130","crate_id":0,"name":"MIN_DATETIME","span":{"filename":"src/naive/datetime/mod.rs","begin":[45,0],"end":[45,59]},"visibility":"public","docs":"The minimum possible `NaiveDateTime`.","links":{},"attrs":["#[deprecated(since = \"0.4.20\", note = \"Use NaiveDateTime::MIN instead\")]"],"deprecation":{"since":"0.4.20","note":"Use NaiveDateTime::MIN instead"},"inner":{"constant":{"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"NaiveDateTime::MIN","value":null,"is_literal":false}}},"0:1027:2648":{"id":"0:1027:2648","crate_id":0,"name":"years_since","span":{"filename":"src/naive/date.rs","begin":[1226,4],"end":[1238,5]},"visibility":"public","docs":"Returns the number of whole years from the given `base` until `self`.\n\n# Errors\n\nReturns `None` if `base < self`.","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["base",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:245":{"id":"0:245","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[534,0],"end":[541,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:2850:2288","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:247:203","0:248:1525"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1552:718":{"id":"0:1552:718","crate_id":0,"name":"fmt","span":{"filename":"src/offset/fixed.rs","begin":[155,4],"end":[167,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9506:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9487:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2264-0:3106:2141":{"id":"b:2:2264-0:3106:2141","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2258:101","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RoundingError","id":"0:3106:2141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2266:7207"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:223:1100":{"id":"0:223:1100","crate_id":0,"name":"partial_cmp","span":{"filename":"src/date.rs","begin":[485,4],"end":[487,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Ordering","id":"2:30807:200","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:577:729":{"id":"0:577:729","crate_id":0,"name":"format","span":{"filename":"src/format/formatting.rs","begin":[161,0],"end":[177,1]},"visibility":"public","docs":"Tries to format given arguments with given formatting items.\nInternally used by `DelayedFormat`.","links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\"))]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["w",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9506:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["date",{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"crate::NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"bindings":[]}}}}],["time",{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"crate::NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"bindings":[]}}}}],["off",{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"tuple":[{"resolved_path":{"name":"String","id":"5:7489:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},{"resolved_path":{"name":"crate::FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]}}}}],"bindings":[]}}}}],["items",{"generic":"I"}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9487:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7627:173","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"B"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2255:100","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"super::Item","id":"0:2493:168","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1407:6692":{"id":"0:1407:6692","crate_id":0,"name":"from_num_seconds_from_midnight","span":{"filename":"src/naive/time/mod.rs","begin":[437,4],"end":[439,5]},"visibility":"public","docs":"Makes a new `NaiveTime` from the number of seconds since midnight and nanosecond.\n\nThe nanosecond part is allowed to exceed 1,000,000,000 in order to represent a\n[leap second](#leap-second-handling), but only when `secs % 60 == 59`.\n\n# Panics\n\nPanics on invalid number of seconds and/or nanosecond.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note =\n\"use `from_num_seconds_from_midnight_opt()` instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"use `from_num_seconds_from_midnight_opt()` instead"},"inner":{"function":{"decl":{"inputs":[["secs",{"primitive":"u32"}],["nano",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:334:2635":{"id":"0:334:2635","crate_id":0,"name":"checked_sub_signed","span":{"filename":"src/datetime/mod.rs","begin":[410,4],"end":[414,5]},"visibility":"public","docs":"Subtracts given `Duration` from the current date and time.\n\n# Errors\n\nReturns `None` if the resulting date would be out of range.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"OldDuration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2308":{"id":"0:2308","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[105,9],"end":[105,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Numeric","id":"0:2264:3194","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2309:454"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2833:8772-0:2628:4959":{"id":"a:2:2833:8772-0:2628:4959","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2833:8772","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateDaysIterator","id":"0:2628:4959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1185:2852":{"id":"0:1185:2852","crate_id":0,"name":"checked_add_months","span":{"filename":"src/naive/datetime/mod.rs","begin":[700,4],"end":[702,5]},"visibility":"public","docs":"Adds given `Months` to the current date and time.\n\nUses the last day of the month if the day does not exist in the resulting month.\n\n# Errors\n\nReturns `None` if the resulting date would be out of range.\n\n# Example\n\n```\nuse chrono::{Months, NaiveDate};\n\nassert_eq!(\n    NaiveDate::from_ymd_opt(2014, 1, 1).unwrap().and_hms_opt(1, 0, 0).unwrap()\n        .checked_add_months(Months::new(1)),\n    Some(NaiveDate::from_ymd_opt(2014, 2, 1).unwrap().and_hms_opt(1, 0, 0).unwrap())\n);\n\nassert_eq!(\n    NaiveDate::from_ymd_opt(2014, 1, 1).unwrap().and_hms_opt(1, 0, 0).unwrap()\n        .checked_add_months(Months::new(core::i32::MAX as u32 + 1)),\n    None\n);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"Months","id":"0:3225:2145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2660:660":{"id":"0:2660:660","crate_id":0,"name":"eq","span":{"filename":"src/naive/date.rs","begin":[2053,35],"end":[2053,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"NaiveDateWeeksIterator","id":"0:2648:4960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:428":{"id":"0:428","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1167,0],"end":[1167,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Tz"},"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:2788:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2788:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:981:2125":{"id":"0:981:2125","crate_id":0,"name":"MAX_DATE","span":{"filename":"src/naive/date.rs","begin":[204,0],"end":[204,47]},"visibility":"public","docs":"The maximum possible `NaiveDate` (December 31, 262143 CE).","links":{},"attrs":["#[deprecated(since = \"0.4.20\", note = \"Use NaiveDate::MAX instead\")]"],"deprecation":{"since":"0.4.20","note":"Use NaiveDate::MAX instead"},"inner":{"constant":{"type":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"NaiveDate::MAX","value":null,"is_literal":false}}},"b:2:2577-0:2648:4960":{"id":"b:2:2577-0:2648:4960","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2547:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateWeeksIterator","id":"0:2648:4960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2580:133","2:2581:1590"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2756":{"id":"0:2756","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[205,42],"end":[205,45]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["min","max","clamp"],"trait":{"name":"Ord","id":"2:2361:199","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2757:461"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3075:196":{"id":"0:3075:196","crate_id":0,"name":"None","span":{"filename":"src/offset/mod.rs","begin":[45,4],"end":[45,8]},"visibility":"default","docs":"Given local time representation is invalid.\nThis can occur when, for example, the positive timezone transition.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:309:2130":{"id":"0:309:2130","crate_id":0,"name":"MIN_DATETIME","span":{"filename":"src/datetime/mod.rs","begin":[93,0],"end":[93,65]},"visibility":"public","docs":"The minimum possible `DateTime<Utc>`.","links":{},"attrs":["#[deprecated(since = \"0.4.20\", note = \"Use DateTime::MIN_UTC instead\")]"],"deprecation":{"since":"0.4.20","note":"Use DateTime::MIN_UTC instead"},"inner":{"constant":{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::offset::Utc","id":"0:3059:2118","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"expr":"DateTime<Utc>::MIN_UTC","value":null,"is_literal":false}}},"b:2:2577-0:2628:4959":{"id":"b:2:2577-0:2628:4959","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2547:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateDaysIterator","id":"0:2628:4959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2580:133","2:2581:1590"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:57":{"id":"0:57","crate_id":0,"name":null,"span":{"filename":"src/duration.rs","begin":[331,0],"end":[343,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Add","id":"2:2845:2284","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:58:203","0:59:301"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2604":{"id":"0:2604","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[134,39],"end":[134,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2325:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Days","id":"0:2589:2135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2605:660"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3168":{"id":"0:3168","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[224,27],"end":[224,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2330:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseWeekdayError","id":"0:3160:2143","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3412-0:2120:2106":{"id":"b:2:3412-0:2120:2106","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3410:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["2:3414:1603"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2507:3194":{"id":"0:2507:3194","crate_id":0,"name":"Numeric","span":{"filename":"src/format/mod.rs","begin":[346,4],"end":[346,25]},"visibility":"default","docs":"Numeric item. Can be optionally padded to the maximal length (if any) when formatting;\nthe parser simply ignores any padded whitespace and zeroes.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:2509:1725","0:2510:1726"]},"discriminant":null}}},"0:1245:301":{"id":"0:1245:301","crate_id":0,"name":"add","span":{"filename":"src/naive/datetime/mod.rs","begin":[1566,4],"end":[1570,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"Duration","id":"2:44300:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2470:781":{"id":"0:2470:781","crate_id":0,"name":"hash","span":{"filename":"src/format/mod.rs","begin":[298,44],"end":[298,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9755:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2776:242-0:2426:3314":{"id":"a:2:2776:242-0:2426:3314","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2776:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetFormat","id":"0:2426:3314","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2264-0:2106:2104":{"id":"b:2:2264-0:2106:2104","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2258:101","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRangeError","id":"0:2106:2104","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2266:7207"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1230:3040":{"id":"0:1230:3040","crate_id":0,"name":"second","span":{"filename":"src/naive/datetime/mod.rs","begin":[1376,4],"end":[1378,5]},"visibility":"default","docs":"Returns the second number from 0 to 59.\n\nSee also the [`NaiveTime::second`] method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Timelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().and_hms_milli_opt(12, 34, 56, 789).unwrap();\nassert_eq!(dt.second(), 56);\n```","links":{"`NaiveTime::second`":"0:1429:3040"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2742:2121":{"id":"0:2742:2121","crate_id":0,"name":"NaiveTime","span":{"filename":"src/naive/time/mod.rs","begin":[207,0],"end":[210,1]},"visibility":"public","docs":"ISO 8601 time without timezone.\nAllows for the nanosecond precision and optional leap second representation.\n\n# Leap Second Handling\n\nSince 1960s, the manmade atomic clock has been so accurate that\nit is much more accurate than Earth's own motion.\nIt became desirable to define the civil time in terms of the atomic clock,\nbut that risks the desynchronization of the civil time from Earth.\nTo account for this, the designers of the Coordinated Universal Time (UTC)\nmade that the UTC should be kept within 0.9 seconds of the observed Earth-bound time.\nWhen the mean solar day is longer than the ideal (86,400 seconds),\nthe error slowly accumulates and it is necessary to add a **leap second**\nto slow the UTC down a bit.\n(We may also remove a second to speed the UTC up a bit, but it never happened.)\nThe leap second, if any, follows 23:59:59 of June 30 or December 31 in the UTC.\n\nFast forward to the 21st century,\nwe have seen 26 leap seconds from January 1972 to December 2015.\nYes, 26 seconds. Probably you can read this paragraph within 26 seconds.\nBut those 26 seconds, and possibly more in the future, are never predictable,\nand whether to add a leap second or not is known only before 6 months.\nInternet-based clocks (via NTP) do account for known leap seconds,\nbut the system API normally doesn't (and often can't, with no network connection)\nand there is no reliable way to retrieve leap second information.\n\nChrono does not try to accurately implement leap seconds; it is impossible.\nRather, **it allows for leap seconds but behaves as if there are *no other* leap seconds.**\nVarious operations will ignore any possible leap second(s)\nexcept when any of the operands were actually leap seconds.\n\nIf you cannot tolerate this behavior,\nyou must use a separate `TimeZone` for the International Atomic Time (TAI).\nTAI is like UTC but has no leap seconds, and thus slightly differs from UTC.\nChrono does not yet provide such implementation, but it is planned.\n\n## Representing Leap Seconds\n\nThe leap second is indicated via fractional seconds more than 1 second.\nThis makes possible to treat a leap second as the prior non-leap second\nif you don't care about sub-second accuracy.\nYou should use the proper formatting to get the raw leap second.\n\nAll methods accepting fractional seconds will accept such values.\n\n```\nuse chrono::{NaiveDate, NaiveTime, Utc};\n\nlet t = NaiveTime::from_hms_milli_opt(8, 59, 59, 1_000).unwrap();\n\nlet dt1 = NaiveDate::from_ymd_opt(2015, 7, 1).unwrap().and_hms_micro_opt(8, 59, 59, 1_000_000).unwrap();\n\nlet dt2 = NaiveDate::from_ymd_opt(2015, 6, 30).unwrap().and_hms_nano_opt(23, 59, 59, 1_000_000_000).unwrap().and_local_timezone(Utc).unwrap();\n# let _ = (t, dt1, dt2);\n```\n\nNote that the leap second can happen anytime given an appropriate time zone;\n2015-07-01 01:23:60 would be a proper leap second if UTC+01:24 had existed.\nPractically speaking, though, by the time of the first leap second on 1972-06-30,\nevery time zone offset around the world has standardized to the 5-minute alignment.\n\n## Date And Time Arithmetics\n\nAs a concrete example, let's assume that `03:00:60` and `04:00:60` are leap seconds.\nIn reality, of course, leap seconds are separated by at least 6 months.\nWe will also use some intuitive concise notations for the explanation.\n\n`Time + Duration`\n(short for [`NaiveTime::overflowing_add_signed`](#method.overflowing_add_signed)):\n\n- `03:00:00 + 1s = 03:00:01`.\n- `03:00:59 + 60s = 03:01:59`.\n- `03:00:59 + 61s = 03:02:00`.\n- `03:00:59 + 1s = 03:01:00`.\n- `03:00:60 + 1s = 03:01:00`.\n  Note that the sum is identical to the previous.\n- `03:00:60 + 60s = 03:01:59`.\n- `03:00:60 + 61s = 03:02:00`.\n- `03:00:60.1 + 0.8s = 03:00:60.9`.\n\n`Time - Duration`\n(short for [`NaiveTime::overflowing_sub_signed`](#method.overflowing_sub_signed)):\n\n- `03:00:00 - 1s = 02:59:59`.\n- `03:01:00 - 1s = 03:00:59`.\n- `03:01:00 - 60s = 03:00:00`.\n- `03:00:60 - 60s = 03:00:00`.\n  Note that the result is identical to the previous.\n- `03:00:60.7 - 0.4s = 03:00:60.3`.\n- `03:00:60.7 - 0.9s = 03:00:59.8`.\n\n`Time - Time`\n(short for [`NaiveTime::signed_duration_since`](#method.signed_duration_since)):\n\n- `04:00:00 - 03:00:00 = 3600s`.\n- `03:01:00 - 03:00:00 = 60s`.\n- `03:00:60 - 03:00:00 = 60s`.\n  Note that the difference is identical to the previous.\n- `03:00:60.6 - 03:00:59.4 = 1.2s`.\n- `03:01:00 - 03:00:59.8 = 0.2s`.\n- `03:01:00 - 03:00:60.5 = 0.5s`.\n  Note that the difference is larger than the previous,\n  even though the leap second clearly follows the previous whole second.\n- `04:00:60.9 - 03:00:60.1 =\n  (04:00:60.9 - 04:00:00) + (04:00:00 - 03:01:00) + (03:01:00 - 03:00:60.1) =\n  60.9s + 3540s + 0.9s = 3601.8s`.\n\nIn general,\n\n- `Time + Duration` unconditionally equals to `Duration + Time`.\n\n- `Time - Duration` unconditionally equals to `Time + (-Duration)`.\n\n- `Time1 - Time2` unconditionally equals to `-(Time2 - Time1)`.\n\n- Associativity does not generally hold, because\n  `(Time + Duration1) - Duration2` no longer equals to `Time + (Duration1 - Duration2)`\n  for two positive durations.\n\n    - As a special case, `(Time + Duration) - Duration` also does not equal to `Time`.\n\n    - If you can assume that all durations have the same sign, however,\n      then the associativity holds:\n      `(Time + Duration1) + Duration2` equals to `Time + (Duration1 + Duration2)`\n      for two positive durations.\n\n## Reading And Writing Leap Seconds\n\nThe \"typical\" leap seconds on the minute boundary are\ncorrectly handled both in the formatting and parsing.\nThe leap second in the human-readable representation\nwill be represented as the second part being 60, as required by ISO 8601.\n\n```\nuse chrono::{Utc, NaiveDate};\n\nlet dt = NaiveDate::from_ymd_opt(2015, 6, 30).unwrap().and_hms_milli_opt(23, 59, 59, 1_000).unwrap().and_local_timezone(Utc).unwrap();\nassert_eq!(format!(\"{:?}\", dt), \"2015-06-30T23:59:60Z\");\n```\n\nThere are hypothetical leap seconds not on the minute boundary nevertheless supported by Chrono.\nThey are allowed for the sake of completeness and consistency; there were several \"exotic\" time\nzone offsets with fractional minutes prior to UTC after all.\nFor such cases the human-readable representation is ambiguous and would be read back to the next\nnon-leap second.\n\nA `NaiveTime` with a leap second that is not on a minute boundary can only be created from a\n[`DateTime`](crate::DateTime) with fractional minutes as offset, or using\n[`Timelike::with_nanosecond()`].\n\n```\nuse chrono::{FixedOffset, NaiveDate, TimeZone};\n\nlet paramaribo_pre1945 = FixedOffset::east_opt(-13236).unwrap(); // -03:40:36\nlet leap_sec_2015 =\n    NaiveDate::from_ymd_opt(2015, 6, 30).unwrap().and_hms_milli_opt(23, 59, 59, 1_000).unwrap();\nlet dt1 = paramaribo_pre1945.from_utc_datetime(&leap_sec_2015);\nassert_eq!(format!(\"{:?}\", dt1), \"2015-06-30T20:19:24-03:40:36\");\nassert_eq!(format!(\"{:?}\", dt1.time()), \"20:19:24\");\n\nlet next_sec = NaiveDate::from_ymd_opt(2015, 7, 1).unwrap().and_hms_opt(0, 0, 0).unwrap();\nlet dt2 = paramaribo_pre1945.from_utc_datetime(&next_sec);\nassert_eq!(format!(\"{:?}\", dt2), \"2015-06-30T20:19:24-03:40:36\");\nassert_eq!(format!(\"{:?}\", dt2.time()), \"20:19:24\");\n\nassert!(dt1.time() != dt2.time());\nassert!(dt1.time().to_string() == dt2.time().to_string());\n```\n\nSince Chrono alone cannot determine any existence of leap seconds,\n**there is absolutely no guarantee that the leap second read has actually happened**.","links":{"crate::DateTime":"0:2154:2111","`Timelike::with_nanosecond()`":"0:2071:3062"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:1398","a:2:2793:252-0:2742:2121","a:2:2776:242-0:2742:2121","a:2:8606:8818-0:2742:2121","a:2:2833:8772-0:2742:2121","a:2:8607:8817-0:2742:2121","b:0:1956-0:2742:2121","b:2:2571-0:2742:2121","b:2:2577-0:2742:2121","b:2:2582-0:2742:2121","b:2:2261-0:2742:2121","b:2:3412-0:2742:2121","b:2:2264-0:2742:2121","b:2:2567-0:2742:2121","b:5:5792-0:2742:2121","b:5:682-0:2742:2121","0:1471","0:1439","0:1454","0:1557","0:1462","0:1436","0:2756","0:1444","0:1446","0:1456","0:1451","0:1426","0:2754","0:2749","0:2745","0:1464","0:1449","0:2748","0:2758","0:1560","0:2751","0:1459","0:2759","0:2746","0:1441"]}}},"0:1480-0:981:2125":{"id":"0:1480-0:981:2125","crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[15,21],"end":[15,29]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"import":{"source":"self::date::MAX_DATE","name":"MAX_DATE","id":"0:981:2125","glob":false}}},"0:2736":{"id":"0:2736","crate_id":0,"name":null,"span":{"filename":"src/naive/isoweek.rs","begin":[19,41],"end":[19,45]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2788:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IsoWeek","id":"0:2724:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2033":{"id":"0:2033","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[248,0],"end":[252,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9531:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseMonthError","id":"0:3246:2146","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2034:718"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2260:718":{"id":"0:2260:718","crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[82,37],"end":[82,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9506:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9487:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3118":{"id":"0:3118","crate_id":0,"name":null,"span":{"filename":"src/round.rs","begin":[238,23],"end":[238,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2325:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RoundingError","id":"0:3106:2141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3119:660"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1846:2122":{"id":"0:1846:2122","crate_id":0,"name":"Offset","span":{"filename":"src/offset/local/mod.rs","begin":[153,4],"end":[153,30]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:3091:660":{"id":"0:3091:660","crate_id":0,"name":"eq","span":{"filename":"src/offset/mod.rs","begin":[41,16],"end":[41,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"LocalResult","id":"0:3073:2138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:75:2412":{"id":"0:75:2412","crate_id":0,"name":"sum","span":{"filename":"src/duration.rs","begin":[398,4],"end":[400,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["iter",{"generic":"I"}]],"output":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7627:173","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1487-0:2742:2121":{"id":"0:1487-0:2742:2121","crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[22,0],"end":[22,30]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::time::NaiveTime","name":"NaiveTime","id":"0:2742:2121","glob":false}}},"b:2:2582-0:3052:2107":{"id":"b:2:2582-0:3052:2107","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Local","id":"0:3052:2107","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2585:133","2:2586:1588"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2776:242-0:2610:2119":{"id":"a:2:2776:242-0:2610:2119","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2776:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:422:3049":{"id":"0:422:3049","crate_id":0,"name":"with_minute","span":{"filename":"src/datetime/mod.rs","begin":[1127,4],"end":[1129,5]},"visibility":"default","docs":"Makes a new `DateTime` with the minute number changed.\n\nSee also the [`NaiveTime::with_minute`] method.\n\n# Errors\n\n- The value for `minute` is invalid.\n- The local time at the resulting date does not exist or is ambiguous, for example during a\n  daylight saving time transition.","links":{"`NaiveTime::with_minute`":"0:1432:3049"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["min",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1202:2712":{"id":"0:1202:2712","crate_id":0,"name":"UNIX_EPOCH","span":{"filename":"src/naive/datetime/mod.rs","begin":[994,4],"end":[995,82]},"visibility":"public","docs":"The Unix Epoch, 1970-01-01 00:00:00.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1368:718":{"id":"0:1368:718","crate_id":0,"name":"fmt","span":{"filename":"src/naive/isoweek.rs","begin":[136,4],"end":[145,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9506:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9487:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3102":{"id":"0:3102","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[41,44],"end":[41,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hash","id":"2:9747:148","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9747:148","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LocalResult","id":"0:3073:2138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:3104:781"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:682-0:2209:2527":{"id":"b:5:682-0:2209:2527","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StrftimeItems","id":"0:2209:2527","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["5:684:9349","5:685:9350","5:686:9351"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2571-0:3106:2141":{"id":"b:2:2571-0:3106:2141","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RoundingError","id":"0:3106:2141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2573:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2503:1725":{"id":"0:2503:1725","crate_id":0,"name":"0","span":{"filename":"src/format/mod.rs","begin":[339,10],"end":[339,17]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}},"0:3259:454":{"id":"0:3259:454","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[573,9],"end":[573,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"OutOfRange","id":"0:3256:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8606:8818-0:2589:2135":{"id":"a:2:8606:8818-0:2589:2135","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8606:8818","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Days","id":"0:2589:2135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2106:2104":{"id":"0:2106:2104","crate_id":0,"name":"OutOfRangeError","span":{"filename":"src/duration.rs","begin":[444,0],"end":[444,31]},"visibility":"public","docs":"Represents error when converting `Duration` to/from a standard library\nimplementation\n\nThe `std::time::Duration` supports a range from zero to `u64::MAX`\n*seconds*, while this module supports signed range of up to\n`i64::MAX` of *milliseconds*.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:2793:252-0:2106:2104","a:2:2776:242-0:2106:2104","a:2:8606:8818-0:2106:2104","a:2:2833:8772-0:2106:2104","a:2:8607:8817-0:2106:2104","b:2:2571-0:2106:2104","b:2:2577-0:2106:2104","b:2:2582-0:2106:2104","b:2:2261-0:2106:2104","b:2:3412-0:2106:2104","b:2:2264-0:2106:2104","b:2:2567-0:2106:2104","b:5:5792-0:2106:2104","b:5:682-0:2106:2104","0:2117","0:2115","0:2113","0:2111","0:2114","0:2118","0:82","0:2109","0:80"]}}},"0:62:1525":{"id":"0:62:1525","crate_id":0,"name":"sub","span":{"filename":"src/duration.rs","begin":[348,4],"end":[356,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1200:2325":{"id":"0:1200:2325","crate_id":0,"name":"MIN","span":{"filename":"src/naive/datetime/mod.rs","begin":[988,4],"end":[988,78]},"visibility":"public","docs":"The minimum possible `NaiveDateTime`.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1106:718":{"id":"0:1106:718","crate_id":0,"name":"fmt","span":{"filename":"src/naive/date.rs","begin":[2108,4],"end":[2125,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9506:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9487:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1539":{"id":"0:1539","crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[118,0],"end":[124,1]},"visibility":"default","docs":"Parsing a `str` into a `FixedOffset` uses the format [`%z`](crate::format::strftime).","links":{"crate::format::strftime":"0:835:3169"},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:12066:3084","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1540:132","0:1541:3085"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:495:203":{"id":"0:495:203","crate_id":0,"name":"Output","span":{"filename":"src/datetime/mod.rs","begin":[1324,4],"end":[1324,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}}},"0:2186:3039":{"id":"0:2186:3039","crate_id":0,"name":"minute","span":{"filename":"src/format/parsed.rs","begin":[88,4],"end":[88,27]},"visibility":"public","docs":"Minute number (0--59).","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"bindings":[]}}}}}},"a:2:8606:8818-0:2127:2112":{"id":"a:2:8606:8818-0:2127:2112","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8606:8818","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SecondsFormat","id":"0:2127:2112","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:3414:1603":{"id":"2:3414:1603","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:39333:13921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2612":{"id":"0:2612","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[193,9],"end":[193,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2786:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:682-0:3073:2138":{"id":"b:5:682-0:3073:2138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LocalResult","id":"0:3073:2138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["5:684:9349","5:685:9350","5:686:9351"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:51:2395":{"id":"0:51:2395","crate_id":0,"name":"is_zero","span":{"filename":"src/duration.rs","begin":[286,4],"end":[288,5]},"visibility":"public","docs":"Returns `true` if the duration equals `Duration::zero()`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2479":{"id":"0:2479","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[319,9],"end":[319,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9531:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Colons","id":"0:2472:3319","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2480:718"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:192:2673":{"id":"0:192:2673","crate_id":0,"name":"day0","span":{"filename":"src/date.rs","begin":[416,4],"end":[418,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:909:718":{"id":"0:909:718","crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[425,4],"end":[436,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9506:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9487:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:526-0:309:2130":{"id":"0:526-0:309:2130","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[520,58],"end":[520,70]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"import":{"source":"datetime::MIN_DATETIME","name":"MIN_DATETIME","id":"0:309:2130","glob":false}}},"0:2037-0:3225:2145":{"id":"0:2037-0:3225:2145","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[548,23],"end":[548,29]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"month::Months","name":"Months","id":"0:3225:2145","glob":false}}},"0:974":{"id":"0:974","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[45,0],"end":[126,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"NaiveWeek","id":"0:2584:2137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:975:4984","0:976:4990","0:977:2337"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1971:132":{"id":"0:1971:132","crate_id":0,"name":"Err","span":{"filename":"src/round.rs","begin":[158,4],"end":[158,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"RoundingError","id":"0:3106:2141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:1035:5376":{"id":"0:1035:5376","crate_id":0,"name":"iter_weeks","span":{"filename":"src/naive/date.rs","begin":[1410,4],"end":[1412,5]},"visibility":"public","docs":"Returns an iterator that steps by weeks across all representable dates.\n\n# Example\n\n```\n# use chrono::NaiveDate;\n\nlet expected = [\n    NaiveDate::from_ymd_opt(2016, 2, 27).unwrap(),\n    NaiveDate::from_ymd_opt(2016, 3, 5).unwrap(),\n    NaiveDate::from_ymd_opt(2016, 3, 12).unwrap(),\n    NaiveDate::from_ymd_opt(2016, 3, 19).unwrap(),\n];\n\nlet mut count = 0;\nfor (idx, d) in NaiveDate::from_ymd_opt(2016, 2, 27).unwrap().iter_weeks().take(4).enumerate() {\n   assert_eq!(d, expected[idx]);\n   count += 1;\n}\nassert_eq!(count, 4);\n\nfor d in NaiveDate::from_ymd_opt(2016, 3, 19).unwrap().iter_weeks().rev().take(4) {\n    count -= 1;\n    assert_eq!(d, expected[count]);\n}\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"NaiveDateWeeksIterator","id":"0:2648:4960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2261-0:3170:2114":{"id":"b:2:2261-0:3170:2114","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2255:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Month","id":"0:3170:2114","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2263:2522"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1098:168":{"id":"0:1098:168","crate_id":0,"name":"Item","span":{"filename":"src/naive/date.rs","begin":[2059,4],"end":[2059,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"a:2:8606:8818-0:2445:3316":{"id":"a:2:8606:8818-0:2445:3316","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8606:8818","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetPrecision","id":"0:2445:3316","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2567-0:3170:2114":{"id":"b:2:2567-0:3170:2114","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Month","id":"0:3170:2114","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2570:3122"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:451:203":{"id":"0:451:203","crate_id":0,"name":"Output","span":{"filename":"src/datetime/mod.rs","begin":[1212,4],"end":[1212,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}}},"0:655:1002":{"id":"0:655:1002","crate_id":0,"name":"new","span":{"filename":"src/format/parsed.rs","begin":[128,4],"end":[130,5]},"visibility":"public","docs":"Returns the initial value of parsed parts.","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Parsed","id":"0:2170:2717","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2630":{"id":"0:2630","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[2017,9],"end":[2017,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9531:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateDaysIterator","id":"0:2628:4959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2631:718"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2632":{"id":"0:2632","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[2017,16],"end":[2017,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2788:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateDaysIterator","id":"0:2628:4959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2532":{"id":"0:2532","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[330,38],"end":[330,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9747:148","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Item","id":"0:2493:168","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:2534:781"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3054":{"id":"0:3054","crate_id":0,"name":null,"span":{"filename":"src/offset/local/mod.rs","begin":[106,9],"end":[106,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2788:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Local","id":"0:3052:2107","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2666":{"id":"0:2666","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[2053,62],"end":[2053,65]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["min","max","clamp"],"trait":{"name":"Ord","id":"2:2361:199","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateWeeksIterator","id":"0:2648:4960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2667:461"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1922:7056":{"id":"0:1922:7056","crate_id":0,"name":"datetime_from_str","span":{"filename":"src/offset/mod.rs","begin":[474,4],"end":[478,5]},"visibility":"default","docs":"Parses a string with the specified format string and returns a\n`DateTime` with the current offset.\n\nSee the [`crate::format::strftime`] module on the\nsupported escape sequences.\n\nIf the to-be-parsed string includes an offset, it *must* match the\noffset of the TimeZone, otherwise an error will be returned.\n\nSee also [`DateTime::parse_from_str`] which gives a [`DateTime`] with\nparsed [`FixedOffset`].","links":{"`crate::format::strftime`":"0:835:3169","`FixedOffset`":"0:2761:2117","`DateTime::parse_from_str`":"0:377:2998","`DateTime`":"0:2154:2111"},"attrs":["#[deprecated(since = \"0.4.29\", note =\n\"use `DateTime::parse_from_str` instead\")]"],"deprecation":{"since":"0.4.29","note":"use `DateTime::parse_from_str` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["fmt",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:906:2133","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:850:1002":{"id":"0:850:1002","crate_id":0,"name":"new","span":{"filename":"src/format/strftime.rs","begin":[181,4],"end":[190,5]},"visibility":"public","docs":"Creates a new parsing iterator from the `strftime`-like format string.","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"StrftimeItems","id":"0:2209:2527","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2776:242-0:3170:2114":{"id":"a:2:2776:242-0:3170:2114","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2776:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Month","id":"0:3170:2114","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1186:2635":{"id":"0:1186:2635","crate_id":0,"name":"checked_sub_signed","span":{"filename":"src/naive/datetime/mod.rs","begin":[768,4],"end":[778,5]},"visibility":"public","docs":"Subtracts given `Duration` from the current date and time.\n\nAs a part of Chrono's [leap second handling](./struct.NaiveTime.html#leap-second-handling),\nthe subtraction assumes that **there is no leap second ever**,\nexcept when the `NaiveDateTime` itself represents a leap second\nin which case the assumption becomes that **there is exactly a single leap second ever**.\n\n# Errors\n\nReturns `None` if the resulting date would be out of range.\n\n# Example\n\n```\nuse chrono::{Duration, NaiveDate};\n\nlet from_ymd = |y, m, d| NaiveDate::from_ymd_opt(y, m, d).unwrap();\n\nlet d = from_ymd(2016, 7, 8);\nlet hms = |h, m, s| d.and_hms_opt(h, m, s).unwrap();\nassert_eq!(hms(3, 5, 7).checked_sub_signed(Duration::zero()),\n           Some(hms(3, 5, 7)));\nassert_eq!(hms(3, 5, 7).checked_sub_signed(Duration::seconds(1)),\n           Some(hms(3, 5, 6)));\nassert_eq!(hms(3, 5, 7).checked_sub_signed(Duration::seconds(-1)),\n           Some(hms(3, 5, 8)));\nassert_eq!(hms(3, 5, 7).checked_sub_signed(Duration::seconds(3600 + 60)),\n           Some(hms(2, 4, 7)));\nassert_eq!(hms(3, 5, 7).checked_sub_signed(Duration::seconds(86_400)),\n           Some(from_ymd(2016, 7, 7).and_hms_opt(3, 5, 7).unwrap()));\n\nlet hmsm = |h, m, s, milli| d.and_hms_milli_opt(h, m, s, milli).unwrap();\nassert_eq!(hmsm(3, 5, 7, 450).checked_sub_signed(Duration::milliseconds(670)),\n           Some(hmsm(3, 5, 6, 780)));\n```\n\nOverflow returns `None`.\n\n```\n# use chrono::{Duration, NaiveDate};\n# let hms = |h, m, s| NaiveDate::from_ymd_opt(2016, 7, 8).unwrap().and_hms_opt(h, m, s).unwrap();\nassert_eq!(hms(3, 5, 7).checked_sub_signed(Duration::days(1_000_000_000)), None);\n```\n\nLeap seconds are handled,\nbut the subtraction assumes that it is the only leap second happened.\n\n```\n# use chrono::{Duration, NaiveDate};\n# let from_ymd = |y, m, d| NaiveDate::from_ymd_opt(y, m, d).unwrap();\n# let hmsm = |h, m, s, milli| from_ymd(2016, 7, 8).and_hms_milli_opt(h, m, s, milli).unwrap();\nlet leap = hmsm(3, 5, 59, 1_300);\nassert_eq!(leap.checked_sub_signed(Duration::zero()),\n           Some(hmsm(3, 5, 59, 1_300)));\nassert_eq!(leap.checked_sub_signed(Duration::milliseconds(200)),\n           Some(hmsm(3, 5, 59, 1_100)));\nassert_eq!(leap.checked_sub_signed(Duration::milliseconds(500)),\n           Some(hmsm(3, 5, 59, 800)));\nassert_eq!(leap.checked_sub_signed(Duration::seconds(60)),\n           Some(hmsm(3, 5, 0, 300)));\nassert_eq!(leap.checked_sub_signed(Duration::days(1)),\n           Some(from_ymd(2016, 7, 7).and_hms_milli_opt(3, 6, 0, 300).unwrap()));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"OldDuration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2793:252-0:2243:3177":{"id":"a:2:2793:252-0:2243:3177","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2793:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Pad","id":"0:2243:3177","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:314:2561":{"id":"0:314:2561","crate_id":0,"name":"from_utc","span":{"filename":"src/datetime/mod.rs","begin":[134,4],"end":[136,5]},"visibility":"public","docs":"Makes a new `DateTime` from its components: a `NaiveDateTime` in UTC and an `Offset`.","links":{},"attrs":["#[inline]","#[must_use]","#[deprecated(since = \"0.4.27\", note =\n\"Use TimeZone::from_utc_datetime() or DateTime::from_naive_utc_and_offset instead\")]"],"deprecation":{"since":"0.4.27","note":"Use TimeZone::from_utc_datetime() or DateTime::from_naive_utc_and_offset instead"},"inner":{"function":{"decl":{"inputs":[["datetime",{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["offset",{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Tz"},"trait":{"name":"","id":"0:1906:2123","args":null}}}]],"output":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1958:7892":{"id":"0:1958:7892","crate_id":0,"name":"round_subsecs","span":{"filename":"src/round.rs","begin":[51,4],"end":[64,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["digits",{"primitive":"u16"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:332:2633":{"id":"0:332:2633","crate_id":0,"name":"checked_add_signed","span":{"filename":"src/datetime/mod.rs","begin":[377,4],"end":[381,5]},"visibility":"public","docs":"Adds given `Duration` to the current date and time.\n\n# Errors\n\nReturns `None` if the resulting date would be out of range.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"OldDuration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2387:781":{"id":"0:2387:781","crate_id":0,"name":"hash","span":{"filename":"src/format/mod.rs","begin":[176,38],"end":[176,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9755:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:156:2613":{"id":"0:156:2613","crate_id":0,"name":"succ_opt","span":{"filename":"src/date.rs","begin":[217,4],"end":[219,5]},"visibility":"public","docs":"Makes a new `Date` for the next date.\n\nReturns `None` when `self` is the last representable date.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2618":{"id":"0:2618","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[193,24],"end":[193,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9747:148","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2619:781"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2392:718":{"id":"0:2392:718","crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[260,9],"end":[260,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9506:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9487:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2770:781":{"id":"0:2770:781","crate_id":0,"name":"hash","span":{"filename":"src/offset/fixed.rs","begin":[25,24],"end":[25,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9755:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2359:3283":{"id":"0:2359:3283","crate_id":0,"name":"TimezoneOffsetDoubleColon","span":{"filename":"src/format/mod.rs","begin":[227,4],"end":[227,29]},"visibility":"default","docs":"Offset from the local time to UTC with seconds (`+09:00:00` or `-04:00:00` or `+00:00:00`).\n\nIn the parser, the colon can be omitted and/or surrounded with any amount of whitespace.\nThe offset is limited from `-24:00:00` to `+24:00:00`,\nwhich is the same as [`FixedOffset`](../offset/struct.FixedOffset.html)'s range.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:1174:2799":{"id":"0:1174:2799","crate_id":0,"name":"timestamp","span":{"filename":"src/naive/datetime/mod.rs","begin":[396,4],"end":[401,5]},"visibility":"public","docs":"Returns the number of non-leap seconds since the midnight on January 1, 1970.\n\nNote that this does *not* account for the timezone!\nThe true \"UNIX timestamp\" would count seconds since the midnight *UTC* on the epoch.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet dt = NaiveDate::from_ymd_opt(1970, 1, 1).unwrap().and_hms_milli_opt(0, 0, 1, 980).unwrap();\nassert_eq!(dt.timestamp(), 1);\n\nlet dt = NaiveDate::from_ymd_opt(2001, 9, 9).unwrap().and_hms_opt(1, 46, 40).unwrap();\nassert_eq!(dt.timestamp(), 1_000_000_000);\n\nlet dt = NaiveDate::from_ymd_opt(1969, 12, 31).unwrap().and_hms_opt(23, 59, 59).unwrap();\nassert_eq!(dt.timestamp(), -1);\n\nlet dt = NaiveDate::from_ymd_opt(-1, 1, 1).unwrap().and_hms_opt(0, 0, 0).unwrap();\nassert_eq!(dt.timestamp(), -62198755200);\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3106:2141":{"id":"0:3106:2141","crate_id":0,"name":"RoundingError","span":{"filename":"src/round.rs","begin":[239,0],"end":[275,1]},"visibility":"public","docs":"An error from rounding by `Duration`\n\nSee: [`DurationRound`]","links":{"`DurationRound`":"0:1961:2140"},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:3107:7925","0:3109:7922","0:3111:7924"],"impls":["a:2:2793:252-0:3106:2141","a:2:2776:242-0:3106:2141","a:2:8606:8818-0:3106:2141","a:2:2833:8772-0:3106:2141","a:2:8607:8817-0:3106:2141","b:2:2571-0:3106:2141","b:2:2577-0:3106:2141","b:2:2582-0:3106:2141","b:2:2261-0:3106:2141","b:2:3412-0:3106:2141","b:2:2264-0:3106:2141","b:2:2567-0:3106:2141","b:5:5792-0:3106:2141","b:5:682-0:3106:2141","0:3115","0:3120","0:1980","0:3121","0:3117","0:3118","0:1978","0:3123","0:3113"]}}},"0:2647:461":{"id":"0:2647:461","crate_id":0,"name":"cmp","span":{"filename":"src/naive/date.rs","begin":[2017,62],"end":[2017,65]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"NaiveDateDaysIterator","id":"0:2628:4959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:30807:200","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2261-0:2589:2135":{"id":"b:2:2261-0:2589:2135","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2255:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Days","id":"0:2589:2135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2263:2522"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2776:242-0:3256:2158":{"id":"a:2:2776:242-0:3256:2158","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2776:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRange","id":"0:3256:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2261-0:2761:2117":{"id":"b:2:2261-0:2761:2117","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2255:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2263:2522"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2567-0:2321:3242":{"id":"b:2:2567-0:2321:3242","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalNumeric","id":"0:2321:3242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2570:3122"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2638":{"id":"0:2638","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[2017,35],"end":[2017,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2786:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateDaysIterator","id":"0:2628:4959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12484:39464":{"id":"2:12484:39464","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:12106:8527","`DoubleEndedIterator`":"2:7518:126","prim@char":"1:12067:450","str::matches":"2:12481:7444"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:43748:8563","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12111:8541","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12111:8541","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12126:8543","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12516:39472":{"id":"2:12516:39472","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12067:450","self::pattern":"2:12106:8527"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12111:8541","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2071:3062":{"id":"0:2071:3062","crate_id":0,"name":"with_nanosecond","span":{"filename":"src/traits.rs","begin":[316,4],"end":[316,57]},"visibility":"default","docs":"Makes a new value with nanoseconds since the whole non-leap second changed.\n\nReturns `None` when the resulting value would be invalid.\nAs with the [`nanosecond`](#tymethod.nanosecond) method,\nthe input range can exceed 1,000,000,000 for leap seconds.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["nano",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:1877:7066":{"id":"0:1877:7066","crate_id":0,"name":"offset_from_utc_date","span":{"filename":"src/offset/utc.rs","begin":[125,4],"end":[127,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["_utc",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Utc","id":"0:3059:2118","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2297:3228":{"id":"0:2297:3228","crate_id":0,"name":"Minute","span":{"filename":"src/format/mod.rs","begin":[142,4],"end":[142,10]},"visibility":"default","docs":"The number of minutes since the last whole hour (FW=PW=2).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:1921:2812":{"id":"0:1921:2812","crate_id":0,"name":"timestamp_micros","span":{"filename":"src/offset/mod.rs","begin":[455,4],"end":[460,5]},"visibility":"default","docs":"Makes a new `DateTime` from the number of non-leap microseconds\nsince January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\").\n\n#Example\n```\nuse chrono::{Utc, TimeZone};\n\nassert_eq!(Utc.timestamp_micros(1431648000000).unwrap().timestamp(), 1431648);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["micros",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"LocalResult","id":"0:3073:2138","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12433:37956":{"id":"2:12433:37956","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:12432:37951"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:43809:8570","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2582-0:2426:3314":{"id":"b:2:2582-0:2426:3314","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetFormat","id":"0:2426:3314","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2585:133","2:2586:1588"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2264-0:2170:2717":{"id":"b:2:2264-0:2170:2717","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2258:101","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parsed","id":"0:2170:2717","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2266:7207"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2380:660":{"id":"0:2380:660","crate_id":0,"name":"eq","span":{"filename":"src/format/mod.rs","begin":[176,16],"end":[176,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Fixed","id":"0:2334:2716","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2438:660":{"id":"0:2438:660","crate_id":0,"name":"eq","span":{"filename":"src/format/mod.rs","begin":[285,29],"end":[285,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"OffsetFormat","id":"0:2426:3314","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1015:2606":{"id":"0:1015:2606","crate_id":0,"name":"and_hms_nano_opt","span":{"filename":"src/naive/date.rs","begin":[1021,4],"end":[1030,5]},"visibility":"public","docs":"Makes a new `NaiveDateTime` from the current date, hour, minute, second and nanosecond.\n\nThe nanosecond part is allowed to exceed 1,000,000,000 in order to represent a [leap second](\n./struct.NaiveTime.html#leap-second-handling), but only when `sec == 59`.\n\n# Errors\n\nReturns `None` on invalid hour, minute, second and/or nanosecond.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet d = NaiveDate::from_ymd_opt(2015, 6, 3).unwrap();\nassert!(d.and_hms_nano_opt(12, 34, 56,   789_012_345).is_some());\nassert!(d.and_hms_nano_opt(12, 34, 59, 1_789_012_345).is_some()); // leap second\nassert!(d.and_hms_nano_opt(12, 34, 59, 2_789_012_345).is_none());\nassert!(d.and_hms_nano_opt(12, 34, 60,   789_012_345).is_none());\nassert!(d.and_hms_nano_opt(12, 60, 56,   789_012_345).is_none());\nassert!(d.and_hms_nano_opt(24, 34, 56,   789_012_345).is_none());\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}],["nano",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2083:2164":{"id":"0:2083:2164","crate_id":0,"name":"try_opt","span":{"filename":"src/lib.rs","begin":[601,0],"end":[608,1]},"visibility":"public","docs":"Workaround because `?` is not (yet) available in const context.","links":{},"attrs":["#[macro_export]"],"deprecation":null,"inner":{"macro":"macro_rules! try_opt {\n    ($e:expr) => { ... };\n}"}},"b:2:2571-0:2085:127":{"id":"b:2:2571-0:2085:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2573:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12504:4011":{"id":"2:12504:4011","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12067:450","self::pattern":"2:12106:8527"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12111:8541","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2462:454":{"id":"0:2462:454","crate_id":0,"name":"clone","span":{"filename":"src/format/mod.rs","begin":[298,22],"end":[298,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"OffsetPrecision","id":"0:2445:3316","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2580":{"id":"0:2580","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[386,38],"end":[386,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(clippy :: manual_non_exhaustive)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2788:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseErrorKind","id":"0:2553:3365","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1572:301":{"id":"0:1572:301","crate_id":0,"name":"add","span":{"filename":"src/offset/fixed.rs","begin":[241,4],"end":[243,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2614:660":{"id":"0:2614:660","crate_id":0,"name":"eq","span":{"filename":"src/naive/date.rs","begin":[193,9],"end":[193,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2735:461":{"id":"0:2735:461","crate_id":0,"name":"cmp","span":{"filename":"src/naive/isoweek.rs","begin":[19,36],"end":[19,39]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"IsoWeek","id":"0:2724:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:30807:200","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2577-0:3106:2141":{"id":"b:2:2577-0:3106:2141","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2547:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RoundingError","id":"0:3106:2141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2580:133","2:2581:1590"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2177:2144":{"id":"0:2177:2144","crate_id":0,"name":"month","span":{"filename":"src/format/parsed.rs","begin":[58,4],"end":[58,26]},"visibility":"public","docs":"Month (1--12).","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"bindings":[]}}}}}},"b:2:2582-0:3246:2146":{"id":"b:2:2582-0:3246:2146","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseMonthError","id":"0:3246:2146","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2585:133","2:2586:1588"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:682-0:2120:2106":{"id":"b:5:682-0:2120:2106","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["5:684:9349","5:685:9350","5:686:9351"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:311":{"id":"0:311","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[98,0],"end":[589,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:313:2763","0:314:2561","0:315:2772","0:316:2124","0:317:2789","0:318:2289","0:319:2799","0:320:2806","0:321:2812","0:322:2820","0:323:2821","0:324:2829","0:325:2832","0:326:2835","0:327:1053","0:328:2568","0:329:2627","0:331:2841","0:332:2633","0:333:2852","0:334:2635","0:335:2857","0:336:2859","0:337:2861","0:338:2640","0:340:2642","0:341:2567","0:342:2648","0:343:2875","0:344:2880","0:345:2899","0:346:2555","0:347:2558"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1252:301":{"id":"0:1252:301","crate_id":0,"name":"add","span":{"filename":"src/naive/datetime/mod.rs","begin":[1626,4],"end":[1628,5]},"visibility":"default","docs":"An addition of months to `NaiveDateTime` clamped to valid days in resulting month.\n\n# Panics\n\nPanics if the resulting date would be out of range.\n\n# Example\n\n```\nuse chrono::{Months, NaiveDate};\n\nassert_eq!(\n    NaiveDate::from_ymd_opt(2014, 1, 1).unwrap().and_hms_opt(1, 0, 0).unwrap() + Months::new(1),\n    NaiveDate::from_ymd_opt(2014, 2, 1).unwrap().and_hms_opt(1, 0, 0).unwrap()\n);\nassert_eq!(\n    NaiveDate::from_ymd_opt(2014, 1, 1).unwrap().and_hms_opt(0, 2, 0).unwrap() + Months::new(11),\n    NaiveDate::from_ymd_opt(2014, 12, 1).unwrap().and_hms_opt(0, 2, 0).unwrap()\n);\nassert_eq!(\n    NaiveDate::from_ymd_opt(2014, 1, 1).unwrap().and_hms_opt(0, 0, 3).unwrap() + Months::new(12),\n    NaiveDate::from_ymd_opt(2015, 1, 1).unwrap().and_hms_opt(0, 0, 3).unwrap()\n);\nassert_eq!(\n    NaiveDate::from_ymd_opt(2014, 1, 1).unwrap().and_hms_opt(0, 0, 4).unwrap() + Months::new(13),\n    NaiveDate::from_ymd_opt(2015, 2, 1).unwrap().and_hms_opt(0, 0, 4).unwrap()\n);\nassert_eq!(\n    NaiveDate::from_ymd_opt(2014, 1, 31).unwrap().and_hms_opt(0, 5, 0).unwrap() + Months::new(1),\n    NaiveDate::from_ymd_opt(2014, 2, 28).unwrap().and_hms_opt(0, 5, 0).unwrap()\n);\nassert_eq!(\n    NaiveDate::from_ymd_opt(2020, 1, 31).unwrap().and_hms_opt(6, 0, 0).unwrap() + Months::new(1),\n    NaiveDate::from_ymd_opt(2020, 2, 29).unwrap().and_hms_opt(6, 0, 0).unwrap()\n);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"Months","id":"0:3225:2145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:2845:2284","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8607:8817-0:3124:2116":{"id":"a:2:8607:8817-0:3124:2116","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8607:8817","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Weekday","id":"0:3124:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1984-0:3106:2141":{"id":"0:1984-0:3106:2141","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[542,31],"end":[542,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"round::RoundingError","name":"RoundingError","id":"0:3106:2141","glob":false}}},"0:1924:7059":{"id":"0:1924:7059","crate_id":0,"name":"offset_from_local_date","span":{"filename":"src/offset/mod.rs","begin":[484,4],"end":[484,85]},"visibility":"default","docs":"Creates the offset(s) for given local `NaiveDate` if possible.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["local",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"LocalResult","id":"0:3073:2138","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:1906:2123","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"a:2:8606:8818-0:2648:4960":{"id":"a:2:8606:8818-0:2648:4960","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8606:8818","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateWeeksIterator","id":"0:2648:4960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2793:252-0:3052:2107":{"id":"a:2:2793:252-0:3052:2107","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2793:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Local","id":"0:3052:2107","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:3231":{"id":"0:3231","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[221,22],"end":[221,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9531:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Months","id":"0:3225:2145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3232:718"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2833:8772-0:3052:2107":{"id":"a:2:2833:8772-0:3052:2107","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2833:8772","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Local","id":"0:3052:2107","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:503:718":{"id":"0:503:718","crate_id":0,"name":"fmt","span":{"filename":"src/datetime/mod.rs","begin":[1340,4],"end":[1343,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9506:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9487:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2582:781":{"id":"0:2582:781","crate_id":0,"name":"hash","span":{"filename":"src/format/mod.rs","begin":[386,44],"end":[386,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9755:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1102":{"id":"0:1102","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[2075,0],"end":[2081,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["rfind","nth_back","rfold","advance_back_by","try_rfold"],"trait":{"name":"DoubleEndedIterator","id":"2:7518:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateWeeksIterator","id":"0:2648:4960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1103:5552"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1104":{"id":"0:1104","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[2083,0],"end":[2083,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:7932:4969","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateWeeksIterator","id":"0:2648:4960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2685":{"id":"0:2685","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[75,53],"end":[75,58]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2686:454"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2582-0:2536:2132":{"id":"b:2:2582-0:2536:2132","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:2536:2132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2585:133","2:2586:1588"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:5792-0:2154:2111":{"id":"b:5:5792-0:2154:2111","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9536:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5790:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["5:5794:1565"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2582-0:3170:2114":{"id":"b:2:2582-0:3170:2114","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Month","id":"0:3170:2114","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2585:133","2:2586:1588"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2577-0:2170:2717":{"id":"b:2:2577-0:2170:2717","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2547:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parsed","id":"0:2170:2717","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2580:133","2:2581:1590"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2429:3321":{"id":"0:2429:3321","crate_id":0,"name":"allow_zulu","span":{"filename":"src/format/mod.rs","begin":[292,4],"end":[292,24]},"visibility":"public","docs":"Represent `+00:00` as `Z`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"bool"}}},"0:2435:454":{"id":"0:2435:454","crate_id":0,"name":"clone","span":{"filename":"src/format/mod.rs","begin":[285,22],"end":[285,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"OffsetFormat","id":"0:2426:3314","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:5792-0:2120:2106":{"id":"b:5:5792-0:2120:2106","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9536:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5790:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["5:5794:1565"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:896-0:2209:2527":{"id":"0:896-0:2209:2527","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[75,0],"end":[75,32]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"strftime::StrftimeItems","name":"StrftimeItems","id":"0:2209:2527","glob":false}}},"0:449":{"id":"0:449","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1211,0],"end":[1218,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Add","id":"2:2845:2284","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:451:203","0:452:301"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2793:252-0:2161:2526":{"id":"a:2:2793:252-0:2161:2526","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2793:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2793:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DelayedFormat","id":"0:2161:2526","args":{"angle_bracketed":{"args":[{"type":{"generic":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1261":{"id":"0:1261","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1707,0],"end":[1712,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"SubAssign","id":"2:2880:2524","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"2:44300:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1262:1526"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12501:7334":{"id":"2:12501:7334","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:12067:450","self::pattern":"2:12106:8527"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12111:8541","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12111:8541","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:12131:8542","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2833:8772-0:2170:2717":{"id":"a:2:2833:8772-0:2170:2717","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2833:8772","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parsed","id":"0:2170:2717","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3412-0:2154:2111":{"id":"b:2:3412-0:2154:2111","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3410:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["2:3414:1603"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1848:7059":{"id":"0:1848:7059","crate_id":0,"name":"offset_from_local_date","span":{"filename":"src/offset/local/mod.rs","begin":[160,4],"end":[163,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["local",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"LocalResult","id":"0:3073:2138","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:363":{"id":"0:363","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[688,0],"end":[696,1]},"visibility":"default","docs":"Convert a `DateTime<FixedOffset>` instance into a `DateTime<Local>` instance.","links":{},"attrs":["#[cfg(feature = \"clock\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::offset::Local","id":"0:3052:2107","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:364:744"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2101":{"id":"0:2101","crate_id":0,"name":null,"span":{"filename":"src/duration.rs","begin":[53,54],"end":[53,59]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9531:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2102:718"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:888-0:581:3172":{"id":"0:888-0:581:3172","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[65,29],"end":[65,40]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\"))]"],"deprecation":null,"inner":{"import":{"source":"formatting::format_item","name":"format_item","id":"0:581:3172","glob":false}}},"b:2:3412-0:2389:3299":{"id":"b:2:3412-0:2389:3299","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3410:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalFixed","id":"0:2389:3299","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3414:1603"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:180:2656":{"id":"0:180:2656","crate_id":0,"name":"format_with_items","span":{"filename":"src/date.rs","begin":[340,4],"end":[346,5]},"visibility":"public","docs":"Formats the date with the specified formatting items.","links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\"))]","#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["items",{"generic":"I"}]],"output":{"resolved_path":{"name":"DelayedFormat","id":"0:2161:2526","args":{"angle_bracketed":{"args":[{"type":{"generic":"I"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7627:173","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"B"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2255:100","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Item","id":"0:2493:168","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2621":{"id":"0:2621","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[193,30],"end":[193,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","lt","le","ge"],"trait":{"name":"PartialOrd","id":"2:2367:206","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2622:1100"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:457":{"id":"0:457","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1231,0],"end":[1239,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AddAssign","id":"2:2876:2523","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:459:302"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:492:1525":{"id":"0:492:1525","crate_id":0,"name":"sub","span":{"filename":"src/datetime/mod.rs","begin":[1318,4],"end":[1320,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"OldDuration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3239":{"id":"0:3239","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[221,39],"end":[221,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2786:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Months","id":"0:3225:2145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1225:2683":{"id":"0:1225:2683","crate_id":0,"name":"with_ordinal0","span":{"filename":"src/naive/datetime/mod.rs","begin":[1323,4],"end":[1325,5]},"visibility":"default","docs":"Makes a new `NaiveDateTime` with the day of year (starting from 0) changed.\n\nSee also the [`NaiveDate::with_ordinal0`] method.\n\n# Errors\n\nReturns `None` if the resulting date does not exist, or if the value for `ordinal0` is\ninvalid.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Datelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().and_hms_opt(12, 34, 56).unwrap();\nassert_eq!(dt.with_ordinal0(59),\n           Some(NaiveDate::from_ymd_opt(2015, 3, 1).unwrap().and_hms_opt(12, 34, 56).unwrap()));\nassert_eq!(dt.with_ordinal0(365), None); // 2015 had only 365 days\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2016, 9, 8).unwrap().and_hms_opt(12, 34, 56).unwrap();\nassert_eq!(dt.with_ordinal0(59),\n           Some(NaiveDate::from_ymd_opt(2016, 2, 29).unwrap().and_hms_opt(12, 34, 56).unwrap()));\nassert_eq!(dt.with_ordinal0(365),\n           Some(NaiveDate::from_ymd_opt(2016, 12, 31).unwrap().and_hms_opt(12, 34, 56).unwrap()));\n```","links":{"`NaiveDate::with_ordinal0`":"0:1061:2683"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["ordinal0",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2760:454":{"id":"0:2760:454","crate_id":0,"name":"clone","span":{"filename":"src/naive/time/mod.rs","begin":[205,53],"end":[205,58]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3237:781":{"id":"0:3237:781","crate_id":0,"name":"hash","span":{"filename":"src/month.rs","begin":[221,33],"end":[221,37]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9755:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2253":{"id":"0:2253","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[82,22],"end":[82,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2786:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Pad","id":"0:2243:3177","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3114:718":{"id":"0:3114:718","crate_id":0,"name":"fmt","span":{"filename":"src/round.rs","begin":[238,9],"end":[238,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9506:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9487:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:997:2714":{"id":"0:997:2714","crate_id":0,"name":"parse_and_remainder","span":{"filename":"src/naive/date.rs","begin":[604,4],"end":[608,5]},"visibility":"public","docs":"Parses a string from a user-specified format into a new `NaiveDate` value, and a slice with\nthe remaining portion of the string.\nSee the [`format::strftime` module](../format/strftime/index.html)\non the supported escape sequences.\n\nSimilar to [`parse_from_str`](#method.parse_from_str).\n\n# Example\n\n```rust\n# use chrono::{NaiveDate};\nlet (date, remainder) = NaiveDate::parse_and_remainder(\n    \"2015-02-18 trailing text\", \"%Y-%m-%d\").unwrap();\nassert_eq!(date, NaiveDate::from_ymd_opt(2015, 2, 18).unwrap());\nassert_eq!(remainder, \" trailing text\");\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}],["fmt",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:906:2133","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1542":{"id":"0:1542","crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[126,0],"end":[146,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ymd_opt","ymd","timestamp_opt","isoywd","yo","yo_opt","timestamp_millis_opt","timestamp_micros","isoywd_opt","timestamp_millis","datetime_from_str","from_utc_datetime","timestamp_nanos","from_local_date","timestamp","with_ymd_and_hms","from_local_datetime","from_utc_date"],"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1543:2122","0:1544:2624","0:1545:7059","0:1546:7061","0:1547:7066","0:1548:3880"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2024":{"id":"0:2024","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[183,0],"end":[218,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["from_u16","from_i32","from_isize","from_usize","from_f64","from_u128","from_i128","from_i8","from_f32","from_u8","from_i16","from_u32"],"trait":{"name":"FromPrimitive","id":"21:162:8064","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Month","id":"0:3170:2114","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2025:8066","0:2026:8065","0:2027:8153"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:682-0:3256:2158":{"id":"b:5:682-0:3256:2158","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRange","id":"0:3256:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:684:9349","5:685:9350","5:686:9351"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1890:6981":{"id":"0:1890:6981","crate_id":0,"name":"latest","span":{"filename":"src/offset/mod.rs","begin":[74,4],"end":[79,5]},"visibility":"public","docs":"Returns `Some` for the latest possible conversion result, or `None` if none.","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:355":{"id":"0:355","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[645,0],"end":[649,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2618:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::offset::FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:356:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2641":{"id":"0:2641","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[2017,46],"end":[2017,56]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","lt","le","ge"],"trait":{"name":"PartialOrd","id":"2:2367:206","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateDaysIterator","id":"0:2628:4959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2642:1100"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1980":{"id":"0:1980","crate_id":0,"name":null,"span":{"filename":"src/round.rs","begin":[295,0],"end":[300,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["description","source","cause","provide","type_id"],"trait":{"name":"Error","id":"2:2629:133","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RoundingError","id":"0:3106:2141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1981:2435"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3123":{"id":"0:3123","crate_id":0,"name":null,"span":{"filename":"src/round.rs","begin":[238,38],"end":[238,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2788:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RoundingError","id":"0:3106:2141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2506:1725":{"id":"0:2506:1725","crate_id":0,"name":"0","span":{"filename":"src/format/mod.rs","begin":[343,15],"end":[343,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Box","id":"5:276:3166","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}},"b:2:3412-0:2724:2136":{"id":"b:2:3412-0:2724:2136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3410:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IsoWeek","id":"0:2724:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3414:1603"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2571-0:2161:2526":{"id":"b:2:2571-0:2161:2526","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DelayedFormat","id":"0:2161:2526","args":{"angle_bracketed":{"args":[{"type":{"generic":"I"}}],"bindings":[]}}}},"items":["2:2573:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2571-0:2243:3177":{"id":"b:2:2571-0:2243:3177","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Pad","id":"0:2243:3177","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2573:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1910:3610":{"id":"0:1910:3610","crate_id":0,"name":"ymd","span":{"filename":"src/offset/mod.rs","begin":[252,4],"end":[254,5]},"visibility":"default","docs":"Makes a new `Date` from year, month, day and the current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\n\nThe time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),\nbut it will propagate to the `DateTime` values constructed via this date.\n\nPanics on the out-of-range date, invalid month and/or day.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `with_ymd_and_hms()` instead\")]","#[allow(deprecated)]"],"deprecation":{"since":"0.4.23","note":"use `with_ymd_and_hms()` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["year",{"primitive":"i32"}],["month",{"primitive":"u32"}],["day",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:410:2682":{"id":"0:410:2682","crate_id":0,"name":"with_ordinal","span":{"filename":"src/datetime/mod.rs","begin":[1063,4],"end":[1065,5]},"visibility":"default","docs":"Makes a new `DateTime` with the month number (starting from 0) changed.\n\nSee also the [`NaiveDate::with_ordinal`] method.\n\n# Errors\n\nReturns `None` if:\n- The resulting date does not exist.\n- The value for `ordinal` is invalid.\n- The local time at the resulting date does not exist or is ambiguous, for example during a\n  daylight saving time transition.","links":{"`NaiveDate::with_ordinal`":"0:1059:2682"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["ordinal",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2675":{"id":"0:2675","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[75,20],"end":[75,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2330:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2677":{"id":"0:2677","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[75,24],"end":[75,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9747:148","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2678:781"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2081:718":{"id":"0:2081:718","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[591,4],"end":[593,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9506:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9487:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:420:3045":{"id":"0:420:3045","crate_id":0,"name":"with_hour","span":{"filename":"src/datetime/mod.rs","begin":[1113,4],"end":[1115,5]},"visibility":"default","docs":"Makes a new `DateTime` with the hour number changed.\n\nSee also the [`NaiveTime::with_hour`] method.\n\n# Errors\n\nReturns `None` if:\n- The value for `hour` is invalid.\n- The local time at the resulting date does not exist or is ambiguous, for example during a\n  daylight saving time transition.","links":{"`NaiveTime::with_hour`":"0:1431:3045"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["hour",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2078":{"id":"0:2078","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[584,0],"end":[588,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9536:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRange","id":"0:3256:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2079:718"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1269":{"id":"0:1269","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1794,0],"end":[1800,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Add","id":"2:2845:2284","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Days","id":"0:2589:2135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1270:203","0:1271:301"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2582-0:2553:3365":{"id":"b:2:2582-0:2553:3365","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseErrorKind","id":"0:2553:3365","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2585:133","2:2586:1588"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1166:2919":{"id":"0:1166:2919","crate_id":0,"name":"from_timestamp_opt","span":{"filename":"src/naive/datetime/mod.rs","begin":[226,4],"end":[238,5]},"visibility":"public","docs":"Makes a new `NaiveDateTime` corresponding to a UTC date and time,\nfrom the number of non-leap seconds\nsince the midnight UTC on January 1, 1970 (aka \"UNIX timestamp\")\nand the number of nanoseconds since the last whole non-leap second.\n\nThe nanosecond part can exceed 1,000,000,000 in order to represent a\n[leap second](NaiveTime#leap-second-handling), but only when `secs % 60 == 59`.\n(The true \"UNIX timestamp\" cannot represent a leap second unambiguously.)\n\n# Errors\n\nReturns `None` if the number of seconds would be out of range for a `NaiveDateTime` (more\nthan ca. 262,000 years away from common era), and panics on an invalid nanosecond\n(2 seconds or more).\n\n# Example\n\n```\nuse chrono::NaiveDateTime;\nuse std::i64;\n\nlet from_timestamp_opt = NaiveDateTime::from_timestamp_opt;\n\nassert!(from_timestamp_opt(0, 0).is_some());\nassert!(from_timestamp_opt(0, 999_999_999).is_some());\nassert!(from_timestamp_opt(0, 1_500_000_000).is_none()); // invalid leap second\nassert!(from_timestamp_opt(59, 1_500_000_000).is_some()); // leap second\nassert!(from_timestamp_opt(59, 2_000_000_000).is_none());\nassert!(from_timestamp_opt(i64::MAX, 0).is_none());\n```","links":{"NaiveTime#leap-second-handling":"0:2742:2121"},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["secs",{"primitive":"i64"}],["nsecs",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:7484-0:2628:4959":{"id":"b:2:7484-0:2628:4959","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7627:173","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7480:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateDaysIterator","id":"0:2628:4959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:7486:168","2:7487:9308","2:7488:838"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"I"}}}},"0:685:3801":{"id":"0:685:3801","crate_id":0,"name":"set_minute","span":{"filename":"src/format/parsed.rs","begin":[257,4],"end":[259,5]},"visibility":"public","docs":"Tries to set the [`minute`](#structfield.minute) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:906:2133","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2067:3041":{"id":"0:2067:3041","crate_id":0,"name":"nanosecond","span":{"filename":"src/traits.rs","begin":[292,4],"end":[292,32]},"visibility":"default","docs":"Returns the number of nanoseconds since the whole non-leap second.\nThe range from 1,000,000,000 to 1,999,999,999 represents\nthe [leap second](./naive/struct.NaiveTime.html#leap-second-handling).","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"a:2:2776:242-0:2742:2121":{"id":"a:2:2776:242-0:2742:2121","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2776:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2109":{"id":"0:2109","crate_id":0,"name":null,"span":{"filename":"src/duration.rs","begin":[443,9],"end":[443,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9531:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRangeError","id":"0:2106:2104","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2110:718"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2541":{"id":"0:2541","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[374,16],"end":[374,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:2536:2132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2542:454"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2793:252-0:2668:2120":{"id":"a:2:2793:252-0:2668:2120","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2793:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12428:32727":{"id":"2:12428:32727","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:12427:32726"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5518":{"id":"5:5518","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5519:40133","5:5520:9116","5:5523:40134","5:5526:3485","5:5534:40135","5:5535:40136","5:5536:7569","5:5537:33888","5:5538:33889"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1562:1525":{"id":"0:1562:1525","crate_id":0,"name":"sub","span":{"filename":"src/offset/fixed.rs","begin":[214,4],"end":[216,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12437:3469":{"id":"2:12437:3469","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:12067:450","self::pattern":"2:12106:8527"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12111:8541","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:921:3085":{"id":"0:921:3085","crate_id":0,"name":"from_str","span":{"filename":"src/format/mod.rs","begin":[486,4],"end":[492,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41709:231","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:12066:3084","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1209:2674":{"id":"0:1209:2674","crate_id":0,"name":"ordinal","span":{"filename":"src/naive/datetime/mod.rs","begin":[1107,4],"end":[1109,5]},"visibility":"default","docs":"Returns the day of year starting from 1.\n\nThe return value ranges from 1 to 366. (The last day of year differs by years.)\n\nSee also the [`NaiveDate::ordinal`](./struct.NaiveDate.html#method.ordinal) method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Datelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2015, 9, 25).unwrap().and_hms_opt(12, 34, 56).unwrap();\nassert_eq!(dt.ordinal(), 268);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:497":{"id":"0:497","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1331,0],"end":[1337,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:2850:2288","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Days","id":"0:2589:2135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:499:203","0:500:1525"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2774:454":{"id":"0:2774:454","crate_id":0,"name":"clone","span":{"filename":"src/offset/fixed.rs","begin":[25,36],"end":[25,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1869":{"id":"0:1869","crate_id":0,"name":null,"span":{"filename":"src/offset/utc.rs","begin":[50,0],"end":[109,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"clock\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Utc","id":"0:3059:2118","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1870:2691","0:1871:7165"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3412-0:3059:2118":{"id":"b:2:3412-0:3059:2118","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3410:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Utc","id":"0:3059:2118","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3414:1603"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1928:2569":{"id":"0:1928:2569","crate_id":0,"name":"from_local_datetime","span":{"filename":"src/offset/mod.rs","begin":[502,4],"end":[505,5]},"visibility":"default","docs":"Converts the local `NaiveDateTime` to the timezone-aware `DateTime` if possible.","links":{},"attrs":["#[allow(clippy :: wrong_self_convention)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["local",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"LocalResult","id":"0:3073:2138","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2032:718":{"id":"0:2032:718","crate_id":0,"name":"fmt","span":{"filename":"src/month.rs","begin":[243,4],"end":[245,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9506:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9487:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:682-0:2127:2112":{"id":"b:5:682-0:2127:2112","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SecondsFormat","id":"0:2127:2112","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:684:9349","5:685:9350","5:686:9351"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2259":{"id":"0:2259","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[82,37],"end":[82,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9531:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Pad","id":"0:2243:3177","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2260:718"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2264-0:3124:2116":{"id":"b:2:2264-0:3124:2116","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2258:101","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Weekday","id":"0:3124:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2266:7207"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2793:252-0:2321:3242":{"id":"a:2:2793:252-0:2321:3242","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2793:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalNumeric","id":"0:2321:3242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1283":{"id":"0:1283","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1936,0],"end":[1940,1]},"visibility":"default","docs":"The default value for a NaiveDateTime is one with epoch 0\nthat is, 1st of January 1970 at 00:00:00.\n\n# Example\n\n```rust\nuse chrono::NaiveDateTime;\n\nlet default_date = NaiveDateTime::default();\nassert_eq!(Some(default_date), NaiveDateTime::from_timestamp_opt(0, 0));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2618:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1284:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12415:342":{"id":"2:12415:342","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:12416:341","`u8`":"1:12084:1612"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3086:454":{"id":"0:3086:454","crate_id":0,"name":"clone","span":{"filename":"src/offset/mod.rs","begin":[41,9],"end":[41,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LocalResult","id":"0:3073:2138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:682-0:2154:2111":{"id":"b:5:682-0:2154:2111","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["5:684:9349","5:685:9350","5:686:9351"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2261-0:2668:2120":{"id":"b:2:2261-0:2668:2120","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2255:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2263:2522"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1931:3880":{"id":"0:1931:3880","crate_id":0,"name":"offset_from_utc_datetime","span":{"filename":"src/offset/mod.rs","begin":[511,4],"end":[511,76]},"visibility":"default","docs":"Creates the offset for given UTC `NaiveDateTime`. This cannot fail.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["utc",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:1906:2123","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:1899:2597":{"id":"0:1899:2597","crate_id":0,"name":"and_hms_micro_opt","span":{"filename":"src/offset/mod.rs","begin":[153,4],"end":[166,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date, hour, minute, second and microsecond.\nThe microsecond part can exceed 1,000,000 in order to represent the leap second.\nThe offset in the current date is preserved.\n\nPropagates any error. Ambiguous result would be discarded.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}],["micro",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"LocalResult","id":"0:3073:2138","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2264-0:2553:3365":{"id":"b:2:2264-0:2553:3365","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2258:101","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseErrorKind","id":"0:2553:3365","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2266:7207"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1051:2675":{"id":"0:1051:2675","crate_id":0,"name":"ordinal0","span":{"filename":"src/naive/date.rs","begin":[1625,4],"end":[1627,5]},"visibility":"default","docs":"Returns the day of year starting from 0.\n\nThe return value ranges from 0 to 365. (The last day of year differs by years.)\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().ordinal0(), 250);\nassert_eq!(NaiveDate::from_ymd_opt(-308, 3, 14).unwrap().ordinal0(), 73);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3055":{"id":"0:3055","crate_id":0,"name":null,"span":{"filename":"src/offset/local/mod.rs","begin":[106,15],"end":[106,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Local","id":"0:3052:2107","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3056:454"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:218:660":{"id":"0:218:660","crate_id":0,"name":"eq","span":{"filename":"src/date.rs","begin":[477,4],"end":[479,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz2"}}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2475:3343":{"id":"0:2475:3343","crate_id":0,"name":"Colon","span":{"filename":"src/format/mod.rs","begin":[324,4],"end":[324,9]},"visibility":"default","docs":"Colon (`:`) as separator","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:1275":{"id":"0:1275","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1837,0],"end":[1843,1]},"visibility":"default","docs":"The `Debug` output of the naive date and time `dt` is the same as\n[`dt.format(\"%Y-%m-%dT%H:%M:%S%.f\")`](crate::format::strftime).\n\nThe string printed can be readily parsed via the `parse` method on `str`.\n\nIt should be noted that, for leap seconds not on the minute boundary,\nit may print a representation not distinguishable from non-leap seconds.\nThis doesn't matter in practice, since such leap seconds never happened.\n(By the time of the first leap second on 1972-06-30,\nevery time zone offset around the world has standardized to the 5-minute alignment.)\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet dt = NaiveDate::from_ymd_opt(2016, 11, 15).unwrap().and_hms_opt(7, 39, 24).unwrap();\nassert_eq!(format!(\"{:?}\", dt), \"2016-11-15T07:39:24\");\n```\n\nLeap seconds may also be used.\n\n```\n# use chrono::NaiveDate;\nlet dt = NaiveDate::from_ymd_opt(2015, 6, 30).unwrap().and_hms_milli_opt(23, 59, 59, 1_500).unwrap();\nassert_eq!(format!(\"{:?}\", dt), \"2015-06-30T23:59:60.500\");\n```","links":{"crate::format::strftime":"0:835:3169"},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9531:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1276:718"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1009:2578":{"id":"0:1009:2578","crate_id":0,"name":"and_hms_opt","span":{"filename":"src/naive/date.rs","begin":[863,4],"end":[866,5]},"visibility":"public","docs":"Makes a new `NaiveDateTime` from the current date, hour, minute and second.\n\nNo [leap second](./struct.NaiveTime.html#leap-second-handling) is allowed here;\nuse `NaiveDate::and_hms_*_opt` methods with a subsecond parameter instead.\n\n# Errors\n\nReturns `None` on invalid hour, minute and/or second.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet d = NaiveDate::from_ymd_opt(2015, 6, 3).unwrap();\nassert!(d.and_hms_opt(12, 34, 56).is_some());\nassert!(d.and_hms_opt(12, 34, 60).is_none()); // use `and_hms_milli_opt` instead\nassert!(d.and_hms_opt(12, 60, 56).is_none());\nassert!(d.and_hms_opt(24, 34, 56).is_none());\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1978":{"id":"0:1978","crate_id":0,"name":null,"span":{"filename":"src/round.rs","begin":[277,0],"end":[291,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9536:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RoundingError","id":"0:3106:2141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1979:718"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2582-0:2584:2137":{"id":"b:2:2582-0:2584:2137","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveWeek","id":"0:2584:2137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2585:133","2:2586:1588"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2264-0:2445:3316":{"id":"b:2:2264-0:2445:3316","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2258:101","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetPrecision","id":"0:2445:3316","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2266:7207"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2490":{"id":"0:2490","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[319,44],"end":[319,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9747:148","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Colons","id":"0:2472:3319","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2491:781"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1437:203":{"id":"0:1437:203","crate_id":0,"name":"Output","span":{"filename":"src/naive/time/mod.rs","begin":[1120,4],"end":[1120,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:2549":{"id":"0:2549","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[374,38],"end":[374,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2788:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:2536:2132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2547":{"id":"0:2547","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[374,34],"end":[374,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2330:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:2536:2132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1458:1525":{"id":"0:1458:1525","crate_id":0,"name":"sub","span":{"filename":"src/naive/time/mod.rs","begin":[1286,4],"end":[1288,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"OldDuration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:348":{"id":"0:348","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[591,0],"end":[629,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::offset::Utc","id":"0:3059:2118","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:349:2917","0:350:2712"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2020:980":{"id":"0:2020:980","crate_id":0,"name":"name","span":{"filename":"src/month.rs","begin":[143,4],"end":[158,5]},"visibility":"public","docs":"Get the name of the month\n\n```\nuse chrono::Month;\n\nassert_eq!(Month::January.name(), \"January\")\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":"'static","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3217:718":{"id":"0:3217:718","crate_id":0,"name":"fmt","span":{"filename":"src/month.rs","begin":[31,37],"end":[31,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9506:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9487:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:682-0:2610:2119":{"id":"b:5:682-0:2610:2119","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:684:9349","5:685:9350","5:686:9351"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1981:2435":{"id":"0:1981:2435","crate_id":0,"name":"description","span":{"filename":"src/round.rs","begin":[297,4],"end":[299,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:234:301":{"id":"0:234:301","crate_id":0,"name":"add","span":{"filename":"src/date.rs","begin":[506,4],"end":[508,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"OldDuration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1884:718":{"id":"0:1884:718","crate_id":0,"name":"fmt","span":{"filename":"src/offset/utc.rs","begin":[146,4],"end":[148,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9506:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9487:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5523:40134":{"id":"5:5523:40134","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7489:248"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7489:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12111:8541","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2776:242-0:3059:2118":{"id":"a:2:2776:242-0:3059:2118","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2776:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Utc","id":"0:3059:2118","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:2581:1590":{"id":"2:2581:1590","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:41709:231","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2205:781":{"id":"0:2205:781","crate_id":0,"name":"hash","span":{"filename":"src/format/parsed.rs","begin":[21,47],"end":[21,51]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9755:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2440":{"id":"0:2440","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[285,40],"end":[285,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2330:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetFormat","id":"0:2426:3314","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2442":{"id":"0:2442","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[285,44],"end":[285,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9747:148","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetFormat","id":"0:2426:3314","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2443:781"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2519":{"id":"0:2519","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[330,16],"end":[330,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2786:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Item","id":"0:2493:168","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:317:2789":{"id":"0:317:2789","crate_id":0,"name":"date_naive","span":{"filename":"src/datetime/mod.rs","begin":[198,4],"end":[201,5]},"visibility":"public","docs":"Retrieves the date component.\n\n# Panics\n\n[`DateTime`] internally stores the date and time in UTC with a [`NaiveDateTime`]. This\nmethod will panic if the offset from UTC would push the local date outside of the\nrepresentable range of a [`NaiveDate`].\n\n# Example\n\n```\nuse chrono::prelude::*;\n\nlet date: DateTime<Utc> = Utc.with_ymd_and_hms(2020, 1, 1, 0, 0, 0).unwrap();\nlet other: DateTime<FixedOffset> = FixedOffset::east_opt(23).unwrap().with_ymd_and_hms(2020, 1, 1, 0, 0, 0).unwrap();\nassert_eq!(date.date_naive(), other.date_naive());\n```","links":{"`NaiveDateTime`":"0:2668:2120","`DateTime`":"0:2154:2111","`NaiveDate`":"0:2610:2119"},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2195":{"id":"0:2195","crate_id":0,"name":null,"span":{"filename":"src/format/parsed.rs","begin":[21,16],"end":[21,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(clippy :: manual_non_exhaustive)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2325:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parsed","id":"0:2170:2717","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2196:660"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8607:8817-0:2389:3299":{"id":"a:2:8607:8817-0:2389:3299","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8607:8817","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalFixed","id":"0:2389:3299","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:904":{"id":"0:904","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[377,0],"end":[382,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ParseError","id":"0:2536:2132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:905:860"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:150:2597":{"id":"0:150:2597","crate_id":0,"name":"and_hms_micro_opt","span":{"filename":"src/date.rs","begin":[163,4],"end":[171,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date, hour, minute, second and microsecond.\nThe microsecond part can exceed 1,000,000 in order to represent the leap second.\nThe offset in the current date is preserved.\n\nReturns `None` on invalid hour, minute, second and/or microsecond.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}],["micro",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3119:660":{"id":"0:3119:660","crate_id":0,"name":"eq","span":{"filename":"src/round.rs","begin":[238,23],"end":[238,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"RoundingError","id":"0:3106:2141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2567-0:3246:2146":{"id":"b:2:2567-0:3246:2146","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseMonthError","id":"0:3246:2146","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2570:3122"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2243:3177":{"id":"0:2243:3177","crate_id":0,"name":"Pad","span":{"filename":"src/format/mod.rs","begin":[83,0],"end":[90,1]},"visibility":"public","docs":"Padding characters for numeric items.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:2244:196","0:2246:3180","0:2248:3182"],"impls":["a:2:2793:252-0:2243:3177","a:2:2776:242-0:2243:3177","a:2:8606:8818-0:2243:3177","a:2:2833:8772-0:2243:3177","a:2:8607:8817-0:2243:3177","b:2:2571-0:2243:3177","b:2:2577-0:2243:3177","b:2:2582-0:2243:3177","b:2:2261-0:2243:3177","b:2:3412-0:2243:3177","b:2:2264-0:2243:3177","b:2:2567-0:2243:3177","b:5:682-0:2243:3177","0:2254","0:2257","0:2253","0:2261","0:2259","0:2251","0:2250","0:2256"]}}},"0:2329:781":{"id":"0:2329:781","crate_id":0,"name":"hash","span":{"filename":"src/format/mod.rs","begin":[161,20],"end":[161,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9755:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1852-0:3052:2107":{"id":"0:1852-0:3052:2107","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[35,0],"end":[35,27]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"clock\")]"],"deprecation":null,"inner":{"import":{"source":"self::local::Local","name":"Local","id":"0:3052:2107","glob":false}}},"0:3087":{"id":"0:3087","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[41,16],"end":[41,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2786:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LocalResult","id":"0:3073:2138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:682-0:3106:2141":{"id":"b:5:682-0:3106:2141","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RoundingError","id":"0:3106:2141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:684:9349","5:685:9350","5:686:9351"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1462":{"id":"0:1462","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[1375,0],"end":[1379,1]},"visibility":"default","docs":"The `Display` output of the naive time `t` is the same as\n[`t.format(\"%H:%M:%S%.f\")`](../format/strftime/index.html).\n\nThe string printed can be readily parsed via the `parse` method on `str`.\n\nIt should be noted that, for leap seconds not on the minute boundary,\nit may print a representation not distinguishable from non-leap seconds.\nThis doesn't matter in practice, since such leap seconds never happened.\n(By the time of the first leap second on 1972-06-30,\nevery time zone offset around the world has standardized to the 5-minute alignment.)\n\n# Example\n\n```\nuse chrono::NaiveTime;\n\nassert_eq!(format!(\"{}\", NaiveTime::from_hms_opt(23, 56, 4).unwrap()),              \"23:56:04\");\nassert_eq!(format!(\"{}\", NaiveTime::from_hms_milli_opt(23, 56, 4, 12).unwrap()),    \"23:56:04.012\");\nassert_eq!(format!(\"{}\", NaiveTime::from_hms_micro_opt(23, 56, 4, 1234).unwrap()),  \"23:56:04.001234\");\nassert_eq!(format!(\"{}\", NaiveTime::from_hms_nano_opt(23, 56, 4, 123456).unwrap()), \"23:56:04.000123456\");\n```\n\nLeap seconds may also be used.\n\n```\n# use chrono::NaiveTime;\nassert_eq!(format!(\"{}\", NaiveTime::from_hms_milli_opt(6, 59, 59, 1_500).unwrap()), \"06:59:60.500\");\n```","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9536:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1463:718"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2539":{"id":"0:2539","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[374,9],"end":[374,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9531:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:2536:2132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2540:718"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1221:2681":{"id":"0:1221:2681","crate_id":0,"name":"with_day0","span":{"filename":"src/naive/datetime/mod.rs","begin":[1263,4],"end":[1265,5]},"visibility":"default","docs":"Makes a new `NaiveDateTime` with the day of month (starting from 0) changed.\n\nSee also the [`NaiveDate::with_day0`] method.\n\n# Errors\n\nReturns `None` if the resulting date does not exist, or if the value for `day0` is invalid.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Datelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().and_hms_opt(12, 34, 56).unwrap();\nassert_eq!(dt.with_day0(29), Some(NaiveDate::from_ymd_opt(2015, 9, 30).unwrap().and_hms_opt(12, 34, 56).unwrap()));\nassert_eq!(dt.with_day0(30), None); // no September 31\n```","links":{"`NaiveDate::with_day0`":"0:1058:2681"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["day0",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2167":{"id":"0:2167","crate_id":0,"name":null,"span":{"filename":"src/format/formatting.rs","begin":[50,9],"end":[50,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:9531:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9531:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DelayedFormat","id":"0:2161:2526","args":{"angle_bracketed":{"args":[{"type":{"generic":"I"}}],"bindings":[]}}}},"items":["0:2169:718"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12410:39457":{"id":"2:12410:39457","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nIf `index` is greater than the length of the string, this returns the length of the string.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:12408:39456"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1456":{"id":"0:1456","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[1282,0],"end":[1289,1]},"visibility":"default","docs":"Subtracts another `NaiveTime` from the current time.\nReturns a `Duration` within +/- 1 day.\nThis does not overflow or underflow at all.\n\nAs a part of Chrono's [leap second handling](#leap-second-handling),\nthe subtraction assumes that **there is no leap second ever**,\nexcept when any of the `NaiveTime`s themselves represents a leap second\nin which case the assumption becomes that\n**there are exactly one (or two) leap second(s) ever**.\n\nThe implementation is a wrapper around\n[`NaiveTime::signed_duration_since`](#method.signed_duration_since).\n\n# Example\n\n```\nuse chrono::{Duration, NaiveTime};\n\nlet from_hmsm = |h, m, s, milli| { NaiveTime::from_hms_milli_opt(h, m, s, milli).unwrap() };\n\nassert_eq!(from_hmsm(3, 5, 7, 900) - from_hmsm(3, 5, 7, 900), Duration::zero());\nassert_eq!(from_hmsm(3, 5, 7, 900) - from_hmsm(3, 5, 7, 875), Duration::milliseconds(25));\nassert_eq!(from_hmsm(3, 5, 7, 900) - from_hmsm(3, 5, 6, 925), Duration::milliseconds(975));\nassert_eq!(from_hmsm(3, 5, 7, 900) - from_hmsm(3, 5, 0, 900), Duration::seconds(7));\nassert_eq!(from_hmsm(3, 5, 7, 900) - from_hmsm(3, 0, 7, 900), Duration::seconds(5 * 60));\nassert_eq!(from_hmsm(3, 5, 7, 900) - from_hmsm(0, 5, 7, 900), Duration::seconds(3 * 3600));\nassert_eq!(from_hmsm(3, 5, 7, 900) - from_hmsm(4, 5, 7, 900), Duration::seconds(-3600));\nassert_eq!(from_hmsm(3, 5, 7, 900) - from_hmsm(2, 4, 6, 800),\n           Duration::seconds(3600 + 60 + 1) + Duration::milliseconds(100));\n```\n\nLeap seconds are handled, but the subtraction assumes that\nthere were no other leap seconds happened.\n\n```\n# use chrono::{Duration, NaiveTime};\n# let from_hmsm = |h, m, s, milli| { NaiveTime::from_hms_milli_opt(h, m, s, milli).unwrap() };\nassert_eq!(from_hmsm(3, 0, 59, 1_000) - from_hmsm(3, 0, 59, 0), Duration::seconds(1));\nassert_eq!(from_hmsm(3, 0, 59, 1_500) - from_hmsm(3, 0, 59, 0),\n           Duration::milliseconds(1500));\nassert_eq!(from_hmsm(3, 0, 59, 1_000) - from_hmsm(3, 0, 0, 0), Duration::seconds(60));\nassert_eq!(from_hmsm(3, 0, 0, 0) - from_hmsm(2, 59, 59, 1_000), Duration::seconds(1));\nassert_eq!(from_hmsm(3, 0, 59, 1_000) - from_hmsm(2, 59, 59, 1_000),\n           Duration::seconds(61));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:2850:2288","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1457:203","0:1458:1525"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2793:252-0:3106:2141":{"id":"a:2:2793:252-0:3106:2141","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2793:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RoundingError","id":"0:3106:2141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:7488:838":{"id":"2:7488:838","crate_id":2,"name":"into_iter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"I"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:378:2714":{"id":"0:378:2714","crate_id":0,"name":"parse_and_remainder","span":{"filename":"src/datetime/mod.rs","begin":[843,4],"end":[850,5]},"visibility":"public","docs":"Parses a string from a user-specified format into a `DateTime<FixedOffset>` value, and a\nslice with the remaining portion of the string.\n\nNote that this method *requires a timezone* in the input string. See\n[`NaiveDateTime::parse_and_remainder`] for a version that does not\nrequire a timezone in `s`. The returned [`DateTime`] value will have a [`FixedOffset`]\nreflecting the parsed timezone.\n\nSee the [`format::strftime` module](./format/strftime/index.html) for supported format\nsequences.\n\nSimilar to [`parse_from_str`](#method.parse_from_str).\n\n# Example\n\n```rust\n# use chrono::{DateTime, FixedOffset, TimeZone};\nlet (datetime, remainder) = DateTime::parse_and_remainder(\n    \"2015-02-18 23:16:09 +0200 trailing text\", \"%Y-%m-%d %H:%M:%S %z\").unwrap();\nassert_eq!(\n    datetime,\n    FixedOffset::east_opt(2*3600).unwrap().with_ymd_and_hms(2015, 2, 18, 23, 16, 9).unwrap()\n);\nassert_eq!(remainder, \" trailing text\");\n```","links":{"`NaiveDateTime::parse_and_remainder`":"0:1169:2714","`DateTime`":"0:2154:2111","`FixedOffset`":"0:2761:2117"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}],["fmt",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:906:2133","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:432":{"id":"0:432","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1170,0],"end":[1174,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"Tz2","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2325:205","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz2"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:435:660"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2575":{"id":"0:2575","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[386,23],"end":[386,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(clippy :: manual_non_exhaustive)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2325:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseErrorKind","id":"0:2553:3365","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2576:660"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2264-0:2493:168":{"id":"b:2:2264-0:2493:168","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2258:101","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Item","id":"0:2493:168","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2266:7207"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1421:729":{"id":"0:1421:729","crate_id":0,"name":"format","span":{"filename":"src/naive/time/mod.rs","begin":[830,4],"end":[832,5]},"visibility":"public","docs":"Formats the time with the specified format string.\nSee the [`format::strftime` module](../format/strftime/index.html)\non the supported escape sequences.\n\nThis returns a `DelayedFormat`,\nwhich gets converted to a string only when actual formatting happens.\nYou may use the `to_string` method to get a `String`,\nor just feed it into `print!` and other formatting macros.\n(In this way it avoids the redundant memory allocation.)\n\nA wrong format string does *not* issue an error immediately.\nRather, converting or formatting the `DelayedFormat` fails.\nYou are recommended to immediately use `DelayedFormat` for this reason.\n\n# Example\n\n```\nuse chrono::NaiveTime;\n\nlet t = NaiveTime::from_hms_nano_opt(23, 56, 4, 12_345_678).unwrap();\nassert_eq!(t.format(\"%H:%M:%S\").to_string(), \"23:56:04\");\nassert_eq!(t.format(\"%H:%M:%S%.6f\").to_string(), \"23:56:04.012345\");\nassert_eq!(t.format(\"%-I:%M %p\").to_string(), \"11:56 PM\");\n```\n\nThe resulting `DelayedFormat` can be formatted directly via the `Display` trait.\n\n```\n# use chrono::NaiveTime;\n# let t = NaiveTime::from_hms_nano_opt(23, 56, 4, 12_345_678).unwrap();\nassert_eq!(format!(\"{}\", t.format(\"%H:%M:%S\")), \"23:56:04\");\nassert_eq!(format!(\"{}\", t.format(\"%H:%M:%S%.6f\")), \"23:56:04.012345\");\nassert_eq!(format!(\"{}\", t.format(\"%-I:%M %p\")), \"11:56 PM\");\n```","links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\"))]","#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["fmt",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"DelayedFormat","id":"0:2161:2526","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"StrftimeItems","id":"0:2209:2527","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2266:7207":{"id":"2:2266:7207","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1413:6010":{"id":"0:1413:6010","crate_id":0,"name":"overflowing_add_signed","span":{"filename":"src/naive/time/mod.rs","begin":[579,4],"end":[640,5]},"visibility":"public","docs":"Adds given `Duration` to the current time, and also returns the number of *seconds*\nin the integral number of days ignored from the addition.\n\n# Example\n\n```\nuse chrono::{Duration, NaiveTime};\n\nlet from_hms = |h, m, s| { NaiveTime::from_hms_opt(h, m, s).unwrap() };\n\nassert_eq!(from_hms(3, 4, 5).overflowing_add_signed(Duration::hours(11)),\n           (from_hms(14, 4, 5), 0));\nassert_eq!(from_hms(3, 4, 5).overflowing_add_signed(Duration::hours(23)),\n           (from_hms(2, 4, 5), 86_400));\nassert_eq!(from_hms(3, 4, 5).overflowing_add_signed(Duration::hours(-7)),\n           (from_hms(20, 4, 5), -86_400));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"resolved_path":{"name":"OldDuration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"tuple":[{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},{"primitive":"i64"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2079:718":{"id":"0:2079:718","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[585,4],"end":[587,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9506:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9487:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1571:203":{"id":"0:1571:203","crate_id":0,"name":"Output","span":{"filename":"src/offset/fixed.rs","begin":[238,4],"end":[238,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}}},"0:2281:3213":{"id":"0:2281:3213","crate_id":0,"name":"WeekFromSun","span":{"filename":"src/format/mod.rs","begin":[126,4],"end":[126,15]},"visibility":"default","docs":"Week number, where the week 1 starts at the first Sunday of January (FW=PW=2).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:1896:2565":{"id":"0:1896:2565","crate_id":0,"name":"and_time","span":{"filename":"src/offset/mod.rs","begin":[100,4],"end":[107,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date and given `NaiveTime`.\nThe offset in the current date is preserved.\n\nPropagates any error. Ambiguous result would be discarded.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["time",{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"LocalResult","id":"0:3073:2138","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1059:2682":{"id":"0:1059:2682","crate_id":0,"name":"with_ordinal","span":{"filename":"src/naive/date.rs","begin":[1796,4],"end":[1798,5]},"visibility":"default","docs":"Makes a new `NaiveDate` with the day of year (starting from 1) changed.\n\n# Errors\n\nReturns `None` if the resulting date does not exist, or if the value for `ordinal` is\ninvalid.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(NaiveDate::from_ymd_opt(2015, 1, 1).unwrap().with_ordinal(60),\n           Some(NaiveDate::from_ymd_opt(2015, 3, 1).unwrap()));\nassert_eq!(NaiveDate::from_ymd_opt(2015, 1, 1).unwrap().with_ordinal(366),\n           None); // 2015 had only 365 days\n\nassert_eq!(NaiveDate::from_ymd_opt(2016, 1, 1).unwrap().with_ordinal(60),\n           Some(NaiveDate::from_ymd_opt(2016, 2, 29).unwrap()));\nassert_eq!(NaiveDate::from_ymd_opt(2016, 1, 1).unwrap().with_ordinal(366),\n           Some(NaiveDate::from_ymd_opt(2016, 12, 31).unwrap()));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["ordinal",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2261-0:2648:4960":{"id":"b:2:2261-0:2648:4960","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2255:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateWeeksIterator","id":"0:2648:4960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2263:2522"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2667:461":{"id":"0:2667:461","crate_id":0,"name":"cmp","span":{"filename":"src/naive/date.rs","begin":[2053,62],"end":[2053,65]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"NaiveDateWeeksIterator","id":"0:2648:4960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:30807:200","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8606:8818-0:2154:2111":{"id":"a:2:8606:8818-0:2154:2111","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Tz"},"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:8606:8818","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8606:8818","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2776:242-0:3052:2107":{"id":"a:2:2776:242-0:3052:2107","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2776:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Local","id":"0:3052:2107","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1084":{"id":"0:1084","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[2001,0],"end":[2008,1]},"visibility":"default","docs":"Subtracts another `NaiveDate` from the current date.\nReturns a `Duration` of integral numbers.\n\nThis does not overflow or underflow at all,\nas all possible output fits in the range of `Duration`.\n\nThe implementation is a wrapper around\n[`NaiveDate::signed_duration_since`](#method.signed_duration_since).\n\n# Example\n\n```\nuse chrono::{Duration, NaiveDate};\n\nlet from_ymd = |y, m, d| NaiveDate::from_ymd_opt(y, m, d).unwrap();\n\nassert_eq!(from_ymd(2014, 1, 1) - from_ymd(2014, 1, 1), Duration::zero());\nassert_eq!(from_ymd(2014, 1, 1) - from_ymd(2013, 12, 31), Duration::days(1));\nassert_eq!(from_ymd(2014, 1, 1) - from_ymd(2014, 1, 2), Duration::days(-1));\nassert_eq!(from_ymd(2014, 1, 1) - from_ymd(2013, 9, 23), Duration::days(100));\nassert_eq!(from_ymd(2014, 1, 1) - from_ymd(2013, 1, 1), Duration::days(365));\nassert_eq!(from_ymd(2014, 1, 1) - from_ymd(2010, 1, 1), Duration::days(365*4 + 1));\nassert_eq!(from_ymd(2014, 1, 1) - from_ymd(1614, 1, 1), Duration::days(365*400 + 97));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:2850:2288","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1085:203","0:1086:1525"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3166:660":{"id":"0:3166:660","crate_id":0,"name":"eq","span":{"filename":"src/weekday.rs","begin":[224,16],"end":[224,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ParseWeekdayError","id":"0:3160:2143","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12460:32738":{"id":"2:12460:32738","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:12106:8527","`DoubleEndedIterator`":"2:7518:126","prim@char":"1:12067:450","str::split":"2:12454:32734"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:43544:8556","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12111:8541","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12111:8541","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12126:8543","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:438":{"id":"0:438","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1178,0],"end":[1197,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"Tz2","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["gt","lt","le","ge"],"trait":{"name":"PartialOrd","id":"2:2367:206","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz2"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:441:1100"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1008:2574":{"id":"0:1008:2574","crate_id":0,"name":"and_hms","span":{"filename":"src/naive/date.rs","begin":[837,4],"end":[839,5]},"visibility":"public","docs":"Makes a new `NaiveDateTime` from the current date, hour, minute and second.\n\nNo [leap second](./struct.NaiveTime.html#leap-second-handling) is allowed here;\nuse `NaiveDate::and_hms_*` methods with a subsecond parameter instead.\n\n# Panics\n\nPanics on invalid hour, minute and/or second.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `and_hms_opt()` instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"use `and_hms_opt()` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2493:168":{"id":"0:2493:168","crate_id":0,"name":"Item","span":{"filename":"src/format/mod.rs","begin":[331,0],"end":[351,1]},"visibility":"public","docs":"A single formatting item. This is used for both formatting and parsing.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"variants_stripped":false,"variants":["0:2495:3348","0:2498:3350","0:2501:3182","0:2504:3353","0:2507:3194","0:2511:2716","0:2514:133"],"impls":["a:2:2793:252-0:2493:168","a:2:2776:242-0:2493:168","a:2:8606:8818-0:2493:168","a:2:2833:8772-0:2493:168","a:2:8607:8817-0:2493:168","b:2:2571-0:2493:168","b:2:2577-0:2493:168","b:2:2582-0:2493:168","b:2:2261-0:2493:168","b:2:3412-0:2493:168","b:2:2264-0:2493:168","b:2:2567-0:2493:168","b:5:682-0:2493:168","0:2532","0:2519","0:2521","0:2526","0:2529","0:2516","0:2524"]}}},"0:1544:2624":{"id":"0:1544:2624","crate_id":0,"name":"from_offset","span":{"filename":"src/offset/fixed.rs","begin":[129,4],"end":[131,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["offset",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1533:7109":{"id":"0:1533:7109","crate_id":0,"name":"east","span":{"filename":"src/offset/fixed.rs","begin":[38,4],"end":[40,5]},"visibility":"public","docs":"Makes a new `FixedOffset` for the Eastern Hemisphere with given timezone difference.\nThe negative `secs` means the Western Hemisphere.\n\nPanics on the out-of-bound `secs`.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `east_opt()` instead\")]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"use `east_opt()` instead"},"inner":{"function":{"decl":{"inputs":[["secs",{"primitive":"i32"}]],"output":{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2264-0:2334:2716":{"id":"b:2:2264-0:2334:2716","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2258:101","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Fixed","id":"0:2334:2716","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2266:7207"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8606:8818-0:3225:2145":{"id":"a:2:8606:8818-0:3225:2145","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8606:8818","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Months","id":"0:3225:2145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1212:2676":{"id":"0:1212:2676","crate_id":0,"name":"iso_week","span":{"filename":"src/naive/datetime/mod.rs","begin":[1148,4],"end":[1150,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"IsoWeek","id":"0:2724:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1936-0:2761:2117":{"id":"0:1936-0:2761:2117","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[539,17],"end":[539,28]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"inner":{"import":{"source":"offset::FixedOffset","name":"FixedOffset","id":"0:2761:2117","glob":false}}},"0:2295:3226":{"id":"0:2295:3226","crate_id":0,"name":"Hour12","span":{"filename":"src/format/mod.rs","begin":[140,4],"end":[140,10]},"visibility":"default","docs":"Hour number in the 12-hour clocks (FW=PW=2).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:1014:2604":{"id":"0:1014:2604","crate_id":0,"name":"and_hms_nano","span":{"filename":"src/naive/date.rs","begin":[993,4],"end":[995,5]},"visibility":"public","docs":"Makes a new `NaiveDateTime` from the current date, hour, minute, second and nanosecond.\n\nThe nanosecond part is allowed to exceed 1,000,000,000 in order to represent a [leap second](\n./struct.NaiveTime.html#leap-second-handling), but only when `sec == 59`.\n\n# Panics\n\nPanics on invalid hour, minute, second and/or nanosecond.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `and_hms_nano_opt()` instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"use `and_hms_nano_opt()` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}],["nano",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2261-0:2584:2137":{"id":"b:2:2261-0:2584:2137","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2255:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveWeek","id":"0:2584:2137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2263:2522"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2261-0:2127:2112":{"id":"b:2:2261-0:2127:2112","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2255:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SecondsFormat","id":"0:2127:2112","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2263:2522"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:475":{"id":"0:475","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1278,0],"end":[1286,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"SubAssign","id":"2:2880:2524","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:477:1526"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2365:3293":{"id":"0:2365:3293","crate_id":0,"name":"TimezoneOffset","span":{"filename":"src/format/mod.rs","begin":[243,4],"end":[243,18]},"visibility":"default","docs":"Same as [`TimezoneOffsetColon`](#variant.TimezoneOffsetColon) but prints no colon.\nParsing allows an optional colon.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:2567-0:2334:2716":{"id":"b:2:2567-0:2334:2716","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Fixed","id":"0:2334:2716","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2570:3122"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2680":{"id":"0:2680","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[75,30],"end":[75,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","lt","le","ge"],"trait":{"name":"PartialOrd","id":"2:2367:206","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2681:1100"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2682":{"id":"0:2682","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[75,42],"end":[75,45]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["min","max","clamp"],"trait":{"name":"Ord","id":"2:2361:199","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2683:461"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2833:8772-0:3246:2146":{"id":"a:2:2833:8772-0:3246:2146","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2833:8772","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseMonthError","id":"0:3246:2146","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1933:2838":{"id":"0:1933:2838","crate_id":0,"name":"from_utc_datetime","span":{"filename":"src/offset/mod.rs","begin":[525,4],"end":[527,5]},"visibility":"default","docs":"Converts the UTC `NaiveDateTime` to the local time.\nThe UTC is continuous and thus this cannot fail (but can give the duplicate local time).","links":{},"attrs":["#[allow(clippy :: wrong_self_convention)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["utc",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2477:3345":{"id":"0:2477:3345","crate_id":0,"name":"Maybe","span":{"filename":"src/format/mod.rs","begin":[326,4],"end":[326,9]},"visibility":"default","docs":"No separator when formatting, colon allowed when parsing.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:2100:461":{"id":"0:2100:461","crate_id":0,"name":"cmp","span":{"filename":"src/duration.rs","begin":[53,49],"end":[53,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:30807:200","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2184:3748":{"id":"0:2184:3748","crate_id":0,"name":"hour_div_12","span":{"filename":"src/format/parsed.rs","begin":[82,4],"end":[82,32]},"visibility":"public","docs":"Hour number divided by 12 (0--1). 0 indicates AM and 1 indicates PM.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"bindings":[]}}}}}},"0:2772":{"id":"0:2772","crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[25,30],"end":[25,34]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2788:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3216":{"id":"0:3216","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[31,37],"end":[31,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9531:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Month","id":"0:3170:2114","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3217:718"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3214":{"id":"0:3214","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[31,30],"end":[31,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Month","id":"0:3170:2114","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3215:454"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:462:302":{"id":"0:462:302","crate_id":0,"name":"add_assign","span":{"filename":"src/datetime/mod.rs","begin":[1243,4],"end":[1247,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["rhs",{"resolved_path":{"name":"Duration","id":"2:44300:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:977:2337":{"id":"0:977:2337","crate_id":0,"name":"days","span":{"filename":"src/naive/date.rs","begin":[123,4],"end":[125,5]},"visibility":"public","docs":"Returns a [`RangeInclusive<T>`] representing the whole week bounded by\n[first_day](./struct.NaiveWeek.html#method.first_day) and\n[last_day](./struct.NaiveWeek.html#method.last_day) functions.\n\n# Panics\n\nPanics if the either the first or last day of the week happens to fall just out of range of\n`NaiveDate` (more than ca. 262,000 years away from common era).\n\n# Examples\n\n```\nuse chrono::{NaiveDate, Weekday};\n\nlet date = NaiveDate::from_ymd_opt(2022, 4, 18).unwrap();\nlet week = date.week(Weekday::Mon);\nlet days = week.days();\nassert!(days.contains(&date));\n```","links":{"`RangeInclusive<T>`":"2:39250:219"},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"RangeInclusive","id":"2:39250:219","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2337:3254":{"id":"0:2337:3254","crate_id":0,"name":"LongMonthName","span":{"filename":"src/format/mod.rs","begin":[185,4],"end":[185,17]},"visibility":"default","docs":"Full month names.\n\nPrints a full name in the title case, reads either a short or full name in any case.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:1189:2861":{"id":"0:1189:2861","crate_id":0,"name":"checked_sub_days","span":{"filename":"src/naive/datetime/mod.rs","begin":[822,4],"end":[824,5]},"visibility":"public","docs":"Subtract a duration in [`Days`] from the date part of the `NaiveDateTime`\n\nReturns `None` if the resulting date would be out of range.","links":{"`Days`":"0:2589:2135"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["days",{"resolved_path":{"name":"Days","id":"0:2589:2135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12426:39460":{"id":"2:12426:39460","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:12073:1506","crate::ops::IndexMut":"2:3077:8463","str::slice_unchecked":"2:12425:39459"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:709:2973":{"id":"0:709:2973","crate_id":0,"name":"to_datetime","span":{"filename":"src/format/parsed.rs","begin":[627,4],"end":[647,5]},"visibility":"public","docs":"Returns a parsed timezone-aware date and time out of given fields.\n\nThis method is able to determine the combined date and time\nfrom date and time fields or a single [`timestamp`](#structfield.timestamp) field,\nplus a time zone offset.\nEither way those fields have to be consistent to each other.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:906:2133","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2154:2111":{"id":"0:2154:2111","crate_id":0,"name":"DateTime","span":{"filename":"src/datetime/mod.rs","begin":[86,0],"end":[89,1]},"visibility":"public","docs":"ISO 8601 combined date and time with time zone.\n\nThere are some constructors implemented here (the `from_*` methods), but\nthe general-purpose constructors are all via the methods on the\n[`TimeZone`](./offset/trait.TimeZone.html) implementations.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:311","0:348","0:373","0:381","a:2:2793:252-0:2154:2111","a:2:8606:8818-0:2154:2111","a:2:2833:8772-0:2154:2111","a:2:8607:8817-0:2154:2111","b:0:1956-0:2154:2111","b:2:2571-0:2154:2111","b:2:2577-0:2154:2111","b:2:2582-0:2154:2111","b:2:2261-0:2154:2111","b:2:3412-0:2154:2111","b:2:2264-0:2154:2111","b:2:2567-0:2154:2111","b:5:5792-0:2154:2111","b:5:682-0:2154:2111","0:357","0:367","0:359","0:478","0:504","0:442","0:453","0:2158","0:457","0:432","0:460","0:414","0:365","0:485","0:1965","0:467","0:782","0:363","0:489","0:436","0:493","0:471","0:428","0:389","0:501","0:511","0:430","0:351","0:475","0:1573","0:438","0:517","0:361","0:1569","0:519","0:449","0:507","0:445","0:481","0:497","0:355","0:515","0:463","0:353"]}}},"b:2:2567-0:2493:168":{"id":"b:2:2567-0:2493:168","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Item","id":"0:2493:168","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2570:3122"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2577-0:2334:2716":{"id":"b:2:2577-0:2334:2716","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2547:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Fixed","id":"0:2334:2716","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2580:133","2:2581:1590"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2652":{"id":"0:2652","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[2053,16],"end":[2053,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2788:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateWeeksIterator","id":"0:2648:4960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1997":{"id":"0:1997","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[156,0],"end":[168,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9536:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Weekday","id":"0:3124:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1998:718"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:194:2675":{"id":"0:194:2675","crate_id":0,"name":"ordinal0","span":{"filename":"src/date.rs","begin":[424,4],"end":[426,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:978":{"id":"0:978","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[137,0],"end":[142,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Days","id":"0:2589:2135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:979:1002"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2577-0:2589:2135":{"id":"b:2:2577-0:2589:2135","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2547:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Days","id":"0:2589:2135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2580:133","2:2581:1590"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1025:2635":{"id":"0:1025:2635","crate_id":0,"name":"checked_sub_signed","span":{"filename":"src/naive/date.rs","begin":[1180,4],"end":[1183,5]},"visibility":"public","docs":"Subtracts the number of whole days in the given `Duration` from the current date.\n\n# Errors\n\nReturns `None` if the resulting date would be out of range.\n\n# Example\n\n```\nuse chrono::{Duration, NaiveDate};\n\nlet d = NaiveDate::from_ymd_opt(2015, 9, 5).unwrap();\nassert_eq!(d.checked_sub_signed(Duration::days(40)),\n           Some(NaiveDate::from_ymd_opt(2015, 7, 27).unwrap()));\nassert_eq!(d.checked_sub_signed(Duration::days(-40)),\n           Some(NaiveDate::from_ymd_opt(2015, 10, 15).unwrap()));\nassert_eq!(d.checked_sub_signed(Duration::days(1_000_000_000)), None);\nassert_eq!(d.checked_sub_signed(Duration::days(-1_000_000_000)), None);\nassert_eq!(NaiveDate::MIN.checked_sub_signed(Duration::days(1)), None);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"OldDuration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:682-0:2724:2136":{"id":"b:5:682-0:2724:2136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IsoWeek","id":"0:2724:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:684:9349","5:685:9350","5:686:9351"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2567-0:2742:2121":{"id":"b:2:2567-0:2742:2121","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2570:3122"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:466:301":{"id":"0:466:301","crate_id":0,"name":"add","span":{"filename":"src/datetime/mod.rs","begin":[1253,4],"end":[1255,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"Months","id":"0:3225:2145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:2845:2284","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:658:3768":{"id":"0:658:3768","crate_id":0,"name":"set_year_div_100","span":{"filename":"src/format/parsed.rs","begin":[140,4],"end":[145,5]},"visibility":"public","docs":"Tries to set the [`year_div_100`](#structfield.year_div_100) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:906:2133","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2465:660":{"id":"0:2465:660","crate_id":0,"name":"eq","span":{"filename":"src/format/mod.rs","begin":[298,29],"end":[298,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"OffsetPrecision","id":"0:2445:3316","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1078:1525":{"id":"0:1078:1525","crate_id":0,"name":"sub","span":{"filename":"src/naive/date.rs","begin":[1932,4],"end":[1934,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["days",{"resolved_path":{"name":"Days","id":"0:2589:2135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:2850:2288","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12510:32747":{"id":"2:12510:32747","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12067:450","self::pattern":"2:12106:8527"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12111:8541","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12111:8541","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12126:8543","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:387:729":{"id":"0:387:729","crate_id":0,"name":"format","span":{"filename":"src/datetime/mod.rs","begin":[887,4],"end":[889,5]},"visibility":"public","docs":"Formats the combined date and time per the specified format string.\n\nSee the [`crate::format::strftime`] module for the supported escape sequences.\n\n# Example\n```rust\nuse chrono::prelude::*;\n\nlet date_time: DateTime<Utc> = Utc.with_ymd_and_hms(2017, 04, 02, 12, 50, 32).unwrap();\nlet formatted = format!(\"{}\", date_time.format(\"%d/%m/%Y %H:%M\"));\nassert_eq!(formatted, \"02/04/2017 12:50\");\n```","links":{"`crate::format::strftime`":"0:835:3169"},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\"))]","#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["fmt",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"DelayedFormat","id":"0:2161:2526","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"StrftimeItems","id":"0:2209:2527","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1045:2670":{"id":"0:1045:2670","crate_id":0,"name":"year","span":{"filename":"src/naive/date.rs","begin":[1478,4],"end":[1480,5]},"visibility":"default","docs":"Returns the year number in the [calendar date](#calendar-date).\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().year(), 2015);\nassert_eq!(NaiveDate::from_ymd_opt(-308, 3, 14).unwrap().year(), -308); // 309 BCE\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1538:7127":{"id":"0:1538:7127","crate_id":0,"name":"utc_minus_local","span":{"filename":"src/offset/fixed.rs","begin":[112,4],"end":[114,5]},"visibility":"public","docs":"Returns the number of seconds to add to convert from the local time to UTC.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:71:2412":{"id":"0:71:2412","crate_id":0,"name":"sum","span":{"filename":"src/duration.rs","begin":[392,4],"end":[394,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["iter",{"generic":"I"}]],"output":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7627:173","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2264-0:2589:2135":{"id":"b:2:2264-0:2589:2135","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2258:101","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Days","id":"0:2589:2135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2266:7207"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:987:2699":{"id":"0:987:2699","crate_id":0,"name":"from_ymd_opt","span":{"filename":"src/naive/date.rs","begin":[288,4],"end":[296,5]},"visibility":"public","docs":"Makes a new `NaiveDate` from the [calendar date](#calendar-date)\n(year, month and day).\n\n# Errors\n\nReturns `None` if:\n- The specified calendar day does not exist (for example 2023-04-31).\n- The value for `month` or `day` is invalid.\n- `year` is out of range for `NaiveDate`.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet from_ymd_opt = NaiveDate::from_ymd_opt;\n\nassert!(from_ymd_opt(2015, 3, 14).is_some());\nassert!(from_ymd_opt(2015, 0, 14).is_none());\nassert!(from_ymd_opt(2015, 2, 29).is_none());\nassert!(from_ymd_opt(-4, 2, 29).is_some()); // 5 BCE is a leap year\nassert!(from_ymd_opt(400000, 1, 1).is_none());\nassert!(from_ymd_opt(-400000, 1, 1).is_none());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["year",{"primitive":"i32"}],["month",{"primitive":"u32"}],["day",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3146":{"id":"0:3146","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[32,9],"end":[32,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2786:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Weekday","id":"0:3124:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2307:1725":{"id":"0:2307:1725","crate_id":0,"name":"0","span":{"filename":"src/format/mod.rs","begin":[157,13],"end":[157,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"InternalNumeric","id":"0:2321:3242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:1215:2678":{"id":"0:1215:2678","crate_id":0,"name":"with_month","span":{"filename":"src/naive/datetime/mod.rs","begin":[1195,4],"end":[1197,5]},"visibility":"default","docs":"Makes a new `NaiveDateTime` with the month number (starting from 1) changed.\n\nSee also the [`NaiveDate::with_month`] method.\n\n# Errors\n\nReturns `None` if the resulting date does not exist, or if the value for `month` is invalid.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Datelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2015, 9, 30).unwrap().and_hms_opt(12, 34, 56).unwrap();\nassert_eq!(dt.with_month(10), Some(NaiveDate::from_ymd_opt(2015, 10, 30).unwrap().and_hms_opt(12, 34, 56).unwrap()));\nassert_eq!(dt.with_month(13), None); // no month 13\nassert_eq!(dt.with_month(2), None); // no February 30\n```","links":{"`NaiveDate::with_month`":"0:1055:2678"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["month",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2386":{"id":"0:2386","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[176,38],"end":[176,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9747:148","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Fixed","id":"0:2334:2716","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2387:781"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8607:8817-0:2120:2106":{"id":"a:2:8607:8817-0:2120:2106","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Tz"},"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8607:8817","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8607:8817","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8607:8817-0:2161:2526":{"id":"a:2:8607:8817-0:2161:2526","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8607:8817","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8607:8817","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DelayedFormat","id":"0:2161:2526","args":{"angle_bracketed":{"args":[{"type":{"generic":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1161":{"id":"0:1161","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[83,0],"end":[996,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1162:1002","0:1163:2917","0:1164:5851","0:1165:5858","0:1166:2919","0:1168:2998","0:1169:2714","0:1172:2124","0:1173:2289","0:1174:2799","0:1176:2806","0:1177:2812","0:1178:2820","0:1179:2821","0:1181:2829","0:1182:2832","0:1183:2835","0:1184:2633","0:1185:2852","0:1186:2635","0:1187:2857","0:1188:2859","0:1189:2861","0:1190:2640","0:1191:2656","0:1195:729","0:1197:2853","0:1199:2920","0:1200:2325","0:1201:2327","0:1202:2712"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1906:2123":{"id":"0:1906:2123","crate_id":0,"name":"TimeZone","span":{"filename":"src/offset/mod.rs","begin":[216,0],"end":[528,1]},"visibility":"public","docs":"The time zone.\n\nThe methods here are the primarily constructors for [`Date`](../struct.Date.html) and\n[`DateTime`](../struct.DateTime.html) types.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"items":["0:1907:2122","0:1908:3116","0:1910:3610","0:1911:5661","0:1912:7010","0:1913:5663","0:1914:7016","0:1915:5666","0:1916:2799","0:1917:3095","0:1918:2806","0:1919:3100","0:1920:2820","0:1921:2812","0:1922:7056","0:1923:2624","0:1924:7059","0:1925:7061","0:1926:2654","0:1928:2569","0:1930:7066","0:1931:3880","0:1932:2630","0:1933:2838"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:1872","0:1542","0:1845"]}}},"0:2485":{"id":"0:2485","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[319,29],"end":[319,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2325:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Colons","id":"0:2472:3319","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2486:660"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2487":{"id":"0:2487","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[319,40],"end":[319,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2787:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Colons","id":"0:2472:3319","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2833:8772-0:3256:2158":{"id":"a:2:2833:8772-0:3256:2158","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2833:8772","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRange","id":"0:3256:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12404":{"id":"2:12404","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:12405:872","2:12406:2986","2:12407:39455","2:12408:39456","2:12410:39457","2:12413:3983","2:12414:39458","2:12415:342","2:12416:341","2:12417:7621","2:12419:32702","2:12421:32703","2:12423:32704","2:12425:39459","2:12426:39460","2:12427:32726","2:12428:32727","2:12429:3483","2:12430:14127","2:12431:4528","2:12432:37951","2:12433:37956","2:12434:15545","2:12435:39461","2:12436:37961","2:12437:3469","2:12440:3971","2:12443:7575","2:12446:4707","2:12450:9304","2:12454:32734","2:12457:32736","2:12460:32738","2:12463:39462","2:12466:39463","2:12469:32740","2:12472:32742","2:12475:32744","2:12478:32745","2:12481:7444","2:12484:39464","2:12487:39465","2:12490:39466","2:12493:39467","2:12495:3969","2:12497:39468","2:12499:39469","2:12500:39470","2:12501:7334","2:12504:4011","2:12507:32746","2:12510:32747","2:12513:39471","2:12516:39472","2:12519:39473","2:12522:2713","2:12524:32633","2:12525:32634","2:12526:4031","2:12527:32636","2:12528:32637","2:12529:39474","2:12531:15983","2:12532:39475"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:341:2567":{"id":"0:341:2567","crate_id":0,"name":"naive_local","span":{"filename":"src/datetime/mod.rs","begin":[495,4],"end":[497,5]},"visibility":"public","docs":"Returns a view to the naive local datetime.\n\n# Panics\n\n[`DateTime`] internally stores the date and time in UTC with a [`NaiveDateTime`]. This\nmethod will panic if the offset from UTC would push the local datetime outside of the\nrepresentable range of a [`NaiveDateTime`].","links":{"`NaiveDateTime`":"0:2668:2120","`DateTime`":"0:2154:2111"},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3056:454":{"id":"0:3056:454","crate_id":0,"name":"clone","span":{"filename":"src/offset/local/mod.rs","begin":[106,15],"end":[106,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Local","id":"0:3052:2107","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3070":{"id":"0:3070","crate_id":0,"name":null,"span":{"filename":"src/offset/utc.rs","begin":[43,37],"end":[43,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9747:148","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Utc","id":"0:3059:2118","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3071:781"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1878:3880":{"id":"0:1878:3880","crate_id":0,"name":"offset_from_utc_datetime","span":{"filename":"src/offset/utc.rs","begin":[128,4],"end":[130,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["_utc",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Utc","id":"0:3059:2118","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1471":{"id":"0:1471","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[1442,0],"end":[1446,1]},"visibility":"default","docs":"The default value for a NaiveTime is midnight, 00:00:00 exactly.\n\n# Example\n\n```rust\nuse chrono::NaiveTime;\n\nlet default_time = NaiveTime::default();\nassert_eq!(default_time, NaiveTime::from_hms_opt(0, 0, 0).unwrap());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2618:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1472:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1442:203":{"id":"0:1442:203","crate_id":0,"name":"Output","span":{"filename":"src/naive/time/mod.rs","begin":[1136,4],"end":[1136,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:1888:2570":{"id":"0:1888:2570","crate_id":0,"name":"single","span":{"filename":"src/offset/mod.rs","begin":[56,4],"end":[61,5]},"visibility":"public","docs":"Returns `Some` only when the conversion result is unique, or `None` otherwise.","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2501:3182":{"id":"0:2501:3182","crate_id":0,"name":"Space","span":{"filename":"src/format/mod.rs","begin":[339,4],"end":[339,18]},"visibility":"default","docs":"Whitespace. Prints literally but reads zero or more whitespace.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:2503:1725"]},"discriminant":null}}},"b:2:2261-0:2264:3194":{"id":"b:2:2261-0:2264:3194","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2255:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Numeric","id":"0:2264:3194","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2263:2522"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:35:2359":{"id":"0:35:2359","crate_id":0,"name":"nanoseconds","span":{"filename":"src/duration.rs","begin":[144,4],"end":[147,5]},"visibility":"public","docs":"Makes a new `Duration` with given number of nanoseconds.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["nanos",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3412-0:3225:2145":{"id":"b:2:3412-0:3225:2145","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3410:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Months","id":"0:3225:2145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3414:1603"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8606:8818-0:2472:3319":{"id":"a:2:8606:8818-0:2472:3319","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8606:8818","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Colons","id":"0:2472:3319","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:395:2673":{"id":"0:395:2673","crate_id":0,"name":"day0","span":{"filename":"src/datetime/mod.rs","begin":[951,4],"end":[953,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:499:203":{"id":"0:499:203","crate_id":0,"name":"Output","span":{"filename":"src/datetime/mod.rs","begin":[1332,4],"end":[1332,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}}},"0:1042:2325":{"id":"0:1042:2325","crate_id":0,"name":"MIN","span":{"filename":"src/naive/date.rs","begin":[1461,4],"end":[1461,93]},"visibility":"public","docs":"The minimum possible `NaiveDate` (January 1, 262145 BCE).","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":"_"}}},"0:1548:3880":{"id":"0:1548:3880","crate_id":0,"name":"offset_from_utc_datetime","span":{"filename":"src/offset/fixed.rs","begin":[143,4],"end":[145,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["_utc",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8606:8818-0:2264:3194":{"id":"a:2:8606:8818-0:2264:3194","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8606:8818","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Numeric","id":"0:2264:3194","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:3229:454":{"id":"0:3229:454","crate_id":0,"name":"clone","span":{"filename":"src/month.rs","begin":[221,9],"end":[221,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Months","id":"0:3225:2145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8607:8817-0:3059:2118":{"id":"a:2:8607:8817-0:3059:2118","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8607:8817","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Utc","id":"0:3059:2118","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1576:1525":{"id":"0:1576:1525","crate_id":0,"name":"sub","span":{"filename":"src/offset/fixed.rs","begin":[250,4],"end":[252,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:576:718":{"id":"0:576:718","crate_id":0,"name":"fmt","span":{"filename":"src/format/formatting.rs","begin":[138,4],"end":[154,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9506:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9487:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2766":{"id":"0:2766","crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[25,20],"end":[25,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2787:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3412-0:2161:2526":{"id":"b:2:3412-0:2161:2526","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3410:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DelayedFormat","id":"0:2161:2526","args":{"angle_bracketed":{"args":[{"type":{"generic":"I"}}],"bindings":[]}}}},"items":["2:3414:1603"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2285:2136":{"id":"0:2285:2136","crate_id":0,"name":"IsoWeek","span":{"filename":"src/format/mod.rs","begin":[130,4],"end":[130,11]},"visibility":"default","docs":"Week number in the ISO week date (FW=PW=2).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:90-0:3052:2107":{"id":"0:90-0:3052:2107","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[492,4],"end":[492,25]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"clock\")]","#[doc(no_inline)]"],"deprecation":null,"inner":{"import":{"source":"crate::Local","name":"Local","id":"0:3052:2107","glob":false}}},"0:1272":{"id":"0:1272","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1802,0],"end":[1808,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:2850:2288","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Days","id":"0:2589:2135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1273:203","0:1274:1525"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:519":{"id":"0:519","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1432,0],"end":[1443,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"std::time::SystemTime","id":"1:9165:2711","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:521:744"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2461":{"id":"0:2461","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[298,22],"end":[298,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetPrecision","id":"0:2445:3316","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2462:454"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2279:3211":{"id":"0:2279:3211","crate_id":0,"name":"Day","span":{"filename":"src/format/mod.rs","begin":[124,4],"end":[124,7]},"visibility":"default","docs":"Day of the month (FW=PW=2).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:1557":{"id":"0:1557","crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[201,0],"end":[208,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Add","id":"2:2845:2284","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::naive::NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1558:203","0:1559:301"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3245:461":{"id":"0:3245:461","crate_id":0,"name":"cmp","span":{"filename":"src/month.rs","begin":[221,62],"end":[221,65]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Months","id":"0:3225:2145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:30807:200","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2291:3222":{"id":"0:2291:3222","crate_id":0,"name":"Ordinal","span":{"filename":"src/format/mod.rs","begin":[136,4],"end":[136,11]},"visibility":"default","docs":"Day of the year (FW=PW=3).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:1493-0:2742:2121":{"id":"0:1493-0:2742:2121","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[531,57],"end":[531,66]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"inner":{"import":{"source":"naive::NaiveTime","name":"NaiveTime","id":"0:2742:2121","glob":false}}},"0:455:203":{"id":"0:455:203","crate_id":0,"name":"Output","span":{"filename":"src/datetime/mod.rs","begin":[1221,4],"end":[1221,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}}},"0:1093":{"id":"0:1093","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[2039,0],"end":[2039,51]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["len","is_empty"],"trait":{"name":"ExactSizeIterator","id":"2:7571:5551","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateDaysIterator","id":"0:2628:4959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2567-0:2127:2112":{"id":"b:2:2567-0:2127:2112","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SecondsFormat","id":"0:2127:2112","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2570:3122"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1972:7915":{"id":"0:1972:7915","crate_id":0,"name":"duration_round","span":{"filename":"src/round.rs","begin":[160,4],"end":[162,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["duration",{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41709:231","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:1961:2140","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1404:2599":{"id":"0:1404:2599","crate_id":0,"name":"from_hms_micro_opt","span":{"filename":"src/naive/time/mod.rs","begin":[364,4],"end":[372,5]},"visibility":"public","docs":"Makes a new `NaiveTime` from hour, minute, second and microsecond.\n\nThe microsecond part is allowed to exceed 1,000,000,000 in order to represent a\n[leap second](#leap-second-handling), but only when `sec == 59`.\n\n# Errors\n\nReturns `None` on invalid hour, minute, second and/or microsecond.\n\n# Example\n\n```\nuse chrono::NaiveTime;\n\nlet from_hmsu_opt = NaiveTime::from_hms_micro_opt;\n\nassert!(from_hmsu_opt(0, 0, 0, 0).is_some());\nassert!(from_hmsu_opt(23, 59, 59, 999_999).is_some());\nassert!(from_hmsu_opt(23, 59, 59, 1_999_999).is_some()); // a leap second after 23:59:59\nassert!(from_hmsu_opt(24, 0, 0, 0).is_none());\nassert!(from_hmsu_opt(23, 60, 0, 0).is_none());\nassert!(from_hmsu_opt(23, 59, 60, 0).is_none());\nassert!(from_hmsu_opt(23, 59, 59, 2_000_000).is_none());\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}],["micro",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1567:203":{"id":"0:1567:203","crate_id":0,"name":"Output","span":{"filename":"src/offset/fixed.rs","begin":[229,4],"end":[229,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:142:2565":{"id":"0:142:2565","crate_id":0,"name":"and_time","span":{"filename":"src/date.rs","begin":[89,4],"end":[92,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date and given `NaiveTime`.\nThe offset in the current date is preserved.\n\nReturns `None` on invalid datetime.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["time",{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8607:8817-0:2445:3316":{"id":"a:2:8607:8817-0:2445:3316","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8607:8817","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetPrecision","id":"0:2445:3316","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2746":{"id":"0:2746","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[205,9],"end":[205,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2325:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2747:660"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2776:242-0:3073:2138":{"id":"a:2:2776:242-0:3073:2138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2776:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2776:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LocalResult","id":"0:3073:2138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1366:6486":{"id":"0:1366:6486","crate_id":0,"name":"week0","span":{"filename":"src/naive/isoweek.rs","begin":[109,4],"end":[111,5]},"visibility":"public","docs":"Returns the ISO week number starting from 0.\n\nThe return value ranges from 0 to 52. (The last week of year differs by years.)\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike, Weekday};\n\nlet d = NaiveDate::from_isoywd_opt(2015, 15, Weekday::Mon).unwrap();\nassert_eq!(d.iso_week().week0(), 14);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:205:2681":{"id":"0:205:2681","crate_id":0,"name":"with_day0","span":{"filename":"src/date.rs","begin":[457,4],"end":[459,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["day0",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2516":{"id":"0:2516","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[330,9],"end":[330,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Item","id":"0:2493:168","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:2518:454"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1897:2578":{"id":"0:1897:2578","crate_id":0,"name":"and_hms_opt","span":{"filename":"src/offset/mod.rs","begin":[115,4],"end":[122,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date, hour, minute and second.\nThe offset in the current date is preserved.\n\nPropagates any error. Ambiguous result would be discarded.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"LocalResult","id":"0:3073:2138","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1073":{"id":"0:1073","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[1921,0],"end":[1927,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Add","id":"2:2845:2284","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Days","id":"0:2589:2135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1074:203","0:1075:301"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2577-0:2668:2120":{"id":"b:2:2577-0:2668:2120","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2547:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2580:133","2:2581:1590"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2571-0:2724:2136":{"id":"b:2:2571-0:2724:2136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IsoWeek","id":"0:2724:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2573:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:69":{"id":"0:69","crate_id":0,"name":null,"span":{"filename":"src/duration.rs","begin":[391,0],"end":[395,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sum","id":"2:7439:2411","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:71:2412"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3412-0:2243:3177":{"id":"b:2:3412-0:2243:3177","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3410:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Pad","id":"0:2243:3177","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3414:1603"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2592":{"id":"0:2592","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[134,9],"end":[134,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Days","id":"0:2589:2135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2593:454"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2513:1725":{"id":"0:2513:1725","crate_id":0,"name":"0","span":{"filename":"src/format/mod.rs","begin":[348,10],"end":[348,15]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Fixed","id":"0:2334:2716","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:460":{"id":"0:460","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1241,0],"end":[1248,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AddAssign","id":"2:2876:2523","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"2:44300:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:462:302"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3262:781":{"id":"0:3262:781","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[573,22],"end":[573,26]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9755:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2433":{"id":"0:2433","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[285,16],"end":[285,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2788:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetFormat","id":"0:2426:3314","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2776:242-0:2334:2716":{"id":"a:2:2776:242-0:2334:2716","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2776:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Fixed","id":"0:2334:2716","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2264-0:3246:2146":{"id":"b:2:2264-0:3246:2146","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2258:101","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseMonthError","id":"0:3246:2146","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2266:7207"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2265:3197":{"id":"0:2265:3197","crate_id":0,"name":"Year","span":{"filename":"src/format/mod.rs","begin":[109,4],"end":[109,8]},"visibility":"default","docs":"Full Gregorian year (FW=4, PW=∞).\nMay accept years before 1 BCE or after 9999 CE, given an initial sign (+/-).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:1494-0:2584:2137":{"id":"0:1494-0:2584:2137","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[531,68],"end":[531,77]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"inner":{"import":{"source":"naive::NaiveWeek","name":"NaiveWeek","id":"0:2584:2137","glob":false}}},"0:34:2356":{"id":"0:34:2356","crate_id":0,"name":"microseconds","span":{"filename":"src/duration.rs","begin":[136,4],"end":[140,5]},"visibility":"public","docs":"Makes a new `Duration` with given number of microseconds.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["microseconds",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:319:2799":{"id":"0:319:2799","crate_id":0,"name":"timestamp","span":{"filename":"src/datetime/mod.rs","begin":[226,4],"end":[228,5]},"visibility":"public","docs":"Returns the number of non-leap seconds since January 1, 1970 0:00:00 UTC\n(aka \"UNIX timestamp\").\n\nThe reverse operation of creating a [`DateTime`] from a timestamp can be performed\nusing [`from_timestamp`](DateTime::from_timestamp) or [`TimeZone::timestamp_opt`].\n\n```\nuse chrono::{DateTime, TimeZone, Utc};\n\nlet dt: DateTime<Utc> = Utc.with_ymd_and_hms(2015, 5, 15, 0, 0, 0).unwrap();\nassert_eq!(dt.timestamp(), 1431648000);\n\nassert_eq!(DateTime::from_timestamp(dt.timestamp(), dt.timestamp_subsec_nanos()).unwrap(), dt);\n```","links":{"DateTime::from_timestamp":"0:349:2917","`DateTime`":"0:2154:2111","`TimeZone::timestamp_opt`":"0:1917:3095"},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2833:8772-0:3170:2114":{"id":"a:2:2833:8772-0:3170:2114","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2833:8772","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Month","id":"0:3170:2114","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2469":{"id":"0:2469","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[298,44],"end":[298,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9747:148","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetPrecision","id":"0:2445:3316","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2470:781"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2577-0:2724:2136":{"id":"b:2:2577-0:2724:2136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2547:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IsoWeek","id":"0:2724:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2580:133","2:2581:1590"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2570":{"id":"0:2570","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[386,9],"end":[386,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(clippy :: manual_non_exhaustive)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9531:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseErrorKind","id":"0:2553:3365","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2571:718"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3412-0:2610:2119":{"id":"b:2:3412-0:2610:2119","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3410:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3414:1603"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1190:2640":{"id":"0:1190:2640","crate_id":0,"name":"signed_duration_since","span":{"filename":"src/naive/datetime/mod.rs","begin":[865,4],"end":[867,5]},"visibility":"public","docs":"Subtracts another `NaiveDateTime` from the current date and time.\nThis does not overflow or underflow at all.\n\nAs a part of Chrono's [leap second handling](./struct.NaiveTime.html#leap-second-handling),\nthe subtraction assumes that **there is no leap second ever**,\nexcept when any of the `NaiveDateTime`s themselves represents a leap second\nin which case the assumption becomes that\n**there are exactly one (or two) leap second(s) ever**.\n\n# Example\n\n```\nuse chrono::{Duration, NaiveDate};\n\nlet from_ymd = |y, m, d| NaiveDate::from_ymd_opt(y, m, d).unwrap();\n\nlet d = from_ymd(2016, 7, 8);\nassert_eq!(d.and_hms_opt(3, 5, 7).unwrap().signed_duration_since(d.and_hms_opt(2, 4, 6).unwrap()),\n           Duration::seconds(3600 + 60 + 1));\n\n// July 8 is 190th day in the year 2016\nlet d0 = from_ymd(2016, 1, 1);\nassert_eq!(d.and_hms_milli_opt(0, 7, 6, 500).unwrap().signed_duration_since(d0.and_hms_opt(0, 0, 0).unwrap()),\n           Duration::seconds(189 * 86_400 + 7 * 60 + 6) + Duration::milliseconds(500));\n```\n\nLeap seconds are handled, but the subtraction assumes that\nthere were no other leap seconds happened.\n\n```\n# use chrono::{Duration, NaiveDate};\n# let from_ymd = |y, m, d| NaiveDate::from_ymd_opt(y, m, d).unwrap();\nlet leap = from_ymd(2015, 6, 30).and_hms_milli_opt(23, 59, 59, 1_500).unwrap();\nassert_eq!(leap.signed_duration_since(from_ymd(2015, 6, 30).and_hms_opt(23, 0, 0).unwrap()),\n           Duration::seconds(3600) + Duration::milliseconds(500));\nassert_eq!(from_ymd(2015, 7, 1).and_hms_opt(1, 0, 0).unwrap().signed_duration_since(leap),\n           Duration::seconds(3600) - Duration::milliseconds(500));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"OldDuration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:324:2829":{"id":"0:324:2829","crate_id":0,"name":"timestamp_subsec_millis","span":{"filename":"src/datetime/mod.rs","begin":[317,4],"end":[319,5]},"visibility":"public","docs":"Returns the number of milliseconds since the last second boundary.\n\nIn event of a leap second this may exceed 999.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2833:8772-0:2648:4960":{"id":"a:2:2833:8772-0:2648:4960","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2833:8772","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateWeeksIterator","id":"0:2648:4960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:414":{"id":"0:414","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1084,0],"end":[1164,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["hour12","num_seconds_from_midnight"],"trait":{"name":"Timelike","id":"0:2062:2115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:416:2575","0:417:3039","0:418:3040","0:419:3041","0:420:3045","0:422:3049","0:424:3055","0:426:3062"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2189:2799":{"id":"0:2189:2799","crate_id":0,"name":"timestamp","span":{"filename":"src/format/parsed.rs","begin":[99,4],"end":[99,30]},"visibility":"public","docs":"The number of non-leap seconds since the midnight UTC on January 1, 1970.\n\nThis can be off by one if [`second`](#structfield.second) is 60 (a leap second).","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"primitive":"i64"}}],"bindings":[]}}}}}},"0:2313":{"id":"0:2313","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[105,27],"end":[105,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2787:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Numeric","id":"0:2264:3194","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8607:8817-0:2334:2716":{"id":"a:2:8607:8817-0:2334:2716","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8607:8817","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Fixed","id":"0:2334:2716","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1483-0:2668:2120":{"id":"0:1483-0:2668:2120","crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[20,25],"end":[20,38]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"import":{"source":"self::datetime::NaiveDateTime","name":"NaiveDateTime","id":"0:2668:2120","glob":false}}},"b:2:2571-0:2321:3242":{"id":"b:2:2571-0:2321:3242","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalNumeric","id":"0:2321:3242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2573:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1882:718":{"id":"0:1882:718","crate_id":0,"name":"fmt","span":{"filename":"src/offset/utc.rs","begin":[140,4],"end":[142,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9506:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9487:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1254:203":{"id":"0:1254:203","crate_id":0,"name":"Output","span":{"filename":"src/naive/datetime/mod.rs","begin":[1681,4],"end":[1681,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:344:2880":{"id":"0:344:2880","crate_id":0,"name":"to_rfc3339","span":{"filename":"src/datetime/mod.rs","begin":[541,4],"end":[549,5]},"visibility":"public","docs":"Returns an RFC 3339 and ISO 8601 date and time string such as `1996-12-19T16:39:57-08:00`.","links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\"))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7489:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:682-0:2472:3319":{"id":"b:5:682-0:2472:3319","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Colons","id":"0:2472:3319","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:684:9349","5:685:9350","5:686:9351"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8607:8817-0:2154:2111":{"id":"a:2:8607:8817-0:2154:2111","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Tz"},"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8607:8817","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8607:8817","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1492-0:2668:2120":{"id":"0:1492-0:2668:2120","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[531,42],"end":[531,55]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"inner":{"import":{"source":"naive::NaiveDateTime","name":"NaiveDateTime","id":"0:2668:2120","glob":false}}},"b:2:2571-0:2426:3314":{"id":"b:2:2571-0:2426:3314","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetFormat","id":"0:2426:3314","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2573:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:80":{"id":"0:80","crate_id":0,"name":null,"span":{"filename":"src/duration.rs","begin":[446,0],"end":[450,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9536:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRangeError","id":"0:2106:2104","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:81:718"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12405:872":{"id":"2:12405:872","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:12067:450"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:7484-0:2648:4960":{"id":"b:2:7484-0:2648:4960","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7627:173","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7480:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateWeeksIterator","id":"0:2648:4960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:7486:168","2:7487:9308","2:7488:838"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"I"}}}},"2:12423:32704":{"id":"2:12423:32704","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10196:244","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10196:244","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2577-0:2120:2106":{"id":"b:2:2577-0:2120:2106","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2547:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["2:2580:133","2:2581:1590"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:360:744":{"id":"0:360:744","crate_id":0,"name":"from","span":{"filename":"src/datetime/mod.rs","begin":[669,4],"end":[671,5]},"visibility":"default","docs":"Convert this `DateTime<Utc>` instance into a `DateTime<Local>` instance.\n\nConversion is performed via [`DateTime::with_timezone`], accounting for the difference in timezones.","links":{"`DateTime::with_timezone`":"0:329:2627"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Utc","id":"0:3059:2118","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:517":{"id":"0:517","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1424,0],"end":[1428,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"clock\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"SystemTime","id":"1:9165:2711","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::offset::Local","id":"0:3052:2107","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:518:744"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1568:1525":{"id":"0:1568:1525","crate_id":0,"name":"sub","span":{"filename":"src/offset/fixed.rs","begin":[232,4],"end":[234,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:7487:9308":{"id":"2:7487:9308","crate_id":2,"name":"IntoIter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"I"}}}},"0:1410:2714":{"id":"0:1410:2714","crate_id":0,"name":"parse_and_remainder","span":{"filename":"src/naive/time/mod.rs","begin":[555,4],"end":[559,5]},"visibility":"public","docs":"Parses a string from a user-specified format into a new `NaiveTime` value, and a slice with\nthe remaining portion of the string.\nSee the [`format::strftime` module](../format/strftime/index.html)\non the supported escape sequences.\n\nSimilar to [`parse_from_str`](#method.parse_from_str).\n\n# Example\n\n```rust\n# use chrono::{NaiveTime};\nlet (time, remainder) = NaiveTime::parse_and_remainder(\n    \"3h4m33s trailing text\", \"%-Hh%-Mm%-Ss\").unwrap();\nassert_eq!(time, NaiveTime::from_hms_opt(3, 4, 33).unwrap());\nassert_eq!(remainder, \" trailing text\");\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}],["fmt",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:906:2133","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:367":{"id":"0:367","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[714,0],"end":[721,1]},"visibility":"default","docs":"Convert a `DateTime<Local>` instance into a `DateTime<FixedOffset>` instance.","links":{},"attrs":["#[cfg(feature = \"clock\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Local","id":"0:3052:2107","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::offset::FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:368:744"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3223":{"id":"0:3223","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[31,62],"end":[31,65]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["min","max","clamp"],"trait":{"name":"Ord","id":"2:2361:199","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Month","id":"0:3170:2114","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3224:461"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2218:718":{"id":"0:2218:718","crate_id":0,"name":"fmt","span":{"filename":"src/format/strftime.rs","begin":[165,16],"end":[165,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9506:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9487:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2578":{"id":"0:2578","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[386,34],"end":[386,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(clippy :: manual_non_exhaustive)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2330:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseErrorKind","id":"0:2553:3365","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:207:2682":{"id":"0:207:2682","crate_id":0,"name":"with_ordinal","span":{"filename":"src/date.rs","begin":[462,4],"end":[464,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["ordinal",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:691:3807":{"id":"0:691:3807","crate_id":0,"name":"set_timestamp","span":{"filename":"src/format/parsed.rs","begin":[275,4],"end":[277,5]},"visibility":"public","docs":"Tries to set the [`timestamp`](#structfield.timestamp) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:906:2133","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2577-0:3170:2114":{"id":"b:2:2577-0:3170:2114","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2547:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Month","id":"0:3170:2114","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2580:133","2:2581:1590"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2483:454":{"id":"0:2483:454","crate_id":0,"name":"clone","span":{"filename":"src/format/mod.rs","begin":[319,22],"end":[319,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Colons","id":"0:2472:3319","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:515":{"id":"0:515","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1403,0],"end":[1420,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"SystemTime","id":"1:9165:2711","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::offset::Utc","id":"0:3059:2118","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:516:744"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2213":{"id":"0:2213","crate_id":0,"name":null,"span":{"filename":"src/format/strftime.rs","begin":[165,9],"end":[165,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StrftimeItems","id":"0:2209:2527","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:2215:454"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2261-0:2120:2106":{"id":"b:2:2261-0:2120:2106","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2255:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["2:2263:2522"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1201:2327":{"id":"0:1201:2327","crate_id":0,"name":"MAX","span":{"filename":"src/naive/datetime/mod.rs","begin":[991,4],"end":[991,78]},"visibility":"public","docs":"The maximum possible `NaiveDateTime`.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:258-0:137:2126":{"id":"0:258-0:137:2126","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[513,31],"end":[513,39]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"import":{"source":"date::MIN_DATE","name":"MIN_DATE","id":"0:137:2126","glob":false}}},"b:2:2261-0:3246:2146":{"id":"b:2:2261-0:3246:2146","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2255:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseMonthError","id":"0:3246:2146","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2263:2522"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2171:2670":{"id":"0:2171:2670","crate_id":0,"name":"year","span":{"filename":"src/format/parsed.rs","begin":[27,4],"end":[27,25]},"visibility":"public","docs":"Year.\n\nThis can be negative unlike [`year_div_100`](#structfield.year_div_100)\nand [`year_mod_100`](#structfield.year_mod_100) fields.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"primitive":"i32"}}],"bindings":[]}}}}}},"0:195:2142":{"id":"0:195:2142","crate_id":0,"name":"weekday","span":{"filename":"src/date.rs","begin":[428,4],"end":[430,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Weekday","id":"0:3124:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2586:1588":{"id":"2:2586:1588","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:41709:231","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1843:2691":{"id":"0:1843:2691","crate_id":0,"name":"today","span":{"filename":"src/offset/local/mod.rs","begin":[116,4],"end":[118,5]},"visibility":"public","docs":"Returns a `Date` which corresponds to the current date.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `Local::now()` instead\")]","#[allow(deprecated)]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"use `Local::now()` instead"},"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Local","id":"0:3052:2107","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1255:1525":{"id":"0:1255:1525","crate_id":0,"name":"sub","span":{"filename":"src/naive/datetime/mod.rs","begin":[1684,4],"end":[1686,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"OldDuration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2323":{"id":"0:2323","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[161,9],"end":[161,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalNumeric","id":"0:2321:3242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2324:454"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2325":{"id":"0:2325","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[161,16],"end":[161,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2787:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalNumeric","id":"0:2321:3242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2571-0:2389:3299":{"id":"b:2:2571-0:2389:3299","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalFixed","id":"0:2389:3299","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2573:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:783:132":{"id":"0:783:132","crate_id":0,"name":"Err","span":{"filename":"src/format/parse.rs","begin":[528,4],"end":[528,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"ParseError","id":"0:2536:2132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:1439":{"id":"0:1439","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[1128,0],"end":[1133,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AddAssign","id":"2:2876:2523","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1440:302"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:74":{"id":"0:74","crate_id":0,"name":null,"span":{"filename":"src/duration.rs","begin":[397,0],"end":[401,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sum","id":"2:7439:2411","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:75:2412"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:56:994":{"id":"0:56:994","crate_id":0,"name":"neg","span":{"filename":"src/duration.rs","begin":[322,4],"end":[328,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:323:2821":{"id":"0:323:2821","crate_id":0,"name":"timestamp_nanos_opt","span":{"filename":"src/datetime/mod.rs","begin":[308,4],"end":[310,5]},"visibility":"public","docs":"Returns the number of non-leap-nanoseconds since January 1, 1970 UTC.\n\n# Panics\n\nAn `i64` with nanosecond precision can span a range of ~584 years. This function panics on\nan out of range `DateTime`.\n\nThe dates that can be represented as nanoseconds are between 1677-09-21T00:12:44.0 and\n2262-04-11T23:47:16.854775804.\n\n# Example\n\n```\nuse chrono::{Utc, NaiveDate};\n\nlet dt = NaiveDate::from_ymd_opt(1970, 1, 1).unwrap().and_hms_nano_opt(0, 0, 1, 444).unwrap().and_local_timezone(Utc).unwrap();\nassert_eq!(dt.timestamp_nanos_opt(), Some(1_000_000_444));\n\nlet dt = NaiveDate::from_ymd_opt(2001, 9, 9).unwrap().and_hms_nano_opt(1, 46, 40, 555).unwrap().and_local_timezone(Utc).unwrap();\nassert_eq!(dt.timestamp_nanos_opt(), Some(1_000_000_000_000_000_555));\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"primitive":"i64"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2577-0:2085:127":{"id":"b:2:2577-0:2085:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2547:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2580:133","2:2581:1590"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1004:2861":{"id":"0:1004:2861","crate_id":0,"name":"checked_sub_days","span":{"filename":"src/naive/date.rs","begin":[776,4],"end":[781,5]},"visibility":"public","docs":"Subtract a duration in [`Days`] from the date\n\n# Errors\n\nReturns `None` if the resulting date would be out of range.\n\n# Example\n\n```\n# use chrono::{NaiveDate, Days};\nassert_eq!(\n    NaiveDate::from_ymd_opt(2022, 2, 20).unwrap().checked_sub_days(Days::new(6)),\n    Some(NaiveDate::from_ymd_opt(2022, 2, 14).unwrap())\n);\nassert_eq!(\n    NaiveDate::from_ymd_opt(2022, 2, 20).unwrap().checked_sub_days(Days::new(1000000000000)),\n    None\n);\n```","links":{"`Days`":"0:2589:2135"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["days",{"resolved_path":{"name":"Days","id":"0:2589:2135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1090:168":{"id":"0:1090:168","crate_id":0,"name":"Item","span":{"filename":"src/naive/date.rs","begin":[2023,4],"end":[2023,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:2379":{"id":"0:2379","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[176,16],"end":[176,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2325:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Fixed","id":"0:2334:2716","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2380:660"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1939-0:1906:2123":{"id":"0:1939-0:1906:2123","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[539,51],"end":[539,59]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"inner":{"import":{"source":"offset::TimeZone","name":"TimeZone","id":"0:1906:2123","glob":false}}},"0:0:2168":{"id":"0:0:2168","crate_id":0,"name":"chrono","span":{"filename":"src/lib.rs","begin":[1,0],"end":[619,1]},"visibility":"public","docs":"# Chrono: Date and Time for Rust\n\nChrono aims to provide all functionality needed to do correct operations on dates and times in the\n[proleptic Gregorian calendar](https://en.wikipedia.org/wiki/Proleptic_Gregorian_calendar):\n\n* The [`DateTime`](https://docs.rs/chrono/latest/chrono/struct.DateTime.html) type is timezone-aware\n  by default, with separate timezone-naive types.\n* Operations that may produce an invalid or ambiguous date and time return `Option` or\n  [`LocalResult`](https://docs.rs/chrono/latest/chrono/offset/enum.LocalResult.html).\n* Configurable parsing and formatting with a `strftime` inspired date and time formatting syntax.\n* The [`Local`](https://docs.rs/chrono/latest/chrono/offset/struct.Local.html) timezone works with\n  the current timezone of the OS.\n* Types and operations are implemented to be reasonably efficient.\n\nTimezone data is not shipped with chrono by default to limit binary sizes. Use the companion crate\n[Chrono-TZ](https://crates.io/crates/chrono-tz) or [`tzfile`](https://crates.io/crates/tzfile) for\nfull timezone support.\n\n### Features\n\nChrono supports various runtime environments and operating systems, and has\nseveral features that may be enabled or disabled.\n\nDefault features:\n\n- `alloc`: Enable features that depend on allocation (primarily string formatting)\n- `std`: Enables functionality that depends on the standard library. This\n  is a superset of `alloc` and adds interoperation with standard library types\n  and traits.\n- `clock`: Enables reading the system time (`now`) that depends on the standard library for\nUNIX-like operating systems and the Windows API (`winapi`) for Windows.\n- `wasmbind`: Interface with the JS Date API for the `wasm32` target.\n\nOptional features:\n\n- [`serde`][]: Enable serialization/deserialization via serde.\n- `rkyv`: Enable serialization/deserialization via rkyv.\n- `arbitrary`: construct arbitrary instances of a type with the Arbitrary crate.\n- `unstable-locales`: Enable localization. This adds various methods with a\n  `_localized` suffix. The implementation and API may change or even be\n  removed in a patch release. Feedback welcome.\n- `oldtime`: this feature no langer has a function, but once offered compatibility with the\n  `time` 0.1 crate.\n\n[`serde`]: https://github.com/serde-rs/serde\n[wasm-bindgen]: https://github.com/rustwasm/wasm-bindgen\n\nSee the [cargo docs][] for examples of specifying features.\n\n[cargo docs]: https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html#choosing-features\n\n## Overview\n\n### Duration\n\nChrono currently uses its own [`Duration`] type to represent the magnitude\nof a time span. Since this has the same name as the newer, standard type for\nduration, the reference will refer this type as `OldDuration`.\n\nNote that this is an \"accurate\" duration represented as seconds and\nnanoseconds and does not represent \"nominal\" components such as days or\nmonths.\n\nChrono does not yet natively support\nthe standard [`Duration`](https://doc.rust-lang.org/std/time/struct.Duration.html) type,\nbut it will be supported in the future.\nMeanwhile you can convert between two types with\n[`Duration::from_std`](https://docs.rs/time/0.1.40/time/struct.Duration.html#method.from_std)\nand\n[`Duration::to_std`](https://docs.rs/time/0.1.40/time/struct.Duration.html#method.to_std)\nmethods.\n\n### Date and Time\n\nChrono provides a\n[**`DateTime`**](./struct.DateTime.html)\ntype to represent a date and a time in a timezone.\n\nFor more abstract moment-in-time tracking such as internal timekeeping\nthat is unconcerned with timezones, consider\n[`time::SystemTime`](https://doc.rust-lang.org/std/time/struct.SystemTime.html),\nwhich tracks your system clock, or\n[`time::Instant`](https://doc.rust-lang.org/std/time/struct.Instant.html), which\nis an opaque but monotonically-increasing representation of a moment in time.\n\n`DateTime` is timezone-aware and must be constructed from\nthe [**`TimeZone`**](./offset/trait.TimeZone.html) object,\nwhich defines how the local date is converted to and back from the UTC date.\nThere are three well-known `TimeZone` implementations:\n\n* [**`Utc`**](./offset/struct.Utc.html) specifies the UTC time zone. It is most efficient.\n\n* [**`Local`**](./offset/struct.Local.html) specifies the system local time zone.\n\n* [**`FixedOffset`**](./offset/struct.FixedOffset.html) specifies\n  an arbitrary, fixed time zone such as UTC+09:00 or UTC-10:30.\n  This often results from the parsed textual date and time.\n  Since it stores the most information and does not depend on the system environment,\n  you would want to normalize other `TimeZone`s into this type.\n\n`DateTime`s with different `TimeZone` types are distinct and do not mix,\nbut can be converted to each other using\nthe [`DateTime::with_timezone`](./struct.DateTime.html#method.with_timezone) method.\n\nYou can get the current date and time in the UTC time zone\n([`Utc::now()`](./offset/struct.Utc.html#method.now))\nor in the local time zone\n([`Local::now()`](./offset/struct.Local.html#method.now)).\n\n```rust\nuse chrono::prelude::*;\n\nlet utc: DateTime<Utc> = Utc::now();       // e.g. `2014-11-28T12:45:59.324310806Z`\nlet local: DateTime<Local> = Local::now(); // e.g. `2014-11-28T21:45:59.324310806+09:00`\n# let _ = utc; let _ = local;\n```\n\nAlternatively, you can create your own date and time.\nThis is a bit verbose due to Rust's lack of function and method overloading,\nbut in turn we get a rich combination of initialization methods.\n\n```rust\nuse chrono::prelude::*;\nuse chrono::offset::LocalResult;\n\n# fn doctest() -> Option<()> {\n\nlet dt = Utc.with_ymd_and_hms(2014, 7, 8, 9, 10, 11).unwrap(); // `2014-07-08T09:10:11Z`\nassert_eq!(dt, NaiveDate::from_ymd_opt(2014, 7, 8)?.and_hms_opt(9, 10, 11)?.and_local_timezone(Utc).unwrap());\n\n// July 8 is 188th day of the year 2014 (`o` for \"ordinal\")\nassert_eq!(dt, NaiveDate::from_yo_opt(2014, 189)?.and_hms_opt(9, 10, 11)?.and_utc());\n// July 8 is Tuesday in ISO week 28 of the year 2014.\nassert_eq!(dt, NaiveDate::from_isoywd_opt(2014, 28, Weekday::Tue)?.and_hms_opt(9, 10, 11)?.and_utc());\n\nlet dt = NaiveDate::from_ymd_opt(2014, 7, 8)?.and_hms_milli_opt(9, 10, 11, 12)?.and_local_timezone(Utc).unwrap(); // `2014-07-08T09:10:11.012Z`\nassert_eq!(dt, NaiveDate::from_ymd_opt(2014, 7, 8)?.and_hms_micro_opt(9, 10, 11, 12_000)?.and_local_timezone(Utc).unwrap());\nassert_eq!(dt, NaiveDate::from_ymd_opt(2014, 7, 8)?.and_hms_nano_opt(9, 10, 11, 12_000_000)?.and_local_timezone(Utc).unwrap());\n\n// dynamic verification\nassert_eq!(Utc.with_ymd_and_hms(2014, 7, 8, 21, 15, 33),\n           LocalResult::Single(NaiveDate::from_ymd_opt(2014, 7, 8)?.and_hms_opt(21, 15, 33)?.and_utc()));\nassert_eq!(Utc.with_ymd_and_hms(2014, 7, 8, 80, 15, 33), LocalResult::None);\nassert_eq!(Utc.with_ymd_and_hms(2014, 7, 38, 21, 15, 33), LocalResult::None);\n\n// other time zone objects can be used to construct a local datetime.\n// obviously, `local_dt` is normally different from `dt`, but `fixed_dt` should be identical.\nlet local_dt = Local.from_local_datetime(&NaiveDate::from_ymd_opt(2014, 7, 8).unwrap().and_hms_milli_opt(9, 10, 11, 12).unwrap()).unwrap();\nlet fixed_dt = FixedOffset::east_opt(9 * 3600).unwrap().from_local_datetime(&NaiveDate::from_ymd_opt(2014, 7, 8).unwrap().and_hms_milli_opt(18, 10, 11, 12).unwrap()).unwrap();\nassert_eq!(dt, fixed_dt);\n# let _ = local_dt;\n# Some(())\n# }\n# doctest().unwrap();\n```\n\nVarious properties are available to the date and time, and can be altered individually.\nMost of them are defined in the traits [`Datelike`](./trait.Datelike.html) and\n[`Timelike`](./trait.Timelike.html) which you should `use` before.\nAddition and subtraction is also supported.\nThe following illustrates most supported operations to the date and time:\n\n```rust\nuse chrono::prelude::*;\nuse chrono::Duration;\n\n// assume this returned `2014-11-28T21:45:59.324310806+09:00`:\nlet dt = FixedOffset::east_opt(9*3600).unwrap().from_local_datetime(&NaiveDate::from_ymd_opt(2014, 11, 28).unwrap().and_hms_nano_opt(21, 45, 59, 324310806).unwrap()).unwrap();\n\n// property accessors\nassert_eq!((dt.year(), dt.month(), dt.day()), (2014, 11, 28));\nassert_eq!((dt.month0(), dt.day0()), (10, 27)); // for unfortunate souls\nassert_eq!((dt.hour(), dt.minute(), dt.second()), (21, 45, 59));\nassert_eq!(dt.weekday(), Weekday::Fri);\nassert_eq!(dt.weekday().number_from_monday(), 5); // Mon=1, ..., Sun=7\nassert_eq!(dt.ordinal(), 332); // the day of year\nassert_eq!(dt.num_days_from_ce(), 735565); // the number of days from and including Jan 1, 1\n\n// time zone accessor and manipulation\nassert_eq!(dt.offset().fix().local_minus_utc(), 9 * 3600);\nassert_eq!(dt.timezone(), FixedOffset::east_opt(9 * 3600).unwrap());\nassert_eq!(dt.with_timezone(&Utc), NaiveDate::from_ymd_opt(2014, 11, 28).unwrap().and_hms_nano_opt(12, 45, 59, 324310806).unwrap().and_local_timezone(Utc).unwrap());\n\n// a sample of property manipulations (validates dynamically)\nassert_eq!(dt.with_day(29).unwrap().weekday(), Weekday::Sat); // 2014-11-29 is Saturday\nassert_eq!(dt.with_day(32), None);\nassert_eq!(dt.with_year(-300).unwrap().num_days_from_ce(), -109606); // November 29, 301 BCE\n\n// arithmetic operations\nlet dt1 = Utc.with_ymd_and_hms(2014, 11, 14, 8, 9, 10).unwrap();\nlet dt2 = Utc.with_ymd_and_hms(2014, 11, 14, 10, 9, 8).unwrap();\nassert_eq!(dt1.signed_duration_since(dt2), Duration::seconds(-2 * 3600 + 2));\nassert_eq!(dt2.signed_duration_since(dt1), Duration::seconds(2 * 3600 - 2));\nassert_eq!(Utc.with_ymd_and_hms(1970, 1, 1, 0, 0, 0).unwrap() + Duration::seconds(1_000_000_000),\n           Utc.with_ymd_and_hms(2001, 9, 9, 1, 46, 40).unwrap());\nassert_eq!(Utc.with_ymd_and_hms(1970, 1, 1, 0, 0, 0).unwrap() - Duration::seconds(1_000_000_000),\n           Utc.with_ymd_and_hms(1938, 4, 24, 22, 13, 20).unwrap());\n```\n\n### Formatting and Parsing\n\nFormatting is done via the [`format`](./struct.DateTime.html#method.format) method,\nwhich format is equivalent to the familiar `strftime` format.\n\nSee [`format::strftime`](./format/strftime/index.html#specifiers)\ndocumentation for full syntax and list of specifiers.\n\nThe default `to_string` method and `{:?}` specifier also give a reasonable representation.\nChrono also provides [`to_rfc2822`](./struct.DateTime.html#method.to_rfc2822) and\n[`to_rfc3339`](./struct.DateTime.html#method.to_rfc3339) methods\nfor well-known formats.\n\nChrono now also provides date formatting in almost any language without the\nhelp of an additional C library. This functionality is under the feature\n`unstable-locales`:\n\n```toml\nchrono = { version = \"0.4\", features = [\"unstable-locales\"] }\n```\n\nThe `unstable-locales` feature requires and implies at least the `alloc` feature.\n\n```rust\n# #[allow(unused_imports)]\nuse chrono::prelude::*;\n\n# #[cfg(feature = \"unstable-locales\")]\n# fn test() {\nlet dt = Utc.with_ymd_and_hms(2014, 11, 28, 12, 0, 9).unwrap();\nassert_eq!(dt.format(\"%Y-%m-%d %H:%M:%S\").to_string(), \"2014-11-28 12:00:09\");\nassert_eq!(dt.format(\"%a %b %e %T %Y\").to_string(), \"Fri Nov 28 12:00:09 2014\");\nassert_eq!(dt.format_localized(\"%A %e %B %Y, %T\", Locale::fr_BE).to_string(), \"vendredi 28 novembre 2014, 12:00:09\");\n\nassert_eq!(dt.format(\"%a %b %e %T %Y\").to_string(), dt.format(\"%c\").to_string());\nassert_eq!(dt.to_string(), \"2014-11-28 12:00:09 UTC\");\nassert_eq!(dt.to_rfc2822(), \"Fri, 28 Nov 2014 12:00:09 +0000\");\nassert_eq!(dt.to_rfc3339(), \"2014-11-28T12:00:09+00:00\");\nassert_eq!(format!(\"{:?}\", dt), \"2014-11-28T12:00:09Z\");\n\n// Note that milli/nanoseconds are only printed if they are non-zero\nlet dt_nano = NaiveDate::from_ymd_opt(2014, 11, 28).unwrap().and_hms_nano_opt(12, 0, 9, 1).unwrap().and_local_timezone(Utc).unwrap();\nassert_eq!(format!(\"{:?}\", dt_nano), \"2014-11-28T12:00:09.000000001Z\");\n# }\n# #[cfg(not(feature = \"unstable-locales\"))]\n# fn test() {}\n# if cfg!(feature = \"unstable-locales\") {\n#    test();\n# }\n```\n\nParsing can be done with three methods:\n\n1. The standard [`FromStr`](https://doc.rust-lang.org/std/str/trait.FromStr.html) trait\n   (and [`parse`](https://doc.rust-lang.org/std/primitive.str.html#method.parse) method\n   on a string) can be used for parsing `DateTime<FixedOffset>`, `DateTime<Utc>` and\n   `DateTime<Local>` values. This parses what the `{:?}`\n   ([`std::fmt::Debug`](https://doc.rust-lang.org/std/fmt/trait.Debug.html))\n   format specifier prints, and requires the offset to be present.\n\n2. [`DateTime::parse_from_str`](./struct.DateTime.html#method.parse_from_str) parses\n   a date and time with offsets and returns `DateTime<FixedOffset>`.\n   This should be used when the offset is a part of input and the caller cannot guess that.\n   It *cannot* be used when the offset can be missing.\n   [`DateTime::parse_from_rfc2822`](./struct.DateTime.html#method.parse_from_rfc2822)\n   and\n   [`DateTime::parse_from_rfc3339`](./struct.DateTime.html#method.parse_from_rfc3339)\n   are similar but for well-known formats.\n\n3. [`Offset::datetime_from_str`](./offset/trait.TimeZone.html#method.datetime_from_str) is\n   similar but returns `DateTime` of given offset.\n   When the explicit offset is missing from the input, it simply uses given offset.\n   It issues an error when the input contains an explicit offset different\n   from the current offset.\n\nMore detailed control over the parsing process is available via\n[`format`](./format/index.html) module.\n\n```rust\nuse chrono::prelude::*;\n\nlet dt = Utc.with_ymd_and_hms(2014, 11, 28, 12, 0, 9).unwrap();\nlet fixed_dt = dt.with_timezone(&FixedOffset::east_opt(9*3600).unwrap());\n\n// method 1\nassert_eq!(\"2014-11-28T12:00:09Z\".parse::<DateTime<Utc>>(), Ok(dt.clone()));\nassert_eq!(\"2014-11-28T21:00:09+09:00\".parse::<DateTime<Utc>>(), Ok(dt.clone()));\nassert_eq!(\"2014-11-28T21:00:09+09:00\".parse::<DateTime<FixedOffset>>(), Ok(fixed_dt.clone()));\n\n// method 2\nassert_eq!(DateTime::parse_from_str(\"2014-11-28 21:00:09 +09:00\", \"%Y-%m-%d %H:%M:%S %z\"),\n           Ok(fixed_dt.clone()));\nassert_eq!(DateTime::parse_from_rfc2822(\"Fri, 28 Nov 2014 21:00:09 +0900\"),\n           Ok(fixed_dt.clone()));\nassert_eq!(DateTime::parse_from_rfc3339(\"2014-11-28T21:00:09+09:00\"), Ok(fixed_dt.clone()));\n\n// oops, the year is missing!\nassert!(DateTime::parse_from_str(\"Fri Nov 28 12:00:09\", \"%a %b %e %T %Y\").is_err());\n// oops, the format string does not include the year at all!\nassert!(DateTime::parse_from_str(\"Fri Nov 28 12:00:09\", \"%a %b %e %T\").is_err());\n// oops, the weekday is incorrect!\nassert!(DateTime::parse_from_str(\"Sat Nov 28 12:00:09 2014\", \"%a %b %e %T %Y\").is_err());\n```\n\nAgain : See [`format::strftime`](./format/strftime/index.html#specifiers)\ndocumentation for full syntax and list of specifiers.\n\n### Conversion from and to EPOCH timestamps\n\nUse [`DateTime::from_timestamp(seconds, nanoseconds)`](DateTime::from_timestamp)\nto construct a [`DateTime<Utc>`] from a UNIX timestamp\n(seconds, nanoseconds that passed since January 1st 1970).\n\nUse [`DateTime.timestamp`](DateTime::timestamp) to get the timestamp (in seconds)\nfrom a [`DateTime`]. Additionally, you can use\n[`DateTime.timestamp_subsec_nanos`](DateTime::timestamp_subsec_nanos)\nto get the number of additional number of nanoseconds.\n\n```rust\n// We need the trait in scope to use Utc::timestamp().\nuse chrono::{DateTime, Utc};\n\n// Construct a datetime from epoch:\nlet dt: DateTime<Utc> = DateTime::from_timestamp(1_500_000_000, 0).unwrap();\nassert_eq!(dt.to_rfc2822(), \"Fri, 14 Jul 2017 02:40:00 +0000\");\n\n// Get epoch value from a datetime:\nlet dt = DateTime::parse_from_rfc2822(\"Fri, 14 Jul 2017 02:40:00 +0000\").unwrap();\nassert_eq!(dt.timestamp(), 1_500_000_000);\n```\n\n### Naive date and time\n\nChrono provides naive counterparts to `Date`, (non-existent) `Time` and `DateTime`\nas [**`NaiveDate`**](./naive/struct.NaiveDate.html),\n[**`NaiveTime`**](./naive/struct.NaiveTime.html) and\n[**`NaiveDateTime`**](./naive/struct.NaiveDateTime.html) respectively.\n\nThey have almost equivalent interfaces as their timezone-aware twins,\nbut are not associated to time zones obviously and can be quite low-level.\nThey are mostly useful for building blocks for higher-level types.\n\nTimezone-aware `DateTime` and `Date` types have two methods returning naive versions:\n[`naive_local`](./struct.DateTime.html#method.naive_local) returns\na view to the naive local time,\nand [`naive_utc`](./struct.DateTime.html#method.naive_utc) returns\na view to the naive UTC time.\n\n## Limitations\n\nOnly the proleptic Gregorian calendar (i.e. extended to support older dates) is supported.\nDate types are limited to about +/- 262,000 years from the common epoch.\nTime types are limited to nanosecond accuracy.\nLeap seconds can be represented, but Chrono does not fully support them.\nSee [Leap Second Handling](https://docs.rs/chrono/latest/chrono/naive/struct.NaiveTime.html#leap-second-handling).\n\n## Rust version requirements\n\nThe Minimum Supported Rust Version (MSRV) is currently **Rust 1.57.0**.\n\nThe MSRV is explicitly tested in CI. It may be bumped in minor releases, but this is not done\nlightly.\n\nChrono inherently does not support an inaccurate or partial date and time representation.\nAny operation that can be ambiguous will return `None` in such cases.\nFor example, \"a month later\" of 2014-01-30 is not well-defined\nand consequently `Utc.ymd_opt(2014, 1, 30).unwrap().with_month(2)` returns `None`.\n\nNon ISO week handling is not yet supported.\nFor now you can use the [chrono_ext](https://crates.io/crates/chrono_ext)\ncrate ([sources](https://github.com/bcourtine/chrono-ext/)).\n\nAdvanced time zone handling is not yet supported.\nFor now you can try the [Chrono-tz](https://github.com/chronotope/chrono-tz/) crate instead.\n\n## Relation between chrono and time 0.1\n\nRust first had a `time` module added to `std` in its 0.7 release. It later moved to\n`libextra`, and then to a `libtime` library shipped alongside the standard library. In 2014\nwork on chrono started in order to provide a full-featured date and time library in Rust.\nSome improvements from chrono made it into the standard library; notably, `chrono::Duration`\nwas included as `std::time::Duration` ([rust#15934]) in 2014.\n\nIn preparation of Rust 1.0 at the end of 2014 `libtime` was moved out of the Rust distro and\ninto the `time` crate to eventually be redesigned ([rust#18832], [rust#18858]), like the\n`num` and `rand` crates. Of course chrono kept its dependency on this `time` crate. `time`\nstarted re-exporting `std::time::Duration` during this period. Later, the standard library was\nchanged to have a more limited unsigned `Duration` type ([rust#24920], [RFC 1040]), while the\n`time` crate kept the full functionality with `time::Duration`. `time::Duration` had been a\npart of chrono's public API.\n\nBy 2016 `time` 0.1 lived under the `rust-lang-deprecated` organisation and was not actively\nmaintained ([time#136]). chrono absorbed the platform functionality and `Duration` type of the\n`time` crate in [chrono#478] (the work started in [chrono#286]). In order to preserve\ncompatibility with downstream crates depending on `time` and `chrono` sharing a `Duration`\ntype, chrono kept depending on time 0.1. chrono offered the option to opt out of the `time`\ndependency by disabling the `oldtime` feature (swapping it out for an effectively similar\nchrono type). In 2019, @jhpratt took over maintenance on the `time` crate and released what\namounts to a new crate as `time` 0.2.\n\n[rust#15934]: https://github.com/rust-lang/rust/pull/15934\n[rust#18832]: https://github.com/rust-lang/rust/pull/18832#issuecomment-62448221\n[rust#18858]: https://github.com/rust-lang/rust/pull/18858\n[rust#24920]: https://github.com/rust-lang/rust/pull/24920\n[RFC 1040]: https://rust-lang.github.io/rfcs/1040-duration-reform.html\n[time#136]: https://github.com/time-rs/time/issues/136\n[chrono#286]: https://github.com/chronotope/chrono/pull/286\n[chrono#478]: https://github.com/chronotope/chrono/pull/478\n\n## Security advisories\n\nIn November of 2020 [CVE-2020-26235] and [RUSTSEC-2020-0071] were opened against the `time` crate.\n@quininer had found that calls to `localtime_r` may be unsound ([chrono#499]). Eventually, almost\na year later, this was also made into a security advisory against chrono as [RUSTSEC-2020-0159],\nwhich had platform code similar to `time`.\n\nOn Unix-like systems a process is given a timezone id or description via the `TZ` environment\nvariable. We need this timezone data to calculate the current local time from a value that is\nin UTC, such as the time from the system clock. `time` 0.1 and chrono used the POSIX function\n`localtime_r` to do the conversion to local time, which reads the `TZ` variable.\n\nRust assumes the environment to be writable and uses locks to access it from multiple threads.\nSome other programming languages and libraries use similar locking strategies, but these are\ntypically not shared across languages. More importantly, POSIX declares modifying the\nenvironment in a multi-threaded process as unsafe, and `getenv` in libc can't be changed to\ntake a lock because it returns a pointer to the data (see [rust#27970] for more discussion).\n\nSince version 4.20 chrono no longer uses `localtime_r`, instead using Rust code to query the\ntimezone (from the `TZ` variable or via `iana-time-zone` as a fallback) and work with data\nfrom the system timezone database directly. The code for this was forked from the [tz-rs crate]\nby @x-hgg-x. As such, chrono now respects the Rust lock when reading the `TZ` environment\nvariable. In general, code should avoid modifying the environment.\n\n[CVE-2020-26235]: https://nvd.nist.gov/vuln/detail/CVE-2020-26235\n[RUSTSEC-2020-0071]: https://rustsec.org/advisories/RUSTSEC-2020-0071\n[chrono#499]: https://github.com/chronotope/chrono/pull/499\n[RUSTSEC-2020-0159]: https://rustsec.org/advisories/RUSTSEC-2020-0159.html\n[rust#27970]: https://github.com/rust-lang/rust/issues/27970\n[chrono#677]: https://github.com/chronotope/chrono/pull/677\n[tz-rs crate]: https://crates.io/crates/tz-rs\n\n## Removing time 0.1\n\nBecause time 0.1 has been unmaintained for years, however, the security advisory mentioned\nabove has not been addressed. While chrono maintainers were careful not to break backwards\ncompatibility with the `time::Duration` type, there has been a long stream of issues from\nusers inquiring about the time 0.1 dependency with the vulnerability. We investigated the\npotential breakage of removing the time 0.1 dependency in [chrono#1095] using a crater-like\nexperiment and determined that the potential for breaking (public) dependencies is very low.\nWe reached out to those few crates that did still depend on compatibility with time 0.1.\n\nAs such, for chrono 0.4.30 we have decided to swap out the time 0.1 `Duration` implementation\nfor a local one that will offer a strict superset of the existing API going forward. This\nwill prevent most downstream users from being affected by the security vulnerability in time\n0.1 while minimizing the ecosystem impact of semver-incompatible version churn.\n\n[chrono#1095]: https://github.com/chronotope/chrono/pull/1095","links":{"DateTime::from_timestamp":"0:349:2917","`DateTime`":"0:2154:2111","DateTime::timestamp_subsec_nanos":"0:326:2835","`Duration`":"0:2085:127","`DateTime<Utc>`":"0:2154:2111","DateTime::timestamp":"0:319:2799"},"attrs":["#![doc(html_root_url = \"https://docs.rs/chrono/latest/\",\ntest(attr(deny(warnings))))]","#![deny(missing_docs)]","#![deny(missing_debug_implementations)]","#![warn(unreachable_pub)]","#![deny(clippy :: tests_outside_test_module)]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:88:1135","0:527:729","0:928:2134","0:1495:1053","0:85-0:2085:127","0:86-0:2106:2104","0:256-0:2120:2106","0:257-0:138:2125","0:258-0:137:2126","0:523-0:2154:2111","0:524-0:2127:2112","0:525-0:310:2129","0:526-0:309:2130","0:926-0:2536:2132","0:927-0:906:2133","0:1489-0:2589:2135","0:1490-0:2724:2136","0:1491-0:2610:2119","0:1492-0:2668:2120","0:1493-0:2742:2121","0:1494-0:2584:2137","0:1934-0:3052:2107","0:1936-0:2761:2117","0:1937-0:3073:2138","0:1938-0:1904:2122","0:1939-0:1906:2123","0:1940-0:3059:2118","0:1983-0:1961:2140","0:1984-0:3106:2141","0:1985-0:1953:2110","0:2011-0:3160:2143","0:2012-0:3124:2116","0:2036-0:3170:2114","0:2037-0:3225:2145","0:2038-0:3246:2146","0:2074-0:2043:2113","0:2075-0:2062:2115","0:3256:2158","0:2083:2164","0:2084:671"],"is_stripped":false}}},"2:12472:32742":{"id":"2:12472:32742","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:12067:450","str::splitn":"2:12469:32740","self::pattern":"2:12106:8527"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:43648:8560","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12111:8541","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12111:8541","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12126:8543","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:165:2633":{"id":"0:165:2633","crate_id":0,"name":"checked_add_signed","span":{"filename":"src/date.rs","begin":[267,4],"end":[270,5]},"visibility":"public","docs":"Adds given `Duration` to the current date.\n\nReturns `None` when it will result in overflow.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"OldDuration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2571-0:2264:3194":{"id":"b:2:2571-0:2264:3194","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Numeric","id":"0:2264:3194","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2573:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:3066:660":{"id":"0:3066:660","crate_id":0,"name":"eq","span":{"filename":"src/offset/utc.rs","begin":[43,22],"end":[43,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Utc","id":"0:3059:2118","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:404:2679":{"id":"0:404:2679","crate_id":0,"name":"with_month0","span":{"filename":"src/datetime/mod.rs","begin":[1015,4],"end":[1017,5]},"visibility":"default","docs":"Makes a new `DateTime` with the month number (starting from 0) changed.\n\nSee also the [`NaiveDate::with_month0`] method.\n\n# Errors\n\nReturns `None` if:\n- The resulting date does not exist.\n- The value for `month0` is invalid.\n- The local time at the resulting date does not exist or is ambiguous, for example during a\n  daylight saving time transition.","links":{"`NaiveDate::with_month0`":"0:1056:2679"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["month0",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:656:3764":{"id":"0:656:3764","crate_id":0,"name":"set_year","span":{"filename":"src/format/parsed.rs","begin":[134,4],"end":[136,5]},"visibility":"public","docs":"Tries to set the [`year`](#structfield.year) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:906:2133","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1967:132":{"id":"0:1967:132","crate_id":0,"name":"Err","span":{"filename":"src/round.rs","begin":[146,4],"end":[146,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"RoundingError","id":"0:3106:2141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:2080":{"id":"0:2080","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[590,0],"end":[594,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9531:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRange","id":"0:3256:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2081:718"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:496:301":{"id":"0:496:301","crate_id":0,"name":"add","span":{"filename":"src/datetime/mod.rs","begin":[1326,4],"end":[1328,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["days",{"resolved_path":{"name":"Days","id":"0:2589:2135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:2845:2284","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:518:744":{"id":"0:518:744","crate_id":0,"name":"from","span":{"filename":"src/datetime/mod.rs","begin":[1425,4],"end":[1427,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"resolved_path":{"name":"SystemTime","id":"1:9165:2711","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Local","id":"0:3052:2107","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2046:2144":{"id":"0:2046:2144","crate_id":0,"name":"month","span":{"filename":"src/traits.rs","begin":[50,4],"end":[50,27]},"visibility":"default","docs":"Returns the month number starting from 1.\n\nThe return value ranges from 1 to 12.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"a:2:8607:8817-0:2472:3319":{"id":"a:2:8607:8817-0:2472:3319","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8607:8817","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Colons","id":"0:2472:3319","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2793:252-0:2536:2132":{"id":"a:2:2793:252-0:2536:2132","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2793:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:2536:2132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:227":{"id":"0:227","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[496,0],"end":[500,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9747:148","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:229:781"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1457:203":{"id":"0:1457:203","crate_id":0,"name":"Output","span":{"filename":"src/naive/time/mod.rs","begin":[1283,4],"end":[1283,30]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"b:2:2577-0:3052:2107":{"id":"b:2:2577-0:3052:2107","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2547:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Local","id":"0:3052:2107","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2580:133","2:2581:1590"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2056:2679":{"id":"0:2056:2679","crate_id":0,"name":"with_month0","span":{"filename":"src/traits.rs","begin":[178,4],"end":[178,55]},"visibility":"default","docs":"Makes a new value with the month number (starting from 0) changed.\n\n# Errors\n\nReturns `None` when:\n\n- The resulting date does not exist (for example `month0(3)` when day of the month is 31).\n- In case of [`DateTime<Tz>`] if the resulting date and time fall within a timezone\n  transition such as from DST to standard time.\n- The value for `month0` is out of range.\n\n[`DateTime<Tz>`]: crate::DateTime","links":{"crate::DateTime":"0:2154:2111"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["month0",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"a:2:2833:8772-0:2761:2117":{"id":"a:2:2833:8772-0:2761:2117","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2833:8772","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3412-0:3106:2141":{"id":"b:2:3412-0:3106:2141","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3410:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RoundingError","id":"0:3106:2141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3414:1603"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2498:3350":{"id":"0:2498:3350","crate_id":0,"name":"OwnedLiteral","span":{"filename":"src/format/mod.rs","begin":[337,4],"end":[337,26]},"visibility":"default","docs":"Same as `Literal` but with the string owned by the item.","links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\"))]"],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:2500:1725"]},"discriminant":null}}},"0:1918:2806":{"id":"0:1918:2806","crate_id":0,"name":"timestamp_millis","span":{"filename":"src/offset/mod.rs","begin":[396,4],"end":[398,5]},"visibility":"default","docs":"Makes a new `DateTime` from the number of non-leap milliseconds\nsince January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\").\n\nPanics on out-of-range number of milliseconds for a non-panicking\nversion see [`timestamp_millis_opt`](#method.timestamp_millis_opt).","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `timestamp_millis_opt()` instead\")]"],"deprecation":{"since":"0.4.23","note":"use `timestamp_millis_opt()` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["millis",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2246:3180":{"id":"0:2246:3180","crate_id":0,"name":"Zero","span":{"filename":"src/format/mod.rs","begin":[87,4],"end":[87,8]},"visibility":"default","docs":"Zero (`0`) padding.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:2622:1100":{"id":"0:2622:1100","crate_id":0,"name":"partial_cmp","span":{"filename":"src/naive/date.rs","begin":[193,30],"end":[193,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::option::Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:30807:200","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:188:2670":{"id":"0:188:2670","crate_id":0,"name":"year","span":{"filename":"src/date.rs","begin":[400,4],"end":[402,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2577-0:2426:3314":{"id":"b:2:2577-0:2426:3314","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2547:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetFormat","id":"0:2426:3314","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2580:133","2:2581:1590"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:138:2125":{"id":"0:138:2125","crate_id":0,"name":"MAX_DATE","span":{"filename":"src/date.rs","begin":[72,0],"end":[72,53]},"visibility":"public","docs":"The maximum possible `Date`.","links":{},"attrs":["#[allow(deprecated)]","#[deprecated(since = \"0.4.20\", note = \"Use Date::MAX_UTC instead\")]"],"deprecation":{"since":"0.4.20","note":"Use Date::MAX_UTC instead"},"inner":{"constant":{"type":{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::offset::Utc","id":"0:3059:2118","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"expr":"Date<Utc>::MAX_UTC","value":null,"is_literal":false}}},"0:416:2575":{"id":"0:416:2575","crate_id":0,"name":"hour","span":{"filename":"src/datetime/mod.rs","begin":[1086,4],"end":[1088,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1168:2998":{"id":"0:1168:2998","crate_id":0,"name":"parse_from_str","span":{"filename":"src/naive/datetime/mod.rs","begin":[311,4],"end":[315,5]},"visibility":"public","docs":" Parses a string with the specified format string and returns a new `NaiveDateTime`.\n See the [`format::strftime` module](../format/strftime/index.html)\n on the supported escape sequences.\n\n # Example\n\n ```\n use chrono::{NaiveDateTime, NaiveDate};\n\n let parse_from_str = NaiveDateTime::parse_from_str;\n\n assert_eq!(parse_from_str(\"2015-09-05 23:56:04\", \"%Y-%m-%d %H:%M:%S\"),\n            Ok(NaiveDate::from_ymd_opt(2015, 9, 5).unwrap().and_hms_opt(23, 56, 4).unwrap()));\n assert_eq!(parse_from_str(\"5sep2015pm012345.6789\", \"%d%b%Y%p%I%M%S%.f\"),\n            Ok(NaiveDate::from_ymd_opt(2015, 9, 5).unwrap().and_hms_micro_opt(13, 23, 45, 678_900).unwrap()));\n ```\n\n Offset is ignored for the purpose of parsing.\n\n ```\n # use chrono::{NaiveDateTime, NaiveDate};\n # let parse_from_str = NaiveDateTime::parse_from_str;\n assert_eq!(parse_from_str(\"2014-5-17T12:34:56+09:30\", \"%Y-%m-%dT%H:%M:%S%z\"),\n            Ok(NaiveDate::from_ymd_opt(2014, 5, 17).unwrap().and_hms_opt(12, 34, 56).unwrap()));\n ```\n\n [Leap seconds](./struct.NaiveTime.html#leap-second-handling) are correctly handled by\n treating any time of the form `hh:mm:60` as a leap second.\n (This equally applies to the formatting, so the round trip is possible.)\n\n ```\n # use chrono::{NaiveDateTime, NaiveDate};\n # let parse_from_str = NaiveDateTime::parse_from_str;\n assert_eq!(parse_from_str(\"2015-07-01 08:59:60.123\", \"%Y-%m-%d %H:%M:%S%.f\"),\n            Ok(NaiveDate::from_ymd_opt(2015, 7, 1).unwrap().and_hms_milli_opt(8, 59, 59, 1_123).unwrap()));\n ```\n\n Missing seconds are assumed to be zero,\n but out-of-bound times or insufficient fields are errors otherwise.\n\n ```\n # use chrono::{NaiveDateTime, NaiveDate};\n # let parse_from_str = NaiveDateTime::parse_from_str;\n assert_eq!(parse_from_str(\"94/9/4 7:15\", \"%y/%m/%d %H:%M\"),\n            Ok(NaiveDate::from_ymd_opt(1994, 9, 4).unwrap().and_hms_opt(7, 15, 0).unwrap()));\n\n assert!(parse_from_str(\"04m33s\", \"%Mm%Ss\").is_err());\n assert!(parse_from_str(\"94/9/4 12\", \"%y/%m/%d %H\").is_err());\n assert!(parse_from_str(\"94/9/4 17:60\", \"%y/%m/%d %H:%M\").is_err());\n assert!(parse_from_str(\"94/9/4 24:00:00\", \"%y/%m/%d %H:%M:%S\").is_err());\n ```\n\n All parsed fields should be consistent to each other, otherwise it's an error.\n\n ```\n # use chrono::NaiveDateTime;\n # let parse_from_str = NaiveDateTime::parse_from_str;\n let fmt = \"%Y-%m-%d %H:%M:%S = UNIX timestamp %s\";\n assert!(parse_from_str(\"2001-09-09 01:46:39 = UNIX timestamp 999999999\", fmt).is_ok());\n assert!(parse_from_str(\"1970-01-01 00:00:00 = UNIX timestamp 1\", fmt).is_err());\n ```\n\n Years before 1 BCE or after 9999 CE, require an initial sign\n\n```\n # use chrono::NaiveDateTime;\n # let parse_from_str = NaiveDateTime::parse_from_str;\n let fmt = \"%Y-%m-%d %H:%M:%S\";\n assert!(parse_from_str(\"10000-09-09 01:46:39\", fmt).is_err());\n assert!(parse_from_str(\"+10000-09-09 01:46:39\", fmt).is_ok());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["fmt",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:906:2133","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1537:3466":{"id":"0:1537:3466","crate_id":0,"name":"local_minus_utc","span":{"filename":"src/offset/fixed.rs","begin":[106,4],"end":[108,5]},"visibility":"public","docs":"Returns the number of seconds to add to convert from UTC to the local time.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12434:15545":{"id":"2:12434:15545","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nNote that any carriage return (`\\r`) not immediately followed by a\nline feed (`\\n`) does not split a line. These carriage returns are\nthereby included in the produced lines.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\r\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\n// Trailing carriage return is included in the last line\nassert_eq!(Some(\"baz\\r\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line does not require any ending:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:43780:8553","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2335:3251":{"id":"0:2335:3251","crate_id":0,"name":"ShortMonthName","span":{"filename":"src/format/mod.rs","begin":[181,4],"end":[181,18]},"visibility":"default","docs":"Abbreviated month names.\n\nPrints a three-letter-long name in the title case, reads the same name in any case.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:211":{"id":"0:211","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[473,0],"end":[473,76]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Tz"},"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:2788:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2788:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2793:252-0:2761:2117":{"id":"a:2:2793:252-0:2761:2117","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2793:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:3167":{"id":"0:3167","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[224,27],"end":[224,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2787:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseWeekdayError","id":"0:3160:2143","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1959:7897":{"id":"0:1959:7897","crate_id":0,"name":"trunc_subsecs","span":{"filename":"src/round.rs","begin":[66,4],"end":[74,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["digits",{"primitive":"u16"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1575:203":{"id":"0:1575:203","crate_id":0,"name":"Output","span":{"filename":"src/offset/fixed.rs","begin":[247,4],"end":[247,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}}},"0:2627:454":{"id":"0:2627:454","crate_id":0,"name":"clone","span":{"filename":"src/naive/date.rs","begin":[193,53],"end":[193,58]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1845":{"id":"0:1845","crate_id":0,"name":null,"span":{"filename":"src/offset/local/mod.rs","begin":[152,0],"end":[178,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ymd_opt","ymd","timestamp_opt","isoywd","yo","yo_opt","timestamp_millis_opt","timestamp_micros","isoywd_opt","timestamp_millis","datetime_from_str","from_utc_datetime","timestamp_nanos","from_local_date","timestamp","with_ymd_and_hms","from_local_datetime","from_utc_date"],"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Local","id":"0:3052:2107","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1846:2122","0:1847:2624","0:1848:7059","0:1849:7061","0:1850:7066","0:1851:3880"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1034:5369":{"id":"0:1034:5369","crate_id":0,"name":"iter_days","span":{"filename":"src/naive/date.rs","begin":[1379,4],"end":[1381,5]},"visibility":"public","docs":"Returns an iterator that steps by days across all representable dates.\n\n# Example\n\n```\n# use chrono::NaiveDate;\n\nlet expected = [\n    NaiveDate::from_ymd_opt(2016, 2, 27).unwrap(),\n    NaiveDate::from_ymd_opt(2016, 2, 28).unwrap(),\n    NaiveDate::from_ymd_opt(2016, 2, 29).unwrap(),\n    NaiveDate::from_ymd_opt(2016, 3, 1).unwrap(),\n];\n\nlet mut count = 0;\nfor (idx, d) in NaiveDate::from_ymd_opt(2016, 2, 27).unwrap().iter_days().take(4).enumerate() {\n   assert_eq!(d, expected[idx]);\n   count += 1;\n}\nassert_eq!(count, 4);\n\nfor d in NaiveDate::from_ymd_opt(2016, 3, 1).unwrap().iter_days().rev().take(4) {\n    count -= 1;\n    assert_eq!(d, expected[count]);\n}\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"NaiveDateDaysIterator","id":"0:2628:4959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:396:2674":{"id":"0:396:2674","crate_id":0,"name":"ordinal","span":{"filename":"src/datetime/mod.rs","begin":[955,4],"end":[957,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12528:32637":{"id":"2:12528:32637","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1114":{"id":"0:1114","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[2203,0],"end":[2207,1]},"visibility":"default","docs":"The default value for a NaiveDate is 1st of January 1970.\n\n# Example\n\n```rust\nuse chrono::NaiveDate;\n\nlet default_date = NaiveDate::default();\nassert_eq!(default_date, NaiveDate::from_ymd_opt(1970, 1, 1).unwrap());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2618:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1115:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3246:2146":{"id":"0:3246:2146","crate_id":0,"name":"ParseMonthError","span":{"filename":"src/month.rs","begin":[234,0],"end":[236,1]},"visibility":"public","docs":"An error resulting from reading `<Month>` value with `FromStr`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:2793:252-0:3246:2146","a:2:2776:242-0:3246:2146","a:2:8606:8818-0:3246:2146","a:2:2833:8772-0:3246:2146","a:2:8607:8817-0:3246:2146","b:2:2571-0:3246:2146","b:2:2577-0:3246:2146","b:2:2582-0:3246:2146","b:2:2261-0:3246:2146","b:2:3412-0:3246:2146","b:2:2264-0:3246:2146","b:2:2567-0:3246:2146","b:5:5792-0:3246:2146","b:5:682-0:3246:2146","0:3254","0:3250","0:2030","0:3248","0:3251","0:3253","0:2031","0:2033"]}}},"0:213":{"id":"0:213","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[474,0],"end":[474,83]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Tz"},"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2776:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2776:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1267:203":{"id":"0:1267:203","crate_id":0,"name":"Output","span":{"filename":"src/naive/datetime/mod.rs","begin":[1786,4],"end":[1786,30]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"b:5:682-0:2668:2120":{"id":"b:5:682-0:2668:2120","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:684:9349","5:685:9350","5:686:9351"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1405:6678":{"id":"0:1405:6678","crate_id":0,"name":"from_hms_nano","span":{"filename":"src/naive/time/mod.rs","begin":[385,4],"end":[387,5]},"visibility":"public","docs":"Makes a new `NaiveTime` from hour, minute, second and nanosecond.\n\nThe nanosecond part is allowed to exceed 1,000,000,000 in order to represent a\n[leap second](#leap-second-handling), but only when `sec == 59`.\n\n# Panics\n\nPanics on invalid hour, minute, second and/or nanosecond.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `from_hms_nano_opt()` instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"use `from_hms_nano_opt()` instead"},"inner":{"function":{"decl":{"inputs":[["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}],["nano",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8606:8818-0:2085:127":{"id":"a:2:8606:8818-0:2085:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8606:8818","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:357":{"id":"0:357","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[652,0],"end":[660,1]},"visibility":"default","docs":"Convert a `DateTime<Utc>` instance into a `DateTime<FixedOffset>` instance.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Utc","id":"0:3059:2118","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::offset::FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:358:744"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2262:781":{"id":"0:2262:781","crate_id":0,"name":"hash","span":{"filename":"src/format/mod.rs","begin":[82,44],"end":[82,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9755:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2482":{"id":"0:2482","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[319,22],"end":[319,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Colons","id":"0:2472:3319","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2483:454"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2355:3275":{"id":"0:2355:3275","crate_id":0,"name":"TimezoneName","span":{"filename":"src/format/mod.rs","begin":[215,4],"end":[215,16]},"visibility":"default","docs":"Timezone name.\n\nIt does not support parsing, its use in the parser is an immediate failure.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:2357:3280":{"id":"0:2357:3280","crate_id":0,"name":"TimezoneOffsetColon","span":{"filename":"src/format/mod.rs","begin":[221,4],"end":[221,23]},"visibility":"default","docs":"Offset from the local time to UTC (`+09:00` or `-04:00` or `+00:00`).\n\nIn the parser, the colon can be omitted and/or surrounded with any amount of whitespace.\nThe offset is limited from `-24:00` to `+24:00`,\nwhich is the same as [`FixedOffset`](../offset/struct.FixedOffset.html)'s range.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:2012-0:3124:2116":{"id":"0:2012-0:3124:2116","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[545,37],"end":[545,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"weekday::Weekday","name":"Weekday","id":"0:3124:2116","glob":false}}},"0:2136:2739":{"id":"0:2136:2739","crate_id":0,"name":"AutoSi","span":{"filename":"src/datetime/mod.rs","begin":[72,4],"end":[72,10]},"visibility":"default","docs":"Automatically select one of `Secs`, `Millis`, `Micros`, or `Nanos` to\ndisplay all available non-zero sub-second digits.  This corresponds to\n[Fixed::Nanosecond](format/enum.Fixed.html#variant.Nanosecond).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:2668:2120":{"id":"0:2668:2120","crate_id":0,"name":"NaiveDateTime","span":{"filename":"src/naive/datetime/mod.rs","begin":[78,0],"end":[81,1]},"visibility":"public","docs":"ISO 8601 combined date and time without timezone.\n\n# Example\n\n`NaiveDateTime` is commonly created from [`NaiveDate`](./struct.NaiveDate.html).\n\n```\nuse chrono::{NaiveDate, NaiveDateTime};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2016, 7, 8).unwrap().and_hms_opt(9, 10, 11).unwrap();\n# let _ = dt;\n```\n\nYou can use typical [date-like](../trait.Datelike.html) and\n[time-like](../trait.Timelike.html) methods,\nprovided that relevant traits are in the scope.\n\n```\n# use chrono::{NaiveDate, NaiveDateTime};\n# let dt: NaiveDateTime = NaiveDate::from_ymd_opt(2016, 7, 8).unwrap().and_hms_opt(9, 10, 11).unwrap();\nuse chrono::{Datelike, Timelike, Weekday};\n\nassert_eq!(dt.weekday(), Weekday::Fri);\nassert_eq!(dt.num_seconds_from_midnight(), 33011);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:1161","a:2:2793:252-0:2668:2120","a:2:2776:242-0:2668:2120","a:2:8606:8818-0:2668:2120","a:2:2833:8772-0:2668:2120","a:2:8607:8817-0:2668:2120","b:0:1956-0:2668:2120","b:2:2571-0:2668:2120","b:2:2577-0:2668:2120","b:2:2582-0:2668:2120","b:2:2261-0:2668:2120","b:2:3412-0:2668:2120","b:2:2264-0:2668:2120","b:2:2567-0:2668:2120","b:5:5792-0:2668:2120","b:5:682-0:2668:2120","0:1240","0:1243","0:1261","0:1279","0:1263","0:1248","0:1277","0:1566","0:2680","0:1203","0:2672","0:1272","0:1250","0:1246","0:2674","0:1259","0:1227","0:2675","0:1253","0:1970","0:1087","0:1275","0:2677","0:2671","0:1563","0:2685","0:2682","0:1283","0:1256","0:2684","0:1266","0:1269"]}}},"0:1912:7010":{"id":"0:1912:7010","crate_id":0,"name":"yo","span":{"filename":"src/offset/mod.rs","begin":[284,4],"end":[286,5]},"visibility":"default","docs":"Makes a new `Date` from year, day of year (DOY or \"ordinal\") and the current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\n\nThe time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),\nbut it will propagate to the `DateTime` values constructed via this date.\n\nPanics on the out-of-range date and/or invalid DOY.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note =\n\"use `from_local_datetime()` with a `NaiveDateTime` instead\")]","#[allow(deprecated)]"],"deprecation":{"since":"0.4.23","note":"use `from_local_datetime()` with a `NaiveDateTime` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["year",{"primitive":"i32"}],["ordinal",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1058:2681":{"id":"0:1058:2681","crate_id":0,"name":"with_day0","span":{"filename":"src/naive/date.rs","begin":[1768,4],"end":[1771,5]},"visibility":"default","docs":"Makes a new `NaiveDate` with the day of month (starting from 0) changed.\n\n# Errors\n\nReturns `None` if the resulting date does not exist, or if the value for `day0` is invalid.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().with_day0(29),\n           Some(NaiveDate::from_ymd_opt(2015, 9, 30).unwrap()));\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().with_day0(30),\n           None); // no September 31\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["day0",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12495:3969":{"id":"2:12495:3969","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2571-0:2628:4959":{"id":"b:2:2571-0:2628:4959","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateDaysIterator","id":"0:2628:4959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2573:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8607:8817-0:2668:2120":{"id":"a:2:8607:8817-0:2668:2120","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8607:8817","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2582-0:2161:2526":{"id":"b:2:2582-0:2161:2526","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DelayedFormat","id":"0:2161:2526","args":{"angle_bracketed":{"args":[{"type":{"generic":"I"}}],"bindings":[]}}}},"items":["2:2585:133","2:2586:1588"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2051:2675":{"id":"0:2051:2675","crate_id":0,"name":"ordinal0","span":{"filename":"src/traits.rs","begin":[75,4],"end":[75,30]},"visibility":"default","docs":"Returns the day of year starting from 0.\n\nThe return value ranges from 0 to 365. (The last day of year differs by years.)","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:2111":{"id":"0:2111","crate_id":0,"name":null,"span":{"filename":"src/duration.rs","begin":[443,16],"end":[443,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRangeError","id":"0:2106:2104","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2112:454"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3058:718":{"id":"0:3058:718","crate_id":0,"name":"fmt","span":{"filename":"src/offset/local/mod.rs","begin":[106,22],"end":[106,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9506:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9487:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:257-0:138:2125":{"id":"0:257-0:138:2125","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[513,21],"end":[513,29]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"import":{"source":"date::MAX_DATE","name":"MAX_DATE","id":"0:138:2125","glob":false}}},"b:2:2577-0:2472:3319":{"id":"b:2:2577-0:2472:3319","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2547:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Colons","id":"0:2472:3319","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2580:133","2:2581:1590"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2150:660":{"id":"0:2150:660","crate_id":0,"name":"eq","span":{"filename":"src/datetime/mod.rs","begin":[51,33],"end":[51,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"SecondsFormat","id":"0:2127:2112","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1448:1525":{"id":"0:1448:1525","crate_id":0,"name":"sub","span":{"filename":"src/naive/time/mod.rs","begin":[1205,4],"end":[1207,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"OldDuration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3412-0:2106:2104":{"id":"b:2:3412-0:2106:2104","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3410:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRangeError","id":"0:2106:2104","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3414:1603"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1188:2859":{"id":"0:1188:2859","crate_id":0,"name":"checked_add_days","span":{"filename":"src/naive/datetime/mod.rs","begin":[814,4],"end":[816,5]},"visibility":"public","docs":"Add a duration in [`Days`] to the date part of the `NaiveDateTime`\n\nReturns `None` if the resulting date would be out of range.","links":{"`Days`":"0:2589:2135"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["days",{"resolved_path":{"name":"Days","id":"0:2589:2135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2767":{"id":"0:2767","crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[25,20],"end":[25,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2330:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2570:3122":{"id":"2:2570:3122","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2544:138"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:102-0:3059:2118":{"id":"0:102-0:3059:2118","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[504,33],"end":[504,36]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"inner":{"import":{"source":"crate::Utc","name":"Utc","id":"0:3059:2118","glob":false}}},"b:2:2577-0:3225:2145":{"id":"b:2:2577-0:3225:2145","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2547:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Months","id":"0:3225:2145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2580:133","2:2581:1590"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1227":{"id":"0:1227","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1328,0],"end":[1499,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hour12","num_seconds_from_midnight"],"trait":{"name":"Timelike","id":"0:2062:2115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1228:2575","0:1229:3039","0:1230:3040","0:1231:3041","0:1232:3045","0:1234:3049","0:1236:3055","0:1238:3062"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2640:660":{"id":"0:2640:660","crate_id":0,"name":"eq","span":{"filename":"src/naive/date.rs","begin":[2017,35],"end":[2017,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"NaiveDateDaysIterator","id":"0:2628:4959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3153":{"id":"0:3153","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[32,30],"end":[32,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Weekday","id":"0:3124:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3154:454"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2582-0:3106:2141":{"id":"b:2:2582-0:3106:2141","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RoundingError","id":"0:3106:2141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2585:133","2:2586:1588"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2577-0:3160:2143":{"id":"b:2:2577-0:3160:2143","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2547:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseWeekdayError","id":"0:3160:2143","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2580:133","2:2581:1590"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1064:301":{"id":"0:1064:301","crate_id":0,"name":"add","span":{"filename":"src/naive/date.rs","begin":[1856,4],"end":[1858,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"OldDuration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3412-0:2085:127":{"id":"b:2:3412-0:2085:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3410:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3414:1603"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:512:132":{"id":"0:512:132","crate_id":0,"name":"Err","span":{"filename":"src/datetime/mod.rs","begin":[1394,4],"end":[1394,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"ParseError","id":"0:2536:2132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:2488":{"id":"0:2488","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[319,40],"end":[319,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2330:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Colons","id":"0:2472:3319","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2261-0:2610:2119":{"id":"b:2:2261-0:2610:2119","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2255:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2263:2522"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1072:1525":{"id":"0:1072:1525","crate_id":0,"name":"sub","span":{"filename":"src/naive/date.rs","begin":[1916,4],"end":[1918,5]},"visibility":"default","docs":"A subtraction of Months from `NaiveDate` clamped to valid days in resulting month.\n\n# Panics\n\nPanics if the resulting date would be out of range.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Months};\n\nlet from_ymd = |y, m, d| NaiveDate::from_ymd_opt(y, m, d).unwrap();\n\nassert_eq!(from_ymd(2014, 1, 1) - Months::new(11), from_ymd(2013, 2, 1));\nassert_eq!(from_ymd(2014, 1, 1) - Months::new(12), from_ymd(2013, 1, 1));\nassert_eq!(from_ymd(2014, 1, 1) - Months::new(13), from_ymd(2012, 12, 1));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["months",{"resolved_path":{"name":"Months","id":"0:3225:2145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:2850:2288","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:105-0:2668:2120":{"id":"0:105-0:2668:2120","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[506,31],"end":[506,44]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"inner":{"import":{"source":"crate::NaiveDateTime","name":"NaiveDateTime","id":"0:2668:2120","glob":false}}},"0:1259":{"id":"0:1259","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1700,0],"end":[1705,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"SubAssign","id":"2:2880:2524","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1260:1526"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2143":{"id":"0:2143","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[51,22],"end":[51,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(clippy :: manual_non_exhaustive)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9531:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SecondsFormat","id":"0:2127:2112","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2144:718"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:682-0:3170:2114":{"id":"b:5:682-0:3170:2114","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Month","id":"0:3170:2114","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:684:9349","5:685:9350","5:686:9351"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2567-0:3256:2158":{"id":"b:2:2567-0:3256:2158","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRange","id":"0:3256:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2570:3122"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3412-0:2589:2135":{"id":"b:2:3412-0:2589:2135","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3410:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Days","id":"0:2589:2135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3414:1603"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:42:2375":{"id":"0:42:2375","crate_id":0,"name":"num_milliseconds","span":{"filename":"src/duration.rs","begin":[194,4],"end":[200,5]},"visibility":"public","docs":"Returns the total number of whole milliseconds in the duration,","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2833:8772-0:3106:2141":{"id":"a:2:2833:8772-0:3106:2141","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2833:8772","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RoundingError","id":"0:3106:2141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:68:612":{"id":"0:68:612","crate_id":0,"name":"div","span":{"filename":"src/duration.rs","begin":[374,4],"end":[388,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"primitive":"i32"}]],"output":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:61:203":{"id":"0:61:203","crate_id":0,"name":"Output","span":{"filename":"src/duration.rs","begin":[346,4],"end":[346,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:3241:660":{"id":"0:3241:660","crate_id":0,"name":"eq","span":{"filename":"src/month.rs","begin":[221,39],"end":[221,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Months","id":"0:3225:2145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2833:8772-0:2610:2119":{"id":"a:2:2833:8772-0:2610:2119","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2833:8772","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2261-0:2321:3242":{"id":"b:2:2261-0:2321:3242","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2255:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalNumeric","id":"0:2321:3242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2263:2522"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:389":{"id":"0:389","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[933,0],"end":[1082,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["num_days_from_ce","year_ce"],"trait":{"name":"Datelike","id":"0:2043:2113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:391:2670","0:392:2144","0:393:2671","0:394:2672","0:395:2673","0:396:2674","0:397:2675","0:398:2142","0:399:2676","0:400:2677","0:402:2678","0:404:2679","0:406:2680","0:408:2681","0:410:2682","0:412:2683"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:153:2606":{"id":"0:153:2606","crate_id":0,"name":"and_hms_nano_opt","span":{"filename":"src/date.rs","begin":[192,4],"end":[200,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date, hour, minute, second and nanosecond.\nThe nanosecond part can exceed 1,000,000,000 in order to represent the leap second.\nThe offset in the current date is preserved.\n\nReturns `None` on invalid hour, minute, second and/or nanosecond.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}],["nano",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2491:781":{"id":"0:2491:781","crate_id":0,"name":"hash","span":{"filename":"src/format/mod.rs","begin":[319,44],"end":[319,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9755:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2571-0:2472:3319":{"id":"b:2:2571-0:2472:3319","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Colons","id":"0:2472:3319","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2573:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1426":{"id":"0:1426","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[848,0],"end":[1067,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hour12","num_seconds_from_midnight"],"trait":{"name":"Timelike","id":"0:2062:2115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1427:2575","0:1428:3039","0:1429:3040","0:1430:3041","0:1431:3045","0:1432:3049","0:1433:3055","0:1434:3062","0:1435:5929"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2464":{"id":"0:2464","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[298,29],"end":[298,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2325:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetPrecision","id":"0:2445:3316","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2465:660"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2571-0:2170:2717":{"id":"b:2:2571-0:2170:2717","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parsed","id":"0:2170:2717","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2573:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3412-0:2170:2717":{"id":"b:2:3412-0:2170:2717","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3410:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parsed","id":"0:2170:2717","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3414:1603"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:682-0:2536:2132":{"id":"b:5:682-0:2536:2132","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:2536:2132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:684:9349","5:685:9350","5:686:9351"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1013:2597":{"id":"0:1013:2597","crate_id":0,"name":"and_hms_micro_opt","span":{"filename":"src/naive/date.rs","begin":[971,4],"end":[980,5]},"visibility":"public","docs":"Makes a new `NaiveDateTime` from the current date, hour, minute, second and microsecond.\n\nThe microsecond part is allowed to exceed 1,000,000,000 in order to represent a [leap second](\n./struct.NaiveTime.html#leap-second-handling), but only when `sec == 59`.\n\n# Errors\n\nReturns `None` on invalid hour, minute, second and/or microsecond.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet d = NaiveDate::from_ymd_opt(2015, 6, 3).unwrap();\nassert!(d.and_hms_micro_opt(12, 34, 56,   789_012).is_some());\nassert!(d.and_hms_micro_opt(12, 34, 59, 1_789_012).is_some()); // leap second\nassert!(d.and_hms_micro_opt(12, 34, 59, 2_789_012).is_none());\nassert!(d.and_hms_micro_opt(12, 34, 60,   789_012).is_none());\nassert!(d.and_hms_micro_opt(12, 60, 56,   789_012).is_none());\nassert!(d.and_hms_micro_opt(24, 34, 56,   789_012).is_none());\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}],["micro",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:988:5078":{"id":"0:988:5078","crate_id":0,"name":"from_yo","span":{"filename":"src/naive/date.rs","begin":[307,4],"end":[309,5]},"visibility":"public","docs":"Makes a new `NaiveDate` from the [ordinal date](#ordinal-date)\n(year and day of the year).\n\n# Panics\n\nPanics if the specified ordinal day does not exist, on invalid values for `ordinal`, or if\n`year` is out of range for `NaiveDate`.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `from_yo_opt()` instead\")]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"use `from_yo_opt()` instead"},"inner":{"function":{"decl":{"inputs":[["year",{"primitive":"i32"}],["ordinal",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2639":{"id":"0:2639","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[2017,35],"end":[2017,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2325:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateDaysIterator","id":"0:2628:4959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2640:660"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1096":{"id":"0:1096","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[2050,0],"end":[2050,47]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:7932:4969","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateDaysIterator","id":"0:2628:4959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2445:3316":{"id":"0:2445:3316","crate_id":0,"name":"OffsetPrecision","span":{"filename":"src/format/mod.rs","begin":[299,0],"end":[316,1]},"visibility":"public","docs":"The precision of an offset from UTC formatting item.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:2446:3328","0:2448:3331","0:2450:3333","0:2452:3335","0:2454:3337","0:2456:3339"],"impls":["a:2:2793:252-0:2445:3316","a:2:2776:242-0:2445:3316","a:2:8606:8818-0:2445:3316","a:2:2833:8772-0:2445:3316","a:2:8607:8817-0:2445:3316","b:2:2571-0:2445:3316","b:2:2577-0:2445:3316","b:2:2582-0:2445:3316","b:2:2261-0:2445:3316","b:2:3412-0:2445:3316","b:2:2264-0:2445:3316","b:2:2567-0:2445:3316","b:5:682-0:2445:3316","0:2461","0:2466","0:2460","0:2458","0:2464","0:2469","0:2463","0:2467"]}}},"0:2310":{"id":"0:2310","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[105,16],"end":[105,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2786:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Numeric","id":"0:2264:3194","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2456:3339":{"id":"0:2456:3339","crate_id":0,"name":"OptionalMinutesAndSeconds","span":{"filename":"src/format/mod.rs","begin":[315,4],"end":[315,29]},"visibility":"default","docs":"Format offset from UTC as hours and optionally minutes and seconds.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:3065":{"id":"0:3065","crate_id":0,"name":null,"span":{"filename":"src/offset/utc.rs","begin":[43,22],"end":[43,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2325:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Utc","id":"0:3059:2118","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3066:660"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:399:2676":{"id":"0:399:2676","crate_id":0,"name":"iso_week","span":{"filename":"src/datetime/mod.rs","begin":[967,4],"end":[969,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"IsoWeek","id":"0:2724:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:5792-0:2668:2120":{"id":"b:5:5792-0:2668:2120","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9536:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5790:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5794:1565"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:189:2144":{"id":"0:189:2144","crate_id":0,"name":"month","span":{"filename":"src/date.rs","begin":[404,4],"end":[406,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:5792-0:2085:127":{"id":"b:5:5792-0:2085:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9536:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5790:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5794:1565"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:27":{"id":"0:27","crate_id":0,"name":null,"span":{"filename":"src/duration.rs","begin":[72,0],"end":[316,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:28:2331","0:29:2337","0:30:2341","0:31:2345","0:32:2334","0:33:2352","0:34:2356","0:35:2359","0:36:2361","0:37:2362","0:38:2366","0:39:2368","0:40:2364","0:42:2375","0:43:2380","0:44:2384","0:45:2381","0:46:2387","0:47:2389","0:48:2390","0:49:2391","0:50:2393","0:51:2395","0:52:2399","0:53:2405"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:79:718":{"id":"0:79:718","crate_id":0,"name":"fmt","span":{"filename":"src/duration.rs","begin":[407,4],"end":[434,5]},"visibility":"default","docs":"Format a duration using the [ISO 8601] format\n\n[ISO 8601]: https://en.wikipedia.org/wiki/ISO_8601#Durations","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9506:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9487:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:60":{"id":"0:60","crate_id":0,"name":null,"span":{"filename":"src/duration.rs","begin":[345,0],"end":[357,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:2850:2288","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:61:203","0:62:1525"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1871:7165":{"id":"0:1871:7165","crate_id":0,"name":"now","span":{"filename":"src/offset/utc.rs","begin":[90,4],"end":[96,5]},"visibility":"public","docs":"Returns a `DateTime<Utc>` which corresponds to the current date and time in UTC.\n\nSee also the similar [`Local::now()`] which returns `DateTime<Local>`, i.e. the local date\nand time including offset from UTC.\n\n[`Local::now()`]: crate::Local::now\n\n# Example\n\n```\n# #![allow(unused_variables)]\n# use chrono::{FixedOffset, Utc};\n// Current time in UTC\nlet now_utc = Utc::now();\n\n// Current date in UTC\nlet today_utc = now_utc.date_naive();\n\n// Current time in some timezone (let's use +05:00)\nlet offset = FixedOffset::east_opt(5 * 60 * 60).unwrap();\nlet now_with_offset = Utc::now().with_timezone(&offset);\n```","links":{"crate::Local::now":"0:1844:7165"},"attrs":["#[cfg(not(all(target_arch = \"wasm32\", feature = \"wasmbind\",\nnot(any(target_os = \"emscripten\", target_os = \"wasi\")))))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Utc","id":"0:3059:2118","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:672:3782":{"id":"0:672:3782","crate_id":0,"name":"set_week_from_mon","span":{"filename":"src/format/parsed.rs","begin":[200,4],"end":[202,5]},"visibility":"public","docs":"Tries to set the [`week_from_mon`](#structfield.week_from_mon) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:906:2133","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2436":{"id":"0:2436","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[285,29],"end":[285,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2786:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetFormat","id":"0:2426:3314","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:991:3847":{"id":"0:991:3847","crate_id":0,"name":"from_isoywd_opt","span":{"filename":"src/naive/date.rs","begin":[406,4],"end":[436,5]},"visibility":"public","docs":"Makes a new `NaiveDate` from the [ISO week date](#week-date)\n(year, week number and day of the week).\nThe resulting `NaiveDate` may have a different year from the input year.\n\n# Errors\n\nReturns `None` if:\n- The specified week does not exist in that year (for example 2023 week 53).\n- The value for `week` is invalid (for example: `0`, `60`).\n- If the resulting date is out of range for `NaiveDate`.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Weekday};\n\nlet from_ymd = |y, m, d| NaiveDate::from_ymd_opt(y, m, d).unwrap();\nlet from_isoywd_opt = NaiveDate::from_isoywd_opt;\n\nassert_eq!(from_isoywd_opt(2015, 0, Weekday::Sun), None);\nassert_eq!(from_isoywd_opt(2015, 10, Weekday::Sun), Some(from_ymd(2015, 3, 8)));\nassert_eq!(from_isoywd_opt(2015, 30, Weekday::Mon), Some(from_ymd(2015, 7, 20)));\nassert_eq!(from_isoywd_opt(2015, 60, Weekday::Mon), None);\n\nassert_eq!(from_isoywd_opt(400000, 10, Weekday::Fri), None);\nassert_eq!(from_isoywd_opt(-400000, 10, Weekday::Sat), None);\n```\n\nThe year number of ISO week date may differ from that of the calendar date.\n\n```\n# use chrono::{NaiveDate, Weekday};\n# let from_ymd = |y, m, d| NaiveDate::from_ymd_opt(y, m, d).unwrap();\n# let from_isoywd_opt = NaiveDate::from_isoywd_opt;\n//           Mo Tu We Th Fr Sa Su\n// 2014-W52  22 23 24 25 26 27 28    has 4+ days of new year,\n// 2015-W01  29 30 31  1  2  3  4 <- so this is the first week\nassert_eq!(from_isoywd_opt(2014, 52, Weekday::Sun), Some(from_ymd(2014, 12, 28)));\nassert_eq!(from_isoywd_opt(2014, 53, Weekday::Mon), None);\nassert_eq!(from_isoywd_opt(2015, 1, Weekday::Mon), Some(from_ymd(2014, 12, 29)));\n\n// 2015-W52  21 22 23 24 25 26 27    has 4+ days of old year,\n// 2015-W53  28 29 30 31  1  2  3 <- so this is the last week\n// 2016-W01   4  5  6  7  8  9 10\nassert_eq!(from_isoywd_opt(2015, 52, Weekday::Sun), Some(from_ymd(2015, 12, 27)));\nassert_eq!(from_isoywd_opt(2015, 53, Weekday::Sun), Some(from_ymd(2016, 1, 3)));\nassert_eq!(from_isoywd_opt(2015, 54, Weekday::Mon), None);\nassert_eq!(from_isoywd_opt(2016, 1, Weekday::Mon), Some(from_ymd(2016, 1, 4)));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["year",{"primitive":"i32"}],["week",{"primitive":"u32"}],["weekday",{"resolved_path":{"name":"Weekday","id":"0:3124:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2567-0:3124:2116":{"id":"b:2:2567-0:3124:2116","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Weekday","id":"0:3124:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2570:3122"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:99-0:3124:2116":{"id":"0:99-0:3124:2116","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[502,47],"end":[502,54]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"inner":{"import":{"source":"crate::Weekday","name":"Weekday","id":"0:3124:2116","glob":false}}},"0:710:3878":{"id":"0:710:3878","crate_id":0,"name":"to_datetime_with_timezone","span":{"filename":"src/format/parsed.rs","begin":[658,4],"end":[701,5]},"visibility":"public","docs":"Returns a parsed timezone-aware date and time out of given fields,\nwith an additional `TimeZone` used to interpret and validate the local date.\n\nThis method is able to determine the combined date and time\nfrom date and time fields or a single [`timestamp`](#structfield.timestamp) field,\nplus a time zone offset.\nEither way those fields have to be consistent to each other.\nIf parsed fields include an UTC offset, it also has to be consistent to\n[`offset`](#structfield.offset).","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["tz",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Tz"}}}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:906:2133","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2582-0:2334:2716":{"id":"b:2:2582-0:2334:2716","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Fixed","id":"0:2334:2716","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2585:133","2:2586:1588"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2752:781":{"id":"0:2752:781","crate_id":0,"name":"hash","span":{"filename":"src/naive/time/mod.rs","begin":[205,24],"end":[205,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9755:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2582-0:2209:2527":{"id":"b:2:2582-0:2209:2527","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"StrftimeItems","id":"0:2209:2527","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2585:133","2:2586:1588"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8606:8818-0:2668:2120":{"id":"a:2:8606:8818-0:2668:2120","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8606:8818","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2523:660":{"id":"0:2523:660","crate_id":0,"name":"eq","span":{"filename":"src/format/mod.rs","begin":[330,16],"end":[330,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Item","id":"0:2493:168","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:30:2341":{"id":"0:30:2341","crate_id":0,"name":"hours","span":{"filename":"src/duration.rs","begin":[98,4],"end":[101,5]},"visibility":"public","docs":"Makes a new `Duration` with given number of hours.\nEquivalent to `Duration::seconds(hours * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["hours",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2582-0:2170:2717":{"id":"b:2:2582-0:2170:2717","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parsed","id":"0:2170:2717","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2585:133","2:2586:1588"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3412-0:2445:3316":{"id":"b:2:3412-0:2445:3316","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3410:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetPrecision","id":"0:2445:3316","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3414:1603"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2571-0:2589:2135":{"id":"b:2:2571-0:2589:2135","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Days","id":"0:2589:2135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2573:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:3097":{"id":"0:3097","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[41,40],"end":[41,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2787:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LocalResult","id":"0:3073:2138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2316":{"id":"0:2316","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[105,31],"end":[105,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9531:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Numeric","id":"0:2264:3194","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2317:718"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1276:718":{"id":"0:1276:718","crate_id":0,"name":"fmt","span":{"filename":"src/naive/datetime/mod.rs","begin":[1838,4],"end":[1842,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9506:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9487:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8607:8817-0:3106:2141":{"id":"a:2:8607:8817-0:3106:2141","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8607:8817","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RoundingError","id":"0:3106:2141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2567-0:2170:2717":{"id":"b:2:2567-0:2170:2717","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parsed","id":"0:2170:2717","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2570:3122"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:469:203":{"id":"0:469:203","crate_id":0,"name":"Output","span":{"filename":"src/datetime/mod.rs","begin":[1259,4],"end":[1259,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}}},"0:3208":{"id":"0:3208","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[31,9],"end":[31,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2325:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Month","id":"0:3170:2114","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3209:660"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2833:8772-0:2334:2716":{"id":"a:2:2833:8772-0:2334:2716","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2833:8772","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Fixed","id":"0:2334:2716","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2728:660":{"id":"0:2728:660","crate_id":0,"name":"eq","span":{"filename":"src/naive/isoweek.rs","begin":[19,9],"end":[19,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"IsoWeek","id":"0:2724:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2571-0:2493:168":{"id":"b:2:2571-0:2493:168","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Item","id":"0:2493:168","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2573:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1210:2675":{"id":"0:1210:2675","crate_id":0,"name":"ordinal0","span":{"filename":"src/naive/datetime/mod.rs","begin":[1126,4],"end":[1128,5]},"visibility":"default","docs":"Returns the day of year starting from 0.\n\nThe return value ranges from 0 to 365. (The last day of year differs by years.)\n\nSee also the [`NaiveDate::ordinal0`](./struct.NaiveDate.html#method.ordinal0) method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Datelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2015, 9, 25).unwrap().and_hms_opt(12, 34, 56).unwrap();\nassert_eq!(dt.ordinal0(), 267);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2540:718":{"id":"0:2540:718","crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[374,9],"end":[374,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9506:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9487:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:244:1526":{"id":"0:244:1526","crate_id":0,"name":"sub_assign","span":{"filename":"src/date.rs","begin":[529,4],"end":[531,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["rhs",{"resolved_path":{"name":"OldDuration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2587":{"id":"0:2587","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[39,9],"end":[39,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9531:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveWeek","id":"0:2584:2137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2588:718"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1270:203":{"id":"0:1270:203","crate_id":0,"name":"Output","span":{"filename":"src/naive/datetime/mod.rs","begin":[1795,4],"end":[1795,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:1063:203":{"id":"0:1063:203","crate_id":0,"name":"Output","span":{"filename":"src/naive/date.rs","begin":[1853,4],"end":[1853,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:1183:2835":{"id":"0:1183:2835","crate_id":0,"name":"timestamp_subsec_nanos","span":{"filename":"src/naive/datetime/mod.rs","begin":[590,4],"end":[592,5]},"visibility":"public","docs":"Returns the number of nanoseconds since the last whole non-leap second.\n\nThe return value ranges from 0 to 999,999,999,\nor for [leap seconds](./struct.NaiveTime.html#leap-second-handling), to 1,999,999,999.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet dt = NaiveDate::from_ymd_opt(2016, 7, 8).unwrap().and_hms_nano_opt(9, 10, 11, 123_456_789).unwrap();\nassert_eq!(dt.timestamp_subsec_nanos(), 123_456_789);\n\nlet dt = NaiveDate::from_ymd_opt(2015, 7, 1).unwrap().and_hms_nano_opt(8, 59, 59, 1_234_567_890).unwrap();\nassert_eq!(dt.timestamp_subsec_nanos(), 1_234_567_890);\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3094:718":{"id":"0:3094:718","crate_id":0,"name":"fmt","span":{"filename":"src/offset/mod.rs","begin":[41,27],"end":[41,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9506:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9487:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2628:4959":{"id":"0:2628:4959","crate_id":0,"name":"NaiveDateDaysIterator","span":{"filename":"src/naive/date.rs","begin":[2018,0],"end":[2020,1]},"visibility":"public","docs":"Iterator over `NaiveDate` with a step size of one day.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:2793:252-0:2628:4959","a:2:2776:242-0:2628:4959","a:2:8606:8818-0:2628:4959","a:2:2833:8772-0:2628:4959","a:2:8607:8817-0:2628:4959","b:2:2571-0:2628:4959","b:2:2577-0:2628:4959","b:2:2582-0:2628:4959","b:2:7484-0:2628:4959","b:2:2261-0:2628:4959","b:2:3412-0:2628:4959","b:2:2264-0:2628:4959","b:2:2567-0:2628:4959","b:5:682-0:2628:4959","0:2638","0:2641","0:1094","0:1089","0:1093","0:2635","0:1096","0:2630","0:2639","0:2632","0:2633","0:2643","0:2644","0:2646"]}}},"0:1962:132":{"id":"0:1962:132","crate_id":0,"name":"Err","span":{"filename":"src/round.rs","begin":[104,4],"end":[104,32]},"visibility":"default","docs":"Error that can occur in rounding or truncating","links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"std::error::Error","id":"2:2629:133","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}}},"0:2126:454":{"id":"0:2126:454","crate_id":0,"name":"clone","span":{"filename":"src/date.rs","begin":[58,9],"end":[58,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:682-0:2628:4959":{"id":"b:5:682-0:2628:4959","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateDaysIterator","id":"0:2628:4959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:684:9349","5:685:9350","5:686:9351"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:3258":{"id":"0:3258","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[573,9],"end":[573,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRange","id":"0:3256:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3259:454"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5537:33888":{"id":"5:5537:33888","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:12527:32636"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7489:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:682-0:2445:3316":{"id":"b:5:682-0:2445:3316","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetPrecision","id":"0:2445:3316","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:684:9349","5:685:9350","5:686:9351"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2833:8772-0:3073:2138":{"id":"a:2:2833:8772-0:3073:2138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2833:8772","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2833:8772","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LocalResult","id":"0:3073:2138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12525:32634":{"id":"2:12525:32634","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:39520:32643","Self::is_ascii":"2:12524:32633"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:39520:32643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1477-0:2648:4960":{"id":"0:1477-0:2648:4960","crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[13,61],"end":[13,83]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::date::NaiveDateWeeksIterator","name":"NaiveDateWeeksIterator","id":"0:2648:4960","glob":false}}},"0:927-0:906:2133":{"id":"0:927-0:906:2133","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[527,29],"end":[527,40]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"format::ParseResult","name":"ParseResult","id":"0:906:2133","glob":false}}},"b:2:3412-0:2321:3242":{"id":"b:2:3412-0:2321:3242","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3410:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalNumeric","id":"0:2321:3242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3414:1603"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1184:2633":{"id":"0:1184:2633","crate_id":0,"name":"checked_add_signed","span":{"filename":"src/naive/datetime/mod.rs","begin":[662,4],"end":[672,5]},"visibility":"public","docs":"Adds given `Duration` to the current date and time.\n\nAs a part of Chrono's [leap second handling](./struct.NaiveTime.html#leap-second-handling),\nthe addition assumes that **there is no leap second ever**,\nexcept when the `NaiveDateTime` itself represents a leap second\nin which case the assumption becomes that **there is exactly a single leap second ever**.\n\n# Errors\n\nReturns `None` if the resulting date would be out of range.\n\n# Example\n\n```\nuse chrono::{Duration, NaiveDate};\n\nlet from_ymd = |y, m, d| NaiveDate::from_ymd_opt(y, m, d).unwrap();\n\nlet d = from_ymd(2016, 7, 8);\nlet hms = |h, m, s| d.and_hms_opt(h, m, s).unwrap();\nassert_eq!(hms(3, 5, 7).checked_add_signed(Duration::zero()),\n           Some(hms(3, 5, 7)));\nassert_eq!(hms(3, 5, 7).checked_add_signed(Duration::seconds(1)),\n           Some(hms(3, 5, 8)));\nassert_eq!(hms(3, 5, 7).checked_add_signed(Duration::seconds(-1)),\n           Some(hms(3, 5, 6)));\nassert_eq!(hms(3, 5, 7).checked_add_signed(Duration::seconds(3600 + 60)),\n           Some(hms(4, 6, 7)));\nassert_eq!(hms(3, 5, 7).checked_add_signed(Duration::seconds(86_400)),\n           Some(from_ymd(2016, 7, 9).and_hms_opt(3, 5, 7).unwrap()));\n\nlet hmsm = |h, m, s, milli| d.and_hms_milli_opt(h, m, s, milli).unwrap();\nassert_eq!(hmsm(3, 5, 7, 980).checked_add_signed(Duration::milliseconds(450)),\n           Some(hmsm(3, 5, 8, 430)));\n```\n\nOverflow returns `None`.\n\n```\n# use chrono::{Duration, NaiveDate};\n# let hms = |h, m, s| NaiveDate::from_ymd_opt(2016, 7, 8).unwrap().and_hms_opt(h, m, s).unwrap();\nassert_eq!(hms(3, 5, 7).checked_add_signed(Duration::days(1_000_000_000)), None);\n```\n\nLeap seconds are handled,\nbut the addition assumes that it is the only leap second happened.\n\n```\n# use chrono::{Duration, NaiveDate};\n# let from_ymd = |y, m, d| NaiveDate::from_ymd_opt(y, m, d).unwrap();\n# let hmsm = |h, m, s, milli| from_ymd(2016, 7, 8).and_hms_milli_opt(h, m, s, milli).unwrap();\nlet leap = hmsm(3, 5, 59, 1_300);\nassert_eq!(leap.checked_add_signed(Duration::zero()),\n           Some(hmsm(3, 5, 59, 1_300)));\nassert_eq!(leap.checked_add_signed(Duration::milliseconds(-500)),\n           Some(hmsm(3, 5, 59, 800)));\nassert_eq!(leap.checked_add_signed(Duration::milliseconds(500)),\n           Some(hmsm(3, 5, 59, 1_800)));\nassert_eq!(leap.checked_add_signed(Duration::milliseconds(800)),\n           Some(hmsm(3, 6, 0, 100)));\nassert_eq!(leap.checked_add_signed(Duration::seconds(10)),\n           Some(hmsm(3, 6, 9, 300)));\nassert_eq!(leap.checked_add_signed(Duration::seconds(-10)),\n           Some(hmsm(3, 5, 50, 300)));\nassert_eq!(leap.checked_add_signed(Duration::days(1)),\n           Some(from_ymd(2016, 7, 9).and_hms_milli_opt(3, 5, 59, 300).unwrap()));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"OldDuration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2642:1100":{"id":"0:2642:1100","crate_id":0,"name":"partial_cmp","span":{"filename":"src/naive/date.rs","begin":[2017,46],"end":[2017,56]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"NaiveDateDaysIterator","id":"0:2628:4959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::option::Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:30807:200","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2833:8772-0:2445:3316":{"id":"a:2:2833:8772-0:2445:3316","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2833:8772","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetPrecision","id":"0:2445:3316","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:3234":{"id":"0:3234","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[221,29],"end":[221,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2330:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Months","id":"0:3225:2145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:53:2405":{"id":"0:53:2405","crate_id":0,"name":"to_std","span":{"filename":"src/duration.rs","begin":[310,4],"end":[315,5]},"visibility":"public","docs":"Creates a `std::time::Duration` object from `time::Duration`\n\nThis function errors when duration is less than zero. As standard\nlibrary implementation is limited to non-negative values.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41709:231","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"StdDuration","id":"2:44300:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"OutOfRangeError","id":"0:2106:2104","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1080:203":{"id":"0:1080:203","crate_id":0,"name":"Output","span":{"filename":"src/naive/date.rs","begin":[1962,4],"end":[1962,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:2600":{"id":"0:2600","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[134,33],"end":[134,37]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9747:148","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Days","id":"0:2589:2135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2601:781"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1036:3462":{"id":"0:1036:3462","crate_id":0,"name":"week","span":{"filename":"src/naive/date.rs","begin":[1417,4],"end":[1419,5]},"visibility":"public","docs":"Returns the [`NaiveWeek`] that the date belongs to, starting with the [`Weekday`]\nspecified.","links":{"`NaiveWeek`":"0:2584:2137","`Weekday`":"0:3124:2116"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["start",{"resolved_path":{"name":"Weekday","id":"0:3124:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"NaiveWeek","id":"0:2584:2137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:487:203":{"id":"0:487:203","crate_id":0,"name":"Output","span":{"filename":"src/datetime/mod.rs","begin":[1306,4],"end":[1306,30]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:3162":{"id":"0:3162","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[224,9],"end":[224,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseWeekdayError","id":"0:3160:2143","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3163:454"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:982":{"id":"0:982","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[216,0],"end":[1464,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:986:5060","0:987:2699","0:988:5078","0:989:3836","0:990:5095","0:991:3847","0:992:5135","0:993:5136","0:994:5160","0:995:5161","0:996:2998","0:997:2714","0:1000:2852","0:1001:2857","0:1003:2859","0:1004:2861","0:1007:2565","0:1008:2574","0:1009:2578","0:1010:2586","0:1011:2588","0:1012:2595","0:1013:2597","0:1014:2604","0:1015:2606","0:1020:2612","0:1021:2613","0:1022:2619","0:1023:2620","0:1024:2633","0:1025:2635","0:1026:2640","0:1027:2648","0:1028:2656","0:1032:729","0:1034:5369","0:1035:5376","0:1036:3462","0:1037:5386","0:1042:2325","0:1043:2327"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3412-0:2493:168":{"id":"b:2:3412-0:2493:168","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3410:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Item","id":"0:2493:168","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3414:1603"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8607:8817-0:2426:3314":{"id":"a:2:8607:8817-0:2426:3314","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8607:8817","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetFormat","id":"0:2426:3314","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1953:2110":{"id":"0:1953:2110","crate_id":0,"name":"SubsecRound","span":{"filename":"src/round.rs","begin":[20,0],"end":[45,1]},"visibility":"public","docs":"Extension trait for subsecond rounding or truncation to a maximum number\nof digits. Rounding can be used to decrease the error variance when\nserializing/persisting to lower precision. Truncation is the default\nbehavior in Chrono display formatting.  Either can be used to guarantee\nequality (e.g. for testing) when round-tripping through a lower precision\nformat.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"items":["0:1954:7892","0:1955:7897"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:1956"]}}},"0:3186:3427":{"id":"0:3186:3427","crate_id":0,"name":"June","span":{"filename":"src/month.rs","begin":[47,4],"end":[47,12]},"visibility":"default","docs":"June","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":{"expr":"5","value":"5"}}}},"0:350:2712":{"id":"0:350:2712","crate_id":0,"name":"UNIX_EPOCH","span":{"filename":"src/datetime/mod.rs","begin":[628,4],"end":[628,91]},"visibility":"public","docs":"The Unix Epoch, 1970-01-01 00:00:00 UTC.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:2204":{"id":"0:2204","crate_id":0,"name":null,"span":{"filename":"src/format/parsed.rs","begin":[21,47],"end":[21,51]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(clippy :: manual_non_exhaustive)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9747:148","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parsed","id":"0:2170:2717","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2205:781"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2130:2729":{"id":"0:2130:2729","crate_id":0,"name":"Millis","span":{"filename":"src/datetime/mod.rs","begin":[59,4],"end":[59,10]},"visibility":"default","docs":"Use fixed 3 subsecond digits. This corresponds to\n[Fixed::Nanosecond3](format/enum.Fixed.html#variant.Nanosecond3).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"a:2:8607:8817-0:2243:3177":{"id":"a:2:8607:8817-0:2243:3177","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8607:8817","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Pad","id":"0:2243:3177","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:5:5792-0:3059:2118":{"id":"b:5:5792-0:3059:2118","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9536:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5790:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Utc","id":"0:3059:2118","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5794:1565"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2169:718":{"id":"0:2169:718","crate_id":0,"name":"fmt","span":{"filename":"src/format/formatting.rs","begin":[50,9],"end":[50,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9506:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9487:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2730":{"id":"0:2730","crate_id":0,"name":null,"span":{"filename":"src/naive/isoweek.rs","begin":[19,20],"end":[19,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2330:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IsoWeek","id":"0:2724:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:197:2677":{"id":"0:197:2677","crate_id":0,"name":"with_year","span":{"filename":"src/date.rs","begin":[437,4],"end":[439,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["year",{"primitive":"i32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2672":{"id":"0:2672","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[75,9],"end":[75,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2325:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2673:660"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1232:3045":{"id":"0:1232:3045","crate_id":0,"name":"with_hour","span":{"filename":"src/naive/datetime/mod.rs","begin":[1418,4],"end":[1420,5]},"visibility":"default","docs":"Makes a new `NaiveDateTime` with the hour number changed.\n\nSee also the [`NaiveTime::with_hour`] method.\n\n# Errors\n\nReturns `None` if the value for `hour` is invalid.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Timelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().and_hms_milli_opt(12, 34, 56, 789).unwrap();\nassert_eq!(dt.with_hour(7),\n           Some(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().and_hms_milli_opt(7, 34, 56, 789).unwrap()));\nassert_eq!(dt.with_hour(24), None);\n```","links":{"`NaiveTime::with_hour`":"0:1431:3045"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["hour",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8606:8818-0:3059:2118":{"id":"a:2:8606:8818-0:3059:2118","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8606:8818","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Utc","id":"0:3059:2118","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12475:32744":{"id":"2:12475:32744","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12111:8541","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2648:4960":{"id":"0:2648:4960","crate_id":0,"name":"NaiveDateWeeksIterator","span":{"filename":"src/naive/date.rs","begin":[2054,0],"end":[2056,1]},"visibility":"public","docs":"Iterator over `NaiveDate` with a step size of one week.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:2793:252-0:2648:4960","a:2:2776:242-0:2648:4960","a:2:8606:8818-0:2648:4960","a:2:2833:8772-0:2648:4960","a:2:8607:8817-0:2648:4960","b:2:2571-0:2648:4960","b:2:2577-0:2648:4960","b:2:2582-0:2648:4960","b:2:7484-0:2648:4960","b:2:2261-0:2648:4960","b:2:3412-0:2648:4960","b:2:2264-0:2648:4960","b:2:2567-0:2648:4960","b:5:682-0:2648:4960","0:2658","0:1102","0:2666","0:1097","0:2663","0:1101","0:2652","0:2653","0:2650","0:1104","0:2655","0:2659","0:2664","0:2661"]}}},"a:2:2793:252-0:2127:2112":{"id":"a:2:2793:252-0:2127:2112","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2793:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SecondsFormat","id":"0:2127:2112","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8606:8818-0:2493:168":{"id":"a:2:8606:8818-0:2493:168","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8606:8818","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Item","id":"0:2493:168","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1577-0:2761:2117":{"id":"0:1577-0:2761:2117","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[30,0],"end":[30,33]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::fixed::FixedOffset","name":"FixedOffset","id":"0:2761:2117","glob":false}}},"0:2481":{"id":"0:2481","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[319,16],"end":[319,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2788:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Colons","id":"0:2472:3319","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2264-0:2264:3194":{"id":"b:2:2264-0:2264:3194","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2258:101","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Numeric","id":"0:2264:3194","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2266:7207"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2102:718":{"id":"0:2102:718","crate_id":0,"name":"fmt","span":{"filename":"src/duration.rs","begin":[53,54],"end":[53,59]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9506:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9487:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3264":{"id":"0:3264","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[573,28],"end":[573,37]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2786:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRange","id":"0:3256:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3052:2107":{"id":"0:3052:2107","crate_id":0,"name":"Local","span":{"filename":"src/offset/local/mod.rs","begin":[109,0],"end":[109,17]},"visibility":"public","docs":"The local timescale. This is implemented via the standard `time` crate.\n\nUsing the [`TimeZone`](./trait.TimeZone.html) methods\non the Local struct is the preferred way to construct `DateTime<Local>`\ninstances.\n\n# Example\n\n```\nuse chrono::{Local, DateTime, TimeZone};\n\nlet dt1: DateTime<Local> = Local::now();\nlet dt2: DateTime<Local> = Local.timestamp_opt(0, 0).unwrap();\nassert!(dt1 >= dt2);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":"unit","generics":{"params":[],"where_predicates":[]},"impls":["0:1842","a:2:2793:252-0:3052:2107","a:2:2776:242-0:3052:2107","a:2:8606:8818-0:3052:2107","a:2:2833:8772-0:3052:2107","a:2:8607:8817-0:3052:2107","b:2:2571-0:3052:2107","b:2:2577-0:3052:2107","b:2:2582-0:3052:2107","b:2:2261-0:3052:2107","b:2:3412-0:3052:2107","b:2:2264-0:3052:2107","b:2:2567-0:3052:2107","b:5:682-0:3052:2107","0:3054","0:3055","0:1845","0:3057"]}}},"0:687:3803":{"id":"0:687:3803","crate_id":0,"name":"set_second","span":{"filename":"src/format/parsed.rs","begin":[263,4],"end":[265,5]},"visibility":"public","docs":"Tries to set the [`second`](#structfield.second) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:906:2133","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:708:3868":{"id":"0:708:3868","crate_id":0,"name":"to_fixed_offset","span":{"filename":"src/format/parsed.rs","begin":[617,4],"end":[619,5]},"visibility":"public","docs":"Returns a parsed fixed time zone offset out of given fields.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:906:2133","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2095":{"id":"0:2095","crate_id":0,"name":null,"span":{"filename":"src/duration.rs","begin":[53,33],"end":[53,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2330:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2264-0:3073:2138":{"id":"b:2:2264-0:3073:2138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2258:101","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LocalResult","id":"0:3073:2138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2266:7207"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2160:454":{"id":"0:2160:454","crate_id":0,"name":"clone","span":{"filename":"src/datetime/mod.rs","begin":[84,9],"end":[84,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3412-0:2536:2132":{"id":"b:2:3412-0:2536:2132","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3410:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:2536:2132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3414:1603"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2261-0:2493:168":{"id":"b:2:2261-0:2493:168","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2255:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Item","id":"0:2493:168","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2263:2522"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1973:7920":{"id":"0:1973:7920","crate_id":0,"name":"duration_trunc","span":{"filename":"src/round.rs","begin":[164,4],"end":[166,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["duration",{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41709:231","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:1961:2140","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2758":{"id":"0:2758","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[205,47],"end":[205,51]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2788:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2201:718":{"id":"0:2201:718","crate_id":0,"name":"fmt","span":{"filename":"src/format/parsed.rs","begin":[21,31],"end":[21,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9506:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9487:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2254":{"id":"0:2254","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[82,22],"end":[82,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2325:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Pad","id":"0:2243:3177","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2255:660"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2256":{"id":"0:2256","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[82,33],"end":[82,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2787:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Pad","id":"0:2243:3177","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:569:1002":{"id":"0:569:1002","crate_id":0,"name":"new","span":{"filename":"src/format/formatting.rs","begin":[71,4],"end":[80,5]},"visibility":"public","docs":"Makes a new `DelayedFormat` value out of local date and time.","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["date",{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}],["time",{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}],["items",{"generic":"I"}]],"output":{"resolved_path":{"name":"DelayedFormat","id":"0:2161:2526","args":{"angle_bracketed":{"args":[{"type":{"generic":"I"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2833:8772-0:2264:3194":{"id":"a:2:2833:8772-0:2264:3194","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2833:8772","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Numeric","id":"0:2264:3194","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2605:660":{"id":"0:2605:660","crate_id":0,"name":"eq","span":{"filename":"src/naive/date.rs","begin":[134,39],"end":[134,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Days","id":"0:2589:2135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1549":{"id":"0:1549","crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[148,0],"end":[152,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Offset","id":"0:1904:2122","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1550:2774"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3116:454":{"id":"0:3116:454","crate_id":0,"name":"clone","span":{"filename":"src/round.rs","begin":[238,16],"end":[238,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"RoundingError","id":"0:3106:2141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2124":{"id":"0:2124","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[58,9],"end":[58,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Tz"},"trait":{"name":"","id":"0:1906:2123","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:2126:454"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:897":{"id":"0:897","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[166,0],"end":[170,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9531:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalNumeric","id":"0:2321:3242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:898:718"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2644":{"id":"0:2644","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[2017,58],"end":[2017,60]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2330:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateDaysIterator","id":"0:2628:4959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3219:781":{"id":"0:3219:781","crate_id":0,"name":"hash","span":{"filename":"src/month.rs","begin":[31,44],"end":[31,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9755:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1065":{"id":"0:1065","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[1861,0],"end":[1866,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AddAssign","id":"2:2876:2523","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1066:302"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:340:2642":{"id":"0:340:2642","crate_id":0,"name":"naive_utc","span":{"filename":"src/datetime/mod.rs","begin":[482,4],"end":[484,5]},"visibility":"public","docs":"Returns a view to the naive UTC datetime.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1067":{"id":"0:1067","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[1868,0],"end":[1894,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Add","id":"2:2845:2284","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Months","id":"0:3225:2145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1068:203","0:1069:301"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1415:2640":{"id":"0:1415:2640","crate_id":0,"name":"signed_duration_since","span":{"filename":"src/naive/time/mod.rs","begin":[721,4],"end":[751,5]},"visibility":"public","docs":"Subtracts another `NaiveTime` from the current time.\nReturns a `Duration` within +/- 1 day.\nThis does not overflow or underflow at all.\n\nAs a part of Chrono's [leap second handling](#leap-second-handling),\nthe subtraction assumes that **there is no leap second ever**,\nexcept when any of the `NaiveTime`s themselves represents a leap second\nin which case the assumption becomes that\n**there are exactly one (or two) leap second(s) ever**.\n\n# Example\n\n```\nuse chrono::{Duration, NaiveTime};\n\nlet from_hmsm = |h, m, s, milli| { NaiveTime::from_hms_milli_opt(h, m, s, milli).unwrap() };\nlet since = NaiveTime::signed_duration_since;\n\nassert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(3, 5, 7, 900)),\n           Duration::zero());\nassert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(3, 5, 7, 875)),\n           Duration::milliseconds(25));\nassert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(3, 5, 6, 925)),\n           Duration::milliseconds(975));\nassert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(3, 5, 0, 900)),\n           Duration::seconds(7));\nassert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(3, 0, 7, 900)),\n           Duration::seconds(5 * 60));\nassert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(0, 5, 7, 900)),\n           Duration::seconds(3 * 3600));\nassert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(4, 5, 7, 900)),\n           Duration::seconds(-3600));\nassert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(2, 4, 6, 800)),\n           Duration::seconds(3600 + 60 + 1) + Duration::milliseconds(100));\n```\n\nLeap seconds are handled, but the subtraction assumes that\nthere were no other leap seconds happened.\n\n```\n# use chrono::{Duration, NaiveTime};\n# let from_hmsm = |h, m, s, milli| { NaiveTime::from_hms_milli_opt(h, m, s, milli).unwrap() };\n# let since = NaiveTime::signed_duration_since;\nassert_eq!(since(from_hmsm(3, 0, 59, 1_000), from_hmsm(3, 0, 59, 0)),\n           Duration::seconds(1));\nassert_eq!(since(from_hmsm(3, 0, 59, 1_500), from_hmsm(3, 0, 59, 0)),\n           Duration::milliseconds(1500));\nassert_eq!(since(from_hmsm(3, 0, 59, 1_000), from_hmsm(3, 0, 0, 0)),\n           Duration::seconds(60));\nassert_eq!(since(from_hmsm(3, 0, 0, 0), from_hmsm(2, 59, 59, 1_000)),\n           Duration::seconds(1));\nassert_eq!(since(from_hmsm(3, 0, 59, 1_000), from_hmsm(2, 59, 59, 1_000)),\n           Duration::seconds(61));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"OldDuration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12497:39468":{"id":"2:12497:39468","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:91-0:1953:2110":{"id":"0:91-0:1953:2110","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[498,4],"end":[498,31]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"inner":{"import":{"source":"crate::SubsecRound","name":"SubsecRound","id":"0:1953:2110","glob":false}}},"0:1553":{"id":"0:1553","crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[170,0],"end":[174,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9536:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1554:718"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1551":{"id":"0:1551","crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[154,0],"end":[168,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9531:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1552:718"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:452:301":{"id":"0:452:301","crate_id":0,"name":"add","span":{"filename":"src/datetime/mod.rs","begin":[1215,4],"end":[1217,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"OldDuration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:109-0:1906:2123":{"id":"0:109-0:1906:2123","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[508,28],"end":[508,36]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"inner":{"import":{"source":"crate::TimeZone","name":"TimeZone","id":"0:1906:2123","glob":false}}},"0:692:3809":{"id":"0:692:3809","crate_id":0,"name":"set_offset","span":{"filename":"src/format/parsed.rs","begin":[281,4],"end":[283,5]},"visibility":"public","docs":"Tries to set the [`offset`](#structfield.offset) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:906:2133","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2582-0:2264:3194":{"id":"b:2:2582-0:2264:3194","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Numeric","id":"0:2264:3194","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2585:133","2:2586:1588"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12443:7575":{"id":"2:12443:7575","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:12067:450","self::pattern":"2:12106:8527"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12111:8541","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12111:8541","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12126:8543","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2176:3736":{"id":"0:2176:3736","crate_id":0,"name":"isoyear_mod_100","span":{"filename":"src/format/parsed.rs","begin":[55,4],"end":[55,36]},"visibility":"public","docs":"Year in the [ISO week date](../naive/struct.NaiveDate.html#week-date), modulo 100.\nImplies that the year is >= 1 BCE when set.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"primitive":"i32"}}],"bindings":[]}}}}}},"0:2662:1100":{"id":"0:2662:1100","crate_id":0,"name":"partial_cmp","span":{"filename":"src/naive/date.rs","begin":[2053,46],"end":[2053,56]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"NaiveDateWeeksIterator","id":"0:2648:4960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::option::Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:30807:200","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1898:2588":{"id":"0:1898:2588","crate_id":0,"name":"and_hms_milli_opt","span":{"filename":"src/offset/mod.rs","begin":[131,4],"end":[144,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date, hour, minute, second and millisecond.\nThe millisecond part can exceed 1,000 in order to represent the leap second.\nThe offset in the current date is preserved.\n\nPropagates any error. Ambiguous result would be discarded.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}],["milli",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"LocalResult","id":"0:3073:2138","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2001:1588":{"id":"0:2001:1588","crate_id":0,"name":"try_from","span":{"filename":"src/weekday.rs","begin":[176,4],"end":[187,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"primitive":"u8"}]],"output":{"resolved_path":{"name":"Result","id":"2:41709:231","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:2551:262","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2261-0:3256:2158":{"id":"b:2:2261-0:3256:2158","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2255:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRange","id":"0:3256:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2263:2522"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1903:1661":{"id":"0:1903:1661","crate_id":0,"name":"unwrap","span":{"filename":"src/offset/mod.rs","begin":[195,4],"end":[203,5]},"visibility":"public","docs":"Returns the single unique conversion result, or panics accordingly.","links":{},"attrs":["#[must_use]","#[track_caller]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8606:8818-0:3256:2158":{"id":"a:2:8606:8818-0:3256:2158","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8606:8818","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRange","id":"0:3256:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2544":{"id":"0:2544","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[374,23],"end":[374,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2325:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:2536:2132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2545:660"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:975:4984":{"id":"0:975:4984","crate_id":0,"name":"first_day","span":{"filename":"src/naive/date.rs","begin":[64,4],"end":[72,5]},"visibility":"public","docs":"Returns a date representing the first day of the week.\n\n# Panics\n\nPanics if the first day of the week happens to fall just out of range of `NaiveDate`\n(more than ca. 262,000 years away from common era).\n\n# Examples\n\n```\nuse chrono::{NaiveDate, Weekday};\n\nlet date = NaiveDate::from_ymd_opt(2022, 4, 18).unwrap();\nlet week = date.week(Weekday::Mon);\nassert!(week.first_day() <= date);\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3412-0:2628:4959":{"id":"b:2:3412-0:2628:4959","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3410:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateDaysIterator","id":"0:2628:4959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3414:1603"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:3154:454":{"id":"0:3154:454","crate_id":0,"name":"clone","span":{"filename":"src/weekday.rs","begin":[32,30],"end":[32,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Weekday","id":"0:3124:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8607:8817-0:2724:2136":{"id":"a:2:8607:8817-0:2724:2136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8607:8817","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IsoWeek","id":"0:2724:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2582-0:2321:3242":{"id":"b:2:2582-0:2321:3242","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalNumeric","id":"0:2321:3242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2585:133","2:2586:1588"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1099:1016":{"id":"0:1099:1016","crate_id":0,"name":"next","span":{"filename":"src/naive/date.rs","begin":[2061,4],"end":[2065,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:7627:173","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2567-0:2389:3299":{"id":"b:2:2567-0:2389:3299","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalFixed","id":"0:2389:3299","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2570:3122"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8606:8818-0:2761:2117":{"id":"a:2:8606:8818-0:2761:2117","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8606:8818","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2114":{"id":"0:2114","crate_id":0,"name":null,"span":{"filename":"src/duration.rs","begin":[443,29],"end":[443,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2786:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRangeError","id":"0:2106:2104","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3077:3872":{"id":"0:3077:3872","crate_id":0,"name":"Single","span":{"filename":"src/offset/mod.rs","begin":[47,4],"end":[47,13]},"visibility":"default","docs":"Given local time representation has a single unique result.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:3079:1725"]},"discriminant":null}}},"0:488:1525":{"id":"0:488:1525","crate_id":0,"name":"sub","span":{"filename":"src/datetime/mod.rs","begin":[1309,4],"end":[1311,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"OldDuration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1993:8045":{"id":"0:1993:8045","crate_id":0,"name":"number_from_sunday","span":{"filename":"src/weekday.rs","begin":[108,4],"end":[110,5]},"visibility":"public","docs":"Returns a day-of-week number starting from Sunday = 1.\n\n`w`:                      | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun`\n------------------------- | ----- | ----- | ----- | ----- | ----- | ----- | -----\n`w.number_from_sunday()`: | 2     | 3     | 4     | 5     | 6     | 7     | 1","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:247:203":{"id":"0:247:203","crate_id":0,"name":"Output","span":{"filename":"src/date.rs","begin":[535,4],"end":[535,30]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"b:2:2582-0:2472:3319":{"id":"b:2:2582-0:2472:3319","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Colons","id":"0:2472:3319","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2585:133","2:2586:1588"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2776:242-0:2445:3316":{"id":"a:2:2776:242-0:2445:3316","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2776:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetPrecision","id":"0:2445:3316","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:5:682-0:2170:2717":{"id":"b:5:682-0:2170:2717","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parsed","id":"0:2170:2717","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:684:9349","5:685:9350","5:686:9351"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2192":{"id":"0:2192","crate_id":0,"name":null,"span":{"filename":"src/format/parsed.rs","begin":[21,9],"end":[21,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(clippy :: manual_non_exhaustive)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parsed","id":"0:2170:2717","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2193:454"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3183:3426":{"id":"0:3183:3426","crate_id":0,"name":"May","span":{"filename":"src/month.rs","begin":[45,4],"end":[45,11]},"visibility":"default","docs":"May","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":{"expr":"4","value":"4"}}}},"a:2:2833:8772-0:2120:2106":{"id":"a:2:2833:8772-0:2120:2106","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Tz"},"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2833:8772","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2833:8772","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3412-0:3170:2114":{"id":"b:2:3412-0:3170:2114","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3410:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Month","id":"0:3170:2114","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3414:1603"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3412-0:2127:2112":{"id":"b:2:3412-0:2127:2112","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3410:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SecondsFormat","id":"0:2127:2112","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3414:1603"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2495:3348":{"id":"0:2495:3348","crate_id":0,"name":"Literal","span":{"filename":"src/format/mod.rs","begin":[333,4],"end":[333,20]},"visibility":"default","docs":"A literally printed and parsed text.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:2497:1725"]},"discriminant":null}}},"2:12440:3971":{"id":"2:12440:3971","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:12067:450","self::pattern":"2:12106:8527"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12111:8541","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:44:2384":{"id":"0:44:2384","crate_id":0,"name":"num_nanoseconds","span":{"filename":"src/duration.rs","begin":[212,4],"end":[216,5]},"visibility":"public","docs":"Returns the total number of whole nanoseconds in the duration,\nor `None` on overflow (exceeding 2^63 nanoseconds in either direction).","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"primitive":"i64"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2571-0:3124:2116":{"id":"b:2:2571-0:3124:2116","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Weekday","id":"0:3124:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2573:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2776:242-0:2161:2526":{"id":"a:2:2776:242-0:2161:2526","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2776:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2776:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DelayedFormat","id":"0:2161:2526","args":{"angle_bracketed":{"args":[{"type":{"generic":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2146":{"id":"0:2146","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[51,29],"end":[51,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(clippy :: manual_non_exhaustive)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2330:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SecondsFormat","id":"0:2127:2112","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2833:8772-0:2426:3314":{"id":"a:2:2833:8772-0:2426:3314","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2833:8772","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetFormat","id":"0:2426:3314","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2558:3376":{"id":"0:2558:3376","crate_id":0,"name":"NotEnough","span":{"filename":"src/format/mod.rs","begin":[402,4],"end":[402,13]},"visibility":"default","docs":"Given set of fields is not enough to make a requested date and time value.\n\nNote that there *may* be a case that given fields constrain the possible values so much\nthat there is a unique possible value. Chrono only tries to be correct for\nmost useful sets of fields however, as such constraint solving can be expensive.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:1559:301":{"id":"0:1559:301","crate_id":0,"name":"add","span":{"filename":"src/offset/fixed.rs","begin":[205,4],"end":[207,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:235":{"id":"0:235","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[511,0],"end":[516,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AddAssign","id":"2:2876:2523","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:237:302"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2793:252-0:3073:2138":{"id":"a:2:2793:252-0:3073:2138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2793:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2793:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LocalResult","id":"0:3073:2138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:377:2998":{"id":"0:377:2998","crate_id":0,"name":"parse_from_str","span":{"filename":"src/datetime/mod.rs","begin":[812,4],"end":[816,5]},"visibility":"public","docs":"Parses a string from a user-specified format into a `DateTime<FixedOffset>` value.\n\nNote that this method *requires a timezone* in the input string. See\n[`NaiveDateTime::parse_from_str`](./naive/struct.NaiveDateTime.html#method.parse_from_str)\nfor a version that does not require a timezone in the to-be-parsed str. The returned\n[`DateTime`] value will have a [`FixedOffset`] reflecting the parsed timezone.\n\nSee the [`format::strftime` module](./format/strftime/index.html) for supported format\nsequences.\n\n# Example\n\n```rust\nuse chrono::{DateTime, FixedOffset, TimeZone, NaiveDate};\n\nlet dt = DateTime::parse_from_str(\n    \"1983 Apr 13 12:09:14.274 +0000\", \"%Y %b %d %H:%M:%S%.3f %z\");\nassert_eq!(dt, Ok(FixedOffset::east_opt(0).unwrap().from_local_datetime(&NaiveDate::from_ymd_opt(1983, 4, 13).unwrap().and_hms_milli_opt(12, 9, 14, 274).unwrap()).unwrap()));\n```","links":{"`DateTime`":"0:2154:2111","`FixedOffset`":"0:2761:2117"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["fmt",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:906:2133","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12493:39467":{"id":"2:12493:39467","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2043:2113":{"id":"0:2043:2113","crate_id":0,"name":"Datelike","span":{"filename":"src/traits.rs","begin":[31,0],"end":[264,1]},"visibility":"public","docs":"The common set of methods for date component.\n\nMethods such as [`year`], [`month`], [`day`] and [`weekday`] can be used to get basic\ninformation about the date.\n\nThe `with_*` methods can change the date.\n\n# Warning\n\nThe `with_*` methods can be convenient to change a single component of a date, but they must be\nused with some care. Examples to watch out for:\n\n- [`with_year`] changes the year component of a year-month-day value. Don't use this method if\n  you want the ordinal to stay the same after changing the year, of if you want the week and\n  weekday values to stay the same.\n- Don't combine two `with_*` methods to change two components of the date. For example to\n  change both the year and month components of a date. This could fail because an intermediate\n  value does not exist, while the final date would be valid.\n\nFor more complex changes to a date, it is best to use the methods on [`NaiveDate`] to create a\nnew value instead of altering an existing date.\n\n[`year`]: Datelike::year\n[`month`]: Datelike::month\n[`day`]: Datelike::day\n[`weekday`]: Datelike::weekday\n[`with_year`]: Datelike::with_year\n[`NaiveDate`]: crate::NaiveDate","links":{"Datelike::weekday":"0:2052:2142","Datelike::month":"0:2046:2144","Datelike::with_year":"0:2054:2677","Datelike::year":"0:2044:2670","crate::NaiveDate":"0:2610:2119","Datelike::day":"0:2048:2672"},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"items":["0:2044:2670","0:2045:8222","0:2046:2144","0:2047:2671","0:2048:2672","0:2049:2673","0:2050:2674","0:2051:2675","0:2052:2142","0:2053:2676","0:2054:2677","0:2055:2678","0:2056:2679","0:2057:2680","0:2058:2681","0:2059:2682","0:2060:2683","0:2061:5680"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:186","0:1203","0:1044","0:389"]}}},"0:45:2381":{"id":"0:45:2381","crate_id":0,"name":"checked_add","span":{"filename":"src/duration.rs","begin":[220,4],"end":[235,5]},"visibility":"public","docs":"Add two durations, returning `None` if overflow occurred.","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:251:718":{"id":"0:251:718","crate_id":0,"name":"fmt","span":{"filename":"src/date.rs","begin":[544,4],"end":[547,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9506:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9487:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:108-0:1904:2122":{"id":"0:108-0:1904:2122","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[508,20],"end":[508,26]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"inner":{"import":{"source":"crate::Offset","name":"Offset","id":"0:1904:2122","glob":false}}},"0:2343:3261":{"id":"0:2343:3261","crate_id":0,"name":"LowerAmPm","span":{"filename":"src/format/mod.rs","begin":[197,4],"end":[197,13]},"visibility":"default","docs":"AM/PM.\n\nPrints in lower case, reads in any case.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"a:2:2833:8772-0:2127:2112":{"id":"a:2:2833:8772-0:2127:2112","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2833:8772","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SecondsFormat","id":"0:2127:2112","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2198":{"id":"0:2198","crate_id":0,"name":null,"span":{"filename":"src/format/parsed.rs","begin":[21,27],"end":[21,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(clippy :: manual_non_exhaustive)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2330:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parsed","id":"0:2170:2717","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1187:2857":{"id":"0:1187:2857","crate_id":0,"name":"checked_sub_months","span":{"filename":"src/naive/datetime/mod.rs","begin":[806,4],"end":[808,5]},"visibility":"public","docs":"Subtracts given `Months` from the current date and time.\n\nUses the last day of the month if the day does not exist in the resulting month.\n\n# Errors\n\nReturns `None` if the resulting date would be out of range.\n\n# Example\n\n```\nuse chrono::{Months, NaiveDate};\n\nassert_eq!(\n    NaiveDate::from_ymd_opt(2014, 1, 1).unwrap().and_hms_opt(1, 0, 0).unwrap()\n        .checked_sub_months(Months::new(1)),\n    Some(NaiveDate::from_ymd_opt(2013, 12, 1).unwrap().and_hms_opt(1, 0, 0).unwrap())\n);\n\nassert_eq!(\n    NaiveDate::from_ymd_opt(2014, 1, 1).unwrap().and_hms_opt(1, 0, 0).unwrap()\n        .checked_sub_months(Months::new(core::i32::MAX as u32 + 1)),\n    None\n);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"Months","id":"0:3225:2145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3412-0:2742:2121":{"id":"b:2:3412-0:2742:2121","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3410:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3414:1603"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2567-0:2426:3314":{"id":"b:2:2567-0:2426:3314","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetFormat","id":"0:2426:3314","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2570:3122"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:920:132":{"id":"0:920:132","crate_id":0,"name":"Err","span":{"filename":"src/format/mod.rs","begin":[484,4],"end":[484,33]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"ParseWeekdayError","id":"0:3160:2143","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:3251":{"id":"0:3251","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[233,16],"end":[233,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2325:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseMonthError","id":"0:3246:2146","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3252:660"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12416:341":{"id":"2:12416:341","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12084:1612"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1991:2619":{"id":"0:1991:2619","crate_id":0,"name":"pred","span":{"filename":"src/weekday.rs","begin":[80,4],"end":[90,5]},"visibility":"public","docs":"The previous day in the week.\n\n`w`:        | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun`\n----------- | ----- | ----- | ----- | ----- | ----- | ----- | -----\n`w.pred()`: | `Sun` | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat`","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Weekday","id":"0:3124:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2264-0:3160:2143":{"id":"b:2:2264-0:3160:2143","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2258:101","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseWeekdayError","id":"0:3160:2143","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2266:7207"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2619:781":{"id":"0:2619:781","crate_id":0,"name":"hash","span":{"filename":"src/naive/date.rs","begin":[193,24],"end":[193,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9755:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2571-0:3170:2114":{"id":"b:2:2571-0:3170:2114","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Month","id":"0:3170:2114","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2573:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:682-0:3124:2116":{"id":"b:5:682-0:3124:2116","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Weekday","id":"0:3124:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:684:9349","5:685:9350","5:686:9351"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2084:671":{"id":"0:2084:671","crate_id":0,"name":"expect","span":{"filename":"src/lib.rs","begin":[612,0],"end":[619,1]},"visibility":"public","docs":"Workaround because `.expect()` is not (yet) available in const context.","links":{},"attrs":["#[macro_export]"],"deprecation":null,"inner":{"macro":"macro_rules! expect {\n    ($e:expr, $m:literal) => { ... };\n}"}},"0:170:2567":{"id":"0:170:2567","crate_id":0,"name":"naive_local","span":{"filename":"src/date.rs","begin":[307,4],"end":[309,5]},"visibility":"public","docs":"Returns a view to the naive local date.\n\nThis is technically the same as [`naive_utc`](#method.naive_utc)\nbecause the offset is restricted to never exceed one day,\nbut provided for the consistency.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:473:203":{"id":"0:473:203","crate_id":0,"name":"Output","span":{"filename":"src/datetime/mod.rs","begin":[1268,4],"end":[1268,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}}},"0:1955:7897":{"id":"0:1955:7897","crate_id":0,"name":"trunc_subsecs","span":{"filename":"src/round.rs","begin":[44,4],"end":[44,48]},"visibility":"default","docs":"Return a copy truncated to the specified number of subsecond\ndigits. With 9 or more digits, self is returned unmodified.\n\n# Example\n``` rust\n# use chrono::{SubsecRound, Timelike, Utc, NaiveDate};\nlet dt = NaiveDate::from_ymd_opt(2018, 1, 11).unwrap().and_hms_milli_opt(12, 0, 0, 154).unwrap().and_local_timezone(Utc).unwrap();\nassert_eq!(dt.trunc_subsecs(2).nanosecond(), 150_000_000);\nassert_eq!(dt.trunc_subsecs(1).nanosecond(), 100_000_000);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["digits",{"primitive":"u16"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"a:2:2833:8772-0:2106:2104":{"id":"a:2:2833:8772-0:2106:2104","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2833:8772","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRangeError","id":"0:2106:2104","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2303:3237":{"id":"0:2303:3237","crate_id":0,"name":"Timestamp","span":{"filename":"src/format/mod.rs","begin":[151,4],"end":[151,13]},"visibility":"default","docs":"The number of non-leap seconds since the midnight UTC on January 1, 1970 (FW=1, PW=∞).\nFor formatting, it assumes UTC upon the absence of time zone offset.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:2391":{"id":"0:2391","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[260,9],"end":[260,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9531:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalFixed","id":"0:2389:3299","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2392:718"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2393":{"id":"0:2393","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[260,16],"end":[260,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalFixed","id":"0:2389:3299","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2394:454"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:905:860":{"id":"0:905:860","crate_id":0,"name":"kind","span":{"filename":"src/format/mod.rs","begin":[379,4],"end":[381,5]},"visibility":"public","docs":"The category of parse error","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ParseErrorKind","id":"0:2553:3365","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2174:3729":{"id":"0:2174:3729","crate_id":0,"name":"isoyear","span":{"filename":"src/format/parsed.rs","begin":[43,4],"end":[43,28]},"visibility":"public","docs":"Year in the [ISO week date](../naive/struct.NaiveDate.html#week-date).\n\nThis can be negative unlike [`isoyear_div_100`](#structfield.isoyear_div_100) and\n[`isoyear_mod_100`](#structfield.isoyear_mod_100) fields.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"primitive":"i32"}}],"bindings":[]}}}}}},"a:2:8606:8818-0:3106:2141":{"id":"a:2:8606:8818-0:3106:2141","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8606:8818","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RoundingError","id":"0:3106:2141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2573:454":{"id":"0:2573:454","crate_id":0,"name":"clone","span":{"filename":"src/format/mod.rs","begin":[386,16],"end":[386,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ParseErrorKind","id":"0:2553:3365","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2321:3242":{"id":"0:2321:3242","crate_id":0,"name":"InternalNumeric","span":{"filename":"src/format/mod.rs","begin":[162,0],"end":[164,1]},"visibility":"public","docs":"An opaque type representing numeric item types for internal uses only.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:2793:252-0:2321:3242","a:2:2776:242-0:2321:3242","a:2:8606:8818-0:2321:3242","a:2:2833:8772-0:2321:3242","a:2:8607:8817-0:2321:3242","b:2:2571-0:2321:3242","b:2:2577-0:2321:3242","b:2:2582-0:2321:3242","b:2:2261-0:2321:3242","b:2:3412-0:2321:3242","b:2:2264-0:2321:3242","b:2:2567-0:2321:3242","b:5:682-0:2321:3242","0:2323","0:2326","0:2328","0:2332","0:2331","0:2325","0:897"]}}},"0:248:1525":{"id":"0:248:1525","crate_id":0,"name":"sub","span":{"filename":"src/date.rs","begin":[538,4],"end":[540,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"OldDuration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2567-0:2648:4960":{"id":"b:2:2567-0:2648:4960","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateWeeksIterator","id":"0:2648:4960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2570:3122"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1940-0:3059:2118":{"id":"0:1940-0:3059:2118","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[539,61],"end":[539,64]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"inner":{"import":{"source":"offset::Utc","name":"Utc","id":"0:3059:2118","glob":false}}},"0:2562:3380":{"id":"0:2562:3380","crate_id":0,"name":"TooShort","span":{"filename":"src/format/mod.rs","begin":[408,4],"end":[408,12]},"visibility":"default","docs":"The input string has been prematurely ended.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:5:682-0:3160:2143":{"id":"b:5:682-0:3160:2143","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseWeekdayError","id":"0:3160:2143","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:684:9349","5:685:9350","5:686:9351"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2636:781":{"id":"0:2636:781","crate_id":0,"name":"hash","span":{"filename":"src/naive/date.rs","begin":[2017,29],"end":[2017,33]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9755:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2582-0:2106:2104":{"id":"b:2:2582-0:2106:2104","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRangeError","id":"0:2106:2104","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2585:133","2:2586:1588"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:0:1956-0:2154:2111":{"id":"b:0:1956-0:2154:2111","crate_id":0,"name":null,"span":{"filename":"src/round.rs","begin":[47,0],"end":[75,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Add","id":"2:2845:2284","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sub","id":"2:2850:2288","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Timelike","id":"0:2062:2115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"SubsecRound","id":"0:1953:2110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:1958:7892","0:1959:7897"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2178:3456":{"id":"0:2178:3456","crate_id":0,"name":"week_from_sun","span":{"filename":"src/format/parsed.rs","begin":[62,4],"end":[62,34]},"visibility":"public","docs":"Week number, where the week 1 starts at the first Sunday of January\n(0--53, 1--53 or 1--52 depending on the year).","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"bindings":[]}}}}}},"0:2023:1588":{"id":"0:2023:1588","crate_id":0,"name":"try_from","span":{"filename":"src/month.rs","begin":[164,4],"end":[180,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"primitive":"u8"}]],"output":{"resolved_path":{"name":"Result","id":"2:41709:231","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:2551:262","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1900:2606":{"id":"0:1900:2606","crate_id":0,"name":"and_hms_nano_opt","span":{"filename":"src/offset/mod.rs","begin":[175,4],"end":[188,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date, hour, minute, second and nanosecond.\nThe nanosecond part can exceed 1,000,000,000 in order to represent the leap second.\nThe offset in the current date is preserved.\n\nPropagates any error. Ambiguous result would be discarded.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["hour",{"primitive":"u32"}],["min",{"primitive":"u32"}],["sec",{"primitive":"u32"}],["nano",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"LocalResult","id":"0:3073:2138","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2072:5929":{"id":"0:2072:5929","crate_id":0,"name":"num_seconds_from_midnight","span":{"filename":"src/traits.rs","begin":[325,4],"end":[327,5]},"visibility":"default","docs":"Returns the number of non-leap seconds past the last midnight.\n\nEvery value in 00:00:00-23:59:59 maps to an integer in 0-86399.\n\nThis method is not intended to provide the real number of seconds since midnight on a given\nday. It does not take things like DST transitions into account.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1435:5929":{"id":"0:1435:5929","crate_id":0,"name":"num_seconds_from_midnight","span":{"filename":"src/naive/time/mod.rs","begin":[1064,4],"end":[1066,5]},"visibility":"default","docs":"Returns the number of non-leap seconds past the last midnight.\n\n# Example\n\n```\nuse chrono::{NaiveTime, Timelike};\n\nassert_eq!(NaiveTime::from_hms_opt(1, 2, 3).unwrap().num_seconds_from_midnight(),\n           3723);\nassert_eq!(NaiveTime::from_hms_nano_opt(23, 56, 4, 12_345_678).unwrap().num_seconds_from_midnight(),\n           86164);\nassert_eq!(NaiveTime::from_hms_milli_opt(23, 59, 59, 1_000).unwrap().num_seconds_from_midnight(),\n           86399);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2773":{"id":"0:2773","crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[25,36],"end":[25,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2774:454"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3107:7925":{"id":"0:3107:7925","crate_id":0,"name":"DurationExceedsTimestamp","span":{"filename":"src/round.rs","begin":[251,4],"end":[251,28]},"visibility":"default","docs":"Error when the Duration exceeds the Duration from or until the Unix epoch.\n\n``` rust\n# use chrono::{DurationRound, Duration, RoundingError, TimeZone, Utc};\nlet dt = Utc.with_ymd_and_hms(1970, 12, 12, 0, 0, 0).unwrap();\n\nassert_eq!(\n    dt.duration_round(Duration::days(365)),\n    Err(RoundingError::DurationExceedsTimestamp),\n);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:1876:7061":{"id":"0:1876:7061","crate_id":0,"name":"offset_from_local_datetime","span":{"filename":"src/offset/utc.rs","begin":[121,4],"end":[123,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["_local",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"LocalResult","id":"0:3073:2138","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Utc","id":"0:3059:2118","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2173:3725":{"id":"0:2173:3725","crate_id":0,"name":"year_mod_100","span":{"filename":"src/format/parsed.rs","begin":[37,4],"end":[37,33]},"visibility":"public","docs":"Year modulo 100. Implies that the year is >= 1 BCE when set.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"primitive":"i32"}}],"bindings":[]}}}}}},"a:2:2776:242-0:2761:2117":{"id":"a:2:2776:242-0:2761:2117","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2776:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2776:242-0:2493:168":{"id":"a:2:2776:242-0:2493:168","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2776:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Item","id":"0:2493:168","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2261-0:2536:2132":{"id":"b:2:2261-0:2536:2132","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2255:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:2536:2132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2263:2522"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2776:242-0:2085:127":{"id":"a:2:2776:242-0:2085:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2776:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2500:1725":{"id":"0:2500:1725","crate_id":0,"name":"0","span":{"filename":"src/format/mod.rs","begin":[337,17],"end":[337,25]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Box","id":"5:276:3166","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}},"a:2:8607:8817-0:3246:2146":{"id":"a:2:8607:8817-0:3246:2146","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8607:8817","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseMonthError","id":"0:3246:2146","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12432:37951":{"id":"2:12432:37951","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:12433:37956"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:43800:8554","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:406:2680":{"id":"0:406:2680","crate_id":0,"name":"with_day","span":{"filename":"src/datetime/mod.rs","begin":[1031,4],"end":[1033,5]},"visibility":"default","docs":"Makes a new `DateTime` with the month number (starting from 0) changed.\n\nSee also the [`NaiveDate::with_day`] method.\n\n# Errors\n\nReturns `None` if:\n- The resulting date does not exist.\n- The value for `day` is invalid.\n- The local time at the resulting date does not exist or is ambiguous, for example during a\n  daylight saving time transition.","links":{"`NaiveDate::with_day`":"0:1057:2680"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["day",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:501":{"id":"0:501","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1339,0],"end":[1344,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9531:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:503:718"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2399":{"id":"0:2399","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[260,34],"end":[260,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2330:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalFixed","id":"0:2389:3299","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2264-0:2742:2121":{"id":"b:2:2264-0:2742:2121","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2258:101","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2266:7207"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8606:8818-0:2610:2119":{"id":"a:2:8606:8818-0:2610:2119","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8606:8818","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2653":{"id":"0:2653","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[2053,22],"end":[2053,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateWeeksIterator","id":"0:2648:4960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2654:454"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2751":{"id":"0:2751","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[205,24],"end":[205,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9747:148","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2752:781"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8607:8817-0:3160:2143":{"id":"a:2:8607:8817-0:3160:2143","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8607:8817","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseWeekdayError","id":"0:3160:2143","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:3233":{"id":"0:3233","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[221,29],"end":[221,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2787:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Months","id":"0:3225:2145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:670:3780":{"id":"0:670:3780","crate_id":0,"name":"set_week_from_sun","span":{"filename":"src/format/parsed.rs","begin":[194,4],"end":[196,5]},"visibility":"public","docs":"Tries to set the [`week_from_sun`](#structfield.week_from_sun) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:906:2133","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2727":{"id":"0:2727","crate_id":0,"name":null,"span":{"filename":"src/naive/isoweek.rs","begin":[19,9],"end":[19,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2325:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IsoWeek","id":"0:2724:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2728:660"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1243":{"id":"0:1243","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1562,0],"end":[1571,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Add","id":"2:2845:2284","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"2:44300:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1244:203","0:1245:301"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1236:3055":{"id":"0:1236:3055","crate_id":0,"name":"with_second","span":{"filename":"src/naive/datetime/mod.rs","begin":[1467,4],"end":[1469,5]},"visibility":"default","docs":"Makes a new `NaiveDateTime` with the second number changed.\n\nAs with the [`second`](#method.second) method,\nthe input range is restricted to 0 through 59.\n\nSee also the [`NaiveTime::with_second`] method.\n\n# Errors\n\nReturns `None` if the value for `second` is invalid.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Timelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().and_hms_milli_opt(12, 34, 56, 789).unwrap();\nassert_eq!(dt.with_second(17),\n           Some(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().and_hms_milli_opt(12, 34, 17, 789).unwrap()));\nassert_eq!(dt.with_second(60), None);\n```","links":{"`NaiveTime::with_second`":"0:1433:3055"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["sec",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2264-0:3225:2145":{"id":"b:2:2264-0:3225:2145","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2258:101","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Months","id":"0:3225:2145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2266:7207"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1438:301":{"id":"0:1438:301","crate_id":0,"name":"add","span":{"filename":"src/naive/time/mod.rs","begin":[1123,4],"end":[1125,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"OldDuration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3412-0:2472:3319":{"id":"b:2:3412-0:2472:3319","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3410:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Colons","id":"0:2472:3319","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3414:1603"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:141:2561":{"id":"0:141:2561","crate_id":0,"name":"from_utc","span":{"filename":"src/date.rs","begin":[79,4],"end":[81,5]},"visibility":"public","docs":"Makes a new `Date` with given *UTC* date and offset.\nThe local date should be constructed via the `TimeZone` trait.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["date",{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["offset",{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Tz"},"trait":{"name":"","id":"0:1906:2123","args":null}}}]],"output":{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1481-0:980:2126":{"id":"0:1481-0:980:2126","crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[15,31],"end":[15,39]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"import":{"source":"self::date::MIN_DATE","name":"MIN_DATE","id":"0:980:2126","glob":false}}},"0:3080:3873":{"id":"0:3080:3873","crate_id":0,"name":"Ambiguous","span":{"filename":"src/offset/mod.rs","begin":[50,4],"end":[50,35]},"visibility":"default","docs":"Given local time representation has multiple results and thus ambiguous.\nThis can occur when, for example, the negative timezone transition.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:3082:1725","0:3083:1726"]},"discriminant":null}}},"0:2671":{"id":"0:2671","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[75,9],"end":[75,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2786:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3115":{"id":"0:3115","crate_id":0,"name":null,"span":{"filename":"src/round.rs","begin":[238,16],"end":[238,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RoundingError","id":"0:3106:2141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3116:454"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3113":{"id":"0:3113","crate_id":0,"name":null,"span":{"filename":"src/round.rs","begin":[238,9],"end":[238,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9531:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RoundingError","id":"0:3106:2141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3114:718"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:994:5160":{"id":"0:994:5160","crate_id":0,"name":"from_weekday_of_month","span":{"filename":"src/naive/date.rs","begin":[495,4],"end":[502,5]},"visibility":"public","docs":"Makes a new `NaiveDate` by counting the number of occurrences of a particular day-of-week\nsince the beginning of the given month. For instance, if you want the 2nd Friday of March\n2017, you would use `NaiveDate::from_weekday_of_month(2017, 3, Weekday::Fri, 2)`.\n\n`n` is 1-indexed.\n\n# Panics\n\nPanics if the specified day does not exist in that month, on invalid values for `month` or\n`n`, or if `year` is out of range for `NaiveDate`.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note =\n\"use `from_weekday_of_month_opt()` instead\")]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"use `from_weekday_of_month_opt()` instead"},"inner":{"function":{"decl":{"inputs":[["year",{"primitive":"i32"}],["month",{"primitive":"u32"}],["weekday",{"resolved_path":{"name":"Weekday","id":"0:3124:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["n",{"primitive":"u8"}]],"output":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:681:3793":{"id":"0:681:3793","crate_id":0,"name":"set_ampm","span":{"filename":"src/format/parsed.rs","begin":[231,4],"end":[233,5]},"visibility":"public","docs":"Tries to set the [`hour_div_12`](#structfield.hour_div_12) field from given value.\n(`false` for AM, `true` for PM)","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"bool"}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:906:2133","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1111:132":{"id":"0:1111:132","crate_id":0,"name":"Err","span":{"filename":"src/naive/date.rs","begin":[2173,4],"end":[2173,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"ParseError","id":"0:2536:2132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:1263":{"id":"0:1263","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1738,0],"end":[1744,1]},"visibility":"default","docs":"A subtraction of Months from `NaiveDateTime` clamped to valid days in resulting month.\n\n# Panics\n\nPanics if the resulting date would be out of range.\n\n# Example\n\n```\nuse chrono::{Months, NaiveDate};\n\nassert_eq!(\n    NaiveDate::from_ymd_opt(2014, 01, 01).unwrap().and_hms_opt(01, 00, 00).unwrap() - Months::new(11),\n    NaiveDate::from_ymd_opt(2013, 02, 01).unwrap().and_hms_opt(01, 00, 00).unwrap()\n);\nassert_eq!(\n    NaiveDate::from_ymd_opt(2014, 01, 01).unwrap().and_hms_opt(00, 02, 00).unwrap() - Months::new(12),\n    NaiveDate::from_ymd_opt(2013, 01, 01).unwrap().and_hms_opt(00, 02, 00).unwrap()\n);\nassert_eq!(\n    NaiveDate::from_ymd_opt(2014, 01, 01).unwrap().and_hms_opt(00, 00, 03).unwrap() - Months::new(13),\n    NaiveDate::from_ymd_opt(2012, 12, 01).unwrap().and_hms_opt(00, 00, 03).unwrap()\n);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:2850:2288","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Months","id":"0:3225:2145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1264:203","0:1265:1525"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2088":{"id":"0:2088","crate_id":0,"name":null,"span":{"filename":"src/duration.rs","begin":[53,9],"end":[53,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2089:454"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:504":{"id":"0:504","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1346,0],"end":[1355,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Tz"},"trait":{"name":"","id":"0:1906:2123","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Display","id":"2:9536:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9536:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:506:718"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2103":{"id":"0:2103","crate_id":0,"name":null,"span":{"filename":"src/duration.rs","begin":[53,61],"end":[53,65]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9747:148","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2104:781"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2793:252-0:2628:4959":{"id":"a:2:2793:252-0:2628:4959","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2793:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateDaysIterator","id":"0:2628:4959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:5:682-0:3246:2146":{"id":"b:5:682-0:3246:2146","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseMonthError","id":"0:3246:2146","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:684:9349","5:685:9350","5:686:9351"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2448:3331":{"id":"0:2448:3331","crate_id":0,"name":"Minutes","span":{"filename":"src/format/mod.rs","begin":[306,4],"end":[306,11]},"visibility":"default","docs":"Format offset from UTC as hours and minutes.\nAny seconds will be rounded to the nearest minute.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:2623":{"id":"0:2623","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[193,42],"end":[193,45]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["min","max","clamp"],"trait":{"name":"Ord","id":"2:2361:199","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2624:461"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3147":{"id":"0:3147","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[32,9],"end":[32,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2325:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Weekday","id":"0:3124:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3148:660"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2034:718":{"id":"0:2034:718","crate_id":0,"name":"fmt","span":{"filename":"src/month.rs","begin":[249,4],"end":[251,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9506:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9487:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3265":{"id":"0:3265","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[573,28],"end":[573,37]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2325:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRange","id":"0:3256:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3266:660"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5534:40135":{"id":"5:5534:40135","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7489:248"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7489:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2092":{"id":"0:2092","crate_id":0,"name":null,"span":{"filename":"src/duration.rs","begin":[53,22],"end":[53,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2325:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2093:660"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2090":{"id":"0:2090","crate_id":0,"name":null,"span":{"filename":"src/duration.rs","begin":[53,16],"end":[53,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2788:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2759":{"id":"0:2759","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[205,53],"end":[205,58]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2760:454"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2571-0:2106:2104":{"id":"b:2:2571-0:2106:2104","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OutOfRangeError","id":"0:2106:2104","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2573:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:315:2772":{"id":"0:315:2772","crate_id":0,"name":"from_local","span":{"filename":"src/datetime/mod.rs","begin":[152,4],"end":[156,5]},"visibility":"public","docs":"Makes a new `DateTime` from a `NaiveDateTime` in *local* time and an `Offset`.\n\n# Panics\n\nPanics if the local datetime can't be converted to UTC because it would be out of range.\n\nThis can happen if `datetime` is near the end of the representable range of `NaiveDateTime`,\nand the offset from UTC pushes it beyond that.","links":{},"attrs":["#[inline]","#[must_use]","#[deprecated(since = \"0.4.27\", note =\n\"Use TimeZone::from_local_datetime() or NaiveDateTime::and_local_timezone instead\")]"],"deprecation":{"since":"0.4.27","note":"Use TimeZone::from_local_datetime() or NaiveDateTime::and_local_timezone instead"},"inner":{"function":{"decl":{"inputs":[["datetime",{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["offset",{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Tz"},"trait":{"name":"","id":"0:1906:2123","args":null}}}]],"output":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2659":{"id":"0:2659","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[2053,35],"end":[2053,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2325:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateWeeksIterator","id":"0:2648:4960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2660:660"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2273:3206":{"id":"0:2273:3206","crate_id":0,"name":"IsoYearDiv100","span":{"filename":"src/format/mod.rs","begin":[118,4],"end":[118,17]},"visibility":"default","docs":"Year in the ISO week date, divided by 100 (FW=PW=2). Implies the non-negative year.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:1092:5549":{"id":"0:1092:5549","crate_id":0,"name":"size_hint","span":{"filename":"src/naive/date.rs","begin":[2033,4],"end":[2036,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:682-0:2085:127":{"id":"b:5:682-0:2085:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:684:9349","5:685:9350","5:686:9351"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1109:718":{"id":"0:1109:718","crate_id":0,"name":"fmt","span":{"filename":"src/naive/date.rs","begin":[2151,4],"end":[2153,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9506:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9487:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3189:3428":{"id":"0:3189:3428","crate_id":0,"name":"July","span":{"filename":"src/month.rs","begin":[49,4],"end":[49,12]},"visibility":"default","docs":"July","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":{"expr":"6","value":"6"}}}},"0:2028":{"id":"0:2028","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[225,0],"end":[230,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Months","id":"0:3225:2145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2029:1002"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:581:3172":{"id":"0:581:3172","crate_id":0,"name":"format_item","span":{"filename":"src/format/formatting.rs","begin":[181,0],"end":[191,1]},"visibility":"public","docs":"Formats single formatting item","links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\"))]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["w",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9506:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["date",{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"crate::NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"bindings":[]}}}}],["time",{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"crate::NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"bindings":[]}}}}],["off",{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"tuple":[{"resolved_path":{"name":"String","id":"5:7489:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},{"resolved_path":{"name":"crate::FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]}}}}],"bindings":[]}}}}],["item",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"super::Item","id":"0:2493:168","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9487:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:908":{"id":"0:908","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[424,0],"end":[437,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9536:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:2536:2132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:909:718"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1545:7059":{"id":"0:1545:7059","crate_id":0,"name":"offset_from_local_date","span":{"filename":"src/offset/fixed.rs","begin":[133,4],"end":[135,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["_local",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"LocalResult","id":"0:3073:2138","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:219":{"id":"0:219","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[482,0],"end":[482,37]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2330:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2643":{"id":"0:2643","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[2017,58],"end":[2017,60]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2787:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateDaysIterator","id":"0:2628:4959","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1062":{"id":"0:1062","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[1852,0],"end":[1859,1]},"visibility":"default","docs":"An addition of `Duration` to `NaiveDate` discards the fractional days,\nrounding to the closest integral number of days towards `Duration::zero()`.\n\nPanics on underflow or overflow. Use [`NaiveDate::checked_add_signed`] to detect that.\n\n# Example\n\n```\nuse chrono::{Duration, NaiveDate};\n\nlet from_ymd = |y, m, d| NaiveDate::from_ymd_opt(y, m, d).unwrap();\n\nassert_eq!(from_ymd(2014, 1, 1) + Duration::zero(),             from_ymd(2014, 1, 1));\nassert_eq!(from_ymd(2014, 1, 1) + Duration::seconds(86399),     from_ymd(2014, 1, 1));\nassert_eq!(from_ymd(2014, 1, 1) + Duration::seconds(-86399),    from_ymd(2014, 1, 1));\nassert_eq!(from_ymd(2014, 1, 1) + Duration::days(1),            from_ymd(2014, 1, 2));\nassert_eq!(from_ymd(2014, 1, 1) + Duration::days(-1),           from_ymd(2013, 12, 31));\nassert_eq!(from_ymd(2014, 1, 1) + Duration::days(364),          from_ymd(2014, 12, 31));\nassert_eq!(from_ymd(2014, 1, 1) + Duration::days(365*4 + 1),    from_ymd(2018, 1, 1));\nassert_eq!(from_ymd(2014, 1, 1) + Duration::days(365*400 + 97), from_ymd(2414, 1, 1));\n```\n\n[`NaiveDate::checked_add_signed`]: crate::NaiveDate::checked_add_signed","links":{"crate::NaiveDate::checked_add_signed":"0:1024:2633"},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Add","id":"2:2845:2284","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1063:203","0:1064:301"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1244:203":{"id":"0:1244:203","crate_id":0,"name":"Output","span":{"filename":"src/naive/datetime/mod.rs","begin":[1563,4],"end":[1563,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"b:5:5792-0:3160:2143":{"id":"b:5:5792-0:3160:2143","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9536:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5790:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseWeekdayError","id":"0:3160:2143","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5794:1565"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12527:32636":{"id":"2:12527:32636","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8606:8818-0:2536:2132":{"id":"a:2:8606:8818-0:2536:2132","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8606:8818","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:2536:2132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1431:3045":{"id":"0:1431:3045","crate_id":0,"name":"with_hour","span":{"filename":"src/naive/time/mod.rs","begin":[951,4],"end":[957,5]},"visibility":"default","docs":"Makes a new `NaiveTime` with the hour number changed.\n\n# Errors\n\nReturns `None` if the value for `hour` is invalid.\n\n# Example\n\n```\nuse chrono::{NaiveTime, Timelike};\n\nlet dt = NaiveTime::from_hms_nano_opt(23, 56, 4, 12_345_678).unwrap();\nassert_eq!(dt.with_hour(7), Some(NaiveTime::from_hms_nano_opt(7, 56, 4, 12_345_678).unwrap()));\nassert_eq!(dt.with_hour(24), None);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["hour",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:887-0:577:729":{"id":"0:887-0:577:729","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[65,21],"end":[65,27]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\"))]"],"deprecation":null,"inner":{"import":{"source":"formatting::format","name":"format","id":"0:577:729","glob":false}}},"b:2:2582-0:2589:2135":{"id":"b:2:2582-0:2589:2135","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Days","id":"0:2589:2135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2585:133","2:2586:1588"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2793:252-0:2154:2111":{"id":"a:2:2793:252-0:2154:2111","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Tz"},"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2793:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2793:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2793:252-0:3124:2116":{"id":"a:2:2793:252-0:3124:2116","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2793:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Weekday","id":"0:3124:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2543":{"id":"0:2543","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[374,23],"end":[374,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2786:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:2536:2132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1242:301":{"id":"0:1242:301","crate_id":0,"name":"add","span":{"filename":"src/naive/datetime/mod.rs","begin":[1557,4],"end":[1559,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"OldDuration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:342:2648":{"id":"0:342:2648","crate_id":0,"name":"years_since","span":{"filename":"src/datetime/mod.rs","begin":[505,4],"end":[519,5]},"visibility":"public","docs":"Retrieve the elapsed years from now to the given [`DateTime`].\n\n# Errors\n\nReturns `None` if `base < self`.","links":{"`DateTime`":"0:2154:2111"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["base",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2255:660":{"id":"0:2255:660","crate_id":0,"name":"eq","span":{"filename":"src/format/mod.rs","begin":[82,22],"end":[82,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Pad","id":"0:2243:3177","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:919":{"id":"0:919","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[483,0],"end":[493,1]},"visibility":"default","docs":"Parsing a `str` into a `Weekday` uses the format [`%A`](./format/strftime/index.html).\n\n# Example\n\n```\nuse chrono::Weekday;\n\nassert_eq!(\"Sunday\".parse::<Weekday>(), Ok(Weekday::Sun));\nassert!(\"any day\".parse::<Weekday>().is_err());\n```\n\nThe parsing is case-insensitive.\n\n```\n# use chrono::Weekday;\nassert_eq!(\"mON\".parse::<Weekday>(), Ok(Weekday::Mon));\n```\n\nOnly the shortest form (e.g. `sun`) and the longest form (e.g. `sunday`) is accepted.\n\n```\n# use chrono::Weekday;\nassert!(\"thurs\".parse::<Weekday>().is_err());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:12066:3084","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::Weekday","id":"0:3124:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:920:132","0:921:3085"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2745":{"id":"0:2745","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[205,9],"end":[205,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2786:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2577-0:2321:3242":{"id":"b:2:2577-0:2321:3242","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2547:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalNumeric","id":"0:2321:3242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2580:133","2:2581:1590"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:442":{"id":"0:442","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1199,0],"end":[1203,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["min","max","clamp"],"trait":{"name":"Ord","id":"2:2361:199","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:444:461"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2613":{"id":"0:2613","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[193,9],"end":[193,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2325:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2614:660"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:94-0:2127:2112":{"id":"0:94-0:2127:2112","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[500,30],"end":[500,43]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"inner":{"import":{"source":"crate::SecondsFormat","name":"SecondsFormat","id":"0:2127:2112","glob":false}}},"0:2615":{"id":"0:2615","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[193,20],"end":[193,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2787:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:493":{"id":"0:493","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1323,0],"end":[1329,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Add","id":"2:2845:2284","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Days","id":"0:2589:2135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:495:203","0:496:301"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:48:2390":{"id":"0:48:2390","crate_id":0,"name":"min_value","span":{"filename":"src/duration.rs","begin":[268,4],"end":[270,5]},"visibility":"public","docs":"The minimum possible `Duration`: `i64::MIN` milliseconds.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1028:2656":{"id":"0:1028:2656","crate_id":0,"name":"format_with_items","span":{"filename":"src/naive/date.rs","begin":[1271,4],"end":[1277,5]},"visibility":"public","docs":"Formats the date with the specified formatting items.\nOtherwise it is the same as the ordinary `format` method.\n\nThe `Iterator` of items should be `Clone`able,\nsince the resulting `DelayedFormat` value may be formatted multiple times.\n\n# Example\n\n```\nuse chrono::NaiveDate;\nuse chrono::format::strftime::StrftimeItems;\n\nlet fmt = StrftimeItems::new(\"%Y-%m-%d\");\nlet d = NaiveDate::from_ymd_opt(2015, 9, 5).unwrap();\nassert_eq!(d.format_with_items(fmt.clone()).to_string(), \"2015-09-05\");\nassert_eq!(d.format(\"%Y-%m-%d\").to_string(),             \"2015-09-05\");\n```\n\nThe resulting `DelayedFormat` can be formatted directly via the `Display` trait.\n\n```\n# use chrono::NaiveDate;\n# use chrono::format::strftime::StrftimeItems;\n# let fmt = StrftimeItems::new(\"%Y-%m-%d\").clone();\n# let d = NaiveDate::from_ymd_opt(2015, 9, 5).unwrap();\nassert_eq!(format!(\"{}\", d.format_with_items(fmt)), \"2015-09-05\");\n```","links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\"))]","#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["items",{"generic":"I"}]],"output":{"resolved_path":{"name":"DelayedFormat","id":"0:2161:2526","args":{"angle_bracketed":{"args":[{"type":{"generic":"I"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7627:173","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"B"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2255:100","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Item","id":"0:2493:168","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:321:2812":{"id":"0:321:2812","crate_id":0,"name":"timestamp_micros","span":{"filename":"src/datetime/mod.rs","begin":[264,4],"end":[266,5]},"visibility":"public","docs":"Returns the number of non-leap-microseconds since January 1, 1970 UTC.\n\n# Example\n\n```\nuse chrono::{Utc, NaiveDate};\n\nlet dt = NaiveDate::from_ymd_opt(1970, 1, 1).unwrap().and_hms_micro_opt(0, 0, 1, 444).unwrap().and_local_timezone(Utc).unwrap();\nassert_eq!(dt.timestamp_micros(), 1_000_444);\n\nlet dt = NaiveDate::from_ymd_opt(2001, 9, 9).unwrap().and_hms_micro_opt(1, 46, 40, 555).unwrap().and_local_timezone(Utc).unwrap();\nassert_eq!(dt.timestamp_micros(), 1_000_000_000_000_555);\n```","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12457:32736":{"id":"2:12457:32736","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:12067:450","self::pattern":"2:12106:8527"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:11922:8571","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12111:8541","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2283:3215":{"id":"0:2283:3215","crate_id":0,"name":"WeekFromMon","span":{"filename":"src/format/mod.rs","begin":[128,4],"end":[128,15]},"visibility":"default","docs":"Week number, where the week 1 starts at the first Monday of January (FW=PW=2).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:506:718":{"id":"0:506:718","crate_id":0,"name":"fmt","span":{"filename":"src/datetime/mod.rs","begin":[1350,4],"end":[1354,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9506:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9487:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1968:7915":{"id":"0:1968:7915","crate_id":0,"name":"duration_round","span":{"filename":"src/round.rs","begin":[148,4],"end":[150,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["duration",{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41709:231","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:1961:2140","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2019:8146":{"id":"0:2019:8146","crate_id":0,"name":"number_from_month","span":{"filename":"src/month.rs","begin":[118,4],"end":[133,5]},"visibility":"public","docs":"Returns a month-of-year number starting from January = 1.\n\n`m`:                     | `January` | `February` | `...` | `December`\n-------------------------| --------- | ---------- | --- | -----\n`m.number_from_month()`: | 1         | 2          | `...` | 12","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:436":{"id":"0:436","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1176,0],"end":[1176,41]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2330:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3057":{"id":"0:3057","crate_id":0,"name":null,"span":{"filename":"src/offset/local/mod.rs","begin":[106,22],"end":[106,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9531:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Local","id":"0:3052:2107","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3058:718"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:252":{"id":"0:252","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[550,0],"end":[558,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Tz"},"trait":{"name":"","id":"0:1906:2123","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Display","id":"2:9536:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9536:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:254:718"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1279":{"id":"0:1279","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1894,0],"end":[1923,1]},"visibility":"default","docs":"Parsing a `str` into a `NaiveDateTime` uses the same format,\n[`%Y-%m-%dT%H:%M:%S%.f`](crate::format::strftime), as in `Debug`.\n\n# Example\n\n```\nuse chrono::{NaiveDateTime, NaiveDate};\n\nlet dt = NaiveDate::from_ymd_opt(2015, 9, 18).unwrap().and_hms_opt(23, 56, 4).unwrap();\nassert_eq!(\"2015-09-18T23:56:04\".parse::<NaiveDateTime>(), Ok(dt));\n\nlet dt = NaiveDate::from_ymd_opt(12345, 6, 7).unwrap().and_hms_milli_opt(7, 59, 59, 1_500).unwrap(); // leap second\nassert_eq!(\"+12345-6-7T7:59:60.5\".parse::<NaiveDateTime>(), Ok(dt));\n\nassert!(\"foo\".parse::<NaiveDateTime>().is_err());\n```","links":{"crate::format::strftime":"0:835:3169"},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:12066:3084","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1280:132","0:1281:3085"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2582-0:2085:127":{"id":"b:2:2582-0:2085:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2585:133","2:2586:1588"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:358:744":{"id":"0:358:744","crate_id":0,"name":"from","span":{"filename":"src/datetime/mod.rs","begin":[657,4],"end":[659,5]},"visibility":"default","docs":"Convert this `DateTime<Utc>` instance into a `DateTime<FixedOffset>` instance.\n\nConversion is done via [`DateTime::with_timezone`]. Note that the converted value returned by\nthis will be created with a fixed timezone offset of 0.","links":{"`DateTime::with_timezone`":"0:329:2627"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Utc","id":"0:3059:2118","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:481":{"id":"0:481","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1297,0],"end":[1303,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1906:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:2850:2288","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Months","id":"0:3225:2145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["0:483:203","0:484:1525"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2567-0:2161:2526":{"id":"b:2:2567-0:2161:2526","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DelayedFormat","id":"0:2161:2526","args":{"angle_bracketed":{"args":[{"type":{"generic":"I"}}],"bindings":[]}}}},"items":["2:2570:3122"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2190:1053":{"id":"0:2190:1053","crate_id":0,"name":"offset","span":{"filename":"src/format/parsed.rs","begin":[102,4],"end":[102,27]},"visibility":"public","docs":"Offset from the local time to UTC, in seconds.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"primitive":"i32"}}],"bindings":[]}}}}}},"0:1277":{"id":"0:1277","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1870,0],"end":[1876,1]},"visibility":"default","docs":"The `Display` output of the naive date and time `dt` is the same as\n[`dt.format(\"%Y-%m-%d %H:%M:%S%.f\")`](crate::format::strftime).\n\nIt should be noted that, for leap seconds not on the minute boundary,\nit may print a representation not distinguishable from non-leap seconds.\nThis doesn't matter in practice, since such leap seconds never happened.\n(By the time of the first leap second on 1972-06-30,\nevery time zone offset around the world has standardized to the 5-minute alignment.)\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet dt = NaiveDate::from_ymd_opt(2016, 11, 15).unwrap().and_hms_opt(7, 39, 24).unwrap();\nassert_eq!(format!(\"{}\", dt), \"2016-11-15 07:39:24\");\n```\n\nLeap seconds may also be used.\n\n```\n# use chrono::NaiveDate;\nlet dt = NaiveDate::from_ymd_opt(2015, 6, 30).unwrap().and_hms_milli_opt(23, 59, 59, 1_500).unwrap();\nassert_eq!(format!(\"{}\", dt), \"2015-06-30 23:59:60.500\");\n```","links":{"crate::format::strftime":"0:835:3169"},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9536:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1278:718"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1478-0:2584:2137":{"id":"0:1478-0:2584:2137","crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[13,85],"end":[13,94]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::date::NaiveWeek","name":"NaiveWeek","id":"0:2584:2137","glob":false}}},"0:2761:2117":{"id":"0:2761:2117","crate_id":0,"name":"FixedOffset","span":{"filename":"src/offset/fixed.rs","begin":[27,0],"end":[29,1]},"visibility":"public","docs":"The time zone with fixed offset, from UTC-23:59:59 to UTC+23:59:59.\n\nUsing the [`TimeZone`](./trait.TimeZone.html) methods\non a `FixedOffset` struct is the preferred way to construct\n`DateTime<FixedOffset>` instances. See the [`east_opt`](#method.east_opt) and\n[`west_opt`](#method.west_opt) methods for examples.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:1532","a:2:2793:252-0:2761:2117","a:2:2776:242-0:2761:2117","a:2:8606:8818-0:2761:2117","a:2:2833:8772-0:2761:2117","a:2:8607:8817-0:2761:2117","b:2:2571-0:2761:2117","b:2:2577-0:2761:2117","b:2:2582-0:2761:2117","b:2:2261-0:2761:2117","b:2:3412-0:2761:2117","b:2:2264-0:2761:2117","b:2:2567-0:2761:2117","b:5:5792-0:2761:2117","b:5:682-0:2761:2117","0:1542","0:1539","0:1557","0:1566","0:2772","0:2769","0:2767","0:2766","0:1549","0:1553","0:2773","0:2763","0:1573","0:2764","0:1551","0:1569","0:1560","0:1563"]}}},"b:2:2261-0:3225:2145":{"id":"b:2:2261-0:3225:2145","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2255:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Months","id":"0:3225:2145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2263:2522"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2793:252-0:2589:2135":{"id":"a:2:2793:252-0:2589:2135","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2793:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Days","id":"0:2589:2135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1923:2624":{"id":"0:1923:2624","crate_id":0,"name":"from_offset","span":{"filename":"src/offset/mod.rs","begin":[481,4],"end":[481,50]},"visibility":"default","docs":"Reconstructs the time zone from the offset.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["offset",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:1906:2123","args":null}}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:2446:3328":{"id":"0:2446:3328","crate_id":0,"name":"Hours","span":{"filename":"src/format/mod.rs","begin":[303,4],"end":[303,9]},"visibility":"default","docs":"Format offset from UTC as only hours. Not recommended, it is not uncommon for timezones to\nhave an offset of 30 minutes, 15 minutes, etc.\nAny minutes and seconds get truncated.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"a:2:2793:252-0:3059:2118":{"id":"a:2:2793:252-0:3059:2118","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2793:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Utc","id":"0:3059:2118","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:426:3062":{"id":"0:426:3062","crate_id":0,"name":"with_nanosecond","span":{"filename":"src/datetime/mod.rs","begin":[1161,4],"end":[1163,5]},"visibility":"default","docs":"Makes a new `DateTime` with nanoseconds since the whole non-leap second changed.\n\nReturns `None` when the resulting `NaiveDateTime` would be invalid.\nAs with the [`NaiveDateTime::nanosecond`] method,\nthe input range can exceed 1,000,000,000 for leap seconds.\n\nSee also the [`NaiveTime::with_nanosecond`] method.\n\n# Errors\n\nReturns `None` if `nanosecond >= 2,000,000,000`.","links":{"`NaiveTime::with_nanosecond`":"0:1434:3062","`NaiveDateTime::nanosecond`":"0:1231:3041"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["nano",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:992:5135":{"id":"0:992:5135","crate_id":0,"name":"from_num_days_from_ce","span":{"filename":"src/naive/date.rs","begin":[447,4],"end":[449,5]},"visibility":"public","docs":"Makes a new `NaiveDate` from a day's number in the proleptic Gregorian calendar, with\nJanuary 1, 1 being day 1.\n\n# Panics\n\nPanics if the date is out of range.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note =\n\"use `from_num_days_from_ce_opt()` instead\")]","#[inline]","#[must_use]"],"deprecation":{"since":"0.4.23","note":"use `from_num_days_from_ce_opt()` instead"},"inner":{"function":{"decl":{"inputs":[["days",{"primitive":"i32"}]],"output":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2571-0:2120:2106":{"id":"b:2:2571-0:2120:2106","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["2:2573:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1911:5661":{"id":"0:1911:5661","crate_id":0,"name":"ymd_opt","span":{"filename":"src/offset/mod.rs","begin":[265,4],"end":[270,5]},"visibility":"default","docs":"Makes a new `Date` from year, month, day and the current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\n\nThe time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),\nbut it will propagate to the `DateTime` values constructed via this date.\n\nReturns `None` on the out-of-range date, invalid month and/or day.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `with_ymd_and_hms()` instead\")]","#[allow(deprecated)]"],"deprecation":{"since":"0.4.23","note":"use `with_ymd_and_hms()` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["year",{"primitive":"i32"}],["month",{"primitive":"u32"}],["day",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"LocalResult","id":"0:3073:2138","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Date","id":"0:2120:2106","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2197":{"id":"0:2197","crate_id":0,"name":null,"span":{"filename":"src/format/parsed.rs","begin":[21,27],"end":[21,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(clippy :: manual_non_exhaustive)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2787:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parsed","id":"0:2170:2717","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2261-0:2445:3316":{"id":"b:2:2261-0:2445:3316","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2255:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetPrecision","id":"0:2445:3316","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2263:2522"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8607:8817-0:2536:2132":{"id":"a:2:8607:8817-0:2536:2132","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8607:8817","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:2536:2132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1076":{"id":"0:1076","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[1929,0],"end":[1935,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:2850:2288","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Days","id":"0:2589:2135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1077:203","0:1078:1525"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2075-0:2062:2115":{"id":"0:2075-0:2062:2115","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[551,27],"end":[551,35]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"traits::Timelike","name":"Timelike","id":"0:2062:2115","glob":false}}},"0:3089":{"id":"0:3089","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[41,16],"end":[41,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::cmp::PartialEq","id":"2:2325:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2325:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LocalResult","id":"0:3073:2138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:3091:660"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1464":{"id":"0:1464","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[1404,0],"end":[1430,1]},"visibility":"default","docs":"Parsing a `str` into a `NaiveTime` uses the same format,\n[`%H:%M:%S%.f`](../format/strftime/index.html), as in `Debug` and `Display`.\n\n# Example\n\n```\nuse chrono::NaiveTime;\n\nlet t = NaiveTime::from_hms_opt(23, 56, 4).unwrap();\nassert_eq!(\"23:56:04\".parse::<NaiveTime>(), Ok(t));\n\nlet t = NaiveTime::from_hms_nano_opt(23, 56, 4, 12_345_678).unwrap();\nassert_eq!(\"23:56:4.012345678\".parse::<NaiveTime>(), Ok(t));\n\nlet t = NaiveTime::from_hms_nano_opt(23, 59, 59, 1_234_567_890).unwrap(); // leap second\nassert_eq!(\"23:59:60.23456789\".parse::<NaiveTime>(), Ok(t));\n\n// Seconds are optional\nlet t = NaiveTime::from_hms_opt(23, 56, 0).unwrap();\nassert_eq!(\"23:56\".parse::<NaiveTime>(), Ok(t));\n\nassert!(\"foo\".parse::<NaiveTime>().is_err());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:12066:3084","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1465:132","0:1466:3085"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2264-0:2085:127":{"id":"b:2:2264-0:2085:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2258:101","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2266:7207"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:703:3863":{"id":"0:703:3863","crate_id":0,"name":"to_naive_datetime_with_offset","span":{"filename":"src/format/parsed.rs","begin":[544,4],"end":[614,5]},"visibility":"public","docs":"Returns a parsed naive date and time out of given fields,\nexcept for the [`offset`](#structfield.offset) field (assumed to have a given value).\nThis is required for parsing a local time or other known-timezone inputs.\n\nThis method is able to determine the combined date and time\nfrom date and time fields or a single [`timestamp`](#structfield.timestamp) field.\nEither way those fields have to be consistent to each other.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["offset",{"primitive":"i32"}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:906:2133","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDateTime","id":"0:2668:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2261-0:2472:3319":{"id":"b:2:2261-0:2472:3319","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:6990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2255:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Colons","id":"0:2472:3319","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2263:2522"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:331:2841":{"id":"0:331:2841","crate_id":0,"name":"fixed_offset","span":{"filename":"src/datetime/mod.rs","begin":[366,4],"end":[368,5]},"visibility":"public","docs":"Fix the offset from UTC to its current value, dropping the associated timezone information.\nThis it useful for converting a generic `DateTime<Tz: Timezone>` to `DateTime<FixedOffset>`.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2521":{"id":"0:2521","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[330,16],"end":[330,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2325:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Item","id":"0:2493:168","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:2523:660"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2757:461":{"id":"0:2757:461","crate_id":0,"name":"cmp","span":{"filename":"src/naive/time/mod.rs","begin":[205,42],"end":[205,45]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:30807:200","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3073:2138":{"id":"0:3073:2138","crate_id":0,"name":"LocalResult","span":{"filename":"src/offset/mod.rs","begin":[42,0],"end":[51,1]},"visibility":"public","docs":"The conversion result from the local time to the timezone-aware datetime types.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"variants_stripped":false,"variants":["0:3075:196","0:3077:3872","0:3080:3873"],"impls":["0:1886","0:1894","0:1901","a:2:2793:252-0:3073:2138","a:2:2776:242-0:3073:2138","a:2:8606:8818-0:3073:2138","a:2:2833:8772-0:3073:2138","a:2:8607:8817-0:3073:2138","b:2:2571-0:3073:2138","b:2:2577-0:3073:2138","b:2:2582-0:3073:2138","b:2:2261-0:3073:2138","b:2:3412-0:3073:2138","b:2:2264-0:3073:2138","b:2:2567-0:3073:2138","b:5:682-0:3073:2138","0:3084","0:3095","0:3099","0:3087","0:3092","0:3089","0:3097","0:3102"]}}},"a:2:2793:252-0:2610:2119":{"id":"a:2:2793:252-0:2610:2119","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2793:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2793:252-0:2648:4960":{"id":"a:2:2793:252-0:2648:4960","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2793:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveDateWeeksIterator","id":"0:2648:4960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:52:2399":{"id":"0:52:2399","crate_id":0,"name":"from_std","span":{"filename":"src/duration.rs","begin":[294,4],"end":[304,5]},"visibility":"public","docs":"Creates a `time::Duration` object from `std::time::Duration`\n\nThis function errors when original duration is larger than the maximum\nvalue supported for this type.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["duration",{"resolved_path":{"name":"StdDuration","id":"2:44300:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41709:231","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"OutOfRangeError","id":"0:2106:2104","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2577":{"id":"0:2577","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[386,34],"end":[386,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(clippy :: manual_non_exhaustive)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2787:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseErrorKind","id":"0:2553:3365","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2571-0:2154:2111":{"id":"b:2:2571-0:2154:2111","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DateTime","id":"0:2154:2111","args":{"angle_bracketed":{"args":[{"type":{"generic":"Tz"}}],"bindings":[]}}}},"items":["2:2573:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2776:242-0:2264:3194":{"id":"a:2:2776:242-0:2264:3194","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2776:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Numeric","id":"0:2264:3194","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2567-0:3059:2118":{"id":"b:2:2567-0:3059:2118","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Utc","id":"0:3059:2118","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2570:3122"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1112:3085":{"id":"0:1112:3085","crate_id":0,"name":"from_str","span":{"filename":"src/naive/date.rs","begin":[2175,4],"end":[2190,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:906:2133","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveDate","id":"0:2610:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1466:3085":{"id":"0:1466:3085","crate_id":0,"name":"from_str","span":{"filename":"src/naive/time/mod.rs","begin":[1407,4],"end":[1429,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"ParseResult","id":"0:906:2133","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:349:2917":{"id":"0:349:2917","crate_id":0,"name":"from_timestamp","span":{"filename":"src/datetime/mod.rs","begin":[623,4],"end":[625,5]},"visibility":"public","docs":"Makes a new [`DateTime<Utc>`] from the number of non-leap seconds\nsince January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\")\nand the number of nanoseconds since the last whole non-leap second.\n\nThis is guaranteed to round-trip with regard to [`timestamp`](DateTime::timestamp) and\n[`timestamp_subsec_nanos`](DateTime::timestamp_subsec_nanos).\n\nIf you need to create a `DateTime` with a [`TimeZone`] different from [`Utc`], use\n[`TimeZone::timestamp_opt`] or [`DateTime::with_timezone`].\n\nThe nanosecond part can exceed 1,000,000,000 in order to represent a\n[leap second](NaiveTime#leap-second-handling), but only when `secs % 60 == 59`.\n(The true \"UNIX timestamp\" cannot represent a leap second unambiguously.)\n\n# Errors\n\nReturns `None` on out-of-range number of seconds and/or\ninvalid nanosecond, otherwise returns `Some(DateTime {...})`.\n\n# Example\n\n```\nuse chrono::{DateTime, Utc};\n\nlet dt: DateTime<Utc> = DateTime::<Utc>::from_timestamp(1431648000, 0).expect(\"invalid timestamp\");\n\nassert_eq!(dt.to_string(), \"2015-05-15 00:00:00 UTC\");\nassert_eq!(DateTime::from_timestamp(dt.timestamp(), dt.timestamp_subsec_nanos()).unwrap(), dt);\n```","links":{"NaiveTime#leap-second-handling":"0:2742:2121","`Utc`":"0:3059:2118","`DateTime::with_timezone`":"0:329:2627","`TimeZone`":"0:1906:2123","DateTime::timestamp_subsec_nanos":"0:326:2835","`TimeZone::timestamp_opt`":"0:1917:3095","`DateTime<Utc>`":"0:2154:2111","DateTime::timestamp":"0:319:2799"},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["secs",{"primitive":"i64"}],["nsecs",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8607:8817-0:2321:3242":{"id":"a:2:8607:8817-0:2321:3242","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8607:8817","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InternalNumeric","id":"0:2321:3242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2581":{"id":"0:2581","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[386,44],"end":[386,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(clippy :: manual_non_exhaustive)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9747:148","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseErrorKind","id":"0:2553:3365","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2582:781"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1536:2703":{"id":"0:1536:2703","crate_id":0,"name":"west_opt","span":{"filename":"src/offset/fixed.rs","begin":[96,4],"end":[102,5]},"visibility":"public","docs":"Makes a new `FixedOffset` for the Western Hemisphere with given timezone difference.\nThe negative `secs` means the Eastern Hemisphere.\n\nReturns `None` on the out-of-bound `secs`.\n\n# Example\n\n```\nuse chrono::{FixedOffset, TimeZone};\nlet hour = 3600;\nlet datetime = FixedOffset::west_opt(5 * hour)\n    .unwrap()\n    .with_ymd_and_hms(2016, 11, 08, 0, 0, 0)\n    .unwrap();\nassert_eq!(&datetime.to_rfc3339(), \"2016-11-08T00:00:00-05:00\")\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["secs",{"primitive":"i32"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FixedOffset","id":"0:2761:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3128:3839":{"id":"0:3128:3839","crate_id":0,"name":"Tue","span":{"filename":"src/weekday.rs","begin":[40,4],"end":[40,11]},"visibility":"default","docs":"Tuesday.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":{"expr":"1","value":"1"}}}},"0:1211:2142":{"id":"0:1211:2142","crate_id":0,"name":"weekday","span":{"filename":"src/naive/datetime/mod.rs","begin":[1143,4],"end":[1145,5]},"visibility":"default","docs":"Returns the day of week.\n\nSee also the [`NaiveDate::weekday`](./struct.NaiveDate.html#method.weekday) method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Datelike, Weekday};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2015, 9, 25).unwrap().and_hms_opt(12, 34, 56).unwrap();\nassert_eq!(dt.weekday(), Weekday::Fri);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Weekday","id":"0:3124:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1436":{"id":"0:1436","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[1119,0],"end":[1126,1]},"visibility":"default","docs":"An addition of `Duration` to `NaiveTime` wraps around and never overflows or underflows.\nIn particular the addition ignores integral number of days.\n\nAs a part of Chrono's [leap second handling], the addition assumes that **there is no leap\nsecond ever**, except when the `NaiveTime` itself represents a leap second in which case the\nassumption becomes that **there is exactly a single leap second ever**.\n\n# Example\n\n```\nuse chrono::{Duration, NaiveTime};\n\nlet from_hmsm = |h, m, s, milli| { NaiveTime::from_hms_milli_opt(h, m, s, milli).unwrap() };\n\nassert_eq!(from_hmsm(3, 5, 7, 0) + Duration::zero(),                  from_hmsm(3, 5, 7, 0));\nassert_eq!(from_hmsm(3, 5, 7, 0) + Duration::seconds(1),              from_hmsm(3, 5, 8, 0));\nassert_eq!(from_hmsm(3, 5, 7, 0) + Duration::seconds(-1),             from_hmsm(3, 5, 6, 0));\nassert_eq!(from_hmsm(3, 5, 7, 0) + Duration::seconds(60 + 4),         from_hmsm(3, 6, 11, 0));\nassert_eq!(from_hmsm(3, 5, 7, 0) + Duration::seconds(7*60*60 - 6*60), from_hmsm(9, 59, 7, 0));\nassert_eq!(from_hmsm(3, 5, 7, 0) + Duration::milliseconds(80),        from_hmsm(3, 5, 7, 80));\nassert_eq!(from_hmsm(3, 5, 7, 950) + Duration::milliseconds(280),     from_hmsm(3, 5, 8, 230));\nassert_eq!(from_hmsm(3, 5, 7, 950) + Duration::milliseconds(-980),    from_hmsm(3, 5, 6, 970));\n```\n\nThe addition wraps around.\n\n```\n# use chrono::{Duration, NaiveTime};\n# let from_hmsm = |h, m, s, milli| { NaiveTime::from_hms_milli_opt(h, m, s, milli).unwrap() };\nassert_eq!(from_hmsm(3, 5, 7, 0) + Duration::seconds(22*60*60), from_hmsm(1, 5, 7, 0));\nassert_eq!(from_hmsm(3, 5, 7, 0) + Duration::seconds(-8*60*60), from_hmsm(19, 5, 7, 0));\nassert_eq!(from_hmsm(3, 5, 7, 0) + Duration::days(800),         from_hmsm(3, 5, 7, 0));\n```\n\nLeap seconds are handled, but the addition assumes that it is the only leap second happened.\n\n```\n# use chrono::{Duration, NaiveTime};\n# let from_hmsm = |h, m, s, milli| { NaiveTime::from_hms_milli_opt(h, m, s, milli).unwrap() };\nlet leap = from_hmsm(3, 5, 59, 1_300);\nassert_eq!(leap + Duration::zero(),             from_hmsm(3, 5, 59, 1_300));\nassert_eq!(leap + Duration::milliseconds(-500), from_hmsm(3, 5, 59, 800));\nassert_eq!(leap + Duration::milliseconds(500),  from_hmsm(3, 5, 59, 1_800));\nassert_eq!(leap + Duration::milliseconds(800),  from_hmsm(3, 6, 0, 100));\nassert_eq!(leap + Duration::seconds(10),        from_hmsm(3, 6, 9, 300));\nassert_eq!(leap + Duration::seconds(-10),       from_hmsm(3, 5, 50, 300));\nassert_eq!(leap + Duration::days(1),            from_hmsm(3, 5, 59, 300));\n```\n\n[leap second handling]: crate::NaiveTime#leap-second-handling","links":{"crate::NaiveTime#leap-second-handling":"0:2742:2121"},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Add","id":"2:2845:2284","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Duration","id":"0:2085:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1437:203","0:1438:301"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:3232:718":{"id":"0:3232:718","crate_id":0,"name":"fmt","span":{"filename":"src/month.rs","begin":[221,22],"end":[221,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9506:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9487:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1265:1525":{"id":"0:1265:1525","crate_id":0,"name":"sub","span":{"filename":"src/naive/datetime/mod.rs","begin":[1741,4],"end":[1743,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["rhs",{"resolved_path":{"name":"Months","id":"0:3225:2145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:2850:2288","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3180:3425":{"id":"0:3180:3425","crate_id":0,"name":"April","span":{"filename":"src/month.rs","begin":[43,4],"end":[43,13]},"visibility":"default","docs":"April","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":{"expr":"3","value":"3"}}}},"2:12450:9304":{"id":"2:12450:9304","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:41566:196","prim@char":"1:12067:450","self::pattern":"2:12106:8527"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12111:8541","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12111:8541","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12126:8543","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3125:3460":{"id":"0:3125:3460","crate_id":0,"name":"Mon","span":{"filename":"src/weekday.rs","begin":[38,4],"end":[38,11]},"visibility":"default","docs":"Monday.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":{"expr":"0","value":"0"}}}},"0:2376":{"id":"0:2376","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[176,9],"end":[176,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Fixed","id":"0:2334:2716","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2377:454"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2582-0:2445:3316":{"id":"b:2:2582-0:2445:3316","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2551:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OffsetPrecision","id":"0:2445:3316","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2585:133","2:2586:1588"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2747:660":{"id":"0:2747:660","crate_id":0,"name":"eq","span":{"filename":"src/naive/time/mod.rs","begin":[205,9],"end":[205,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"NaiveTime","id":"0:2742:2121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3210":{"id":"0:3210","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[31,20],"end":[31,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2787:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Month","id":"0:3170:2114","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2793:252-0:3225:2145":{"id":"a:2:2793:252-0:3225:2145","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2793:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Months","id":"0:3225:2145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2529":{"id":"0:2529","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[330,31],"end":[330,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9531:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Item","id":"0:2493:168","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:2531:718"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:911:2435":{"id":"0:911:2435","crate_id":0,"name":"description","span":{"filename":"src/format/mod.rs","begin":[443,4],"end":[445,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:392:2144":{"id":"0:392:2144","crate_id":0,"name":"month","span":{"filename":"src/datetime/mod.rs","begin":[939,4],"end":[941,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2589:2135":{"id":"0:2589:2135","crate_id":0,"name":"Days","span":{"filename":"src/naive/date.rs","begin":[135,0],"end":[135,32]},"visibility":"public","docs":"A duration in calendar days.\n\nThis is useful because when using `Duration` it is possible\nthat adding `Duration::days(1)` doesn't increment the day value as expected due to it being a\nfixed number of seconds. This difference applies only when dealing with `DateTime<TimeZone>` data types\nand in other cases `Duration::days(n)` and `Days::new(n)` are equivalent.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:978","a:2:2793:252-0:2589:2135","a:2:2776:242-0:2589:2135","a:2:8606:8818-0:2589:2135","a:2:2833:8772-0:2589:2135","a:2:8607:8817-0:2589:2135","b:2:2571-0:2589:2135","b:2:2577-0:2589:2135","b:2:2582-0:2589:2135","b:2:2261-0:2589:2135","b:2:3412-0:2589:2135","b:2:2264-0:2589:2135","b:2:2567-0:2589:2135","b:5:682-0:2589:2135","0:1073","0:2598","0:2594","0:2592","0:2595","0:1272","0:2606","0:1076","0:493","0:2608","0:2603","0:2604","0:497","0:2600","0:2597","0:1269"]}}},"0:1554:718":{"id":"0:1554:718","crate_id":0,"name":"fmt","span":{"filename":"src/offset/fixed.rs","begin":[171,4],"end":[173,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9506:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9487:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}}},"paths":{"0:2556:3371":{"crate_id":0,"path":["chrono","format","ParseErrorKind","Impossible"],"kind":"variant"},"17:10698:14795":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"6:7624:13776":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"2:4848:853":{"crate_id":2,"path":["core","iter"],"kind":"module"},"2:43594:8557":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"2:12751:209":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"1:7769:7216":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"2:22738:190":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"16:5727:12254":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"2:4352:8645":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"1:932:9635":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"17:11742:11439":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"1:12089:847":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"2:43322:14921":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"9:507:12770":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"1:11342:14267":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"2:9531:116":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"2:3077:8463":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"2:7489:8600":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"11:666:8765":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"0:2345:3263":{"crate_id":0,"path":["chrono","format","Fixed","UpperAmPm"],"kind":"variant"},"2:21094:16133":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr"],"kind":"trait"},"1:6924:11058":{"crate_id":1,"path":["std","sys","common","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"2:21280:16130":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"17:12724:11633":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"5:687:115":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"6:7526:13754":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"17:9137:11281":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"1:9071:14247":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"6:5073:13364":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"1:7945:14956":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"2:43843:8569":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"17:9912:14755":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"6:4333:13033":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"6:1546:12886":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"17:11173:28220":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"2:3171:216":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"1:727:149":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"2:47973:14208":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"6:4494:13120":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"2:10393:8558":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"2:4436:8513":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"16:6171:211":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"5:7231:9308":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"11:2473:12704":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"2:32139:8780":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"1:12084:1612":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"2:47575:14192":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"2:6212:13814":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"1:8599:8767":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"5:6334:16216":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"6:7538:13756":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"16:6318:12324":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"18:491:11136":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"17:9701:14751":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"1:9517:11065":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"16:5673:12189":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"18:636:11159":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"5:1516:215":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"6:501:12800":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"17:9617:41042":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"16:6792:12403":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"0:2373:3241":{"crate_id":0,"path":["chrono","format","Fixed","Internal"],"kind":"variant"},"6:4859:13252":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"18:644:11137":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"0:2347:3234":{"crate_id":0,"path":["chrono","format","Fixed","Nanosecond"],"kind":"variant"},"2:22936:184":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"5:824:10985":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"1:8941:16098":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"5:2133:9085":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"17:8686:28088":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"2:22771:195":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"17:11845:11451":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"2:9536:125":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"6:5864:13439":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"2:8607:8817":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"2:78:1668":{"crate_id":2,"path":["core","usize"],"kind":"module"},"17:10420:11224":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"18:681:11160":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"1:5781:14950":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"21:355:9912":{"crate_id":21,"path":["num_traits","ops","checked","CheckedSub"],"kind":"trait"},"17:11761:11442":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"2:40768:8587":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"17:9650:11312":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"2:9197:718":{"crate_id":2,"path":["core","fmt"],"kind":"module"},"18:80:15532":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"2:45817:14160":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"2:4407:8646":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"17:12790:11642":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"17:11306:11400":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"17:14001:11973":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"2:45919:14164":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"2:11154:14914":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"2:45540:14149":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"16:7708:12203":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"1:3274:8744":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"16:2504:12166":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"2:42316:8500":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"6:5982:13506":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"1:2219:7233":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"6:5808:13413":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"16:7554:12200":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"1:7566:14677":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"1:10860:8700":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"17:10430:14778":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"6:1521:12872":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"1:8329:14963":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"17:12513:11604":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"1:1585:12699":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"1:8879:14241":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"2:30835:8496":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"3:234:231":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"2:42858:7539":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"2:40262:8615":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"2:46779:14184":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"17:12465:11594":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"1:922:9633":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"16:6893:12411":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"1:11511:14935":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"17:10036:11300":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"16:7792:28040":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"11:1882:12700":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"6:6186:13582":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"17:2150:28154":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"1:2582:11030":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"5:1494:9632":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"2:12131:8542":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"6:1664:12971":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"2:2776:242":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"16:5995:12144":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"0:2349:3268":{"crate_id":0,"path":["chrono","format","Fixed","Nanosecond3"],"kind":"variant"},"1:6839:16123":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"17:12598:11616":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"10:36:12710":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"2:2897:8451":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"0:2554:2158":{"crate_id":0,"path":["chrono","format","ParseErrorKind","OutOfRange"],"kind":"variant"},"11:868:9638":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"17:10646:11413":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"2:45734:14157":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"17:13949:11957":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"5:2463:13787":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"5:3219:40933":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"9:237:7539":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"17:9823:28109":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"1:1564:9629":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"2:9755:152":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"2:3010:122":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"11:841:9636":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"2:40810:8596":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"1:8582:8765":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"18:521:32061":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"5:2968:15295":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"2:2866:8444":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"1:4016:16029":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"1:5079:14941":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"15:306:15544":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"1:11390:14271":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"17:13575:11860":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"2:46543:14180":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"1:3865:14937":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"1:1561:9308":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"1:8588:8766":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"17:12074:11502":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"2:22233:13836":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"0:2560:3378":{"crate_id":0,"path":["chrono","format","ParseErrorKind","Invalid"],"kind":"variant"},"17:13778:11920":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"9:357:27037":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"17:12267:11547":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"17:14346:12082":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"17:13966:11964":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"16:6560:10970":{"crate_id":16,"path":["gimli","read","lazy","imp","LazyArc"],"kind":"struct"},"2:4640:21298":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"1:8311:14222":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"1:897:9629":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"6:569:12843":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"16:6600:28034":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"6:4867:13257":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"0:2209:2527":{"crate_id":0,"path":["chrono","format","strftime","StrftimeItems"],"kind":"struct"},"1:12086:1610":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"1:10193:14676":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"6:495:12799":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"1:11071:11068":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"1:8903:9308":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"1:12088:1608":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"17:10547:11326":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"18:113:15536":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"2:46111:14169":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"16:8181:12205":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"2:7518:126":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"6:6720:13647":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"2:6217:11024":{"crate_id":2,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"11:1855:9630":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"2:49859:16142":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"6:489:12797":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"2:43790:8555":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"0:2267:3199":{"crate_id":0,"path":["chrono","format","Numeric","YearDiv100"],"kind":"variant"},"2:40777:8589":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"17:9172:11282":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"16:7884:28041":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"16:5830:12267":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"2:46825:14185":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"5:7389:8659":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"6:4884:1065":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"21:475:9921":{"crate_id":21,"path":["num_traits","ops","wrapping","WrappingAdd"],"kind":"trait"},"2:22837:185":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"2:42821:8664":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"17:14056:11989":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"2:3274:38357":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"2:0:531":{"crate_id":2,"path":["core"],"kind":"module"},"1:3276:8745":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"2:39936:14048":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"17:9564:14749":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"21:162:8064":{"crate_id":21,"path":["num_traits","cast","FromPrimitive"],"kind":"trait"},"17:10962:11373":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"2:39184:215":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"6:4631:13164":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"17:11586:11431":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"2:9223:15386":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"17:12959:11686":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"0:2389:3299":{"crate_id":0,"path":["chrono","format","InternalFixed"],"kind":"struct"},"15:0:8320":{"crate_id":15,"path":["addr2line"],"kind":"module"},"1:9505:134":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"1:505:9085":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"0:2367:3295":{"crate_id":0,"path":["chrono","format","Fixed","TimezoneOffsetZ"],"kind":"variant"},"2:11661:1506":{"crate_id":2,"path":["core","str"],"kind":"module"},"16:5905:12275":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"1:12068:1628":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"16:7128:14247":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"1:11551:14936":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"6:563:12840":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"6:5892:13451":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"17:12685:11629":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"2:44562:14147":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"2:23416:241":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"17:12111:11508":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"16:7462:12483":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"2:2277:108":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"6:123:21702":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"2:10196:244":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"6:5782:13398":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"1:10991:14946":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"2:44261:8540":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"11:2487:12707":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"17:11687:28102":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"1:8269:14962":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"5:7452:13800":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"2:2618:121":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"2:41752:8765":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"2:21926:8704":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"17:13890:11946":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"11:427:15553":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"6:4461:13104":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"2:40554:8628":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"1:9223:36244":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","DtorState"],"kind":"enum"},"2:47996:14209":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"1:11024:14241":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"2:3073:8462":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"21:394:9915":{"crate_id":21,"path":["num_traits","ops","inv","Inv"],"kind":"trait"},"5:6826:9752":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstBufDrop"],"kind":"struct"},"2:43405:13824":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"0:906:2133":{"crate_id":0,"path":["chrono","format","ParseResult"],"kind":"type_alias"},"17:261:14734":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"17:13010:11691":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"21:487:9925":{"crate_id":21,"path":["num_traits","ops","wrapping","WrappingShr"],"kind":"trait"},"1:12071:339":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"2:2547:263":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"17:12098:11506":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"1:11205:35058":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"1:6458:14953":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"6:6145:13556":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"2:32038:14918":{"crate_id":2,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"11:731:9633":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"17:11023:11376":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"1:3125:8748":{"crate_id":1,"path":["std","io","readbuf","BorrowedBuf"],"kind":"struct"},"17:14024:11978":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"2:43484:8549":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"2:40333:8621":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"6:4379:13066":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"16:5419:11279":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"9:0:8315":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"2:2855:2286":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"17:12305:11555":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"17:14173:12019":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"1:2368:7218":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"21:574:9888":{"crate_id":21,"path":["num_traits","NumAssignOps"],"kind":"trait"},"17:11272:11396":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"2:21058:16131":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"2:20903:38560":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"2:44249:8535":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"1:6494:11055":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"16:5017:12237":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"17:9390:134":{"crate_id":17,"path":["object","read","any","File"],"kind":"enum"},"1:853:9354":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"6:4960:13311":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"17:10366:14772":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"1:11488:11073":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"17:504:14736":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"16:149:10968":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"2:41682:8815":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"1:9058:14974":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"2:9487:231":{"crate_id":2,"path":["core","fmt","Result"],"kind":"type_alias"},"16:6944:41030":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"2:2884:8446":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"16:4585:12224":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"2:11811:8575":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"18:690:11163":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"2:30259:69":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"5:1778:9630":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"17:11617:11432":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"2:40035:14055":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"5:784:10982":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"1:6808:2712":{"crate_id":1,"path":["std","time","UNIX_EPOCH"],"kind":"constant"},"1:10850:124":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"6:1734:13000":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"2:42116:88":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"21:364:9908":{"crate_id":21,"path":["num_traits","ops","checked","CheckedNeg"],"kind":"trait"},"17:13135:11719":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"17:13989:11967":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"1:11179:14239":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"21:387:9913":{"crate_id":21,"path":["num_traits","ops","euclid","CheckedEuclid"],"kind":"trait"},"16:7782:12498":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"1:6454:8587":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"5:7422:13797":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"1:12073:1506":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"11:2058:9639":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"1:4066:16032":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"16:8154:14878":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"18:766:32060":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"1:3964:16025":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"11:2303:14890":{"crate_id":11,"path":["hashbrown","table","AbsentEntry"],"kind":"struct"},"1:10133:14978":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"2:1549:8713":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"6:1496:12862":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"16:5435:12243":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"2:43748:8563":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"1:11250:10096":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"6:5049:13357":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"17:12136:11510":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"17:12830:11646":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"17:10661:14789":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"1:0:1498":{"crate_id":1,"path":["std"],"kind":"module"},"1:3698:16024":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"18:590:11148":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"20:62:9660":{"crate_id":20,"path":["iana_time_zone","GetTimezoneError"],"kind":"enum"},"2:10627:8561":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"2:42621:69":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"17:10440:14779":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"16:7828:12506":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"1:8367:13622":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"11:1051:27100":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"1:8839:203":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"16:5743:12256":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"17:13739:11911":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"1:638:14926":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"1:1884:2162":{"crate_id":1,"path":["std","error"],"kind":"module"},"5:2143:13778":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"16:7041:12429":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"0:2289:3220":{"crate_id":0,"path":["chrono","format","Numeric","WeekdayFromMon"],"kind":"variant"},"1:5336:125":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"5:4350:270":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"17:13259:11734":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"6:6735:13653":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"5:4196:8713":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"1:10878:35069":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"18:582:8496":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"1:10135:14977":{"crate_id":1,"path":["std","sys","unix","os","EnvStrDebug"],"kind":"struct"},"1:646:15985":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"21:211:32070":{"crate_id":21,"path":["num_traits","float","FloatCore"],"kind":"trait"},"21:447:32079":{"crate_id":21,"path":["num_traits","ops","overflowing","OverflowingMul"],"kind":"trait"},"2:47497:14191":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"2:12702:159":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"11:2286:9641":{"crate_id":11,"path":["hashbrown","table","VacantEntry"],"kind":"struct"},"1:8865:14240":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"2:3949:8713":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"0:2426:3314":{"crate_id":0,"path":["chrono","format","OffsetFormat"],"kind":"struct"},"2:42876:14108":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"0:2504:3353":{"crate_id":0,"path":["chrono","format","Item","OwnedSpace"],"kind":"variant"},"17:14134:12007":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"16:6401:12186":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"6:507:12803":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"5:5327:10980":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"5:6914:269":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"1:1779:9687":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"11:2461:12702":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"0:2244:196":{"crate_id":0,"path":["chrono","format","Pad","None"],"kind":"variant"},"0:88:1135":{"crate_id":0,"path":["chrono","prelude"],"kind":"module"},"2:46209:14173":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"1:7715:9095":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"16:4613:12225":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"6:7579:13765":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"1:8833:14965":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"17:10383:14774":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"17:11327:11403":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"1:1429:151":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"6:4792:13225":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"1:11375:14270":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"5:4166:8713":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"1:4849:16040":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"17:13758:11912":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"2:41958:85":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"11:1850:9629":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"5:1104:15558":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"17:11124:14813":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"17:14145:12011":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"21:359:9906":{"crate_id":21,"path":["num_traits","ops","checked","CheckedDiv"],"kind":"trait"},"6:1604:12924":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"2:44269:8539":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"5:2245:13786":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"2:21489:16135":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"6:6856:13726":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"2:43304:13820":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"16:7006:14859":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"11:1635:10977":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"16:7651:14877":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"2:47879:14202":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"2:20922:38563":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"2:10436:8571":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"0:2553:3365":{"crate_id":0,"path":["chrono","format","ParseErrorKind"],"kind":"enum"},"6:4561:13151":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"2:9542:8501":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"6:6883:13732":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"2:43961:14128":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"14:187:27113":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"1:8363:14964":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"16:536:12142":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"1:10359:109":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"0:2341:3258":{"crate_id":0,"path":["chrono","format","Fixed","LongWeekdayName"],"kind":"variant"},"6:6640:13622":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"16:2881:12182":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"16:0:8321":{"crate_id":16,"path":["gimli"],"kind":"module"},"2:43544:8556":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"17:10084:14762":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"17:14522:12127":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"2:40792:8592":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"18:96:15533":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"5:6513:10980":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"17:12698:11630":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"9:330:12747":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"1:2394:8691":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"5:1413:8765":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"6:6580:13589":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"1:11423:14274":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"5:6958:11011":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"5:3671:10980":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"1:4663:13633":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"17:13040:11696":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"17:10468:11320":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"2:2330:130":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"6:1650:12960":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"11:1862:12697":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"15:394:27133":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"5:6816:9751":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"16:6545:12350":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"6:4769:13211":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"1:11006:35066":{"crate_id":1,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"6:4759:13205":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"2:11652:14669":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"12:0:8318":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"11:2368:9629":{"crate_id":11,"path":["hashbrown","table","Drain"],"kind":"struct"},"17:12554:11608":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"2:43502:8551":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"2:21297:8704":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"5:5860:9629":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"18:599:41048":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"1:4934:16077":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"2:41709:231":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"1:3532:8702":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"2:12907:11040":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"6:6051:13533":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"1:11654:14277":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"11:1541:14886":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"17:11337:28221":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"6:6622:13613":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"1:9028:34871":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"0:2454:3337":{"crate_id":0,"path":["chrono","format","OffsetPrecision","OptionalSeconds"],"kind":"variant"},"21:454:241":{"crate_id":21,"path":["num_traits","ops","saturating","Saturating"],"kind":"trait"},"17:12225:11532":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"2:22218:9894":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"17:9867:11295":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"1:4772:16044":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"5:7222:9744":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"16:5696:28029":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"0:2511:2716":{"crate_id":0,"path":["chrono","format","Item","Fixed"],"kind":"variant"},"0:2334:2716":{"crate_id":0,"path":["chrono","format","Fixed"],"kind":"enum"},"17:10628:11334":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"2:42868:14107":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"16:6189:12319":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"2:44464:212":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"6:6663:13640":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"16:4774:12229":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"2:10344:8765":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"16:6531:12348":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"2:41318:10449":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"17:14324:12076":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"6:4829:13238":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"17:13024:11694":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"2:39333:13921":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"1:9201:9106":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","Key"],"kind":"struct"},"2:39106:8472":{"crate_id":2,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"1:11628:14276":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"6:4786:13222":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"6:0:877":{"crate_id":6,"path":["libc"],"kind":"module"},"6:6037:13528":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"2:2788:113":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"1:7764:9643":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"1:10376:15304":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"0:2566:3384":{"crate_id":0,"path":["chrono","format","ParseErrorKind","BadFormat"],"kind":"variant"},"6:580:12848":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"1:12090:1668":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"2:9795:8662":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"6:4309:13015":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"5:7465:13802":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"2:6809:3626":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"16:4745:12228":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"17:12970:11687":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"17:13693:11902":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"0:2514:133":{"crate_id":0,"path":["chrono","format","Item","Error"],"kind":"variant"},"1:6222:14952":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"1:4943:16078":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"2:1642:13806":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"5:6983:11014":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"6:6741:13654":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"6:1507:12867":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"2:9538:8499":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"11:344:15549":{"crate_id":11,"path":["hashbrown","raw","FullBucketsIndices"],"kind":"struct"},"2:2892:8447":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"1:8928:14243":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"1:589:15982":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"17:14499:12123":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"2:39208:217":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"2:45586:14151":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"21:361:9909":{"crate_id":21,"path":["num_traits","ops","checked","CheckedRem"],"kind":"trait"},"16:6569:12192":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"17:13667:11896":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"17:14100:12000":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"16:6425:12336":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"16:6226:14844":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"17:14126:12006":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"17:0:8322":{"crate_id":17,"path":["object"],"kind":"module"},"5:7261:10990":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"0:2248:3182":{"crate_id":0,"path":["chrono","format","Pad","Space"],"kind":"variant"},"1:10805:8694":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"2:1635:633":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"1:5474:109":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"2:44245:8532":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"6:6059:13536":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"16:5403:11278":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"17:13422:11746":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"11:483:149":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"14:165:27106":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"2:22241:13837":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"17:10534:11325":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"21:443:32077":{"crate_id":21,"path":["num_traits","ops","overflowing","OverflowingAdd"],"kind":"trait"},"2:41768:9308":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"17:12876:11670":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"2:2841:8779":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"2:22295:37901":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"6:4400:13075":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"2:2783:6990":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"1:11325:11071":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"1:12033:7209":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"17:14163:12014":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"2:43512:8550":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"17:9086:11279":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"2:47958:14207":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"1:12081:796":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"5:2172:13780":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"16:7090:12437":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"0:2363:3290":{"crate_id":0,"path":["chrono","format","Fixed","TimezoneOffsetColonZ"],"kind":"variant"},"16:2766:12177":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"1:8206:8703":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"0:2452:3335":{"crate_id":0,"path":["chrono","format","OffsetPrecision","OptionalMinutes"],"kind":"variant"},"2:7025:8581":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"2:4416:8511":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"2:4362:8510":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"2:43414:14924":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"6:5878:13450":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"16:8195:12558":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"1:7053:11059":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"17:14469:12118":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"21:95:9895":{"crate_id":21,"path":["num_traits","bounds","Bounded"],"kind":"trait"},"6:7614:13774":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"18:707:8544":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"2:40390:8625":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"17:13085:11703":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"17:10112:14764":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"16:6879:12409":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"5:7251:9629":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"17:11137:14814":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"11:101:12691":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"17:9207:11283":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"6:6082:13542":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"17:9277:11285":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"17:14296:12069":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"16:5088:12239":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"21:479:9922":{"crate_id":21,"path":["num_traits","ops","wrapping","WrappingMul"],"kind":"trait"},"1:4768:16041":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"5:4236:8765":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"14:160:14657":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"17:2012:14739":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"17:11910:11473":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"17:10447:12701":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"16:5760:28030":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"16:2548:12168":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"2:43076:14110":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"2:2992:8471":{"crate_id":2,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"2:39326:8467":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"17:2209:14743":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"0:1495:1053":{"crate_id":0,"path":["chrono","offset"],"kind":"module"},"1:11269:156":{"crate_id":1,"path":["std","sys","unix","time","Instant"],"kind":"struct"},"1:9141:240":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"2:46465:14179":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"17:12252:11541":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"1:1557:8765":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"1:8257:8553":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"17:11710:11400":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"2:7939:8599":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"6:4753:13203":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"9:486:27021":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"16:7015:12428":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"16:6753:12390":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"6:4451:13101":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"1:7880:8696":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"6:1591:12917":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"2:43630:8561":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"2:12106:8527":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"2:5421:8713":{"crate_id":2,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"0:2369:2971":{"crate_id":0,"path":["chrono","format","Fixed","RFC2822"],"kind":"variant"},"17:10139:28128":{"crate_id":17,"path":["object","read","coff","import","ImportName"],"kind":"enum"},"2:9790:8661":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"5:1140:15559":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"2:1826:183":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"17:14434:12105":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"17:12911:11681":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"5:5371:8673":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"2:40082:104":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"11:2423:27096":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"6:6633:13618":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"1:8250:8558":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"2:12724:38302":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"21:0:2170":{"crate_id":21,"path":["num_traits"],"kind":"module"},"1:7689:9096":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"21:513:9928":{"crate_id":21,"path":["num_traits","pow","Pow"],"kind":"trait"},"6:5935:13480":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"6:1697:12987":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"17:13487:11797":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"16:7269:41034":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"2:45632:14153":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"5:7514:14665":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"6:574:12845":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"17:12172:11519":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"17:12293:11552":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"2:7255:8586":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"2:4288:8638":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"1:3994:16027":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"16:2696:12174":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"1:4653:16030":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"2:41501:14222":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"2:44125:14137":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"2:46233:14174":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"2:43932:14119":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"1:884:9628":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"2:42661:75":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"16:4949:12235":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"6:5905:13457":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"2:1761:13809":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"17:12645:11622":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"18:624:41047":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"11:860:9637":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"1:5409:14942":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"17:12280:11551":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"2:39250:219":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"16:6968:28036":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"2:42612:73":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"6:4406:13078":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"1:10800:14257":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"18:755:11177":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"2:46141:14170":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"9:426:27024":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"16:4344:12218":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"15:327:15364":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"6:1632:12948":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"1:7606:11061":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"8:0:8314":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"17:10603:11331":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"6:5013:13335":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"2:47637:14193":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"11:703:9632":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"16:4462:12220":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"2:2931:8454":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"18:719:11169":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"1:10285:15475":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"6:4418:13087":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"1:8996:14246":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"17:9521:14748":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"2:21816:38358":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"6:548:12832":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"2:39228:220":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"6:7590:13769":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"1:5596:13543":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"2:46065:14168":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"17:10672:14790":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"2:43809:8570":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"11:693:9308":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"5:7405:105":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"6:6043:13531":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"11:298:12692":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"0:2299:3230":{"crate_id":0,"path":["chrono","format","Numeric","Second"],"kind":"variant"},"2:44520:175":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"2:9546:211":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"1:3523:35902":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"2:30237:9741":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"16:3065:11180":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"6:4913:13284":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"2:47387:14190":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"5:7239:13795":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"16:2933:27169":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"16:2339:12154":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"2:47920:14205":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"2:9548:8503":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"2:32027:3241":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"17:13567:11859":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"2:21458:8704":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"17:9711:41043":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"1:8957:16097":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"2:3326:8474":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"1:1044:9639":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"5:0:313":{"crate_id":5,"path":["alloc"],"kind":"module"},"17:11661:11434":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"16:6929:12413":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"17:13202:11726":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"2:1672:1155":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"5:6797:9750":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"1:8973:16099":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"2:22606:194":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"2:22166:13830":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"2:22870:186":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"17:12621:11621":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"0:2536:2132":{"crate_id":0,"path":["chrono","format","ParseError"],"kind":"struct"},"5:7322:9308":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"11:2394:9630":{"crate_id":11,"path":["hashbrown","table","ExtractIf"],"kind":"struct"},"2:41640:9308":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"18:564:11147":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"6:6030:13527":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"5:261:10980":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"17:12778:11641":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"0:2275:3208":{"crate_id":0,"path":["chrono","format","Numeric","IsoYearMod100"],"kind":"variant"},"16:6901:12194":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"2:12126:8543":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"1:8572:8764":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"1:840:8765":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"2:41841:94":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"11:1842:8765":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"16:8294:133":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"5:2051:14894":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"11:2074:9640":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"2:21313:16125":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"2:2361:199":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"6:119:21701":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"2:4137:8650":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"17:11547:11428":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"11:1562:14887":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"2:2904:8448":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"11:0:8317":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"1:6277:11051":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"6:6835:13714":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"6:6613:13612":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"17:9607:14750":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"0:2473:196":{"crate_id":0,"path":["chrono","format","Colons","None"],"kind":"variant"},"1:12049:35060":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"6:4949:13308":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"2:22044:13827":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"0:527:729":{"crate_id":0,"path":["chrono","format"],"kind":"module"},"17:11201:11384":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"5:5944:71":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"11:796:9630":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"6:1596:12919":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"17:11281:11397":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"16:5661:12249":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"0:2472:3319":{"crate_id":0,"path":["chrono","format","Colons"],"kind":"enum"},"17:8659:28075":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"5:5137:10456":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"0:2339:3256":{"crate_id":0,"path":["chrono","format","Fixed","ShortWeekdayName"],"kind":"variant"},"2:43910:21279":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"17:9780:14753":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"1:1895:8481":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"2:40049:21304":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"1:4731:16052":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"2:20862:8496":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"2:41543:14091":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"0:2361:3286":{"crate_id":0,"path":["chrono","format","Fixed","TimezoneOffsetTripleColon"],"kind":"variant"},"2:45664:14154":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"2:12776:14916":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"17:3565:14746":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"17:14013:11974":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"2:4168:8651":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"16:6083:27141":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"1:1986:201":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"2:11187:14915":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"2:7935:8598":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"1:11088:11070":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"16:8281:12565":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"2:46701:14183":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"16:6742:12389":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"17:9921:14756":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"5:1259:9639":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"2:21804:10443":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"5:3596:9354":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"1:4187:15563":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"17:10023:14751":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"6:1537:12880":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"16:4719:12227":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"16:6456:12339":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"1:11572:14937":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"1:358:9103":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"2:7932:4969":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"1:7937:124":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"0:2269:3201":{"crate_id":0,"path":["chrono","format","Numeric","YearMod100"],"kind":"variant"},"5:3802:9630":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"17:8848:28093":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"16:6352:12326":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"2:2919:8452":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"0:2305:3241":{"crate_id":0,"path":["chrono","format","Numeric","Internal"],"kind":"variant"},"17:9985:14760":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"18:614:41049":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"16:7768:12191":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"17:10588:11329":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"6:4900:13274":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"17:12123:11509":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"2:3234:8466":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"0:2353:3272":{"crate_id":0,"path":["chrono","format","Fixed","Nanosecond9"],"kind":"variant"},"2:5509:8713":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"1:8851:14239":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"17:10903:14800":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"16:2359:12160":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"1:955:9638":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"5:7330:9308":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"6:1570:12903":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"16:6156:12314":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"21:366:9910":{"crate_id":21,"path":["num_traits","ops","checked","CheckedShl"],"kind":"trait"},"6:4468:13107":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"6:6865:13729":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"5:7478:11003":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"6:6811:13704":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"17:8825:28092":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"17:11151:14815":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"1:7792:9709":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"16:4835:12231":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"1:8031:10669":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"2:42323:8499":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"1:1590:12700":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"2:43825:8567":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"2:44026:14130":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"16:5574:12185":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"2:9747:148":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"1:871:9627":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"6:6002:13514":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"2:40016:8567":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"17:10240:11298":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"16:8205:28042":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"6:4978:13322":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"16:8134:12556":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"5:4034:10980":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"6:4320:13023":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"2:40252:8614":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"2:44265:8538":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"5:4987:8713":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"2:15:2160":{"crate_id":2,"path":["core","write"],"kind":"macro"},"5:6586:9308":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"1:7920:135":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"18:515:11140":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"1:9085:35063":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"17:12543:11607":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"0:2450:3333":{"crate_id":0,"path":["chrono","format","OffsetPrecision","Seconds"],"kind":"variant"},"2:43061:14109":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"2:47868:14201":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"17:14335:12081":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"17:13876:11944":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"21:369:9911":{"crate_id":21,"path":["num_traits","ops","checked","CheckedShr"],"kind":"trait"},"6:5994:13513":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"16:8097:12551":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"17:12452:11592":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"6:4690:13170":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"16:7544:12489":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"2:47699:14194":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"2:43253:14920":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"2:2845:2284":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"18:574:11137":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"17:10726:14798":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"2:44300:127":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"1:3514:2710":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"17:9886:14754":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"17:11244:11432":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"6:1501:12864":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"1:7953:8735":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"0:835:3169":{"crate_id":0,"path":["chrono","format","strftime"],"kind":"module"},"21:552:9884":{"crate_id":21,"path":["num_traits","Num"],"kind":"trait"},"16:5634:12245":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"6:4745:13199":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"2:42596:12525":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"17:13286:11737":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"0:2271:3204":{"crate_id":0,"path":["chrono","format","Numeric","IsoYear"],"kind":"variant"},"6:4683:13168":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"2:11636:21405":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"21:4415:8666":{"crate_id":21,"path":["num_traits","ParseFloatError"],"kind":"struct"},"19:0:1096":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"17:9003:28098":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"2:21491:10452":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"2:22258:37893":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"6:4385:13068":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"2:42639:133":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"2:44090:14132":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"1:5660:11051":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"1:9184:7252":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"16:7474:14869":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"2:41632:9354":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"15:288:15540":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"1:10978:9709":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"2:40192:8602":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"6:4540:13143":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"16:7694:12202":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"17:12208:11524":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"17:14316:12075":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"17:12997:11690":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"5:1444:9308":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"1:11405:14414":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"2:44499:14473":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"1:8440:8761":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"6:7555:13761":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"6:5790:13400":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"17:14110:12003":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"6:4655:13166":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"2:40172:14919":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"2:11848:8577":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"2:6206:8608":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"2:47894:14203":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"1:6385:180":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"2:21482:8704":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"6:7265:13738":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"2:3410:70":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"1:6325:225":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"2:2914:8450":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"2:39168:218":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"2:11922:8571":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"2:43496:8552":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"6:6849:13723":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"17:12154:11518":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"1:10009:14086":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"0:3256:2158":{"crate_id":0,"path":["chrono","OutOfRange"],"kind":"struct"},"1:2214:134":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"17:11000:11375":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"11:785:9629":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"1:8389:14225":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"1:7907:8695":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"17:11788:7578":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"6:475:12789":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"2:43780:8553":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"6:4734:13193":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"2:2888:8445":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"2:41692:9041":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"2:40000:8569":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"2:4801:419":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"2:3038:3115":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"2:25818:272":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"17:8926:28095":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"16:7582:12490":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"2:10669:14913":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"17:13914:11951":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"5:7293:215":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"0:2301:3234":{"crate_id":0,"path":["chrono","format","Numeric","Nanosecond"],"kind":"variant"},"2:30243:13851":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"16:7613:14876":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"1:9051:14973":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"11:122:10971":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"1:4770:16043":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"6:4721:13189":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"16:4862:12232":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"1:364:9104":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"16:4497:12221":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"17:12934:11682":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"5:3180:12698":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"2:22324:13847":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"17:10575:11328":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"1:12066:999":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"1:2190:7203":{"crate_id":1,"path":["std","fs"],"kind":"module"},"11:1010:9640":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"17:10197:14765":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"2:10513:14910":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"2:3041:2653":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"5:2964:13783":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"6:7544:13757":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"6:596:12858":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"0:2564:3382":{"crate_id":0,"path":["chrono","format","ParseErrorKind","TooLong"],"kind":"variant"},"0:2264:3194":{"crate_id":0,"path":["chrono","format","Numeric"],"kind":"enum"},"1:943:9636":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"20:47:11134":{"crate_id":20,"path":["iana_time_zone","platform","openwrt","BrokenQuote"],"kind":"struct"},"6:4847:13247":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"2:39921:8568":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"0:2293:3224":{"crate_id":0,"path":["chrono","format","Numeric","Hour"],"kind":"variant"},"2:7476:139":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"17:8713:28089":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"2:41777:200":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"1:9106:14250":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"17:13274:11400":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"11:2260:9640":{"crate_id":11,"path":["hashbrown","table","OccupiedEntry"],"kind":"struct"},"1:9021:9089":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"6:4643:13165":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"1:3358:8730":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"5:678:255":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"17:9350:11287":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"1:949:9637":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"17:12062:11499":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"1:7162:15565":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"1:4070:16033":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"17:10637:11335":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"17:10507:11323":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"11:2165:12701":{"crate_id":11,"path":["hashbrown","table","HashTable"],"kind":"struct"},"5:4004:9629":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"2:4045:106":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"17:13055:11700":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"2:21227:16134":{"crate_id":2,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr"],"kind":"trait"},"21:445:32078":{"crate_id":21,"path":["num_traits","ops","overflowing","OverflowingSub"],"kind":"trait"},"6:4709:13182":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"2:43694:8565":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"16:2907:12183":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"2:46017:14167":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"2:12944:147":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"1:11213:8476":{"crate_id":1,"path":["std","sys","unix","time","Nanoseconds"],"kind":"struct"},"7:0:1658":{"crate_id":7,"path":["unwind"],"kind":"module"},"1:1760:7202":{"crate_id":1,"path":["std","collections","hash_map"],"kind":"module"},"17:10165:28129":{"crate_id":17,"path":["object","read","coff","import","ImportType"],"kind":"enum"},"2:42584:114":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"17:10916:14801":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"0:928:2134":{"crate_id":0,"path":["chrono","naive"],"kind":"module"},"1:7406:35836":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"17:256:14733":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"2:2943:8457":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"0:2277:2114":{"crate_id":0,"path":["chrono","format","Numeric","Month"],"kind":"variant"},"2:44337:8478":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"16:2321:12152":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"21:331:9904":{"crate_id":21,"path":["num_traits","ops","bytes","ToBytes"],"kind":"trait"},"5:1376:97":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"1:1573:12697":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"0:2351:3270":{"crate_id":0,"path":["chrono","format","Fixed","Nanosecond6"],"kind":"variant"},"1:3763:14936":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"0:2371:3298":{"crate_id":0,"path":["chrono","format","Fixed","RFC3339"],"kind":"variant"},"1:3760:14935":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"1:8337:14960":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"17:11639:11383":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"17:13298:11744":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"2:39153:8464":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"16:3888:12215":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"16:6960:14858":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"16:7391:28038":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"0:2287:3218":{"crate_id":0,"path":["chrono","format","Numeric","NumDaysFromSun"],"kind":"variant"},"18:0:8323":{"crate_id":18,"path":["memchr"],"kind":"module"},"2:4463:8512":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"17:13632:11895":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"17:10714:14797":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"16:7722:12193":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"16:7318:12466":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"2:45564:14150":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"16:7513:12487":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"17:12765:11640":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"2:40272:8616":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"2:11666:7574":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"2:11228:21271":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"0:1904:2122":{"crate_id":0,"path":["chrono","offset","Offset"],"kind":"trait"},"2:20875:38360":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"11:389:10975":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"16:7523:12488":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"2:8716:8541":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"1:2366:8681":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"16:2810:12179":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"6:5085:13369":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"17:13101:11706":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"16:5712:12251":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"17:10227:14769":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"16:3600:12211":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"17:9959:14758":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"1:7776:9708":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"1:3195:34773":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"17:11074:14809":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"6:4877:13263":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"6:4823:13237":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"2:6028:8631":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"1:11851:11076":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"2:21194:16139":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"0:3075:196":{"crate_id":0,"path":["chrono","offset","LocalResult","None"],"kind":"variant"},"2:9506:137":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"17:10012:11312":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"16:6499:12204":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"18:652:11137":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"0:2507:3194":{"crate_id":0,"path":["chrono","format","Item","Numeric"],"kind":"variant"},"5:7489:248":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"17:13981:11966":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"16:2722:12175":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"2:47745:14195":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"6:6023:13526":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"2:2872:2287":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"2:39927:14047":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"17:13228:11728":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"1:8146:8699":{"crate_id":1,"path":["std","io","readbuf","BorrowedCursor"],"kind":"struct"},"16:5866:12273":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"1:8194:8700":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"2:40129:16004":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"type_alias"},"6:1703:12988":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"16:6261:14855":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"9:393:27023":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"17:10059:11302":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"17:11507:28101":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"2:44053:14131":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"16:7067:12435":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"2:43978:14129":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"2:40087:14060":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"2:46889:14187":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"2:41649:8814":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"1:7885:8697":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"1:10795:14255":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"2:2161:634":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"6:7532:13755":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"17:14076:11995":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"2:30807:200":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"21:582:9890":{"crate_id":21,"path":["num_traits","NumAssignRef"],"kind":"trait"},"2:46284:14175":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"2:45835:14161":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"1:7796:3241":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"17:11991:11487":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"1:1781:9688":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"17:10265:14770":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"5:5375:8674":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"2:12177:21273":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"1:8263:14960":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"6:4425:13091":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"2:41352:16023":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"16:4417:12219":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"6:654:2568":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"2:32045:8510":{"crate_id":2,"path":["core","error","tags","Ref"],"kind":"struct"},"1:3457:7312":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"17:9790:41044":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"2:9544:8502":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"1:9233:14251":{"crate_id":1,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"1:7758:15989":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"1:4179:15562":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"1:8244:8550":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"17:11407:28099":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"1:10840:135":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"11:1846:9308":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"2:9540:8500":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"21:1966:9896":{"crate_id":21,"path":["num_traits","float","FloatConst"],"kind":"trait"},"2:47839:14198":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"2:43353:14112":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"1:10776:10837":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"2:22969:189":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"5:1484:9631":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"17:3441:14745":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"16:2832:12180":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"2:2258:101":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"6:7310:13751":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"17:10316:11317":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"2:41381:14082":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"1:4728:16079":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"11:992:9639":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"0:2359:3283":{"crate_id":0,"path":["chrono","format","Fixed","TimezoneOffsetDoubleColon"],"kind":"variant"},"2:30273:37910":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"6:7573:13764":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"16:4527:12222":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"17:13113:11708":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"2:32031:5615":{"crate_id":2,"path":["core","error","tags","Value"],"kind":"struct"},"17:11111:14812":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"21:375:9914":{"crate_id":21,"path":["num_traits","ops","euclid","Euclid"],"kind":"trait"},"2:44277:8534":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"17:14118:12004":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"16:6017:28031":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"5:3570:177":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"16:4986:12236":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"1:9131:181":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"1:918:9632":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"6:5970:13501":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"0:2297:3228":{"crate_id":0,"path":["chrono","format","Numeric","Minute"],"kind":"variant"},"16:5612:12190":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"2:11871:8574":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"2:4283:8637":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"6:4838:13241":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"5:3240:12700":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"16:6346:14857":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"16:7102:28037":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"2:2787:249":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"17:8594:28077":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"17:10410:14776":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"6:5851:13430":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"11:423:15552":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"6:5079:13366":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"2:46163:14171":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"17:12671:11343":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"6:1514:12870":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"0:2083:2164":{"crate_id":0,"path":["chrono","try_opt"],"kind":"macro"},"2:10655:14912":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"2:40304:8619":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"2:2786:250":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"2:10368:9354":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"2:39948:37902":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"1:3539:8721":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"17:11226:11393":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"11:1876:12699":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"6:7601:13770":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"17:1184:14738":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"6:1639:12952":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"5:4365:10998":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"16:4641:12226":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"2:22150:13829":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"1:2894:10666":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"1:8174:8584":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"2:40404:8626":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"17:13906:11949":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"2:40281:8617":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"11:2085:9641":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"2:41760:9354":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"17:10097:14763":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"16:7284:8814":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"2:2793:252":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"2:40234:8604":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"20:29:15531":{"crate_id":20,"path":["iana_time_zone","platform","openwrt","IterWords"],"kind":"struct"},"16:6041:28032":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"5:35:9745":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"6:4775:13214":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"1:3236:8743":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"2:43434:14925":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"1:1983:202":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"11:1525:27101":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"1:7555:11275":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"6:4968:13316":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"1:12079:798":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"11:2351:9308":{"crate_id":11,"path":["hashbrown","table","IntoIter"],"kind":"struct"},"2:7439:2411":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"5:629:14664":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"2:40313:8620":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"6:4346:13043":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"2:42829:14103":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"6:555:12835":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"1:12038:15990":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"5:2962:40648":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"6:6009:13515":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"17:14460:12114":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"2:43648:8560":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"16:6332:12184":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"6:4501:13123":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"17:8895:28094":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"17:12437:11588":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"21:352:9905":{"crate_id":21,"path":["num_traits","ops","checked","CheckedAdd"],"kind":"trait"},"1:12074:1593":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"1:2644:8736":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"1:10576:8740":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"1:4078:16035":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"1:1764:657":{"crate_id":1,"path":["std","env"],"kind":"module"},"1:3201:35401":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"2:2171:21351":{"crate_id":2,"path":["core","ptr","from_exposed_addr"],"kind":"function"},"16:3830:12214":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"2:21707:16132":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"5:6467:9629":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"2:21150:16138":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"2:21056:8704":{"crate_id":2,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"17:12846:11651":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"17:12810:11645":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"6:4555:13149":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"5:1475:9628":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"6:7561:13762":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"1:1817:9698":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"1:2409:7253":{"crate_id":1,"path":["std","io"],"kind":"module"},"11:2317:8765":{"crate_id":11,"path":["hashbrown","table","Iter"],"kind":"struct"},"18:736:32059":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"2:45854:14162":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"2:40355:8622":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"5:1013:10980":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"5:4076:9354":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"17:9762:41037":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"6:6604:13606":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"4:0:8313":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"2:44446:224":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"5:4395:8713":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"17:10186:11309":{"crate_id":17,"path":["object","read","coff","import","ImportObjectData"],"kind":"struct"},"2:40568:8629":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"6:5752:13373":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"2:40365:8623":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"2:40290:14065":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"2:2948:8458":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"2:1752:13807":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"16:2644:12172":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"2:41997:92":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"21:548:9932":{"crate_id":21,"path":["num_traits","sign","Unsigned"],"kind":"trait"},"17:11951:11476":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"6:1674:12977":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"2:2798:8515":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"17:10750:11336":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"17:10949:14803":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"5:3144:98":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"17:11490:11425":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"17:11062:14808":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"17:11162:11378":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"2:22804:188":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"2:22345:7250":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"1:9312:9704":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"1:483:11042":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"5:7301:13796":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"1:7743:15988":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"2:7443:8601":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"2:46385:14178":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"6:5056:13360":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"2:47905:14204":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"6:588:12853":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"2:9218:38124":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"1:5268:207":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"17:12658:11625":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"16:7568:12201":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"16:6415:12335":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"16:4806:12230":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"2:3255:8468":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"0:2475:3343":{"crate_id":0,"path":["chrono","format","Colons","Colon"],"kind":"variant"},"1:6015:225":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"6:4989:13328":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"2:22279:37891":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"17:11815:11447":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"6:4700:13177":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"2:40783:8590":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"2:2833:8772":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"16:6376:28033":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"16:2574:12169":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"2:30203:9740":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"1:3234:8742":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"17:8765:28090":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"5:3722:7538":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"16:6721:28035":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"2:12066:3084":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"1:12016:14478":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"2:22182:13833":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"16:7534:12199":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"17:13071:11701":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"2:41715:132":{"crate_id":2,"path":["chrono","format","ParseResult","Err"],"kind":"variant"},"21:4408:9894":{"crate_id":21,"path":["num_traits","FloatErrorKind"],"kind":"enum"},"16:2305:27168":{"crate_id":16,"path":["gimli","common","Vendor"],"kind":"enum"},"1:5667:14216":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"1:4339:14939":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"17:12576:11615":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"0:2243:3177":{"crate_id":0,"path":["chrono","format","Pad"],"kind":"enum"},"2:30437:37892":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"2:21359:16127":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"2:41919:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"6:533:12823":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"1:1840:9704":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"2:46619:14182":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"17:14478:12120":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"2:21379:10452":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"1:1924:8482":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"1:5528:14946":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"16:3032:12206":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"2:2629:133":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"2:44507:14143":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"0:2281:3213":{"crate_id":0,"path":["chrono","format","Numeric","WeekFromSun"],"kind":"variant"},"16:6696:12377":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"2:21365:16129":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"17:1075:14737":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"17:9574:41045":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"16:4889:12233":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"17:13148:11720":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"17:11358:28222":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"17:12496:11601":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"21:527:9931":{"crate_id":21,"path":["num_traits","sign","Signed"],"kind":"trait"},"2:3261:8470":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"17:13215:11727":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"17:11886:11459":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"16:3915:12216":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"2:42337:8502":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"2:45765:14158":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"0:2493:168":{"crate_id":0,"path":["chrono","format","Item"],"kind":"enum"},"6:4373:13065":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"17:14536:12130":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"17:13973:11965":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"5:1505:9633":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"17:11535:11427":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"16:7862:12510":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"2:43470:7251":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"0:2295:3226":{"crate_id":0,"path":["chrono","format","Numeric","Hour12"],"kind":"variant"},"5:6100:8713":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"17:11971:11486":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"1:907:9630":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"6:4669:13167":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"0:2365:3293":{"crate_id":0,"path":["chrono","format","Fixed","TimezoneOffset"],"kind":"variant"},"17:9445:14747":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"2:7195:8584":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"21:567:9887":{"crate_id":21,"path":["num_traits","RefNum"],"kind":"trait"},"2:3654:9308":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"11:1687:151":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"6:6820:13707":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"2:2850:2288":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"2:7480:160":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"6:483:12794":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"1:2223:8678":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"1:2929:133":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"17:11872:11458":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"2:2935:8455":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"2:39964:14051":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"6:7567:13763":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"1:11640:36232":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"2:40243:8605":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"2:8606:8818":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"1:11647:14277":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"2:12120:8544":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"2:9911:11027":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"2:1923:9761":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"0:2477:3345":{"crate_id":0,"path":["chrono","format","Colons","Maybe"],"kind":"variant"},"6:4474:13109":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"6:4529:13139":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"2:22639:191":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"2:45716:14156":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"17:14514:12124":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"2:47821:14197":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"1:4665:13635":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"1:6174:11040":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"5:4761:718":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"16:2596:12170":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"0:2337:3254":{"crate_id":0,"path":["chrono","format","Fixed","LongMonthName"],"kind":"variant"},"2:31991:12706":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"1:913:9631":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"17:9455:41041":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"2:3519:9629":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"2:41295:165":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"6:6588:13594":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"17:9752:14752":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"2:8608:8816":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"5:1304:9642":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"13:110:41027":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"17:11473:11245":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"14:0:8319":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"2:44325:8477":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"17:9531:41040":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"16:6268:41036":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"1:2604:8726":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"5:207:9765":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"16:2788:12178":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"6:1718:12995":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"5:6665:10980":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"1:4497:16052":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"2:7976:38122":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"16:4053:12217":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"2:9696:781":{"crate_id":2,"path":["core","hash"],"kind":"module"},"5:1674:10980":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"1:863:9308":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"1:12070:1116":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"16:6243:14847":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"1:4056:16031":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"18:699:11164":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"5:1525:14893":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"1:7011:14675":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"1:2382:8685":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"1:9512:8697":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"17:10340:11319":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"17:12237:11535":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"2:41802:87":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"2:45694:14155":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"2:22:731":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"2:2838:110":{"crate_id":2,"path":["core","marker","ConstParamTy"],"kind":"trait"},"1:9015:111":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"1:1568:9630":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"2:41615:168":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"0:1906:2123":{"crate_id":0,"path":["chrono","offset","TimeZone"],"kind":"trait"},"6:4815:13234":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"21:187:9898":{"crate_id":21,"path":["num_traits","cast","NumCast"],"kind":"trait"},"1:8345:14224":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"2:2367:206":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"2:44549:9764":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"16:2969:27170":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"2:46362:14177":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"2:43332:13823":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"6:1528:12875":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"17:9896:28111":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"16:2406:12162":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"1:3401:8590":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"0:2501:3182":{"crate_id":0,"path":["chrono","format","Item","Space"],"kind":"variant"},"17:13611:11890":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"2:10586:14911":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"16:7342:41035":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"6:5820:13417":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"17:11235:11394":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"17:434:11231":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"2:3289:8473":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"1:2927:231":{"crate_id":1,"path":["std","io","error","Result"],"kind":"type_alias"},"17:9102:11280":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"0:2285:2136":{"crate_id":0,"path":["chrono","format","Numeric","IsoWeek"],"kind":"variant"},"1:6098:11046":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"1:9136:239":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"2:47039:14188":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"17:13851:11936":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"0:2279:3211":{"crate_id":0,"path":["chrono","format","Numeric","Day"],"kind":"variant"},"1:12083:793":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"16:8167:14881":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"0:2291:3222":{"crate_id":0,"path":["chrono","format","Numeric","Ordinal"],"kind":"variant"},"2:2876:2523":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"2:70:797":{"crate_id":2,"path":["core","i64"],"kind":"module"},"18:548:148":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"1:8323:16051":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"2:47859:14200":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"16:3049:27171":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"1:12067:450":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"21:291:9902":{"crate_id":21,"path":["num_traits","int","PrimInt"],"kind":"trait"},"6:4488:13117":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"16:4921:12234":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"1:3313:8740":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"2:9994:11030":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"1:8895:14967":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"6:5844:13426":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"2:40761:8585":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"21:562:9886":{"crate_id":21,"path":["num_traits","NumRef"],"kind":"trait"},"17:13676:11900":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"11:357:10973":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"16:7677:215":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"1:11232:2711":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"0:2265:3197":{"crate_id":0,"path":["chrono","format","Numeric","Year"],"kind":"variant"},"2:2860:2285":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"1:7694:9097":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"11:759:9627":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"2:41465:37908":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"17:10397:14775":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"2:44115:14133":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"1:10616:9095":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"1:4597:16070":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"11:1036:9641":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"16:2428:12163":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"21:254:3180":{"crate_id":21,"path":["num_traits","identities","Zero"],"kind":"trait"},"1:558:9092":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"1:12072:1474":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"1:12065:401":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"1:3429:8713":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"17:14269:12057":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"2:40115:14061":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"17:10278:14771":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"17:12711:11632":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"2:42075:93":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"5:2037:7538":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"2:2538:77":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"17:9945:11298":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"5:3173:8765":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"16:6279:12321":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"17:11191:11383":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"1:4008:16028":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"2:10186:8704":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"17:13174:11722":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"18:727:11172":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"16:7597:41031":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"17:9972:14759":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"17:13723:11908":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"1:5808:14951":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"1:4519:16053":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"5:1290:9640":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"17:10929:11370":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"1:8183:8747":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"2:30331:37911":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"1:416:179":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"14:7:14657":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"17:10494:11321":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"2:47783:14196":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"1:10869:35054":{"crate_id":1,"path":["std","sys","unix","kernel_copy","FdHandle"],"kind":"enum"},"17:10478:7542":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"2:39988:14053":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"16:2618:12171":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"13:226:12690":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"2:12689:143":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"2:4068:9760":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"1:10818:14263":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"17:13826:11927":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"17:12196:11523":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"6:6151:13557":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"6:7520:13753":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"17:14401:12098":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"17:10126:11304":{"crate_id":17,"path":["object","read","coff","import","ImportFile"],"kind":"struct"},"17:582:11275":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"2:2499:21308":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"16:7360:41033":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"2:2544:138":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"0:0:2168":{"crate_id":0,"path":["chrono"],"kind":"module"},"5:2225:41006":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"6:4943:13305":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"2:6974:15560":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"21:485:9924":{"crate_id":21,"path":["num_traits","ops","wrapping","WrappingShl"],"kind":"trait"},"1:5599:16081":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"2:3044:8461":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"6:4892:13269":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"16:2450:12164":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"17:14083:11996":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"17:9998:11268":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"1:2501:8733":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"21:555:9885":{"crate_id":21,"path":["num_traits","NumOps"],"kind":"trait"},"16:6687:12376":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"2:42556:14096":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"17:13802:11925":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"17:11098:14811":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"2:42330:8501":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"2:21463:16126":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"16:5816:12266":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"7:78:27015":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"2:10548:8556":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"0:2498:3350":{"crate_id":0,"path":["chrono","format","Item","OwnedLiteral"],"kind":"variant"},"0:2246:3180":{"crate_id":0,"path":["chrono","format","Pad","Zero"],"kind":"variant"},"6:62:21647":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"16:3232:12151":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"17:12422:11584":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"1:12082:797":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"17:11393:133":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"6:4523:13136":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"2:22903:187":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"2:2939:8456":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"2:20905:38562":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"0:2335:3251":{"crate_id":0,"path":["chrono","format","Fixed","ShortMonthName"],"kind":"variant"},"14:202:2132":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"1:1931:703":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"2:3244:259":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"6:4480:13112":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"1:8041:7431":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"1:1058:9640":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"2:43947:14125":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"2:40162:11018":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"6:5030:13343":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"2:43392:14923":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"17:3232:14744":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"5:4428:10998":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"1:7625:11063":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"17:10771:11338":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"17:9660:41038":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"2:2255:100":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"2:2535:78":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"21:463:9919":{"crate_id":21,"path":["num_traits","ops","saturating","SaturatingMul"],"kind":"trait"},"1:641:14928":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"0:2355:3275":{"crate_id":0,"path":["chrono","format","Fixed","TimezoneName"],"kind":"variant"},"0:2357:3280":{"crate_id":0,"path":["chrono","format","Fixed","TimezoneOffsetColon"],"kind":"variant"},"2:43800:8554":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"17:11719:28103":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"1:3958:16026":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"6:4954:13310":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"2:41524:14090":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"1:8887:8765":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"17:12888:11672":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"6:4997:13330":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"2:42194:14908":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"2:2909:8449":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"2:9977:11029":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"16:3315:12209":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"11:772:9628":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"2:22672:192":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"16:2472:12165":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"5:5429:1506":{"crate_id":5,"path":["alloc","str"],"kind":"module"},"6:4573:13160":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"1:10573:8744":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"16:6361:12327":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"5:7589:9746":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"16:6485:12187":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"11:829:9635":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"5:1428:9354":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"2:43080:14111":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"17:2178:14740":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"1:5156:208":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"17:13554:11852":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"2:43818:8566":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"2:3249:140":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"1:11417:14273":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"5:5790:256":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"2:41880:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"6:7478:13752":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"2:39272:221":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"6:6092:13545":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"1:10982:12767":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"2:12111:8541":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"16:2670:12173":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"5:1275:9641":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"6:4433:13093":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"17:13710:11903":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"1:6624:15300":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"2:44253:8537":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"16:3461:12210":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"2:43730:8562":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"2:40221:8613":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"6:4853:13249":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"2:48035:14210":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"17:13922:11953":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"2:2325:205":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"2:40342:8607":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"17:10616:11332":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"2:42846:152":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"16:2744:12176":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"1:7897:8698":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"17:13188:11723":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"2:43424:13825":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"17:12737:11635":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"11:2494:8658":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"17:10980:11312":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"2:43526:8558":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"14:31:14657":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"17:11573:11429":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"1:8318:14223":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"2:40023:21303":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"2:1738:21361":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"1:12080:795":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"17:10520:11324":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"21:461:9920":{"crate_id":21,"path":["num_traits","ops","saturating","SaturatingSub"],"kind":"trait"},"0:2445:3316":{"crate_id":0,"path":["chrono","format","OffsetPrecision"],"kind":"enum"},"16:5049:12238":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"2:4211:8509":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"18:531:11142":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"0:2456:3339":{"crate_id":0,"path":["chrono","format","OffsetPrecision","OptionalMinutesAndSeconds"],"kind":"variant"},"5:3332:9630":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"17:13838:11930":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"11:2479:41025":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"17:9488:41039":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"17:9372:11288":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"11:1869:12698":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"16:6204:14829":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"1:8909:14242":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"2:10009:11035":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"17:13868:11941":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"2:41624:8765":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"14:215:12641":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"11:817:9631":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"5:2961:9349":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"2:45872:14163":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"2:2551:262":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"2:12999:9743":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"17:12184:11522":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"16:8050:12547":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"17:14042:11982":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"6:1576:12905":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"2:47943:14206":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"1:4157:15561":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"2:44138:8545":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"1:3198:35512":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"17:11215:11389":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"17:12086:11503":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"16:5798:12261":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"17:13792:11924":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"17:11048:14804":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"2:4279:226":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"2:44281:8476":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"5:4848:222":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"16:5648:14820":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"1:6638:11056":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"2:40212:8603":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"17:13546:11849":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"6:6171:13571":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"5:3206:12699":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"5:2692:13790":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"17:14355:12084":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"2:9488:2710":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"1:4411:14940":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"2:44273:8533":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"17:12024:11493":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"16:3764:12212":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"1:926:9634":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"1:622:8483":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"17:12484:11599":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"17:12007:11491":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"1:10570:8742":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"17:11367:11406":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"16:6467:12340":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"1:1842:9705":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"11:324:12695":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"1:6571:16093":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"2:39067:8475":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"6:1558:12895":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"1:1076:9642":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"17:14090:11997":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"2:2670:8486":{"crate_id":2,"path":["core","error","Request"],"kind":"struct"},"2:7627:173":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"21:412:9916":{"crate_id":21,"path":["num_traits","ops","mul_add","MulAdd"],"kind":"trait"},"1:11082:11069":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"2:2925:8453":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"2:2830:8775":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"16:7503:12198":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"1:5459:14945":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"13:0:8312":{"crate_id":13,"path":["std_detect"],"kind":"module"},"5:897:8765":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"2:42036:86":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"17:9070:11278":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"16:6583:12352":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"1:5999:11051":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"5:5996:15297":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"17:11261:11395":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"6:4799:13227":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"1:7669:8704":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"1:3475:8701":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"17:9051:28076":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"14:221:12643":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"2:6910:8612":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"2:21241:21351":{"crate_id":2,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr","from_exposed_addr"],"kind":"foreign_type"},"17:14156:12012":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"17:10788:28196":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"17:11381:11409":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"17:9328:8550":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"2:40802:8594":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"18:660:14728":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"2:42155:95":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"2:44537:14146":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"2:9031:82":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"1:4259:14938":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"6:1691:12984":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"21:264:9901":{"crate_id":21,"path":["num_traits","identities","One"],"kind":"trait"},"2:7571:5551":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"2:44158:8546":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"17:10292:11312":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"2:2498:8704":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"21:459:9918":{"crate_id":21,"path":["num_traits","ops","saturating","SaturatingAdd"],"kind":"trait"},"17:12750:11637":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"1:4992:8806":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"2:46589:14181":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"6:6790:13690":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"2:40754:14072":{"crate_id":2,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"2:39294:8465":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"6:1912:23046":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"17:13162:11721":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"2:12332:116":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"9:52:15367":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"6:4394:13073":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"2:39520:32643":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"5:1120:15294":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"11:2467:12703":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"1:11193:14240":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"2:44456:232":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"1:9146:156":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"11:2334:9354":{"crate_id":11,"path":["hashbrown","table","IterMut"],"kind":"struct"},"17:10685:14793":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"6:6686:13641":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"2:20890:38360":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"2:21106:38148":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","with_addr"],"kind":"foreign_type"},"6:7293:13741":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"2:46331:14176":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"17:400:14735":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"1:4826:10838":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"7:31:27008":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"2:41712:197":{"crate_id":2,"path":["chrono","format","ParseResult","Ok"],"kind":"variant"},"6:4934:13299":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"16:7054:12432":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"6:5915:13464":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"1:10468:14965":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"17:8978:28097":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"2:45520:14148":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"0:3077:3872":{"crate_id":0,"path":["chrono","offset","LocalResult","Single"],"kind":"variant"},"16:7492:12484":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"2:29988:8665":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"2:41335:10451":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"1:8513:8762":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"2:40008:8568":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"2:22357:8668":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"17:8794:28091":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"6:5020:13338":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"2:10641:8560":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"2:12896:111":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"17:11448:28100":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"21:579:9889":{"crate_id":21,"path":["num_traits","NumAssign"],"kind":"trait"},"2:47245:14189":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"18:538:11145":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"2:46855:14186":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"6:542:12829":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"6:6759:13665":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"17:14068:11992":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"2:32052:7210":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"17:12531:11605":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"5:7377:8658":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"5:1466:9627":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"18:671:14732":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"0:2495:3348":{"crate_id":0,"path":["chrono","format","Item","Literal"],"kind":"variant"},"16:2526:12167":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"6:1710:12991":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"2:41488:14089":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"17:11351:11405":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"2:20920:38565":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"6:4621:13163":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"17:13451:11766":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"17:12473:11596":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"0:2558:3376":{"crate_id":0,"path":["chrono","format","ParseErrorKind","NotEnough"],"kind":"variant"},"2:43676:8564":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"21:417:9917":{"crate_id":21,"path":["num_traits","ops","mul_add","MulAddAssign"],"kind":"trait"},"17:12043:11498":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"2:21357:8704":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"1:7670:9105":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"17:11934:11474":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"2:43342:14922":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"17:13685:11901":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"17:11316:11402":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"0:2343:3261":{"crate_id":0,"path":["chrono","format","Fixed","LowerAmPm"],"kind":"variant"},"2:40322:8630":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"2:5569:8618":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"17:9242:11284":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"1:1067:9641":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"2:2784:8649":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"1:1579:12698":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"6:4592:13161":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"2:41701:210":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"21:103:32069":{"crate_id":21,"path":["num_traits","bounds","UpperBounded"],"kind":"trait"},"6:4441:13095":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"2:2541:157":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"14:40:11474":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"16:5322:12241":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"0:2084:671":{"crate_id":0,"path":["chrono","expect"],"kind":"macro"},"1:4667:13637":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"16:5121:12240":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"11:2238:9639":{"crate_id":11,"path":["hashbrown","table","Entry"],"kind":"enum"},"16:7621:28039":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"16:2284:27142":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"17:8953:28096":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"1:9010:14968":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"2:22097:13828":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"6:4548:13147":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"6:4511:13130":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"2:3034:8460":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"1:12092:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"1:12087:1611":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"1:12085:1609":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"2:43576:8559":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"21:136:9899":{"crate_id":21,"path":["num_traits","cast","ToPrimitive"],"kind":"trait"},"5:880:10987":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"5:5633:9750":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"16:5982:12285":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"0:2303:3237":{"crate_id":0,"path":["chrono","format","Numeric","Timestamp"],"kind":"variant"},"2:45965:14165":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"1:5423:14943":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"6:4611:13162":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"1:2384:8686":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"21:328:32076":{"crate_id":21,"path":["num_traits","ops","bytes","NumBytes"],"kind":"trait"},"1:12078:692":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"0:2321:3242":{"crate_id":0,"path":["chrono","format","InternalNumeric"],"kind":"struct"},"2:5627:8606":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"20:0:2169":{"crate_id":20,"path":["iana_time_zone"],"kind":"module"},"2:2173:21352":{"crate_id":2,"path":["core","ptr","from_exposed_addr_mut"],"kind":"function"},"17:9852:28110":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"0:2562:3380":{"crate_id":0,"path":["chrono","format","ParseErrorKind","TooShort"],"kind":"variant"},"2:43834:8568":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"16:7436:12289":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"2:43379:8602":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"6:5897:13452":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"5:7573:9630":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"16:8239:5615":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"6:1682:12978":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"1:5653:225":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"17:12373:11559":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"5:2972:15296":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"1:6568:14672":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"1:8274:16022":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"2:11887:8576":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"3:0:475":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"1:8036:10670":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"11:1145:9642":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"1:11348:14990":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"5:3214:12697":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"2:9036:89":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"2:21712:16140":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"16:6513:12341":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"16:3797:12213":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"5:3737:14894":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"2:45610:14152":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"2:21108:21351":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","from_exposed_addr"],"kind":"foreign_type"},"18:609:14727":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"2:39347:13922":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"6:5833:13418":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"2:43313:13821":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"0:3080:3873":{"crate_id":0,"path":["chrono","offset","LocalResult","Ambiguous"],"kind":"variant"},"16:5588:12188":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"17:10214:14768":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"2:9550:8504":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"16:4557:12223":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"1:8530:8763":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"5:3583:8765":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"1:4022:16030":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"1:5110:14941":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"17:10561:11327":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"1:5443:14944":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"2:40042:14056":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"5:5975:10456":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"2:46187:14172":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"2:39978:14052":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"0:2448:3331":{"crate_id":0,"path":["chrono","format","OffsetPrecision","Minutes"],"kind":"variant"},"21:98:32068":{"crate_id":21,"path":["num_traits","bounds","LowerBounded"],"kind":"trait"},"6:4805:13230":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"6:4728:13190":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"6:4922:13290":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"2:45995:14166":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"1:2568:8734":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"11:680:9354":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"16:5939:12281":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"1:8237:8627":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"0:2273:3206":{"crate_id":0,"path":["chrono","format","Numeric","IsoYearDiv100"],"kind":"variant"},"1:7890:8694":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"16:7660:12494":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"17:14378:12097":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"21:482:9923":{"crate_id":21,"path":["num_traits","ops","wrapping","WrappingNeg"],"kind":"trait"},"16:5963:14822":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"16:7736:12496":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"5:276:3166":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"1:9063:14975":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"2:2880:2524":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"2:40544:8627":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"5:7285:9308":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"6:527:12820":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"2:21928:16128":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"17:14282:12063":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"21:336:9903":{"crate_id":21,"path":["num_traits","ops","bytes","FromBytes"],"kind":"trait"},"11:1092:14884":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"10:44:12711":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"2:44104:21280":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"5:7503:13803":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"16:6915:12195":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"2:41564:198":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"1:9165:2711":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"17:13897:11948":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"1:10114:9698":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"9:177:15377":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"2:25:657":{"crate_id":2,"path":["core","env"],"kind":"macro"},"2:10475:14909":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"1:4195:16050":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"1:6190:11050":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"1:8422:8810":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"1:3315:8741":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"10:0:8316":{"crate_id":10,"path":["adler"],"kind":"module"},"16:6386:12332":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"5:7271:40937":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"2:22705:193":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"2:22331:8667":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"1:8490:7539":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"16:3655:11185":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"1:10511:11066":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"16:5384:28028":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"6:4296:13006":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"2:4033:14905":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"6:6726:13649":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"2:22206:8666":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"2:40414:8610":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"18:507:11137":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"6:5063:13363":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"16:6818:12404":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"0:2283:3215":{"crate_id":0,"path":["chrono","format","Numeric","WeekFromMon"],"kind":"variant"},"18:481:11135":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"2:3023:8459":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"17:12945:11684":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"2:47848:14199":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"9:450:27022":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"1:12091:1215":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"17:10370:14773":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"17:14420:12103":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"16:2380:12161":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"5:3185:40938":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"17:14033:11981":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"2:4822:39292":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"2:45795:14159":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"17:13244:11730":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"16:8115:12553":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"17:14221:12056":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"2:44257:8536":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"0:2446:3328":{"crate_id":0,"path":["chrono","format","OffsetPrecision","Hours"],"kind":"variant"},"2:40068:14059":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"2:40099:37900":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"5:7436:37900":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"21:195:9897":{"crate_id":21,"path":["num_traits","cast","AsPrimitive"],"kind":"trait"},"21:357:9907":{"crate_id":21,"path":["num_traits","ops","checked","CheckedMul"],"kind":"trait"},"1:10830:8698":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"1:5853:11045":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"16:2864:12181":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"11:822:9634":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"17:11295:11398":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"2:40374:8624":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"1:12077:690":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"16:5363:12242":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"16:8072:12548":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"17:12983:11689":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"2:2836:8777":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"0:3073:2138":{"crate_id":0,"path":["chrono","offset","LocalResult"],"kind":"enum"},"17:11086:14810":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"11:1072:41026":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"2:4:1079":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"1:534:9090":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"17:14308:12072":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"2:4021:14904":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"17:9933:14757":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"5:780:99":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"6:5814:13416":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"1:7961:7538":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"2:42837:8663":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"1:4208:15564":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"17:14448:12112":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"21:477:9926":{"crate_id":21,"path":["num_traits","ops","wrapping","WrappingSub"],"kind":"trait"},"1:8227:8613":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"6:6703:13642":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"17:10456:14784":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"17:10738:14799":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"17:11389:14817":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"11:1127:14885":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"1:2216:8677":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"17:13816:11926":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"1:6672:238":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"2:42566:69":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"16:6844:12405":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"1:5774:14947":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"6:7287:13739":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"}},"external_crates":{"20":{"name":"iana_time_zone","html_root_url":null},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"21":{"name":"num_traits","html_root_url":"https://docs.rs/num-traits/0.2/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":27}