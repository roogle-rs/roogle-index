{"root":"0:0:1964","crate_version":"0.4.24","includes_private":false,"index":{"0:1779:6736":{"id":"0:1779:6736","crate_id":0,"name":"duration_trunc","span":{"filename":"src/round.rs","begin":[142,4],"end":[142,75]},"visibility":"default","docs":"Return a copy truncated by Duration.\n\n# Example\n``` rust\n# use chrono::{DateTime, DurationRound, Duration, TimeZone, Utc, NaiveDate};\nlet dt = NaiveDate::from_ymd_opt(2018, 1, 11).unwrap().and_hms_milli_opt(12, 0, 0, 154).unwrap().and_local_timezone(Utc).unwrap();\nassert_eq!(\n    dt.duration_trunc(Duration::milliseconds(10)).unwrap().to_string(),\n    \"2018-01-11 12:00:00.150 UTC\"\n);\nassert_eq!(\n    dt.duration_trunc(Duration::days(1)).unwrap().to_string(),\n    \"2018-01-11 00:00:00 UTC\"\n);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["duration",{"kind":"resolved_path","inner":{"name":"Duration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:40824:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:1776:1942","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:2537-0:1915:1913":{"id":"b:2:2537-0:1915:1913","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["2:2540:126","2:2541:1457"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1657:5931":{"id":"0:1657:5931","crate_id":0,"name":"offset_from_local_date","span":{"filename":"src/offset/local/mod.rs","begin":[104,4],"end":[106,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["local",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2797:1940","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2531-0:1881:1908":{"id":"b:2:2531-0:1881:1908","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["2:2533:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1228:2137":{"id":"0:1228:2137","crate_id":0,"name":"from_hms_opt","span":{"filename":"src/naive/time/mod.rs","begin":[242,4],"end":[244,5]},"visibility":"public","docs":"Makes a new `NaiveTime` from hour, minute and second.\n\nNo [leap second](#leap-second-handling) is allowed here;\nuse `NaiveTime::from_hms_*_opt` methods with a subsecond parameter instead.\n\nReturns `None` on invalid hour, minute and/or second.\n\n# Example\n\n```\nuse chrono::NaiveTime;\n\nlet from_hms_opt = NaiveTime::from_hms_opt;\n\nassert!(from_hms_opt(0, 0, 0).is_some());\nassert!(from_hms_opt(23, 59, 59).is_some());\nassert!(from_hms_opt(24, 0, 0).is_none());\nassert!(from_hms_opt(23, 60, 0).is_none());\nassert!(from_hms_opt(23, 59, 60).is_none());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["hour",{"kind":"primitive","inner":"u32"}],["min",{"kind":"primitive","inner":"u32"}],["sec",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1230:2146":{"id":"0:1230:2146","crate_id":0,"name":"from_hms_milli_opt","span":{"filename":"src/naive/time/mod.rs","begin":[281,4],"end":[285,5]},"visibility":"public","docs":"Makes a new `NaiveTime` from hour, minute, second and millisecond.\n\nThe millisecond part can exceed 1,000\nin order to represent the [leap second](#leap-second-handling).\n\nReturns `None` on invalid hour, minute, second and/or millisecond.\n\n# Example\n\n```\nuse chrono::NaiveTime;\n\nlet from_hmsm_opt = NaiveTime::from_hms_milli_opt;\n\nassert!(from_hmsm_opt(0, 0, 0, 0).is_some());\nassert!(from_hmsm_opt(23, 59, 59, 999).is_some());\nassert!(from_hmsm_opt(23, 59, 59, 1_999).is_some()); // a leap second after 23:59:59\nassert!(from_hmsm_opt(24, 0, 0, 0).is_none());\nassert!(from_hmsm_opt(23, 60, 0, 0).is_none());\nassert!(from_hmsm_opt(23, 59, 60, 0).is_none());\nassert!(from_hmsm_opt(23, 59, 59, 2_000).is_none());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["hour",{"kind":"primitive","inner":"u32"}],["min",{"kind":"primitive","inner":"u32"}],["sec",{"kind":"primitive","inner":"u32"}],["milli",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2776:1909":{"id":"0:2776:1909","crate_id":0,"name":"Local","span":{"filename":"src/offset/local/mod.rs","begin":[57,0],"end":[57,17]},"visibility":"public","docs":"The local timescale. This is implemented via the standard `time` crate.\n\nUsing the [`TimeZone`](./trait.TimeZone.html) methods\non the Local struct is the preferred way to construct `DateTime<Local>`\ninstances.\n\n# Example\n\n```\nuse chrono::{Local, DateTime, TimeZone};\n\nlet dt: DateTime<Local> = Local::now();\nlet dt: DateTime<Local> = Local.timestamp(0, 0);\n```","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":"unit","generics":{"params":[],"where_predicates":[]},"impls":["0:1651","a:2:8179:7659-0:2776:1909","a:2:2672:217-0:2776:1909","a:2:2736:7564-0:2776:1909","a:2:2686:225-0:2776:1909","a:2:8178:7660-0:2776:1909","b:2:2531-0:2776:1909","b:2:2542-0:2776:1909","b:2:2527-0:2776:1909","b:2:3331-0:2776:1909","b:2:2240-0:2776:1909","b:2:2537-0:2776:1909","b:2:2237-0:2776:1909","b:5:674-0:2776:1909","0:2778","0:2779","0:1654","0:2781"]}},"0:1239:2477":{"id":"0:1239:2477","crate_id":0,"name":"parse_from_str","span":{"filename":"src/naive/time/mod.rs","begin":[470,4],"end":[474,5]},"visibility":"public","docs":"Parses a string with the specified format string and returns a new `NaiveTime`.\nSee the [`format::strftime` module](../format/strftime/index.html)\non the supported escape sequences.\n\n# Example\n\n```\nuse chrono::NaiveTime;\n\nlet parse_from_str = NaiveTime::parse_from_str;\n\nassert_eq!(parse_from_str(\"23:56:04\", \"%H:%M:%S\"),\n           Ok(NaiveTime::from_hms_opt(23, 56, 4).unwrap()));\nassert_eq!(parse_from_str(\"pm012345.6789\", \"%p%I%M%S%.f\"),\n           Ok(NaiveTime::from_hms_micro_opt(13, 23, 45, 678_900).unwrap()));\n```\n\nDate and offset is ignored for the purpose of parsing.\n\n```\n# use chrono::NaiveTime;\n# let parse_from_str = NaiveTime::parse_from_str;\nassert_eq!(parse_from_str(\"2014-5-17T12:34:56+09:30\", \"%Y-%m-%dT%H:%M:%S%z\"),\n           Ok(NaiveTime::from_hms_opt(12, 34, 56).unwrap()));\n```\n\n[Leap seconds](#leap-second-handling) are correctly handled by\ntreating any time of the form `hh:mm:60` as a leap second.\n(This equally applies to the formatting, so the round trip is possible.)\n\n```\n# use chrono::NaiveTime;\n# let parse_from_str = NaiveTime::parse_from_str;\nassert_eq!(parse_from_str(\"08:59:60.123\", \"%H:%M:%S%.f\"),\n           Ok(NaiveTime::from_hms_milli_opt(8, 59, 59, 1_123).unwrap()));\n```\n\nMissing seconds are assumed to be zero,\nbut out-of-bound times or insufficient fields are errors otherwise.\n\n```\n# use chrono::NaiveTime;\n# let parse_from_str = NaiveTime::parse_from_str;\nassert_eq!(parse_from_str(\"7:15\", \"%H:%M\"),\n           Ok(NaiveTime::from_hms_opt(7, 15, 0).unwrap()));\n\nassert!(parse_from_str(\"04m33s\", \"%Mm%Ss\").is_err());\nassert!(parse_from_str(\"12\", \"%H\").is_err());\nassert!(parse_from_str(\"17:60\", \"%H:%M\").is_err());\nassert!(parse_from_str(\"24:00:00\", \"%H:%M:%S\").is_err());\n```\n\nAll parsed fields should be consistent to each other, otherwise it's an error.\nHere `%H` is for 24-hour clocks, unlike `%I`,\nand thus can be independently determined without AM/PM.\n\n```\n# use chrono::NaiveTime;\n# let parse_from_str = NaiveTime::parse_from_str;\nassert!(parse_from_str(\"13:07 AM\", \"%H:%M %p\").is_err());\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["fmt",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:455:1935","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1968:2696":{"id":"0:1968:2696","crate_id":0,"name":"IsoYearDiv100","span":{"filename":"src/format/mod.rs","begin":[112,4],"end":[112,17]},"visibility":"default","docs":"Year in the ISO week date, divided by 100 (FW=PW=2). Implies the non-negative year.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"a:2:8178:7660-0:2016:2727":{"id":"a:2:8178:7660-0:2016:2727","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8178:7660","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:2016:2727","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1787:125":{"id":"0:1787:125","crate_id":0,"name":"Err","span":{"filename":"src/round.rs","begin":[161,4],"end":[161,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"RoundingError","id":"0:2830:1943","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"a:2:2686:225-0:2776:1909":{"id":"a:2:2686:225-0:2776:1909","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Local","id":"0:2776:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1706:5861":{"id":"0:1706:5861","crate_id":0,"name":"latest","span":{"filename":"src/offset/mod.rs","begin":[71,4],"end":[76,5]},"visibility":"public","docs":"Returns `Some` for the latest possible conversion result, or `None` if none.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2931":{"id":"0:2931","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[30,9],"end":[30,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2682:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:2894:1916","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:419-0:225:1931":{"id":"0:419-0:225:1931","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[465,44],"end":[465,56]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"datetime::MAX_DATETIME","name":"MAX_DATETIME","id":"0:225:1931","glob":false}},"0:775:1936":{"id":"0:775:1936","crate_id":0,"name":"naive","span":{"filename":"src/naive/mod.rs","begin":[1,0],"end":[39,1]},"visibility":"public","docs":"Date and time types unconcerned with timezones.\n\nThey are primarily building blocks for other types\n(e.g. [`TimeZone`](../offset/trait.TimeZone.html)),\nbut can be also used for the simpler date and time handling.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:1288-0:2305:1937","0:1289-0:2324:1921","0:1290-0:2300:1939","0:1291-0:828:1927","0:1292-0:827:1928","0:1294-0:2382:1922","0:1295-0:1002:1931","0:1296-0:1001:1932","0:1297-0:2448:1938","0:1298-0:2466:1923"],"is_stripped":false}},"0:2485:1919":{"id":"0:2485:1919","crate_id":0,"name":"FixedOffset","span":{"filename":"src/offset/fixed.rs","begin":[27,0],"end":[29,1]},"visibility":"public","docs":"The time zone with fixed offset, from UTC-23:59:59 to UTC+23:59:59.\n\nUsing the [`TimeZone`](./trait.TimeZone.html) methods\non a `FixedOffset` struct is the preferred way to construct\n`DateTime<FixedOffset>` instances. See the [`east_opt`](#method.east_opt) and\n[`west_opt`](#method.west_opt) methods for examples.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:1338","a:2:8179:7659-0:2485:1919","a:2:2672:217-0:2485:1919","a:2:2736:7564-0:2485:1919","a:2:2686:225-0:2485:1919","a:2:8178:7660-0:2485:1919","b:2:2531-0:2485:1919","b:2:2542-0:2485:1919","b:2:2527-0:2485:1919","b:2:3331-0:2485:1919","b:2:2240-0:2485:1919","b:2:2537-0:2485:1919","b:2:2237-0:2485:1919","b:5:5633-0:2485:1919","b:5:674-0:2485:1919","0:1352","0:1360","0:2493","0:1366","0:1376","0:2497","0:1356","0:2487","0:1372","0:1363","0:2488","0:1345","0:1354","0:1369","0:2496","0:2490","0:2491"]}},"a:2:2672:217-0:2945:1947":{"id":"a:2:2672:217-0:2945:1947","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Months","id":"0:2945:1947","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11872:802":{"id":"2:11872:802","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:11872:411"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11875:38824":{"id":"2:11875:38824","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11897:11734":{"id":"2:11897:11734","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:11872:411"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CharIndices","id":"2:42621:7314","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2203:2817":{"id":"0:2203:2817","crate_id":0,"name":"ParseErrorKind","span":{"filename":"src/format/mod.rs","begin":[360,0],"end":[392,1]},"visibility":"public","docs":"The category of parse error","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":true,"variants":["0:2204:2820","0:2206:2824","0:2208:2829","0:2210:2831","0:2212:2833","0:2214:2835","0:2216:2837"],"impls":["a:2:8179:7659-0:2203:2817","a:2:2672:217-0:2203:2817","a:2:2736:7564-0:2203:2817","a:2:2686:225-0:2203:2817","a:2:8178:7660-0:2203:2817","b:2:2531-0:2203:2817","b:2:2542-0:2203:2817","b:2:2527-0:2203:2817","b:2:3331-0:2203:2817","b:2:2240-0:2203:2817","b:2:2537-0:2203:2817","b:2:2237-0:2203:2817","b:5:674-0:2203:2817","0:2230","0:2227","0:2228","0:2224","0:2222","0:2231","0:2220","0:2225"]}},"0:2398":{"id":"0:2398","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[82,47],"end":[82,51]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2684:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1050:1944":{"id":"0:1050:1944","crate_id":0,"name":"weekday","span":{"filename":"src/naive/datetime/mod.rs","begin":[1087,4],"end":[1089,5]},"visibility":"default","docs":"Returns the day of week.\n\nSee also the [`NaiveDate::weekday`](./struct.NaiveDate.html#method.weekday) method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Datelike, Weekday};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2015, 9, 25).unwrap().and_hms_opt(12, 34, 56).unwrap();\nassert_eq!(dt.weekday(), Weekday::Fri);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2848:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2237-0:1959:2507":{"id":"b:2:2237-0:1959:2507","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2231:96","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:1959:2507","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2239:2071"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1901":{"id":"0:1901","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[55,9],"end":[55,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SecondsFormat","id":"0:1888:1914","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1902:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2672:217-0:2029:2284":{"id":"a:2:2672:217-0:2029:2284","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2029:2284","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2527-0:1888:1914":{"id":"b:2:2527-0:1888:1914","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SecondsFormat","id":"0:1888:1914","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2530:2607"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:5633-0:2848:1918":{"id":"b:5:5633-0:2848:1918","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9074:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5631:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2848:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5635:1434"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2021":{"id":"0:2021","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[155,16],"end":[155,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2306:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:2016:2727","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2023":{"id":"0:2023","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[155,20],"end":[155,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9289:139","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:2016:2727","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2024:720"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:122:2240":{"id":"0:122:2240","crate_id":0,"name":"with_day","span":{"filename":"src/date.rs","begin":[427,4],"end":[429,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["day",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2326":{"id":"0:2326","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[187,9],"end":[187,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2682:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1023:2393":{"id":"0:1023:2393","crate_id":0,"name":"timestamp_subsec_nanos","span":{"filename":"src/naive/datetime/mod.rs","begin":[542,4],"end":[544,5]},"visibility":"public","docs":"Returns the number of nanoseconds since the last whole non-leap second.\n\nThe return value ranges from 0 to 999,999,999,\nor for [leap seconds](./struct.NaiveTime.html#leap-second-handling), to 1,999,999,999.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet dt = NaiveDate::from_ymd_opt(2016, 7, 8).unwrap().and_hms_nano_opt(9, 10, 11, 123_456_789).unwrap();\nassert_eq!(dt.timestamp_subsec_nanos(), 123_456_789);\n\nlet dt = NaiveDate::from_ymd_opt(2015, 7, 1).unwrap().and_hms_nano_opt(8, 59, 59, 1_234_567_890).unwrap();\nassert_eq!(dt.timestamp_subsec_nanos(), 1_234_567_890);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1043:2230":{"id":"0:1043:2230","crate_id":0,"name":"year","span":{"filename":"src/naive/datetime/mod.rs","begin":[956,4],"end":[958,5]},"visibility":"default","docs":"Returns the year number in the [calendar date](./index.html#calendar-date).\n\nSee also the [`NaiveDate::year`] method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Datelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2015, 9, 25).unwrap().and_hms_opt(12, 34, 56).unwrap();\nassert_eq!(dt.year(), 2015);\n```","links":{"`NaiveDate::year`":"0:891:2230"},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1251:2206":{"id":"0:1251:2206","crate_id":0,"name":"MIN","span":{"filename":"src/naive/time/mod.rs","begin":[756,4],"end":[756,52]},"visibility":"public","docs":"The earliest possible `NaiveTime`","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"0:2811":{"id":"0:2811","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[41,16],"end":[41,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2682:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2797:1940","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2838:659":{"id":"0:2838:659","crate_id":0,"name":"fmt","span":{"filename":"src/round.rs","begin":[241,9],"end":[241,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:9044:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:9033:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1376":{"id":"0:1376","crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[225,0],"end":[232,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:2770:2074","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:1378:183","0:1379:1395"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:928:1396":{"id":"0:928:1396","crate_id":0,"name":"sub_assign","span":{"filename":"src/naive/date.rs","begin":[1755,4],"end":[1757,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:573:3094":{"id":"0:573:3094","crate_id":0,"name":"set_ampm","span":{"filename":"src/format/parsed.rs","begin":[227,4],"end":[229,5]},"visibility":"public","docs":"Tries to set the [`hour_div_12`](#structfield.hour_div_12) field from given value.\n(`false` for AM, `true` for PM)","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["value",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:455:1935","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1068:2538":{"id":"0:1068:2538","crate_id":0,"name":"minute","span":{"filename":"src/naive/datetime/mod.rs","begin":[1284,4],"end":[1286,5]},"visibility":"default","docs":"Returns the minute number from 0 to 59.\n\nSee also the [`NaiveTime::minute`] method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Timelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().and_hms_milli_opt(12, 34, 56, 789).unwrap();\nassert_eq!(dt.minute(), 34);\n```","links":{"`NaiveTime::minute`":"0:1255:2538"},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:578:3106":{"id":"0:578:3106","crate_id":0,"name":"set_nanosecond","span":{"filename":"src/format/parsed.rs","begin":[265,4],"end":[267,5]},"visibility":"public","docs":"Tries to set the [`nanosecond`](#structfield.nanosecond) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["value",{"kind":"primitive","inner":"i64"}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:455:1935","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2272:2082":{"id":"0:2272:2082","crate_id":0,"name":"StrftimeItems","span":{"filename":"src/format/strftime.rs","begin":[213,0],"end":[226,1]},"visibility":"public","docs":"Parsing iterator for `strftime`-like format strings.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:738","a:2:8179:7659-0:2272:2082","a:2:2672:217-0:2272:2082","a:2:2736:7564-0:2272:2082","a:2:2686:225-0:2272:2082","a:2:8178:7660-0:2272:2082","b:2:2531-0:2272:2082","b:2:2542-0:2272:2082","b:2:2527-0:2272:2082","b:2:3331-0:2272:2082","b:2:7133-0:2272:2082","b:2:2240-0:2272:2082","b:2:2537-0:2272:2082","b:2:2237-0:2272:2082","b:5:674-0:2272:2082","0:2282","0:2279","0:745"]}},"0:120:2239":{"id":"0:120:2239","crate_id":0,"name":"with_month0","span":{"filename":"src/date.rs","begin":[422,4],"end":[424,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["month0",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2071":{"id":"0:2071","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[170,9],"end":[170,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2029:2284","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2072:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2073":{"id":"0:2073","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[170,16],"end":[170,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2682:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2029:2284","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2686:225-0:2143:2081":{"id":"a:2:2686:225-0:2143:2081","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2143:2081","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2237-0:2448:1938":{"id":"b:2:2237-0:2448:1938","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2231:96","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IsoWeek","id":"0:2448:1938","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2239:2071"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:63:2134":{"id":"0:63:2134","crate_id":0,"name":"and_hms_opt","span":{"filename":"src/date.rs","begin":[109,4],"end":[111,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date, hour, minute and second.\nThe offset in the current date is preserved.\n\nReturns `None` on invalid hour, minute and/or second.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["hour",{"kind":"primitive","inner":"u32"}],["min",{"kind":"primitive","inner":"u32"}],["sec",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1254:2131":{"id":"0:1254:2131","crate_id":0,"name":"hour","span":{"filename":"src/naive/time/mod.rs","begin":[772,4],"end":[774,5]},"visibility":"default","docs":"Returns the hour number from 0 to 23.\n\n# Example\n\n```\nuse chrono::{NaiveTime, Timelike};\n\nassert_eq!(NaiveTime::from_hms_opt(0, 0, 0).unwrap().hour(), 0);\nassert_eq!(NaiveTime::from_hms_nano_opt(23, 56, 4, 12_345_678).unwrap().hour(), 23);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8179:7659-0:1915:1913":{"id":"a:2:8179:7659-0:1915:1913","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Tz"},"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8179:7659","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8179:7659","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2542-0:2186:1934":{"id":"b:2:2542-0:2186:1934","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2186:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:126","2:2546:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2459:422":{"id":"0:2459:422","crate_id":0,"name":"cmp","span":{"filename":"src/naive/isoweek.rs","begin":[19,36],"end":[19,39]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"IsoWeek","id":"0:2448:1938","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Ordering","id":"2:30596:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1691:5931":{"id":"0:1691:5931","crate_id":0,"name":"offset_from_local_date","span":{"filename":"src/offset/utc.rs","begin":[94,4],"end":[96,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["_local",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2797:1940","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:2783:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2804:3172":{"id":"0:2804:3172","crate_id":0,"name":"Ambiguous","span":{"filename":"src/offset/mod.rs","begin":[50,4],"end":[50,35]},"visibility":"default","docs":"Given local time representation has multiple results and thus ambiguous.\nThis can occur when, for example, the negative timezone transition.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":{"tuple":["0:2806:1583","0:2807:1584"]},"discriminant":null}},"a:2:8179:7659-0:2272:2082":{"id":"a:2:8179:7659-0:2272:2082","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8179:7659","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2272:2082","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2531-0:1938:2508":{"id":"b:2:2531-0:1938:2508","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:1938:2508","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2533:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2537-0:2084:2779":{"id":"b:2:2537-0:2084:2779","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2084:2779","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2540:126","2:2541:1457"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1715:2153":{"id":"0:1715:2153","crate_id":0,"name":"and_hms_micro_opt","span":{"filename":"src/offset/mod.rs","begin":[145,4],"end":[158,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date, hour, minute, second and microsecond.\nThe microsecond part can exceed 1,000,000 in order to represent the leap second.\nThe offset in the current date is preserved.\n\nPropagates any error. Ambiguous result would be discarded.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["hour",{"kind":"primitive","inner":"u32"}],["min",{"kind":"primitive","inner":"u32"}],["sec",{"kind":"primitive","inner":"u32"}],["micro",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2797:1940","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1814":{"id":"0:1814","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[137,0],"end":[165,1]},"visibility":"default","docs":"Any weekday can be represented as an integer from 0 to 6, which equals to\n[`Weekday::num_days_from_monday`](#method.num_days_from_monday) in this implementation.\nDo not heavily depend on this though; use explicit methods whenever possible.","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["from_u16","from_i32","from_isize","from_u128","from_i128","from_i8","from_usize","from_f64","from_f32","from_u8","from_i16","from_u32"],"trait":{"name":"FromPrimitive","id":"23:161:5232","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2848:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1815:6859","0:1816:6860"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2672:217-0:2234:2283":{"id":"a:2:2672:217-0:2234:2283","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Parsed","id":"0:2234:2283","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2672:217-0:2884:1945":{"id":"a:2:2672:217-0:2884:1945","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:2884:1945","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1071:2541":{"id":"0:1071:2541","crate_id":0,"name":"with_hour","span":{"filename":"src/naive/datetime/mod.rs","begin":[1341,4],"end":[1343,5]},"visibility":"default","docs":"Makes a new `NaiveDateTime` with the hour number changed.\n\nReturns `None` when the resulting `NaiveDateTime` would be invalid.\n\nSee also the [`NaiveTime::with_hour`] method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Timelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().and_hms_milli_opt(12, 34, 56, 789).unwrap();\nassert_eq!(dt.with_hour(7),\n           Some(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().and_hms_milli_opt(7, 34, 56, 789).unwrap()));\nassert_eq!(dt.with_hour(24), None);\n```","links":{"`NaiveTime::with_hour`":"0:1258:2541"},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["hour",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:74:2168":{"id":"0:74:2168","crate_id":0,"name":"succ","span":{"filename":"src/date.rs","begin":[199,4],"end":[201,5]},"visibility":"public","docs":"Makes a new `Date` for the next date.\n\nPanics when `self` is the last representable date.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"Use succ_opt() instead\")]","#[inline]"],"deprecation":{"since":"0.4.23","note":"Use succ_opt() instead"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2266":{"id":"0:2266","crate_id":0,"name":null,"span":{"filename":"src/format/parsed.rs","begin":[25,38],"end":[25,45]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2578:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Parsed","id":"0:2234:2283","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2267:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:225:1931":{"id":"0:225:1931","crate_id":0,"name":"MAX_DATETIME","span":{"filename":"src/datetime/mod.rs","begin":[99,0],"end":[99,65]},"visibility":"public","docs":"The maximum possible `DateTime<Utc>`.","links":{},"attrs":["#[deprecated(since = \"0.4.20\", note = \"Use DateTime::MAX_UTC instead\")]"],"deprecation":{"since":"0.4.20","note":"Use DateTime::MAX_UTC instead"},"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:2783:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"expr":"DateTime<Utc>::MAX_UTC","value":null,"is_literal":false}},"a:2:8178:7660-0:2234:2283":{"id":"a:2:8178:7660-0:2234:2283","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8178:7660","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Parsed","id":"0:2234:2283","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:339":{"id":"0:339","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[862,0],"end":[862,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Tz"},"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:2684:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2684:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2268":{"id":"0:2268","crate_id":0,"name":null,"span":{"filename":"src/format/parsed.rs","begin":[25,47],"end":[25,51]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9289:139","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Parsed","id":"0:2234:2283","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2269:720"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2220":{"id":"0:2220","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[359,9],"end":[359,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9069:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2203:2817","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2221:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2308":{"id":"0:2308","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[129,9],"end":[129,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Days","id":"0:2305:1937","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2309:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1237:5576":{"id":"0:1237:5576","crate_id":0,"name":"from_num_seconds_from_midnight","span":{"filename":"src/naive/time/mod.rs","begin":[377,4],"end":[379,5]},"visibility":"public","docs":"Makes a new `NaiveTime` from the number of seconds since midnight and nanosecond.\n\nThe nanosecond part can exceed 1,000,000,000\nin order to represent the [leap second](#leap-second-handling).\n\nPanics on invalid number of seconds and/or nanosecond.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note =\n\"use `from_num_seconds_from_midnight_opt()` instead\")]","#[inline]"],"deprecation":{"since":"0.4.23","note":"use `from_num_seconds_from_midnight_opt()` instead"},"kind":"function","inner":{"decl":{"inputs":[["secs",{"kind":"primitive","inner":"u32"}],["nano",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1356":{"id":"0:1356","crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[149,0],"end":[153,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9074:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1357:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1035:670":{"id":"0:1035:670","crate_id":0,"name":"format","span":{"filename":"src/naive/datetime/mod.rs","begin":[881,4],"end":[883,5]},"visibility":"public","docs":"Formats the combined date and time with the specified format string.\nSee the [`format::strftime` module](../format/strftime/index.html)\non the supported escape sequences.\n\nThis returns a `DelayedFormat`,\nwhich gets converted to a string only when actual formatting happens.\nYou may use the `to_string` method to get a `String`,\nor just feed it into `print!` and other formatting macros.\n(In this way it avoids the redundant memory allocation.)\n\nA wrong format string does *not* issue an error immediately.\nRather, converting or formatting the `DelayedFormat` fails.\nYou are recommended to immediately use `DelayedFormat` for this reason.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet dt = NaiveDate::from_ymd_opt(2015, 9, 5).unwrap().and_hms_opt(23, 56, 4).unwrap();\nassert_eq!(dt.format(\"%Y-%m-%d %H:%M:%S\").to_string(), \"2015-09-05 23:56:04\");\nassert_eq!(dt.format(\"around %l %p on %b %-d\").to_string(), \"around 11 PM on Sep 5\");\n```\n\nThe resulting `DelayedFormat` can be formatted directly via the `Display` trait.\n\n```\n# use chrono::NaiveDate;\n# let dt = NaiveDate::from_ymd_opt(2015, 9, 5).unwrap().and_hms_opt(23, 56, 4).unwrap();\nassert_eq!(format!(\"{}\", dt.format(\"%Y-%m-%d %H:%M:%S\")), \"2015-09-05 23:56:04\");\nassert_eq!(format!(\"{}\", dt.format(\"around %l %p on %b %-d\")), \"around 11 PM on Sep 5\");\n```","links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]","#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["fmt",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2291:2080","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2272:2082","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2839":{"id":"0:2839","crate_id":0,"name":null,"span":{"filename":"src/round.rs","begin":[241,16],"end":[241,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RoundingError","id":"0:2830:1943","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2840:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2919:2883":{"id":"0:2919:2883","crate_id":0,"name":"September","span":{"filename":"src/month.rs","begin":[52,4],"end":[52,17]},"visibility":"default","docs":"September","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":{"expr":"8","value":"8"}}},"0:1951":{"id":"0:1951","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[76,33],"end":[76,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2683:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:1938:2508","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2527-0:2894:1916":{"id":"b:2:2527-0:2894:1916","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:2894:1916","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2530:2607"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2937":{"id":"0:2937","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[30,24],"end":[30,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2684:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:2894:1916","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:8179:7659-0:2945:1947":{"id":"a:2:8179:7659-0:2945:1947","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8179:7659","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Months","id":"0:2945:1947","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:231:2348":{"id":"0:231:2348","crate_id":0,"name":"date_naive","span":{"filename":"src/datetime/mod.rs","begin":[176,4],"end":[179,5]},"visibility":"public","docs":"Retrieves the Date without an associated timezone\n\n[`NaiveDate`] is a more well-defined type, and has more traits implemented on it,\nso should be preferred to [`Date`] any time you truly want to operate on Dates.\n\n```\nuse chrono::prelude::*;\n\nlet date: DateTime<Utc> = Utc.with_ymd_and_hms(2020, 1, 1, 0, 0, 0).unwrap();\nlet other: DateTime<FixedOffset> = FixedOffset::east_opt(23).unwrap().with_ymd_and_hms(2020, 1, 1, 0, 0, 0).unwrap();\nassert_eq!(date.date_naive(), other.date_naive());\n```","links":{"`NaiveDate`":"0:2324:1921","`Date`":"0:1881:1908"},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2093":{"id":"0:2093","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[254,34],"end":[254,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2683:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2084:2779","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:370:271":{"id":"0:370:271","crate_id":0,"name":"add","span":{"filename":"src/datetime/mod.rs","begin":[928,4],"end":[930,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"Months","id":"0:2945:1947","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:2765:2072","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1080:183":{"id":"0:1080:183","crate_id":0,"name":"Output","span":{"filename":"src/naive/datetime/mod.rs","begin":[1466,4],"end":[1466,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:157":{"id":"0:157","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[493,0],"end":[500,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:2770:2074","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Duration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:159:183","0:160:1395"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:8179:7659-0:1881:1908":{"id":"a:2:8179:7659-0:1881:1908","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Tz"},"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8179:7659","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8179:7659","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:824:2269":{"id":"0:824:2269","crate_id":0,"name":"days","span":{"filename":"src/naive/date.rs","begin":[118,4],"end":[120,5]},"visibility":"public","docs":"Returns a [`RangeInclusive<T>`] representing the whole week bounded by\n[first_day](./struct.NaiveWeek.html#method.first_day) and\n[last_day](./struct.NaiveWeek.html#method.last_day) functions.\n\n# Examples\n\n```\nuse chrono::{NaiveDate, Weekday};\n\nlet date = NaiveDate::from_ymd_opt(2022, 4, 18).unwrap();\nlet week = date.week(Weekday::Mon);\nlet days = week.days();\nassert!(days.contains(&date));\n```","links":{"`RangeInclusive<T>`":"2:38925:198"},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"RangeInclusive","id":"2:38925:198","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1907":{"id":"0:1907","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[55,29],"end":[55,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2306:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SecondsFormat","id":"0:1888:1914","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:5:5633-0:2291:2080":{"id":"b:5:5633-0:2291:2080","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9074:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5631:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2291:2080","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["5:5635:1434"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:405:125":{"id":"0:405:125","crate_id":0,"name":"Err","span":{"filename":"src/datetime/mod.rs","begin":[1036,4],"end":[1036,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2186:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:2029:2284":{"id":"0:2029:2284","crate_id":0,"name":"Fixed","span":{"filename":"src/format/mod.rs","begin":[171,0],"end":[251,1]},"visibility":"public","docs":"Fixed-format item types.\n\nThey have their own rules of formatting and parsing.\nOtherwise noted, they print in the specified cases but parse case-insensitively.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:2030:2737","0:2032:2740","0:2034:2742","0:2036:2744","0:2038:2747","0:2040:2749","0:2042:2525","0:2044:2522","0:2046:2523","0:2048:2524","0:2050:2758","0:2052:2528","0:2054:2765","0:2056:2768","0:2058:2527","0:2060:2774","0:2062:2776","0:2064:2456","0:2066:2463","0:2068:2726"],"impls":["a:2:8179:7659-0:2029:2284","a:2:2672:217-0:2029:2284","a:2:2736:7564-0:2029:2284","a:2:2686:225-0:2029:2284","a:2:8178:7660-0:2029:2284","b:2:2531-0:2029:2284","b:2:2542-0:2029:2284","b:2:2527-0:2029:2284","b:2:3331-0:2029:2284","b:2:2240-0:2029:2284","b:2:2537-0:2029:2284","b:2:2237-0:2029:2284","b:5:674-0:2029:2284","0:2077","0:2071","0:2076","0:2073","0:2081","0:2079","0:2074"]}},"0:2221:659":{"id":"0:2221:659","crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[359,9],"end":[359,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:9044:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:9033:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1086:271":{"id":"0:1086:271","crate_id":0,"name":"add","span":{"filename":"src/naive/datetime/mod.rs","begin":[1521,4],"end":[1523,5]},"visibility":"default","docs":"An addition of months to `NaiveDateTime` clamped to valid days in resulting month.\n\n# Panics\n\nPanics if the resulting date would be out of range.\n\n# Example\n\n```\nuse chrono::{Duration, NaiveDateTime, Months, NaiveDate};\nuse std::str::FromStr;\n\nassert_eq!(\n    NaiveDate::from_ymd_opt(2014, 1, 1).unwrap().and_hms_opt(1, 0, 0).unwrap() + Months::new(1),\n    NaiveDate::from_ymd_opt(2014, 2, 1).unwrap().and_hms_opt(1, 0, 0).unwrap()\n);\nassert_eq!(\n    NaiveDate::from_ymd_opt(2014, 1, 1).unwrap().and_hms_opt(0, 2, 0).unwrap() + Months::new(11),\n    NaiveDate::from_ymd_opt(2014, 12, 1).unwrap().and_hms_opt(0, 2, 0).unwrap()\n);\nassert_eq!(\n    NaiveDate::from_ymd_opt(2014, 1, 1).unwrap().and_hms_opt(0, 0, 3).unwrap() + Months::new(12),\n    NaiveDate::from_ymd_opt(2015, 1, 1).unwrap().and_hms_opt(0, 0, 3).unwrap()\n);\nassert_eq!(\n    NaiveDate::from_ymd_opt(2014, 1, 1).unwrap().and_hms_opt(0, 0, 4).unwrap() + Months::new(13),\n    NaiveDate::from_ymd_opt(2015, 2, 1).unwrap().and_hms_opt(0, 0, 4).unwrap()\n);\nassert_eq!(\n    NaiveDate::from_ymd_opt(2014, 1, 31).unwrap().and_hms_opt(0, 5, 0).unwrap() + Months::new(1),\n    NaiveDate::from_ymd_opt(2014, 2, 28).unwrap().and_hms_opt(0, 5, 0).unwrap()\n);\nassert_eq!(\n    NaiveDate::from_ymd_opt(2020, 1, 31).unwrap().and_hms_opt(6, 0, 0).unwrap() + Months::new(1),\n    NaiveDate::from_ymd_opt(2020, 2, 29).unwrap().and_hms_opt(6, 0, 0).unwrap()\n);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"Months","id":"0:2945:1947","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:2765:2072","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:298:670":{"id":"0:298:670","crate_id":0,"name":"format","span":{"filename":"src/datetime/mod.rs","begin":[704,4],"end":[706,5]},"visibility":"public","docs":"Formats the combined date and time with the specified format string.\nSee the [`crate::format::strftime`] module\non the supported escape sequences.\n\n# Example\n```rust\nuse chrono::prelude::*;\n\nlet date_time: DateTime<Utc> = Utc.with_ymd_and_hms(2017, 04, 02, 12, 50, 32).unwrap();\nlet formatted = format!(\"{}\", date_time.format(\"%d/%m/%Y %H:%M\"));\nassert_eq!(formatted, \"02/04/2017 12:50\");\n```","links":{"`crate::format::strftime`":"0:725:2667"},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]","#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["fmt",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2291:2080","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2272:2082","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1241:4950":{"id":"0:1241:4950","crate_id":0,"name":"overflowing_sub_signed","span":{"filename":"src/naive/time/mod.rs","begin":[578,4],"end":[581,5]},"visibility":"public","docs":"Subtracts given `Duration` from the current time,\nand also returns the number of *seconds*\nin the integral number of days ignored from the subtraction.\n(We cannot return `Duration` because it is subject to overflow or underflow.)\n\n# Example\n\n```\nuse chrono::{Duration, NaiveTime};\n\nlet from_hms = NaiveTime::from_hms;\n\nassert_eq!(from_hms(3, 4, 5).overflowing_sub_signed(Duration::hours(2)),\n           (from_hms(1, 4, 5), 0));\nassert_eq!(from_hms(3, 4, 5).overflowing_sub_signed(Duration::hours(17)),\n           (from_hms(10, 4, 5), 86_400));\nassert_eq!(from_hms(3, 4, 5).overflowing_sub_signed(Duration::hours(-22)),\n           (from_hms(1, 4, 5), -86_400));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"tuple","inner":[{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},{"kind":"primitive","inner":"i64"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2545:126":{"id":"2:2545:126","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Infallible","id":"2:31780:7426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:2466:1923":{"id":"0:2466:1923","crate_id":0,"name":"NaiveTime","span":{"filename":"src/naive/time/mod.rs","begin":[192,0],"end":[195,1]},"visibility":"public","docs":"ISO 8601 time without timezone.\nAllows for the nanosecond precision and optional leap second representation.\n\n# Leap Second Handling\n\nSince 1960s, the manmade atomic clock has been so accurate that\nit is much more accurate than Earth's own motion.\nIt became desirable to define the civil time in terms of the atomic clock,\nbut that risks the desynchronization of the civil time from Earth.\nTo account for this, the designers of the Coordinated Universal Time (UTC)\nmade that the UTC should be kept within 0.9 seconds of the observed Earth-bound time.\nWhen the mean solar day is longer than the ideal (86,400 seconds),\nthe error slowly accumulates and it is necessary to add a **leap second**\nto slow the UTC down a bit.\n(We may also remove a second to speed the UTC up a bit, but it never happened.)\nThe leap second, if any, follows 23:59:59 of June 30 or December 31 in the UTC.\n\nFast forward to the 21st century,\nwe have seen 26 leap seconds from January 1972 to December 2015.\nYes, 26 seconds. Probably you can read this paragraph within 26 seconds.\nBut those 26 seconds, and possibly more in the future, are never predictable,\nand whether to add a leap second or not is known only before 6 months.\nInternet-based clocks (via NTP) do account for known leap seconds,\nbut the system API normally doesn't (and often can't, with no network connection)\nand there is no reliable way to retrieve leap second information.\n\nChrono does not try to accurately implement leap seconds; it is impossible.\nRather, **it allows for leap seconds but behaves as if there are *no other* leap seconds.**\nVarious operations will ignore any possible leap second(s)\nexcept when any of the operands were actually leap seconds.\n\nIf you cannot tolerate this behavior,\nyou must use a separate `TimeZone` for the International Atomic Time (TAI).\nTAI is like UTC but has no leap seconds, and thus slightly differs from UTC.\nChrono does not yet provide such implementation, but it is planned.\n\n## Representing Leap Seconds\n\nThe leap second is indicated via fractional seconds more than 1 second.\nThis makes possible to treat a leap second as the prior non-leap second\nif you don't care about sub-second accuracy.\nYou should use the proper formatting to get the raw leap second.\n\nAll methods accepting fractional seconds will accept such values.\n\n```\nuse chrono::{NaiveDate, NaiveTime, Utc, TimeZone};\n\nlet t = NaiveTime::from_hms_milli_opt(8, 59, 59, 1_000).unwrap();\n\nlet dt1 = NaiveDate::from_ymd_opt(2015, 7, 1).unwrap().and_hms_micro_opt(8, 59, 59, 1_000_000).unwrap();\n\nlet dt2 = NaiveDate::from_ymd_opt(2015, 6, 30).unwrap().and_hms_nano_opt(23, 59, 59, 1_000_000_000).unwrap().and_local_timezone(Utc).unwrap();\n# let _ = (t, dt1, dt2);\n```\n\nNote that the leap second can happen anytime given an appropriate time zone;\n2015-07-01 01:23:60 would be a proper leap second if UTC+01:24 had existed.\nPractically speaking, though, by the time of the first leap second on 1972-06-30,\nevery time zone offset around the world has standardized to the 5-minute alignment.\n\n## Date And Time Arithmetics\n\nAs a concrete example, let's assume that `03:00:60` and `04:00:60` are leap seconds.\nIn reality, of course, leap seconds are separated by at least 6 months.\nWe will also use some intuitive concise notations for the explanation.\n\n`Time + Duration`\n(short for [`NaiveTime::overflowing_add_signed`](#method.overflowing_add_signed)):\n\n- `03:00:00 + 1s = 03:00:01`.\n- `03:00:59 + 60s = 03:02:00`.\n- `03:00:59 + 1s = 03:01:00`.\n- `03:00:60 + 1s = 03:01:00`.\n  Note that the sum is identical to the previous.\n- `03:00:60 + 60s = 03:01:59`.\n- `03:00:60 + 61s = 03:02:00`.\n- `03:00:60.1 + 0.8s = 03:00:60.9`.\n\n`Time - Duration`\n(short for [`NaiveTime::overflowing_sub_signed`](#method.overflowing_sub_signed)):\n\n- `03:00:00 - 1s = 02:59:59`.\n- `03:01:00 - 1s = 03:00:59`.\n- `03:01:00 - 60s = 03:00:00`.\n- `03:00:60 - 60s = 03:00:00`.\n  Note that the result is identical to the previous.\n- `03:00:60.7 - 0.4s = 03:00:60.3`.\n- `03:00:60.7 - 0.9s = 03:00:59.8`.\n\n`Time - Time`\n(short for [`NaiveTime::signed_duration_since`](#method.signed_duration_since)):\n\n- `04:00:00 - 03:00:00 = 3600s`.\n- `03:01:00 - 03:00:00 = 60s`.\n- `03:00:60 - 03:00:00 = 60s`.\n  Note that the difference is identical to the previous.\n- `03:00:60.6 - 03:00:59.4 = 1.2s`.\n- `03:01:00 - 03:00:59.8 = 0.2s`.\n- `03:01:00 - 03:00:60.5 = 0.5s`.\n  Note that the difference is larger than the previous,\n  even though the leap second clearly follows the previous whole second.\n- `04:00:60.9 - 03:00:60.1 =\n  (04:00:60.9 - 04:00:00) + (04:00:00 - 03:01:00) + (03:01:00 - 03:00:60.1) =\n  60.9s + 3540s + 0.9s = 3601.8s`.\n\nIn general,\n\n- `Time + Duration` unconditionally equals to `Duration + Time`.\n\n- `Time - Duration` unconditionally equals to `Time + (-Duration)`.\n\n- `Time1 - Time2` unconditionally equals to `-(Time2 - Time1)`.\n\n- Associativity does not generally hold, because\n  `(Time + Duration1) - Duration2` no longer equals to `Time + (Duration1 - Duration2)`\n  for two positive durations.\n\n    - As a special case, `(Time + Duration) - Duration` also does not equal to `Time`.\n\n    - If you can assume that all durations have the same sign, however,\n      then the associativity holds:\n      `(Time + Duration1) + Duration2` equals to `Time + (Duration1 + Duration2)`\n      for two positive durations.\n\n## Reading And Writing Leap Seconds\n\nThe \"typical\" leap seconds on the minute boundary are\ncorrectly handled both in the formatting and parsing.\nThe leap second in the human-readable representation\nwill be represented as the second part being 60, as required by ISO 8601.\n\n```\nuse chrono::{Utc, TimeZone, NaiveDate};\n\nlet dt = NaiveDate::from_ymd_opt(2015, 6, 30).unwrap().and_hms_milli_opt(23, 59, 59, 1_000).unwrap().and_local_timezone(Utc).unwrap();\nassert_eq!(format!(\"{:?}\", dt), \"2015-06-30T23:59:60Z\");\n```\n\nThere are hypothetical leap seconds not on the minute boundary\nnevertheless supported by Chrono.\nThey are allowed for the sake of completeness and consistency;\nthere were several \"exotic\" time zone offsets with fractional minutes prior to UTC after all.\nFor such cases the human-readable representation is ambiguous\nand would be read back to the next non-leap second.\n\n```\nuse chrono::{DateTime, Utc, TimeZone, NaiveDate};\n\nlet dt = NaiveDate::from_ymd_opt(2015, 6, 30).unwrap().and_hms_milli_opt(23, 56, 4, 1_000).unwrap().and_local_timezone(Utc).unwrap();\nassert_eq!(format!(\"{:?}\", dt), \"2015-06-30T23:56:05Z\");\n\nlet dt = Utc.with_ymd_and_hms(2015, 6, 30, 23, 56, 5).unwrap();\nassert_eq!(format!(\"{:?}\", dt), \"2015-06-30T23:56:05Z\");\nassert_eq!(DateTime::parse_from_rfc3339(\"2015-06-30T23:56:05Z\").unwrap(), dt);\n```\n\nSince Chrono alone cannot determine any existence of leap seconds,\n**there is absolutely no guarantee that the leap second read has actually happened**.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:1226","a:2:8179:7659-0:2466:1923","a:2:2672:217-0:2466:1923","a:2:2736:7564-0:2466:1923","a:2:2686:225-0:2466:1923","a:2:8178:7660-0:2466:1923","b:0:1771-0:2466:1923","b:2:2531-0:2466:1923","b:2:2542-0:2466:1923","b:2:2527-0:2466:1923","b:2:3331-0:2466:1923","b:2:2240-0:2466:1923","b:2:2537-0:2466:1923","b:2:2237-0:2466:1923","b:5:5633-0:2466:1923","b:5:674-0:2466:1923","0:2470","0:1266","0:2472","0:1253","0:1281","0:1360","0:1285","0:1268","0:1271","0:2482","0:2480","0:2473","0:2483","0:1263","0:2469","0:1363","0:2478","0:2475","0:1273","0:1279","0:1276"]}},"a:2:2672:217-0:2305:1937":{"id":"a:2:2672:217-0:2305:1937","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Days","id":"0:2305:1937","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2736:7564-0:2272:2082":{"id":"a:2:2736:7564-0:2272:2082","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:7564","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2272:2082","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:150":{"id":"0:150","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[477,0],"end":[484,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Add","id":"2:2765:2072","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Duration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:152:183","0:153:271"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:97":{"id":"0:97","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[310,0],"end":[371,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Tz"},"trait":{"name":"","id":"0:1722:1925","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Display","id":"2:9074:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:99:2214","0:103:670"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2208:2829":{"id":"0:2208:2829","crate_id":0,"name":"NotEnough","span":{"filename":"src/format/mod.rs","begin":[375,4],"end":[375,13]},"visibility":"default","docs":"Given set of fields is not enough to make a requested date and time value.\n\nNote that there *may* be a case that given fields constrain the possible values so much\nthat there is a unique possible value. Chrono only tries to be correct for\nmost useful sets of fields however, as such constraint solving can be expensive.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:1272:1396":{"id":"0:1272:1396","crate_id":0,"name":"sub_assign","span":{"filename":"src/naive/time/mod.rs","begin":[1090,4],"end":[1092,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:8-0:1881:1908":{"id":"0:8-0:1881:1908","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[433,4],"end":[433,24]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]","#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::Date","name":"Date","id":"0:1881:1908","glob":false}},"0:1693:5938":{"id":"0:1693:5938","crate_id":0,"name":"offset_from_utc_date","span":{"filename":"src/offset/utc.rs","begin":[101,4],"end":[103,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["_utc",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:2783:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2823":{"id":"0:2823","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[41,40],"end":[41,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::cmp::Eq","id":"2:2306:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2306:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2797:1940","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2821":{"id":"0:2821","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[41,40],"end":[41,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2683:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2797:1940","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2819":{"id":"0:2819","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[41,34],"end":[41,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::marker::Copy","id":"2:2684:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2684:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2797:1940","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"5:5635:1434":{"id":"5:5635:1434","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7239:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8178:7660-0:1959:2507":{"id":"a:2:8178:7660-0:1959:2507","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8178:7660","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:1959:2507","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2062:2776":{"id":"0:2062:2776","crate_id":0,"name":"TimezoneOffsetZ","span":{"filename":"src/format/mod.rs","begin":[240,4],"end":[240,19]},"visibility":"default","docs":"Same as [`TimezoneOffsetColonZ`](#variant.TimezoneOffsetColonZ) but prints no colon.\nParsing allows an optional colon.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:2079":{"id":"0:2079","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[170,31],"end":[170,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9069:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2029:2284","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2080:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3331-0:2186:1934":{"id":"b:2:3331-0:2186:1934","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3329:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2186:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3333:1470"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1088:183":{"id":"0:1088:183","crate_id":0,"name":"Output","span":{"filename":"src/naive/datetime/mod.rs","begin":[1575,4],"end":[1575,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:2928:2886":{"id":"0:2928:2886","crate_id":0,"name":"December","span":{"filename":"src/month.rs","begin":[58,4],"end":[58,17]},"visibility":"default","docs":"December","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":{"expr":"11","value":"11"}}},"0:1836":{"id":"0:1836","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[198,0],"end":[203,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Months","id":"0:2945:1947","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1837:929"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1868:2131":{"id":"0:1868:2131","crate_id":0,"name":"hour","span":{"filename":"src/traits.rs","begin":[124,4],"end":[124,26]},"visibility":"default","docs":"Returns the hour number from 0 to 23.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:1870:2538":{"id":"0:1870:2538","crate_id":0,"name":"minute","span":{"filename":"src/traits.rs","begin":[139,4],"end":[139,28]},"visibility":"default","docs":"Returns the minute number from 0 to 59.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:2530:2607":{"id":"2:2530:2607","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2504:131"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:302:2230":{"id":"0:302:2230","crate_id":0,"name":"year","span":{"filename":"src/datetime/mod.rs","begin":[750,4],"end":[752,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:421:670":{"id":"0:421:670","crate_id":0,"name":"format","span":{"filename":"src/format/mod.rs","begin":[4,0],"end":[1079,1]},"visibility":"public","docs":"Formatting (and parsing) utilities for date and time.\n\nThis module provides the common types and routines to implement,\nfor example, [`DateTime::format`](../struct.DateTime.html#method.format) or\n[`DateTime::parse_from_str`](../struct.DateTime.html#method.parse_from_str) methods.\nFor most cases you should use these high-level interfaces.\n\nInternally the formatting and parsing shares the same abstract **formatting items**,\nwhich are just an [`Iterator`](https://doc.rust-lang.org/std/iter/trait.Iterator.html) of\nthe [`Item`](./enum.Item.html) type.\nThey are generated from more readable **format strings**;\ncurrently Chrono supports a built-in syntax closely resembling\nC's `strftime` format. The available options can be found [here](./strftime/index.html).\n\n# Example\n```rust\n# use std::error::Error;\nuse chrono::prelude::*;\n\nlet date_time = Utc.with_ymd_and_hms(2020, 11, 10, 0, 1, 32).unwrap();\n\nlet formatted = format!(\"{}\", date_time.format(\"%Y-%m-%d %H:%M:%S\"));\nassert_eq!(formatted, \"2020-11-10 00:01:32\");\n\nlet parsed = Utc.datetime_from_str(&formatted, \"%Y-%m-%d %H:%M:%S\")?;\nassert_eq!(parsed, date_time);\n# Ok::<(), chrono::ParseError>(())\n```","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:725:2667","0:441-0:636:2282","0:442-0:2234:2283","0:443-0:2272:2082","0:1938:2508","0:1959:2507","0:2016:2727","0:2029:2284","0:2084:2779","0:2143:2081","0:2186:1934","0:2203:2817","0:455:1935","0:476:2904","0:529:670","0:2291:2080"],"is_stripped":false}},"0:2009":{"id":"0:2009","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[99,27],"end":[99,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2306:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:1959:2507","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2451":{"id":"0:2451","crate_id":0,"name":null,"span":{"filename":"src/naive/isoweek.rs","begin":[19,9],"end":[19,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2301:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"IsoWeek","id":"0:2448:1938","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IsoWeek","id":"0:2448:1938","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2452:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1816:6860":{"id":"0:1816:6860","crate_id":0,"name":"from_u64","span":{"filename":"src/weekday.rs","begin":[153,4],"end":[164,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["n",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2848:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2174":{"id":"0:2174","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[288,27],"end":[288,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2683:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2143:2081","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1268":{"id":"0:1268","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[1079,0],"end":[1086,1]},"visibility":"default","docs":"A subtraction of `Duration` from `NaiveTime` wraps around and never overflows or underflows.\nIn particular the addition ignores integral number of days.\nIt is the same as the addition with a negated `Duration`.\n\nAs a part of Chrono's [leap second handling](#leap-second-handling),\nthe addition assumes that **there is no leap second ever**,\nexcept when the `NaiveTime` itself represents a leap second\nin which case the assumption becomes that **there is exactly a single leap second ever**.\n\n# Example\n\n```\nuse chrono::{Duration, NaiveTime};\n\nlet from_hmsm = NaiveTime::from_hms_milli;\n\nassert_eq!(from_hmsm(3, 5, 7, 0) - Duration::zero(),                  from_hmsm(3, 5, 7, 0));\nassert_eq!(from_hmsm(3, 5, 7, 0) - Duration::seconds(1),              from_hmsm(3, 5, 6, 0));\nassert_eq!(from_hmsm(3, 5, 7, 0) - Duration::seconds(60 + 5),         from_hmsm(3, 4, 2, 0));\nassert_eq!(from_hmsm(3, 5, 7, 0) - Duration::seconds(2*60*60 + 6*60), from_hmsm(0, 59, 7, 0));\nassert_eq!(from_hmsm(3, 5, 7, 0) - Duration::milliseconds(80),        from_hmsm(3, 5, 6, 920));\nassert_eq!(from_hmsm(3, 5, 7, 950) - Duration::milliseconds(280),     from_hmsm(3, 5, 7, 670));\n```\n\nThe subtraction wraps around.\n\n```\n# use chrono::{Duration, NaiveTime};\n# let from_hmsm = NaiveTime::from_hms_milli;\nassert_eq!(from_hmsm(3, 5, 7, 0) - Duration::seconds(8*60*60), from_hmsm(19, 5, 7, 0));\nassert_eq!(from_hmsm(3, 5, 7, 0) - Duration::days(800),        from_hmsm(3, 5, 7, 0));\n```\n\nLeap seconds are handled, but the subtraction assumes that it is the only leap second happened.\n\n```\n# use chrono::{Duration, NaiveTime};\n# let from_hmsm = NaiveTime::from_hms_milli;\nlet leap = from_hmsm(3, 5, 59, 1_300);\nassert_eq!(leap - Duration::zero(),            from_hmsm(3, 5, 59, 1_300));\nassert_eq!(leap - Duration::milliseconds(200), from_hmsm(3, 5, 59, 1_100));\nassert_eq!(leap - Duration::milliseconds(500), from_hmsm(3, 5, 59, 800));\nassert_eq!(leap - Duration::seconds(60),       from_hmsm(3, 5, 0, 300));\nassert_eq!(leap - Duration::days(1),           from_hmsm(3, 6, 0, 300));\n```","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:2770:2074","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Duration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1269:183","0:1270:1395"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:234:2364":{"id":"0:234:2364","crate_id":0,"name":"timestamp_millis","span":{"filename":"src/datetime/mod.rs","begin":[214,4],"end":[216,5]},"visibility":"public","docs":"Returns the number of non-leap-milliseconds since January 1, 1970 UTC\n\nNote that this does reduce the number of years that can be represented\nfrom ~584 Billion to ~584 Million. (If this is a problem, please file\nan issue to let me know what domain needs millisecond precision over\nbillions of years, I'm curious.)\n\n# Example\n\n```\nuse chrono::{Utc, TimeZone, NaiveDate};\n\nlet dt = NaiveDate::from_ymd_opt(1970, 1, 1).unwrap().and_hms_milli_opt(0, 0, 1, 444).unwrap().and_local_timezone(Utc).unwrap();\nassert_eq!(dt.timestamp_millis(), 1_444);\n\nlet dt = NaiveDate::from_ymd_opt(2001, 9, 9).unwrap().and_hms_milli_opt(1, 46, 40, 555).unwrap().and_local_timezone(Utc).unwrap();\nassert_eq!(dt.timestamp_millis(), 1_000_000_000_555);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:253:2123":{"id":"0:253:2123","crate_id":0,"name":"naive_local","span":{"filename":"src/datetime/mod.rs","begin":[394,4],"end":[396,5]},"visibility":"public","docs":"Returns a view to the naive local datetime.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:745":{"id":"0:745","crate_id":0,"name":null,"span":{"filename":"src/format/strftime.rs","begin":[272,0],"end":[501,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["rposition","try_for_each","try_collect","map_while","take","for_each","collect","next_chunk","cloned","eq","eq_by","unzip","fold","collect_into","enumerate","flat_map","count","filter","advance_by","min_by","cmp","scan","all","ne","is_sorted","skip","copied","reduce","partition","flatten","any","filter_map","nth","min_by_key","le","map","is_sorted_by","array_chunks","rev","try_reduce","partition_in_place","fuse","peekable","step_by","max_by","size_hint","position","gt","is_sorted_by_key","product","find_map","is_partitioned","last","inspect","skip_while","zip","intersperse","max_by_key","cycle","sum","min","find","__iterator_get_unchecked","cmp_by","try_find","partial_cmp","try_fold","ge","by_ref","take_while","max","intersperse_with","chain","partial_cmp_by","lt"],"trait":{"name":"Iterator","id":"2:7245:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2272:2082","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:747:2081","0:748:943"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:8179:7659-0:2234:2283":{"id":"a:2:8179:7659-0:2234:2283","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8179:7659","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Parsed","id":"0:2234:2283","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1889:2290":{"id":"0:1889:2290","crate_id":0,"name":"Secs","span":{"filename":"src/datetime/mod.rs","begin":[58,4],"end":[58,8]},"visibility":"default","docs":"Format whole seconds only, with no decimal point nor subseconds.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:2163:1583":{"id":"0:2163:1583","crate_id":0,"name":"0","span":{"filename":"src/format/mod.rs","begin":[306,10],"end":[306,15]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2029:2284","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:2228":{"id":"0:2228","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[359,34],"end":[359,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2306:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2203:2817","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:8179:7659-0:2291:2080":{"id":"a:2:8179:7659-0:2291:2080","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8179:7659","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8179:7659","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2291:2080","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:287:2479":{"id":"0:287:2479","crate_id":0,"name":"to_rfc2822","span":{"filename":"src/datetime/mod.rs","begin":[591,4],"end":[596,5]},"visibility":"public","docs":"Returns an RFC 2822 date and time string such as `Tue, 1 Jul 2003 10:52:37 +0200`.","links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7239:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2291:2080":{"id":"0:2291:2080","crate_id":0,"name":"DelayedFormat","span":{"filename":"src/format/mod.rs","begin":[851,0],"end":[865,1]},"visibility":"public","docs":"A *temporary* object which can be used as an argument to `format!` or others.\nThis is normally constructed via `format` methods of each date and time type.","links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:754","a:2:8179:7659-0:2291:2080","a:2:2672:217-0:2291:2080","a:2:2736:7564-0:2291:2080","a:2:2686:225-0:2291:2080","a:2:8178:7660-0:2291:2080","b:2:2531-0:2291:2080","b:2:2542-0:2291:2080","b:2:2527-0:2291:2080","b:2:3331-0:2291:2080","b:2:2240-0:2291:2080","b:2:2537-0:2291:2080","b:2:2237-0:2291:2080","b:5:5633-0:2291:2080","0:761","0:2297"]}},"0:827:1928":{"id":"0:827:1928","crate_id":0,"name":"MIN_DATE","span":{"filename":"src/naive/date.rs","begin":[195,0],"end":[195,47]},"visibility":"public","docs":"The minimum possible `NaiveDate` (January 1, 262145 BCE).","links":{},"attrs":["#[deprecated(since = \"0.4.20\", note = \"Use NaiveDate::MIN instead\")]"],"deprecation":{"since":"0.4.20","note":"Use NaiveDate::MIN instead"},"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"NaiveDate::MIN","value":null,"is_literal":false}},"0:2453":{"id":"0:2453","crate_id":0,"name":null,"span":{"filename":"src/naive/isoweek.rs","begin":[19,20],"end":[19,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2683:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IsoWeek","id":"0:2448:1938","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2969":{"id":"0:2969","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[206,16],"end":[206,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2301:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ParseMonthError","id":"0:2964:1948","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseMonthError","id":"0:2964:1948","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2970:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2048:2524":{"id":"0:2048:2524","crate_id":0,"name":"Nanosecond9","span":{"filename":"src/format/mod.rs","begin":[205,4],"end":[205,15]},"visibility":"default","docs":"Same as [`Nanosecond`](#variant.Nanosecond) but the accuracy is fixed to 9.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:2182":{"id":"0:2182","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[288,38],"end":[288,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9289:139","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2143:2081","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:2184:720"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:288:2484":{"id":"0:288:2484","crate_id":0,"name":"to_rfc3339","span":{"filename":"src/datetime/mod.rs","begin":[601,4],"end":[606,5]},"visibility":"public","docs":"Returns an RFC 3339 and ISO 8601 date and time string such as `1996-12-19T16:39:57-08:00`.","links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7239:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1094:1395":{"id":"0:1094:1395","crate_id":0,"name":"sub","span":{"filename":"src/naive/datetime/mod.rs","begin":[1618,4],"end":[1620,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"Months","id":"0:2945:1947","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:2770:2074","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1712:2121":{"id":"0:1712:2121","crate_id":0,"name":"and_time","span":{"filename":"src/offset/mod.rs","begin":[95,4],"end":[102,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date and given `NaiveTime`.\nThe offset in the current date is preserved.\n\nPropagates any error. Ambiguous result would be discarded.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["time",{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2797:1940","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2873":{"id":"0:2873","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[11,20],"end":[11,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2683:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2848:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:308:2235":{"id":"0:308:2235","crate_id":0,"name":"ordinal0","span":{"filename":"src/datetime/mod.rs","begin":[774,4],"end":[776,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:674-0:1959:2507":{"id":"b:5:674-0:1959:2507","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:670:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:1959:2507","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:676:8076","5:677:8077","5:678:8078"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:109:2231":{"id":"0:109:2231","crate_id":0,"name":"month0","span":{"filename":"src/date.rs","begin":[383,4],"end":[385,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:596:2458":{"id":"0:596:2458","crate_id":0,"name":"to_datetime","span":{"filename":"src/format/parsed.rs","begin":[624,4],"end":[639,5]},"visibility":"public","docs":"Returns a parsed timezone-aware date and time out of given fields.\n\nThis method is able to determine the combined date and time\nfrom date and time fields or a single [`timestamp`](#structfield.timestamp) field,\nplus a time zone offset.\nEither way those fields have to be consistent to each other.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:455:1935","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2013":{"id":"0:2013","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[99,38],"end":[99,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9289:139","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:1959:2507","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2014:720"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:8178:7660-0:2291:2080":{"id":"a:2:8178:7660-0:2291:2080","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:8178:7660","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8178:7660","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2291:2080","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1856:2235":{"id":"0:1856:2235","crate_id":0,"name":"ordinal0","span":{"filename":"src/traits.rs","begin":[48,4],"end":[48,30]},"visibility":"default","docs":"Returns the day of year starting from 0.\n\nThe return value ranges from 0 to 365. (The last day of year differs by years.)","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:1970:2698":{"id":"0:1970:2698","crate_id":0,"name":"IsoYearMod100","span":{"filename":"src/format/mod.rs","begin":[114,4],"end":[114,17]},"visibility":"default","docs":"Year in the ISO week date, modulo 100 (FW=PW=2). Cannot be negative.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"2:11874:38823":{"id":"2:11874:38823","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:563:3072":{"id":"0:563:3072","crate_id":0,"name":"set_isoyear","span":{"filename":"src/format/parsed.rs","begin":[160,4],"end":[162,5]},"visibility":"public","docs":"Tries to set the [`isoyear`](#structfield.isoyear) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["value",{"kind":"primitive","inner":"i64"}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:455:1935","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11900:36804":{"id":"2:11900:36804","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:11899:36816"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitAsciiWhitespace","id":"2:42928:7332","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:289:2504":{"id":"0:289:2504","crate_id":0,"name":"to_rfc3339_opts","span":{"filename":"src/datetime/mod.rs","begin":[634,4],"end":[674,5]},"visibility":"public","docs":"Return an RFC 3339 and ISO 8601 date and time string with subseconds\nformatted as per a `SecondsFormat`.\n\nIf passed `use_z` true and the timezone is UTC (offset 0), use 'Z', as\nper [`Fixed::TimezoneOffsetColonZ`] If passed `use_z` false, use\n[`Fixed::TimezoneOffsetColon`]\n\n# Examples\n\n```rust\n# use chrono::{DateTime, FixedOffset, SecondsFormat, TimeZone, Utc, NaiveDate};\nlet dt = NaiveDate::from_ymd_opt(2018, 1, 26).unwrap().and_hms_micro_opt(18, 30, 9, 453_829).unwrap().and_local_timezone(Utc).unwrap();\nassert_eq!(dt.to_rfc3339_opts(SecondsFormat::Millis, false),\n           \"2018-01-26T18:30:09.453+00:00\");\nassert_eq!(dt.to_rfc3339_opts(SecondsFormat::Millis, true),\n           \"2018-01-26T18:30:09.453Z\");\nassert_eq!(dt.to_rfc3339_opts(SecondsFormat::Secs, true),\n           \"2018-01-26T18:30:09Z\");\n\nlet pst = FixedOffset::east_opt(8 * 60 * 60).unwrap();\nlet dt = pst.from_local_datetime(&NaiveDate::from_ymd_opt(2018, 1, 26).unwrap().and_hms_micro_opt(10, 30, 9, 453_829).unwrap()).unwrap();\nassert_eq!(dt.to_rfc3339_opts(SecondsFormat::Secs, true),\n           \"2018-01-26T10:30:09+08:00\");\n```","links":{"`Fixed::TimezoneOffsetColonZ`":"0:2058:2527","`Fixed::TimezoneOffsetColon`":"0:2052:2528"},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["secform",{"kind":"resolved_path","inner":{"name":"SecondsFormat","id":"0:1888:1914","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["use_z",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7239:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2799:176":{"id":"0:2799:176","crate_id":0,"name":"None","span":{"filename":"src/offset/mod.rs","begin":[45,4],"end":[45,8]},"visibility":"default","docs":"Given local time representation is invalid.\nThis can occur when, for example, the positive timezone transition.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:2362:4288":{"id":"0:2362:4288","crate_id":0,"name":"NaiveDateWeeksIterator","span":{"filename":"src/naive/date.rs","begin":[1833,0],"end":[1835,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":[]}},"0:921":{"id":"0:921","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[1713,0],"end":[1719,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:2770:2074","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Days","id":"0:2305:1937","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:922:183","0:923:1395"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11882:311":{"id":"2:11882:311","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:11883:30352","`u8`":"1:11889:1478"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1093:183":{"id":"0:1093:183","crate_id":0,"name":"Output","span":{"filename":"src/naive/datetime/mod.rs","begin":[1616,4],"end":[1616,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:2000:2726":{"id":"0:2000:2726","crate_id":0,"name":"Internal","span":{"filename":"src/format/mod.rs","begin":[151,4],"end":[151,29]},"visibility":"default","docs":"Internal uses only.\n\nThis item exists so that one can add additional internal-only formatting\nwithout breaking major compatibility (as enum variants cannot be selectively private).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":{"tuple":["0:2002:1583"]},"discriminant":null}},"a:2:2736:7564-0:2776:1909":{"id":"a:2:2736:7564-0:2776:1909","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:7564","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Local","id":"0:2776:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2970:604":{"id":"0:2970:604","crate_id":0,"name":"eq","span":{"filename":"src/month.rs","begin":[206,16],"end":[206,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ParseMonthError","id":"0:2964:1948","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1849:2230":{"id":"0:1849:2230","crate_id":0,"name":"year","span":{"filename":"src/traits.rs","begin":[6,4],"end":[6,26]},"visibility":"default","docs":"Returns the year number in the [calendar date](./naive/struct.NaiveDate.html#calendar-date).","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:2686:225-0:2186:1934":{"id":"a:2:2686:225-0:2186:1934","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2186:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:69:2153":{"id":"0:69:2153","crate_id":0,"name":"and_hms_micro_opt","span":{"filename":"src/date.rs","begin":[157,4],"end":[165,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date, hour, minute, second and microsecond.\nThe microsecond part can exceed 1,000,000 in order to represent the leap second.\nThe offset in the current date is preserved.\n\nReturns `None` on invalid hour, minute, second and/or microsecond.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["hour",{"kind":"primitive","inner":"u32"}],["min",{"kind":"primitive","inner":"u32"}],["sec",{"kind":"primitive","inner":"u32"}],["micro",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1872:2540":{"id":"0:1872:2540","crate_id":0,"name":"nanosecond","span":{"filename":"src/traits.rs","begin":[147,4],"end":[147,32]},"visibility":"default","docs":"Returns the number of nanoseconds since the whole non-leap second.\nThe range from 1,000,000,000 to 1,999,999,999 represents\nthe [leap second](./naive/struct.NaiveTime.html#leap-second-handling).","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"5:5372":{"id":"5:5372","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["5:5373:39492","5:5374:13436","5:5377:39493","5:5380:2935","5:5388:39494","5:5389:39495","5:5390:6394","5:5391:30156","5:5392:30155"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2097:720":{"id":"0:2097:720","crate_id":0,"name":"hash","span":{"filename":"src/format/mod.rs","begin":[254,38],"end":[254,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9297:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2686:225-0:2203:2817":{"id":"a:2:2686:225-0:2203:2817","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2203:2817","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:5-20:296:120":{"id":"0:5-20:296:120","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[419,18],"end":[419,26]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"oldtime::Duration","name":"Duration","id":"20:296:120","glob":false}},"0:1800-0:2830:1943":{"id":"0:1800-0:2830:1943","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[487,31],"end":[487,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"round::RoundingError","name":"RoundingError","id":"0:2830:1943","glob":false}},"0:2463":{"id":"0:2463","crate_id":0,"name":null,"span":{"filename":"src/naive/isoweek.rs","begin":[19,54],"end":[19,58]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9289:139","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IsoWeek","id":"0:2448:1938","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2464:720"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1736:2381":{"id":"0:1736:2381","crate_id":0,"name":"timestamp_nanos","span":{"filename":"src/offset/mod.rs","begin":[416,4],"end":[423,5]},"visibility":"default","docs":"Makes a new `DateTime` from the number of non-leap nanoseconds\nsince January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\").\n\nUnlike [`timestamp_millis`](#method.timestamp_millis), this never\npanics.\n\n# Example\n\n```\nuse chrono::{Utc, TimeZone};\n\nassert_eq!(Utc.timestamp_nanos(1431648000000000).timestamp(), 1431648);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["nanos",{"kind":"primitive","inner":"i64"}]],"output":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1858:2236":{"id":"0:1858:2236","crate_id":0,"name":"iso_week","span":{"filename":"src/traits.rs","begin":[54,4],"end":[54,34]},"visibility":"default","docs":"Returns the ISO week.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"IsoWeek","id":"0:2448:1938","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:2736:7564-0:2029:2284":{"id":"a:2:2736:7564-0:2029:2284","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:7564","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2029:2284","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2686:225-0:1881:1908":{"id":"a:2:2686:225-0:1881:1908","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Tz"},"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:240:978":{"id":"0:240:978","crate_id":0,"name":"offset","span":{"filename":"src/datetime/mod.rs","begin":[296,4],"end":[298,5]},"visibility":"public","docs":"Retrieves an associated offset from UTC.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Tz"},"trait":{"name":"","id":"0:1722:1925","args":null}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:401:125":{"id":"0:401:125","crate_id":0,"name":"Err","span":{"filename":"src/datetime/mod.rs","begin":[1015,4],"end":[1015,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2186:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:577:3104":{"id":"0:577:3104","crate_id":0,"name":"set_second","span":{"filename":"src/format/parsed.rs","begin":[259,4],"end":[261,5]},"visibility":"public","docs":"Tries to set the [`second`](#structfield.second) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["value",{"kind":"primitive","inner":"i64"}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:455:1935","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2537-0:2029:2284":{"id":"b:2:2537-0:2029:2284","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2029:2284","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2540:126","2:2541:1457"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8179:7659-0:2016:2727":{"id":"a:2:8179:7659-0:2016:2727","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8179:7659","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:2016:2727","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2542-0:2291:2080":{"id":"b:2:2542-0:2291:2080","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2291:2080","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:2545:126","2:2546:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:152:183":{"id":"0:152:183","crate_id":0,"name":"Output","span":{"filename":"src/date.rs","begin":[478,4],"end":[478,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}},"b:2:3331-0:2324:1921":{"id":"b:2:3331-0:2324:1921","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3329:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3333:1470"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2493":{"id":"0:2493","crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[25,24],"end":[25,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9289:139","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2494:720"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1346:1924":{"id":"0:1346:1924","crate_id":0,"name":"Offset","span":{"filename":"src/offset/fixed.rs","begin":[108,4],"end":[108,30]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:11886:30349":{"id":"2:11886:30349","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:40682:176"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9754:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9754:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:68:2151":{"id":"0:68:2151","crate_id":0,"name":"and_hms_micro","span":{"filename":"src/date.rs","begin":[147,4],"end":[149,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date, hour, minute, second and microsecond.\nThe microsecond part can exceed 1,000,000 in order to represent the leap second.\nThe offset in the current date is preserved.\n\nPanics on invalid hour, minute, second and/or microsecond.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"Use and_hms_micro_opt() instead\")]","#[inline]"],"deprecation":{"since":"0.4.23","note":"Use and_hms_micro_opt() instead"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["hour",{"kind":"primitive","inner":"u32"}],["min",{"kind":"primitive","inner":"u32"}],["sec",{"kind":"primitive","inner":"u32"}],["micro",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2338:422":{"id":"0:2338:422","crate_id":0,"name":"cmp","span":{"filename":"src/naive/date.rs","begin":[187,42],"end":[187,45]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Ordering","id":"2:30596:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2810:415":{"id":"0:2810:415","crate_id":0,"name":"clone","span":{"filename":"src/offset/mod.rs","begin":[41,9],"end":[41,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2797:1940","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2479:1023":{"id":"0:2479:1023","crate_id":0,"name":"partial_cmp","span":{"filename":"src/naive/time/mod.rs","begin":[190,30],"end":[190,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::option::Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Ordering","id":"2:30596:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2527-0:1881:1908":{"id":"b:2:2527-0:1881:1908","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["2:2530:2607"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2686:225-0:2084:2779":{"id":"a:2:2686:225-0:2084:2779","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2084:2779","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:355:422":{"id":"0:355:422","crate_id":0,"name":"cmp","span":{"filename":"src/datetime/mod.rs","begin":[895,4],"end":[897,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Ordering","id":"2:30596:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:774-0:455:1935":{"id":"0:774-0:455:1935","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[472,29],"end":[472,40]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"format::ParseResult","name":"ParseResult","id":"0:455:1935","glob":false}},"0:2895:2876":{"id":"0:2895:2876","crate_id":0,"name":"January","span":{"filename":"src/month.rs","begin":[36,4],"end":[36,15]},"visibility":"default","docs":"January","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":{"expr":"0","value":"0"}}},"2:11948:1960":{"id":"2:11948:1960","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:11573:1962","`DoubleEndedIterator`":"2:7167:119","prim@char":"1:11872:411","str::matches":"2:11948:1960"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"2:42849:7324","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11578:7280","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:835:3998":{"id":"0:835:3998","crate_id":0,"name":"from_yo","span":{"filename":"src/naive/date.rs","begin":[295,4],"end":[297,5]},"visibility":"public","docs":"Makes a new `NaiveDate` from the [ordinal date](#ordinal-date)\n(year and day of the year).\n\nPanics on the out-of-range date and/or invalid day of year.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `from_yo_opt()` instead\")]"],"deprecation":{"since":"0.4.23","note":"use `from_yo_opt()` instead"},"kind":"function","inner":{"decl":{"inputs":[["year",{"kind":"primitive","inner":"i32"}],["ordinal",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:458:659":{"id":"0:458:659","crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[398,4],"end":[409,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:9044:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:9033:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:873:2176":{"id":"0:873:2176","crate_id":0,"name":"pred_opt","span":{"filename":"src/naive/date.rs","begin":[976,4],"end":[978,5]},"visibility":"public","docs":"Makes a new `NaiveDate` for the previous calendar date.\n\nReturns `None` when `self` is the first representable date.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nassert_eq!(NaiveDate::from_ymd_opt(2015, 6, 3).unwrap().pred_opt(),\n           Some(NaiveDate::from_ymd_opt(2015, 6, 2).unwrap()));\nassert_eq!(NaiveDate::MIN.pred_opt(), None);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2537-0:2830:1943":{"id":"b:2:2537-0:2830:1943","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RoundingError","id":"0:2830:1943","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2540:126","2:2541:1457"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2143:2081":{"id":"0:2143:2081","crate_id":0,"name":"Item","span":{"filename":"src/format/mod.rs","begin":[289,0],"end":[309,1]},"visibility":"public","docs":"A single formatting item. This is used for both formatting and parsing.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"variants_stripped":false,"variants":["0:2145:2514","0:2148:2801","0:2151:2674","0:2154:2804","0:2157:2507","0:2161:2284","0:2164:126"],"impls":["a:2:8179:7659-0:2143:2081","a:2:2672:217-0:2143:2081","a:2:2736:7564-0:2143:2081","a:2:2686:225-0:2143:2081","a:2:8178:7660-0:2143:2081","b:2:2531-0:2143:2081","b:2:2542-0:2143:2081","b:2:2527-0:2143:2081","b:2:3331-0:2143:2081","b:2:2240-0:2143:2081","b:2:2537-0:2143:2081","b:2:2237-0:2143:2081","b:5:674-0:2143:2081","0:2174","0:2171","0:2179","0:2176","0:2182","0:2166","0:2169"]}},"0:2196":{"id":"0:2196","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[348,34],"end":[348,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2683:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2186:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2335":{"id":"0:2335","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[187,30],"end":[187,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","ge","le","lt"],"trait":{"name":"PartialOrd","id":"2:2343:186","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2336:1023"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2910:2880":{"id":"0:2910:2880","crate_id":0,"name":"June","span":{"filename":"src/month.rs","begin":[46,4],"end":[46,12]},"visibility":"default","docs":"June","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":{"expr":"5","value":"5"}}},"0:454:791":{"id":"0:454:791","crate_id":0,"name":"kind","span":{"filename":"src/format/mod.rs","begin":[353,4],"end":[355,5]},"visibility":"public","docs":"The category of parse error","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2203:2817","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2036:2744":{"id":"0:2036:2744","crate_id":0,"name":"LongWeekdayName","span":{"filename":"src/format/mod.rs","begin":[187,4],"end":[187,19]},"visibility":"default","docs":"Full day of the week names.\n\nPrints a full name in the title case, reads either a short or full name in any case.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:156:272":{"id":"0:156:272","crate_id":0,"name":"add_assign","span":{"filename":"src/date.rs","begin":[488,4],"end":[490,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2012:659":{"id":"0:2012:659","crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[99,31],"end":[99,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:9044:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:9033:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2072:415":{"id":"0:2072:415","crate_id":0,"name":"clone","span":{"filename":"src/format/mod.rs","begin":[170,9],"end":[170,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2029:2284","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2531-0:2143:2081":{"id":"b:2:2531-0:2143:2081","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2143:2081","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2533:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:901:2238":{"id":"0:901:2238","crate_id":0,"name":"with_month","span":{"filename":"src/naive/date.rs","begin":[1504,4],"end":[1506,5]},"visibility":"default","docs":"Makes a new `NaiveDate` with the month number (starting from 1) changed.\n\nReturns `None` when the resulting `NaiveDate` would be invalid.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().with_month(10),\n           Some(NaiveDate::from_ymd_opt(2015, 10, 8).unwrap()));\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().with_month(13), None); // no month 13\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 30).unwrap().with_month(2), None); // no February 30\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["month",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1022:2389":{"id":"0:1022:2389","crate_id":0,"name":"timestamp_subsec_micros","span":{"filename":"src/naive/datetime/mod.rs","begin":[521,4],"end":[523,5]},"visibility":"public","docs":"Returns the number of microseconds since the last whole non-leap second.\n\nThe return value ranges from 0 to 999,999,\nor for [leap seconds](./struct.NaiveTime.html#leap-second-handling), to 1,999,999.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet dt = NaiveDate::from_ymd_opt(2016, 7, 8).unwrap().and_hms_nano_opt(9, 10, 11, 123_456_789).unwrap();\nassert_eq!(dt.timestamp_subsec_micros(), 123_456);\n\nlet dt = NaiveDate::from_ymd_opt(2015, 7, 1).unwrap().and_hms_nano_opt(8, 59, 59, 1_234_567_890).unwrap();\nassert_eq!(dt.timestamp_subsec_micros(), 1_234_567);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2672:217-0:2776:1909":{"id":"a:2:2672:217-0:2776:1909","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Local","id":"0:2776:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:570:3087":{"id":"0:570:3087","crate_id":0,"name":"set_weekday","span":{"filename":"src/format/parsed.rs","begin":[208,4],"end":[210,5]},"visibility":"public","docs":"Tries to set the [`weekday`](#structfield.weekday) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["value",{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2848:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:455:1935","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2166":{"id":"0:2166","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[288,9],"end":[288,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2143:2081","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:2168:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:574:3097":{"id":"0:574:3097","crate_id":0,"name":"set_hour12","span":{"filename":"src/format/parsed.rs","begin":[234,4],"end":[239,5]},"visibility":"public","docs":"Tries to set the [`hour_mod_12`](#structfield.hour_mod_12) field from\ngiven hour number in 12-hour clocks.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["value",{"kind":"primitive","inner":"i64"}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:455:1935","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2686:225-0:2291:2080":{"id":"a:2:2686:225-0:2291:2080","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2291:2080","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2527-0:2324:1921":{"id":"b:2:2527-0:2324:1921","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2530:2607"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2400:415":{"id":"0:2400:415","crate_id":0,"name":"clone","span":{"filename":"src/naive/datetime/mod.rs","begin":[82,53],"end":[82,58]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1262:4833":{"id":"0:1262:4833","crate_id":0,"name":"num_seconds_from_midnight","span":{"filename":"src/naive/time/mod.rs","begin":[964,4],"end":[966,5]},"visibility":"default","docs":"Returns the number of non-leap seconds past the last midnight.\n\n# Example\n\n```\nuse chrono::{NaiveTime, Timelike};\n\nassert_eq!(NaiveTime::from_hms_opt(1, 2, 3).unwrap().num_seconds_from_midnight(),\n           3723);\nassert_eq!(NaiveTime::from_hms_nano_opt(23, 56, 4, 12_345_678).unwrap().num_seconds_from_midnight(),\n           86164);\nassert_eq!(NaiveTime::from_hms_milli_opt(23, 59, 59, 1_000).unwrap().num_seconds_from_midnight(),\n           86399);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2790:604":{"id":"0:2790:604","crate_id":0,"name":"eq","span":{"filename":"src/offset/utc.rs","begin":[43,22],"end":[43,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:2783:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8179:7659-0:2848:1918":{"id":"a:2:8179:7659-0:2848:1918","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8179:7659","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2848:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:108:1946":{"id":"0:108:1946","crate_id":0,"name":"month","span":{"filename":"src/date.rs","begin":[379,4],"end":[381,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:363:271":{"id":"0:363:271","crate_id":0,"name":"add","span":{"filename":"src/datetime/mod.rs","begin":[910,4],"end":[912,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:310:2236":{"id":"0:310:2236","crate_id":0,"name":"iso_week","span":{"filename":"src/datetime/mod.rs","begin":[782,4],"end":[784,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"IsoWeek","id":"0:2448:1938","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:560:3063":{"id":"0:560:3063","crate_id":0,"name":"set_year","span":{"filename":"src/format/parsed.rs","begin":[136,4],"end":[138,5]},"visibility":"public","docs":"Tries to set the [`year`](#structfield.year) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["value",{"kind":"primitive","inner":"i64"}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:455:1935","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1089:1395":{"id":"0:1089:1395","crate_id":0,"name":"sub","span":{"filename":"src/naive/datetime/mod.rs","begin":[1578,4],"end":[1580,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2537-0:2884:1945":{"id":"b:2:2537-0:2884:1945","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:2884:1945","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2540:126","2:2541:1457"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2882:720":{"id":"0:2882:720","crate_id":0,"name":"hash","span":{"filename":"src/weekday.rs","begin":[11,44],"end":[11,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9297:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2237-0:2894:1916":{"id":"b:2:2237-0:2894:1916","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2231:96","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:2894:1916","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2239:2071"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:245:2401":{"id":"0:245:2401","crate_id":0,"name":"checked_add_months","span":{"filename":"src/datetime/mod.rs","begin":[329,4],"end":[334,5]},"visibility":"public","docs":"Adds given `Months` to the current date and time.\n\nReturns `None` when it will result in overflow, or if the\nlocal time is not valid on the newly calculated date.\n\nSee [`NaiveDate::checked_add_months`] for more details on behavior","links":{"`NaiveDate::checked_add_months`":"0:844:2401"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"Months","id":"0:2945:1947","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11873:3320":{"id":"2:11873:3320","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2542-0:2830:1943":{"id":"b:2:2542-0:2830:1943","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RoundingError","id":"0:2830:1943","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:126","2:2546:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2537-0:2382:1922":{"id":"b:2:2537-0:2382:1922","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2540:126","2:2541:1457"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11913:3723":{"id":"2:11913:3723","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:40682:176","prim@char":"1:11872:411","self::pattern":"2:11573:1962"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11578:7280","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2237-0:2084:2779":{"id":"b:2:2237-0:2084:2779","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2231:96","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2084:2779","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2239:2071"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1653:6017":{"id":"0:1653:6017","crate_id":0,"name":"now","span":{"filename":"src/offset/local/mod.rs","begin":[73,4],"end":[75,5]},"visibility":"public","docs":"Returns a `DateTime` which corresponds to the current date and time.","links":{},"attrs":["#[cfg(not(all(target_arch = \"wasm32\", feature = \"wasmbind\",\nnot(any(target_os = \"emscripten\", target_os = \"wasi\")))))]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Local","id":"0:2776:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1091:1396":{"id":"0:1091:1396","crate_id":0,"name":"sub_assign","span":{"filename":"src/naive/datetime/mod.rs","begin":[1585,4],"end":[1587,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1363":{"id":"0:1363","crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[189,0],"end":[196,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:2770:2074","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1364:183","0:1365:1395"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11951:38834":{"id":"2:11951:38834","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:11573:1962","`DoubleEndedIterator`":"2:7167:119","prim@char":"1:11872:411","str::matches":"2:11948:1960"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatches","id":"2:42867:7325","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11578:7280","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11578:7280","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11593:7308","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1852:2231":{"id":"0:1852:2231","crate_id":0,"name":"month0","span":{"filename":"src/traits.rs","begin":[28,4],"end":[28,28]},"visibility":"default","docs":"Returns the month number starting from 0.\n\nThe return value ranges from 0 to 11.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:244:2189":{"id":"0:244:2189","crate_id":0,"name":"checked_add_signed","span":{"filename":"src/datetime/mod.rs","begin":[317,4],"end":[321,5]},"visibility":"public","docs":"Adds given `Duration` to the current date and time.\n\nReturns `None` when it will result in overflow.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2952:659":{"id":"0:2952:659","crate_id":0,"name":"fmt","span":{"filename":"src/month.rs","begin":[194,22],"end":[194,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:9044:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:9033:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1087":{"id":"0:1087","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1574,0],"end":[1581,1]},"visibility":"default","docs":"A subtraction of `Duration` from `NaiveDateTime` yields another `NaiveDateTime`.\nIt is the same as the addition with a negated `Duration`.\n\nAs a part of Chrono's [leap second handling](./struct.NaiveTime.html#leap-second-handling),\nthe addition assumes that **there is no leap second ever**,\nexcept when the `NaiveDateTime` itself represents a leap second\nin which case the assumption becomes that **there is exactly a single leap second ever**.\n\nPanics on underflow or overflow. Use [`NaiveDateTime::checked_sub_signed`]\nto detect that.\n\n# Example\n\n```\nuse chrono::{Duration, NaiveDate};\n\nlet from_ymd = NaiveDate::from_ymd;\n\nlet d = from_ymd(2016, 7, 8);\nlet hms = |h, m, s| d.and_hms_opt(h, m, s).unwrap();\nassert_eq!(hms(3, 5, 7) - Duration::zero(),             hms(3, 5, 7));\nassert_eq!(hms(3, 5, 7) - Duration::seconds(1),         hms(3, 5, 6));\nassert_eq!(hms(3, 5, 7) - Duration::seconds(-1),        hms(3, 5, 8));\nassert_eq!(hms(3, 5, 7) - Duration::seconds(3600 + 60), hms(2, 4, 7));\nassert_eq!(hms(3, 5, 7) - Duration::seconds(86_400),\n           from_ymd(2016, 7, 7).and_hms_opt(3, 5, 7).unwrap());\nassert_eq!(hms(3, 5, 7) - Duration::days(365),\n           from_ymd(2015, 7, 9).and_hms_opt(3, 5, 7).unwrap());\n\nlet hmsm = |h, m, s, milli| d.and_hms_milli_opt(h, m, s, milli).unwrap();\nassert_eq!(hmsm(3, 5, 7, 450) - Duration::milliseconds(670), hmsm(3, 5, 6, 780));\n```\n\nLeap seconds are handled,\nbut the subtraction assumes that it is the only leap second happened.\n\n```\n# use chrono::{Duration, NaiveDate};\n# let from_ymd = NaiveDate::from_ymd;\n# let hmsm = |h, m, s, milli| from_ymd(2016, 7, 8).and_hms_milli_opt(h, m, s, milli).unwrap();\nlet leap = hmsm(3, 5, 59, 1_300);\nassert_eq!(leap - Duration::zero(),            hmsm(3, 5, 59, 1_300));\nassert_eq!(leap - Duration::milliseconds(200), hmsm(3, 5, 59, 1_100));\nassert_eq!(leap - Duration::milliseconds(500), hmsm(3, 5, 59, 800));\nassert_eq!(leap - Duration::seconds(60),       hmsm(3, 5, 0, 300));\nassert_eq!(leap - Duration::days(1),\n           from_ymd(2016, 7, 7).and_hms_milli_opt(3, 6, 0, 300).unwrap());\n```","links":{"`NaiveDateTime::checked_sub_signed`":"0:1026:2191"},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:2770:2074","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Duration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1088:183","0:1089:1395"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1728:5888":{"id":"0:1728:5888","crate_id":0,"name":"yo","span":{"filename":"src/offset/mod.rs","begin":[273,4],"end":[275,5]},"visibility":"default","docs":"Makes a new `Date` from year, day of year (DOY or \"ordinal\") and the current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\n\nThe time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),\nbut it will propagate to the `DateTime` values constructed via this date.\n\nPanics on the out-of-range date and/or invalid DOY.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note =\n\"use `from_local_datetime()` with a `NaiveDateTime` instead\")]","#[allow(deprecated)]"],"deprecation":{"since":"0.4.23","note":"use `from_local_datetime()` with a `NaiveDateTime` instead"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["year",{"kind":"primitive","inner":"i32"}],["ordinal",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11924:30384":{"id":"2:11924:30384","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:11872:411","self::pattern":"2:11573:1962"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitInclusive","id":"2:11397:7333","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11578:7280","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:875:2189":{"id":"0:875:2189","crate_id":0,"name":"checked_add_signed","span":{"filename":"src/naive/date.rs","begin":[998,4],"end":[1009,5]},"visibility":"public","docs":"Adds the `days` part of given `Duration` to the current date.\n\nReturns `None` when it will result in overflow.\n\n# Example\n\n```\nuse chrono::{Duration, NaiveDate};\n\nlet d = NaiveDate::from_ymd_opt(2015, 9, 5).unwrap();\nassert_eq!(d.checked_add_signed(Duration::days(40)),\n           Some(NaiveDate::from_ymd_opt(2015, 10, 15).unwrap()));\nassert_eq!(d.checked_add_signed(Duration::days(-40)),\n           Some(NaiveDate::from_ymd_opt(2015, 7, 27).unwrap()));\nassert_eq!(d.checked_add_signed(Duration::days(1_000_000_000)), None);\nassert_eq!(d.checked_add_signed(Duration::days(-1_000_000_000)), None);\nassert_eq!(NaiveDate::MAX.checked_add_signed(Duration::days(1)), None);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:132":{"id":"0:132","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[449,0],"end":[449,83]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Tz"},"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:898:1944":{"id":"0:898:1944","crate_id":0,"name":"weekday","span":{"filename":"src/naive/date.rs","begin":[1446,4],"end":[1448,5]},"visibility":"default","docs":"Returns the day of week.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike, Weekday};\n\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().weekday(), Weekday::Tue);\nassert_eq!(NaiveDate::from_ymd_opt(-308, 3, 14).unwrap().weekday(), Weekday::Fri);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2848:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2240-0:1959:2507":{"id":"b:2:2240-0:1959:2507","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2234:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:1959:2507","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2242:6046"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11871":{"id":"2:11871","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["2:11872:802","2:11873:3320","2:11874:38823","2:11875:38824","2:11877:38825","2:11880:3288","2:11881:38826","2:11882:311","2:11883:30352","2:11884:5314","2:11886:30349","2:11888:30350","2:11890:30351","2:11892:38827","2:11893:38828","2:11894:30374","2:11895:30375","2:11896:2933","2:11897:11734","2:11898:3565","2:11899:36816","2:11900:36804","2:11901:13181","2:11902:38829","2:11903:36793","2:11904:2924","2:11907:3275","2:11910:6400","2:11913:3723","2:11917:8030","2:11921:30382","2:11924:30384","2:11927:30386","2:11930:38830","2:11933:38831","2:11936:30388","2:11939:30390","2:11942:38832","2:11945:38833","2:11948:1960","2:11951:38834","2:11954:38835","2:11957:38836","2:11960:38837","2:11962:3646","2:11964:38838","2:11966:3273","2:11967:38839","2:11968:6175","2:11971:38840","2:11974:30392","2:11977:30393","2:11980:38841","2:11983:3576","2:11986:38842","2:11989:2282","2:11991:30157","2:11992:30158","2:11993:30154","2:11994:30153","2:11995:38843","2:11997:14031","2:11998:38844"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1242:2196":{"id":"0:1242:2196","crate_id":0,"name":"signed_duration_since","span":{"filename":"src/naive/time/mod.rs","begin":[637,4],"end":[667,5]},"visibility":"public","docs":"Subtracts another `NaiveTime` from the current time.\nReturns a `Duration` within +/- 1 day.\nThis does not overflow or underflow at all.\n\nAs a part of Chrono's [leap second handling](#leap-second-handling),\nthe subtraction assumes that **there is no leap second ever**,\nexcept when any of the `NaiveTime`s themselves represents a leap second\nin which case the assumption becomes that\n**there are exactly one (or two) leap second(s) ever**.\n\n# Example\n\n```\nuse chrono::{Duration, NaiveTime};\n\nlet from_hmsm = NaiveTime::from_hms_milli;\nlet since = NaiveTime::signed_duration_since;\n\nassert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(3, 5, 7, 900)),\n           Duration::zero());\nassert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(3, 5, 7, 875)),\n           Duration::milliseconds(25));\nassert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(3, 5, 6, 925)),\n           Duration::milliseconds(975));\nassert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(3, 5, 0, 900)),\n           Duration::seconds(7));\nassert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(3, 0, 7, 900)),\n           Duration::seconds(5 * 60));\nassert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(0, 5, 7, 900)),\n           Duration::seconds(3 * 3600));\nassert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(4, 5, 7, 900)),\n           Duration::seconds(-3600));\nassert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(2, 4, 6, 800)),\n           Duration::seconds(3600 + 60 + 1) + Duration::milliseconds(100));\n```\n\nLeap seconds are handled, but the subtraction assumes that\nthere were no other leap seconds happened.\n\n```\n# use chrono::{Duration, NaiveTime};\n# let from_hmsm = NaiveTime::from_hms_milli;\n# let since = NaiveTime::signed_duration_since;\nassert_eq!(since(from_hmsm(3, 0, 59, 1_000), from_hmsm(3, 0, 59, 0)),\n           Duration::seconds(1));\nassert_eq!(since(from_hmsm(3, 0, 59, 1_500), from_hmsm(3, 0, 59, 0)),\n           Duration::milliseconds(1500));\nassert_eq!(since(from_hmsm(3, 0, 59, 1_000), from_hmsm(3, 0, 0, 0)),\n           Duration::seconds(60));\nassert_eq!(since(from_hmsm(3, 0, 0, 0), from_hmsm(2, 59, 59, 1_000)),\n           Duration::seconds(1));\nassert_eq!(since(from_hmsm(3, 0, 59, 1_000), from_hmsm(2, 59, 59, 1_000)),\n           Duration::seconds(61));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1288-0:2305:1937":{"id":"0:1288-0:2305:1937","crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[14,21],"end":[14,25]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"self::date::Days","name":"Days","id":"0:2305:1937","glob":false}},"0:1340:2270":{"id":"0:1340:2270","crate_id":0,"name":"east_opt","span":{"filename":"src/offset/fixed.rs","begin":[55,4],"end":[61,5]},"visibility":"public","docs":"Makes a new `FixedOffset` for the Eastern Hemisphere with given timezone difference.\nThe negative `secs` means the Western Hemisphere.\n\nReturns `None` on the out-of-bound `secs`.\n\n# Example\n\n```\nuse chrono::{FixedOffset, TimeZone};\nlet hour = 3600;\nlet datetime = FixedOffset::east_opt(5 * hour).unwrap().ymd_opt(2016, 11, 08).unwrap()\n                                          .and_hms_opt(0, 0, 0).unwrap();\nassert_eq!(&datetime.to_rfc3339(), \"2016-11-08T00:00:00+05:00\")\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["secs",{"kind":"primitive","inner":"i32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2954":{"id":"0:2954","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[194,29],"end":[194,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2306:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Months","id":"0:2945:1947","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:399:659":{"id":"0:399:659","crate_id":0,"name":"fmt","span":{"filename":"src/datetime/mod.rs","begin":[996,4],"end":[1000,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:9044:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:9033:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8179:7659-0:2485:1919":{"id":"a:2:8179:7659-0:2485:1919","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8179:7659","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:412":{"id":"0:412","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1074,0],"end":[1087,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(any(feature = \"std\", test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SystemTime","id":"1:9051:2280","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:414:685"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:5:5633-0:1915:1913":{"id":"b:5:5633-0:1915:1913","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9074:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5631:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["5:5635:1434"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:0:1771-0:2382:1922":{"id":"b:0:1771-0:2382:1922","crate_id":0,"name":null,"span":{"filename":"src/round.rs","begin":[47,0],"end":[75,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Add","id":"2:2765:2072","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Duration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"T"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sub","id":"2:2770:2074","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Duration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"T"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Timelike","id":"0:1867:1917","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"SubsecRound","id":"0:1768:1912","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1773:6708","0:1774:6713"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:408":{"id":"0:408","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1045,0],"end":[1062,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(any(feature = \"std\", test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"SystemTime","id":"1:9051:2280","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:2783:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:409:685"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2527-0:2143:2081":{"id":"b:2:2527-0:2143:2081","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2143:2081","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2530:2607"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1353:2336":{"id":"0:1353:2336","crate_id":0,"name":"fix","span":{"filename":"src/offset/fixed.rs","begin":[130,4],"end":[132,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11971:38840":{"id":"2:11971:38840","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:11872:411","self::pattern":"2:11573:1962"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11578:7280","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2540:126":{"id":"2:2540:126","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}},"0:1345":{"id":"0:1345","crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[107,0],"end":[127,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["yo","timestamp","timestamp_opt","yo_opt","isoywd","ymd","timestamp_millis","timestamp_millis_opt","ymd_opt","timestamp_nanos","datetime_from_str","from_local_datetime","from_local_date","with_ymd_and_hms","from_utc_date","from_utc_datetime","isoywd_opt"],"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1346:1924","0:1347:2180","0:1348:5931","0:1349:5933","0:1350:5938","0:1351:3179"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1748:2395":{"id":"0:1748:2395","crate_id":0,"name":"from_utc_datetime","span":{"filename":"src/offset/mod.rs","begin":[487,4],"end":[489,5]},"visibility":"default","docs":"Converts the UTC `NaiveDateTime` to the local time.\nThe UTC is continuous and thus this cannot fail (but can give the duplicate local time).","links":{},"attrs":["#[allow(clippy :: wrong_self_convention)]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["utc",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:273":{"id":"0:273","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[504,0],"end":[512,1]},"visibility":"default","docs":"Convert a `DateTime<Local>` instance into a `DateTime<FixedOffset>` instance.","links":{},"attrs":["#[cfg(feature = \"clock\")]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Local","id":"0:2776:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:274:685"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:822:3905":{"id":"0:822:3905","crate_id":0,"name":"first_day","span":{"filename":"src/naive/date.rs","begin":[80,4],"end":[85,5]},"visibility":"public","docs":"Returns a date representing the first day of the week.\n\n# Examples\n\n```\nuse chrono::{NaiveDate, Weekday};\n\nlet date = NaiveDate::from_ymd_opt(2022, 4, 18).unwrap();\nlet week = date.week(Weekday::Mon);\nassert!(week.first_day() <= date);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2542-0:2797:1940":{"id":"b:2:2542-0:2797:1940","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2797:1940","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2545:126","2:2546:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2736:7564-0:2203:2817":{"id":"a:2:2736:7564-0:2203:2817","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:7564","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2203:2817","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:922:183":{"id":"0:922:183","crate_id":0,"name":"Output","span":{"filename":"src/naive/date.rs","begin":[1714,4],"end":[1714,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:1661:5938":{"id":"0:1661:5938","crate_id":0,"name":"offset_from_utc_date","span":{"filename":"src/offset/local/mod.rs","begin":[113,4],"end":[115,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["utc",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2898:2877":{"id":"0:2898:2877","crate_id":0,"name":"February","span":{"filename":"src/month.rs","begin":[38,4],"end":[38,16]},"visibility":"default","docs":"February","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":{"expr":"1","value":"1"}}},"0:130":{"id":"0:130","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[448,0],"end":[448,76]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Tz"},"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:2684:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2684:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:460:2847":{"id":"0:460:2847","crate_id":0,"name":"description","span":{"filename":"src/format/mod.rs","begin":[416,4],"end":[418,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2972":{"id":"0:2972","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[206,27],"end":[206,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2306:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseMonthError","id":"0:2964:1948","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1860:2238":{"id":"0:1860:2238","crate_id":0,"name":"with_month","span":{"filename":"src/traits.rs","begin":[64,4],"end":[64,53]},"visibility":"default","docs":"Makes a new value with the month number (starting from 1) changed.\n\nReturns `None` when the resulting value would be invalid.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["month",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:1367:183":{"id":"0:1367:183","crate_id":0,"name":"Output","span":{"filename":"src/offset/fixed.rs","begin":[199,4],"end":[199,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:1912":{"id":"0:1912","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[55,44],"end":[55,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9289:139","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SecondsFormat","id":"0:1888:1914","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1913:720"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:580:3110":{"id":"0:580:3110","crate_id":0,"name":"set_offset","span":{"filename":"src/format/parsed.rs","begin":[277,4],"end":[279,5]},"visibility":"public","docs":"Tries to set the [`offset`](#structfield.offset) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["value",{"kind":"primitive","inner":"i64"}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:455:1935","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2527-0:2382:1922":{"id":"b:2:2527-0:2382:1922","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2530:2607"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2542-0:2848:1918":{"id":"b:2:2542-0:2848:1918","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2848:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:126","2:2546:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11881:38826":{"id":"2:11881:38826","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:1010:4766":{"id":"0:1010:4766","crate_id":0,"name":"from_timestamp_micros","span":{"filename":"src/naive/datetime/mod.rs","begin":[206,4],"end":[208,5]},"visibility":"public","docs":"Creates a new [NaiveDateTime] from microseconds since the UNIX epoch.\n\nThe UNIX epoch starts on midnight, January 1, 1970, UTC.\n\nReturns `None` on an out-of-range number of microseconds.\n\n# Example\n\n```\nuse chrono::NaiveDateTime;\nlet timestamp_micros: i64 = 1662921288000000; //Sunday, September 11, 2022 6:34:48 PM\nlet naive_datetime = NaiveDateTime::from_timestamp_micros(timestamp_micros);\nassert!(naive_datetime.is_some());\nassert_eq!(timestamp_micros, naive_datetime.unwrap().timestamp_micros());\n\n// Negative timestamps (before the UNIX epoch) are supported as well.\nlet timestamp_micros: i64 = -2208936075000000; //Mon Jan 01 1900 14:38:45 GMT+0000\nlet naive_datetime = NaiveDateTime::from_timestamp_micros(timestamp_micros);\nassert!(naive_datetime.is_some());\nassert_eq!(timestamp_micros, naive_datetime.unwrap().timestamp_micros());\n```","links":{"NaiveDateTime":"0:2382:1922"},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["micros",{"kind":"primitive","inner":"i64"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:453":{"id":"0:453","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[351,0],"end":[356,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2186:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:454:791"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:78:2176":{"id":"0:78:2176","crate_id":0,"name":"pred_opt","span":{"filename":"src/date.rs","begin":[224,4],"end":[226,5]},"visibility":"public","docs":"Makes a new `Date` for the prior date.\n\nReturns `None` when `self` is the first representable date.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1959:2507":{"id":"0:1959:2507","crate_id":0,"name":"Numeric","span":{"filename":"src/format/mod.rs","begin":[100,0],"end":[152,1]},"visibility":"public","docs":"Numeric item types.\nThey have associated formatting width (FW) and parsing width (PW).\n\nThe **formatting width** is the minimal width to be formatted.\nIf the number is too short, and the padding is not [`Pad::None`](./enum.Pad.html#variant.None),\nthen it is left-padded.\nIf the number is too long or (in some cases) negative, it is printed as is.\n\nThe **parsing width** is the maximal width to be scanned.\nThe parser only tries to consume from one to given number of digits (greedily).\nIt also trims the preceding whitespace if any.\nIt cannot parse the negative number, so some date and time cannot be formatted then\nparsed with the same formatting items.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:1960:2513","0:1962:2689","0:1964:2691","0:1966:2694","0:1968:2696","0:1970:2698","0:1972:1916","0:1974:2516","0:1976:2702","0:1978:2704","0:1980:1938","0:1982:2707","0:1984:2709","0:1986:2711","0:1988:2517","0:1990:2714","0:1992:2519","0:1994:2520","0:1996:2525","0:1998:2722","0:2000:2726"],"impls":["a:2:8179:7659-0:1959:2507","a:2:2672:217-0:1959:2507","a:2:2736:7564-0:1959:2507","a:2:2686:225-0:1959:2507","a:2:8178:7660-0:1959:2507","b:2:2531-0:1959:2507","b:2:2542-0:1959:2507","b:2:2527-0:1959:2507","b:2:3331-0:1959:2507","b:2:2240-0:1959:2507","b:2:2537-0:1959:2507","b:2:2237-0:1959:2507","b:5:674-0:1959:2507","0:2006","0:2008","0:2011","0:2013","0:2009","0:2003","0:2005"]}},"0:878:2204":{"id":"0:878:2204","crate_id":0,"name":"years_since","span":{"filename":"src/naive/date.rs","begin":[1077,4],"end":[1087,5]},"visibility":"public","docs":"Returns the number of whole years from the given `base` until `self`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["base",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u32"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2527-0:2234:2283":{"id":"b:2:2527-0:2234:2283","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Parsed","id":"0:2234:2283","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2530:2607"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:269":{"id":"0:269","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[478,0],"end":[486,1]},"visibility":"default","docs":"Convert a `DateTime<FixedOffset>` instance into a `DateTime<Local>` instance.","links":{},"attrs":["#[cfg(feature = \"clock\")]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Local","id":"0:2776:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:270:685"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2527-0:2203:2817":{"id":"b:2:2527-0:2203:2817","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2203:2817","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2530:2607"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3331-0:2485:1919":{"id":"b:2:3331-0:2485:1919","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3329:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3333:1470"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1104":{"id":"0:1104","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1714,0],"end":[1720,1]},"visibility":"default","docs":"The `Debug` output of the naive date and time `dt` is the same as\n[`dt.format(\"%Y-%m-%dT%H:%M:%S%.f\")`](crate::format::strftime).\n\nThe string printed can be readily parsed via the `parse` method on `str`.\n\nIt should be noted that, for leap seconds not on the minute boundary,\nit may print a representation not distinguishable from non-leap seconds.\nThis doesn't matter in practice, since such leap seconds never happened.\n(By the time of the first leap second on 1972-06-30,\nevery time zone offset around the world has standardized to the 5-minute alignment.)\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet dt = NaiveDate::from_ymd_opt(2016, 11, 15).unwrap().and_hms_opt(7, 39, 24).unwrap();\nassert_eq!(format!(\"{:?}\", dt), \"2016-11-15T07:39:24\");\n```\n\nLeap seconds may also be used.\n\n```\n# use chrono::NaiveDate;\nlet dt = NaiveDate::from_ymd_opt(2015, 6, 30).unwrap().and_hms_milli_opt(23, 59, 59, 1_500).unwrap();\nassert_eq!(format!(\"{:?}\", dt), \"2015-06-30T23:59:60.500\");\n```","links":{"crate::format::strftime":"0:725:2667"},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9069:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1105:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2686:225-0:2830:1943":{"id":"a:2:2686:225-0:2830:1943","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RoundingError","id":"0:2830:1943","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2327":{"id":"0:2327","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[187,9],"end":[187,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2301:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2328:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:414:685":{"id":"0:414:685","crate_id":0,"name":"from","span":{"filename":"src/datetime/mod.rs","begin":[1075,4],"end":[1086,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["dt",{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"SystemTime","id":"1:9051:2280","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1946":{"id":"0:1946","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[76,15],"end":[76,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:1938:2508","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1947:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:7137:775":{"id":"2:7137:775","crate_id":2,"name":"into_iter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"I"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1966:2694":{"id":"0:1966:2694","crate_id":0,"name":"IsoYear","span":{"filename":"src/format/mod.rs","begin":[110,4],"end":[110,11]},"visibility":"default","docs":"Year in the ISO week date (FW=4, PW=∞).\nMay accept years before 1 BCE or after 9999 CE, given an initial sign.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:2907:2868":{"id":"0:2907:2868","crate_id":0,"name":"May","span":{"filename":"src/month.rs","begin":[44,4],"end":[44,11]},"visibility":"default","docs":"May","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":{"expr":"4","value":"4"}}},"a:2:2672:217-0:2894:1916":{"id":"a:2:2672:217-0:2894:1916","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:2894:1916","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2531-0:2084:2779":{"id":"b:2:2531-0:2084:2779","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2084:2779","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2533:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1371:1395":{"id":"0:1371:1395","crate_id":0,"name":"sub","span":{"filename":"src/offset/fixed.rs","begin":[211,4],"end":[213,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:738":{"id":"0:738","crate_id":0,"name":null,"span":{"filename":"src/format/strftime.rs","begin":[228,0],"end":[268,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2272:2082","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:740:929"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2044:2522":{"id":"0:2044:2522","crate_id":0,"name":"Nanosecond3","span":{"filename":"src/format/mod.rs","begin":[201,4],"end":[201,15]},"visibility":"default","docs":"Same as [`Nanosecond`](#variant.Nanosecond) but the accuracy is fixed to 3.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"2:11968:6175":{"id":"2:11968:6175","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:11872:411","self::pattern":"2:11573:1962"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11578:7280","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11578:7280","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:11598:7307","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1361:183":{"id":"0:1361:183","crate_id":0,"name":"Output","span":{"filename":"src/offset/fixed.rs","begin":[181,4],"end":[181,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:356":{"id":"0:356","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[900,0],"end":[904,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9289:139","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:358:720"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1738:2180":{"id":"0:1738:2180","crate_id":0,"name":"from_offset","span":{"filename":"src/offset/mod.rs","begin":[443,4],"end":[443,50]},"visibility":"default","docs":"Reconstructs the time zone from the offset.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["offset",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:1722:1925","args":null}}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:1962:2689":{"id":"0:1962:2689","crate_id":0,"name":"YearDiv100","span":{"filename":"src/format/mod.rs","begin":[105,4],"end":[105,14]},"visibility":"default","docs":"Gregorian year divided by 100 (century number; FW=PW=2). Implies the non-negative year.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:15-0:1848:1915":{"id":"0:15-0:1848:1915","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[447,20],"end":[447,28]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::Datelike","name":"Datelike","id":"0:1848:1915","glob":false}},"b:2:2237-0:2305:1937":{"id":"b:2:2237-0:2305:1937","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2231:96","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Days","id":"0:2305:1937","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2239:2071"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:829":{"id":"0:829","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[238,0],"end":[1270,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:833:3983","0:834:2266","0:835:3998","0:836:3139","0:837:4013","0:838:3145","0:839:4051","0:840:4052","0:841:4076","0:842:4077","0:843:2477","0:844:2401","0:845:2406","0:847:2409","0:849:2411","0:852:2121","0:853:2130","0:854:2134","0:856:2142","0:857:2144","0:859:2151","0:860:2153","0:862:2160","0:863:2162","0:869:2168","0:870:2169","0:872:2175","0:873:2176","0:875:2189","0:876:2191","0:877:2196","0:878:2204","0:879:2214","0:883:670","0:885:4279","0:886:4287","0:887:2918","0:888:2206","0:889:2207"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2531-0:2382:1922":{"id":"b:2:2531-0:2382:1922","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2533:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2789":{"id":"0:2789","crate_id":0,"name":null,"span":{"filename":"src/offset/utc.rs","begin":[43,22],"end":[43,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2301:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:2783:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:2783:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2790:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1817":{"id":"0:1817","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[175,0],"end":[175,47]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["provide","cause","description","source","type_id"],"trait":{"name":"Error","id":"2:2592:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:2884:1945","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:232:1598":{"id":"0:232:1598","crate_id":0,"name":"time","span":{"filename":"src/datetime/mod.rs","begin":[184,4],"end":[186,5]},"visibility":"public","docs":"Retrieves a time component.\nUnlike `date`, this is not associated to the time zone.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2247:2232":{"id":"0:2247:2232","crate_id":0,"name":"day","span":{"filename":"src/format/parsed.rs","begin":[83,4],"end":[83,24]},"visibility":"public","docs":"Day of the month (1--28, 1--29, 1--30 or 1--31 depending on the month).","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u32"}}],"bindings":[]}}}}},"0:566:3078":{"id":"0:566:3078","crate_id":0,"name":"set_month","span":{"filename":"src/format/parsed.rs","begin":[184,4],"end":[186,5]},"visibility":"public","docs":"Tries to set the [`month`](#structfield.month) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["value",{"kind":"primitive","inner":"i64"}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:455:1935","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1655:1924":{"id":"0:1655:1924","crate_id":0,"name":"Offset","span":{"filename":"src/offset/local/mod.rs","begin":[96,4],"end":[96,30]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:2086":{"id":"0:2086","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[254,9],"end":[254,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9069:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2084:2779","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2087:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11883:30352":{"id":"2:11883:30352","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:11889:1478"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2818:659":{"id":"0:2818:659","crate_id":0,"name":"fmt","span":{"filename":"src/offset/mod.rs","begin":[41,27],"end":[41,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:9044:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:9033:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2960":{"id":"0:2960","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[194,39],"end":[194,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2301:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Months","id":"0:2945:1947","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Months","id":"0:2945:1947","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2961:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2531-0:2448:1938":{"id":"b:2:2531-0:2448:1938","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IsoWeek","id":"0:2448:1938","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2533:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1229:5541":{"id":"0:1229:5541","crate_id":0,"name":"from_hms_milli","span":{"filename":"src/naive/time/mod.rs","begin":[254,4],"end":[256,5]},"visibility":"public","docs":"Makes a new `NaiveTime` from hour, minute, second and millisecond.\n\nThe millisecond part can exceed 1,000\nin order to represent the [leap second](#leap-second-handling).\n\nPanics on invalid hour, minute, second and/or millisecond.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `from_hms_milli_opt()` instead\")]","#[inline]"],"deprecation":{"since":"0.4.23","note":"use `from_hms_milli_opt()` instead"},"kind":"function","inner":{"decl":{"inputs":[["hour",{"kind":"primitive","inner":"u32"}],["min",{"kind":"primitive","inner":"u32"}],["sec",{"kind":"primitive","inner":"u32"}],["milli",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2397:422":{"id":"0:2397:422","crate_id":0,"name":"cmp","span":{"filename":"src/naive/datetime/mod.rs","begin":[82,42],"end":[82,45]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Ordering","id":"2:30596:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:7136:8033":{"id":"2:7136:8033","crate_id":2,"name":"IntoIter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"I"}}},"0:665:125":{"id":"0:665:125","crate_id":0,"name":"Err","span":{"filename":"src/format/parse.rs","begin":[482,4],"end":[482,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2186:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:88:2198":{"id":"0:88:2198","crate_id":0,"name":"naive_utc","span":{"filename":"src/date.rs","begin":[277,4],"end":[279,5]},"visibility":"public","docs":"Returns a view to the naive UTC date.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:171":{"id":"0:171","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[525,0],"end":[533,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Tz"},"trait":{"name":"","id":"0:1722:1925","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Display","id":"2:9074:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9074:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:173:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:457":{"id":"0:457","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[397,0],"end":[410,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9074:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2186:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:458:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:8178:7660-0:2305:1937":{"id":"a:2:8178:7660-0:2305:1937","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8178:7660","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Days","id":"0:2305:1937","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:445:659":{"id":"0:445:659","crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[161,4],"end":[163,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:9044:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:9033:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2240-0:2291:2080":{"id":"b:2:2240-0:2291:2080","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2234:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2291:2080","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:2242:6046"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2240-0:2448:1938":{"id":"b:2:2240-0:2448:1938","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2234:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IsoWeek","id":"0:2448:1938","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2242:6046"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2237-0:2029:2284":{"id":"b:2:2237-0:2029:2284","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2231:96","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2029:2284","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2239:2071"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:261":{"id":"0:261","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[435,0],"end":[439,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2578:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:262:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1257:2540":{"id":"0:1257:2540","crate_id":0,"name":"nanosecond","span":{"filename":"src/naive/time/mod.rs","begin":[841,4],"end":[843,5]},"visibility":"default","docs":"Returns the number of nanoseconds since the whole non-leap second.\nThe range from 1,000,000,000 to 1,999,999,999 represents\nthe [leap second](#leap-second-handling).\n\n# Example\n\n```\nuse chrono::{NaiveTime, Timelike};\n\nassert_eq!(NaiveTime::from_hms_opt(0, 0, 0).unwrap().nanosecond(), 0);\nassert_eq!(NaiveTime::from_hms_nano_opt(23, 56, 4, 12_345_678).unwrap().nanosecond(), 12_345_678);\n```\n\nLeap seconds may have seemingly out-of-range return values.\nYou can reduce the range with `time.nanosecond() % 1_000_000_000`, or\nuse the proper [formatting method](#method.format) to get a human-readable representation.\n\n```\n# use chrono::{NaiveTime, Timelike};\nlet leap = NaiveTime::from_hms_milli_opt(23, 59, 59, 1_000).unwrap();\nassert_eq!(leap.nanosecond(), 1_000_000_000);\nassert_eq!(leap.format(\"%H:%M:%S%.9f\").to_string(), \"23:59:60.000000000\");\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2026":{"id":"0:2026","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[155,26],"end":[155,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2682:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:2016:2727","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2835:6741":{"id":"0:2835:6741","crate_id":0,"name":"TimestampExceedsLimit","span":{"filename":"src/round.rs","begin":[277,4],"end":[277,25]},"visibility":"default","docs":"Error when `DateTime.timestamp_nanos` exceeds the limit.\n\n``` rust\n# use chrono::{DateTime, DurationRound, Duration, RoundingError, TimeZone, Utc};\nlet dt = Utc.with_ymd_and_hms(2300, 12, 12, 0, 0, 0).unwrap();\n\nassert_eq!(dt.duration_round(Duration::days(1)), Err(RoundingError::TimestampExceedsLimit),);\n```","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:1964:2691":{"id":"0:1964:2691","crate_id":0,"name":"YearMod100","span":{"filename":"src/format/mod.rs","begin":[107,4],"end":[107,14]},"visibility":"default","docs":"Gregorian year modulo 100 (FW=PW=2). Cannot be negative.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:877:2196":{"id":"0:877:2196","crate_id":0,"name":"signed_duration_since","span":{"filename":"src/naive/date.rs","begin":[1064,4],"end":[1074,5]},"visibility":"public","docs":"Subtracts another `NaiveDate` from the current date.\nReturns a `Duration` of integral numbers.\n\nThis does not overflow or underflow at all,\nas all possible output fits in the range of `Duration`.\n\n# Example\n\n```\nuse chrono::{Duration, NaiveDate};\n\nlet from_ymd = NaiveDate::from_ymd;\nlet since = NaiveDate::signed_duration_since;\n\nassert_eq!(since(from_ymd(2014, 1, 1), from_ymd(2014, 1, 1)), Duration::zero());\nassert_eq!(since(from_ymd(2014, 1, 1), from_ymd(2013, 12, 31)), Duration::days(1));\nassert_eq!(since(from_ymd(2014, 1, 1), from_ymd(2014, 1, 2)), Duration::days(-1));\nassert_eq!(since(from_ymd(2014, 1, 1), from_ymd(2013, 9, 23)), Duration::days(100));\nassert_eq!(since(from_ymd(2014, 1, 1), from_ymd(2013, 1, 1)), Duration::days(365));\nassert_eq!(since(from_ymd(2014, 1, 1), from_ymd(2010, 1, 1)), Duration::days(365*4 + 1));\nassert_eq!(since(from_ymd(2014, 1, 1), from_ymd(1614, 1, 1)), Duration::days(365*400 + 97));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2672:217-0:2466:1923":{"id":"a:2:2672:217-0:2466:1923","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:164":{"id":"0:164","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[509,0],"end":[516,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:2770:2074","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:166:183","0:167:1395"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1906":{"id":"0:1906","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[55,29],"end":[55,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2683:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SecondsFormat","id":"0:1888:1914","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:168":{"id":"0:168","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[518,0],"end":[523,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9069:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:170:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2672:217-0:2084:2779":{"id":"a:2:2672:217-0:2084:2779","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2084:2779","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2537-0:2466:1923":{"id":"b:2:2537-0:2466:1923","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2540:126","2:2541:1457"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1013:2477":{"id":"0:1013:2477","crate_id":0,"name":"parse_from_str","span":{"filename":"src/naive/datetime/mod.rs","begin":[321,4],"end":[325,5]},"visibility":"public","docs":" Parses a string with the specified format string and returns a new `NaiveDateTime`.\n See the [`format::strftime` module](../format/strftime/index.html)\n on the supported escape sequences.\n\n # Example\n\n ```\n use chrono::{NaiveDateTime, NaiveDate};\n\n let parse_from_str = NaiveDateTime::parse_from_str;\n\n assert_eq!(parse_from_str(\"2015-09-05 23:56:04\", \"%Y-%m-%d %H:%M:%S\"),\n            Ok(NaiveDate::from_ymd_opt(2015, 9, 5).unwrap().and_hms_opt(23, 56, 4).unwrap()));\n assert_eq!(parse_from_str(\"5sep2015pm012345.6789\", \"%d%b%Y%p%I%M%S%.f\"),\n            Ok(NaiveDate::from_ymd_opt(2015, 9, 5).unwrap().and_hms_micro_opt(13, 23, 45, 678_900).unwrap()));\n ```\n\n Offset is ignored for the purpose of parsing.\n\n ```\n # use chrono::{NaiveDateTime, NaiveDate};\n # let parse_from_str = NaiveDateTime::parse_from_str;\n assert_eq!(parse_from_str(\"2014-5-17T12:34:56+09:30\", \"%Y-%m-%dT%H:%M:%S%z\"),\n            Ok(NaiveDate::from_ymd_opt(2014, 5, 17).unwrap().and_hms_opt(12, 34, 56).unwrap()));\n ```\n\n [Leap seconds](./struct.NaiveTime.html#leap-second-handling) are correctly handled by\n treating any time of the form `hh:mm:60` as a leap second.\n (This equally applies to the formatting, so the round trip is possible.)\n\n ```\n # use chrono::{NaiveDateTime, NaiveDate};\n # let parse_from_str = NaiveDateTime::parse_from_str;\n assert_eq!(parse_from_str(\"2015-07-01 08:59:60.123\", \"%Y-%m-%d %H:%M:%S%.f\"),\n            Ok(NaiveDate::from_ymd_opt(2015, 7, 1).unwrap().and_hms_milli_opt(8, 59, 59, 1_123).unwrap()));\n ```\n\n Missing seconds are assumed to be zero,\n but out-of-bound times or insufficient fields are errors otherwise.\n\n ```\n # use chrono::{NaiveDateTime, NaiveDate};\n # let parse_from_str = NaiveDateTime::parse_from_str;\n assert_eq!(parse_from_str(\"94/9/4 7:15\", \"%y/%m/%d %H:%M\"),\n            Ok(NaiveDate::from_ymd_opt(1994, 9, 4).unwrap().and_hms_opt(7, 15, 0).unwrap()));\n\n assert!(parse_from_str(\"04m33s\", \"%Mm%Ss\").is_err());\n assert!(parse_from_str(\"94/9/4 12\", \"%y/%m/%d %H\").is_err());\n assert!(parse_from_str(\"94/9/4 17:60\", \"%y/%m/%d %H:%M\").is_err());\n assert!(parse_from_str(\"94/9/4 24:00:00\", \"%y/%m/%d %H:%M:%S\").is_err());\n ```\n\n All parsed fields should be consistent to each other, otherwise it's an error.\n\n ```\n # use chrono::NaiveDateTime;\n # let parse_from_str = NaiveDateTime::parse_from_str;\n let fmt = \"%Y-%m-%d %H:%M:%S = UNIX timestamp %s\";\n assert!(parse_from_str(\"2001-09-09 01:46:39 = UNIX timestamp 999999999\", fmt).is_ok());\n assert!(parse_from_str(\"1970-01-01 00:00:00 = UNIX timestamp 1\", fmt).is_err());\n ```\n\n Years before 1 BCE or after 9999 CE, require an initial sign\n\n```\n # use chrono::{NaiveDate, NaiveDateTime};\n # let parse_from_str = NaiveDateTime::parse_from_str;\n let fmt = \"%Y-%m-%d %H:%M:%S\";\n assert!(parse_from_str(\"10000-09-09 01:46:39\", fmt).is_err());\n assert!(parse_from_str(\"+10000-09-09 01:46:39\", fmt).is_ok());\n```     ","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["fmt",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:455:1935","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2531-0:2485:1919":{"id":"b:2:2531-0:2485:1919","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2533:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1722:1925":{"id":"0:1722:1925","crate_id":0,"name":"TimeZone","span":{"filename":"src/offset/mod.rs","begin":[205,0],"end":[490,1]},"visibility":"public","docs":"The time zone.\n\nThe methods here are the primarily constructors for [`Date`](../struct.Date.html) and\n[`DateTime`](../struct.DateTime.html) types.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:1723:1924","0:1724:2593","0:1726:3199","0:1727:3856","0:1728:5888","0:1729:4549","0:1730:5893","0:1731:4553","0:1732:2353","0:1733:2577","0:1734:2364","0:1735:2582","0:1736:2381","0:1737:3530","0:1738:2180","0:1739:5931","0:1740:5933","0:1741:2212","0:1743:2125","0:1745:5938","0:1746:3179","0:1747:2186","0:1748:2395"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:1654","0:1345","0:1688"]}},"0:2801:2795":{"id":"0:2801:2795","crate_id":0,"name":"Single","span":{"filename":"src/offset/mod.rs","begin":[47,4],"end":[47,13]},"visibility":"default","docs":"Given local time representation has a single unique result.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":{"tuple":["0:2803:1583"]},"discriminant":null}},"a:2:8179:7659-0:2324:1921":{"id":"a:2:8179:7659-0:2324:1921","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8179:7659","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1344:5993":{"id":"0:1344:5993","crate_id":0,"name":"utc_minus_local","span":{"filename":"src/offset/fixed.rs","begin":[102,4],"end":[104,5]},"visibility":"public","docs":"Returns the number of seconds to add to convert from the local time to UTC.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2192:415":{"id":"0:2192:415","crate_id":0,"name":"clone","span":{"filename":"src/format/mod.rs","begin":[348,16],"end":[348,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2186:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:674-0:1881:1908":{"id":"b:5:674-0:1881:1908","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:670:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["5:676:8076","5:677:8077","5:678:8078"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:909:271":{"id":"0:909:271","crate_id":0,"name":"add","span":{"filename":"src/naive/date.rs","begin":[1640,4],"end":[1642,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2816":{"id":"0:2816","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[41,27],"end":[41,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:9069:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9069:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2797:1940","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:2818:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1739:5931":{"id":"0:1739:5931","crate_id":0,"name":"offset_from_local_date","span":{"filename":"src/offset/mod.rs","begin":[446,4],"end":[446,85]},"visibility":"default","docs":"Creates the offset(s) for given local `NaiveDate` if possible.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["local",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2797:1940","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:1722:1925","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:1290-0:2300:1939":{"id":"0:1290-0:2300:1939","crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[14,38],"end":[14,47]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"self::date::NaiveWeek","name":"NaiveWeek","id":"0:2300:1939","glob":false}},"0:1746:3179":{"id":"0:1746:3179","crate_id":0,"name":"offset_from_utc_datetime","span":{"filename":"src/offset/mod.rs","begin":[473,4],"end":[473,76]},"visibility":"default","docs":"Creates the offset for given UTC `NaiveDateTime`. This cannot fail.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["utc",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"qualified_path","inner":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:1722:1925","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2843:604":{"id":"0:2843:604","crate_id":0,"name":"eq","span":{"filename":"src/round.rs","begin":[241,23],"end":[241,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"RoundingError","id":"0:2830:1943","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:897:2235":{"id":"0:897:2235","crate_id":0,"name":"ordinal0","span":{"filename":"src/naive/date.rs","begin":[1431,4],"end":[1433,5]},"visibility":"default","docs":"Returns the day of year starting from 0.\n\nThe return value ranges from 0 to 365. (The last day of year differs by years.)\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().ordinal0(), 250);\nassert_eq!(NaiveDate::from_ymd_opt(-308, 3, 14).unwrap().ordinal0(), 73);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2925:2885":{"id":"0:2925:2885","crate_id":0,"name":"November","span":{"filename":"src/month.rs","begin":[56,4],"end":[56,17]},"visibility":"default","docs":"November","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":{"expr":"10","value":"10"}}},"0:306:2233":{"id":"0:306:2233","crate_id":0,"name":"day0","span":{"filename":"src/datetime/mod.rs","begin":[766,4],"end":[768,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2237-0:2945:1947":{"id":"b:2:2237-0:2945:1947","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2231:96","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Months","id":"0:2945:1947","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2239:2071"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:362:183":{"id":"0:362:183","crate_id":0,"name":"Output","span":{"filename":"src/datetime/mod.rs","begin":[907,4],"end":[907,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}},"0:2028:604":{"id":"0:2028:604","crate_id":0,"name":"eq","span":{"filename":"src/format/mod.rs","begin":[155,26],"end":[155,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:2016:2727","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2542-0:2485:1919":{"id":"b:2:2542-0:2485:1919","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:126","2:2546:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8178:7660-0:1881:1908":{"id":"a:2:8178:7660-0:1881:1908","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Tz"},"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:8178:7660","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8178:7660","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:110:2232":{"id":"0:110:2232","crate_id":0,"name":"day","span":{"filename":"src/date.rs","begin":[387,4],"end":[389,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:404":{"id":"0:404","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1035,0],"end":[1041,1]},"visibility":"default","docs":"Accepts a relaxed form of RFC3339.\nA space or a 'T' are acepted as the separator between the date and time\nparts. Additional spaces are allowed between each component.\n\nAll of these examples are equivalent:\n```\n# use chrono::{DateTime, Local};\n\"2012-12-12T12:12:12Z\".parse::<DateTime<Local>>();\n\"2012-12-12 12:12:12Z\".parse::<DateTime<Local>>();\n\"2012-  12-12T12:  12:12Z\".parse::<DateTime<Local>>();\n```","links":{},"attrs":["#[cfg(feature = \"clock\")]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:11534:2563","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Local","id":"0:2776:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:405:125","0:406:2564"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1374:183":{"id":"0:1374:183","crate_id":0,"name":"Output","span":{"filename":"src/offset/fixed.rs","begin":[217,4],"end":[217,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}},"0:1781":{"id":"0:1781","crate_id":0,"name":null,"span":{"filename":"src/round.rs","begin":[148,0],"end":[158,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"DurationRound","id":"0:1776:1942","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:1783:125","0:1784:6731","0:1785:6736"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2006":{"id":"0:2006","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[99,16],"end":[99,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2301:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:1959:2507","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:1959:2507","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2007:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2024:720":{"id":"0:2024:720","crate_id":0,"name":"hash","span":{"filename":"src/format/mod.rs","begin":[155,20],"end":[155,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9297:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:910":{"id":"0:910","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[1645,0],"end":[1650,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AddAssign","id":"2:2796:2073","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Duration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:911:272"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2966":{"id":"0:2966","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[206,9],"end":[206,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseMonthError","id":"0:2964:1948","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2967:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2968":{"id":"0:2968","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[206,16],"end":[206,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2682:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseMonthError","id":"0:2964:1948","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1768:1912":{"id":"0:1768:1912","crate_id":0,"name":"SubsecRound","span":{"filename":"src/round.rs","begin":[20,0],"end":[45,1]},"visibility":"public","docs":"Extension trait for subsecond rounding or truncation to a maximum number\nof digits. Rounding can be used to decrease the error variance when\nserializing/persisting to lower precision. Truncation is the default\nbehavior in Chrono display formatting.  Either can be used to guarantee\nequality (e.g. for testing) when round-tripping through a lower precision\nformat.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:1769:6708","0:1770:6713"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:1771"]}},"2:7135:2081":{"id":"2:7135:2081","crate_id":2,"name":"Item","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:7245:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:1365:1395":{"id":"0:1365:1395","crate_id":0,"name":"sub","span":{"filename":"src/offset/fixed.rs","begin":[193,4],"end":[195,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:163:1396":{"id":"0:163:1396","crate_id":0,"name":"sub_assign","span":{"filename":"src/date.rs","begin":[504,4],"end":[506,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2537-0:2203:2817":{"id":"b:2:2537-0:2203:2817","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2203:2817","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2540:126","2:2541:1457"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2531-0:2783:1920":{"id":"b:2:2531-0:2783:1920","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:2783:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2533:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2542-0:2945:1947":{"id":"b:2:2542-0:2945:1947","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Months","id":"0:2945:1947","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:126","2:2546:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:72:2162":{"id":"0:72:2162","crate_id":0,"name":"and_hms_nano_opt","span":{"filename":"src/date.rs","begin":[184,4],"end":[192,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date, hour, minute, second and nanosecond.\nThe nanosecond part can exceed 1,000,000,000 in order to represent the leap second.\nThe offset in the current date is preserved.\n\nReturns `None` on invalid hour, minute, second and/or nanosecond.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["hour",{"kind":"primitive","inner":"u32"}],["min",{"kind":"primitive","inner":"u32"}],["sec",{"kind":"primitive","inner":"u32"}],["nano",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:60:2117":{"id":"0:60:2117","crate_id":0,"name":"from_utc","span":{"filename":"src/date.rs","begin":[80,4],"end":[82,5]},"visibility":"public","docs":"Makes a new `Date` with given *UTC* date and offset.\nThe local date should be constructed via the `TimeZone` trait.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["date",{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["offset",{"kind":"qualified_path","inner":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Tz"},"trait":{"name":"","id":"0:1722:1925","args":null}}}]],"output":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2096":{"id":"0:2096","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[254,38],"end":[254,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9289:139","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2084:2779","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2097:720"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:5:674-0:2186:1934":{"id":"b:5:674-0:2186:1934","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:670:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2186:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:676:8076","5:677:8077","5:678:8078"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:915":{"id":"0:915","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[1680,0],"end":[1703,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:2770:2074","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Months","id":"0:2945:1947","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:916:183","0:917:1395"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1370:183":{"id":"0:1370:183","crate_id":0,"name":"Output","span":{"filename":"src/offset/fixed.rs","begin":[208,4],"end":[208,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:1282:125":{"id":"0:1282:125","crate_id":0,"name":"Err","span":{"filename":"src/naive/time/mod.rs","begin":[1259,4],"end":[1259,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2186:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:284:2477":{"id":"0:284:2477","crate_id":0,"name":"parse_from_str","span":{"filename":"src/datetime/mod.rs","begin":[577,4],"end":[581,5]},"visibility":"public","docs":"Parses a string with the specified format string and returns a new\n[`DateTime`] with a parsed [`FixedOffset`].\n\nSee the [`crate::format::strftime`] module on the supported escape\nsequences.\n\nSee also [`TimeZone::datetime_from_str`] which gives a local\n[`DateTime`] on specific time zone.\n\nNote that this method *requires a timezone* in the string. See\n[`NaiveDateTime::parse_from_str`]\nfor a version that does not require a timezone in the to-be-parsed str.\n\n# Example\n\n```rust\nuse chrono::{DateTime, FixedOffset, TimeZone, NaiveDate};\n\nlet dt = DateTime::parse_from_str(\n    \"1983 Apr 13 12:09:14.274 +0000\", \"%Y %b %d %H:%M:%S%.3f %z\");\nassert_eq!(dt, Ok(FixedOffset::east_opt(0).unwrap().from_local_datetime(&NaiveDate::from_ymd_opt(1983, 4, 13).unwrap().and_hms_milli_opt(12, 9, 14, 274).unwrap()).unwrap()));\n```","links":{"`crate::format::strftime`":"0:725:2667","`FixedOffset`":"0:2485:1919","`DateTime`":"0:1915:1913","`TimeZone::datetime_from_str`":"0:1737:3530","`NaiveDateTime::parse_from_str`":"0:1013:2477"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["fmt",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:455:1935","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1774:6713":{"id":"0:1774:6713","crate_id":0,"name":"trunc_subsecs","span":{"filename":"src/round.rs","begin":[66,4],"end":[74,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["digits",{"kind":"primitive","inner":"u16"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:390":{"id":"0:390","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[977,0],"end":[983,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:2770:2074","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Days","id":"0:2305:1937","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:392:183","0:393:1395"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1956":{"id":"0:1956","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[76,44],"end":[76,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9289:139","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:1938:2508","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1957:720"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:230:1926":{"id":"0:230:1926","crate_id":0,"name":"date","span":{"filename":"src/datetime/mod.rs","begin":[159,4],"end":[161,5]},"visibility":"public","docs":"Retrieves a date component\n\nUnless you are immediately planning on turning this into a `DateTime`\nwith the same Timezone you should use the\n[`date_naive`](DateTime::date_naive) method.","links":{"DateTime::date_naive":"0:231:2348"},"attrs":["#[inline]","#[deprecated(since = \"0.4.23\", note = \"Use `date_naive()` instead\")]","#[allow(deprecated)]"],"deprecation":{"since":"0.4.23","note":"Use `date_naive()` instead"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2259":{"id":"0:2259","crate_id":0,"name":null,"span":{"filename":"src/format/parsed.rs","begin":[25,16],"end":[25,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2301:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Parsed","id":"0:2234:2283","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Parsed","id":"0:2234:2283","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2260:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2240-0:2234:2283":{"id":"b:2:2240-0:2234:2283","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2234:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Parsed","id":"0:2234:2283","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2242:6046"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:916:183":{"id":"0:916:183","crate_id":0,"name":"Output","span":{"filename":"src/naive/date.rs","begin":[1681,4],"end":[1681,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:442-0:2234:2283":{"id":"0:442-0:2234:2283","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[60,0],"end":[60,23]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"parsed::Parsed","name":"Parsed","id":"0:2234:2283","glob":false}},"0:1253":{"id":"0:1253","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[760,0],"end":[967,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hour12","num_seconds_from_midnight"],"trait":{"name":"Timelike","id":"0:1867:1917","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1254:2131","0:1255:2538","0:1256:2539","0:1257:2540","0:1258:2541","0:1259:2542","0:1260:2543","0:1261:2544","0:1262:4833"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2237-0:2234:2283":{"id":"b:2:2237-0:2234:2283","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2231:96","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Parsed","id":"0:2234:2283","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2239:2071"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2542-0:2272:2082":{"id":"b:2:2542-0:2272:2082","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2272:2082","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2545:126","2:2546:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2252:2540":{"id":"0:2252:2540","crate_id":0,"name":"nanosecond","span":{"filename":"src/format/parsed.rs","begin":[98,4],"end":[98,31]},"visibility":"public","docs":"The number of nanoseconds since the whole second (0--999,999,999).","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u32"}}],"bindings":[]}}}}},"0:80:978":{"id":"0:80:978","crate_id":0,"name":"offset","span":{"filename":"src/date.rs","begin":[230,4],"end":[232,5]},"visibility":"public","docs":"Retrieves an associated offset from UTC.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Tz"},"trait":{"name":"","id":"0:1722:1925","args":null}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2237-0:2143:2081":{"id":"b:2:2237-0:2143:2081","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2231:96","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2143:2081","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2239:2071"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1265:271":{"id":"0:1265:271","crate_id":0,"name":"add","span":{"filename":"src/naive/time/mod.rs","begin":[1022,4],"end":[1024,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1667:2395":{"id":"0:1667:2395","crate_id":0,"name":"from_utc_datetime","span":{"filename":"src/offset/local/mod.rs","begin":[179,4],"end":[183,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(all(target_arch = \"wasm32\", feature = \"wasmbind\",\nnot(any(target_os = \"emscripten\", target_os = \"wasi\")))))]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["utc",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Local","id":"0:2776:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:366:272":{"id":"0:366:272","crate_id":0,"name":"add_assign","span":{"filename":"src/datetime/mod.rs","begin":[917,4],"end":[922,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1066":{"id":"0:1066","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1253,0],"end":[1414,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hour12","num_seconds_from_midnight"],"trait":{"name":"Timelike","id":"0:1867:1917","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1067:2131","0:1068:2538","0:1069:2539","0:1070:2540","0:1071:2541","0:1073:2542","0:1075:2543","0:1077:2544"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3331-0:2830:1943":{"id":"b:2:3331-0:2830:1943","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3329:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RoundingError","id":"0:2830:1943","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3333:1470"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11892:38827":{"id":"2:11892:38827","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:11878:1380","str::slice_mut_unchecked":"2:11893:38828","crate::ops::Index":"2:2993:7234"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:2235:2230":{"id":"0:2235:2230","crate_id":0,"name":"year","span":{"filename":"src/format/parsed.rs","begin":[31,4],"end":[31,25]},"visibility":"public","docs":"Year.\n\nThis can be negative unlike [`year_div_100`](#structfield.year_div_100)\nand [`year_mod_100`](#structfield.year_mod_100) fields.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i32"}}],"bindings":[]}}}}},"0:1302-0:2324:1921":{"id":"0:1302-0:2324:1921","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[476,31],"end":[476,40]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"naive::NaiveDate","name":"NaiveDate","id":"0:2324:1921","glob":false}},"0:56:1928":{"id":"0:56:1928","crate_id":0,"name":"MIN_DATE","span":{"filename":"src/date.rs","begin":[68,0],"end":[68,53]},"visibility":"public","docs":"The minimum possible `Date`.","links":{},"attrs":["#[allow(deprecated)]","#[deprecated(since = \"0.4.20\", note = \"Use Date::MIN_UTC instead\")]"],"deprecation":{"since":"0.4.20","note":"Use Date::MIN_UTC instead"},"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:2783:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"expr":"Date<Utc>::MIN_UTC","value":null,"is_literal":false}},"a:2:2736:7564-0:2143:2081":{"id":"a:2:2736:7564-0:2143:2081","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:7564","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2143:2081","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2537-0:2186:1934":{"id":"b:2:2537-0:2186:1934","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2186:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2540:126","2:2541:1457"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1273":{"id":"0:1273","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[1140,0],"end":[1147,1]},"visibility":"default","docs":"Subtracts another `NaiveTime` from the current time.\nReturns a `Duration` within +/- 1 day.\nThis does not overflow or underflow at all.\n\nAs a part of Chrono's [leap second handling](#leap-second-handling),\nthe subtraction assumes that **there is no leap second ever**,\nexcept when any of the `NaiveTime`s themselves represents a leap second\nin which case the assumption becomes that\n**there are exactly one (or two) leap second(s) ever**.\n\nThe implementation is a wrapper around\n[`NaiveTime::signed_duration_since`](#method.signed_duration_since).\n\n# Example\n\n```\nuse chrono::{Duration, NaiveTime};\n\nlet from_hmsm = NaiveTime::from_hms_milli;\n\nassert_eq!(from_hmsm(3, 5, 7, 900) - from_hmsm(3, 5, 7, 900), Duration::zero());\nassert_eq!(from_hmsm(3, 5, 7, 900) - from_hmsm(3, 5, 7, 875), Duration::milliseconds(25));\nassert_eq!(from_hmsm(3, 5, 7, 900) - from_hmsm(3, 5, 6, 925), Duration::milliseconds(975));\nassert_eq!(from_hmsm(3, 5, 7, 900) - from_hmsm(3, 5, 0, 900), Duration::seconds(7));\nassert_eq!(from_hmsm(3, 5, 7, 900) - from_hmsm(3, 0, 7, 900), Duration::seconds(5 * 60));\nassert_eq!(from_hmsm(3, 5, 7, 900) - from_hmsm(0, 5, 7, 900), Duration::seconds(3 * 3600));\nassert_eq!(from_hmsm(3, 5, 7, 900) - from_hmsm(4, 5, 7, 900), Duration::seconds(-3600));\nassert_eq!(from_hmsm(3, 5, 7, 900) - from_hmsm(2, 4, 6, 800),\n           Duration::seconds(3600 + 60 + 1) + Duration::milliseconds(100));\n```\n\nLeap seconds are handled, but the subtraction assumes that\nthere were no other leap seconds happened.\n\n```\n# use chrono::{Duration, NaiveTime};\n# let from_hmsm = NaiveTime::from_hms_milli;\nassert_eq!(from_hmsm(3, 0, 59, 1_000) - from_hmsm(3, 0, 59, 0), Duration::seconds(1));\nassert_eq!(from_hmsm(3, 0, 59, 1_500) - from_hmsm(3, 0, 59, 0),\n           Duration::milliseconds(1500));\nassert_eq!(from_hmsm(3, 0, 59, 1_000) - from_hmsm(3, 0, 0, 0), Duration::seconds(60));\nassert_eq!(from_hmsm(3, 0, 0, 0) - from_hmsm(2, 59, 59, 1_000), Duration::seconds(1));\nassert_eq!(from_hmsm(3, 0, 59, 1_000) - from_hmsm(2, 59, 59, 1_000),\n           Duration::seconds(61));\n```","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:2770:2074","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1274:183","0:1275:1395"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2237-0:2884:1945":{"id":"b:2:2237-0:2884:1945","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2231:96","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:2884:1945","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2239:2071"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2245:1944":{"id":"0:2245:1944","crate_id":0,"name":"weekday","span":{"filename":"src/format/parsed.rs","begin":[77,4],"end":[77,32]},"visibility":"public","docs":"Day of the week.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2848:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},"0:2460":{"id":"0:2460","crate_id":0,"name":null,"span":{"filename":"src/naive/isoweek.rs","begin":[19,41],"end":[19,45]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2684:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IsoWeek","id":"0:2448:1938","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11880:3288":{"id":"2:11880:3288","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:11141:6399"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:5633-0:2382:1922":{"id":"b:5:5633-0:2382:1922","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9074:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5631:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5635:1434"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2179":{"id":"0:2179","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[288,31],"end":[288,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9069:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2143:2081","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:2181:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2471:604":{"id":"0:2471:604","crate_id":0,"name":"eq","span":{"filename":"src/naive/time/mod.rs","begin":[190,9],"end":[190,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11921:30382":{"id":"2:11921:30382","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:11573:1962","`DoubleEndedIterator`":"2:7167:119","prim@char":"1:11872:411","str::split_whitespace":"2:11899:36816","str::rsplit":"2:11927:30386"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"2:42645:7320","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11578:7280","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11962:3646":{"id":"2:11962:3646","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:925:183":{"id":"0:925:183","crate_id":0,"name":"Output","span":{"filename":"src/naive/date.rs","begin":[1745,4],"end":[1745,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"b:2:2527-0:2783:1920":{"id":"b:2:2527-0:2783:1920","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:2783:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2530:2607"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:274:685":{"id":"0:274:685","crate_id":0,"name":"from","span":{"filename":"src/datetime/mod.rs","begin":[509,4],"end":[511,5]},"visibility":"default","docs":"Convert this `DateTime<Local>` instance into a `DateTime<FixedOffset>` instance.\n\nConversion is performed via [`DateTime::with_timezone`]. Note that the converted value returned\nby this will be created with a fixed timezone offset of 0.","links":{"`DateTime::with_timezone`":"0:242:2183"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["src",{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Local","id":"0:2776:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11877:38825":{"id":"2:11877:38825","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:11875:38824"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1092":{"id":"0:1092","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1615,0],"end":[1621,1]},"visibility":"default","docs":"A subtraction of Months from `NaiveDateTime` clamped to valid days in resulting month.\n\n# Panics\n\nPanics if the resulting date would be out of range.\n\n# Example\n\n```\nuse chrono::{Duration, NaiveDateTime, Months, NaiveDate};\nuse std::str::FromStr;\n\nassert_eq!(\n    NaiveDate::from_ymd_opt(2014, 01, 01).unwrap().and_hms_opt(01, 00, 00).unwrap() - Months::new(11),\n    NaiveDate::from_ymd_opt(2013, 02, 01).unwrap().and_hms_opt(01, 00, 00).unwrap()\n);\nassert_eq!(\n    NaiveDate::from_ymd_opt(2014, 01, 01).unwrap().and_hms_opt(00, 02, 00).unwrap() - Months::new(12),\n    NaiveDate::from_ymd_opt(2013, 01, 01).unwrap().and_hms_opt(00, 02, 00).unwrap()\n);\nassert_eq!(\n    NaiveDate::from_ymd_opt(2014, 01, 01).unwrap().and_hms_opt(00, 00, 03).unwrap() - Months::new(13),\n    NaiveDate::from_ymd_opt(2012, 12, 01).unwrap().and_hms_opt(00, 00, 03).unwrap()\n);\n```","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:2770:2074","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Months","id":"0:2945:1947","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1093:183","0:1094:1395"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2456":{"id":"0:2456","crate_id":0,"name":null,"span":{"filename":"src/naive/isoweek.rs","begin":[19,24],"end":[19,34]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","ge","le","lt"],"trait":{"name":"PartialOrd","id":"2:2343:186","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"IsoWeek","id":"0:2448:1938","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IsoWeek","id":"0:2448:1938","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2457:1023"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2490":{"id":"0:2490","crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[25,20],"end":[25,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2683:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2542-0:2783:1920":{"id":"b:2:2542-0:2783:1920","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:2783:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:126","2:2546:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1364:183":{"id":"0:1364:183","crate_id":0,"name":"Output","span":{"filename":"src/offset/fixed.rs","begin":[190,4],"end":[190,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:2808":{"id":"0:2808","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[41,9],"end":[41,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2797:1940","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:2810:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2240-0:1888:1914":{"id":"b:2:2240-0:1888:1914","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2234:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SecondsFormat","id":"0:1888:1914","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2242:6046"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2686:225-0:1888:1914":{"id":"a:2:2686:225-0:1888:1914","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SecondsFormat","id":"0:1888:1914","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:567:3081":{"id":"0:567:3081","crate_id":0,"name":"set_week_from_sun","span":{"filename":"src/format/parsed.rs","begin":[190,4],"end":[192,5]},"visibility":"public","docs":"Tries to set the [`week_from_sun`](#structfield.week_from_sun) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["value",{"kind":"primitive","inner":"i64"}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:455:1935","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2537-0:2300:1939":{"id":"b:2:2537-0:2300:1939","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveWeek","id":"0:2300:1939","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2540:126","2:2541:1457"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2861:2892":{"id":"0:2861:2892","crate_id":0,"name":"Fri","span":{"filename":"src/weekday.rs","begin":[25,4],"end":[25,11]},"visibility":"default","docs":"Friday.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":{"expr":"4","value":"4"}}},"0:1866:4566":{"id":"0:1866:4566","crate_id":0,"name":"num_days_from_ce","span":{"filename":"src/traits.rs","begin":[103,4],"end":[118,5]},"visibility":"default","docs":"Counts the days in the proleptic Gregorian calendar, with January 1, Year 1 (CE) as day 1.\n\n# Examples\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(NaiveDate::from_ymd_opt(1970, 1, 1).unwrap().num_days_from_ce(), 719_163);\nassert_eq!(NaiveDate::from_ymd_opt(2, 1, 1).unwrap().num_days_from_ce(), 366);\nassert_eq!(NaiveDate::from_ymd_opt(1, 1, 1).unwrap().num_days_from_ce(), 1);\nassert_eq!(NaiveDate::from_ymd_opt(0, 1, 1).unwrap().num_days_from_ce(), -365);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11917:8030":{"id":"2:11917:8030","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:40682:176","prim@char":"1:11872:411","self::pattern":"2:11573:1962"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11578:7280","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11578:7280","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11593:7308","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2164:126":{"id":"0:2164:126","crate_id":0,"name":"Error","span":{"filename":"src/format/mod.rs","begin":[308,4],"end":[308,9]},"visibility":"default","docs":"Issues a formatting error. Used to signal an invalid format string.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:2241:1946":{"id":"0:2241:1946","crate_id":0,"name":"month","span":{"filename":"src/format/parsed.rs","begin":[62,4],"end":[62,26]},"visibility":"public","docs":"Month (1--12).","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u32"}}],"bindings":[]}}}}},"b:2:3331-0:1915:1913":{"id":"b:2:3331-0:1915:1913","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3329:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["2:3333:1470"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8179:7659-0:2305:1937":{"id":"a:2:8179:7659-0:2305:1937","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8179:7659","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Days","id":"0:2305:1937","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:862:2160":{"id":"0:862:2160","crate_id":0,"name":"and_hms_nano","span":{"filename":"src/naive/date.rs","begin":[858,4],"end":[860,5]},"visibility":"public","docs":"Makes a new `NaiveDateTime` from the current date, hour, minute, second and nanosecond.\n\nThe nanosecond part can exceed 1,000,000,000\nin order to represent the [leap second](./struct.NaiveTime.html#leap-second-handling).\n\nPanics on invalid hour, minute, second and/or nanosecond.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `and_hms_nano_opt()` instead\")]","#[inline]"],"deprecation":{"since":"0.4.23","note":"use `and_hms_nano_opt()` instead"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["hour",{"kind":"primitive","inner":"u32"}],["min",{"kind":"primitive","inner":"u32"}],["sec",{"kind":"primitive","inner":"u32"}],["nano",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1029:2411":{"id":"0:1029:2411","crate_id":0,"name":"checked_sub_days","span":{"filename":"src/naive/datetime/mod.rs","begin":[762,4],"end":[764,5]},"visibility":"public","docs":"Subtract a duration in [`Days`] from the date part of the `NaiveDateTime`\n\nReturns `None` if the resulting date would be out of range.","links":{"`Days`":"0:2305:1937"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["days",{"kind":"resolved_path","inner":{"name":"Days","id":"0:2305:1937","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:951":{"id":"0:951","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[1959,0],"end":[1978,1]},"visibility":"default","docs":"Parsing a `str` into a `NaiveDate` uses the same format,\n[`%Y-%m-%d`](../format/strftime/index.html), as in `Debug` and `Display`.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet d = NaiveDate::from_ymd_opt(2015, 9, 18).unwrap();\nassert_eq!(\"2015-09-18\".parse::<NaiveDate>(), Ok(d));\n\nlet d = NaiveDate::from_ymd_opt(12345, 6, 7).unwrap();\nassert_eq!(\"+12345-6-7\".parse::<NaiveDate>(), Ok(d));\n\nassert!(\"foo\".parse::<NaiveDate>().is_err());\n```","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:11534:2563","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:952:125","0:953:2564"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1749-0:2776:1909":{"id":"0:1749-0:2776:1909","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[482,0],"end":[482,22]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"clock\")]","#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"offset::Local","name":"Local","id":"0:2776:1909","glob":false}},"0:1081:271":{"id":"0:1081:271","crate_id":0,"name":"add","span":{"filename":"src/naive/datetime/mod.rs","begin":[1469,4],"end":[1471,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:845:2406":{"id":"0:845:2406","crate_id":0,"name":"checked_sub_months","span":{"filename":"src/naive/date.rs","begin":[584,4],"end":[594,5]},"visibility":"public","docs":"Subtract a duration in [`Months`] from the date\n\nIf the day would be out of range for the resulting month, use the last day for that month.\n\nReturns `None` if the resulting date would be out of range.\n\n```\n# use chrono::{NaiveDate, Months};\nassert_eq!(\n    NaiveDate::from_ymd_opt(2022, 2, 20).unwrap().checked_sub_months(Months::new(6)),\n    Some(NaiveDate::from_ymd_opt(2021, 8, 20).unwrap())\n);\n\nassert_eq!(\n    NaiveDate::from_ymd_opt(2014, 1, 1).unwrap()\n        .checked_sub_months(Months::new(core::i32::MAX as u32 + 1)),\n    None\n);\n```","links":{"`Months`":"0:2945:1947"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["months",{"kind":"resolved_path","inner":{"name":"Months","id":"0:2945:1947","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:321:2242":{"id":"0:321:2242","crate_id":0,"name":"with_ordinal","span":{"filename":"src/datetime/mod.rs","begin":[812,4],"end":[814,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["ordinal",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:892:1946":{"id":"0:892:1946","crate_id":0,"name":"month","span":{"filename":"src/naive/date.rs","begin":[1301,4],"end":[1303,5]},"visibility":"default","docs":"Returns the month number starting from 1.\n\nThe return value ranges from 1 to 12.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().month(), 9);\nassert_eq!(NaiveDate::from_ymd_opt(-308, 3, 14).unwrap().month(), 3);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:0:1771-0:1915:1913":{"id":"b:0:1771-0:1915:1913","crate_id":0,"name":null,"span":{"filename":"src/round.rs","begin":[47,0],"end":[75,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Add","id":"2:2765:2072","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Duration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"T"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sub","id":"2:2770:2074","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Duration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"T"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Timelike","id":"0:1867:1917","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"SubsecRound","id":"0:1768:1912","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:1773:6708","0:1774:6713"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2736:7564-0:1888:1914":{"id":"a:2:2736:7564-0:1888:1914","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:7564","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SecondsFormat","id":"0:1888:1914","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2060:2774":{"id":"0:2060:2774","crate_id":0,"name":"TimezoneOffset","span":{"filename":"src/format/mod.rs","begin":[237,4],"end":[237,18]},"visibility":"default","docs":"Same as [`TimezoneOffsetColon`](#variant.TimezoneOffsetColon) but prints no colon.\nParsing allows an optional colon.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:82:2183":{"id":"0:82:2183","crate_id":0,"name":"with_timezone","span":{"filename":"src/date.rs","begin":[243,4],"end":[245,5]},"visibility":"public","docs":"Changes the associated time zone.\nThis does not change the actual `Date` (but will change the string representation).","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["tz",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Tz2"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz2"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Tz2","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1841-0:2894:1916":{"id":"0:1841-0:2894:1916","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[493,16],"end":[493,21]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"month::Month","name":"Month","id":"0:2894:1916","glob":false}},"0:1974:2516":{"id":"0:1974:2516","crate_id":0,"name":"Day","span":{"filename":"src/format/mod.rs","begin":[118,4],"end":[118,7]},"visibility":"default","docs":"Day of the month (FW=PW=2).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:2489:604":{"id":"0:2489:604","crate_id":0,"name":"eq","span":{"filename":"src/offset/fixed.rs","begin":[25,9],"end":[25,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2686:225-0:1959:2507":{"id":"a:2:2686:225-0:1959:2507","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:1959:2507","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:309:1944":{"id":"0:309:1944","crate_id":0,"name":"weekday","span":{"filename":"src/datetime/mod.rs","begin":[778,4],"end":[780,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2848:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2237-0:1881:1908":{"id":"b:2:2237-0:1881:1908","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2231:96","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["2:2239:2071"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2332":{"id":"0:2332","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[187,24],"end":[187,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9289:139","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2333:720"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2151:2674":{"id":"0:2151:2674","crate_id":0,"name":"Space","span":{"filename":"src/format/mod.rs","begin":[297,4],"end":[297,18]},"visibility":"default","docs":"Whitespace. Prints literally but reads zero or more whitespace.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":{"tuple":["0:2153:1583"]},"discriminant":null}},"0:923:1395":{"id":"0:923:1395","crate_id":0,"name":"sub","span":{"filename":"src/naive/date.rs","begin":[1716,4],"end":[1718,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["days",{"kind":"resolved_path","inner":{"name":"Days","id":"0:2305:1937","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:2770:2074","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1020:2381":{"id":"0:1020:2381","crate_id":0,"name":"timestamp_nanos","span":{"filename":"src/naive/datetime/mod.rs","begin":[478,4],"end":[481,5]},"visibility":"public","docs":"Returns the number of non-leap *nanoseconds* since midnight on January 1, 1970.\n\nNote that this does *not* account for the timezone!\nThe true \"UNIX timestamp\" would count seconds since the midnight *UTC* on the epoch.\n\n# Panics\n\nNote also that this does reduce the number of years that can be\nrepresented from ~584 Billion to ~584 years. The dates that can be\nrepresented as nanoseconds are between 1677-09-21T00:12:44.0 and\n2262-04-11T23:47:16.854775804.\n\n(If this is a problem, please file an issue to let me know what domain\nneeds nanosecond precision over millennia, I'm curious.)\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime};\n\nlet dt = NaiveDate::from_ymd_opt(1970, 1, 1).unwrap().and_hms_nano_opt(0, 0, 1, 444).unwrap();\nassert_eq!(dt.timestamp_nanos(), 1_000_000_444);\n\nlet dt = NaiveDate::from_ymd_opt(2001, 9, 9).unwrap().and_hms_nano_opt(1, 46, 40, 555).unwrap();\n\nconst A_BILLION: i64 = 1_000_000_000;\nlet nanos = dt.timestamp_nanos();\nassert_eq!(nanos, 1_000_000_000_000_000_555);\nassert_eq!(\n    dt,\n    NaiveDateTime::from_timestamp(nanos / A_BILLION, (nanos % A_BILLION) as u32)\n);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1233:2155":{"id":"0:1233:2155","crate_id":0,"name":"from_hms_micro_opt","span":{"filename":"src/naive/time/mod.rs","begin":[322,4],"end":[324,5]},"visibility":"public","docs":"Makes a new `NaiveTime` from hour, minute, second and microsecond.\n\nThe microsecond part can exceed 1,000,000\nin order to represent the [leap second](#leap-second-handling).\n\nReturns `None` on invalid hour, minute, second and/or microsecond.\n\n# Example\n\n```\nuse chrono::NaiveTime;\n\nlet from_hmsu_opt = NaiveTime::from_hms_micro_opt;\n\nassert!(from_hmsu_opt(0, 0, 0, 0).is_some());\nassert!(from_hmsu_opt(23, 59, 59, 999_999).is_some());\nassert!(from_hmsu_opt(23, 59, 59, 1_999_999).is_some()); // a leap second after 23:59:59\nassert!(from_hmsu_opt(24, 0, 0, 0).is_none());\nassert!(from_hmsu_opt(23, 60, 0, 0).is_none());\nassert!(from_hmsu_opt(23, 59, 60, 0).is_none());\nassert!(from_hmsu_opt(23, 59, 59, 2_000_000).is_none());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["hour",{"kind":"primitive","inner":"u32"}],["min",{"kind":"primitive","inner":"u32"}],["sec",{"kind":"primitive","inner":"u32"}],["micro",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2237-0:2776:1909":{"id":"b:2:2237-0:2776:1909","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2231:96","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Local","id":"0:2776:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2239:2071"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1064:2243":{"id":"0:1064:2243","crate_id":0,"name":"with_ordinal0","span":{"filename":"src/naive/datetime/mod.rs","begin":[1248,4],"end":[1250,5]},"visibility":"default","docs":"Makes a new `NaiveDateTime` with the day of year (starting from 0) changed.\n\nReturns `None` when the resulting `NaiveDateTime` would be invalid.\n\nSee also the [`NaiveDate::with_ordinal0`] method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Datelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().and_hms_opt(12, 34, 56).unwrap();\nassert_eq!(dt.with_ordinal0(59),\n           Some(NaiveDate::from_ymd_opt(2015, 3, 1).unwrap().and_hms_opt(12, 34, 56).unwrap()));\nassert_eq!(dt.with_ordinal0(365), None); // 2015 had only 365 days\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2016, 9, 8).unwrap().and_hms_opt(12, 34, 56).unwrap();\nassert_eq!(dt.with_ordinal0(59),\n           Some(NaiveDate::from_ymd_opt(2016, 2, 29).unwrap().and_hms_opt(12, 34, 56).unwrap()));\nassert_eq!(dt.with_ordinal0(365),\n           Some(NaiveDate::from_ymd_opt(2016, 12, 31).unwrap().and_hms_opt(12, 34, 56).unwrap()));\n```","links":{"`NaiveDate::with_ordinal0`":"0:906:2243"},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["ordinal0",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1292-0:827:1928":{"id":"0:1292-0:827:1928","crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[14,59],"end":[14,67]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"self::date::MIN_DATE","name":"MIN_DATE","id":"0:827:1928","glob":false}},"0:2828:720":{"id":"0:2828:720","crate_id":0,"name":"hash","span":{"filename":"src/offset/mod.rs","begin":[41,44],"end":[41,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9297:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:769":{"id":"0:769","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[1055,0],"end":[1079,1]},"visibility":"default","docs":"Parsing a `str` into a `Month` uses the format [`%W`](./format/strftime/index.html).\n\n# Example\n\n```\nuse chrono::Month;\n\nassert_eq!(\"January\".parse::<Month>(), Ok(Month::January));\nassert!(\"any day\".parse::<Month>().is_err());\n```\n\nThe parsing is case-insensitive.\n\n```\n# use chrono::Month;\nassert_eq!(\"fEbruARy\".parse::<Month>(), Ok(Month::February));\n```\n\nOnly the shortest form (e.g. `jan`) and the longest form (e.g. `january`) is accepted.\n\n```\n# use chrono::Month;\nassert!(\"septem\".parse::<Month>().is_err());\nassert!(\"Augustin\".parse::<Month>().is_err());\n```","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:11534:2563","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:2894:1916","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:770:125","0:771:2564"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1873:2541":{"id":"0:1873:2541","crate_id":0,"name":"with_hour","span":{"filename":"src/traits.rs","begin":[152,4],"end":[152,51]},"visibility":"default","docs":"Makes a new value with the hour number changed.\n\nReturns `None` when the resulting value would be invalid.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["hour",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:341":{"id":"0:341","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[863,0],"end":[863,87]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Tz"},"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1733:2577":{"id":"0:1733:2577","crate_id":0,"name":"timestamp_opt","span":{"filename":"src/offset/mod.rs","begin":[360,4],"end":[365,5]},"visibility":"default","docs":"Makes a new `DateTime` from the number of non-leap seconds\nsince January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\")\nand the number of nanoseconds since the last whole non-leap second.\n\nReturns `LocalResult::None` on out-of-range number of seconds and/or\ninvalid nanosecond, otherwise always returns `LocalResult::Single`.\n\n# Example\n\n```\nuse chrono::{Utc, TimeZone};\n\nassert_eq!(Utc.timestamp_opt(1431648000, 0).unwrap().to_string(), \"2015-05-15 00:00:00 UTC\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["secs",{"kind":"primitive","inner":"i64"}],["nsecs",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2797:1940","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:392:183":{"id":"0:392:183","crate_id":0,"name":"Output","span":{"filename":"src/datetime/mod.rs","begin":[978,4],"end":[978,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}},"2:11895:30375":{"id":"2:11895:30375","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:11894:30374"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2070:1583":{"id":"0:2070:1583","crate_id":0,"name":"0","span":{"filename":"src/format/mod.rs","begin":[250,13],"end":[250,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2084:2779","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:2880:659":{"id":"0:2880:659","crate_id":0,"name":"fmt","span":{"filename":"src/weekday.rs","begin":[11,37],"end":[11,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:9044:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:9033:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:23-0:2324:1921":{"id":"0:23-0:2324:1921","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[451,20],"end":[451,29]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::NaiveDate","name":"NaiveDate","id":"0:2324:1921","glob":false}},"0:2267:59":{"id":"0:2267:59","crate_id":0,"name":"default","span":{"filename":"src/format/parsed.rs","begin":[25,38],"end":[25,45]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Parsed","id":"0:2234:2283","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:666:2564":{"id":"0:666:2564","crate_id":0,"name":"from_str","span":{"filename":"src/format/parse.rs","begin":[484,4],"end":[521,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:455:1935","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1075:2543":{"id":"0:1075:2543","crate_id":0,"name":"with_second","span":{"filename":"src/naive/datetime/mod.rs","begin":[1386,4],"end":[1388,5]},"visibility":"default","docs":"Makes a new `NaiveDateTime` with the second number changed.\n\nReturns `None` when the resulting `NaiveDateTime` would be invalid. As\nwith the [`NaiveDateTime::second`] method, the input range is\nrestricted to 0 through 59.\n\nSee also the [`NaiveTime::with_second`] method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Timelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().and_hms_milli_opt(12, 34, 56, 789).unwrap();\nassert_eq!(dt.with_second(17),\n           Some(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().and_hms_milli_opt(12, 34, 17, 789).unwrap()));\nassert_eq!(dt.with_second(60), None);\n```","links":{"`NaiveDateTime::second`":"0:1069:2539","`NaiveTime::with_second`":"0:1260:2543"},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["sec",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2496":{"id":"0:2496","crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[25,30],"end":[25,34]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2684:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:86:2196":{"id":"0:86:2196","crate_id":0,"name":"signed_duration_since","span":{"filename":"src/date.rs","begin":[271,4],"end":[273,5]},"visibility":"public","docs":"Subtracts another `Date` from the current date.\nReturns a `Duration` of integral numbers.\n\nThis does not overflow or underflow at all,\nas all possible output fits in the range of `Duration`.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz2"}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Tz2","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1368:271":{"id":"0:1368:271","crate_id":0,"name":"add","span":{"filename":"src/offset/fixed.rs","begin":[202,4],"end":[204,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2527-0:2830:1943":{"id":"b:2:2527-0:2830:1943","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RoundingError","id":"0:2830:1943","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2530:2607"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2240-0:2945:1947":{"id":"b:2:2240-0:2945:1947","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2234:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Months","id":"0:2945:1947","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2242:6046"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:27-0:1720:1924":{"id":"0:27-0:1720:1924","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[453,20],"end":[453,26]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::Offset","name":"Offset","id":"0:1720:1924","glob":false}},"0:2251:2539":{"id":"0:2251:2539","crate_id":0,"name":"second","span":{"filename":"src/format/parsed.rs","begin":[95,4],"end":[95,27]},"visibility":"public","docs":"Second number (0--60, accounting for leap seconds).","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u32"}}],"bindings":[]}}}}},"0:294:2214":{"id":"0:294:2214","crate_id":0,"name":"format_with_items","span":{"filename":"src/datetime/mod.rs","begin":[680,4],"end":[687,5]},"visibility":"public","docs":"Formats the combined date and time with the specified formatting items.","links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]","#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["items",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2291:2080","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7245:156","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"B"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2231:96","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2143:2081","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2686:225-0:2300:1939":{"id":"a:2:2686:225-0:2300:1939","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveWeek","id":"0:2300:1939","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:8178:7660-0:2029:2284":{"id":"a:2:8178:7660-0:2029:2284","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8178:7660","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2029:2284","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2795:720":{"id":"0:2795:720","crate_id":0,"name":"hash","span":{"filename":"src/offset/utc.rs","begin":[43,37],"end":[43,41]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9297:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11898:3565":{"id":"2:11898:3565","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"2:42631:7313","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3331-0:2466:1923":{"id":"b:2:3331-0:2466:1923","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3329:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3333:1470"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11894:30374":{"id":"2:11894:30374","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"2:11895:30375"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2537-0:1888:1914":{"id":"b:2:2537-0:1888:1914","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SecondsFormat","id":"0:1888:1914","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2540:126","2:2541:1457"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1695":{"id":"0:1695","crate_id":0,"name":null,"span":{"filename":"src/offset/utc.rs","begin":[109,0],"end":[113,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Offset","id":"0:1720:1924","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:2783:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1696:2336"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1196:2918":{"id":"0:1196:2918","crate_id":0,"name":"week","span":{"filename":"src/naive/isoweek.rs","begin":[91,4],"end":[93,5]},"visibility":"public","docs":"Returns the ISO week number starting from 1.\n\nThe return value ranges from 1 to 53. (The last week of year differs by years.)\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike, Weekday};\n\nlet d = NaiveDate::from_isoywd(2015, 15, Weekday::Mon);\nassert_eq!(d.iso_week().week(), 15);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:955":{"id":"0:955","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[1990,0],"end":[1994,1]},"visibility":"default","docs":"The default value for a NaiveDate is 1st of January 1970.\n\n# Example\n\n```rust\nuse chrono::NaiveDate;\n\nlet default_date = NaiveDate::default();\nassert_eq!(default_date, NaiveDate::from_ymd_opt(1970, 1, 1).unwrap());\n```","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2578:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:956:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:856:2142":{"id":"0:856:2142","crate_id":0,"name":"and_hms_milli","span":{"filename":"src/naive/date.rs","begin":[758,4],"end":[760,5]},"visibility":"public","docs":"Makes a new `NaiveDateTime` from the current date, hour, minute, second and millisecond.\n\nThe millisecond part can exceed 1,000\nin order to represent the [leap second](./struct.NaiveTime.html#leap-second-handling).\n\nPanics on invalid hour, minute, second and/or millisecond.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `and_hms_milli_opt()` instead\")]","#[inline]"],"deprecation":{"since":"0.4.23","note":"use `and_hms_milli_opt()` instead"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["hour",{"kind":"primitive","inner":"u32"}],["min",{"kind":"primitive","inner":"u32"}],["sec",{"kind":"primitive","inner":"u32"}],["milli",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1084":{"id":"0:1084","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1481,0],"end":[1524,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Add","id":"2:2765:2072","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Months","id":"0:2945:1947","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1085:183","0:1086:271"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11980:38841":{"id":"2:11980:38841","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:11872:411","self::pattern":"2:11573:1962"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11578:7280","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11578:7280","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11593:7308","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1897:2303":{"id":"0:1897:2303","crate_id":0,"name":"AutoSi","span":{"filename":"src/datetime/mod.rs","begin":[75,4],"end":[75,10]},"visibility":"default","docs":"Automatically select one of `Secs`, `Millis`, `Micros`, or `Nanos` to\ndisplay all available non-zero sub-second digits.  This corresponds to\n[Fixed::Nanosecond](format/enum.Fixed.html#variant.Nanosecond).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:2150:1583":{"id":"0:2150:1583","crate_id":0,"name":"0","span":{"filename":"src/format/mod.rs","begin":[295,17],"end":[295,25]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Box","id":"5:279:2663","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}},"0:2305:1937":{"id":"0:2305:1937","crate_id":0,"name":"Days","span":{"filename":"src/naive/date.rs","begin":[130,0],"end":[130,32]},"visibility":"public","docs":"A duration in calendar days.\n\nThis is useful because when using `Duration` it is possible\nthat adding `Duration::days(1)` doesn't increment the day value as expected due to it being a\nfixed number of seconds. This difference applies only when dealing with `DateTime<TimeZone>` data types\nand in other cases `Duration::days(n)` and `Days::new(n)` are equivalent.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:825","a:2:8179:7659-0:2305:1937","a:2:2672:217-0:2305:1937","a:2:2736:7564-0:2305:1937","a:2:2686:225-0:2305:1937","a:2:8178:7660-0:2305:1937","b:2:2531-0:2305:1937","b:2:2542-0:2305:1937","b:2:2527-0:2305:1937","b:2:3331-0:2305:1937","b:2:2240-0:2305:1937","b:2:2537-0:2305:1937","b:2:2237-0:2305:1937","b:5:674-0:2305:1937","0:386","0:2310","0:2314","0:2308","0:2320","0:2311","0:2316","0:918","0:2313","0:921","0:1101","0:1098","0:390","0:2322","0:2319"]}},"0:1788:6731":{"id":"0:1788:6731","crate_id":0,"name":"duration_round","span":{"filename":"src/round.rs","begin":[163,4],"end":[165,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["duration",{"kind":"resolved_path","inner":{"name":"Duration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:40824:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:1776:1942","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:767:125":{"id":"0:767:125","crate_id":0,"name":"Err","span":{"filename":"src/format/mod.rs","begin":[980,4],"end":[980,33]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:2884:1945","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:264:685":{"id":"0:264:685","crate_id":0,"name":"from","span":{"filename":"src/datetime/mod.rs","begin":[447,4],"end":[449,5]},"visibility":"default","docs":"Convert this `DateTime<Utc>` instance into a `DateTime<FixedOffset>` instance.\n\nConversion is done via [`DateTime::with_timezone`]. Note that the converted value returned by\nthis will be created with a fixed timezone offset of 0.","links":{"`DateTime::with_timezone`":"0:242:2183"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["src",{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:2783:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:857:2144":{"id":"0:857:2144","crate_id":0,"name":"and_hms_milli_opt","span":{"filename":"src/naive/date.rs","begin":[783,4],"end":[791,5]},"visibility":"public","docs":"Makes a new `NaiveDateTime` from the current date, hour, minute, second and millisecond.\n\nThe millisecond part can exceed 1,000\nin order to represent the [leap second](./struct.NaiveTime.html#leap-second-handling).\n\nReturns `None` on invalid hour, minute, second and/or millisecond.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet d = NaiveDate::from_ymd_opt(2015, 6, 3).unwrap();\nassert!(d.and_hms_milli_opt(12, 34, 56,   789).is_some());\nassert!(d.and_hms_milli_opt(12, 34, 59, 1_789).is_some()); // leap second\nassert!(d.and_hms_milli_opt(12, 34, 59, 2_789).is_none());\nassert!(d.and_hms_milli_opt(12, 34, 60,   789).is_none());\nassert!(d.and_hms_milli_opt(12, 60, 56,   789).is_none());\nassert!(d.and_hms_milli_opt(24, 34, 56,   789).is_none());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["hour",{"kind":"primitive","inner":"u32"}],["min",{"kind":"primitive","inner":"u32"}],["sec",{"kind":"primitive","inner":"u32"}],["milli",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:369:183":{"id":"0:369:183","crate_id":0,"name":"Output","span":{"filename":"src/datetime/mod.rs","begin":[926,4],"end":[926,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}},"b:5:674-0:2272:2082":{"id":"b:5:674-0:2272:2082","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:670:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2272:2082","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["5:676:8076","5:677:8077","5:678:8078"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2953":{"id":"0:2953","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[194,29],"end":[194,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2683:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Months","id":"0:2945:1947","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:148:720":{"id":"0:148:720","crate_id":0,"name":"hash","span":{"filename":"src/date.rs","begin":[472,4],"end":[474,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"hash::Hasher","id":"2:9297:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2309:415":{"id":"0:2309:415","crate_id":0,"name":"clone","span":{"filename":"src/naive/date.rs","begin":[129,9],"end":[129,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Days","id":"0:2305:1937","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:674-0:2964:1948":{"id":"b:5:674-0:2964:1948","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:670:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseMonthError","id":"0:2964:1948","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:676:8076","5:677:8077","5:678:8078"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2240-0:2848:1918":{"id":"b:2:2240-0:2848:1918","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2234:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2848:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2242:6046"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2672:217-0:2848:1918":{"id":"a:2:2672:217-0:2848:1918","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2848:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2867:2887":{"id":"0:2867:2887","crate_id":0,"name":"Sun","span":{"filename":"src/weekday.rs","begin":[29,4],"end":[29,11]},"visibility":"default","docs":"Sunday.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":{"expr":"6","value":"6"}}},"0:1305-0:2300:1939":{"id":"0:1305-0:2300:1939","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[476,68],"end":[476,77]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"naive::NaiveWeek","name":"NaiveWeek","id":"0:2300:1939","glob":false}},"0:1823-0:2884:1945":{"id":"0:1823-0:2884:1945","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[490,18],"end":[490,35]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"weekday::ParseWeekdayError","name":"ParseWeekdayError","id":"0:2884:1945","glob":false}},"0:2336:1023":{"id":"0:2336:1023","crate_id":0,"name":"partial_cmp","span":{"filename":"src/naive/date.rs","begin":[187,30],"end":[187,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::option::Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Ordering","id":"2:30596:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1729:4549":{"id":"0:1729:4549","crate_id":0,"name":"yo_opt","span":{"filename":"src/offset/mod.rs","begin":[289,4],"end":[294,5]},"visibility":"default","docs":"Makes a new `Date` from year, day of year (DOY or \"ordinal\") and the current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\n\nThe time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),\nbut it will propagate to the `DateTime` values constructed via this date.\n\nReturns `None` on the out-of-range date and/or invalid DOY.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note =\n\"use `from_local_datetime()` with a `NaiveDateTime` instead\")]","#[allow(deprecated)]"],"deprecation":{"since":"0.4.23","note":"use `from_local_datetime()` with a `NaiveDateTime` instead"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["year",{"kind":"primitive","inner":"i32"}],["ordinal",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2797:1940","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:9-0:2776:1909":{"id":"0:9-0:2776:1909","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[437,4],"end":[437,25]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"clock\")]","#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::Local","name":"Local","id":"0:2776:1909","glob":false}},"b:2:2237-0:2783:1920":{"id":"b:2:2237-0:2783:1920","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2231:96","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:2783:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2239:2071"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3331-0:2448:1938":{"id":"b:2:3331-0:2448:1938","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3329:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IsoWeek","id":"0:2448:1938","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3333:1470"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1027:2406":{"id":"0:1027:2406","crate_id":0,"name":"checked_sub_months","span":{"filename":"src/naive/datetime/mod.rs","begin":[748,4],"end":[750,5]},"visibility":"public","docs":"Subtracts given `Months` from the current date and time.\n\nReturns `None` when it will result in overflow.\n\nOverflow returns `None`.\n\n# Example\n\n```\nuse std::str::FromStr;\nuse chrono::{Months, NaiveDate, NaiveDateTime};\n\nassert_eq!(\n    NaiveDate::from_ymd_opt(2014, 1, 1).unwrap().and_hms_opt(1, 0, 0).unwrap()\n        .checked_sub_months(Months::new(1)),\n    Some(NaiveDate::from_ymd_opt(2013, 12, 1).unwrap().and_hms_opt(1, 0, 0).unwrap())\n);\n\nassert_eq!(\n    NaiveDate::from_ymd_opt(2014, 1, 1).unwrap().and_hms_opt(1, 0, 0).unwrap()\n        .checked_sub_months(Months::new(core::i32::MAX as u32 + 1)),\n    None\n);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"Months","id":"0:2945:1947","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:349":{"id":"0:349","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[873,0],"end":[892,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"Tz2","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["gt","ge","le","lt"],"trait":{"name":"PartialOrd","id":"2:2343:186","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz2"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:352:1023"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2531-0:2884:1945":{"id":"b:2:2531-0:2884:1945","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:2884:1945","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2533:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:561:3068":{"id":"0:561:3068","crate_id":0,"name":"set_year_div_100","span":{"filename":"src/format/parsed.rs","begin":[142,4],"end":[147,5]},"visibility":"public","docs":"Tries to set the [`year_div_100`](#structfield.year_div_100) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["value",{"kind":"primitive","inner":"i64"}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:455:1935","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8179:7659-0:2776:1909":{"id":"a:2:8179:7659-0:2776:1909","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8179:7659","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Local","id":"0:2776:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1687:6017":{"id":"0:1687:6017","crate_id":0,"name":"now","span":{"filename":"src/offset/utc.rs","begin":[67,4],"end":[73,5]},"visibility":"public","docs":"Returns a `DateTime` which corresponds to the current date and time.","links":{},"attrs":["#[cfg(not(all(target_arch = \"wasm32\", feature = \"wasmbind\",\nnot(any(target_os = \"emscripten\", target_os = \"wasi\")))))]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:2783:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1820":{"id":"0:1820","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[183,0],"end":[187,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9069:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:2884:1945","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1821:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2672:217-0:1959:2507":{"id":"a:2:2672:217-0:1959:2507","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:1959:2507","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2855:2890":{"id":"0:2855:2890","crate_id":0,"name":"Wed","span":{"filename":"src/weekday.rs","begin":[21,4],"end":[21,11]},"visibility":"default","docs":"Wednesday.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":{"expr":"2","value":"2"}}},"2:11927:30386":{"id":"2:11927:30386","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:11573:1962","`DoubleEndedIterator`":"2:7167:119","prim@char":"1:11872:411","str::split":"2:11921:30382"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplit","id":"2:42663:7318","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11578:7280","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11578:7280","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11593:7308","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2237-0:2300:1939":{"id":"b:2:2237-0:2300:1939","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2231:96","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveWeek","id":"0:2300:1939","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2239:2071"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2686:225-0:2797:1940":{"id":"a:2:2686:225-0:2797:1940","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2797:1940","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:946":{"id":"0:946","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[1894,0],"end":[1913,1]},"visibility":"default","docs":"The `Debug` output of the naive date `d` is the same as\n[`d.format(\"%Y-%m-%d\")`](../format/strftime/index.html).\n\nThe string printed can be readily parsed via the `parse` method on `str`.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nassert_eq!(format!(\"{:?}\", NaiveDate::from_ymd_opt(2015,  9,  5).unwrap()), \"2015-09-05\");\nassert_eq!(format!(\"{:?}\", NaiveDate::from_ymd_opt(   0,  1,  1).unwrap()), \"0000-01-01\");\nassert_eq!(format!(\"{:?}\", NaiveDate::from_ymd_opt(9999, 12, 31).unwrap()), \"9999-12-31\");\n```\n\nISO 8601 requires an explicit sign for years before 1 BCE or after 9999 CE.\n\n```\n# use chrono::NaiveDate;\nassert_eq!(format!(\"{:?}\", NaiveDate::from_ymd_opt(   -1,  1,  1).unwrap()),  \"-0001-01-01\");\nassert_eq!(format!(\"{:?}\", NaiveDate::from_ymd_opt(10000, 12, 31).unwrap()), \"+10000-12-31\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9069:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:947:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:0:1771-0:2466:1923":{"id":"b:0:1771-0:2466:1923","crate_id":0,"name":null,"span":{"filename":"src/round.rs","begin":[47,0],"end":[75,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Add","id":"2:2765:2072","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Duration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"T"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sub","id":"2:2770:2074","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Duration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"T"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Timelike","id":"0:1867:1917","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"SubsecRound","id":"0:1768:1912","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1773:6708","0:1774:6713"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:385:1395":{"id":"0:385:1395","crate_id":0,"name":"sub","span":{"filename":"src/datetime/mod.rs","begin":[964,4],"end":[966,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2531-0:2300:1939":{"id":"b:2:2531-0:2300:1939","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveWeek","id":"0:2300:1939","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2533:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2542-0:2203:2817":{"id":"b:2:2542-0:2203:2817","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2203:2817","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:126","2:2546:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2240-0:2203:2817":{"id":"b:2:2240-0:2203:2817","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2234:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2203:2817","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2242:6046"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2531-0:2945:1947":{"id":"b:2:2531-0:2945:1947","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Months","id":"0:2945:1947","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2533:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1837:929":{"id":"0:1837:929","crate_id":0,"name":"new","span":{"filename":"src/month.rs","begin":[200,4],"end":[202,5]},"visibility":"public","docs":"Construct a new `Months` from a number of months","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["num",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2531-0:2016:2727":{"id":"b:2:2531-0:2016:2727","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:2016:2727","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2533:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1996:2525":{"id":"0:1996:2525","crate_id":0,"name":"Nanosecond","span":{"filename":"src/format/mod.rs","begin":[142,4],"end":[142,14]},"visibility":"default","docs":"The number of nanoseconds since the last whole second (FW=PW=9).\nNote that this is *not* left-aligned;\nsee also [`Fixed::Nanosecond`](./enum.Fixed.html#variant.Nanosecond).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"2:2601:8224":{"id":"2:2601:8224","crate_id":2,"name":"provide","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["demand",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Demand","id":"2:3392:12652","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:903:2240":{"id":"0:903:2240","crate_id":0,"name":"with_day","span":{"filename":"src/naive/date.rs","begin":[1542,4],"end":[1544,5]},"visibility":"default","docs":"Makes a new `NaiveDate` with the day of month (starting from 1) changed.\n\nReturns `None` when the resulting `NaiveDate` would be invalid.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().with_day(30),\n           Some(NaiveDate::from_ymd_opt(2015, 9, 30).unwrap()));\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().with_day(31),\n           None); // no September 31\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["day",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2394":{"id":"0:2394","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[82,30],"end":[82,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","ge","le","lt"],"trait":{"name":"PartialOrd","id":"2:2343:186","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2395:1023"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2396":{"id":"0:2396","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[82,42],"end":[82,45]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["min","max","clamp"],"trait":{"name":"Ord","id":"2:2337:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2397:422"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1945":{"id":"0:1945","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[76,9],"end":[76,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2684:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:1938:2508","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11903:36793":{"id":"2:11903:36793","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncodeUtf16","id":"2:42937:7328","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2282":{"id":"0:2282","crate_id":0,"name":null,"span":{"filename":"src/format/strftime.rs","begin":[212,16],"end":[212,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9069:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2272:2082","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:2284:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2672:217-0:2016:2727":{"id":"a:2:2672:217-0:2016:2727","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:2016:2727","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1197:5393":{"id":"0:1197:5393","crate_id":0,"name":"week0","span":{"filename":"src/naive/isoweek.rs","begin":[108,4],"end":[110,5]},"visibility":"public","docs":"Returns the ISO week number starting from 0.\n\nThe return value ranges from 0 to 52. (The last week of year differs by years.)\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike, Weekday};\n\nlet d = NaiveDate::from_isoywd(2015, 15, Weekday::Mon);\nassert_eq!(d.iso_week().week0(), 14);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1338":{"id":"0:1338","crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[31,0],"end":[105,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1339:5976","0:1340:2270","0:1341:5987","0:1342:2272","0:1343:2951","0:1344:5993"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1077:2544":{"id":"0:1077:2544","crate_id":0,"name":"with_nanosecond","span":{"filename":"src/naive/datetime/mod.rs","begin":[1411,4],"end":[1413,5]},"visibility":"default","docs":"Makes a new `NaiveDateTime` with nanoseconds since the whole non-leap second changed.\n\nReturns `None` when the resulting `NaiveDateTime` would be invalid.\nAs with the [`NaiveDateTime::nanosecond`] method,\nthe input range can exceed 1,000,000,000 for leap seconds.\n\nSee also the [`NaiveTime::with_nanosecond`] method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Timelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().and_hms_milli_opt(12, 34, 56, 789).unwrap();\nassert_eq!(dt.with_nanosecond(333_333_333),\n           Some(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().and_hms_nano_opt(12, 34, 56, 333_333_333).unwrap()));\nassert_eq!(dt.with_nanosecond(1_333_333_333), // leap second\n           Some(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().and_hms_nano_opt(12, 34, 56, 1_333_333_333).unwrap()));\nassert_eq!(dt.with_nanosecond(2_000_000_000), None);\n```","links":{"`NaiveTime::with_nanosecond`":"0:1261:2544","`NaiveDateTime::nanosecond`":"0:1070:2540"},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["nano",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1857:1944":{"id":"0:1857:1944","crate_id":0,"name":"weekday","span":{"filename":"src/traits.rs","begin":[51,4],"end":[51,33]},"visibility":"default","docs":"Returns the day of week.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2848:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:1058:2240":{"id":"0:1058:2240","crate_id":0,"name":"with_day","span":{"filename":"src/naive/datetime/mod.rs","begin":[1174,4],"end":[1176,5]},"visibility":"default","docs":"Makes a new `NaiveDateTime` with the day of month (starting from 1) changed.\n\nReturns `None` when the resulting `NaiveDateTime` would be invalid.\n\nSee also the [`NaiveDate::with_day`] method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Datelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().and_hms_opt(12, 34, 56).unwrap();\nassert_eq!(dt.with_day(30), Some(NaiveDate::from_ymd_opt(2015, 9, 30).unwrap().and_hms_opt(12, 34, 56).unwrap()));\nassert_eq!(dt.with_day(31), None); // no September 31\n```","links":{"`NaiveDate::with_day`":"0:903:2240"},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["day",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1978:2704":{"id":"0:1978:2704","crate_id":0,"name":"WeekFromMon","span":{"filename":"src/format/mod.rs","begin":[122,4],"end":[122,15]},"visibility":"default","docs":"Week number, where the week 1 starts at the first Monday of January (FW=PW=2).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:2056:2768":{"id":"0:2056:2768","crate_id":0,"name":"TimezoneOffsetTripleColon","span":{"filename":"src/format/mod.rs","begin":[227,4],"end":[227,29]},"visibility":"default","docs":"Offset from the local time to UTC without minutes (`+09` or `-04` or `+00`).\n\nIn the parser, the colon can be omitted and/or surrounded with any amount of whitespace.\nThe offset is limited from `-24` to `+24`,\nwhich is the same as [`FixedOffset`](../offset/struct.FixedOffset.html)'s range.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:2034:2742":{"id":"0:2034:2742","crate_id":0,"name":"ShortWeekdayName","span":{"filename":"src/format/mod.rs","begin":[183,4],"end":[183,20]},"visibility":"default","docs":"Abbreviated day of the week names.\n\nPrints a three-letter-long name in the title case, reads the same name in any case.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:1891:2293":{"id":"0:1891:2293","crate_id":0,"name":"Millis","span":{"filename":"src/datetime/mod.rs","begin":[62,4],"end":[62,10]},"visibility":"default","docs":"Use fixed 3 subsecond digits. This corresponds to\n[Fixed::Nanosecond3](format/enum.Fixed.html#variant.Nanosecond3).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"a:2:2686:225-0:1915:1913":{"id":"a:2:2686:225-0:1915:1913","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Tz"},"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2200":{"id":"0:2200","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[348,44],"end":[348,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9289:139","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2186:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2201:720"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:564:3074":{"id":"0:564:3074","crate_id":0,"name":"set_isoyear_div_100","span":{"filename":"src/format/parsed.rs","begin":[166,4],"end":[171,5]},"visibility":"public","docs":"Tries to set the [`isoyear_div_100`](#structfield.isoyear_div_100) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["value",{"kind":"primitive","inner":"i64"}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:455:1935","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2806:1583":{"id":"0:2806:1583","crate_id":0,"name":"0","span":{"filename":"src/offset/mod.rs","begin":[50,14],"end":[50,15]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"T"}},"0:1705:5859":{"id":"0:1705:5859","crate_id":0,"name":"earliest","span":{"filename":"src/offset/mod.rs","begin":[63,4],"end":[68,5]},"visibility":"public","docs":"Returns `Some` for the earliest possible conversion result, or `None` if none.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3331-0:2894:1916":{"id":"b:2:3331-0:2894:1916","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3329:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:2894:1916","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3333:1470"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3331-0:2945:1947":{"id":"b:2:3331-0:2945:1947","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3329:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Months","id":"0:2945:1947","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3333:1470"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1801-0:1768:1912":{"id":"0:1801-0:1768:1912","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[487,46],"end":[487,57]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"round::SubsecRound","name":"SubsecRound","id":"0:1768:1912","glob":false}},"0:1812":{"id":"0:1812","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[120,0],"end":[132,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9074:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2848:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1813:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:8179:7659-0:2448:1938":{"id":"a:2:8179:7659-0:2448:1938","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8179:7659","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IsoWeek","id":"0:2448:1938","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:931:1395":{"id":"0:931:1395","crate_id":0,"name":"sub","span":{"filename":"src/naive/date.rs","begin":[1788,4],"end":[1790,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1666:2186":{"id":"0:1666:2186","crate_id":0,"name":"from_utc_date","span":{"filename":"src/offset/local/mod.rs","begin":[156,4],"end":[159,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["utc",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Local","id":"0:2776:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2788":{"id":"0:2788","crate_id":0,"name":null,"span":{"filename":"src/offset/utc.rs","begin":[43,22],"end":[43,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2682:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:2783:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:8179:7659-0:2084:2779":{"id":"a:2:8179:7659-0:2084:2779","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8179:7659","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2084:2779","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2941:659":{"id":"0:2941:659","crate_id":0,"name":"fmt","span":{"filename":"src/month.rs","begin":[30,37],"end":[30,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:9044:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:9033:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1833:6860":{"id":"0:1833:6860","crate_id":0,"name":"from_u64","span":{"filename":"src/month.rs","begin":[164,4],"end":[166,5]},"visibility":"default","docs":"Returns an `Option<Month>` from a i64, assuming a 1-index, January = 1.\n\n`Month::from_i64(n: i64)`: | `1`                  | `2`                   | ... | `12`\n---------------------------| -------------------- | --------------------- | ... | -----\n``:                        | Some(Month::January) | Some(Month::February) | ... | Some(Month::December)","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["n",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Month","id":"0:2894:1916","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2527-0:2029:2284":{"id":"b:2:2527-0:2029:2284","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2029:2284","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2530:2607"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2206:2824":{"id":"0:2206:2824","crate_id":0,"name":"Impossible","span":{"filename":"src/format/mod.rs","begin":[368,4],"end":[368,14]},"visibility":"default","docs":"There is no possible date and time value with given set of fields.\n\nThis does not include the out-of-range conditions, which are trivially invalid.\nIt includes the case that there are one or more fields that are inconsistent to each other.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:1726:3199":{"id":"0:1726:3199","crate_id":0,"name":"ymd","span":{"filename":"src/offset/mod.rs","begin":[241,4],"end":[243,5]},"visibility":"default","docs":"Makes a new `Date` from year, month, day and the current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\n\nThe time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),\nbut it will propagate to the `DateTime` values constructed via this date.\n\nPanics on the out-of-range date, invalid month and/or day.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `with_ymd_and_hms()` instead\")]","#[allow(deprecated)]"],"deprecation":{"since":"0.4.23","note":"use `with_ymd_and_hms()` instead"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["year",{"kind":"primitive","inner":"i32"}],["month",{"kind":"primitive","inner":"u32"}],["day",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1730:5893":{"id":"0:1730:5893","crate_id":0,"name":"isoywd","span":{"filename":"src/offset/mod.rs","begin":[310,4],"end":[312,5]},"visibility":"default","docs":"Makes a new `Date` from ISO week date (year and week number), day of the week (DOW) and\nthe current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\nThe resulting `Date` may have a different year from the input year.\n\nThe time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),\nbut it will propagate to the `DateTime` values constructed via this date.\n\nPanics on the out-of-range date and/or invalid week number.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note =\n\"use `from_local_datetime()` with a `NaiveDateTime` instead\")]","#[allow(deprecated)]"],"deprecation":{"since":"0.4.23","note":"use `from_local_datetime()` with a `NaiveDateTime` instead"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["year",{"kind":"primitive","inner":"i32"}],["week",{"kind":"primitive","inner":"u32"}],["weekday",{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2848:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2841":{"id":"0:2841","crate_id":0,"name":null,"span":{"filename":"src/round.rs","begin":[241,23],"end":[241,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2682:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RoundingError","id":"0:2830:1943","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1988:2517":{"id":"0:1988:2517","crate_id":0,"name":"Hour","span":{"filename":"src/format/mod.rs","begin":[132,4],"end":[132,8]},"visibility":"default","docs":"Hour number in the 24-hour clocks (FW=PW=2).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:2190:659":{"id":"0:2190:659","crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[348,9],"end":[348,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:9044:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:9033:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2264":{"id":"0:2264","crate_id":0,"name":null,"span":{"filename":"src/format/parsed.rs","begin":[25,31],"end":[25,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9069:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Parsed","id":"0:2234:2283","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2265:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:833:3983":{"id":"0:833:3983","crate_id":0,"name":"from_ymd","span":{"filename":"src/naive/date.rs","begin":[262,4],"end":[264,5]},"visibility":"public","docs":"Makes a new `NaiveDate` from the [calendar date](#calendar-date)\n(year, month and day).\n\nPanics on the out-of-range date, invalid month and/or day.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `from_ymd_opt()` instead\")]"],"deprecation":{"since":"0.4.23","note":"use `from_ymd_opt()` instead"},"kind":"function","inner":{"decl":{"inputs":[["year",{"kind":"primitive","inner":"i32"}],["month",{"kind":"primitive","inner":"u32"}],["day",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2257:415":{"id":"0:2257:415","crate_id":0,"name":"clone","span":{"filename":"src/format/parsed.rs","begin":[25,9],"end":[25,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Parsed","id":"0:2234:2283","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8178:7660-0:2186:1934":{"id":"a:2:8178:7660-0:2186:1934","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8178:7660","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2186:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:256:2114":{"id":"0:256:2114","crate_id":0,"name":"MAX_UTC","span":{"filename":"src/datetime/mod.rs","begin":[418,4],"end":[418,94]},"visibility":"public","docs":"The maximum possible `DateTime<Utc>`.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:2783:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"default":"_"}},"0:2234:2283":{"id":"0:2234:2283","crate_id":0,"name":"Parsed","span":{"filename":"src/format/parsed.rs","begin":[26,0],"end":[110,1]},"visibility":"public","docs":"Parsed parts of date and time. There are two classes of methods:\n\n- `set_*` methods try to set given field(s) while checking for the consistency.\n  It may or may not check for the range constraint immediately (for efficiency reasons).\n\n- `to_*` methods try to make a concrete date and time value out of set fields.\n  It fully checks any remaining out-of-range conditions and inconsistent/impossible fields.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":["0:2235:2230","0:2236:3022","0:2237:3024","0:2238:3028","0:2239:3033","0:2240:3035","0:2241:1946","0:2242:2913","0:2243:2915","0:2244:3042","0:2245:1944","0:2246:2234","0:2247:2232","0:2248:3047","0:2249:3049","0:2250:2538","0:2251:2539","0:2252:2540","0:2253:2353","0:2254:978"],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:558","a:2:8179:7659-0:2234:2283","a:2:2672:217-0:2234:2283","a:2:2736:7564-0:2234:2283","a:2:2686:225-0:2234:2283","a:2:8178:7660-0:2234:2283","b:2:2531-0:2234:2283","b:2:2542-0:2234:2283","b:2:2527-0:2234:2283","b:2:3331-0:2234:2283","b:2:2240-0:2234:2283","b:2:2537-0:2234:2283","b:2:2237-0:2234:2283","b:5:674-0:2234:2283","0:2262","0:2258","0:2259","0:2256","0:2261","0:2266","0:2268","0:2264"]}},"0:2240:3035":{"id":"0:2240:3035","crate_id":0,"name":"isoyear_mod_100","span":{"filename":"src/format/parsed.rs","begin":[59,4],"end":[59,36]},"visibility":"public","docs":"Year in the [ISO week date](../naive/struct.NaiveDate.html#week-date), modulo 100.\nImplies that the year is >= 1 BCE when set.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i32"}}],"bindings":[]}}}}},"0:879:2214":{"id":"0:879:2214","crate_id":0,"name":"format_with_items","span":{"filename":"src/naive/date.rs","begin":[1119,4],"end":[1125,5]},"visibility":"public","docs":"Formats the date with the specified formatting items.\nOtherwise it is the same as the ordinary `format` method.\n\nThe `Iterator` of items should be `Clone`able,\nsince the resulting `DelayedFormat` value may be formatted multiple times.\n\n# Example\n\n```\nuse chrono::NaiveDate;\nuse chrono::format::strftime::StrftimeItems;\n\nlet fmt = StrftimeItems::new(\"%Y-%m-%d\");\nlet d = NaiveDate::from_ymd_opt(2015, 9, 5).unwrap();\nassert_eq!(d.format_with_items(fmt.clone()).to_string(), \"2015-09-05\");\nassert_eq!(d.format(\"%Y-%m-%d\").to_string(),             \"2015-09-05\");\n```\n\nThe resulting `DelayedFormat` can be formatted directly via the `Display` trait.\n\n```\n# use chrono::NaiveDate;\n# use chrono::format::strftime::StrftimeItems;\n# let fmt = StrftimeItems::new(\"%Y-%m-%d\").clone();\n# let d = NaiveDate::from_ymd_opt(2015, 9, 5).unwrap();\nassert_eq!(format!(\"{}\", d.format_with_items(fmt)), \"2015-09-05\");\n```","links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]","#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["items",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2291:2080","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7245:156","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"B"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2231:96","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2143:2081","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:885:4279":{"id":"0:885:4279","crate_id":0,"name":"iter_days","span":{"filename":"src/naive/date.rs","begin":[1224,4],"end":[1226,5]},"visibility":"public","docs":"Returns an iterator that steps by days across all representable dates.\n\n# Example\n\n```\n# use chrono::NaiveDate;\n\nlet expected = [\n    NaiveDate::from_ymd_opt(2016, 2, 27).unwrap(),\n    NaiveDate::from_ymd_opt(2016, 2, 28).unwrap(),\n    NaiveDate::from_ymd_opt(2016, 2, 29).unwrap(),\n    NaiveDate::from_ymd_opt(2016, 3, 1).unwrap(),\n];\n\nlet mut count = 0;\nfor (idx, d) in NaiveDate::from_ymd_opt(2016, 2, 27).unwrap().iter_days().take(4).enumerate() {\n   assert_eq!(d, expected[idx]);\n   count += 1;\n}\nassert_eq!(count, 4);\n\nfor d in NaiveDate::from_ymd_opt(2016, 3, 1).unwrap().iter_days().rev().take(4) {\n    count -= 1;\n    assert_eq!(d, expected[count]);\n}\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveDateDaysIterator","id":"0:2342:4280","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2342:4280":{"id":"0:2342:4280","crate_id":0,"name":"NaiveDateDaysIterator","span":{"filename":"src/naive/date.rs","begin":[1795,0],"end":[1797,1]},"visibility":"public","docs":"Iterator over `NaiveDate` with a step size of one day.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":[]}},"0:2014:720":{"id":"0:2014:720","crate_id":0,"name":"hash","span":{"filename":"src/format/mod.rs","begin":[99,38],"end":[99,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9297:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:112:2234":{"id":"0:112:2234","crate_id":0,"name":"ordinal","span":{"filename":"src/date.rs","begin":[395,4],"end":[397,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1375:271":{"id":"0:1375:271","crate_id":0,"name":"add","span":{"filename":"src/offset/fixed.rs","begin":[220,4],"end":[222,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:894:2232":{"id":"0:894:2232","crate_id":0,"name":"day","span":{"filename":"src/naive/date.rs","begin":[1358,4],"end":[1360,5]},"visibility":"default","docs":"Returns the day of month starting from 1.\n\nThe return value ranges from 1 to 31. (The last day of month differs by months.)\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().day(), 8);\nassert_eq!(NaiveDate::from_ymd_opt(-308, 3, 14).unwrap().day(), 14);\n```\n\nCombined with [`NaiveDate::pred`](#method.pred),\none can determine the number of days in a particular month.\n(Note that this panics when `year` is out of range.)\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nfn ndays_in_month(year: i32, month: u32) -> u32 {\n    // the first day of the next month...\n    let (y, m) = if month == 12 { (year + 1, 1) } else { (year, month + 1) };\n    let d = NaiveDate::from_ymd_opt(y, m, 1).unwrap();\n\n    // ...is preceded by the last day of the original month\n    d.pred().day()\n}\n\nassert_eq!(ndays_in_month(2015, 8), 31);\nassert_eq!(ndays_in_month(2015, 9), 30);\nassert_eq!(ndays_in_month(2015, 12), 31);\nassert_eq!(ndays_in_month(2016, 2), 29);\nassert_eq!(ndays_in_month(2017, 2), 28);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1354":{"id":"0:1354","crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[135,0],"end":[147,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9069:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1355:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3331-0:2776:1909":{"id":"b:2:3331-0:2776:1909","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3329:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Local","id":"0:2776:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3333:1470"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1698:659":{"id":"0:1698:659","crate_id":0,"name":"fmt","span":{"filename":"src/offset/utc.rs","begin":[116,4],"end":[118,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:9044:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:9033:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2091":{"id":"0:2091","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[254,23],"end":[254,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2301:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2084:2779","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2084:2779","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2092:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2794":{"id":"0:2794","crate_id":0,"name":null,"span":{"filename":"src/offset/utc.rs","begin":[43,37],"end":[43,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9289:139","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:2783:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2795:720"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:847:2409":{"id":"0:847:2409","crate_id":0,"name":"checked_add_days","span":{"filename":"src/naive/date.rs","begin":[657,4],"end":[663,5]},"visibility":"public","docs":"Add a duration in [`Days`] to the date\n\nReturns `None` if the resulting date would be out of range.\n\n```\n# use chrono::{NaiveDate, Days};\nassert_eq!(\n    NaiveDate::from_ymd_opt(2022, 2, 20).unwrap().checked_add_days(Days::new(9)),\n    Some(NaiveDate::from_ymd_opt(2022, 3, 1).unwrap())\n);\nassert_eq!(\n    NaiveDate::from_ymd_opt(2022, 7, 31).unwrap().checked_add_days(Days::new(2)),\n    Some(NaiveDate::from_ymd_opt(2022, 8, 2).unwrap())\n);\nassert_eq!(\n    NaiveDate::from_ymd_opt(2022, 7, 31).unwrap().checked_add_days(Days::new(1000000000000)),\n    None\n);\n```","links":{"`Days`":"0:2305:1937"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["days",{"kind":"resolved_path","inner":{"name":"Days","id":"0:2305:1937","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1275:1395":{"id":"0:1275:1395","crate_id":0,"name":"sub","span":{"filename":"src/naive/time/mod.rs","begin":[1144,4],"end":[1146,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1950:604":{"id":"0:1950:604","crate_id":0,"name":"eq","span":{"filename":"src/format/mod.rs","begin":[76,22],"end":[76,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:1938:2508","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8178:7660-0:2797:1940":{"id":"a:2:8178:7660-0:2797:1940","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:8178:7660","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8178:7660","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2797:1940","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2837":{"id":"0:2837","crate_id":0,"name":null,"span":{"filename":"src/round.rs","begin":[241,9],"end":[241,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9069:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RoundingError","id":"0:2830:1943","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2838:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3331-0:2084:2779":{"id":"b:2:3331-0:2084:2779","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3329:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2084:2779","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3333:1470"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:674-0:2203:2817":{"id":"b:5:674-0:2203:2817","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:670:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2203:2817","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:676:8076","5:677:8077","5:678:8078"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1350:5938":{"id":"0:1350:5938","crate_id":0,"name":"offset_from_utc_date","span":{"filename":"src/offset/fixed.rs","begin":[121,4],"end":[123,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["_utc",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1832":{"id":"0:1832","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[156,0],"end":[191,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["from_u16","from_i32","from_isize","from_u128","from_i128","from_i8","from_usize","from_f64","from_f32","from_u8","from_i16","from_u32"],"trait":{"name":"FromPrimitive","id":"23:161:5232","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:2894:1916","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1833:6860","0:1834:6859","0:1835:5318"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2935":{"id":"0:2935","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[30,20],"end":[30,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2306:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:2894:1916","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1874:2542":{"id":"0:1874:2542","crate_id":0,"name":"with_minute","span":{"filename":"src/traits.rs","begin":[157,4],"end":[157,52]},"visibility":"default","docs":"Makes a new value with the minute number changed.\n\nReturns `None` when the resulting value would be invalid.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["min",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2027":{"id":"0:2027","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[155,26],"end":[155,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2301:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:2016:2727","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:2016:2727","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2028:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:843:2477":{"id":"0:843:2477","crate_id":0,"name":"parse_from_str","span":{"filename":"src/naive/date.rs","begin":[531,4],"end":[535,5]},"visibility":"public","docs":"Parses a string with the specified format string and returns a new `NaiveDate`.\nSee the [`format::strftime` module](../format/strftime/index.html)\non the supported escape sequences.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet parse_from_str = NaiveDate::parse_from_str;\n\nassert_eq!(parse_from_str(\"2015-09-05\", \"%Y-%m-%d\"),\n           Ok(NaiveDate::from_ymd_opt(2015, 9, 5).unwrap()));\nassert_eq!(parse_from_str(\"5sep2015\", \"%d%b%Y\"),\n           Ok(NaiveDate::from_ymd_opt(2015, 9, 5).unwrap()));\n```\n\nTime and offset is ignored for the purpose of parsing.\n\n```\n# use chrono::NaiveDate;\n# let parse_from_str = NaiveDate::parse_from_str;\nassert_eq!(parse_from_str(\"2014-5-17T12:34:56+09:30\", \"%Y-%m-%dT%H:%M:%S%z\"),\n           Ok(NaiveDate::from_ymd_opt(2014, 5, 17).unwrap()));\n```\n\nOut-of-bound dates or insufficient fields are errors.\n\n```\n# use chrono::NaiveDate;\n# let parse_from_str = NaiveDate::parse_from_str;\nassert!(parse_from_str(\"2015/9\", \"%Y/%m\").is_err());\nassert!(parse_from_str(\"2015/9/31\", \"%Y/%m/%d\").is_err());\n```\n\nAll parsed fields should be consistent to each other, otherwise it's an error.\n\n```\n# use chrono::NaiveDate;\n# let parse_from_str = NaiveDate::parse_from_str;\nassert!(parse_from_str(\"Sat, 09 Aug 2013\", \"%a, %d %b %Y\").is_err());\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["fmt",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:455:1935","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1105:659":{"id":"0:1105:659","crate_id":0,"name":"fmt","span":{"filename":"src/naive/datetime/mod.rs","begin":[1715,4],"end":[1719,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:9044:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:9033:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2457:1023":{"id":"0:2457:1023","crate_id":0,"name":"partial_cmp","span":{"filename":"src/naive/isoweek.rs","begin":[19,24],"end":[19,34]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"IsoWeek","id":"0:2448:1938","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::option::Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Ordering","id":"2:30596:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2736:7564-0:1959:2507":{"id":"a:2:2736:7564-0:1959:2507","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:7564","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:1959:2507","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2736:7564-0:2830:1943":{"id":"a:2:2736:7564-0:2830:1943","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:7564","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RoundingError","id":"0:2830:1943","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:8178:7660-0:2300:1939":{"id":"a:2:8178:7660-0:2300:1939","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8178:7660","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveWeek","id":"0:2300:1939","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:272:685":{"id":"0:272:685","crate_id":0,"name":"from","span":{"filename":"src/datetime/mod.rs","begin":[496,4],"end":[498,5]},"visibility":"default","docs":"Convert this `DateTime<Local>` instance into a `DateTime<Utc>` instance.\n\nConversion is performed via [`DateTime::with_timezone`], accounting for the difference in\ntimezones.","links":{"`DateTime::with_timezone`":"0:242:2183"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["src",{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Local","id":"0:2776:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:773-0:2186:1934":{"id":"0:773-0:2186:1934","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[472,17],"end":[472,27]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"format::ParseError","name":"ParseError","id":"0:2186:1934","glob":false}},"0:1807:2920":{"id":"0:1807:2920","crate_id":0,"name":"number_from_monday","span":{"filename":"src/weekday.rs","begin":[75,4],"end":[77,5]},"visibility":"public","docs":"Returns a day-of-week number starting from Monday = 1. (ISO 8601 weekday number)\n\n`w`:                      | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun`\n------------------------- | ----- | ----- | ----- | ----- | ----- | ----- | -----\n`w.number_from_monday()`: | 1     | 2     | 3     | 4     | 5     | 6     | 7","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:373:183":{"id":"0:373:183","crate_id":0,"name":"Output","span":{"filename":"src/datetime/mod.rs","begin":[934,4],"end":[934,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}},"0:2077":{"id":"0:2077","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[170,27],"end":[170,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2306:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2029:2284","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1039:2206":{"id":"0:1039:2206","crate_id":0,"name":"MIN","span":{"filename":"src/naive/datetime/mod.rs","begin":[907,4],"end":[907,78]},"visibility":"public","docs":"The minimum possible `NaiveDateTime`.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"b:2:2537-0:2448:1938":{"id":"b:2:2537-0:2448:1938","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IsoWeek","id":"0:2448:1938","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2540:126","2:2541:1457"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2686:225-0:1938:2508":{"id":"a:2:2686:225-0:1938:2508","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:1938:2508","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1270:1395":{"id":"0:1270:1395","crate_id":0,"name":"sub","span":{"filename":"src/naive/time/mod.rs","begin":[1083,4],"end":[1085,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1818":{"id":"0:1818","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[177,0],"end":[181,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9074:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:2884:1945","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1819:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2537-0:1881:1908":{"id":"b:2:2537-0:1881:1908","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["2:2540:126","2:2541:1457"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:167:1395":{"id":"0:167:1395","crate_id":0,"name":"sub","span":{"filename":"src/date.rs","begin":[513,4],"end":[515,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:107:2230":{"id":"0:107:2230","crate_id":0,"name":"year","span":{"filename":"src/date.rs","begin":[375,4],"end":[377,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:904:2241":{"id":"0:904:2241","crate_id":0,"name":"with_day0","span":{"filename":"src/naive/date.rs","begin":[1561,4],"end":[1563,5]},"visibility":"default","docs":"Makes a new `NaiveDate` with the day of month (starting from 0) changed.\n\nReturns `None` when the resulting `NaiveDate` would be invalid.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().with_day0(29),\n           Some(NaiveDate::from_ymd_opt(2015, 9, 30).unwrap()));\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().with_day0(30),\n           None); // no September 31\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["day0",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:947:659":{"id":"0:947:659","crate_id":0,"name":"fmt","span":{"filename":"src/naive/date.rs","begin":[1895,4],"end":[1912,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:9044:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:9033:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1011:3165":{"id":"0:1011:3165","crate_id":0,"name":"from_timestamp_opt","span":{"filename":"src/naive/datetime/mod.rs","begin":[237,4],"end":[248,5]},"visibility":"public","docs":"Makes a new `NaiveDateTime` corresponding to a UTC date and time,\nfrom the number of non-leap seconds\nsince the midnight UTC on January 1, 1970 (aka \"UNIX timestamp\")\nand the number of nanoseconds since the last whole non-leap second.\n\nThe nanosecond part can exceed 1,000,000,000\nin order to represent the [leap second](./struct.NaiveTime.html#leap-second-handling).\n(The true \"UNIX timestamp\" cannot represent a leap second unambiguously.)\n\nReturns `None` on the out-of-range number of seconds (more than 262 000 years away\nfrom common era) and/or invalid nanosecond (2 seconds or more).\n\n# Example\n\n```\nuse chrono::{NaiveDateTime, NaiveDate};\nuse std::i64;\n\nlet from_timestamp_opt = NaiveDateTime::from_timestamp_opt;\n\nassert!(from_timestamp_opt(0, 0).is_some());\nassert!(from_timestamp_opt(0, 999_999_999).is_some());\nassert!(from_timestamp_opt(0, 1_500_000_000).is_some()); // leap second\nassert!(from_timestamp_opt(0, 2_000_000_000).is_none());\nassert!(from_timestamp_opt(i64::MAX, 0).is_none());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["secs",{"kind":"primitive","inner":"i64"}],["nsecs",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2005":{"id":"0:2005","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[99,16],"end":[99,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2682:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:1959:2507","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2891":{"id":"0:2891","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[168,27],"end":[168,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2683:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:2884:1945","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1867:1917":{"id":"0:1867:1917","crate_id":0,"name":"Timelike","span":{"filename":"src/traits.rs","begin":[122,0],"end":[178,1]},"visibility":"public","docs":"The common set of methods for time component.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:1868:2131","0:1869:2921","0:1870:2538","0:1871:2539","0:1872:2540","0:1873:2541","0:1874:2542","0:1875:2543","0:1876:2544","0:1877:4833"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:1253","0:325","0:1066"]}},"b:2:2527-0:1915:1913":{"id":"b:2:2527-0:1915:1913","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["2:2530:2607"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1266":{"id":"0:1266","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[1027,0],"end":[1032,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AddAssign","id":"2:2796:2073","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Duration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1267:272"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2240-0:2783:1920":{"id":"b:2:2240-0:2783:1920","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2234:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:2783:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2242:6046"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1694:3179":{"id":"0:1694:3179","crate_id":0,"name":"offset_from_utc_datetime","span":{"filename":"src/offset/utc.rs","begin":[104,4],"end":[106,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["_utc",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:2783:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2847":{"id":"0:2847","crate_id":0,"name":null,"span":{"filename":"src/round.rs","begin":[241,38],"end":[241,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2684:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RoundingError","id":"0:2830:1943","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2831:6743":{"id":"0:2831:6743","crate_id":0,"name":"DurationExceedsTimestamp","span":{"filename":"src/round.rs","begin":[254,4],"end":[254,28]},"visibility":"default","docs":"Error when the Duration exceeds the Duration from or until the Unix epoch.\n\n``` rust\n# use chrono::{DateTime, DurationRound, Duration, RoundingError, TimeZone, Utc};\nlet dt = Utc.with_ymd_and_hms(1970, 12, 12, 0, 0, 0).unwrap();\n\nassert_eq!(\n    dt.duration_round(Duration::days(365)),\n    Err(RoundingError::DurationExceedsTimestamp),\n);\n```","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:1887:415":{"id":"0:1887:415","crate_id":0,"name":"clone","span":{"filename":"src/date.rs","begin":[58,9],"end":[58,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11936:30388":{"id":"2:11936:30388","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:11872:411","self::pattern":"2:11573:1962","str::rsplitn":"2:11939:30390"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"2:42749:7323","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11578:7280","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2483":{"id":"0:2483","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[190,53],"end":[190,58]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2484:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11964:38838":{"id":"2:11964:38838","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:919:183":{"id":"0:919:183","crate_id":0,"name":"Output","span":{"filename":"src/naive/date.rs","begin":[1706,4],"end":[1706,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:840:4052":{"id":"0:840:4052","crate_id":0,"name":"from_num_days_from_ce_opt","span":{"filename":"src/naive/date.rs","begin":[439,4],"end":[445,5]},"visibility":"public","docs":"Makes a new `NaiveDate` from a day's number in the proleptic Gregorian calendar, with\nJanuary 1, 1 being day 1.\n\nReturns `None` if the date is out of range.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet from_ndays_opt = NaiveDate::from_num_days_from_ce_opt;\nlet from_ymd = |y, m, d| NaiveDate::from_ymd_opt(y, m, d).unwrap();\n\nassert_eq!(from_ndays_opt(730_000),      Some(from_ymd(1999, 9, 3)));\nassert_eq!(from_ndays_opt(1),            Some(from_ymd(1, 1, 1)));\nassert_eq!(from_ndays_opt(0),            Some(from_ymd(0, 12, 31)));\nassert_eq!(from_ndays_opt(-1),           Some(from_ymd(0, 12, 30)));\nassert_eq!(from_ndays_opt(100_000_000),  None);\nassert_eq!(from_ndays_opt(-100_000_000), None);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["days",{"kind":"primitive","inner":"i32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1277:659":{"id":"0:1277:659","crate_id":0,"name":"fmt","span":{"filename":"src/naive/time/mod.rs","begin":[1178,4],"end":[1202,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:9044:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:9033:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1654":{"id":"0:1654","crate_id":0,"name":null,"span":{"filename":"src/offset/local/mod.rs","begin":[95,0],"end":[184,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["yo","timestamp","timestamp_opt","yo_opt","isoywd","ymd","timestamp_millis","timestamp_millis_opt","ymd_opt","timestamp_nanos","datetime_from_str","from_local_datetime","from_local_date","with_ymd_and_hms","from_utc_date","from_utc_datetime","isoywd_opt"],"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Local","id":"0:2776:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1655:1924","0:1656:2180","0:1657:5931","0:1659:5933","0:1661:5938","0:1662:3179","0:1663:2212","0:1665:2125","0:1666:2186","0:1667:2395"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2388":{"id":"0:2388","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[82,20],"end":[82,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2683:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2386":{"id":"0:2386","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[82,9],"end":[82,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2301:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2387:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2240-0:2830:1943":{"id":"b:2:2240-0:2830:1943","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2234:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RoundingError","id":"0:2830:1943","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2242:6046"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:229:2334":{"id":"0:229:2334","crate_id":0,"name":"from_local","span":{"filename":"src/datetime/mod.rs","begin":[145,4],"end":[149,5]},"visibility":"public","docs":"Makes a new `DateTime` with given **local** datetime and offset that\npresents local timezone.\n\n# Example\n\n```\nuse chrono::DateTime;\nuse chrono::naive::NaiveDate;\nuse chrono::offset::{Utc, FixedOffset};\n\nlet naivedatetime_utc = NaiveDate::from_ymd_opt(2000, 1, 12).unwrap().and_hms_opt(2, 0, 0).unwrap();\nlet datetime_utc = DateTime::<Utc>::from_utc(naivedatetime_utc, Utc);\n\nlet timezone_east = FixedOffset::east_opt(8 * 60 * 60).unwrap();\nlet naivedatetime_east = NaiveDate::from_ymd_opt(2000, 1, 12).unwrap().and_hms_opt(10, 0, 0).unwrap();\nlet datetime_east = DateTime::<FixedOffset>::from_local(naivedatetime_east, timezone_east);\n\nlet timezone_west = FixedOffset::west_opt(7 * 60 * 60).unwrap();\nlet naivedatetime_west = NaiveDate::from_ymd_opt(2000, 1, 11).unwrap().and_hms_opt(19, 0, 0).unwrap();\nlet datetime_west = DateTime::<FixedOffset>::from_local(naivedatetime_west, timezone_west);\nassert_eq!(datetime_east, datetime_utc.with_timezone(&timezone_east));\nassert_eq!(datetime_west, datetime_utc.with_timezone(&timezone_west));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["datetime",{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["offset",{"kind":"qualified_path","inner":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Tz"},"trait":{"name":"","id":"0:1722:1925","args":null}}}]],"output":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1267:272":{"id":"0:1267:272","crate_id":0,"name":"add_assign","span":{"filename":"src/naive/time/mod.rs","begin":[1029,4],"end":[1031,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:140":{"id":"0:140","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[459,0],"end":[463,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["gt","ge","le","lt"],"trait":{"name":"PartialOrd","id":"2:2343:186","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:142:1023"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:678:8078":{"id":"5:678:8078","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["target",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:236:2381":{"id":"0:236:2381","crate_id":0,"name":"timestamp_nanos","span":{"filename":"src/datetime/mod.rs","begin":[260,4],"end":[262,5]},"visibility":"public","docs":"Returns the number of non-leap-nanoseconds since January 1, 1970 UTC\n\nNote that this does reduce the number of years that can be represented\nfrom ~584 Billion to ~584. (If this is a problem, please file\nan issue to let me know what domain needs nanosecond precision over\nmillennia, I'm curious.)\n\n# Example\n\n```\nuse chrono::{Utc, TimeZone, NaiveDate};\n\nlet dt = NaiveDate::from_ymd_opt(1970, 1, 1).unwrap().and_hms_nano_opt(0, 0, 1, 444).unwrap().and_local_timezone(Utc).unwrap();\nassert_eq!(dt.timestamp_nanos(), 1_000_000_444);\n\nlet dt = NaiveDate::from_ymd_opt(2001, 9, 9).unwrap().and_hms_nano_opt(1, 46, 40, 555).unwrap().and_local_timezone(Utc).unwrap();\nassert_eq!(dt.timestamp_nanos(), 1_000_000_000_000_000_555);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2341:415":{"id":"0:2341:415","crate_id":0,"name":"clone","span":{"filename":"src/naive/date.rs","begin":[187,53],"end":[187,58]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2487":{"id":"0:2487","crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[25,9],"end":[25,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2682:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1696:2336":{"id":"0:1696:2336","crate_id":0,"name":"fix","span":{"filename":"src/offset/utc.rs","begin":[110,4],"end":[112,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2011":{"id":"0:2011","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[99,31],"end":[99,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9069:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:1959:2507","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2012:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2481:422":{"id":"0:2481:422","crate_id":0,"name":"cmp","span":{"filename":"src/naive/time/mod.rs","begin":[190,42],"end":[190,45]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Ordering","id":"2:30596:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1980:1938":{"id":"0:1980:1938","crate_id":0,"name":"IsoWeek","span":{"filename":"src/format/mod.rs","begin":[124,4],"end":[124,11]},"visibility":"default","docs":"Week number in the ISO week date (FW=PW=2).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:1110:2564":{"id":"0:1110:2564","crate_id":0,"name":"from_str","span":{"filename":"src/naive/datetime/mod.rs","begin":[1774,4],"end":[1799,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:455:1935","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1710":{"id":"0:1710","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[89,0],"end":[180,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2797:1940","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:1712:2121","0:1713:2134","0:1714:2144","0:1715:2153","0:1716:2162"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2237-0:2830:1943":{"id":"b:2:2237-0:2830:1943","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2231:96","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RoundingError","id":"0:2830:1943","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2239:2071"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1809:3144":{"id":"0:1809:3144","crate_id":0,"name":"num_days_from_monday","span":{"filename":"src/weekday.rs","begin":[95,4],"end":[97,5]},"visibility":"public","docs":"Returns a day-of-week number starting from Monday = 0.\n\n`w`:                        | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun`\n--------------------------- | ----- | ----- | ----- | ----- | ----- | ----- | -----\n`w.num_days_from_monday()`: | 0     | 1     | 2     | 3     | 4     | 5     | 6","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2258":{"id":"0:2258","crate_id":0,"name":null,"span":{"filename":"src/format/parsed.rs","begin":[25,16],"end":[25,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2682:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Parsed","id":"0:2234:2283","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:872:2175":{"id":"0:872:2175","crate_id":0,"name":"pred","span":{"filename":"src/naive/date.rs","begin":[958,4],"end":[960,5]},"visibility":"public","docs":"Makes a new `NaiveDate` for the previous calendar date.\n\nPanics when `self` is the first representable date.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `pred_opt()` instead\")]","#[inline]"],"deprecation":{"since":"0.4.23","note":"use `pred_opt()` instead"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2475":{"id":"0:2475","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[190,24],"end":[190,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9289:139","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2476:720"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2864:2893":{"id":"0:2864:2893","crate_id":0,"name":"Sat","span":{"filename":"src/weekday.rs","begin":[27,4],"end":[27,11]},"visibility":"default","docs":"Saturday.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":{"expr":"5","value":"5"}}},"b:5:674-0:2848:1918":{"id":"b:5:674-0:2848:1918","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:670:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2848:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:676:8076","5:677:8077","5:678:8078"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2871":{"id":"0:2871","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[11,9],"end":[11,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2301:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2848:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2848:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2872:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2672:217-0:2300:1939":{"id":"a:2:2672:217-0:2300:1939","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveWeek","id":"0:2300:1939","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:420-0:224:1932":{"id":"0:420-0:224:1932","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[465,58],"end":[465,70]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"datetime::MIN_DATETIME","name":"MIN_DATETIME","id":"0:224:1932","glob":false}},"0:1754-0:1722:1925":{"id":"0:1754-0:1722:1925","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[484,51],"end":[484,59]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"offset::TimeZone","name":"TimeZone","id":"0:1722:1925","glob":false}},"b:2:2537-0:2305:1937":{"id":"b:2:2537-0:2305:1937","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Days","id":"0:2305:1937","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2540:126","2:2541:1457"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2240-0:2776:1909":{"id":"b:2:2240-0:2776:1909","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2234:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Local","id":"0:2776:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2242:6046"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3331-0:2305:1937":{"id":"b:2:3331-0:2305:1937","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3329:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Days","id":"0:2305:1937","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3333:1470"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1261:2544":{"id":"0:1261:2544","crate_id":0,"name":"with_nanosecond","span":{"filename":"src/naive/time/mod.rs","begin":[942,4],"end":[947,5]},"visibility":"default","docs":"Makes a new `NaiveTime` with nanoseconds since the whole non-leap second changed.\n\nReturns `None` when the resulting `NaiveTime` would be invalid.\nAs with the [`nanosecond`](#method.nanosecond) method,\nthe input range can exceed 1,000,000,000 for leap seconds.\n\n# Example\n\n```\nuse chrono::{NaiveTime, Timelike};\n\nlet dt = NaiveTime::from_hms_nano_opt(23, 56, 4, 12_345_678).unwrap();\nassert_eq!(dt.with_nanosecond(333_333_333),\n           Some(NaiveTime::from_hms_nano_opt(23, 56, 4, 333_333_333).unwrap()));\nassert_eq!(dt.with_nanosecond(2_000_000_000), None);\n```\n\nLeap seconds can theoretically follow *any* whole second.\nThe following would be a proper leap second at the time zone offset of UTC-00:03:57\n(there are several historical examples comparable to this \"non-sense\" offset),\nand therefore is allowed.\n\n```\n# use chrono::{NaiveTime, Timelike};\n# let dt = NaiveTime::from_hms_nano_opt(23, 56, 4, 12_345_678).unwrap();\nassert_eq!(dt.with_nanosecond(1_333_333_333),\n           Some(NaiveTime::from_hms_nano_opt(23, 56, 4, 1_333_333_333).unwrap()));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["nano",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:146":{"id":"0:146","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[471,0],"end":[475,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9289:139","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:148:720"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1015:1598":{"id":"0:1015:1598","crate_id":0,"name":"time","span":{"filename":"src/naive/datetime/mod.rs","begin":[353,4],"end":[355,5]},"visibility":"public","docs":"Retrieves a time component.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveTime};\n\nlet dt = NaiveDate::from_ymd_opt(2016, 7, 8).unwrap().and_hms_opt(9, 10, 11).unwrap();\nassert_eq!(dt.time(), NaiveTime::from_hms_opt(9, 10, 11).unwrap());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:85:2191":{"id":"0:85:2191","crate_id":0,"name":"checked_sub_signed","span":{"filename":"src/date.rs","begin":[260,4],"end":[263,5]},"visibility":"public","docs":"Subtracts given `Duration` from the current date.\n\nReturns `None` when it will result in overflow.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1656:2180":{"id":"0:1656:2180","crate_id":0,"name":"from_offset","span":{"filename":"src/offset/local/mod.rs","begin":[98,4],"end":[100,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["_offset",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Local","id":"0:2776:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1813:659":{"id":"0:1813:659","crate_id":0,"name":"fmt","span":{"filename":"src/weekday.rs","begin":[121,4],"end":[131,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:9044:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:9033:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5380:2935":{"id":"5:5380:2935","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7239:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7239:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5390:6394":{"id":"5:5390:6394","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7239:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7239:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:5633-0:2466:1923":{"id":"b:5:5633-0:2466:1923","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9074:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5631:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5635:1434"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8178:7660-0:1888:1914":{"id":"a:2:8178:7660-0:1888:1914","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8178:7660","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SecondsFormat","id":"0:1888:1914","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:280:2454":{"id":"0:280:2454","crate_id":0,"name":"parse_from_rfc2822","span":{"filename":"src/datetime/mod.rs","begin":[536,4],"end":[541,5]},"visibility":"public","docs":"Parses an RFC 2822 date and time string such as `Tue, 1 Jul 2003 10:52:37 +0200`,\nthen returns a new [`DateTime`] with a parsed [`FixedOffset`].\n\nRFC 2822 is the internet message standard that specifies the\nrepresentation of times in HTTP and email headers.\n\n```\n# use chrono::{DateTime, FixedOffset, TimeZone, NaiveDate};\nassert_eq!(\n    DateTime::parse_from_rfc2822(\"Wed, 18 Feb 2015 23:16:09 GMT\").unwrap(),\n    FixedOffset::east_opt(0).unwrap().with_ymd_and_hms(2015, 2, 18, 23, 16, 9).unwrap()\n);\n```","links":{"`DateTime`":"0:1915:1913","`FixedOffset`":"0:2485:1919"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:455:1935","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2461":{"id":"0:2461","crate_id":0,"name":null,"span":{"filename":"src/naive/isoweek.rs","begin":[19,47],"end":[19,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IsoWeek","id":"0:2448:1938","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2462:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2238:3028":{"id":"0:2238:3028","crate_id":0,"name":"isoyear","span":{"filename":"src/format/parsed.rs","begin":[47,4],"end":[47,28]},"visibility":"public","docs":"Year in the [ISO week date](../naive/struct.NaiveDate.html#week-date).\n\nThis can be negative unlike [`isoyear_div_100`](#structfield.isoyear_div_100) and\n[`isoyear_mod_100`](#structfield.isoyear_mod_100) fields.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i32"}}],"bindings":[]}}}}},"b:2:3331-0:2797:1940":{"id":"b:2:3331-0:2797:1940","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3329:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2797:1940","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3333:1470"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:924":{"id":"0:924","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[1744,0],"end":[1751,1]},"visibility":"default","docs":"A subtraction of `Duration` from `NaiveDate` discards the fractional days,\nrounding to the closest integral number of days towards `Duration::zero()`.\nIt is the same as the addition with a negated `Duration`.\n\nPanics on underflow or overflow.\nUse [`NaiveDate::checked_sub_signed`](#method.checked_sub_signed) to detect that.\n\n# Example\n\n```\nuse chrono::{Duration, NaiveDate};\n\nlet from_ymd = NaiveDate::from_ymd;\n\nassert_eq!(from_ymd(2014, 1, 1) - Duration::zero(),             from_ymd(2014, 1, 1));\nassert_eq!(from_ymd(2014, 1, 1) - Duration::seconds(86399),     from_ymd(2014, 1, 1));\nassert_eq!(from_ymd(2014, 1, 1) - Duration::seconds(-86399),    from_ymd(2014, 1, 1));\nassert_eq!(from_ymd(2014, 1, 1) - Duration::days(1),            from_ymd(2013, 12, 31));\nassert_eq!(from_ymd(2014, 1, 1) - Duration::days(-1),           from_ymd(2014, 1, 2));\nassert_eq!(from_ymd(2014, 1, 1) - Duration::days(364),          from_ymd(2013, 1, 2));\nassert_eq!(from_ymd(2014, 1, 1) - Duration::days(365*4 + 1),    from_ymd(2010, 1, 1));\nassert_eq!(from_ymd(2014, 1, 1) - Duration::days(365*400 + 97), from_ymd(1614, 1, 1));\n```","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:2770:2074","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Duration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:925:183","0:926:1395"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1351:3179":{"id":"0:1351:3179","crate_id":0,"name":"offset_from_utc_datetime","span":{"filename":"src/offset/fixed.rs","begin":[124,4],"end":[126,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["_utc",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1226":{"id":"0:1226","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[208,0],"end":[758,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1227:5529","0:1228:2137","0:1229:5541","0:1230:2146","0:1232:5552","0:1233:2155","0:1235:5563","0:1236:2164","0:1237:5576","0:1238:4780","0:1239:2477","0:1240:4923","0:1241:4950","0:1242:2196","0:1244:2214","0:1248:670","0:1251:2206"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2833:6744":{"id":"0:2833:6744","crate_id":0,"name":"DurationExceedsLimit","span":{"filename":"src/round.rs","begin":[267,4],"end":[267,24]},"visibility":"default","docs":"Error when `Duration.num_nanoseconds` exceeds the limit.\n\n``` rust\n# use chrono::{DateTime, DurationRound, Duration, RoundingError, TimeZone, Utc, NaiveDate};\nlet dt = NaiveDate::from_ymd_opt(2260, 12, 31).unwrap().and_hms_nano_opt(23, 59, 59, 1_75_500_000).unwrap().and_local_timezone(Utc).unwrap();\n\nassert_eq!(\n    dt.duration_round(Duration::days(300 * 365)),\n    Err(RoundingError::DurationExceedsLimit)\n);\n```","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"b:2:2527-0:2300:1939":{"id":"b:2:2527-0:2300:1939","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveWeek","id":"0:2300:1939","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2530:2607"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:953:2564":{"id":"0:953:2564","crate_id":0,"name":"from_str","span":{"filename":"src/naive/date.rs","begin":[1962,4],"end":[1977,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:455:1935","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:396:659":{"id":"0:396:659","crate_id":0,"name":"fmt","span":{"filename":"src/datetime/mod.rs","begin":[986,4],"end":[989,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:9044:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:9033:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2527-0:1959:2507":{"id":"b:2:2527-0:1959:2507","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:1959:2507","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2530:2607"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1786":{"id":"0:1786","crate_id":0,"name":null,"span":{"filename":"src/round.rs","begin":[160,0],"end":[170,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"DurationRound","id":"0:1776:1942","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1787:125","0:1788:6731","0:1789:6736"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1095":{"id":"0:1095","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1662,0],"end":[1669,1]},"visibility":"default","docs":"Subtracts another `NaiveDateTime` from the current date and time.\nThis does not overflow or underflow at all.\n\nAs a part of Chrono's [leap second handling](./struct.NaiveTime.html#leap-second-handling),\nthe subtraction assumes that **there is no leap second ever**,\nexcept when any of the `NaiveDateTime`s themselves represents a leap second\nin which case the assumption becomes that\n**there are exactly one (or two) leap second(s) ever**.\n\nThe implementation is a wrapper around [`NaiveDateTime::signed_duration_since`].\n\n# Example\n\n```\nuse chrono::{Duration, NaiveDate};\n\nlet from_ymd = NaiveDate::from_ymd;\n\nlet d = from_ymd(2016, 7, 8);\nassert_eq!(d.and_hms_opt(3, 5, 7).unwrap() - d.and_hms_opt(2, 4, 6).unwrap(), Duration::seconds(3600 + 60 + 1));\n\n// July 8 is 190th day in the year 2016\nlet d0 = from_ymd(2016, 1, 1);\nassert_eq!(d.and_hms_milli_opt(0, 7, 6, 500).unwrap() - d0.and_hms_opt(0, 0, 0).unwrap(),\n           Duration::seconds(189 * 86_400 + 7 * 60 + 6) + Duration::milliseconds(500));\n```\n\nLeap seconds are handled, but the subtraction assumes that no other leap\nseconds happened.\n\n```\n# use chrono::{Duration, NaiveDate};\n# let from_ymd = NaiveDate::from_ymd;\nlet leap = from_ymd(2015, 6, 30).and_hms_milli_opt(23, 59, 59, 1_500).unwrap();\nassert_eq!(leap - from_ymd(2015, 6, 30).and_hms_opt(23, 0, 0).unwrap(),\n           Duration::seconds(3600) + Duration::milliseconds(500));\nassert_eq!(from_ymd(2015, 7, 1).and_hms_opt(1, 0, 0).unwrap() - leap,\n           Duration::seconds(3600) - Duration::milliseconds(500));\n```","links":{"`NaiveDateTime::signed_duration_since`":"0:1030:2196"},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:2770:2074","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1096:183","0:1097:1395"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2491":{"id":"0:2491","crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[25,20],"end":[25,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2306:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1829:2175":{"id":"0:1829:2175","crate_id":0,"name":"pred","span":{"filename":"src/month.rs","begin":[91,4],"end":[106,5]},"visibility":"public","docs":"The previous month.\n\n`m`:        | `January`  | `February` | `...` | `December`\n----------- | ---------  | ---------- | --- | ---------\n`m.pred()`: | `December` | `January`  | `...` | `November`","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Month","id":"0:2894:1916","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2537-0:2485:1919":{"id":"b:2:2537-0:2485:1919","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2540:126","2:2541:1457"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2879":{"id":"0:2879","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[11,37],"end":[11,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9069:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2848:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2880:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:239:2393":{"id":"0:239:2393","crate_id":0,"name":"timestamp_subsec_nanos","span":{"filename":"src/datetime/mod.rs","begin":[290,4],"end":[292,5]},"visibility":"public","docs":"Returns the number of nanoseconds since the last second boundary\n\nwarning: in event of a leap second, this may exceed 999_999_999\n\nnote: this is not the number of nanoseconds since January 1, 1970 0:00:00 UTC","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8178:7660-0:2776:1909":{"id":"a:2:8178:7660-0:2776:1909","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8178:7660","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Local","id":"0:2776:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:62:2130":{"id":"0:62:2130","crate_id":0,"name":"and_hms","span":{"filename":"src/date.rs","begin":[100,4],"end":[102,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date, hour, minute and second.\nThe offset in the current date is preserved.\n\nPanics on invalid hour, minute and/or second.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"Use and_hms_opt() instead\")]","#[inline]"],"deprecation":{"since":"0.4.23","note":"Use and_hms_opt() instead"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["hour",{"kind":"primitive","inner":"u32"}],["min",{"kind":"primitive","inner":"u32"}],["sec",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:595:3168":{"id":"0:595:3168","crate_id":0,"name":"to_fixed_offset","span":{"filename":"src/format/parsed.rs","begin":[614,4],"end":[616,5]},"visibility":"public","docs":"Returns a parsed fixed time zone offset out of given fields.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:455:1935","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8178:7660-0:2203:2817":{"id":"a:2:8178:7660-0:2203:2817","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8178:7660","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2203:2817","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:84:2189":{"id":"0:84:2189","crate_id":0,"name":"checked_add_signed","span":{"filename":"src/date.rs","begin":[251,4],"end":[254,5]},"visibility":"public","docs":"Adds given `Duration` to the current date.\n\nReturns `None` when it will result in overflow.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2852:2889":{"id":"0:2852:2889","crate_id":0,"name":"Tue","span":{"filename":"src/weekday.rs","begin":[19,4],"end":[19,11]},"visibility":"default","docs":"Tuesday.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":{"expr":"1","value":"1"}}},"0:2004:415":{"id":"0:2004:415","crate_id":0,"name":"clone","span":{"filename":"src/format/mod.rs","begin":[99,9],"end":[99,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:1959:2507","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2240-0:2029:2284":{"id":"b:2:2240-0:2029:2284","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2234:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2029:2284","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2242:6046"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:143":{"id":"0:143","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[465,0],"end":[469,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["min","max","clamp"],"trait":{"name":"Ord","id":"2:2337:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:145:422"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2333:720":{"id":"0:2333:720","crate_id":0,"name":"hash","span":{"filename":"src/naive/date.rs","begin":[187,24],"end":[187,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9297:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1741:2212":{"id":"0:1741:2212","crate_id":0,"name":"from_local_date","span":{"filename":"src/offset/mod.rs","begin":[455,4],"end":[460,5]},"visibility":"default","docs":"Converts the local `NaiveDate` to the timezone-aware `Date` if possible.","links":{},"attrs":["#[allow(clippy :: wrong_self_convention)]","#[deprecated(since = \"0.4.23\", note = \"use `from_local_datetime()` instead\")]","#[allow(deprecated)]"],"deprecation":{"since":"0.4.23","note":"use `from_local_datetime()` instead"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["local",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2797:1940","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2240-0:2305:1937":{"id":"b:2:2240-0:2305:1937","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2234:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Days","id":"0:2305:1937","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2242:6046"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:5633-0:1881:1908":{"id":"b:5:5633-0:1881:1908","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9074:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5631:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["5:5635:1434"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1688":{"id":"0:1688","crate_id":0,"name":null,"span":{"filename":"src/offset/utc.rs","begin":[87,0],"end":[107,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["yo","timestamp","timestamp_opt","yo_opt","isoywd","ymd","timestamp_millis","timestamp_millis_opt","ymd_opt","timestamp_nanos","datetime_from_str","from_local_datetime","from_local_date","with_ymd_and_hms","from_utc_date","from_utc_datetime","isoywd_opt"],"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:2783:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1689:1924","0:1690:2180","0:1691:5931","0:1692:5933","0:1693:5938","0:1694:3179"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2531-0:2964:1948":{"id":"b:2:2531-0:2964:1948","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseMonthError","id":"0:2964:1948","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2533:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2194":{"id":"0:2194","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[348,23],"end":[348,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2301:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2186:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2186:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2195:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11939:30390":{"id":"2:11939:30390","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:11872:411","str::splitn":"2:11936:30388","self::pattern":"2:11573:1962"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitN","id":"2:42767:7322","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11578:7280","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11578:7280","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11593:7308","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2068:2726":{"id":"0:2068:2726","crate_id":0,"name":"Internal","span":{"filename":"src/format/mod.rs","begin":[250,4],"end":[250,27]},"visibility":"default","docs":"Internal uses only.\n\nThis item exists so that one can add additional internal-only formatting\nwithout breaking major compatibility (as enum variants cannot be selectively private).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":{"tuple":["0:2070:1583"]},"discriminant":null}},"0:1659:5933":{"id":"0:1659:5933","crate_id":0,"name":"offset_from_local_datetime","span":{"filename":"src/offset/local/mod.rs","begin":[108,4],"end":[110,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["local",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2797:1940","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2541:1457":{"id":"2:2541:1457","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:40824:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:674-0:2234:2283":{"id":"b:5:674-0:2234:2283","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:670:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Parsed","id":"0:2234:2283","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:676:8076","5:677:8077","5:678:8078"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2019:415":{"id":"0:2019:415","crate_id":0,"name":"clone","span":{"filename":"src/format/mod.rs","begin":[155,9],"end":[155,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:2016:2727","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1339:5976":{"id":"0:1339:5976","crate_id":0,"name":"east","span":{"filename":"src/offset/fixed.rs","begin":[37,4],"end":[39,5]},"visibility":"public","docs":"Makes a new `FixedOffset` for the Eastern Hemisphere with given timezone difference.\nThe negative `secs` means the Western Hemisphere.\n\nPanics on the out-of-bound `secs`.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `east_opt()` instead\")]"],"deprecation":{"since":"0.4.23","note":"use `east_opt()` instead"},"kind":"function","inner":{"decl":{"inputs":[["secs",{"kind":"primitive","inner":"i32"}]],"output":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2783:1920":{"id":"0:2783:1920","crate_id":0,"name":"Utc","span":{"filename":"src/offset/utc.rs","begin":[46,0],"end":[46,15]},"visibility":"public","docs":"The UTC time zone. This is the most efficient time zone when you don't need the local time.\nIt is also used as an offset (which is also a dummy type).\n\nUsing the [`TimeZone`](./trait.TimeZone.html) methods\non the UTC struct is the preferred way to construct `DateTime<Utc>`\ninstances.\n\n# Example\n\n```\nuse chrono::{DateTime, TimeZone, NaiveDateTime, Utc};\n\nlet dt = DateTime::<Utc>::from_utc(NaiveDateTime::from_timestamp(61, 0), Utc);\n\nassert_eq!(Utc.timestamp(61, 0), dt);\nassert_eq!(Utc.with_ymd_and_hms(1970, 1, 1, 0, 1, 1).unwrap(), dt);\n```","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":"unit","generics":{"params":[],"where_predicates":[]},"impls":["0:1685","a:2:8179:7659-0:2783:1920","a:2:2672:217-0:2783:1920","a:2:2736:7564-0:2783:1920","a:2:2686:225-0:2783:1920","a:2:8178:7660-0:2783:1920","b:2:2531-0:2783:1920","b:2:2542-0:2783:1920","b:2:2527-0:2783:1920","b:2:3331-0:2783:1920","b:2:2240-0:2783:1920","b:2:2537-0:2783:1920","b:2:2237-0:2783:1920","b:5:5633-0:2783:1920","b:5:674-0:2783:1920","0:1699","0:2792","0:1695","0:2788","0:1697","0:2791","0:2794","0:2785","0:2789","0:2786","0:1688"]}},"0:1911:604":{"id":"0:1911:604","crate_id":0,"name":"eq","span":{"filename":"src/datetime/mod.rs","begin":[55,33],"end":[55,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"SecondsFormat","id":"0:1888:1914","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2840:415":{"id":"0:2840:415","crate_id":0,"name":"clone","span":{"filename":"src/round.rs","begin":[241,16],"end":[241,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"RoundingError","id":"0:2830:1943","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:249:2411":{"id":"0:249:2411","crate_id":0,"name":"checked_sub_days","span":{"filename":"src/datetime/mod.rs","begin":[372,4],"end":[377,5]},"visibility":"public","docs":"Subtract a duration in [`Days`] from the date part of the `DateTime`\n\nReturns `None` if the resulting date would be out of range.","links":{"`Days`":"0:2305:1937"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["days",{"kind":"resolved_path","inner":{"name":"Days","id":"0:2305:1937","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1815:6859":{"id":"0:1815:6859","crate_id":0,"name":"from_i64","span":{"filename":"src/weekday.rs","begin":[139,4],"end":[150,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["n",{"kind":"primitive","inner":"i64"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2848:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8178:7660-0:2884:1945":{"id":"a:2:8178:7660-0:2884:1945","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8178:7660","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:2884:1945","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1291-0:828:1927":{"id":"0:1291-0:828:1927","crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[14,49],"end":[14,57]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"self::date::MAX_DATE","name":"MAX_DATE","id":"0:828:1927","glob":false}},"b:2:2537-0:2272:2082":{"id":"b:2:2537-0:2272:2082","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2272:2082","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2540:126","2:2541:1457"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1871:2539":{"id":"0:1871:2539","crate_id":0,"name":"second","span":{"filename":"src/traits.rs","begin":[142,4],"end":[142,28]},"visibility":"default","docs":"Returns the second number from 0 to 59.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:759:2219":{"id":"0:759:2219","crate_id":0,"name":"new_with_offset","span":{"filename":"src/format/mod.rs","begin":[882,4],"end":[900,5]},"visibility":"public","docs":"Makes a new `DelayedFormat` value out of local date and time and UTC offset.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["date",{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}],["time",{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}],["offset",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Off"}}}],["items",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2291:2080","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Off","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Off"},"bounds":[{"trait_bound":{"trait":{"name":"Offset","id":"0:1720:1924","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"fmt::Display","id":"2:9074:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3331-0:2300:1939":{"id":"b:2:3331-0:2300:1939","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3329:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveWeek","id":"0:2300:1939","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3333:1470"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:869:2168":{"id":"0:869:2168","crate_id":0,"name":"succ","span":{"filename":"src/naive/date.rs","begin":[931,4],"end":[933,5]},"visibility":"public","docs":"Makes a new `NaiveDate` for the next calendar date.\n\nPanics when `self` is the last representable date.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `succ_opt()` instead\")]","#[inline]"],"deprecation":{"since":"0.4.23","note":"use `succ_opt()` instead"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1195:2230":{"id":"0:1195:2230","crate_id":0,"name":"year","span":{"filename":"src/naive/isoweek.rs","begin":[74,4],"end":[76,5]},"visibility":"public","docs":"Returns the year number for this ISO week.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike, Weekday};\n\nlet d = NaiveDate::from_isoywd(2015, 1, Weekday::Mon);\nassert_eq!(d.iso_week().year(), 2015);\n```\n\nThis year number might not match the calendar year number.\nContinuing the example...\n\n```\n# use chrono::{NaiveDate, Datelike, Weekday};\n# let d = NaiveDate::from_isoywd(2015, 1, Weekday::Mon);\nassert_eq!(d.year(), 2014);\nassert_eq!(d, NaiveDate::from_ymd_opt(2014, 12, 29).unwrap());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2469":{"id":"0:2469","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[190,9],"end":[190,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2682:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2872:604":{"id":"0:2872:604","crate_id":0,"name":"eq","span":{"filename":"src/weekday.rs","begin":[11,9],"end":[11,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2848:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1877:4833":{"id":"0:1877:4833","crate_id":0,"name":"num_seconds_from_midnight","span":{"filename":"src/traits.rs","begin":[175,4],"end":[177,5]},"visibility":"default","docs":"Returns the number of non-leap seconds past the last midnight.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2533:685":{"id":"2:2533:685","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1842-0:2945:1947":{"id":"0:1842-0:2945:1947","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[493,23],"end":[493,29]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"month::Months","name":"Months","id":"0:2945:1947","glob":false}},"0:2889":{"id":"0:2889","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[168,16],"end":[168,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2301:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:2884:1945","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:2884:1945","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2890:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11884:5314":{"id":"2:11884:5314","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:40682:176"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9754:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9754:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11957:38836":{"id":"2:11957:38836","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:11573:1962","`DoubleEndedIterator`":"2:7167:119","prim@char":"1:11872:411","str::match_indices":"2:11954:38835"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatchIndices","id":"2:42813:7327","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11578:7280","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11578:7280","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11593:7308","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5388:39494":{"id":"5:5388:39494","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7239:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7239:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:6-20:317:1903":{"id":"0:6-20:317:1903","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[419,28],"end":[419,43]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"oldtime::OutOfRangeError","name":"OutOfRangeError","id":"20:317:1903","glob":false}},"0:876:2191":{"id":"0:876:2191","crate_id":0,"name":"checked_sub_signed","span":{"filename":"src/naive/date.rs","begin":[1029,4],"end":[1040,5]},"visibility":"public","docs":"Subtracts the `days` part of given `Duration` from the current date.\n\nReturns `None` when it will result in overflow.\n\n# Example\n\n```\nuse chrono::{Duration, NaiveDate};\n\nlet d = NaiveDate::from_ymd_opt(2015, 9, 5).unwrap();\nassert_eq!(d.checked_sub_signed(Duration::days(40)),\n           Some(NaiveDate::from_ymd_opt(2015, 7, 27).unwrap()));\nassert_eq!(d.checked_sub_signed(Duration::days(-40)),\n           Some(NaiveDate::from_ymd_opt(2015, 10, 15).unwrap()));\nassert_eq!(d.checked_sub_signed(Duration::days(1_000_000_000)), None);\nassert_eq!(d.checked_sub_signed(Duration::days(-1_000_000_000)), None);\nassert_eq!(NaiveDate::MIN.checked_sub_signed(Duration::days(1)), None);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1957:720":{"id":"0:1957:720","crate_id":0,"name":"hash","span":{"filename":"src/format/mod.rs","begin":[76,44],"end":[76,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9297:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1067:2131":{"id":"0:1067:2131","crate_id":0,"name":"hour","span":{"filename":"src/naive/datetime/mod.rs","begin":[1267,4],"end":[1269,5]},"visibility":"default","docs":"Returns the hour number from 0 to 23.\n\nSee also the [`NaiveTime::hour`] method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Timelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().and_hms_milli_opt(12, 34, 56, 789).unwrap();\nassert_eq!(dt.hour(), 12);\n```","links":{"`NaiveTime::hour`":"0:1254:2131"},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2313":{"id":"0:2313","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[129,29],"end":[129,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2683:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Days","id":"0:2305:1937","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1109:125":{"id":"0:1109:125","crate_id":0,"name":"Err","span":{"filename":"src/naive/datetime/mod.rs","begin":[1772,4],"end":[1772,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2186:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:1905:659":{"id":"0:1905:659","crate_id":0,"name":"fmt","span":{"filename":"src/datetime/mod.rs","begin":[55,22],"end":[55,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:9044:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:9033:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2160:1584":{"id":"0:2160:1584","crate_id":0,"name":"1","span":{"filename":"src/format/mod.rs","begin":[304,21],"end":[304,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:1938:2508","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:2392:720":{"id":"0:2392:720","crate_id":0,"name":"hash","span":{"filename":"src/naive/datetime/mod.rs","begin":[82,24],"end":[82,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9297:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2736:7564-0:2324:1921":{"id":"a:2:2736:7564-0:2324:1921","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:7564","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2016:2727":{"id":"0:2016:2727","crate_id":0,"name":"InternalNumeric","span":{"filename":"src/format/mod.rs","begin":[156,0],"end":[158,1]},"visibility":"public","docs":"An opaque type representing numeric item types for internal uses only.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:8179:7659-0:2016:2727","a:2:2672:217-0:2016:2727","a:2:2736:7564-0:2016:2727","a:2:2686:225-0:2016:2727","a:2:8178:7660-0:2016:2727","b:2:2531-0:2016:2727","b:2:2542-0:2016:2727","b:2:2527-0:2016:2727","b:2:3331-0:2016:2727","b:2:2240-0:2016:2727","b:2:2537-0:2016:2727","b:2:2237-0:2016:2727","b:5:674-0:2016:2727","0:2021","0:2020","0:2023","0:2027","0:2026","0:2018","0:444"]}},"0:1720:1924":{"id":"0:1720:1924","crate_id":0,"name":"Offset","span":{"filename":"src/offset/mod.rs","begin":[196,0],"end":[199,1]},"visibility":"public","docs":"The offset from the local time to UTC.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:1721:2336"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:9069:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:1352","0:1695"]}},"0:1663:2212":{"id":"0:1663:2212","crate_id":0,"name":"from_local_date","span":{"filename":"src/offset/local/mod.rs","begin":[123,4],"end":[129,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["local",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2797:1940","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Local","id":"0:2776:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2542-0:2029:2284":{"id":"b:2:2542-0:2029:2284","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2029:2284","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:126","2:2546:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11995:38843":{"id":"2:11995:38843","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4519:38843"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDebug","id":"2:42944:7329","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1701-0:2783:1920":{"id":"0:1701-0:2783:1920","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[38,0],"end":[38,23]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::utc::Utc","name":"Utc","id":"0:2783:1920","glob":false}},"b:2:2527-0:2945:1947":{"id":"b:2:2527-0:2945:1947","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Months","id":"0:2945:1947","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2530:2607"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2736:7564-0:2300:1939":{"id":"a:2:2736:7564-0:2300:1939","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:7564","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveWeek","id":"0:2300:1939","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2950":{"id":"0:2950","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[194,16],"end":[194,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2684:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Months","id":"0:2945:1947","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2339":{"id":"0:2339","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[187,47],"end":[187,51]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2684:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2246:2234":{"id":"0:2246:2234","crate_id":0,"name":"ordinal","span":{"filename":"src/format/parsed.rs","begin":[80,4],"end":[80,28]},"visibility":"public","docs":"Day of the year (1--365 or 1--366 depending on the year).","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u32"}}],"bindings":[]}}}}},"0:1777:125":{"id":"0:1777:125","crate_id":0,"name":"Err","span":{"filename":"src/round.rs","begin":[104,4],"end":[104,32]},"visibility":"default","docs":"Error that can occur in rounding or truncating","links":{},"attrs":["#[cfg(any(feature = \"std\", test))]"],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"std::error::Error","id":"2:2592:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}},"b:2:2531-0:2305:1937":{"id":"b:2:2531-0:2305:1937","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Days","id":"0:2305:1937","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2533:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1085:183":{"id":"0:1085:183","crate_id":0,"name":"Output","span":{"filename":"src/naive/datetime/mod.rs","begin":[1482,4],"end":[1482,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:2382:1922":{"id":"0:2382:1922","crate_id":0,"name":"NaiveDateTime","span":{"filename":"src/naive/datetime/mod.rs","begin":[85,0],"end":[88,1]},"visibility":"public","docs":"ISO 8601 combined date and time without timezone.\n\n# Example\n\n`NaiveDateTime` is commonly created from [`NaiveDate`](./struct.NaiveDate.html).\n\n```\nuse chrono::{NaiveDate, NaiveDateTime};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2016, 7, 8).unwrap().and_hms_opt(9, 10, 11).unwrap();\n# let _ = dt;\n```\n\nYou can use typical [date-like](../trait.Datelike.html) and\n[time-like](../trait.Timelike.html) methods,\nprovided that relevant traits are in the scope.\n\n```\n# use chrono::{NaiveDate, NaiveDateTime};\n# let dt: NaiveDateTime = NaiveDate::from_ymd_opt(2016, 7, 8).unwrap().and_hms_opt(9, 10, 11).unwrap();\nuse chrono::{Datelike, Timelike, Weekday};\n\nassert_eq!(dt.weekday(), Weekday::Fri);\nassert_eq!(dt.num_seconds_from_midnight(), 33011);\n```","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:1006","a:2:8179:7659-0:2382:1922","a:2:2672:217-0:2382:1922","a:2:2736:7564-0:2382:1922","a:2:2686:225-0:2382:1922","a:2:8178:7660-0:2382:1922","b:0:1771-0:2382:1922","b:2:2531-0:2382:1922","b:2:2542-0:2382:1922","b:2:2527-0:2382:1922","b:2:3331-0:2382:1922","b:2:2240-0:2382:1922","b:2:2537-0:2382:1922","b:2:2237-0:2382:1922","b:5:5633-0:2382:1922","b:5:674-0:2382:1922","0:1104","0:1087","0:2389","0:1090","0:2385","0:1366","0:2394","0:1092","0:2399","0:1082","0:1084","0:2391","0:1112","0:1786","0:2398","0:1066","0:2396","0:1101","0:1369","0:1095","0:1042","0:1098","0:1079","0:1106","0:1108","0:2388","0:2386"]}},"a:2:2686:225-0:2272:2082":{"id":"a:2:2686:225-0:2272:2082","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2272:2082","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:367":{"id":"0:367","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[925,0],"end":[931,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Add","id":"2:2765:2072","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Months","id":"0:2945:1947","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:369:183","0:370:271"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2781":{"id":"0:2781","crate_id":0,"name":null,"span":{"filename":"src/offset/local/mod.rs","begin":[54,22],"end":[54,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9069:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Local","id":"0:2776:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2782:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2901:2878":{"id":"0:2901:2878","crate_id":0,"name":"March","span":{"filename":"src/month.rs","begin":[40,4],"end":[40,13]},"visibility":"default","docs":"March","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":{"expr":"2","value":"2"}}},"0:1784:6731":{"id":"0:1784:6731","crate_id":0,"name":"duration_round","span":{"filename":"src/round.rs","begin":[151,4],"end":[153,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["duration",{"kind":"resolved_path","inner":{"name":"Duration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:40824:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:1776:1942","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2736:7564-0:2945:1947":{"id":"a:2:2736:7564-0:2945:1947","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:7564","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Months","id":"0:2945:1947","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1341:5987":{"id":"0:1341:5987","crate_id":0,"name":"west","span":{"filename":"src/offset/fixed.rs","begin":[68,4],"end":[70,5]},"visibility":"public","docs":"Makes a new `FixedOffset` for the Western Hemisphere with given timezone difference.\nThe negative `secs` means the Eastern Hemisphere.\n\nPanics on the out-of-bound `secs`.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `west_opt()` instead\")]"],"deprecation":{"since":"0.4.23","note":"use `west_opt()` instead"},"kind":"function","inner":{"decl":{"inputs":[["secs",{"kind":"primitive","inner":"i32"}]],"output":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1828:2168":{"id":"0:1828:2168","crate_id":0,"name":"succ","span":{"filename":"src/month.rs","begin":[68,4],"end":[83,5]},"visibility":"public","docs":"The next month.\n\n`m`:        | `January`  | `February` | `...` | `December`\n----------- | ---------  | ---------- | --- | ---------\n`m.succ()`: | `February` | `March`    | `...` | `January`","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Month","id":"0:2894:1916","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2040:2749":{"id":"0:2040:2749","crate_id":0,"name":"UpperAmPm","span":{"filename":"src/format/mod.rs","begin":[195,4],"end":[195,13]},"visibility":"default","docs":"AM/PM.\n\nPrints in upper case, reads in any case.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:2080:659":{"id":"0:2080:659","crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[170,31],"end":[170,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:9044:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:9033:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8178:7660-0:2945:1947":{"id":"a:2:8178:7660-0:2945:1947","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8178:7660","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Months","id":"0:2945:1947","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:5391:30156":{"id":"5:5391:30156","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:11993:30154"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7239:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2531-0:2797:1940":{"id":"b:2:2531-0:2797:1940","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2797:1940","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2533:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2214:2835":{"id":"0:2214:2835","crate_id":0,"name":"TooLong","span":{"filename":"src/format/mod.rs","begin":[384,4],"end":[384,11]},"visibility":"default","docs":"All formatting items have been read but there is a remaining input.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:1876:2544":{"id":"0:1876:2544","crate_id":0,"name":"with_nanosecond","span":{"filename":"src/traits.rs","begin":[171,4],"end":[171,57]},"visibility":"default","docs":"Makes a new value with nanoseconds since the whole non-leap second changed.\n\nReturns `None` when the resulting value would be invalid.\nAs with the [`nanosecond`](#tymethod.nanosecond) method,\nthe input range can exceed 1,000,000,000 for leap seconds.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["nano",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:1910":{"id":"0:1910","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[55,33],"end":[55,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2301:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"SecondsFormat","id":"0:1888:1914","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SecondsFormat","id":"0:1888:1914","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1911:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1073:2542":{"id":"0:1073:2542","crate_id":0,"name":"with_minute","span":{"filename":"src/naive/datetime/mod.rs","begin":[1363,4],"end":[1365,5]},"visibility":"default","docs":"Makes a new `NaiveDateTime` with the minute number changed.\n\nReturns `None` when the resulting `NaiveDateTime` would be invalid.\n\nSee also the\n[`NaiveTime::with_minute`] method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Timelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().and_hms_milli_opt(12, 34, 56, 789).unwrap();\nassert_eq!(dt.with_minute(45),\n           Some(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().and_hms_milli_opt(12, 45, 56, 789).unwrap()));\nassert_eq!(dt.with_minute(60), None);\n```","links":{"`NaiveTime::with_minute`":"0:1259:2542"},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["min",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1719:1524":{"id":"0:1719:1524","crate_id":0,"name":"unwrap","span":{"filename":"src/offset/mod.rs","begin":[184,4],"end":[192,5]},"visibility":"public","docs":"Returns the single unique conversion result, or panics accordingly.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:920:271":{"id":"0:920:271","crate_id":0,"name":"add","span":{"filename":"src/naive/date.rs","begin":[1708,4],"end":[1710,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["days",{"kind":"resolved_path","inner":{"name":"Days","id":"0:2305:1937","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:2765:2072","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:265":{"id":"0:265","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[455,0],"end":[462,1]},"visibility":"default","docs":"Convert a `DateTime<Utc>` instance into a `DateTime<Local>` instance.","links":{},"attrs":["#[cfg(feature = \"clock\")]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:2783:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Local","id":"0:2776:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:266:685"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1369":{"id":"0:1369","crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[207,0],"end":[214,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:2770:2074","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1370:183","0:1371:1395"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1044:1946":{"id":"0:1044:1946","crate_id":0,"name":"month","span":{"filename":"src/naive/datetime/mod.rs","begin":[975,4],"end":[977,5]},"visibility":"default","docs":"Returns the month number starting from 1.\n\nThe return value ranges from 1 to 12.\n\nSee also the [`NaiveDate::month`](./struct.NaiveDate.html#method.month) method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Datelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2015, 9, 25).unwrap().and_hms_opt(12, 34, 56).unwrap();\nassert_eq!(dt.month(), 9);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1737:3530":{"id":"0:1737:3530","crate_id":0,"name":"datetime_from_str","span":{"filename":"src/offset/mod.rs","begin":[436,4],"end":[440,5]},"visibility":"default","docs":"Parses a string with the specified format string and returns a\n`DateTime` with the current offset.\n\nSee the [`crate::format::strftime`] module on the\nsupported escape sequences.\n\nIf the to-be-parsed string includes an offset, it *must* match the\noffset of the TimeZone, otherwise an error will be returned.\n\nSee also [`DateTime::parse_from_str`] which gives a [`DateTime`] with\nparsed [`FixedOffset`].","links":{"`crate::format::strftime`":"0:725:2667","`FixedOffset`":"0:2485:1919","`DateTime::parse_from_str`":"0:284:2477","`DateTime`":"0:1915:1913"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["fmt",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:455:1935","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:411:685":{"id":"0:411:685","crate_id":0,"name":"from","span":{"filename":"src/datetime/mod.rs","begin":[1067,4],"end":[1069,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["t",{"kind":"resolved_path","inner":{"name":"SystemTime","id":"1:9051:2280","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Local","id":"0:2776:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2599-0:2830:1943":{"id":"b:2:2599-0:2830:1943","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Error","id":"2:2592:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Provider","id":"2:3380:19287","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RoundingError","id":"0:2830:1943","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2601:8224"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"E"}}},"0:410":{"id":"0:410","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1066,0],"end":[1070,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"clock\")]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"SystemTime","id":"1:9051:2280","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Local","id":"0:2776:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:411:685"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2537-0:2848:1918":{"id":"b:2:2537-0:2848:1918","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2848:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2540:126","2:2541:1457"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2216:2837":{"id":"0:2216:2837","crate_id":0,"name":"BadFormat","span":{"filename":"src/format/mod.rs","begin":[387,4],"end":[387,13]},"visibility":"default","docs":"There was an error on the formatting string, or there were non-supported formating items.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"b:2:2542-0:2964:1948":{"id":"b:2:2542-0:2964:1948","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseMonthError","id":"0:2964:1948","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:126","2:2546:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:330:2540":{"id":"0:330:2540","crate_id":0,"name":"nanosecond","span":{"filename":"src/datetime/mod.rs","begin":[836,4],"end":[838,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1707:850":{"id":"0:1707:850","crate_id":0,"name":"map","span":{"filename":"src/offset/mod.rs","begin":[79,4],"end":[85,5]},"visibility":"public","docs":"Maps a `LocalResult<T>` into `LocalResult<U>` with given function.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2797:1940","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:2941:2211","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"T"}],"output":{"kind":"generic","inner":"U"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1859:2237":{"id":"0:1859:2237","crate_id":0,"name":"with_year","span":{"filename":"src/traits.rs","begin":[59,4],"end":[59,51]},"visibility":"default","docs":"Makes a new value with the year number changed.\n\nReturns `None` when the resulting value would be invalid.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["year",{"kind":"primitive","inner":"i32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:57:1927":{"id":"0:57:1927","crate_id":0,"name":"MAX_DATE","span":{"filename":"src/date.rs","begin":[72,0],"end":[72,53]},"visibility":"public","docs":"The maximum possible `Date`.","links":{},"attrs":["#[allow(deprecated)]","#[deprecated(since = \"0.4.20\", note = \"Use Date::MAX_UTC instead\")]"],"deprecation":{"since":"0.4.20","note":"Use Date::MAX_UTC instead"},"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:2783:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"expr":"Date<Utc>::MAX_UTC","value":null,"is_literal":false}},"0:2050:2758":{"id":"0:2050:2758","crate_id":0,"name":"TimezoneName","span":{"filename":"src/format/mod.rs","begin":[209,4],"end":[209,16]},"visibility":"default","docs":"Timezone name.\n\nIt does not support parsing, its use in the parser is an immediate failure.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:303:1946":{"id":"0:303:1946","crate_id":0,"name":"month","span":{"filename":"src/datetime/mod.rs","begin":[754,4],"end":[756,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1652:2256":{"id":"0:1652:2256","crate_id":0,"name":"today","span":{"filename":"src/offset/local/mod.rs","begin":[63,4],"end":[65,5]},"visibility":"public","docs":"Returns a `Date` which corresponds to the current date.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `Local::now()` instead\")]","#[allow(deprecated)]"],"deprecation":{"since":"0.4.23","note":"use `Local::now()` instead"},"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Local","id":"0:2776:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:99:2214":{"id":"0:99:2214","crate_id":0,"name":"format_with_items","span":{"filename":"src/date.rs","begin":[318,4],"end":[324,5]},"visibility":"public","docs":"Formats the date with the specified formatting items.","links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]","#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["items",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2291:2080","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7245:156","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"B"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2231:96","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2143:2081","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1343:2951":{"id":"0:1343:2951","crate_id":0,"name":"local_minus_utc","span":{"filename":"src/offset/fixed.rs","begin":[96,4],"end":[98,5]},"visibility":"public","docs":"Returns the number of seconds to add to convert from UTC to the local time.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3331-0:2143:2081":{"id":"b:2:3331-0:2143:2081","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3329:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2143:2081","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3333:1470"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:896:2234":{"id":"0:896:2234","crate_id":0,"name":"ordinal","span":{"filename":"src/naive/date.rs","begin":[1414,4],"end":[1416,5]},"visibility":"default","docs":"Returns the day of year starting from 1.\n\nThe return value ranges from 1 to 366. (The last day of year differs by years.)\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().ordinal(), 251);\nassert_eq!(NaiveDate::from_ymd_opt(-308, 3, 14).unwrap().ordinal(), 74);\n```\n\nCombined with [`NaiveDate::pred`](#method.pred),\none can determine the number of days in a particular year.\n(Note that this panics when `year` is out of range.)\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nfn ndays_in_year(year: i32) -> u32 {\n    // the first day of the next year...\n    let d = NaiveDate::from_ymd_opt(year + 1, 1, 1).unwrap();\n\n    // ...is preceded by the last day of the original year\n    d.pred().ordinal()\n}\n\nassert_eq!(ndays_in_year(2015), 365);\nassert_eq!(ndays_in_year(2016), 366);\nassert_eq!(ndays_in_year(2017), 365);\nassert_eq!(ndays_in_year(2000), 366);\nassert_eq!(ndays_in_year(2100), 365);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2686:225-0:2894:1916":{"id":"a:2:2686:225-0:2894:1916","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:2894:1916","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:384:183":{"id":"0:384:183","crate_id":0,"name":"Output","span":{"filename":"src/datetime/mod.rs","begin":[961,4],"end":[961,30]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Duration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:1294-0:2382:1922":{"id":"0:1294-0:2382:1922","crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[19,25],"end":[19,38]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"self::datetime::NaiveDateTime","name":"NaiveDateTime","id":"0:2382:1922","glob":false}},"0:328:2538":{"id":"0:328:2538","crate_id":0,"name":"minute","span":{"filename":"src/datetime/mod.rs","begin":[828,4],"end":[830,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1851:1946":{"id":"0:1851:1946","crate_id":0,"name":"month","span":{"filename":"src/traits.rs","begin":[23,4],"end":[23,27]},"visibility":"default","docs":"Returns the month number starting from 1.\n\nThe return value ranges from 1 to 12.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:2672:217-0:2830:1943":{"id":"a:2:2672:217-0:2830:1943","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RoundingError","id":"0:2830:1943","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2542-0:1915:1913":{"id":"b:2:2542-0:1915:1913","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["2:2545:126","2:2546:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2168:415":{"id":"0:2168:415","crate_id":0,"name":"clone","span":{"filename":"src/format/mod.rs","begin":[288,9],"end":[288,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2143:2081","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2527-0:2797:1940":{"id":"b:2:2527-0:2797:1940","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2797:1940","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2530:2607"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:159:183":{"id":"0:159:183","crate_id":0,"name":"Output","span":{"filename":"src/date.rs","begin":[494,4],"end":[494,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}},"b:5:674-0:2466:1923":{"id":"b:5:674-0:2466:1923","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:670:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:676:8076","5:677:8077","5:678:8078"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:674-0:2783:1920":{"id":"b:5:674-0:2783:1920","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:670:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:2783:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:676:8076","5:677:8077","5:678:8078"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:77:2175":{"id":"0:77:2175","crate_id":0,"name":"pred","span":{"filename":"src/date.rs","begin":[216,4],"end":[218,5]},"visibility":"public","docs":"Makes a new `Date` for the prior date.\n\nPanics when `self` is the first representable date.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"Use pred_opt() instead\")]","#[inline]"],"deprecation":{"since":"0.4.23","note":"Use pred_opt() instead"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:400":{"id":"0:400","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[1014,0],"end":[1020,1]},"visibility":"default","docs":"Accepts a relaxed form of RFC3339.\nA space or a 'T' are acepted as the separator between the date and time\nparts. Additional spaces are allowed between each component.\n\nAll of these examples are equivalent:\n```\n# use chrono::{DateTime, Utc};\n\"2012-12-12T12:12:12Z\".parse::<DateTime<Utc>>();\n\"2012-12-12 12:12:12Z\".parse::<DateTime<Utc>>();\n\"2012-  12-12T12:  12:12Z\".parse::<DateTime<Utc>>();\n```","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:11534:2563","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:2783:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:401:125","0:402:2564"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:8178:7660-0:2783:1920":{"id":"a:2:8178:7660-0:2783:1920","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8178:7660","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:2783:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2064:2456":{"id":"0:2064:2456","crate_id":0,"name":"RFC2822","span":{"filename":"src/format/mod.rs","begin":[242,4],"end":[242,11]},"visibility":"default","docs":"RFC 2822 date and time syntax. Commonly used for email and MIME date and time.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:765:659":{"id":"0:765:659","crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[934,4],"end":[950,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:9044:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:9033:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:459":{"id":"0:459","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[414,0],"end":[419,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(any(feature = \"std\", test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["provide","cause","description","source","type_id"],"trait":{"name":"Error","id":"2:2592:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2186:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:460:2847"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2858:2891":{"id":"0:2858:2891","crate_id":0,"name":"Thu","span":{"filename":"src/weekday.rs","begin":[23,4],"end":[23,11]},"visibility":"default","docs":"Thursday.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":{"expr":"3","value":"3"}}},"0:1795:659":{"id":"0:1795:659","crate_id":0,"name":"fmt","span":{"filename":"src/round.rs","begin":[281,4],"end":[293,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:9044:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:9033:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:409:685":{"id":"0:409:685","crate_id":0,"name":"from","span":{"filename":"src/datetime/mod.rs","begin":[1046,4],"end":[1061,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["t",{"kind":"resolved_path","inner":{"name":"SystemTime","id":"1:9051:2280","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:2783:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2542-0:2466:1923":{"id":"b:2:2542-0:2466:1923","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:126","2:2546:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:10-0:1768:1912":{"id":"0:10-0:1768:1912","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[443,4],"end":[443,31]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::SubsecRound","name":"SubsecRound","id":"0:1768:1912","glob":false}},"0:836:3139":{"id":"0:836:3139","crate_id":0,"name":"from_yo_opt","span":{"filename":"src/naive/date.rs","begin":[319,4],"end":[322,5]},"visibility":"public","docs":"Makes a new `NaiveDate` from the [ordinal date](#ordinal-date)\n(year and day of the year).\n\nReturns `None` on the out-of-range date and/or invalid day of year.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet from_yo_opt = NaiveDate::from_yo_opt;\n\nassert!(from_yo_opt(2015, 100).is_some());\nassert!(from_yo_opt(2015, 0).is_none());\nassert!(from_yo_opt(2015, 365).is_some());\nassert!(from_yo_opt(2015, 366).is_none());\nassert!(from_yo_opt(-4, 366).is_some()); // 5 BCE is a leap year\nassert!(from_yo_opt(400000, 1).is_none());\nassert!(from_yo_opt(-400000, 1).is_none());\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["year",{"kind":"primitive","inner":"i32"}],["ordinal",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2736:7564-0:2305:1937":{"id":"a:2:2736:7564-0:2305:1937","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:7564","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Days","id":"0:2305:1937","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1869:2921":{"id":"0:1869:2921","crate_id":0,"name":"hour12","span":{"filename":"src/traits.rs","begin":[129,4],"end":[136,5]},"visibility":"default","docs":"Returns the hour number from 1 to 12 with a boolean flag,\nwhich is false for AM and true for PM.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"bool"},{"kind":"primitive","inner":"u32"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2736:7564-0:1915:1913":{"id":"a:2:2736:7564-0:1915:1913","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Tz"},"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2736:7564","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:7564","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:8178:7660-0:2143:2081":{"id":"a:2:8178:7660-0:2143:2081","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8178:7660","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2143:2081","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:353":{"id":"0:353","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[894,0],"end":[898,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["min","max","clamp"],"trait":{"name":"Ord","id":"2:2337:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:355:422"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2032:2740":{"id":"0:2032:2740","crate_id":0,"name":"LongMonthName","span":{"filename":"src/format/mod.rs","begin":[179,4],"end":[179,17]},"visibility":"default","docs":"Full month names.\n\nPrints a full name in the title case, reads either a short or full name in any case.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"b:5:5633-0:2186:1934":{"id":"b:5:5633-0:2186:1934","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9074:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5631:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2186:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5635:1434"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1770:6713":{"id":"0:1770:6713","crate_id":0,"name":"trunc_subsecs","span":{"filename":"src/round.rs","begin":[44,4],"end":[44,48]},"visibility":"default","docs":"Return a copy truncated to the specified number of subsecond\ndigits. With 9 or more digits, self is returned unmodified.\n\n# Example\n``` rust\n# use chrono::{DateTime, SubsecRound, Timelike, TimeZone, Utc, NaiveDate};\nlet dt = NaiveDate::from_ymd_opt(2018, 1, 11).unwrap().and_hms_milli_opt(12, 0, 0, 154).unwrap().and_local_timezone(Utc).unwrap();\nassert_eq!(dt.trunc_subsecs(2).nanosecond(), 150_000_000);\nassert_eq!(dt.trunc_subsecs(1).nanosecond(), 100_000_000);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["digits",{"kind":"primitive","inner":"u16"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:852:2121":{"id":"0:852:2121","crate_id":0,"name":"and_time","span":{"filename":"src/naive/date.rs","begin":[711,4],"end":[713,5]},"visibility":"public","docs":"Makes a new `NaiveDateTime` from the current date and given `NaiveTime`.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveTime, NaiveDateTime};\n\nlet d = NaiveDate::from_ymd_opt(2015, 6, 3).unwrap();\nlet t = NaiveTime::from_hms_milli_opt(12, 34, 56, 789).unwrap();\n\nlet dt: NaiveDateTime = d.and_time(t);\nassert_eq!(dt.date(), d);\nassert_eq!(dt.time(), t);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["time",{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2531-0:2830:1943":{"id":"b:2:2531-0:2830:1943","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RoundingError","id":"0:2830:1943","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2533:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:908:183":{"id":"0:908:183","crate_id":0,"name":"Output","span":{"filename":"src/naive/date.rs","begin":[1637,4],"end":[1637,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"b:5:674-0:2830:1943":{"id":"b:5:674-0:2830:1943","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:670:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RoundingError","id":"0:2830:1943","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:676:8076","5:677:8077","5:678:8078"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2932":{"id":"0:2932","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[30,9],"end":[30,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2301:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Month","id":"0:2894:1916","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:2894:1916","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2933:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2934":{"id":"0:2934","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[30,20],"end":[30,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2683:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:2894:1916","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2484:415":{"id":"0:2484:415","crate_id":0,"name":"clone","span":{"filename":"src/naive/time/mod.rs","begin":[190,53],"end":[190,58]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1810:2919":{"id":"0:1810:2919","crate_id":0,"name":"num_days_from_sunday","span":{"filename":"src/weekday.rs","begin":[105,4],"end":[107,5]},"visibility":"public","docs":"Returns a day-of-week number starting from Sunday = 0.\n\n`w`:                        | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun`\n--------------------------- | ----- | ----- | ----- | ----- | ----- | ----- | -----\n`w.num_days_from_sunday()`: | 1     | 2     | 3     | 4     | 5     | 6     | 0","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1047:2233":{"id":"0:1047:2233","crate_id":0,"name":"day0","span":{"filename":"src/naive/datetime/mod.rs","begin":[1032,4],"end":[1034,5]},"visibility":"default","docs":"Returns the day of month starting from 0.\n\nThe return value ranges from 0 to 30. (The last day of month differs by months.)\n\nSee also the [`NaiveDate::day0`](./struct.NaiveDate.html#method.day0) method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Datelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2015, 9, 25).unwrap().and_hms_opt(12, 34, 56).unwrap();\nassert_eq!(dt.day0(), 24);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:891:2230":{"id":"0:891:2230","crate_id":0,"name":"year","span":{"filename":"src/naive/date.rs","begin":[1284,4],"end":[1286,5]},"visibility":"default","docs":"Returns the year number in the [calendar date](#calendar-date).\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().year(), 2015);\nassert_eq!(NaiveDate::from_ymd_opt(-308, 3, 14).unwrap().year(), -308); // 309 BCE\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2942":{"id":"0:2942","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[30,44],"end":[30,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9289:139","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:2894:1916","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2943:720"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1108":{"id":"0:1108","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1771,0],"end":[1800,1]},"visibility":"default","docs":"Parsing a `str` into a `NaiveDateTime` uses the same format,\n[`%Y-%m-%dT%H:%M:%S%.f`](crate::format::strftime), as in `Debug`.\n\n# Example\n\n```\nuse chrono::{NaiveDateTime, NaiveDate};\n\nlet dt = NaiveDate::from_ymd_opt(2015, 9, 18).unwrap().and_hms_opt(23, 56, 4).unwrap();\nassert_eq!(\"2015-09-18T23:56:04\".parse::<NaiveDateTime>(), Ok(dt));\n\nlet dt = NaiveDate::from_ymd_opt(12345, 6, 7).unwrap().and_hms_milli_opt(7, 59, 59, 1_500).unwrap(); // leap second\nassert_eq!(\"+12345-6-7T7:59:60.5\".parse::<NaiveDateTime>(), Ok(dt));\n\nassert!(\"foo\".parse::<NaiveDateTime>().is_err());\n```","links":{"crate::format::strftime":"0:725:2667"},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:11534:2563","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1109:125","0:1110:2564"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2736:7564-0:1938:2508":{"id":"a:2:2736:7564-0:1938:2508","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:7564","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:1938:2508","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2815:604":{"id":"0:2815:604","crate_id":0,"name":"eq","span":{"filename":"src/offset/mod.rs","begin":[41,16],"end":[41,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2797:1940","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1743:2125":{"id":"0:1743:2125","crate_id":0,"name":"from_local_datetime","span":{"filename":"src/offset/mod.rs","begin":[464,4],"end":[467,5]},"visibility":"default","docs":"Converts the local `NaiveDateTime` to the timezone-aware `DateTime` if possible.","links":{},"attrs":["#[allow(clippy :: wrong_self_convention)]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["local",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2797:1940","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2686:225-0:2848:1918":{"id":"a:2:2686:225-0:2848:1918","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2848:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1904":{"id":"0:1904","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[55,22],"end":[55,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9069:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SecondsFormat","id":"0:1888:1914","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1905:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11904:2924":{"id":"2:11904:2924","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:11872:411","self::pattern":"2:11573:1962"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11578:7280","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2253:2353":{"id":"0:2253:2353","crate_id":0,"name":"timestamp","span":{"filename":"src/format/parsed.rs","begin":[103,4],"end":[103,30]},"visibility":"public","docs":"The number of non-leap seconds since the midnight UTC on January 1, 1970.\n\nThis can be off by one if [`second`](#structfield.second) is 60 (a leap second).","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i64"}}],"bindings":[]}}}}},"b:2:2537-0:2894:1916":{"id":"b:2:2537-0:2894:1916","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:2894:1916","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2540:126","2:2541:1457"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1862:2240":{"id":"0:1862:2240","crate_id":0,"name":"with_day","span":{"filename":"src/traits.rs","begin":[74,4],"end":[74,49]},"visibility":"default","docs":"Makes a new value with the day of month (starting from 1) changed.\n\nReturns `None` when the resulting value would be invalid.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["day",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:2736:7564-0:2884:1945":{"id":"a:2:2736:7564-0:2884:1945","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:7564","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:2884:1945","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2736:7564-0:2964:1948":{"id":"a:2:2736:7564-0:2964:1948","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:7564","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseMonthError","id":"0:2964:1948","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:5392:30155":{"id":"5:5392:30155","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:11994:30153"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7239:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:559:929":{"id":"0:559:929","crate_id":0,"name":"new","span":{"filename":"src/format/parsed.rs","begin":[130,4],"end":[132,5]},"visibility":"public","docs":"Returns the initial value of parsed parts.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Parsed","id":"0:2234:2283","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:444":{"id":"0:444","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[160,0],"end":[164,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9069:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:2016:2727","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:445:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:317:2240":{"id":"0:317:2240","crate_id":0,"name":"with_day","span":{"filename":"src/datetime/mod.rs","begin":[802,4],"end":[804,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["day",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2686:225-0:2234:2283":{"id":"a:2:2686:225-0:2234:2283","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Parsed","id":"0:2234:2283","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2237-0:2272:2082":{"id":"b:2:2237-0:2272:2082","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2231:96","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2272:2082","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2239:2071"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:5633-0:2324:1921":{"id":"b:5:5633-0:2324:1921","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9074:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5631:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5635:1434"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2076":{"id":"0:2076","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[170,27],"end":[170,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2683:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2029:2284","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2074":{"id":"0:2074","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[170,16],"end":[170,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2301:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2029:2284","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2029:2284","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2075:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2464:720":{"id":"0:2464:720","crate_id":0,"name":"hash","span":{"filename":"src/naive/isoweek.rs","begin":[19,54],"end":[19,58]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9297:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2686:225-0:2945:1947":{"id":"a:2:2686:225-0:2945:1947","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Months","id":"0:2945:1947","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2171":{"id":"0:2171","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[288,16],"end":[288,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2301:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2143:2081","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2143:2081","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:2173:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2672:217-0:1938:2508":{"id":"a:2:2672:217-0:1938:2508","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:1938:2508","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:575:3100":{"id":"0:575:3100","crate_id":0,"name":"set_hour","span":{"filename":"src/format/parsed.rs","begin":[244,4],"end":[249,5]},"visibility":"public","docs":"Tries to set both [`hour_div_12`](#structfield.hour_div_12) and\n[`hour_mod_12`](#structfield.hour_mod_12) fields from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["value",{"kind":"primitive","inner":"i64"}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:455:1935","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2844":{"id":"0:2844","crate_id":0,"name":null,"span":{"filename":"src/round.rs","begin":[241,34],"end":[241,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2683:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RoundingError","id":"0:2830:1943","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2312:659":{"id":"0:2312:659","crate_id":0,"name":"fmt","span":{"filename":"src/naive/date.rs","begin":[129,22],"end":[129,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:9044:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:9033:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1799-0:1776:1942":{"id":"0:1799-0:1776:1942","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[487,16],"end":[487,29]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"round::DurationRound","name":"DurationRound","id":"0:1776:1942","glob":false}},"0:263":{"id":"0:263","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[442,0],"end":[450,1]},"visibility":"default","docs":"Convert a `DateTime<Utc>` instance into a `DateTime<FixedOffset>` instance.","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:2783:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:264:685"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2542-0:2776:1909":{"id":"b:2:2542-0:2776:1909","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Local","id":"0:2776:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:126","2:2546:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:389:271":{"id":"0:389:271","crate_id":0,"name":"add","span":{"filename":"src/datetime/mod.rs","begin":[972,4],"end":[974,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["days",{"kind":"resolved_path","inner":{"name":"Days","id":"0:2305:1937","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:2765:2072","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3331-0:2382:1922":{"id":"b:2:3331-0:2382:1922","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3329:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3333:1470"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:347":{"id":"0:347","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[871,0],"end":[871,41]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2306:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1046:2232":{"id":"0:1046:2232","crate_id":0,"name":"day","span":{"filename":"src/naive/datetime/mod.rs","begin":[1013,4],"end":[1015,5]},"visibility":"default","docs":"Returns the day of month starting from 1.\n\nThe return value ranges from 1 to 31. (The last day of month differs by months.)\n\nSee also the [`NaiveDate::day`](./struct.NaiveDate.html#method.day) method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Datelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2015, 9, 25).unwrap().and_hms_opt(12, 34, 56).unwrap();\nassert_eq!(dt.day(), 25);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2237-0:2203:2817":{"id":"b:2:2237-0:2203:2817","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2231:96","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2203:2817","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2239:2071"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:282:2462":{"id":"0:282:2462","crate_id":0,"name":"parse_from_rfc3339","span":{"filename":"src/datetime/mod.rs","begin":[548,4],"end":[553,5]},"visibility":"public","docs":"Parses an RFC 3339 and ISO 8601 date and time string such as `1996-12-19T16:39:57-08:00`,\nthen returns a new [`DateTime`] with a parsed [`FixedOffset`].\n\nWhy isn't this named `parse_from_iso8601`? That's because ISO 8601 allows some freedom\nover the syntax and RFC 3339 exercises that freedom to rigidly define a fixed format.","links":{"`DateTime`":"0:1915:1913","`FixedOffset`":"0:2485:1919"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:455:1935","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2227":{"id":"0:2227","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[359,34],"end":[359,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2683:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2203:2817","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2482":{"id":"0:2482","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[190,47],"end":[190,51]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2684:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1881:1908":{"id":"0:1881:1908","crate_id":0,"name":"Date","span":{"filename":"src/date.rs","begin":[60,0],"end":[63,1]},"visibility":"public","docs":"ISO 8601 calendar date with time zone.\n\nYou almost certainly want to be using a [`NaiveDate`] instead of this type.\n\nThis type primarily exists to aid in the construction of DateTimes that\nhave a timezone by way of the [`TimeZone`] datelike constructors (e.g.\n[`TimeZone::ymd`]).\n\nThis type should be considered ambiguous at best, due to the inherent lack\nof precision required for the time zone resolution.\n\nThere are some guarantees on the usage of `Date<Tz>`:\n\n- If properly constructed via [`TimeZone::ymd`] and others without an error,\n  the corresponding local date should exist for at least a moment.\n  (It may still have a gap from the offset changes.)\n\n- The `TimeZone` is free to assign *any* [`Offset`](crate::offset::Offset) to the\n  local date, as long as that offset did occur in given day.\n\n  For example, if `2015-03-08T01:59-08:00` is followed by `2015-03-08T03:00-07:00`,\n  it may produce either `2015-03-08-08:00` or `2015-03-08-07:00`\n  but *not* `2015-03-08+00:00` and others.\n\n- Once constructed as a full `DateTime`, [`DateTime::date`] and other associated\n  methods should return those for the original `Date`. For example, if `dt =\n  tz.ymd_opt(y,m,d).unwrap().hms(h,n,s)` were valid, `dt.date() == tz.ymd_opt(y,m,d).unwrap()`.\n\n- The date is timezone-agnostic up to one day (i.e. practically always),\n  so the local date and UTC date should be equal for most cases\n  even though the raw calculation between `NaiveDate` and `Duration` may not.","links":{"crate::offset::Offset":"0:1720:1924","`DateTime::date`":"0:230:1926","`TimeZone`":"0:1722:1925","`NaiveDate`":"0:2324:1921","`TimeZone::ymd`":"0:1726:3199"},"attrs":["#[deprecated(since = \"0.4.23\", note =\n\"Use `NaiveDate` or `DateTime<Tz>` instead\")]"],"deprecation":{"since":"0.4.23","note":"Use `NaiveDate` or `DateTime<Tz>` instead"},"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:58","0:97","a:2:8179:7659-0:1881:1908","a:2:2736:7564-0:1881:1908","a:2:2686:225-0:1881:1908","a:2:8178:7660-0:1881:1908","b:2:2531-0:1881:1908","b:2:2542-0:1881:1908","b:2:2527-0:1881:1908","b:2:3331-0:1881:1908","b:2:2240-0:1881:1908","b:2:2537-0:1881:1908","b:2:2237-0:1881:1908","b:5:5633-0:1881:1908","b:5:674-0:1881:1908","0:154","0:134","0:168","0:157","0:161","0:164","0:150","0:105","0:130","0:143","0:146","0:171","0:138","0:140","0:1885","0:132"]}},"0:2094":{"id":"0:2094","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[254,34],"end":[254,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2306:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2084:2779","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1831:908":{"id":"0:1831:908","crate_id":0,"name":"name","span":{"filename":"src/month.rs","begin":[138,4],"end":[153,5]},"visibility":"public","docs":"Get the name of the month\n\n```\nuse chrono::Month;\n\nassert_eq!(Month::January.name(), \"January\")\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'static","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1893:2296":{"id":"0:1893:2296","crate_id":0,"name":"Micros","span":{"filename":"src/datetime/mod.rs","begin":[66,4],"end":[66,10]},"visibility":"default","docs":"Use fixed 6 subsecond digits. This corresponds to\n[Fixed::Nanosecond6](format/enum.Fixed.html#variant.Nanosecond6).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:1982:2707":{"id":"0:1982:2707","crate_id":0,"name":"NumDaysFromSun","span":{"filename":"src/format/mod.rs","begin":[126,4],"end":[126,18]},"visibility":"default","docs":"Day of the week, where Sunday = 0 and Saturday = 6 (FW=PW=1).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"b:5:674-0:2084:2779":{"id":"b:5:674-0:2084:2779","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:670:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2084:2779","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:676:8076","5:677:8077","5:678:8078"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2389":{"id":"0:2389","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[82,20],"end":[82,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2306:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:161":{"id":"0:161","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[502,0],"end":[507,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"SubAssign","id":"2:2800:2075","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Duration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:163:1396"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1954":{"id":"0:1954","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[76,37],"end":[76,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9069:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:1938:2508","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1955:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2145:2514":{"id":"0:2145:2514","crate_id":0,"name":"Literal","span":{"filename":"src/format/mod.rs","begin":[291,4],"end":[291,20]},"visibility":"default","docs":"A literally printed and parsed text.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":{"tuple":["0:2147:1583"]},"discriminant":null}},"0:1734:2364":{"id":"0:1734:2364","crate_id":0,"name":"timestamp_millis","span":{"filename":"src/offset/mod.rs","begin":[373,4],"end":[375,5]},"visibility":"default","docs":"Makes a new `DateTime` from the number of non-leap milliseconds\nsince January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\").\n\nPanics on out-of-range number of milliseconds for a non-panicking\nversion see [`timestamp_millis_opt`](#method.timestamp_millis_opt).","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `timestamp_millis_opt()` instead\")]"],"deprecation":{"since":"0.4.23","note":"use `timestamp_millis_opt()` instead"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["millis",{"kind":"primitive","inner":"i64"}]],"output":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:854:2134":{"id":"0:854:2134","crate_id":0,"name":"and_hms_opt","span":{"filename":"src/naive/date.rs","begin":[746,4],"end":[748,5]},"visibility":"public","docs":"Makes a new `NaiveDateTime` from the current date, hour, minute and second.\n\nNo [leap second](./struct.NaiveTime.html#leap-second-handling) is allowed here;\nuse `NaiveDate::and_hms_*_opt` methods with a subsecond parameter instead.\n\nReturns `None` on invalid hour, minute and/or second.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet d = NaiveDate::from_ymd_opt(2015, 6, 3).unwrap();\nassert!(d.and_hms_opt(12, 34, 56).is_some());\nassert!(d.and_hms_opt(12, 34, 60).is_none()); // use `and_hms_milli_opt` instead\nassert!(d.and_hms_opt(12, 60, 56).is_none());\nassert!(d.and_hms_opt(24, 34, 56).is_none());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["hour",{"kind":"primitive","inner":"u32"}],["min",{"kind":"primitive","inner":"u32"}],["sec",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2870":{"id":"0:2870","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[11,9],"end":[11,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2682:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2848:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2472":{"id":"0:2472","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[190,20],"end":[190,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2683:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:770:125":{"id":"0:770:125","crate_id":0,"name":"Err","span":{"filename":"src/format/mod.rs","begin":[1056,4],"end":[1056,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"ParseMonthError","id":"0:2964:1948","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:103:670":{"id":"0:103:670","crate_id":0,"name":"format","span":{"filename":"src/date.rs","begin":[332,4],"end":[334,5]},"visibility":"public","docs":"Formats the date with the specified format string.\nSee the [`crate::format::strftime`] module\non the supported escape sequences.","links":{"`crate::format::strftime`":"0:725:2667"},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]","#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["fmt",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2291:2080","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2272:2082","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1785:6736":{"id":"0:1785:6736","crate_id":0,"name":"duration_trunc","span":{"filename":"src/round.rs","begin":[155,4],"end":[157,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["duration",{"kind":"resolved_path","inner":{"name":"Duration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:40824:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:1776:1942","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2184:720":{"id":"0:2184:720","crate_id":0,"name":"hash","span":{"filename":"src/format/mod.rs","begin":[288,38],"end":[288,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9297:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1002:1931":{"id":"0:1002:1931","crate_id":0,"name":"MAX_DATETIME","span":{"filename":"src/naive/datetime/mod.rs","begin":[55,0],"end":[55,59]},"visibility":"public","docs":"The maximum possible `NaiveDateTime`.","links":{},"attrs":["#[deprecated(since = \"0.4.20\", note = \"Use NaiveDateTime::MAX instead\")]"],"deprecation":{"since":"0.4.20","note":"Use NaiveDateTime::MAX instead"},"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"NaiveDateTime::MAX","value":null,"is_literal":false}},"0:2826":{"id":"0:2826","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[41,44],"end":[41,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hash","id":"2:9289:139","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9289:139","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2797:1940","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:2828:720"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:259":{"id":"0:259","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[429,0],"end":[433,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"clock\")]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2578:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Local","id":"0:2776:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:260:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1283:2564":{"id":"0:1283:2564","crate_id":0,"name":"from_str","span":{"filename":"src/naive/time/mod.rs","begin":[1261,4],"end":[1277,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:455:1935","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1281":{"id":"0:1281","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[1258,0],"end":[1278,1]},"visibility":"default","docs":"Parsing a `str` into a `NaiveTime` uses the same format,\n[`%H:%M:%S%.f`](../format/strftime/index.html), as in `Debug` and `Display`.\n\n# Example\n\n```\nuse chrono::NaiveTime;\n\nlet t = NaiveTime::from_hms_opt(23, 56, 4).unwrap();\nassert_eq!(\"23:56:04\".parse::<NaiveTime>(), Ok(t));\n\nlet t = NaiveTime::from_hms_nano_opt(23, 56, 4, 12_345_678).unwrap();\nassert_eq!(\"23:56:4.012345678\".parse::<NaiveTime>(), Ok(t));\n\nlet t = NaiveTime::from_hms_nano_opt(23, 59, 59, 1_234_567_890).unwrap(); // leap second\nassert_eq!(\"23:59:60.23456789\".parse::<NaiveTime>(), Ok(t));\n\nassert!(\"foo\".parse::<NaiveTime>().is_err());\n```","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:11534:2563","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1282:125","0:1283:2564"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:771:2564":{"id":"0:771:2564","crate_id":0,"name":"from_str","span":{"filename":"src/format/mod.rs","begin":[1058,4],"end":[1078,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:40824:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:11534:2563","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:242:2183":{"id":"0:242:2183","crate_id":0,"name":"with_timezone","span":{"filename":"src/datetime/mod.rs","begin":[309,4],"end":[311,5]},"visibility":"public","docs":"Changes the associated time zone.\nThe returned `DateTime` references the same instant of time from the perspective of the provided time zone.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["tz",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Tz2"}}}]],"output":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz2"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Tz2","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:313:2238":{"id":"0:313:2238","crate_id":0,"name":"with_month","span":{"filename":"src/datetime/mod.rs","begin":[792,4],"end":[794,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["month",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2240-0:2143:2081":{"id":"b:2:2240-0:2143:2081","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2234:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2143:2081","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2242:6046"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1850:6994":{"id":"0:1850:6994","crate_id":0,"name":"year_ce","span":{"filename":"src/traits.rs","begin":[11,4],"end":[18,5]},"visibility":"default","docs":"Returns the absolute year number starting from 1 with a boolean flag,\nwhich is false when the year predates the epoch (BCE/BC) and true otherwise (CE/AD).","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"bool"},{"kind":"primitive","inner":"u32"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1853:2232":{"id":"0:1853:2232","crate_id":0,"name":"day","span":{"filename":"src/traits.rs","begin":[33,4],"end":[33,25]},"visibility":"default","docs":"Returns the day of month starting from 1.\n\nThe return value ranges from 1 to 31. (The last day of month differs by months.)","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2181:659":{"id":"0:2181:659","crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[288,31],"end":[288,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:9044:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:9033:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1854:2233":{"id":"0:1854:2233","crate_id":0,"name":"day0","span":{"filename":"src/traits.rs","begin":[38,4],"end":[38,26]},"visibility":"default","docs":"Returns the day of month starting from 0.\n\nThe return value ranges from 0 to 30. (The last day of month differs by months.)","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:2672:217-0:2783:1920":{"id":"a:2:2672:217-0:2783:1920","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:2783:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:346:604":{"id":"0:346:604","crate_id":0,"name":"eq","span":{"filename":"src/datetime/mod.rs","begin":[866,4],"end":[868,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz2"}}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1271":{"id":"0:1271","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[1088,0],"end":[1093,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"SubAssign","id":"2:2800:2075","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Duration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1272:1396"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2780:415":{"id":"0:2780:415","crate_id":0,"name":"clone","span":{"filename":"src/offset/local/mod.rs","begin":[54,15],"end":[54,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Local","id":"0:2776:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2237-0:2466:1923":{"id":"b:2:2237-0:2466:1923","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2231:96","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2239:2071"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2240-0:2884:1945":{"id":"b:2:2240-0:2884:1945","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2234:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:2884:1945","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2242:6046"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8179:7659-0:2894:1916":{"id":"a:2:8179:7659-0:2894:1916","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8179:7659","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:2894:1916","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1378:183":{"id":"0:1378:183","crate_id":0,"name":"Output","span":{"filename":"src/offset/fixed.rs","begin":[226,4],"end":[226,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}},"0:381:1395":{"id":"0:381:1395","crate_id":0,"name":"sub","span":{"filename":"src/datetime/mod.rs","begin":[955,4],"end":[957,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"Months","id":"0:2945:1947","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:2770:2074","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2537-0:2324:1921":{"id":"b:2:2537-0:2324:1921","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2540:126","2:2541:1457"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:257":{"id":"0:257","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[421,0],"end":[425,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2578:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:2783:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:258:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:886:4287":{"id":"0:886:4287","crate_id":0,"name":"iter_weeks","span":{"filename":"src/naive/date.rs","begin":[1255,4],"end":[1257,5]},"visibility":"public","docs":"Returns an iterator that steps by weeks across all representable dates.\n\n# Example\n\n```\n# use chrono::NaiveDate;\n\nlet expected = [\n    NaiveDate::from_ymd_opt(2016, 2, 27).unwrap(),\n    NaiveDate::from_ymd_opt(2016, 3, 5).unwrap(),\n    NaiveDate::from_ymd_opt(2016, 3, 12).unwrap(),\n    NaiveDate::from_ymd_opt(2016, 3, 19).unwrap(),\n];\n\nlet mut count = 0;\nfor (idx, d) in NaiveDate::from_ymd_opt(2016, 2, 27).unwrap().iter_weeks().take(4).enumerate() {\n   assert_eq!(d, expected[idx]);\n   count += 1;\n}\nassert_eq!(count, 4);\n\nfor d in NaiveDate::from_ymd_opt(2016, 3, 19).unwrap().iter_weeks().rev().take(4) {\n    count -= 1;\n    assert_eq!(d, expected[count]);\n}\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveDateWeeksIterator","id":"0:2362:4288","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2542-0:2448:1938":{"id":"b:2:2542-0:2448:1938","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IsoWeek","id":"0:2448:1938","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:126","2:2546:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2279":{"id":"0:2279","crate_id":0,"name":null,"span":{"filename":"src/format/strftime.rs","begin":[212,9],"end":[212,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2272:2082","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:2281:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:844:2401":{"id":"0:844:2401","crate_id":0,"name":"checked_add_months","span":{"filename":"src/naive/date.rs","begin":[554,4],"end":[563,5]},"visibility":"public","docs":"Add a duration in [`Months`] to the date\n\nIf the day would be out of range for the resulting month, use the last day for that month.\n\nReturns `None` if the resulting date would be out of range.\n\n```\n# use chrono::{NaiveDate, Months};\nassert_eq!(\n    NaiveDate::from_ymd_opt(2022, 2, 20).unwrap().checked_add_months(Months::new(6)),\n    Some(NaiveDate::from_ymd_opt(2022, 8, 20).unwrap())\n);\nassert_eq!(\n    NaiveDate::from_ymd_opt(2022, 7, 31).unwrap().checked_add_months(Months::new(2)),\n    Some(NaiveDate::from_ymd_opt(2022, 9, 30).unwrap())\n);\n```","links":{"`Months`":"0:2945:1947"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["months",{"kind":"resolved_path","inner":{"name":"Months","id":"0:2945:1947","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:883:670":{"id":"0:883:670","crate_id":0,"name":"format","span":{"filename":"src/naive/date.rs","begin":[1162,4],"end":[1164,5]},"visibility":"public","docs":"Formats the date with the specified format string.\nSee the [`format::strftime` module](../format/strftime/index.html)\non the supported escape sequences.\n\nThis returns a `DelayedFormat`,\nwhich gets converted to a string only when actual formatting happens.\nYou may use the `to_string` method to get a `String`,\nor just feed it into `print!` and other formatting macros.\n(In this way it avoids the redundant memory allocation.)\n\nA wrong format string does *not* issue an error immediately.\nRather, converting or formatting the `DelayedFormat` fails.\nYou are recommended to immediately use `DelayedFormat` for this reason.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet d = NaiveDate::from_ymd_opt(2015, 9, 5).unwrap();\nassert_eq!(d.format(\"%Y-%m-%d\").to_string(), \"2015-09-05\");\nassert_eq!(d.format(\"%A, %-d %B, %C%y\").to_string(), \"Saturday, 5 September, 2015\");\n```\n\nThe resulting `DelayedFormat` can be formatted directly via the `Display` trait.\n\n```\n# use chrono::NaiveDate;\n# let d = NaiveDate::from_ymd_opt(2015, 9, 5).unwrap();\nassert_eq!(format!(\"{}\", d.format(\"%Y-%m-%d\")), \"2015-09-05\");\nassert_eq!(format!(\"{}\", d.format(\"%A, %-d %B, %C%y\")), \"Saturday, 5 September, 2015\");\n```","links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]","#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["fmt",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2291:2080","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2272:2082","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1090":{"id":"0:1090","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1583,0],"end":[1588,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"SubAssign","id":"2:2800:2075","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Duration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1091:1396"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2454":{"id":"0:2454","crate_id":0,"name":null,"span":{"filename":"src/naive/isoweek.rs","begin":[19,20],"end":[19,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2306:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IsoWeek","id":"0:2448:1938","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1380-0:2485:1919":{"id":"0:1380-0:2485:1919","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[30,0],"end":[30,33]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::fixed::FixedOffset","name":"FixedOffset","id":"0:2485:1919","glob":false}},"2:11960:38837":{"id":"2:11960:38837","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2527-0:2485:1919":{"id":"b:2:2527-0:2485:1919","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2530:2607"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:674-0:2884:1945":{"id":"b:5:674-0:2884:1945","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:670:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:2884:1945","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:676:8076","5:677:8077","5:678:8078"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:397":{"id":"0:397","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[992,0],"end":[1001,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Tz"},"trait":{"name":"","id":"0:1722:1925","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Display","id":"2:9074:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9074:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:399:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2488":{"id":"0:2488","crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[25,9],"end":[25,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2301:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2489:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:950:659":{"id":"0:950:659","crate_id":0,"name":"fmt","span":{"filename":"src/naive/date.rs","begin":[1938,4],"end":[1940,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:9044:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:9033:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1717":{"id":"0:1717","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[182,0],"end":[193,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:9069:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2797:1940","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:1719:1524"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11933:38831":{"id":"2:11933:38831","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:11573:1962","str::split":"2:11921:30382","prim@char":"1:11872:411","str::split_terminator":"2:11930:38830"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitTerminator","id":"2:42713:7319","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11578:7280","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11578:7280","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11593:7308","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1723:1924":{"id":"0:1723:1924","crate_id":0,"name":"Offset","span":{"filename":"src/offset/mod.rs","begin":[209,4],"end":[209,24]},"visibility":"default","docs":"An associated offset type.\nThis type is used to store the actual offset in date and time types.\nThe original `TimeZone` value can be recovered via `TimeZone::from_offset`.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Offset","id":"0:1720:1924","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}},"0:331:2541":{"id":"0:331:2541","crate_id":0,"name":"with_hour","span":{"filename":"src/datetime/mod.rs","begin":[841,4],"end":[843,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["hour",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2189":{"id":"0:2189","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[348,9],"end":[348,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9069:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2186:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2190:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:825":{"id":"0:825","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[132,0],"end":[137,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Days","id":"0:2305:1937","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:826:929"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2452:604":{"id":"0:2452:604","crate_id":0,"name":"eq","span":{"filename":"src/naive/isoweek.rs","begin":[19,9],"end":[19,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"IsoWeek","id":"0:2448:1938","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2876":{"id":"0:2876","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[11,24],"end":[11,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2684:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2848:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1732:2353":{"id":"0:1732:2353","crate_id":0,"name":"timestamp","span":{"filename":"src/offset/mod.rs","begin":[342,4],"end":[344,5]},"visibility":"default","docs":"Makes a new `DateTime` from the number of non-leap seconds\nsince January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\")\nand the number of nanoseconds since the last whole non-leap second.\n\nPanics on the out-of-range number of seconds and/or invalid nanosecond,\nfor a non-panicking version see [`timestamp_opt`](#method.timestamp_opt).","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `timestamp_opt()` instead\")]"],"deprecation":{"since":"0.4.23","note":"use `timestamp_opt()` instead"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["secs",{"kind":"primitive","inner":"i64"}],["nsecs",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2686:225-0:2016:2727":{"id":"a:2:2686:225-0:2016:2727","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:2016:2727","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:228:2117":{"id":"0:228:2117","crate_id":0,"name":"from_utc","span":{"filename":"src/datetime/mod.rs","begin":[116,4],"end":[118,5]},"visibility":"public","docs":"Makes a new `DateTime` with given *UTC* datetime and offset.\nThe local datetime should be constructed via the `TimeZone` trait.\n\n# Example\n\n```\nuse chrono::{DateTime, TimeZone, NaiveDateTime, Utc};\n\nlet dt = DateTime::<Utc>::from_utc(NaiveDateTime::from_timestamp_opt(61, 0).unwrap(), Utc);\nassert_eq!(Utc.timestamp_opt(61, 0).unwrap(), dt);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["datetime",{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["offset",{"kind":"qualified_path","inner":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Tz"},"trait":{"name":"","id":"0:1722:1925","args":null}}}]],"output":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2240-0:2964:1948":{"id":"b:2:2240-0:2964:1948","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2234:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseMonthError","id":"0:2964:1948","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2242:6046"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2066:2463":{"id":"0:2066:2463","crate_id":0,"name":"RFC3339","span":{"filename":"src/format/mod.rs","begin":[244,4],"end":[244,11]},"visibility":"default","docs":"RFC 3339 & ISO 8601 date and time syntax.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"b:2:2240-0:2300:1939":{"id":"b:2:2240-0:2300:1939","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2234:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveWeek","id":"0:2300:1939","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2242:6046"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3331-0:1881:1908":{"id":"b:2:3331-0:1881:1908","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3329:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["2:3333:1470"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:137:604":{"id":"0:137:604","crate_id":0,"name":"eq","span":{"filename":"src/date.rs","begin":[452,4],"end":[454,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz2"}}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:636:2282":{"id":"0:636:2282","crate_id":0,"name":"parse","span":{"filename":"src/format/parse.rs","begin":[243,0],"end":[249,1]},"visibility":"public","docs":"Tries to parse given string into `parsed` with given formatting items.\nReturns `Ok` when the entire string has been parsed (otherwise `parsed` should not be used).\nThere should be no trailing string after parsing;\nuse a stray [`Item::Space`](./enum.Item.html#variant.Space) to trim whitespaces.\n\nThis particular date and time parser is:\n\n- Greedy. It will consume the longest possible prefix.\n  For example, `April` is always consumed entirely when the long month name is requested;\n  it equally accepts `Apr`, but prefers the longer prefix in this case.\n\n- Padding-agnostic (for numeric items).\n  The [`Pad`](./enum.Pad.html) field is completely ignored,\n  so one can prepend any number of whitespace then any number of zeroes before numbers.\n\n- (Still) obeying the intrinsic parsing width. This allows, for example, parsing `HHMMSS`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["parsed",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Parsed","id":"0:2234:2283","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["items",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:455:1935","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7245:156","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"B"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2231:96","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2143:2081","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8178:7660-0:1938:2508":{"id":"a:2:8178:7660-0:1938:2508","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8178:7660","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:1938:2508","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2018":{"id":"0:2018","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[155,9],"end":[155,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:2016:2727","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2019:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2236:3022":{"id":"0:2236:3022","crate_id":0,"name":"year_div_100","span":{"filename":"src/format/parsed.rs","begin":[38,4],"end":[38,33]},"visibility":"public","docs":"Year divided by 100. Implies that the year is >= 1 BCE when set.\n\nDue to the common usage, if this field is missing but\n[`year_mod_100`](#structfield.year_mod_100) is present,\nit is inferred to 19 when `year_mod_100 >= 70` and 20 otherwise.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i32"}}],"bindings":[]}}}}},"0:2478":{"id":"0:2478","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[190,30],"end":[190,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","ge","le","lt"],"trait":{"name":"PartialOrd","id":"2:2343:186","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2479:1023"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2193":{"id":"0:2193","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[348,23],"end":[348,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2682:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2186:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2237-0:2964:1948":{"id":"b:2:2237-0:2964:1948","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2231:96","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseMonthError","id":"0:2964:1948","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2239:2071"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2527-0:2776:1909":{"id":"b:2:2527-0:2776:1909","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Local","id":"0:2776:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2530:2607"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:674-0:2016:2727":{"id":"b:5:674-0:2016:2727","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:670:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:2016:2727","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:676:8076","5:677:8077","5:678:8078"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1879-0:1848:1915":{"id":"0:1879-0:1848:1915","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[496,17],"end":[496,25]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"traits::Datelike","name":"Datelike","id":"0:1848:1915","glob":false}},"0:1880-0:1867:1917":{"id":"0:1880-0:1867:1917","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[496,27],"end":[496,35]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"traits::Timelike","name":"Timelike","id":"0:1867:1917","glob":false}},"2:11983:3576":{"id":"2:11983:3576","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:11872:411","self::pattern":"2:11573:1962"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11578:7280","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11986:38842":{"id":"2:11986:38842","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:11872:411","self::pattern":"2:11573:1962"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11578:7280","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11578:7280","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11593:7308","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2531-0:1915:1913":{"id":"b:2:2531-0:1915:1913","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["2:2533:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:337:2544":{"id":"0:337:2544","crate_id":0,"name":"with_nanosecond","span":{"filename":"src/datetime/mod.rs","begin":[856,4],"end":[858,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["nano",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11991:30157":{"id":"2:11991:30157","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2531-0:2894:1916":{"id":"b:2:2531-0:2894:1916","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:2894:1916","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2533:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2240-0:1915:1913":{"id":"b:2:2240-0:1915:1913","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2234:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["2:2242:6046"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2527-0:2016:2727":{"id":"b:2:2527-0:2016:2727","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:2016:2727","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2530:2607"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2330":{"id":"0:2330","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[187,20],"end":[187,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2306:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11945:38833":{"id":"2:11945:38833","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11578:7280","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11578:7280","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11593:7308","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:327:2131":{"id":"0:327:2131","crate_id":0,"name":"hour","span":{"filename":"src/datetime/mod.rs","begin":[824,4],"end":[826,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2254:978":{"id":"0:2254:978","crate_id":0,"name":"offset","span":{"filename":"src/format/parsed.rs","begin":[106,4],"end":[106,27]},"visibility":"public","docs":"Offset from the local time to UTC, in seconds.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i32"}}],"bindings":[]}}}}},"0:92:2114":{"id":"0:92:2114","crate_id":0,"name":"MAX_UTC","span":{"filename":"src/date.rs","begin":[299,4],"end":[299,78]},"visibility":"public","docs":"The maximum possible `Date`.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:2783:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"default":"_"}},"0:1096:183":{"id":"0:1096:183","crate_id":0,"name":"Output","span":{"filename":"src/naive/datetime/mod.rs","begin":[1663,4],"end":[1663,30]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Duration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:1248:670":{"id":"0:1248:670","crate_id":0,"name":"format","span":{"filename":"src/naive/time/mod.rs","begin":[744,4],"end":[746,5]},"visibility":"public","docs":"Formats the time with the specified format string.\nSee the [`format::strftime` module](../format/strftime/index.html)\non the supported escape sequences.\n\nThis returns a `DelayedFormat`,\nwhich gets converted to a string only when actual formatting happens.\nYou may use the `to_string` method to get a `String`,\nor just feed it into `print!` and other formatting macros.\n(In this way it avoids the redundant memory allocation.)\n\nA wrong format string does *not* issue an error immediately.\nRather, converting or formatting the `DelayedFormat` fails.\nYou are recommended to immediately use `DelayedFormat` for this reason.\n\n# Example\n\n```\nuse chrono::NaiveTime;\n\nlet t = NaiveTime::from_hms_nano_opt(23, 56, 4, 12_345_678).unwrap();\nassert_eq!(t.format(\"%H:%M:%S\").to_string(), \"23:56:04\");\nassert_eq!(t.format(\"%H:%M:%S%.6f\").to_string(), \"23:56:04.012345\");\nassert_eq!(t.format(\"%-I:%M %p\").to_string(), \"11:56 PM\");\n```\n\nThe resulting `DelayedFormat` can be formatted directly via the `Display` trait.\n\n```\n# use chrono::NaiveTime;\n# let t = NaiveTime::from_hms_nano_opt(23, 56, 4, 12_345_678).unwrap();\nassert_eq!(format!(\"{}\", t.format(\"%H:%M:%S\")), \"23:56:04\");\nassert_eq!(format!(\"{}\", t.format(\"%H:%M:%S%.6f\")), \"23:56:04.012345\");\nassert_eq!(format!(\"{}\", t.format(\"%-I:%M %p\")), \"11:56 PM\");\n```","links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]","#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["fmt",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2291:2080","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2272:2082","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2542-0:2016:2727":{"id":"b:2:2542-0:2016:2727","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:2016:2727","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:126","2:2546:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8178:7660-0:2485:1919":{"id":"a:2:8178:7660-0:2485:1919","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8178:7660","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2531-0:2203:2817":{"id":"b:2:2531-0:2203:2817","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2203:2817","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2533:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1808:6846":{"id":"0:1808:6846","crate_id":0,"name":"number_from_sunday","span":{"filename":"src/weekday.rs","begin":[85,4],"end":[87,5]},"visibility":"public","docs":"Returns a day-of-week number starting from Sunday = 1.\n\n`w`:                      | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun`\n------------------------- | ----- | ----- | ----- | ----- | ----- | ----- | -----\n`w.number_from_sunday()`: | 2     | 3     | 4     | 5     | 6     | 7     | 1","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2204:2820":{"id":"0:2204:2820","crate_id":0,"name":"OutOfRange","span":{"filename":"src/format/mod.rs","begin":[362,4],"end":[362,14]},"visibility":"default","docs":"Given field is out of permitted range.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:2340":{"id":"0:2340","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[187,53],"end":[187,58]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2341:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2537-0:2783:1920":{"id":"b:2:2537-0:2783:1920","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:2783:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2540:126","2:2541:1457"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2904:2879":{"id":"0:2904:2879","crate_id":0,"name":"April","span":{"filename":"src/month.rs","begin":[42,4],"end":[42,13]},"visibility":"default","docs":"April","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":{"expr":"3","value":"3"}}},"0:1098":{"id":"0:1098","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1671,0],"end":[1677,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Add","id":"2:2765:2072","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Days","id":"0:2305:1937","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1099:183","0:1100:271"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11997:14031":{"id":"2:11997:14031","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4520:14031"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDefault","id":"2:42953:7330","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2672:217-0:2291:2080":{"id":"a:2:2672:217-0:2291:2080","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2291:2080","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1724:2593":{"id":"0:1724:2593","crate_id":0,"name":"with_ymd_and_hms","span":{"filename":"src/offset/mod.rs","begin":[216,4],"end":[230,5]},"visibility":"default","docs":"Make a new `DateTime` from year, month, day, time components and current time zone.\n\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\n\nReturns `LocalResult::None` on invalid input data.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["year",{"kind":"primitive","inner":"i32"}],["month",{"kind":"primitive","inner":"u32"}],["day",{"kind":"primitive","inner":"u32"}],["hour",{"kind":"primitive","inner":"u32"}],["min",{"kind":"primitive","inner":"u32"}],["sec",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2797:1940","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:111:2233":{"id":"0:111:2233","crate_id":0,"name":"day0","span":{"filename":"src/date.rs","begin":[391,4],"end":[393,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2232:720":{"id":"0:2232:720","crate_id":0,"name":"hash","span":{"filename":"src/format/mod.rs","begin":[359,44],"end":[359,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9297:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:71:2160":{"id":"0:71:2160","crate_id":0,"name":"and_hms_nano","span":{"filename":"src/date.rs","begin":[174,4],"end":[176,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date, hour, minute, second and nanosecond.\nThe nanosecond part can exceed 1,000,000,000 in order to represent the leap second.\nThe offset in the current date is preserved.\n\nPanics on invalid hour, minute, second and/or nanosecond.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"Use and_hms_nano_opt() instead\")]","#[inline]"],"deprecation":{"since":"0.4.23","note":"Use and_hms_nano_opt() instead"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["hour",{"kind":"primitive","inner":"u32"}],["min",{"kind":"primitive","inner":"u32"}],["sec",{"kind":"primitive","inner":"u32"}],["nano",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:65:2142":{"id":"0:65:2142","crate_id":0,"name":"and_hms_milli","span":{"filename":"src/date.rs","begin":[120,4],"end":[122,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date, hour, minute, second and millisecond.\nThe millisecond part can exceed 1,000 in order to represent the leap second.\nThe offset in the current date is preserved.\n\nPanics on invalid hour, minute, second and/or millisecond.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"Use and_hms_milli_opt() instead\")]","#[inline]"],"deprecation":{"since":"0.4.23","note":"Use and_hms_milli_opt() instead"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["hour",{"kind":"primitive","inner":"u32"}],["min",{"kind":"primitive","inner":"u32"}],["sec",{"kind":"primitive","inner":"u32"}],["milli",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2223:415":{"id":"0:2223:415","crate_id":0,"name":"clone","span":{"filename":"src/format/mod.rs","begin":[359,16],"end":[359,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2203:2817","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2310":{"id":"0:2310","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[129,16],"end":[129,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2684:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Days","id":"0:2305:1937","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1006":{"id":"0:1006","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[116,0],"end":[940,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1007:929","0:1008:4744","0:1009:4757","0:1010:4766","0:1011:3165","0:1013:2477","0:1014:1926","0:1015:1598","0:1016:2353","0:1018:2364","0:1019:2373","0:1020:2381","0:1021:2385","0:1022:2389","0:1023:2393","0:1024:2189","0:1025:2401","0:1026:2191","0:1027:2406","0:1028:2409","0:1029:2411","0:1030:2196","0:1031:2214","0:1035:670","0:1037:2402","0:1039:2206","0:1040:2207"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1716:2162":{"id":"0:1716:2162","crate_id":0,"name":"and_hms_nano_opt","span":{"filename":"src/offset/mod.rs","begin":[166,4],"end":[179,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date, hour, minute, second and nanosecond.\nThe nanosecond part can exceed 1,000,000,000 in order to represent the leap second.\nThe offset in the current date is preserved.\n\nPropagates any error. Ambiguous result would be discarded.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["hour",{"kind":"primitive","inner":"u32"}],["min",{"kind":"primitive","inner":"u32"}],["sec",{"kind":"primitive","inner":"u32"}],["nano",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2797:1940","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8178:7660-0:2084:2779":{"id":"a:2:8178:7660-0:2084:2779","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8178:7660","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2084:2779","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1778:6731":{"id":"0:1778:6731","crate_id":0,"name":"duration_round","span":{"filename":"src/round.rs","begin":[125,4],"end":[125,75]},"visibility":"default","docs":"Return a copy rounded by Duration.\n\n# Example\n``` rust\n# use chrono::{DateTime, DurationRound, Duration, TimeZone, Utc, NaiveDate};\nlet dt = NaiveDate::from_ymd_opt(2018, 1, 11).unwrap().and_hms_milli_opt(12, 0, 0, 154).unwrap().and_local_timezone(Utc).unwrap();\nassert_eq!(\n    dt.duration_round(Duration::milliseconds(10)).unwrap().to_string(),\n    \"2018-01-11 12:00:00.150 UTC\"\n);\nassert_eq!(\n    dt.duration_round(Duration::days(1)).unwrap().to_string(),\n    \"2018-01-12 00:00:00 UTC\"\n);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["duration",{"kind":"resolved_path","inner":{"name":"Duration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:40824:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:1776:1942","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2888":{"id":"0:2888","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[168,16],"end":[168,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2682:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:2884:1945","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1783:125":{"id":"0:1783:125","crate_id":0,"name":"Err","span":{"filename":"src/round.rs","begin":[149,4],"end":[149,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"RoundingError","id":"0:2830:1943","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"b:2:2240-0:2016:2727":{"id":"b:2:2240-0:2016:2727","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2234:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:2016:2727","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2242:6046"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1009:4757":{"id":"0:1009:4757","crate_id":0,"name":"from_timestamp_millis","span":{"filename":"src/naive/datetime/mod.rs","begin":[180,4],"end":[182,5]},"visibility":"public","docs":"Creates a new [NaiveDateTime] from milliseconds since the UNIX epoch.\n\nThe UNIX epoch starts on midnight, January 1, 1970, UTC.\n\nReturns `None` on an out-of-range number of milliseconds.\n\n# Example\n\n```\nuse chrono::NaiveDateTime;\nlet timestamp_millis: i64 = 1662921288000; //Sunday, September 11, 2022 6:34:48 PM\nlet naive_datetime = NaiveDateTime::from_timestamp_millis(timestamp_millis);\nassert!(naive_datetime.is_some());\nassert_eq!(timestamp_millis, naive_datetime.unwrap().timestamp_millis());\n\n// Negative timestamps (before the UNIX epoch) are supported as well.\nlet timestamp_millis: i64 = -2208936075000; //Mon Jan 01 1900 14:38:45 GMT+0000\nlet naive_datetime = NaiveDateTime::from_timestamp_millis(timestamp_millis);\nassert!(naive_datetime.is_some());\nassert_eq!(timestamp_millis, naive_datetime.unwrap().timestamp_millis());\n```","links":{"NaiveDateTime":"0:2382:1922"},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["millis",{"kind":"primitive","inner":"i64"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1360":{"id":"0:1360","crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[180,0],"end":[187,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Add","id":"2:2765:2072","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1361:183","0:1362:271"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:443-0:2272:2082":{"id":"0:443-0:2272:2082","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[64,0],"end":[64,32]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"strftime::StrftimeItems","name":"StrftimeItems","id":"0:2272:2082","glob":false}},"0:1752-0:2797:1940":{"id":"0:1752-0:2797:1940","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[484,30],"end":[484,41]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"offset::LocalResult","name":"LocalResult","id":"0:2797:1940","glob":false}},"0:2239:3033":{"id":"0:2239:3033","crate_id":0,"name":"isoyear_div_100","span":{"filename":"src/format/parsed.rs","begin":[55,4],"end":[55,36]},"visibility":"public","docs":"Year in the [ISO week date](../naive/struct.NaiveDate.html#week-date), divided by 100.\nImplies that the year is >= 1 BCE when set.\n\nDue to the common usage, if this field is missing but\n[`isoyear_mod_100`](#structfield.isoyear_mod_100) is present,\nit is inferred to 19 when `isoyear_mod_100 >= 70` and 20 otherwise.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i32"}}],"bindings":[]}}}}},"0:2250:2538":{"id":"0:2250:2538","crate_id":0,"name":"minute","span":{"filename":"src/format/parsed.rs","begin":[92,4],"end":[92,27]},"visibility":"public","docs":"Minute number (0--59).","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u32"}}],"bindings":[]}}}}},"0:1082":{"id":"0:1082","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1474,0],"end":[1479,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AddAssign","id":"2:2796:2073","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Duration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1083:272"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2087:659":{"id":"0:2087:659","crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[254,9],"end":[254,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:9044:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:9033:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2672:217-0:2485:1919":{"id":"a:2:2672:217-0:2485:1919","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:17-0:1867:1917":{"id":"0:17-0:1867:1917","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[447,37],"end":[447,45]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::Timelike","name":"Timelike","id":"0:1867:1917","glob":false}},"0:1895:2299":{"id":"0:1895:2299","crate_id":0,"name":"Nanos","span":{"filename":"src/datetime/mod.rs","begin":[70,4],"end":[70,9]},"visibility":"default","docs":"Use fixed 9 subsecond digits. This corresponds to\n[Fixed::Nanosecond9](format/enum.Fixed.html#variant.Nanosecond9).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:262:59":{"id":"0:262:59","crate_id":0,"name":"default","span":{"filename":"src/datetime/mod.rs","begin":[436,4],"end":[438,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1107:659":{"id":"0:1107:659","crate_id":0,"name":"fmt","span":{"filename":"src/naive/datetime/mod.rs","begin":[1748,4],"end":[1752,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:9044:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:9033:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2951":{"id":"0:2951","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[194,22],"end":[194,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9069:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Months","id":"0:2945:1947","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2952:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2945:1947":{"id":"0:2945:1947","crate_id":0,"name":"Months","span":{"filename":"src/month.rs","begin":[196,0],"end":[196,34]},"visibility":"public","docs":"A duration in calendar months","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:1836","a:2:8179:7659-0:2945:1947","a:2:2672:217-0:2945:1947","a:2:2736:7564-0:2945:1947","a:2:2686:225-0:2945:1947","a:2:8178:7660-0:2945:1947","b:2:2531-0:2945:1947","b:2:2542-0:2945:1947","b:2:2527-0:2945:1947","b:2:3331-0:2945:1947","b:2:2240-0:2945:1947","b:2:2537-0:2945:1947","b:2:2237-0:2945:1947","b:5:674-0:2945:1947","0:2954","0:378","0:2953","0:1092","0:2956","0:1084","0:2948","0:2959","0:912","0:367","0:2960","0:2951","0:2962","0:915","0:2950"]}},"0:2148:2801":{"id":"0:2148:2801","crate_id":0,"name":"OwnedLiteral","span":{"filename":"src/format/mod.rs","begin":[295,4],"end":[295,26]},"visibility":"default","docs":"Same as `Literal` but with the string owned by the item.","links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"kind":"variant","inner":{"kind":{"tuple":["0:2150:1583"]},"discriminant":null}},"b:2:2537-0:2776:1909":{"id":"b:2:2537-0:2776:1909","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Local","id":"0:2776:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2540:126","2:2541:1457"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:930:183":{"id":"0:930:183","crate_id":0,"name":"Output","span":{"filename":"src/naive/date.rs","begin":[1785,4],"end":[1785,30]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Duration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"a:2:2672:217-0:2324:1921":{"id":"a:2:2672:217-0:2324:1921","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3331-0:1888:1914":{"id":"b:2:3331-0:1888:1914","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3329:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SecondsFormat","id":"0:1888:1914","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3333:1470"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1769:6708":{"id":"0:1769:6708","crate_id":0,"name":"round_subsecs","span":{"filename":"src/round.rs","begin":[32,4],"end":[32,48]},"visibility":"default","docs":"Return a copy rounded to the specified number of subsecond digits. With\n9 or more digits, self is returned unmodified. Halfway values are\nrounded up (away from zero).\n\n# Example\n``` rust\n# use chrono::{DateTime, SubsecRound, Timelike, TimeZone, Utc, NaiveDate};\nlet dt = NaiveDate::from_ymd_opt(2018, 1, 11).unwrap().and_hms_milli_opt(12, 0, 0, 154).unwrap().and_local_timezone(Utc).unwrap();\nassert_eq!(dt.round_subsecs(2).nanosecond(), 150_000_000);\nassert_eq!(dt.round_subsecs(1).nanosecond(), 200_000_000);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["digits",{"kind":"primitive","inner":"u16"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:2736:7564-0:2894:1916":{"id":"a:2:2736:7564-0:2894:1916","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:7564","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:2894:1916","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2939:415":{"id":"0:2939:415","crate_id":0,"name":"clone","span":{"filename":"src/month.rs","begin":[30,30],"end":[30,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Month","id":"0:2894:1916","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2527-0:2186:1934":{"id":"b:2:2527-0:2186:1934","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2186:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2530:2607"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:238:2389":{"id":"0:238:2389","crate_id":0,"name":"timestamp_subsec_micros","span":{"filename":"src/datetime/mod.rs","begin":[280,4],"end":[282,5]},"visibility":"public","docs":"Returns the number of microseconds since the last second boundary\n\nwarning: in event of a leap second, this may exceed 999_999\n\nnote: this is not the number of microseconds since January 1, 1970 0:00:00 UTC","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2237-0:2848:1918":{"id":"b:2:2237-0:2848:1918","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2231:96","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2848:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2239:2071"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8179:7659-0:2186:1934":{"id":"a:2:8179:7659-0:2186:1934","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8179:7659","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2186:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:926:1395":{"id":"0:926:1395","crate_id":0,"name":"sub","span":{"filename":"src/naive/date.rs","begin":[1748,4],"end":[1750,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2240-0:2797:1940":{"id":"b:2:2240-0:2797:1940","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2234:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2797:1940","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2242:6046"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8178:7660-0:2830:1943":{"id":"a:2:8178:7660-0:2830:1943","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8178:7660","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RoundingError","id":"0:2830:1943","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:224:1932":{"id":"0:224:1932","crate_id":0,"name":"MIN_DATETIME","span":{"filename":"src/datetime/mod.rs","begin":[96,0],"end":[96,65]},"visibility":"public","docs":"The minimum possible `DateTime<Utc>`.","links":{},"attrs":["#[deprecated(since = \"0.4.20\", note = \"Use DateTime::MIN_UTC instead\")]"],"deprecation":{"since":"0.4.20","note":"Use DateTime::MIN_UTC instead"},"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:2783:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"expr":"DateTime<Utc>::MIN_UTC","value":null,"is_literal":false}},"0:565:3076":{"id":"0:565:3076","crate_id":0,"name":"set_isoyear_mod_100","span":{"filename":"src/format/parsed.rs","begin":[175,4],"end":[180,5]},"visibility":"public","docs":"Tries to set the [`isoyear_mod_100`](#structfield.isoyear_mod_100) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["value",{"kind":"primitive","inner":"i64"}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:455:1935","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2531-0:2186:1934":{"id":"b:2:2531-0:2186:1934","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2186:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2533:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:860:2153":{"id":"0:860:2153","crate_id":0,"name":"and_hms_micro_opt","span":{"filename":"src/naive/date.rs","begin":[840,4],"end":[848,5]},"visibility":"public","docs":"Makes a new `NaiveDateTime` from the current date, hour, minute, second and microsecond.\n\nThe microsecond part can exceed 1,000,000\nin order to represent the [leap second](./struct.NaiveTime.html#leap-second-handling).\n\nReturns `None` on invalid hour, minute, second and/or microsecond.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet d = NaiveDate::from_ymd_opt(2015, 6, 3).unwrap();\nassert!(d.and_hms_micro_opt(12, 34, 56,   789_012).is_some());\nassert!(d.and_hms_micro_opt(12, 34, 59, 1_789_012).is_some()); // leap second\nassert!(d.and_hms_micro_opt(12, 34, 59, 2_789_012).is_none());\nassert!(d.and_hms_micro_opt(12, 34, 60,   789_012).is_none());\nassert!(d.and_hms_micro_opt(12, 60, 56,   789_012).is_none());\nassert!(d.and_hms_micro_opt(24, 34, 56,   789_012).is_none());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["hour",{"kind":"primitive","inner":"u32"}],["min",{"kind":"primitive","inner":"u32"}],["sec",{"kind":"primitive","inner":"u32"}],["micro",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2527-0:2964:1948":{"id":"b:2:2527-0:2964:1948","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseMonthError","id":"0:2964:1948","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2530:2607"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:304:2231":{"id":"0:304:2231","crate_id":0,"name":"month0","span":{"filename":"src/datetime/mod.rs","begin":[758,4],"end":[760,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8178:7660-0:2324:1921":{"id":"a:2:8178:7660-0:2324:1921","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8178:7660","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2531-0:2291:2080":{"id":"b:2:2531-0:2291:2080","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2291:2080","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:2533:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1051:2236":{"id":"0:1051:2236","crate_id":0,"name":"iso_week","span":{"filename":"src/naive/datetime/mod.rs","begin":[1092,4],"end":[1094,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"IsoWeek","id":"0:2448:1938","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2971":{"id":"0:2971","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[206,27],"end":[206,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2683:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseMonthError","id":"0:2964:1948","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:268:685":{"id":"0:268:685","crate_id":0,"name":"from","span":{"filename":"src/datetime/mod.rs","begin":[470,4],"end":[472,5]},"visibility":"default","docs":"Convert this `DateTime<FixedOffset>` instance into a `DateTime<Utc>` instance.\n\nConversion is performed via [`DateTime::with_timezone`], accounting for the timezone\ndifference.","links":{"`DateTime::with_timezone`":"0:242:2183"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["src",{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2316":{"id":"0:2316","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[129,33],"end":[129,37]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9289:139","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Days","id":"0:2305:1937","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2317:720"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1349:5933":{"id":"0:1349:5933","crate_id":0,"name":"offset_from_local_datetime","span":{"filename":"src/offset/fixed.rs","begin":[117,4],"end":[119,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["_local",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2797:1940","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1342:2272":{"id":"0:1342:2272","crate_id":0,"name":"west_opt","span":{"filename":"src/offset/fixed.rs","begin":[86,4],"end":[92,5]},"visibility":"public","docs":"Makes a new `FixedOffset` for the Western Hemisphere with given timezone difference.\nThe negative `secs` means the Eastern Hemisphere.\n\nReturns `None` on the out-of-bound `secs`.\n\n# Example\n\n```\nuse chrono::{FixedOffset, TimeZone};\nlet hour = 3600;\nlet datetime = FixedOffset::west_opt(5 * hour).unwrap().ymd_opt(2016, 11, 08).unwrap()\n                                          .and_hms_opt(0, 0, 0).unwrap();\nassert_eq!(&datetime.to_rfc3339(), \"2016-11-08T00:00:00-05:00\")\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["secs",{"kind":"primitive","inner":"i32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1366":{"id":"0:1366","crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[198,0],"end":[205,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Add","id":"2:2765:2072","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1367:183","0:1368:271"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2237-0:2291:2080":{"id":"b:2:2237-0:2291:2080","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2231:96","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2291:2080","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:2239:2071"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:24-0:2382:1922":{"id":"0:24-0:2382:1922","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[451,31],"end":[451,44]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::NaiveDateTime","name":"NaiveDateTime","id":"0:2382:1922","glob":false}},"a:2:2736:7564-0:2291:2080":{"id":"a:2:2736:7564-0:2291:2080","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2736:7564","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:7564","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2291:2080","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2782:659":{"id":"0:2782:659","crate_id":0,"name":"fmt","span":{"filename":"src/offset/local/mod.rs","begin":[54,22],"end":[54,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:9044:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:9033:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1861:2239":{"id":"0:1861:2239","crate_id":0,"name":"with_month0","span":{"filename":"src/traits.rs","begin":[69,4],"end":[69,55]},"visibility":"default","docs":"Makes a new value with the month number (starting from 0) changed.\n\nReturns `None` when the resulting value would be invalid.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["month0",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:5:674-0:2029:2284":{"id":"b:5:674-0:2029:2284","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:670:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2029:2284","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:676:8076","5:677:8077","5:678:8078"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8178:7660-0:2382:1922":{"id":"a:2:8178:7660-0:2382:1922","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8178:7660","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2537-0:1938:2508":{"id":"b:2:2537-0:1938:2508","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:1938:2508","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2540:126","2:2541:1457"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1699":{"id":"0:1699","crate_id":0,"name":null,"span":{"filename":"src/offset/utc.rs","begin":[121,0],"end":[125,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9074:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:2783:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1700:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1306:978":{"id":"0:1306:978","crate_id":0,"name":"offset","span":{"filename":"src/offset/mod.rs","begin":[4,0],"end":[549,1]},"visibility":"public","docs":"The time zone, which calculates offsets from the local time to UTC.\n\nThere are four operations provided by the `TimeZone` trait:\n\n1. Converting the local `NaiveDateTime` to `DateTime<Tz>`\n2. Converting the UTC `NaiveDateTime` to `DateTime<Tz>`\n3. Converting `DateTime<Tz>` to the local `NaiveDateTime`\n4. Constructing `DateTime<Tz>` objects from various offsets\n\n1 is used for constructors. 2 is used for the `with_timezone` method of date and time types.\n3 is used for other methods, e.g. `year()` or `format()`, and provided by an associated type\nwhich implements `Offset` (which then passed to `TimeZone` for actual implementations).\nTechnically speaking `TimeZone` has a total knowledge about given timescale,\nbut `Offset` is used as a cache to avoid the repeated conversion\nand provides implementations for 1 and 3.\nAn `TimeZone` instance can be reconstructed from the corresponding `Offset` instance.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:1380-0:2485:1919","0:1668-0:2776:1909","0:1701-0:2783:1920","0:2797:1940","0:1720:1924","0:1722:1925"],"is_stripped":false}},"b:2:2240-0:2084:2779":{"id":"b:2:2240-0:2084:2779","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2234:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2084:2779","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2242:6046"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2959":{"id":"0:2959","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[194,39],"end":[194,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2682:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Months","id":"0:2945:1947","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:233:2353":{"id":"0:233:2353","crate_id":0,"name":"timestamp","span":{"filename":"src/datetime/mod.rs","begin":[191,4],"end":[193,5]},"visibility":"public","docs":"Returns the number of non-leap seconds since January 1, 1970 0:00:00 UTC\n(aka \"UNIX timestamp\").","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:154":{"id":"0:154","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[486,0],"end":[491,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AddAssign","id":"2:2796:2073","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Duration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:156:272"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2046:2523":{"id":"0:2046:2523","crate_id":0,"name":"Nanosecond6","span":{"filename":"src/format/mod.rs","begin":[203,4],"end":[203,15]},"visibility":"default","docs":"Same as [`Nanosecond`](#variant.Nanosecond) but the accuracy is fixed to 6.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:2322":{"id":"0:2322","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[129,50],"end":[129,60]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","ge","le","lt"],"trait":{"name":"PartialOrd","id":"2:2343:186","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Days","id":"0:2305:1937","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Days","id":"0:2305:1937","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2323:1023"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:949":{"id":"0:949","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[1937,0],"end":[1941,1]},"visibility":"default","docs":"The `Display` output of the naive date `d` is the same as\n[`d.format(\"%Y-%m-%d\")`](../format/strftime/index.html).\n\nThe string printed can be readily parsed via the `parse` method on `str`.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nassert_eq!(format!(\"{}\", NaiveDate::from_ymd_opt(2015,  9,  5).unwrap()), \"2015-09-05\");\nassert_eq!(format!(\"{}\", NaiveDate::from_ymd_opt(   0,  1,  1).unwrap()), \"0000-01-01\");\nassert_eq!(format!(\"{}\", NaiveDate::from_ymd_opt(9999, 12, 31).unwrap()), \"9999-12-31\");\n```\n\nISO 8601 requires an explicit sign for years before 1 BCE or after 9999 CE.\n\n```\n# use chrono::NaiveDate;\nassert_eq!(format!(\"{}\", NaiveDate::from_ymd_opt(   -1,  1,  1).unwrap()),  \"-0001-01-01\");\nassert_eq!(format!(\"{}\", NaiveDate::from_ymd_opt(10000, 12, 31).unwrap()), \"+10000-12-31\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9074:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:950:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:177-0:56:1928":{"id":"0:177-0:56:1928","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[458,31],"end":[458,39]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"date::MIN_DATE","name":"MIN_DATE","id":"0:56:1928","glob":false}},"0:571:3089":{"id":"0:571:3089","crate_id":0,"name":"set_ordinal","span":{"filename":"src/format/parsed.rs","begin":[214,4],"end":[216,5]},"visibility":"public","docs":"Tries to set the [`ordinal`](#structfield.ordinal) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["value",{"kind":"primitive","inner":"i64"}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:455:1935","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2201:720":{"id":"0:2201:720","crate_id":0,"name":"hash","span":{"filename":"src/format/mod.rs","begin":[348,44],"end":[348,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9297:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2531-0:2324:1921":{"id":"b:2:2531-0:2324:1921","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2533:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2531-0:1888:1914":{"id":"b:2:2531-0:1888:1914","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SecondsFormat","id":"0:1888:1914","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2533:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1372":{"id":"0:1372","crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[216,0],"end":[223,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Add","id":"2:2765:2072","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:1374:183","0:1375:271"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:917:1395":{"id":"0:917:1395","crate_id":0,"name":"sub","span":{"filename":"src/naive/date.rs","begin":[1700,4],"end":[1702,5]},"visibility":"default","docs":"A subtraction of Months from `NaiveDate` clamped to valid days in resulting month.\n\n# Panics\n\nPanics if the resulting date would be out of range.\n\n# Example\n\n```\nuse chrono::{Duration, NaiveDate, Months};\n\nlet from_ymd = NaiveDate::from_ymd;\n\nassert_eq!(from_ymd(2014, 1, 1) - Months::new(11), from_ymd(2013, 2, 1));\nassert_eq!(from_ymd(2014, 1, 1) - Months::new(12), from_ymd(2013, 1, 1));\nassert_eq!(from_ymd(2014, 1, 1) - Months::new(13), from_ymd(2012, 12, 1));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["months",{"kind":"resolved_path","inner":{"name":"Months","id":"0:2945:1947","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:2770:2074","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2736:7564-0:2797:1940":{"id":"a:2:2736:7564-0:2797:1940","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2736:7564","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:7564","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2797:1940","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2736:7564-0:2234:2283":{"id":"a:2:2736:7564-0:2234:2283","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:7564","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Parsed","id":"0:2234:2283","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:8178:7660-0:2894:1916":{"id":"a:2:8178:7660-0:2894:1916","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8178:7660","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:2894:1916","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2961:604":{"id":"0:2961:604","crate_id":0,"name":"eq","span":{"filename":"src/month.rs","begin":[194,39],"end":[194,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Months","id":"0:2945:1947","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1805:2168":{"id":"0:1805:2168","crate_id":0,"name":"succ","span":{"filename":"src/weekday.rs","begin":[39,4],"end":[49,5]},"visibility":"public","docs":"The next day in the week.\n\n`w`:        | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun`\n----------- | ----- | ----- | ----- | ----- | ----- | ----- | -----\n`w.succ()`: | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun` | `Mon`","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2848:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8178:7660-0:1915:1913":{"id":"a:2:8178:7660-0:1915:1913","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Tz"},"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:8178:7660","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8178:7660","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:952:125":{"id":"0:952:125","crate_id":0,"name":"Err","span":{"filename":"src/naive/date.rs","begin":[1960,4],"end":[1960,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2186:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"a:2:2672:217-0:2797:1940":{"id":"a:2:2672:217-0:2797:1940","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2797:1940","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2890:604":{"id":"0:2890:604","crate_id":0,"name":"eq","span":{"filename":"src/weekday.rs","begin":[168,16],"end":[168,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:2884:1945","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2786":{"id":"0:2786","crate_id":0,"name":null,"span":{"filename":"src/offset/utc.rs","begin":[43,15],"end":[43,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:2783:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2787:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1755-0:2783:1920":{"id":"0:1755-0:2783:1920","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[484,61],"end":[484,64]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"offset::Utc","name":"Utc","id":"0:2783:1920","glob":false}},"0:124:2241":{"id":"0:124:2241","crate_id":0,"name":"with_day0","span":{"filename":"src/date.rs","begin":[432,4],"end":[434,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["day0",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5374:13436":{"id":"5:5374:13436","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7239:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["from",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7239:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11578:7280","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1362:271":{"id":"0:1362:271","crate_id":0,"name":"add","span":{"filename":"src/offset/fixed.rs","begin":[184,4],"end":[186,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1843-0:2964:1948":{"id":"0:1843-0:2964:1948","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[493,31],"end":[493,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"month::ParseMonthError","name":"ParseMonthError","id":"0:2964:1948","glob":false}},"0:1232:5552":{"id":"0:1232:5552","crate_id":0,"name":"from_hms_micro","span":{"filename":"src/naive/time/mod.rs","begin":[295,4],"end":[297,5]},"visibility":"public","docs":"Makes a new `NaiveTime` from hour, minute, second and microsecond.\n\nThe microsecond part can exceed 1,000,000\nin order to represent the [leap second](#leap-second-handling).\n\nPanics on invalid hour, minute, second and/or microsecond.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `from_hms_micro_opt()` instead\")]","#[inline]"],"deprecation":{"since":"0.4.23","note":"use `from_hms_micro_opt()` instead"},"kind":"function","inner":{"decl":{"inputs":[["hour",{"kind":"primitive","inner":"u32"}],["min",{"kind":"primitive","inner":"u32"}],["sec",{"kind":"primitive","inner":"u32"}],["micro",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:375":{"id":"0:375","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[942,0],"end":[950,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"SubAssign","id":"2:2800:2075","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Duration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:377:1396"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:841:4076":{"id":"0:841:4076","crate_id":0,"name":"from_weekday_of_month","span":{"filename":"src/naive/date.rs","begin":[458,4],"end":[460,5]},"visibility":"public","docs":"Makes a new `NaiveDate` by counting the number of occurrences of a particular day-of-week\nsince the beginning of the given month.  For instance, if you want the 2nd Friday of March\n2017, you would use `NaiveDate::from_weekday_of_month(2017, 3, Weekday::Fri, 2)`.\n\n# Panics\n\nThe resulting `NaiveDate` is guaranteed to be in `month`.  If `n` is larger than the number\nof `weekday` in `month` (eg. the 6th Friday of March 2017) then this function will panic.\n\n`n` is 1-indexed.  Passing `n=0` will cause a panic.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note =\n\"use `from_weekday_of_month_opt()` instead\")]"],"deprecation":{"since":"0.4.23","note":"use `from_weekday_of_month_opt()` instead"},"kind":"function","inner":{"decl":{"inputs":[["year",{"kind":"primitive","inner":"i32"}],["month",{"kind":"primitive","inner":"u32"}],["weekday",{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2848:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["n",{"kind":"primitive","inner":"u8"}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:252:2198":{"id":"0:252:2198","crate_id":0,"name":"naive_utc","span":{"filename":"src/datetime/mod.rs","begin":[388,4],"end":[390,5]},"visibility":"public","docs":"Returns a view to the naive UTC datetime.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1236:2164":{"id":"0:1236:2164","crate_id":0,"name":"from_hms_nano_opt","span":{"filename":"src/naive/time/mod.rs","begin":[361,4],"end":[367,5]},"visibility":"public","docs":"Makes a new `NaiveTime` from hour, minute, second and nanosecond.\n\nThe nanosecond part can exceed 1,000,000,000\nin order to represent the [leap second](#leap-second-handling).\n\nReturns `None` on invalid hour, minute, second and/or nanosecond.\n\n# Example\n\n```\nuse chrono::NaiveTime;\n\nlet from_hmsn_opt = NaiveTime::from_hms_nano_opt;\n\nassert!(from_hmsn_opt(0, 0, 0, 0).is_some());\nassert!(from_hmsn_opt(23, 59, 59, 999_999_999).is_some());\nassert!(from_hmsn_opt(23, 59, 59, 1_999_999_999).is_some()); // a leap second after 23:59:59\nassert!(from_hmsn_opt(24, 0, 0, 0).is_none());\nassert!(from_hmsn_opt(23, 60, 0, 0).is_none());\nassert!(from_hmsn_opt(23, 59, 60, 0).is_none());\nassert!(from_hmsn_opt(23, 59, 59, 2_000_000_000).is_none());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["hour",{"kind":"primitive","inner":"u32"}],["min",{"kind":"primitive","inner":"u32"}],["sec",{"kind":"primitive","inner":"u32"}],["nano",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2262":{"id":"0:2262","crate_id":0,"name":null,"span":{"filename":"src/format/parsed.rs","begin":[25,27],"end":[25,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2306:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Parsed","id":"0:2234:2283","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:754":{"id":"0:754","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[868,0],"end":[930,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7245:156","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"B"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2231:96","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2143:2081","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2291:2080","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:758:929","0:759:2219"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2186:1934":{"id":"0:2186:1934","crate_id":0,"name":"ParseError","span":{"filename":"src/format/mod.rs","begin":[349,0],"end":[349,38]},"visibility":"public","docs":"An error from the `parse` function.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:453","a:2:8179:7659-0:2186:1934","a:2:2672:217-0:2186:1934","a:2:2736:7564-0:2186:1934","a:2:2686:225-0:2186:1934","a:2:8178:7660-0:2186:1934","b:2:2531-0:2186:1934","b:2:2599-0:2186:1934","b:2:2542-0:2186:1934","b:2:2527-0:2186:1934","b:2:3331-0:2186:1934","b:2:2240-0:2186:1934","b:2:2537-0:2186:1934","b:2:2237-0:2186:1934","b:5:5633-0:2186:1934","b:5:674-0:2186:1934","0:457","0:2191","0:459","0:2193","0:2199","0:2200","0:2196","0:2189","0:2197","0:2194"]}},"0:1352":{"id":"0:1352","crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[129,0],"end":[133,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Offset","id":"0:1720:1924","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1353:2336"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:307:2234":{"id":"0:307:2234","crate_id":0,"name":"ordinal","span":{"filename":"src/datetime/mod.rs","begin":[770,4],"end":[772,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1919":{"id":"0:1919","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[87,9],"end":[87,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Tz"},"trait":{"name":"","id":"0:1722:1925","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:1921:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2304:659":{"id":"0:2304:659","crate_id":0,"name":"fmt","span":{"filename":"src/naive/date.rs","begin":[61,9],"end":[61,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:9044:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:9033:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1099:183":{"id":"0:1099:183","crate_id":0,"name":"Output","span":{"filename":"src/naive/datetime/mod.rs","begin":[1672,4],"end":[1672,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"b:2:3331-0:2203:2817":{"id":"b:2:3331-0:2203:2817","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3329:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2203:2817","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3333:1470"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1100:271":{"id":"0:1100:271","crate_id":0,"name":"add","span":{"filename":"src/naive/datetime/mod.rs","begin":[1674,4],"end":[1676,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["days",{"kind":"resolved_path","inner":{"name":"Days","id":"0:2305:1937","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:2765:2072","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2542-0:2382:1922":{"id":"b:2:2542-0:2382:1922","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:126","2:2546:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2967:415":{"id":"0:2967:415","crate_id":0,"name":"clone","span":{"filename":"src/month.rs","begin":[206,9],"end":[206,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ParseMonthError","id":"0:2964:1948","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2807:1584":{"id":"0:2807:1584","crate_id":0,"name":"1","span":{"filename":"src/offset/mod.rs","begin":[50,25],"end":[50,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"T"}},"0:128:2243":{"id":"0:128:2243","crate_id":0,"name":"with_ordinal0","span":{"filename":"src/date.rs","begin":[442,4],"end":[444,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["ordinal0",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2792":{"id":"0:2792","crate_id":0,"name":null,"span":{"filename":"src/offset/utc.rs","begin":[43,33],"end":[43,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2306:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:2783:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2887:415":{"id":"0:2887:415","crate_id":0,"name":"clone","span":{"filename":"src/weekday.rs","begin":[168,9],"end":[168,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:2884:1945","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:323:2243":{"id":"0:323:2243","crate_id":0,"name":"with_ordinal0","span":{"filename":"src/datetime/mod.rs","begin":[817,4],"end":[819,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["ordinal0",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:16-0:2894:1916":{"id":"0:16-0:2894:1916","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[447,30],"end":[447,35]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::Month","name":"Month","id":"0:2894:1916","glob":false}},"0:1949":{"id":"0:1949","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[76,22],"end":[76,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2301:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:1938:2508","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:1938:2508","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1950:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1903":{"id":"0:1903","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[55,16],"end":[55,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2684:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SecondsFormat","id":"0:1888:1914","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2537-0:2945:1947":{"id":"b:2:2537-0:2945:1947","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Months","id":"0:2945:1947","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2540:126","2:2541:1457"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:258:59":{"id":"0:258:59","crate_id":0,"name":"default","span":{"filename":"src/datetime/mod.rs","begin":[422,4],"end":[424,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:956:59":{"id":"0:956:59","crate_id":0,"name":"default","span":{"filename":"src/naive/date.rs","begin":[1991,4],"end":[1993,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2830:1943":{"id":"0:2830:1943","crate_id":0,"name":"RoundingError","span":{"filename":"src/round.rs","begin":[242,0],"end":[278,1]},"visibility":"public","docs":"An error from rounding by `Duration`\n\nSee: [`DurationRound`]","links":{"`DurationRound`":"0:1776:1942"},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:2831:6743","0:2833:6744","0:2835:6741"],"impls":["a:2:8179:7659-0:2830:1943","a:2:2672:217-0:2830:1943","a:2:2736:7564-0:2830:1943","a:2:2686:225-0:2830:1943","a:2:8178:7660-0:2830:1943","b:2:2531-0:2830:1943","b:2:2599-0:2830:1943","b:2:2542-0:2830:1943","b:2:2527-0:2830:1943","b:2:3331-0:2830:1943","b:2:2240-0:2830:1943","b:2:2537-0:2830:1943","b:2:2237-0:2830:1943","b:5:5633-0:2830:1943","b:5:674-0:2830:1943","0:1794","0:2844","0:2839","0:2847","0:2842","0:2845","0:1796","0:2837","0:2841"]}},"2:2546:1456":{"id":"2:2546:1456","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:40824:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2542-0:2234:2283":{"id":"b:2:2542-0:2234:2283","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Parsed","id":"0:2234:2283","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:126","2:2546:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:674-0:2143:2081":{"id":"b:5:674-0:2143:2081","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:670:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2143:2081","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["5:676:8076","5:677:8077","5:678:8078"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2542-0:2143:2081":{"id":"b:2:2542-0:2143:2081","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2143:2081","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2545:126","2:2546:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1865:2243":{"id":"0:1865:2243","crate_id":0,"name":"with_ordinal0","span":{"filename":"src/traits.rs","begin":[89,4],"end":[89,59]},"visibility":"default","docs":"Makes a new value with the day of year (starting from 0) changed.\n\nReturns `None` when the resulting value would be invalid.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["ordinal0",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:0:1964":{"id":"0:0:1964","crate_id":0,"name":"chrono","span":{"filename":"src/lib.rs","begin":[1,0],"end":[527,1]},"visibility":"public","docs":"# Chrono: Date and Time for Rust\n\nIt aims to be a feature-complete superset of\nthe [time](https://github.com/rust-lang-deprecated/time) library.\nIn particular,\n\n* Chrono strictly adheres to ISO 8601.\n* Chrono is timezone-aware by default, with separate timezone-naive types.\n* Chrono is space-optimal and (while not being the primary goal) reasonably efficient.\n\nThere were several previous attempts to bring a good date and time library to Rust,\nwhich Chrono builds upon and should acknowledge:\n\n* [Initial research on\n   the wiki](https://github.com/rust-lang/rust-wiki-backup/blob/master/Lib-datetime.md)\n* Dietrich Epp's [datetime-rs](https://github.com/depp/datetime-rs)\n* Luis de Bethencourt's [rust-datetime](https://github.com/luisbg/rust-datetime)\n\n### Features\n\nChrono supports various runtime environments and operating systems, and has\nseveral features that may be enabled or disabled.\n\nDefault features:\n\n- `alloc`: Enable features that depend on allocation (primarily string formatting)\n- `std`: Enables functionality that depends on the standard library. This\n  is a superset of `alloc` and adds interoperation with standard library types\n  and traits.\n- `clock`: Enables reading the system time (`now`) that depends on the standard library for\nUNIX-like operating systems and the Windows API (`winapi`) for Windows.\n\nOptional features:\n\n- [`serde`][]: Enable serialization/deserialization via serde.\n- `unstable-locales`: Enable localization. This adds various methods with a\n  `_localized` suffix. The implementation and API may change or even be\n  removed in a patch release. Feedback welcome.\n\n[`serde`]: https://github.com/serde-rs/serde\n[wasm-bindgen]: https://github.com/rustwasm/wasm-bindgen\n\nSee the [cargo docs][] for examples of specifying features.\n\n[cargo docs]: https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html#choosing-features\n\n## Overview\n\n### Duration\n\nChrono currently uses its own [`Duration`] type to represent the magnitude\nof a time span. Since this has the same name as the newer, standard type for\nduration, the reference will refer this type as `OldDuration`.\n\nNote that this is an \"accurate\" duration represented as seconds and\nnanoseconds and does not represent \"nominal\" components such as days or\nmonths.\n\nWhen the `oldtime` feature is enabled, [`Duration`] is an alias for the\n[`time::Duration`](https://docs.rs/time/0.1.40/time/struct.Duration.html)\ntype from v0.1 of the time crate. time v0.1 is deprecated, so new code\nshould disable the `oldtime` feature and use the `chrono::Duration` type\ninstead. The `oldtime` feature is enabled by default for backwards\ncompatibility, but future versions of Chrono are likely to remove the\nfeature entirely.\n\nChrono does not yet natively support\nthe standard [`Duration`](https://doc.rust-lang.org/std/time/struct.Duration.html) type,\nbut it will be supported in the future.\nMeanwhile you can convert between two types with\n[`Duration::from_std`](https://docs.rs/time/0.1.40/time/struct.Duration.html#method.from_std)\nand\n[`Duration::to_std`](https://docs.rs/time/0.1.40/time/struct.Duration.html#method.to_std)\nmethods.\n\n### Date and Time\n\nChrono provides a\n[**`DateTime`**](./struct.DateTime.html)\ntype to represent a date and a time in a timezone.\n\nFor more abstract moment-in-time tracking such as internal timekeeping\nthat is unconcerned with timezones, consider\n[`time::SystemTime`](https://doc.rust-lang.org/std/time/struct.SystemTime.html),\nwhich tracks your system clock, or\n[`time::Instant`](https://doc.rust-lang.org/std/time/struct.Instant.html), which\nis an opaque but monotonically-increasing representation of a moment in time.\n\n`DateTime` is timezone-aware and must be constructed from\nthe [**`TimeZone`**](./offset/trait.TimeZone.html) object,\nwhich defines how the local date is converted to and back from the UTC date.\nThere are three well-known `TimeZone` implementations:\n\n* [**`Utc`**](./offset/struct.Utc.html) specifies the UTC time zone. It is most efficient.\n\n* [**`Local`**](./offset/struct.Local.html) specifies the system local time zone.\n\n* [**`FixedOffset`**](./offset/struct.FixedOffset.html) specifies\n  an arbitrary, fixed time zone such as UTC+09:00 or UTC-10:30.\n  This often results from the parsed textual date and time.\n  Since it stores the most information and does not depend on the system environment,\n  you would want to normalize other `TimeZone`s into this type.\n\n`DateTime`s with different `TimeZone` types are distinct and do not mix,\nbut can be converted to each other using\nthe [`DateTime::with_timezone`](./struct.DateTime.html#method.with_timezone) method.\n\nYou can get the current date and time in the UTC time zone\n([`Utc::now()`](./offset/struct.Utc.html#method.now))\nor in the local time zone\n([`Local::now()`](./offset/struct.Local.html#method.now)).\n\n```rust\nuse chrono::prelude::*;\n\nlet utc: DateTime<Utc> = Utc::now();       // e.g. `2014-11-28T12:45:59.324310806Z`\nlet local: DateTime<Local> = Local::now(); // e.g. `2014-11-28T21:45:59.324310806+09:00`\n# let _ = utc; let _ = local;\n```\n\nAlternatively, you can create your own date and time.\nThis is a bit verbose due to Rust's lack of function and method overloading,\nbut in turn we get a rich combination of initialization methods.\n\n```rust\nuse chrono::prelude::*;\nuse chrono::offset::LocalResult;\n\nlet dt = Utc.with_ymd_and_hms(2014, 7, 8, 9, 10, 11).unwrap(); // `2014-07-08T09:10:11Z`\n// July 8 is 188th day of the year 2014 (`o` for \"ordinal\")\nassert_eq!(dt, Utc.yo(2014, 189).and_hms_opt(9, 10, 11).unwrap());\n// July 8 is Tuesday in ISO week 28 of the year 2014.\nassert_eq!(dt, Utc.isoywd(2014, 28, Weekday::Tue).and_hms_opt(9, 10, 11).unwrap());\n\nlet dt = NaiveDate::from_ymd_opt(2014, 7, 8).unwrap().and_hms_milli_opt(9, 10, 11, 12).unwrap().and_local_timezone(Utc).unwrap(); // `2014-07-08T09:10:11.012Z`\nassert_eq!(dt, NaiveDate::from_ymd_opt(2014, 7, 8).unwrap().and_hms_micro_opt(9, 10, 11, 12_000).unwrap().and_local_timezone(Utc).unwrap());\nassert_eq!(dt, NaiveDate::from_ymd_opt(2014, 7, 8).unwrap().and_hms_nano_opt(9, 10, 11, 12_000_000).unwrap().and_local_timezone(Utc).unwrap());\n\n// dynamic verification\nassert_eq!(Utc.ymd_opt(2014, 7, 8).and_hms_opt(21, 15, 33),\n           LocalResult::Single(Utc.with_ymd_and_hms(2014, 7, 8, 21, 15, 33).unwrap()));\nassert_eq!(Utc.ymd_opt(2014, 7, 8).and_hms_opt(80, 15, 33), LocalResult::None);\nassert_eq!(Utc.ymd_opt(2014, 7, 38).and_hms_opt(21, 15, 33), LocalResult::None);\n\n// other time zone objects can be used to construct a local datetime.\n// obviously, `local_dt` is normally different from `dt`, but `fixed_dt` should be identical.\nlet local_dt = Local.from_local_datetime(&NaiveDate::from_ymd_opt(2014, 7, 8).unwrap().and_hms_milli_opt(9, 10, 11, 12).unwrap()).unwrap();\nlet fixed_dt = FixedOffset::east_opt(9 * 3600).unwrap().from_local_datetime(&NaiveDate::from_ymd_opt(2014, 7, 8).unwrap().and_hms_milli_opt(18, 10, 11, 12).unwrap()).unwrap();\nassert_eq!(dt, fixed_dt);\n# let _ = local_dt;\n```\n\nVarious properties are available to the date and time, and can be altered individually.\nMost of them are defined in the traits [`Datelike`](./trait.Datelike.html) and\n[`Timelike`](./trait.Timelike.html) which you should `use` before.\nAddition and subtraction is also supported.\nThe following illustrates most supported operations to the date and time:\n\n```rust\nuse chrono::prelude::*;\nuse chrono::Duration;\n\n// assume this returned `2014-11-28T21:45:59.324310806+09:00`:\nlet dt = FixedOffset::east_opt(9*3600).unwrap().from_local_datetime(&NaiveDate::from_ymd_opt(2014, 11, 28).unwrap().and_hms_nano_opt(21, 45, 59, 324310806).unwrap()).unwrap();\n\n// property accessors\nassert_eq!((dt.year(), dt.month(), dt.day()), (2014, 11, 28));\nassert_eq!((dt.month0(), dt.day0()), (10, 27)); // for unfortunate souls\nassert_eq!((dt.hour(), dt.minute(), dt.second()), (21, 45, 59));\nassert_eq!(dt.weekday(), Weekday::Fri);\nassert_eq!(dt.weekday().number_from_monday(), 5); // Mon=1, ..., Sun=7\nassert_eq!(dt.ordinal(), 332); // the day of year\nassert_eq!(dt.num_days_from_ce(), 735565); // the number of days from and including Jan 1, 1\n\n// time zone accessor and manipulation\nassert_eq!(dt.offset().fix().local_minus_utc(), 9 * 3600);\nassert_eq!(dt.timezone(), FixedOffset::east_opt(9 * 3600).unwrap());\nassert_eq!(dt.with_timezone(&Utc), NaiveDate::from_ymd_opt(2014, 11, 28).unwrap().and_hms_nano_opt(12, 45, 59, 324310806).unwrap().and_local_timezone(Utc).unwrap());\n\n// a sample of property manipulations (validates dynamically)\nassert_eq!(dt.with_day(29).unwrap().weekday(), Weekday::Sat); // 2014-11-29 is Saturday\nassert_eq!(dt.with_day(32), None);\nassert_eq!(dt.with_year(-300).unwrap().num_days_from_ce(), -109606); // November 29, 301 BCE\n\n// arithmetic operations\nlet dt1 = Utc.with_ymd_and_hms(2014, 11, 14, 8, 9, 10).unwrap();\nlet dt2 = Utc.with_ymd_and_hms(2014, 11, 14, 10, 9, 8).unwrap();\nassert_eq!(dt1.signed_duration_since(dt2), Duration::seconds(-2 * 3600 + 2));\nassert_eq!(dt2.signed_duration_since(dt1), Duration::seconds(2 * 3600 - 2));\nassert_eq!(Utc.with_ymd_and_hms(1970, 1, 1, 0, 0, 0).unwrap() + Duration::seconds(1_000_000_000),\n           Utc.with_ymd_and_hms(2001, 9, 9, 1, 46, 40).unwrap());\nassert_eq!(Utc.with_ymd_and_hms(1970, 1, 1, 0, 0, 0).unwrap() - Duration::seconds(1_000_000_000),\n           Utc.with_ymd_and_hms(1938, 4, 24, 22, 13, 20).unwrap());\n```\n\n### Formatting and Parsing\n\nFormatting is done via the [`format`](./struct.DateTime.html#method.format) method,\nwhich format is equivalent to the familiar `strftime` format.\n\nSee [`format::strftime`](./format/strftime/index.html#specifiers)\ndocumentation for full syntax and list of specifiers.\n\nThe default `to_string` method and `{:?}` specifier also give a reasonable representation.\nChrono also provides [`to_rfc2822`](./struct.DateTime.html#method.to_rfc2822) and\n[`to_rfc3339`](./struct.DateTime.html#method.to_rfc3339) methods\nfor well-known formats.\n\nChrono now also provides date formatting in almost any language without the\nhelp of an additional C library. This functionality is under the feature\n`unstable-locales`:\n\n```toml\nchrono = { version = \"0.4\", features = [\"unstable-locales\"] }\n```\n\nThe `unstable-locales` feature requires and implies at least the `alloc` feature.\n\n```rust\nuse chrono::prelude::*;\n\n# #[cfg(feature = \"unstable-locales\")]\n# fn test() {\nlet dt = Utc.with_ymd_and_hms(2014, 11, 28, 12, 0, 9).unwrap();\nassert_eq!(dt.format(\"%Y-%m-%d %H:%M:%S\").to_string(), \"2014-11-28 12:00:09\");\nassert_eq!(dt.format(\"%a %b %e %T %Y\").to_string(), \"Fri Nov 28 12:00:09 2014\");\nassert_eq!(dt.format_localized(\"%A %e %B %Y, %T\", Locale::fr_BE).to_string(), \"vendredi 28 novembre 2014, 12:00:09\");\n\nassert_eq!(dt.format(\"%a %b %e %T %Y\").to_string(), dt.format(\"%c\").to_string());\nassert_eq!(dt.to_string(), \"2014-11-28 12:00:09 UTC\");\nassert_eq!(dt.to_rfc2822(), \"Fri, 28 Nov 2014 12:00:09 +0000\");\nassert_eq!(dt.to_rfc3339(), \"2014-11-28T12:00:09+00:00\");\nassert_eq!(format!(\"{:?}\", dt), \"2014-11-28T12:00:09Z\");\n\n// Note that milli/nanoseconds are only printed if they are non-zero\nlet dt_nano = NaiveDate::from_ymd_opt(2014, 11, 28).unwrap().and_hms_nano_opt(12, 0, 9, 1).unwrap().and_local_timezone(Utc).unwrap();\nassert_eq!(format!(\"{:?}\", dt_nano), \"2014-11-28T12:00:09.000000001Z\");\n# }\n# #[cfg(not(feature = \"unstable-locales\"))]\n# fn test() {}\n# if cfg!(feature = \"unstable-locales\") {\n#    test();\n# }\n```\n\nParsing can be done with three methods:\n\n1. The standard [`FromStr`](https://doc.rust-lang.org/std/str/trait.FromStr.html) trait\n   (and [`parse`](https://doc.rust-lang.org/std/primitive.str.html#method.parse) method\n   on a string) can be used for parsing `DateTime<FixedOffset>`, `DateTime<Utc>` and\n   `DateTime<Local>` values. This parses what the `{:?}`\n   ([`std::fmt::Debug`](https://doc.rust-lang.org/std/fmt/trait.Debug.html))\n   format specifier prints, and requires the offset to be present.\n\n2. [`DateTime::parse_from_str`](./struct.DateTime.html#method.parse_from_str) parses\n   a date and time with offsets and returns `DateTime<FixedOffset>`.\n   This should be used when the offset is a part of input and the caller cannot guess that.\n   It *cannot* be used when the offset can be missing.\n   [`DateTime::parse_from_rfc2822`](./struct.DateTime.html#method.parse_from_rfc2822)\n   and\n   [`DateTime::parse_from_rfc3339`](./struct.DateTime.html#method.parse_from_rfc3339)\n   are similar but for well-known formats.\n\n3. [`Offset::datetime_from_str`](./offset/trait.TimeZone.html#method.datetime_from_str) is\n   similar but returns `DateTime` of given offset.\n   When the explicit offset is missing from the input, it simply uses given offset.\n   It issues an error when the input contains an explicit offset different\n   from the current offset.\n\nMore detailed control over the parsing process is available via\n[`format`](./format/index.html) module.\n\n```rust\nuse chrono::prelude::*;\n\nlet dt = Utc.with_ymd_and_hms(2014, 11, 28, 12, 0, 9).unwrap();\nlet fixed_dt = dt.with_timezone(&FixedOffset::east_opt(9*3600).unwrap());\n\n// method 1\nassert_eq!(\"2014-11-28T12:00:09Z\".parse::<DateTime<Utc>>(), Ok(dt.clone()));\nassert_eq!(\"2014-11-28T21:00:09+09:00\".parse::<DateTime<Utc>>(), Ok(dt.clone()));\nassert_eq!(\"2014-11-28T21:00:09+09:00\".parse::<DateTime<FixedOffset>>(), Ok(fixed_dt.clone()));\n\n// method 2\nassert_eq!(DateTime::parse_from_str(\"2014-11-28 21:00:09 +09:00\", \"%Y-%m-%d %H:%M:%S %z\"),\n           Ok(fixed_dt.clone()));\nassert_eq!(DateTime::parse_from_rfc2822(\"Fri, 28 Nov 2014 21:00:09 +0900\"),\n           Ok(fixed_dt.clone()));\nassert_eq!(DateTime::parse_from_rfc3339(\"2014-11-28T21:00:09+09:00\"), Ok(fixed_dt.clone()));\n\n// method 3\nassert_eq!(Utc.datetime_from_str(\"2014-11-28 12:00:09\", \"%Y-%m-%d %H:%M:%S\"), Ok(dt.clone()));\nassert_eq!(Utc.datetime_from_str(\"Fri Nov 28 12:00:09 2014\", \"%a %b %e %T %Y\"), Ok(dt.clone()));\n\n// oops, the year is missing!\nassert!(Utc.datetime_from_str(\"Fri Nov 28 12:00:09\", \"%a %b %e %T %Y\").is_err());\n// oops, the format string does not include the year at all!\nassert!(Utc.datetime_from_str(\"Fri Nov 28 12:00:09\", \"%a %b %e %T\").is_err());\n// oops, the weekday is incorrect!\nassert!(Utc.datetime_from_str(\"Sat Nov 28 12:00:09 2014\", \"%a %b %e %T %Y\").is_err());\n```\n\nAgain : See [`format::strftime`](./format/strftime/index.html#specifiers)\ndocumentation for full syntax and list of specifiers.\n\n### Conversion from and to EPOCH timestamps\n\nUse [`Utc.timestamp(seconds, nanoseconds)`](./offset/trait.TimeZone.html#method.timestamp)\nto construct a [`DateTime<Utc>`](./struct.DateTime.html) from a UNIX timestamp\n(seconds, nanoseconds that passed since January 1st 1970).\n\nUse [`DateTime.timestamp`](./struct.DateTime.html#method.timestamp) to get the timestamp (in seconds)\nfrom a [`DateTime`](./struct.DateTime.html). Additionally, you can use\n[`DateTime.timestamp_subsec_nanos`](./struct.DateTime.html#method.timestamp_subsec_nanos)\nto get the number of additional number of nanoseconds.\n\n```rust\n// We need the trait in scope to use Utc::timestamp().\nuse chrono::{DateTime, TimeZone, Utc};\n\n// Construct a datetime from epoch:\nlet dt = Utc.timestamp(1_500_000_000, 0);\nassert_eq!(dt.to_rfc2822(), \"Fri, 14 Jul 2017 02:40:00 +0000\");\n\n// Get epoch value from a datetime:\nlet dt = DateTime::parse_from_rfc2822(\"Fri, 14 Jul 2017 02:40:00 +0000\").unwrap();\nassert_eq!(dt.timestamp(), 1_500_000_000);\n```\n\n### Individual date\n\nChrono also provides an individual date type ([**`Date`**](./struct.Date.html)).\nIt also has time zones attached, and have to be constructed via time zones.\nMost operations available to `DateTime` are also available to `Date` whenever appropriate.\n\n```rust\nuse chrono::prelude::*;\nuse chrono::offset::LocalResult;\n\n# // these *may* fail, but only very rarely. just rerun the test if you were that unfortunate ;)\nassert_eq!(Utc::today(), Utc::now().date());\nassert_eq!(Local::today(), Local::now().date());\n\nassert_eq!(Utc.ymd_opt(2014, 11, 28).unwrap().weekday(), Weekday::Fri);\nassert_eq!(Utc.ymd_opt(2014, 11, 31), LocalResult::None);\nassert_eq!(NaiveDate::from_ymd_opt(2014, 11, 28).unwrap().and_hms_milli_opt(7, 8, 9, 10).unwrap().and_local_timezone(Utc).unwrap().format(\"%H%M%S\").to_string(),\n           \"070809\");\n```\n\nThere is no timezone-aware `Time` due to the lack of usefulness and also the complexity.\n\n`DateTime` has [`date`](./struct.DateTime.html#method.date) method\nwhich returns a `Date` which represents its date component.\nThere is also a [`time`](./struct.DateTime.html#method.time) method,\nwhich simply returns a naive local time described below.\n\n### Naive date and time\n\nChrono provides naive counterparts to `Date`, (non-existent) `Time` and `DateTime`\nas [**`NaiveDate`**](./naive/struct.NaiveDate.html),\n[**`NaiveTime`**](./naive/struct.NaiveTime.html) and\n[**`NaiveDateTime`**](./naive/struct.NaiveDateTime.html) respectively.\n\nThey have almost equivalent interfaces as their timezone-aware twins,\nbut are not associated to time zones obviously and can be quite low-level.\nThey are mostly useful for building blocks for higher-level types.\n\nTimezone-aware `DateTime` and `Date` types have two methods returning naive versions:\n[`naive_local`](./struct.DateTime.html#method.naive_local) returns\na view to the naive local time,\nand [`naive_utc`](./struct.DateTime.html#method.naive_utc) returns\na view to the naive UTC time.\n\n## Limitations\n\nOnly proleptic Gregorian calendar (i.e. extended to support older dates) is supported.\nBe very careful if you really have to deal with pre-20C dates, they can be in Julian or others.\n\nDate types are limited in about +/- 262,000 years from the common epoch.\nTime types are limited in the nanosecond accuracy.\n\n[Leap seconds are supported in the representation but\nChrono doesn't try to make use of them](./naive/struct.NaiveTime.html#leap-second-handling).\n(The main reason is that leap seconds are not really predictable.)\nAlmost *every* operation over the possible leap seconds will ignore them.\nConsider using `NaiveDateTime` with the implicit TAI (International Atomic Time) scale\nif you want.\n\nChrono inherently does not support an inaccurate or partial date and time representation.\nAny operation that can be ambiguous will return `None` in such cases.\nFor example, \"a month later\" of 2014-01-30 is not well-defined\nand consequently `Utc.ymd_opt(2014, 1, 30).unwrap().with_month(2)` returns `None`.\n\nNon ISO week handling is not yet supported.\nFor now you can use the [chrono_ext](https://crates.io/crates/chrono_ext)\ncrate ([sources](https://github.com/bcourtine/chrono-ext/)).\n\nAdvanced time zone handling is not yet supported.\nFor now you can try the [Chrono-tz](https://github.com/chronotope/chrono-tz/) crate instead.","links":{"`Duration`":"20:296:120"},"attrs":["#![doc(html_root_url = \"https://docs.rs/chrono/latest/\")]","#![deny(missing_docs)]","#![deny(missing_debug_implementations)]","#![warn(unreachable_pub)]","#![deny(dead_code)]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:7:1056","0:421:670","0:775:1936","0:1306:978","0:5-20:296:120","0:6-20:317:1903","0:175-0:1881:1908","0:176-0:57:1927","0:177-0:56:1928","0:417-0:1915:1913","0:418-0:1888:1914","0:419-0:225:1931","0:420-0:224:1932","0:773-0:2186:1934","0:774-0:455:1935","0:1300-0:2305:1937","0:1301-0:2448:1938","0:1302-0:2324:1921","0:1303-0:2382:1922","0:1304-0:2466:1923","0:1305-0:2300:1939","0:1749-0:2776:1909","0:1751-0:2485:1919","0:1752-0:2797:1940","0:1753-0:1720:1924","0:1754-0:1722:1925","0:1755-0:2783:1920","0:1799-0:1776:1942","0:1800-0:2830:1943","0:1801-0:1768:1912","0:1823-0:2884:1945","0:1824-0:2848:1918","0:1841-0:2894:1916","0:1842-0:2945:1947","0:1843-0:2964:1948","0:1879-0:1848:1915","0:1880-0:1867:1917"],"is_stripped":false}},"b:2:2542-0:1888:1914":{"id":"b:2:2542-0:1888:1914","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SecondsFormat","id":"0:1888:1914","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:126","2:2546:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2813":{"id":"0:2813","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[41,16],"end":[41,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::cmp::PartialEq","id":"2:2301:185","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2301:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2797:1940","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2797:1940","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:2815:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2797:1940":{"id":"0:2797:1940","crate_id":0,"name":"LocalResult","span":{"filename":"src/offset/mod.rs","begin":[42,0],"end":[51,1]},"visibility":"public","docs":"The conversion result from the local time to the timezone-aware datetime types.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"variants_stripped":false,"variants":["0:2799:176","0:2801:2795","0:2804:3172"],"impls":["0:1702","0:1710","0:1717","a:2:8179:7659-0:2797:1940","a:2:2672:217-0:2797:1940","a:2:2736:7564-0:2797:1940","a:2:2686:225-0:2797:1940","a:2:8178:7660-0:2797:1940","b:2:2531-0:2797:1940","b:2:2542-0:2797:1940","b:2:2527-0:2797:1940","b:2:3331-0:2797:1940","b:2:2240-0:2797:1940","b:2:2537-0:2797:1940","b:2:2237-0:2797:1940","b:5:674-0:2797:1940","0:2808","0:2816","0:2823","0:2826","0:2821","0:2819","0:2811","0:2813"]}},"0:1028:2409":{"id":"0:1028:2409","crate_id":0,"name":"checked_add_days","span":{"filename":"src/naive/datetime/mod.rs","begin":[755,4],"end":[757,5]},"visibility":"public","docs":"Add a duration in [`Days`] to the date part of the `NaiveDateTime`\n\nReturns `None` if the resulting date would be out of range.","links":{"`Days`":"0:2305:1937"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["days",{"kind":"resolved_path","inner":{"name":"Days","id":"0:2305:1937","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2542-0:2894:1916":{"id":"b:2:2542-0:2894:1916","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:2894:1916","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:126","2:2546:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11977:30393":{"id":"2:11977:30393","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:11872:411","self::pattern":"2:11573:1962"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["suffix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11578:7280","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11578:7280","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11593:7308","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2531-0:2029:2284":{"id":"b:2:2531-0:2029:2284","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2029:2284","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2533:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2237-0:2186:1934":{"id":"b:2:2237-0:2186:1934","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2231:96","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2186:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2239:2071"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1070:2540":{"id":"0:1070:2540","crate_id":0,"name":"nanosecond","span":{"filename":"src/naive/datetime/mod.rs","begin":[1320,4],"end":[1322,5]},"visibility":"default","docs":"Returns the number of nanoseconds since the whole non-leap second.\nThe range from 1,000,000,000 to 1,999,999,999 represents\nthe [leap second](./struct.NaiveTime.html#leap-second-handling).\n\nSee also the [`NaiveTime::nanosecond`] method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Timelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().and_hms_milli_opt(12, 34, 56, 789).unwrap();\nassert_eq!(dt.nanosecond(), 789_000_000);\n```","links":{"`NaiveTime::nanosecond`":"0:1257:2540"},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:581:3119":{"id":"0:581:3119","crate_id":0,"name":"to_naive_date","span":{"filename":"src/format/parsed.rs","begin":[292,4],"end":[488,5]},"visibility":"public","docs":"Returns a parsed naive date out of given fields.\n\nThis method is able to determine the date from given subset of fields:\n\n- Year, month, day.\n- Year, day of the year (ordinal).\n- Year, week number counted from Sunday or Monday, day of the week.\n- ISO week date.\n\nGregorian year and ISO week date year can have their century number (`*_div_100`) omitted,\nthe two-digit year is used to guess the century number then.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:455:1935","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2778":{"id":"0:2778","crate_id":0,"name":null,"span":{"filename":"src/offset/local/mod.rs","begin":[54,9],"end":[54,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2684:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Local","id":"0:2776:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:126:2242":{"id":"0:126:2242","crate_id":0,"name":"with_ordinal","span":{"filename":"src/date.rs","begin":[437,4],"end":[439,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["ordinal",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2542-0:2300:1939":{"id":"b:2:2542-0:2300:1939","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveWeek","id":"0:2300:1939","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:126","2:2546:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1303-0:2382:1922":{"id":"0:1303-0:2382:1922","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[476,42],"end":[476,55]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"naive::NaiveDateTime","name":"NaiveDateTime","id":"0:2382:1922","glob":false}},"0:378":{"id":"0:378","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[952,0],"end":[958,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:2770:2074","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Months","id":"0:2945:1947","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:380:183","0:381:1395"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1045:2231":{"id":"0:1045:2231","crate_id":0,"name":"month0","span":{"filename":"src/naive/datetime/mod.rs","begin":[994,4],"end":[996,5]},"visibility":"default","docs":"Returns the month number starting from 0.\n\nThe return value ranges from 0 to 11.\n\nSee also the [`NaiveDate::month0`](./struct.NaiveDate.html#method.month0) method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Datelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2015, 9, 25).unwrap().and_hms_opt(12, 34, 56).unwrap();\nassert_eq!(dt.month0(), 8);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:285":{"id":"0:285","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[584,0],"end":[746,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Tz"},"trait":{"name":"","id":"0:1722:1925","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Display","id":"2:9074:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:287:2479","0:288:2484","0:289:2504","0:294:2214","0:298:670"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2284:659":{"id":"0:2284:659","crate_id":0,"name":"fmt","span":{"filename":"src/format/strftime.rs","begin":[212,16],"end":[212,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:9044:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:9033:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3331-0:2272:2082":{"id":"b:2:3331-0:2272:2082","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3329:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2272:2082","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3333:1470"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:7133-0:2272:2082":{"id":"b:2:7133-0:2272:2082","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7245:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7129:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2272:2082","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:7135:2081","2:7136:8033","2:7137:775"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:748:943":{"id":"0:748:943","crate_id":0,"name":"next","span":{"filename":"src/format/strftime.rs","begin":[275,4],"end":[500,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2143:2081","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2237-0:1938:2508":{"id":"b:2:2237-0:1938:2508","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2231:96","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:1938:2508","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2239:2071"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1938:2508":{"id":"0:1938:2508","crate_id":0,"name":"Pad","span":{"filename":"src/format/mod.rs","begin":[77,0],"end":[84,1]},"visibility":"public","docs":"Padding characters for numeric items.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:1939:176","0:1941:2509","0:1943:2674"],"impls":["a:2:8179:7659-0:1938:2508","a:2:2672:217-0:1938:2508","a:2:2736:7564-0:1938:2508","a:2:2686:225-0:1938:2508","a:2:8178:7660-0:1938:2508","b:2:2531-0:1938:2508","b:2:2542-0:1938:2508","b:2:2527-0:1938:2508","b:2:3331-0:1938:2508","b:2:2240-0:1938:2508","b:2:2537-0:1938:2508","b:2:2237-0:1938:2508","b:5:674-0:1938:2508","0:1952","0:1945","0:1949","0:1946","0:1948","0:1954","0:1951","0:1956"]}},"0:2003":{"id":"0:2003","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[99,9],"end":[99,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:1959:2507","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2004:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1069:2539":{"id":"0:1069:2539","crate_id":0,"name":"second","span":{"filename":"src/naive/datetime/mod.rs","begin":[1301,4],"end":[1303,5]},"visibility":"default","docs":"Returns the second number from 0 to 59.\n\nSee also the [`NaiveTime::second`] method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Timelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().and_hms_milli_opt(12, 34, 56, 789).unwrap();\nassert_eq!(dt.second(), 56);\n```","links":{"`NaiveTime::second`":"0:1256:2539"},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:887:2918":{"id":"0:887:2918","crate_id":0,"name":"week","span":{"filename":"src/naive/date.rs","begin":[1262,4],"end":[1264,5]},"visibility":"public","docs":"Returns the [`NaiveWeek`] that the date belongs to, starting with the [`Weekday`]\nspecified.","links":{"`NaiveWeek`":"0:2300:1939","`Weekday`":"0:2848:1918"},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["start",{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2848:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveWeek","id":"0:2300:1939","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2599-0:2186:1934":{"id":"b:2:2599-0:2186:1934","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Error","id":"2:2592:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Provider","id":"2:3380:19287","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2186:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2601:8224"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"E"}}},"0:371":{"id":"0:371","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[933,0],"end":[940,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:2770:2074","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Duration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:373:183","0:374:1395"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1689:1924":{"id":"0:1689:1924","crate_id":0,"name":"Offset","span":{"filename":"src/offset/utc.rs","begin":[88,4],"end":[88,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:2783:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:911:272":{"id":"0:911:272","crate_id":0,"name":"add_assign","span":{"filename":"src/naive/date.rs","begin":[1647,4],"end":[1649,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1690:2180":{"id":"0:1690:2180","crate_id":0,"name":"from_offset","span":{"filename":"src/offset/utc.rs","begin":[90,4],"end":[92,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["_state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:2783:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:2783:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:18-0:2848:1918":{"id":"0:18-0:2848:1918","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[447,47],"end":[447,54]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::Weekday","name":"Weekday","id":"0:2848:1918","glob":false}},"0:2224":{"id":"0:2224","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[359,23],"end":[359,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2682:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2203:2817","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2222":{"id":"0:2222","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[359,16],"end":[359,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2203:2817","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2223:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1052:2237":{"id":"0:1052:2237","crate_id":0,"name":"with_year","span":{"filename":"src/naive/datetime/mod.rs","begin":[1112,4],"end":[1114,5]},"visibility":"default","docs":"Makes a new `NaiveDateTime` with the year number changed.\n\nReturns `None` when the resulting `NaiveDateTime` would be invalid.\n\nSee also the [`NaiveDate::with_year`] method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Datelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2015, 9, 25).unwrap().and_hms_opt(12, 34, 56).unwrap();\nassert_eq!(dt.with_year(2016), Some(NaiveDate::from_ymd_opt(2016, 9, 25).unwrap().and_hms_opt(12, 34, 56).unwrap()));\nassert_eq!(dt.with_year(-308), Some(NaiveDate::from_ymd_opt(-308, 9, 25).unwrap().and_hms_opt(12, 34, 56).unwrap()));\n```","links":{"`NaiveDate::with_year`":"0:900:2237"},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["year",{"kind":"primitive","inner":"i32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1702":{"id":"0:1702","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[53,0],"end":[86,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2797:1940","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:1704:2126","0:1705:5859","0:1706:5861","0:1707:850"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:305:2232":{"id":"0:305:2232","crate_id":0,"name":"day","span":{"filename":"src/datetime/mod.rs","begin":[762,4],"end":[764,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2299:659":{"id":"0:2299:659","crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[850,9],"end":[850,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:9044:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:9033:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1721:2336":{"id":"0:1721:2336","crate_id":0,"name":"fix","span":{"filename":"src/offset/mod.rs","begin":[198,4],"end":[198,33]},"visibility":"default","docs":"Returns the fixed offset from UTC to the local time stored.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2845":{"id":"0:2845","crate_id":0,"name":null,"span":{"filename":"src/round.rs","begin":[241,34],"end":[241,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2306:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RoundingError","id":"0:2830:1943","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:8179:7659-0:2884:1945":{"id":"a:2:8179:7659-0:2884:1945","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8179:7659","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:2884:1945","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2599-0:2884:1945":{"id":"b:2:2599-0:2884:1945","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Error","id":"2:2592:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Provider","id":"2:3380:19287","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:2884:1945","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2601:8224"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"E"}}},"0:1021:2385":{"id":"0:1021:2385","crate_id":0,"name":"timestamp_subsec_millis","span":{"filename":"src/naive/datetime/mod.rs","begin":[500,4],"end":[502,5]},"visibility":"public","docs":"Returns the number of milliseconds since the last whole non-leap second.\n\nThe return value ranges from 0 to 999,\nor for [leap seconds](./struct.NaiveTime.html#leap-second-handling), to 1,999.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet dt = NaiveDate::from_ymd_opt(2016, 7, 8).unwrap().and_hms_nano_opt(9, 10, 11, 123_456_789).unwrap();\nassert_eq!(dt.timestamp_subsec_millis(), 123);\n\nlet dt = NaiveDate::from_ymd_opt(2015, 7, 1).unwrap().and_hms_nano_opt(8, 59, 59, 1_234_567_890).unwrap();\nassert_eq!(dt.timestamp_subsec_millis(), 1_234);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2237-0:1915:1913":{"id":"b:2:2237-0:1915:1913","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2231:96","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["2:2239:2071"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1289-0:2324:1921":{"id":"0:1289-0:2324:1921","crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[14,27],"end":[14,36]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"self::date::NaiveDate","name":"NaiveDate","id":"0:2324:1921","glob":false}},"a:2:2686:225-0:2305:1937":{"id":"a:2:2686:225-0:2305:1937","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Days","id":"0:2305:1937","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1260:2543":{"id":"0:1260:2543","crate_id":0,"name":"with_second","span":{"filename":"src/naive/time/mod.rs","begin":[905,4],"end":[911,5]},"visibility":"default","docs":"Makes a new `NaiveTime` with the second number changed.\n\nReturns `None` when the resulting `NaiveTime` would be invalid.\nAs with the [`second`](#method.second) method,\nthe input range is restricted to 0 through 59.\n\n# Example\n\n```\nuse chrono::{NaiveTime, Timelike};\n\nlet dt = NaiveTime::from_hms_nano_opt(23, 56, 4, 12_345_678).unwrap();\nassert_eq!(dt.with_second(17), Some(NaiveTime::from_hms_nano_opt(23, 56, 17, 12_345_678).unwrap()));\nassert_eq!(dt.with_second(60), None);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["sec",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2787:415":{"id":"0:2787:415","crate_id":0,"name":"clone","span":{"filename":"src/offset/utc.rs","begin":[43,15],"end":[43,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:2783:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3331-0:2964:1948":{"id":"b:2:3331-0:2964:1948","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3329:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseMonthError","id":"0:2964:1948","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3333:1470"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1848:1915":{"id":"0:1848:1915","crate_id":0,"name":"Datelike","span":{"filename":"src/traits.rs","begin":[4,0],"end":[119,1]},"visibility":"public","docs":"The common set of methods for date component.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:1849:2230","0:1850:6994","0:1851:1946","0:1852:2231","0:1853:2232","0:1854:2233","0:1855:2234","0:1856:2235","0:1857:1944","0:1858:2236","0:1859:2237","0:1860:2238","0:1861:2239","0:1862:2240","0:1863:2241","0:1864:2242","0:1865:2243","0:1866:4566"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:105","0:890","0:300","0:1042"]}},"0:890":{"id":"0:890","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[1272,0],"end":[1612,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["year_ce","num_days_from_ce"],"trait":{"name":"Datelike","id":"0:1848:1915","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:891:2230","0:892:1946","0:893:2231","0:894:2232","0:895:2233","0:896:2234","0:897:2235","0:898:1944","0:899:2236","0:900:2237","0:901:2238","0:902:2239","0:903:2240","0:904:2241","0:905:2242","0:906:2243"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1838":{"id":"0:1838","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[211,0],"end":[215,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9069:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseMonthError","id":"0:2964:1948","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1839:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11966:3273":{"id":"2:11966:3273","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1909":{"id":"0:1909","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[55,33],"end":[55,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2682:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SecondsFormat","id":"0:1888:1914","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2243:2915":{"id":"0:2243:2915","crate_id":0,"name":"week_from_mon","span":{"filename":"src/format/parsed.rs","begin":[70,4],"end":[70,34]},"visibility":"public","docs":"Week number, where the week 1 starts at the first Monday of January\n(0--53, 1--53 or 1--52 depending on the year).","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u32"}}],"bindings":[]}}}}},"0:2448:1938":{"id":"0:2448:1938","crate_id":0,"name":"IsoWeek","span":{"filename":"src/naive/isoweek.rs","begin":[21,0],"end":[26,1]},"visibility":"public","docs":"ISO 8601 week.\n\nThis type, combined with [`Weekday`](../enum.Weekday.html),\nconstitutes the ISO 8601 [week date](./struct.NaiveDate.html#week-date).\nOne can retrieve this type from the existing [`Datelike`](../trait.Datelike.html) types\nvia the [`Datelike::iso_week`](../trait.Datelike.html#tymethod.iso_week) method.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:1194","a:2:8179:7659-0:2448:1938","a:2:2672:217-0:2448:1938","a:2:2736:7564-0:2448:1938","a:2:2686:225-0:2448:1938","a:2:8178:7660-0:2448:1938","b:2:2531-0:2448:1938","b:2:2542-0:2448:1938","b:2:2527-0:2448:1938","b:2:3331-0:2448:1938","b:2:2240-0:2448:1938","b:2:2537-0:2448:1938","b:2:2237-0:2448:1938","b:5:674-0:2448:1938","0:2461","0:2456","0:2458","0:2454","0:2463","0:2451","0:1198","0:2453","0:2460","0:2450"]}},"0:2256":{"id":"0:2256","crate_id":0,"name":null,"span":{"filename":"src/format/parsed.rs","begin":[25,9],"end":[25,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Parsed","id":"0:2234:2283","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2257:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2473":{"id":"0:2473","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[190,20],"end":[190,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2306:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1700:659":{"id":"0:1700:659","crate_id":0,"name":"fmt","span":{"filename":"src/offset/utc.rs","begin":[122,4],"end":[124,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:9044:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:9033:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2226:604":{"id":"0:2226:604","crate_id":0,"name":"eq","span":{"filename":"src/format/mod.rs","begin":[359,23],"end":[359,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2203:2817","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1745:5938":{"id":"0:1745:5938","crate_id":0,"name":"offset_from_utc_date","span":{"filename":"src/offset/mod.rs","begin":[470,4],"end":[470,68]},"visibility":"default","docs":"Creates the offset for given UTC `NaiveDate`. This cannot fail.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["utc",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"qualified_path","inner":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:1722:1925","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:8178:7660-0:2272:2082":{"id":"a:2:8178:7660-0:2272:2082","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8178:7660","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2272:2082","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3331-0:1938:2508":{"id":"b:2:3331-0:1938:2508","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3329:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:1938:2508","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3333:1470"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2527-0:2448:1938":{"id":"b:2:2527-0:2448:1938","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IsoWeek","id":"0:2448:1938","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2530:2607"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2240-0:2466:1923":{"id":"b:2:2240-0:2466:1923","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2234:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2242:6046"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1280:659":{"id":"0:1280:659","crate_id":0,"name":"fmt","span":{"filename":"src/naive/time/mod.rs","begin":[1234,4],"end":[1236,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:9044:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:9033:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:900:2237":{"id":"0:900:2237","crate_id":0,"name":"with_year","span":{"filename":"src/naive/date.rs","begin":[1478,4],"end":[1487,5]},"visibility":"default","docs":"Makes a new `NaiveDate` with the year number changed.\n\nReturns `None` when the resulting `NaiveDate` would be invalid.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().with_year(2016),\n           Some(NaiveDate::from_ymd_opt(2016, 9, 8).unwrap()));\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().with_year(-308),\n           Some(NaiveDate::from_ymd_opt(-308, 9, 8).unwrap()));\n```\n\nA leap day (February 29) is a good example that this method can return `None`.\n\n```\n# use chrono::{NaiveDate, Datelike};\nassert!(NaiveDate::from_ymd_opt(2016, 2, 29).unwrap().with_year(2015).is_none());\nassert!(NaiveDate::from_ymd_opt(2016, 2, 29).unwrap().with_year(2020).is_some());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["year",{"kind":"primitive","inner":"i32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2494:720":{"id":"0:2494:720","crate_id":0,"name":"hash","span":{"filename":"src/offset/fixed.rs","begin":[25,24],"end":[25,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9297:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2537-0:2016:2727":{"id":"b:2:2537-0:2016:2727","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:2016:2727","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2540:126","2:2541:1457"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2240-0:2382:1922":{"id":"b:2:2240-0:2382:1922","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2234:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2242:6046"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1692:5933":{"id":"0:1692:5933","crate_id":0,"name":"offset_from_local_datetime","span":{"filename":"src/offset/utc.rs","begin":[97,4],"end":[99,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["_local",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2797:1940","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:2783:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2244:3042":{"id":"0:2244:3042","crate_id":0,"name":"isoweek","span":{"filename":"src/format/parsed.rs","begin":[74,4],"end":[74,28]},"visibility":"public","docs":"[ISO week number](../naive/struct.NaiveDate.html#week-date)\n(1--52 or 1--53 depending on the year).","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u32"}}],"bindings":[]}}}}},"b:2:3331-0:2016:2727":{"id":"b:2:3331-0:2016:2727","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3329:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:2016:2727","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3333:1470"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:768:2564":{"id":"0:768:2564","crate_id":0,"name":"from_str","span":{"filename":"src/format/mod.rs","begin":[982,4],"end":[988,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:40824:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:11534:2563","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2964:1948":{"id":"0:2964:1948","crate_id":0,"name":"ParseMonthError","span":{"filename":"src/month.rs","begin":[207,0],"end":[209,1]},"visibility":"public","docs":"An error resulting from reading `<Month>` value with `FromStr`.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:8179:7659-0:2964:1948","a:2:2672:217-0:2964:1948","a:2:2736:7564-0:2964:1948","a:2:2686:225-0:2964:1948","a:2:8178:7660-0:2964:1948","b:2:2531-0:2964:1948","b:2:2542-0:2964:1948","b:2:2527-0:2964:1948","b:2:3331-0:2964:1948","b:2:2240-0:2964:1948","b:2:2537-0:2964:1948","b:2:2237-0:2964:1948","b:5:674-0:2964:1948","0:1838","0:2972","0:2966","0:2971","0:2969","0:2968"]}},"0:418-0:1888:1914":{"id":"0:418-0:1888:1914","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[465,29],"end":[465,42]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"datetime::SecondsFormat","name":"SecondsFormat","id":"0:1888:1914","glob":false}},"0:1355:659":{"id":"0:1355:659","crate_id":0,"name":"fmt","span":{"filename":"src/offset/fixed.rs","begin":[136,4],"end":[146,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:9044:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:9033:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1297-0:2448:1938":{"id":"0:1297-0:2448:1938","crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[20,0],"end":[20,31]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::isoweek::IsoWeek","name":"IsoWeek","id":"0:2448:1938","glob":false}},"b:2:2542-0:1938:2508":{"id":"b:2:2542-0:1938:2508","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:1938:2508","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:126","2:2546:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1834:6859":{"id":"0:1834:6859","crate_id":0,"name":"from_i64","span":{"filename":"src/month.rs","begin":[169,4],"end":[171,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["n",{"kind":"primitive","inner":"i64"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Month","id":"0:2894:1916","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:377:1396":{"id":"0:377:1396","crate_id":0,"name":"sub_assign","span":{"filename":"src/datetime/mod.rs","begin":[944,4],"end":[949,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:674-0:2797:1940":{"id":"b:5:674-0:2797:1940","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:670:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2797:1940","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["5:676:8076","5:677:8077","5:678:8078"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8179:7659-0:2797:1940":{"id":"a:2:8179:7659-0:2797:1940","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8179:7659","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8179:7659","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2797:1940","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2030:2737":{"id":"0:2030:2737","crate_id":0,"name":"ShortMonthName","span":{"filename":"src/format/mod.rs","begin":[175,4],"end":[175,18]},"visibility":"default","docs":"Abbreviated month names.\n\nPrints a three-letter-long name in the title case, reads the same name in any case.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:2176":{"id":"0:2176","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[288,27],"end":[288,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2306:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2143:2081","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1235:5563":{"id":"0:1235:5563","crate_id":0,"name":"from_hms_nano","span":{"filename":"src/naive/time/mod.rs","begin":[334,4],"end":[336,5]},"visibility":"public","docs":"Makes a new `NaiveTime` from hour, minute, second and nanosecond.\n\nThe nanosecond part can exceed 1,000,000,000\nin order to represent the [leap second](#leap-second-handling).\n\nPanics on invalid hour, minute, second and/or nanosecond.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `from_hms_nano_opt()` instead\")]","#[inline]"],"deprecation":{"since":"0.4.23","note":"use `from_hms_nano_opt()` instead"},"kind":"function","inner":{"decl":{"inputs":[["hour",{"kind":"primitive","inner":"u32"}],["min",{"kind":"primitive","inner":"u32"}],["sec",{"kind":"primitive","inner":"u32"}],["nano",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:476:2904":{"id":"0:476:2904","crate_id":0,"name":"format_item","span":{"filename":"src/format/mod.rs","begin":[490,0],"end":[500,1]},"visibility":"public","docs":"Formats single formatting item","links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["w",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:9044:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["date",{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"bindings":[]}}}}],["time",{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"bindings":[]}}}}],["off",{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"tuple","inner":[{"kind":"resolved_path","inner":{"name":"String","id":"5:7239:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]}}}}],"bindings":[]}}}}],["item",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2143:2081","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:9033:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1357:659":{"id":"0:1357:659","crate_id":0,"name":"fmt","span":{"filename":"src/offset/fixed.rs","begin":[150,4],"end":[152,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:9044:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:9033:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:597:3177":{"id":"0:597:3177","crate_id":0,"name":"to_datetime_with_timezone","span":{"filename":"src/format/parsed.rs","begin":[650,4],"end":[693,5]},"visibility":"public","docs":"Returns a parsed timezone-aware date and time out of given fields,\nwith an additional `TimeZone` used to interpret and validate the local date.\n\nThis method is able to determine the combined date and time\nfrom date and time fields or a single [`timestamp`](#structfield.timestamp) field,\nplus a time zone offset.\nEither way those fields have to be consistent to each other.\nIf parsed fields include an UTC offset, it also has to be consistent to\n[`offset`](#structfield.offset).","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["tz",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Tz"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:455:1935","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2881":{"id":"0:2881","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[11,44],"end":[11,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9289:139","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2848:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2882:720"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:8179:7659-0:2143:2081":{"id":"a:2:8179:7659-0:2143:2081","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8179:7659","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2143:2081","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:81:2124":{"id":"0:81:2124","crate_id":0,"name":"timezone","span":{"filename":"src/date.rs","begin":[236,4],"end":[238,5]},"visibility":"public","docs":"Retrieves an associated time zone.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"Tz"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2686:225-0:2783:1920":{"id":"a:2:2686:225-0:2783:1920","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:2783:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:105":{"id":"0:105","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[373,0],"end":[445,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["year_ce","num_days_from_ce"],"trait":{"name":"Datelike","id":"0:1848:1915","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:107:2230","0:108:1946","0:109:2231","0:110:2232","0:111:2233","0:112:2234","0:113:2235","0:114:1944","0:115:2236","0:116:2237","0:118:2238","0:120:2239","0:122:2240","0:124:2241","0:126:2242","0:128:2243"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1819:659":{"id":"0:1819:659","crate_id":0,"name":"fmt","span":{"filename":"src/weekday.rs","begin":[178,4],"end":[180,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:9044:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:9033:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2672:217-0:2186:1934":{"id":"a:2:2672:217-0:2186:1934","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2186:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1915:1913":{"id":"0:1915:1913","crate_id":0,"name":"DateTime","span":{"filename":"src/datetime/mod.rs","begin":[89,0],"end":[92,1]},"visibility":"public","docs":"ISO 8601 combined date and time with time zone.\n\nThere are some constructors implemented here (the `from_*` methods), but\nthe general-purpose constructors are all via the methods on the\n[`TimeZone`](./offset/trait.TimeZone.html) implementations.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:226","0:279","0:285","a:2:8179:7659-0:1915:1913","a:2:2736:7564-0:1915:1913","a:2:2686:225-0:1915:1913","a:2:8178:7660-0:1915:1913","b:0:1771-0:1915:1913","b:2:2531-0:1915:1913","b:2:2542-0:1915:1913","b:2:2527-0:1915:1913","b:2:3331-0:1915:1913","b:2:2240-0:1915:1913","b:2:2537-0:1915:1913","b:2:2237-0:1915:1913","b:5:5633-0:1915:1913","b:5:674-0:1915:1913","0:375","0:386","0:343","0:378","0:410","0:273","0:267","0:1376","0:360","0:356","0:664","0:325","0:265","0:371","0:349","0:263","0:408","0:404","0:1781","0:269","0:341","0:261","0:1372","0:300","0:339","0:257","0:1919","0:382","0:394","0:353","0:367","0:397","0:390","0:400","0:271","0:259","0:412","0:364","0:347"]}},"0:406:2564":{"id":"0:406:2564","crate_id":0,"name":"from_str","span":{"filename":"src/datetime/mod.rs","begin":[1038,4],"end":[1040,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:455:1935","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Local","id":"0:2776:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2877":{"id":"0:2877","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[11,30],"end":[11,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2848:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2878:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2212:2833":{"id":"0:2212:2833","crate_id":0,"name":"TooShort","span":{"filename":"src/format/mod.rs","begin":[381,4],"end":[381,12]},"visibility":"default","docs":"The input string has been prematurely ended.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:1295-0:1002:1931":{"id":"0:1295-0:1002:1931","crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[19,40],"end":[19,52]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"self::datetime::MAX_DATETIME","name":"MAX_DATETIME","id":"0:1002:1931","glob":false}},"0:1083:272":{"id":"0:1083:272","crate_id":0,"name":"add_assign","span":{"filename":"src/naive/datetime/mod.rs","begin":[1476,4],"end":[1478,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11890:30351":{"id":"2:11890:30351","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9754:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9754:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:1031:2214":{"id":"0:1031:2214","crate_id":0,"name":"format_with_items","span":{"filename":"src/naive/datetime/mod.rs","begin":[838,4],"end":[844,5]},"visibility":"public","docs":"Formats the combined date and time with the specified formatting items.\nOtherwise it is the same as the ordinary [`format`](#method.format) method.\n\nThe `Iterator` of items should be `Clone`able,\nsince the resulting `DelayedFormat` value may be formatted multiple times.\n\n# Example\n\n```\nuse chrono::NaiveDate;\nuse chrono::format::strftime::StrftimeItems;\n\nlet fmt = StrftimeItems::new(\"%Y-%m-%d %H:%M:%S\");\nlet dt = NaiveDate::from_ymd_opt(2015, 9, 5).unwrap().and_hms_opt(23, 56, 4).unwrap();\nassert_eq!(dt.format_with_items(fmt.clone()).to_string(), \"2015-09-05 23:56:04\");\nassert_eq!(dt.format(\"%Y-%m-%d %H:%M:%S\").to_string(),    \"2015-09-05 23:56:04\");\n```\n\nThe resulting `DelayedFormat` can be formatted directly via the `Display` trait.\n\n```\n# use chrono::NaiveDate;\n# use chrono::format::strftime::StrftimeItems;\n# let fmt = StrftimeItems::new(\"%Y-%m-%d %H:%M:%S\").clone();\n# let dt = NaiveDate::from_ymd_opt(2015, 9, 5).unwrap().and_hms_opt(23, 56, 4).unwrap();\nassert_eq!(format!(\"{}\", dt.format_with_items(fmt)), \"2015-09-05 23:56:04\");\n```","links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]","#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["items",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2291:2080","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7245:156","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"B"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2231:96","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2143:2081","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1972:1916":{"id":"0:1972:1916","crate_id":0,"name":"Month","span":{"filename":"src/format/mod.rs","begin":[116,4],"end":[116,9]},"visibility":"default","docs":"Month (FW=PW=2).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:895:2233":{"id":"0:895:2233","crate_id":0,"name":"day0","span":{"filename":"src/naive/date.rs","begin":[1375,4],"end":[1377,5]},"visibility":"default","docs":"Returns the day of month starting from 0.\n\nThe return value ranges from 0 to 30. (The last day of month differs by months.)\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().day0(), 7);\nassert_eq!(NaiveDate::from_ymd_opt(-308, 3, 14).unwrap().day0(), 13);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:113:2235":{"id":"0:113:2235","crate_id":0,"name":"ordinal0","span":{"filename":"src/date.rs","begin":[399,4],"end":[401,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8179:7659-0:2029:2284":{"id":"a:2:8179:7659-0:2029:2284","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8179:7659","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2029:2284","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11896:2933":{"id":"2:11896:2933","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:11872:411"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Chars","id":"2:42615:7284","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11930:38830":{"id":"2:11930:38830","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:11573:1962","str::split":"2:11921:30382","prim@char":"1:11872:411","`DoubleEndedIterator`":"2:7167:119","str::rsplit_terminator":"2:11933:38831"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitTerminator","id":"2:42695:7321","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11578:7280","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2281:415":{"id":"0:2281:415","crate_id":0,"name":"clone","span":{"filename":"src/format/strftime.rs","begin":[212,9],"end":[212,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2272:2082","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2957:720":{"id":"0:2957:720","crate_id":0,"name":"hash","span":{"filename":"src/month.rs","begin":[194,33],"end":[194,37]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9297:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:13-0:1888:1914":{"id":"0:13-0:1888:1914","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[445,30],"end":[445,43]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::SecondsFormat","name":"SecondsFormat","id":"0:1888:1914","glob":false}},"b:2:2527-0:2305:1937":{"id":"b:2:2527-0:2305:1937","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Days","id":"0:2305:1937","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2530:2607"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:114:1944":{"id":"0:114:1944","crate_id":0,"name":"weekday","span":{"filename":"src/date.rs","begin":[403,4],"end":[405,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2848:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:834:2266":{"id":"0:834:2266","crate_id":0,"name":"from_ymd_opt","span":{"filename":"src/naive/date.rs","begin":[285,4],"end":[288,5]},"visibility":"public","docs":"Makes a new `NaiveDate` from the [calendar date](#calendar-date)\n(year, month and day).\n\nReturns `None` on the out-of-range date, invalid month and/or day.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet from_ymd_opt = NaiveDate::from_ymd_opt;\n\nassert!(from_ymd_opt(2015, 3, 14).is_some());\nassert!(from_ymd_opt(2015, 0, 14).is_none());\nassert!(from_ymd_opt(2015, 2, 29).is_none());\nassert!(from_ymd_opt(-4, 2, 29).is_some()); // 5 BCE is a leap year\nassert!(from_ymd_opt(400000, 1, 1).is_none());\nassert!(from_ymd_opt(-400000, 1, 1).is_none());\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["year",{"kind":"primitive","inner":"i32"}],["month",{"kind":"primitive","inner":"u32"}],["day",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:455:1935":{"id":"0:455:1935","crate_id":0,"name":"ParseResult","span":{"filename":"src/format/mod.rs","begin":[395,0],"end":[395,48]},"visibility":"public","docs":"Same as `Result<T, ParseError>`.","links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"Result","id":"2:40824:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2186:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}},"a:2:8179:7659-0:2382:1922":{"id":"a:2:8179:7659-0:2382:1922","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8179:7659","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1062:2242":{"id":"0:1062:2242","crate_id":0,"name":"with_ordinal","span":{"filename":"src/naive/datetime/mod.rs","begin":[1221,4],"end":[1223,5]},"visibility":"default","docs":"Makes a new `NaiveDateTime` with the day of year (starting from 1) changed.\n\nReturns `None` when the resulting `NaiveDateTime` would be invalid.\n\nSee also the [`NaiveDate::with_ordinal`] method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Datelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().and_hms_opt(12, 34, 56).unwrap();\nassert_eq!(dt.with_ordinal(60),\n           Some(NaiveDate::from_ymd_opt(2015, 3, 1).unwrap().and_hms_opt(12, 34, 56).unwrap()));\nassert_eq!(dt.with_ordinal(366), None); // 2015 had only 365 days\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2016, 9, 8).unwrap().and_hms_opt(12, 34, 56).unwrap();\nassert_eq!(dt.with_ordinal(60),\n           Some(NaiveDate::from_ymd_opt(2016, 2, 29).unwrap().and_hms_opt(12, 34, 56).unwrap()));\nassert_eq!(dt.with_ordinal(366),\n           Some(NaiveDate::from_ymd_opt(2016, 12, 31).unwrap().and_hms_opt(12, 34, 56).unwrap()));\n```","links":{"`NaiveDate::with_ordinal`":"0:905:2242"},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["ordinal",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2542-0:2305:1937":{"id":"b:2:2542-0:2305:1937","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Days","id":"0:2305:1937","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:126","2:2546:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1113:59":{"id":"0:1113:59","crate_id":0,"name":"default","span":{"filename":"src/naive/datetime/mod.rs","begin":[1814,4],"end":[1816,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:7:1056":{"id":"0:7:1056","crate_id":0,"name":"prelude","span":{"filename":"src/lib.rs","begin":[430,0],"end":[430,15]},"visibility":"public","docs":"A convenience module appropriate for glob imports (`use chrono::prelude::*;`).","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:8-0:1881:1908","0:9-0:2776:1909","0:10-0:1768:1912","0:12-0:1915:1913","0:13-0:1888:1914","0:15-0:1848:1915","0:16-0:2894:1916","0:17-0:1867:1917","0:18-0:2848:1918","0:20-0:2485:1919","0:21-0:2783:1920","0:23-0:2324:1921","0:24-0:2382:1922","0:25-0:2466:1923","0:27-0:1720:1924","0:28-0:1722:1925"],"is_stripped":false}},"0:1902:415":{"id":"0:1902:415","crate_id":0,"name":"clone","span":{"filename":"src/datetime/mod.rs","begin":[55,9],"end":[55,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SecondsFormat","id":"0:1888:1914","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2527-0:2466:1923":{"id":"b:2:2527-0:2466:1923","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2530:2607"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2058:2527":{"id":"0:2058:2527","crate_id":0,"name":"TimezoneOffsetColonZ","span":{"filename":"src/format/mod.rs","begin":[234,4],"end":[234,24]},"visibility":"default","docs":"Offset from the local time to UTC (`+09:00` or `-04:00` or `Z`).\n\nIn the parser, the colon can be omitted and/or surrounded with any amount of whitespace,\nand `Z` can be either in upper case or in lower case.\nThe offset is limited from `-24:00` to `+24:00`,\nwhich is the same as [`FixedOffset`](../offset/struct.FixedOffset.html)'s range.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:1773:6708":{"id":"0:1773:6708","crate_id":0,"name":"round_subsecs","span":{"filename":"src/round.rs","begin":[51,4],"end":[64,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["digits",{"kind":"primitive","inner":"u16"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:325":{"id":"0:325","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[822,0],"end":[859,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["hour12","num_seconds_from_midnight"],"trait":{"name":"Timelike","id":"0:1867:1917","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:327:2131","0:328:2538","0:329:2539","0:330:2540","0:331:2541","0:333:2542","0:335:2543","0:337:2544"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2153:1583":{"id":"0:2153:1583","crate_id":0,"name":"0","span":{"filename":"src/format/mod.rs","begin":[297,10],"end":[297,17]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}},"0:1835:5318":{"id":"0:1835:5318","crate_id":0,"name":"from_u32","span":{"filename":"src/month.rs","begin":[174,4],"end":[190,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["n",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Month","id":"0:2894:1916","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11989:2282":{"id":"2:11989:2282","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:11535:125","`FromStr`":"2:11534:2563"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:40824:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"name":"FromStr","id":"2:11534:2563","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:11534:2563","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:134":{"id":"0:134","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[451,0],"end":[455,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"Tz2","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2301:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz2"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:137:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2084:2779":{"id":"0:2084:2779","crate_id":0,"name":"InternalFixed","span":{"filename":"src/format/mod.rs","begin":[255,0],"end":[257,1]},"visibility":"public","docs":"An opaque type representing fixed-format item types for internal uses only.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:8179:7659-0:2084:2779","a:2:2672:217-0:2084:2779","a:2:2736:7564-0:2084:2779","a:2:2686:225-0:2084:2779","a:2:8178:7660-0:2084:2779","b:2:2531-0:2084:2779","b:2:2542-0:2084:2779","b:2:2527-0:2084:2779","b:2:3331-0:2084:2779","b:2:2240-0:2084:2779","b:2:2537-0:2084:2779","b:2:2237-0:2084:2779","b:5:674-0:2084:2779","0:2091","0:2094","0:2088","0:2096","0:2090","0:2093","0:2086"]}},"0:929":{"id":"0:929","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[1784,0],"end":[1791,1]},"visibility":"default","docs":"Subtracts another `NaiveDate` from the current date.\nReturns a `Duration` of integral numbers.\n\nThis does not overflow or underflow at all,\nas all possible output fits in the range of `Duration`.\n\nThe implementation is a wrapper around\n[`NaiveDate::signed_duration_since`](#method.signed_duration_since).\n\n# Example\n\n```\nuse chrono::{Duration, NaiveDate};\n\nlet from_ymd = NaiveDate::from_ymd;\n\nassert_eq!(from_ymd(2014, 1, 1) - from_ymd(2014, 1, 1), Duration::zero());\nassert_eq!(from_ymd(2014, 1, 1) - from_ymd(2013, 12, 31), Duration::days(1));\nassert_eq!(from_ymd(2014, 1, 1) - from_ymd(2014, 1, 2), Duration::days(-1));\nassert_eq!(from_ymd(2014, 1, 1) - from_ymd(2013, 9, 23), Duration::days(100));\nassert_eq!(from_ymd(2014, 1, 1) - from_ymd(2013, 1, 1), Duration::days(365));\nassert_eq!(from_ymd(2014, 1, 1) - from_ymd(2010, 1, 1), Duration::days(365*4 + 1));\nassert_eq!(from_ymd(2014, 1, 1) - from_ymd(1614, 1, 1), Duration::days(365*400 + 97));\n```","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:2770:2074","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:930:183","0:931:1395"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1276":{"id":"0:1276","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[1177,0],"end":[1203,1]},"visibility":"default","docs":"The `Debug` output of the naive time `t` is the same as\n[`t.format(\"%H:%M:%S%.f\")`](../format/strftime/index.html).\n\nThe string printed can be readily parsed via the `parse` method on `str`.\n\nIt should be noted that, for leap seconds not on the minute boundary,\nit may print a representation not distinguishable from non-leap seconds.\nThis doesn't matter in practice, since such leap seconds never happened.\n(By the time of the first leap second on 1972-06-30,\nevery time zone offset around the world has standardized to the 5-minute alignment.)\n\n# Example\n\n```\nuse chrono::NaiveTime;\n\nassert_eq!(format!(\"{:?}\", NaiveTime::from_hms_opt(23, 56, 4).unwrap()),              \"23:56:04\");\nassert_eq!(format!(\"{:?}\", NaiveTime::from_hms_milli_opt(23, 56, 4, 12).unwrap()),    \"23:56:04.012\");\nassert_eq!(format!(\"{:?}\", NaiveTime::from_hms_micro_opt(23, 56, 4, 1234).unwrap()),  \"23:56:04.001234\");\nassert_eq!(format!(\"{:?}\", NaiveTime::from_hms_nano_opt(23, 56, 4, 123456).unwrap()), \"23:56:04.000123456\");\n```\n\nLeap seconds may also be used.\n\n```\n# use chrono::NaiveTime;\nassert_eq!(format!(\"{:?}\", NaiveTime::from_hms_milli_opt(6, 59, 59, 1_500).unwrap()), \"06:59:60.500\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9069:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1277:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3331-0:2884:1945":{"id":"b:2:3331-0:2884:1945","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3329:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:2884:1945","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3333:1470"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1103:1395":{"id":"0:1103:1395","crate_id":0,"name":"sub","span":{"filename":"src/naive/datetime/mod.rs","begin":[1682,4],"end":[1684,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["days",{"kind":"resolved_path","inner":{"name":"Days","id":"0:2305:1937","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:2770:2074","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:170:659":{"id":"0:170:659","crate_id":0,"name":"fmt","span":{"filename":"src/date.rs","begin":[519,4],"end":[522,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:9044:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:9033:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:235:2373":{"id":"0:235:2373","crate_id":0,"name":"timestamp_micros","span":{"filename":"src/datetime/mod.rs","begin":[237,4],"end":[239,5]},"visibility":"public","docs":"Returns the number of non-leap-microseconds since January 1, 1970 UTC\n\nNote that this does reduce the number of years that can be represented\nfrom ~584 Billion to ~584 Thousand. (If this is a problem, please file\nan issue to let me know what domain needs microsecond precision over\nmillennia, I'm curious.)\n\n# Example\n\n```\nuse chrono::{Utc, TimeZone, NaiveDate};\n\nlet dt = NaiveDate::from_ymd_opt(1970, 1, 1).unwrap().and_hms_micro_opt(0, 0, 1, 444).unwrap().and_local_timezone(Utc).unwrap();\nassert_eq!(dt.timestamp_micros(), 1_000_444);\n\nlet dt = NaiveDate::from_ymd_opt(2001, 9, 9).unwrap().and_hms_micro_opt(1, 46, 40, 555).unwrap().and_local_timezone(Utc).unwrap();\nassert_eq!(dt.timestamp_micros(), 1_000_000_000_000_555);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2736:7564-0:2848:1918":{"id":"a:2:2736:7564-0:2848:1918","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:7564","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2848:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1789:6736":{"id":"0:1789:6736","crate_id":0,"name":"duration_trunc","span":{"filename":"src/round.rs","begin":[167,4],"end":[169,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["duration",{"kind":"resolved_path","inner":{"name":"Duration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:40824:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:1776:1942","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2237-0:1888:1914":{"id":"b:2:2237-0:1888:1914","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2231:96","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SecondsFormat","id":"0:1888:1914","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2239:2071"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:417-0:1915:1913":{"id":"0:417-0:1915:1913","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[465,19],"end":[465,27]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"datetime::DateTime","name":"DateTime","id":"0:1915:1913","glob":false}},"0:2497":{"id":"0:2497","crate_id":0,"name":null,"span":{"filename":"src/offset/fixed.rs","begin":[25,36],"end":[25,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2498:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2672:217-0:2143:2081":{"id":"a:2:2672:217-0:2143:2081","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2143:2081","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1030:2196":{"id":"0:1030:2196","crate_id":0,"name":"signed_duration_since","span":{"filename":"src/naive/datetime/mod.rs","begin":[804,4],"end":[806,5]},"visibility":"public","docs":"Subtracts another `NaiveDateTime` from the current date and time.\nThis does not overflow or underflow at all.\n\nAs a part of Chrono's [leap second handling](./struct.NaiveTime.html#leap-second-handling),\nthe subtraction assumes that **there is no leap second ever**,\nexcept when any of the `NaiveDateTime`s themselves represents a leap second\nin which case the assumption becomes that\n**there are exactly one (or two) leap second(s) ever**.\n\n# Example\n\n```\nuse chrono::{Duration, NaiveDate};\n\nlet from_ymd = NaiveDate::from_ymd;\n\nlet d = from_ymd(2016, 7, 8);\nassert_eq!(d.and_hms_opt(3, 5, 7).unwrap().signed_duration_since(d.and_hms_opt(2, 4, 6).unwrap()),\n           Duration::seconds(3600 + 60 + 1));\n\n// July 8 is 190th day in the year 2016\nlet d0 = from_ymd(2016, 1, 1);\nassert_eq!(d.and_hms_milli_opt(0, 7, 6, 500).unwrap().signed_duration_since(d0.and_hms_opt(0, 0, 0).unwrap()),\n           Duration::seconds(189 * 86_400 + 7 * 60 + 6) + Duration::milliseconds(500));\n```\n\nLeap seconds are handled, but the subtraction assumes that\nthere were no other leap seconds happened.\n\n```\n# use chrono::{Duration, NaiveDate};\n# let from_ymd = NaiveDate::from_ymd;\nlet leap = from_ymd(2015, 6, 30).and_hms_milli_opt(23, 59, 59, 1_500).unwrap();\nassert_eq!(leap.signed_duration_since(from_ymd(2015, 6, 30).and_hms_opt(23, 0, 0).unwrap()),\n           Duration::seconds(3600) + Duration::milliseconds(500));\nassert_eq!(from_ymd(2015, 7, 1).and_hms_opt(1, 0, 0).unwrap().signed_duration_since(leap),\n           Duration::seconds(3600) - Duration::milliseconds(500));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3331-0:2234:2283":{"id":"b:2:3331-0:2234:2283","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3329:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Parsed","id":"0:2234:2283","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3333:1470"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2260:604":{"id":"0:2260:604","crate_id":0,"name":"eq","span":{"filename":"src/format/parsed.rs","begin":[25,16],"end":[25,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Parsed","id":"0:2234:2283","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2527-0:2848:1918":{"id":"b:2:2527-0:2848:1918","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2848:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2530:2607"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11942:38832":{"id":"2:11942:38832","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11578:7280","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:558":{"id":"0:558","crate_id":0,"name":null,"span":{"filename":"src/format/parsed.rs","begin":[128,0],"end":[694,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Parsed","id":"0:2234:2283","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:559:929","0:560:3063","0:561:3068","0:562:3070","0:563:3072","0:564:3074","0:565:3076","0:566:3078","0:567:3081","0:568:3083","0:569:3085","0:570:3087","0:571:3089","0:572:3091","0:573:3094","0:574:3097","0:575:3100","0:576:3102","0:577:3104","0:578:3106","0:579:3108","0:580:3110","0:581:3119","0:589:3152","0:590:3161","0:595:3168","0:596:2458","0:597:3177"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2311":{"id":"0:2311","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[129,22],"end":[129,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9069:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Days","id":"0:2305:1937","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2312:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1008:4744":{"id":"0:1008:4744","crate_id":0,"name":"from_timestamp","span":{"filename":"src/naive/datetime/mod.rs","begin":[153,4],"end":[156,5]},"visibility":"public","docs":"Makes a new `NaiveDateTime` corresponding to a UTC date and time,\nfrom the number of non-leap seconds\nsince the midnight UTC on January 1, 1970 (aka \"UNIX timestamp\")\nand the number of nanoseconds since the last whole non-leap second.\n\nFor a non-naive version of this function see\n[`TimeZone::timestamp`](../offset/trait.TimeZone.html#method.timestamp).\n\nThe nanosecond part can exceed 1,000,000,000 in order to represent the\n[leap second](./struct.NaiveTime.html#leap-second-handling). (The true \"UNIX\ntimestamp\" cannot represent a leap second unambiguously.)\n\nPanics on the out-of-range number of seconds and/or invalid nanosecond.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `from_timestamp_opt()` instead\")]","#[inline]"],"deprecation":{"since":"0.4.23","note":"use `from_timestamp_opt()` instead"},"kind":"function","inner":{"decl":{"inputs":[["secs",{"kind":"primitive","inner":"i64"}],["nsecs",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1054:2238":{"id":"0:1054:2238","crate_id":0,"name":"with_month","span":{"filename":"src/naive/datetime/mod.rs","begin":[1133,4],"end":[1135,5]},"visibility":"default","docs":"Makes a new `NaiveDateTime` with the month number (starting from 1) changed.\n\nReturns `None` when the resulting `NaiveDateTime` would be invalid.\n\nSee also the [`NaiveDate::with_month`] method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Datelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2015, 9, 30).unwrap().and_hms_opt(12, 34, 56).unwrap();\nassert_eq!(dt.with_month(10), Some(NaiveDate::from_ymd_opt(2015, 10, 30).unwrap().and_hms_opt(12, 34, 56).unwrap()));\nassert_eq!(dt.with_month(13), None); // no month 13\nassert_eq!(dt.with_month(2), None); // no February 30\n```","links":{"`NaiveDate::with_month`":"0:901:2238"},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["month",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1960:2513":{"id":"0:1960:2513","crate_id":0,"name":"Year","span":{"filename":"src/format/mod.rs","begin":[103,4],"end":[103,8]},"visibility":"default","docs":"Full Gregorian year (FW=4, PW=∞).\nMay accept years before 1 BCE or after 9999 CE, given an initial sign (+/-).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:1875:2543":{"id":"0:1875:2543","crate_id":0,"name":"with_second","span":{"filename":"src/traits.rs","begin":[164,4],"end":[164,52]},"visibility":"default","docs":"Makes a new value with the second number changed.\n\nReturns `None` when the resulting value would be invalid.\nAs with the [`second`](#tymethod.second) method,\nthe input range is restricted to 0 through 59.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["sec",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:2240-0:1881:1908":{"id":"b:2:2240-0:1881:1908","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2234:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["2:2242:6046"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1794":{"id":"0:1794","crate_id":0,"name":null,"span":{"filename":"src/round.rs","begin":[280,0],"end":[294,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9074:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RoundingError","id":"0:2830:1943","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1795:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1796":{"id":"0:1796","crate_id":0,"name":null,"span":{"filename":"src/round.rs","begin":[298,0],"end":[303,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(any(feature = \"std\", test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["provide","cause","description","source","type_id"],"trait":{"name":"Error","id":"2:2592:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RoundingError","id":"0:2830:1943","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1797:2847"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:89:2123":{"id":"0:89:2123","crate_id":0,"name":"naive_local","span":{"filename":"src/date.rs","begin":[287,4],"end":[289,5]},"visibility":"public","docs":"Returns a view to the naive local date.\n\nThis is technically the same as [`naive_utc`](#method.naive_utc)\nbecause the offset is restricted to never exceed one day,\nbut provided for the consistency.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2242:6046":{"id":"2:2242:6046","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1885":{"id":"0:1885","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[58,9],"end":[58,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Tz"},"trait":{"name":"","id":"0:1722:1925","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:1887:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:849:2411":{"id":"0:849:2411","crate_id":0,"name":"checked_sub_days","span":{"filename":"src/naive/date.rs","begin":[680,4],"end":[686,5]},"visibility":"public","docs":"Subtract a duration in [`Days`] from the date\n\nReturns `None` if the resulting date would be out of range.\n\n```\n# use chrono::{NaiveDate, Days};\nassert_eq!(\n    NaiveDate::from_ymd_opt(2022, 2, 20).unwrap().checked_sub_days(Days::new(6)),\n    Some(NaiveDate::from_ymd_opt(2022, 2, 14).unwrap())\n);\nassert_eq!(\n    NaiveDate::from_ymd_opt(2022, 2, 20).unwrap().checked_sub_days(Days::new(1000000000000)),\n    None\n);\n```","links":{"`Days`":"0:2305:1937"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["days",{"kind":"resolved_path","inner":{"name":"Days","id":"0:2305:1937","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:725:2667":{"id":"0:725:2667","crate_id":0,"name":"strftime","span":{"filename":"src/format/strftime.rs","begin":[4,0],"end":[712,1]},"visibility":"public","docs":"`strftime`/`strptime`-inspired date and time formatting syntax.\n\n## Specifiers\n\nThe following specifiers are available both to formatting and parsing.\n\n| Spec. | Example  | Description                                                                |\n|-------|----------|----------------------------------------------------------------------------|\n|       |          | **DATE SPECIFIERS:**                                                       |\n| `%Y`  | `2001`   | The full proleptic Gregorian year, zero-padded to 4 digits. chrono supports years from -262144 to 262143. Note: years before 1 BCE or after 9999 CE, require an initial sign (+/-).|\n| `%C`  | `20`     | The proleptic Gregorian year divided by 100, zero-padded to 2 digits. [^1] |\n| `%y`  | `01`     | The proleptic Gregorian year modulo 100, zero-padded to 2 digits. [^1]     |\n|       |          |                                                                            |\n| `%m`  | `07`     | Month number (01--12), zero-padded to 2 digits.                            |\n| `%b`  | `Jul`    | Abbreviated month name. Always 3 letters.                                  |\n| `%B`  | `July`   | Full month name. Also accepts corresponding abbreviation in parsing.       |\n| `%h`  | `Jul`    | Same as `%b`.                                                              |\n|       |          |                                                                            |\n| `%d`  | `08`     | Day number (01--31), zero-padded to 2 digits.                              |\n| `%e`  | ` 8`     | Same as `%d` but space-padded. Same as `%_d`.                              |\n|       |          |                                                                            |\n| `%a`  | `Sun`    | Abbreviated weekday name. Always 3 letters.                                |\n| `%A`  | `Sunday` | Full weekday name. Also accepts corresponding abbreviation in parsing.     |\n| `%w`  | `0`      | Sunday = 0, Monday = 1, ..., Saturday = 6.                                 |\n| `%u`  | `7`      | Monday = 1, Tuesday = 2, ..., Sunday = 7. (ISO 8601)                       |\n|       |          |                                                                            |\n| `%U`  | `28`     | Week number starting with Sunday (00--53), zero-padded to 2 digits. [^2]   |\n| `%W`  | `27`     | Same as `%U`, but week 1 starts with the first Monday in that year instead.|\n|       |          |                                                                            |\n| `%G`  | `2001`   | Same as `%Y` but uses the year number in ISO 8601 week date. [^3]          |\n| `%g`  | `01`     | Same as `%y` but uses the year number in ISO 8601 week date. [^3]          |\n| `%V`  | `27`     | Same as `%U` but uses the week number in ISO 8601 week date (01--53). [^3] |\n|       |          |                                                                            |\n| `%j`  | `189`    | Day of the year (001--366), zero-padded to 3 digits.                       |\n|       |          |                                                                            |\n| `%D`  | `07/08/01`    | Month-day-year format. Same as `%m/%d/%y`.                            |\n| `%x`  | `07/08/01`    | Locale's date representation (e.g., 12/31/99).                        |\n| `%F`  | `2001-07-08`  | Year-month-day format (ISO 8601). Same as `%Y-%m-%d`.                 |\n| `%v`  | ` 8-Jul-2001` | Day-month-year format. Same as `%e-%b-%Y`.                            |\n|       |          |                                                                            |\n|       |          | **TIME SPECIFIERS:**                                                       |\n| `%H`  | `00`     | Hour number (00--23), zero-padded to 2 digits.                             |\n| `%k`  | ` 0`     | Same as `%H` but space-padded. Same as `%_H`.                              |\n| `%I`  | `12`     | Hour number in 12-hour clocks (01--12), zero-padded to 2 digits.           |\n| `%l`  | `12`     | Same as `%I` but space-padded. Same as `%_I`.                              |\n|       |          |                                                                            |\n| `%P`  | `am`     | `am` or `pm` in 12-hour clocks.                                            |\n| `%p`  | `AM`     | `AM` or `PM` in 12-hour clocks.                                            |\n|       |          |                                                                            |\n| `%M`  | `34`     | Minute number (00--59), zero-padded to 2 digits.                           |\n| `%S`  | `60`     | Second number (00--60), zero-padded to 2 digits. [^4]                      |\n| `%f`  | `026490000`   | The fractional seconds (in nanoseconds) since last whole second. [^7] |\n| `%.f` | `.026490`| Similar to `.%f` but left-aligned. These all consume the leading dot. [^7] |\n| `%.3f`| `.026`        | Similar to `.%f` but left-aligned but fixed to a length of 3. [^7]    |\n| `%.6f`| `.026490`     | Similar to `.%f` but left-aligned but fixed to a length of 6. [^7]    |\n| `%.9f`| `.026490000`  | Similar to `.%f` but left-aligned but fixed to a length of 9. [^7]    |\n| `%3f` | `026`         | Similar to `%.3f` but without the leading dot. [^7]                   |\n| `%6f` | `026490`      | Similar to `%.6f` but without the leading dot. [^7]                   |\n| `%9f` | `026490000`   | Similar to `%.9f` but without the leading dot. [^7]                   |\n|       |               |                                                                       |\n| `%R`  | `00:34`       | Hour-minute format. Same as `%H:%M`.                                  |\n| `%T`  | `00:34:60`    | Hour-minute-second format. Same as `%H:%M:%S`.                        |\n| `%X`  | `00:34:60`    | Locale's time representation (e.g., 23:13:48).                        |\n| `%r`  | `12:34:60 AM` | Hour-minute-second format in 12-hour clocks. Same as `%I:%M:%S %p`.   |\n|       |          |                                                                            |\n|       |          | **TIME ZONE SPECIFIERS:**                                                  |\n| `%Z`  | `ACST`   | Local time zone name. Skips all non-whitespace characters during parsing. [^8] |\n| `%z`  | `+0930`  | Offset from the local time to UTC (with UTC being `+0000`).                |\n| `%:z` | `+09:30` | Same as `%z` but with a colon.                                             |\n|`%::z`|`+09:30:00`| Offset from the local time to UTC with seconds.                            |\n|`%:::z`| `+09`    | Offset from the local time to UTC without minutes.                         |\n| `%#z` | `+09`    | *Parsing only:* Same as `%z` but allows minutes to be missing or present.  |\n|       |          |                                                                            |\n|       |          | **DATE & TIME SPECIFIERS:**                                                |\n|`%c`|`Sun Jul  8 00:34:60 2001`|Locale's date and time (e.g., Thu Mar  3 23:05:25 2005).       |\n| `%+`  | `2001-07-08T00:34:60.026490+09:30` | ISO 8601 / RFC 3339 date & time format. [^5]     |\n|       |               |                                                                       |\n| `%s`  | `994518299`   | UNIX timestamp, the number of seconds since 1970-01-01 00:00 UTC. [^6]|\n|       |          |                                                                            |\n|       |          | **SPECIAL SPECIFIERS:**                                                    |\n| `%t`  |          | Literal tab (`\\t`).                                                        |\n| `%n`  |          | Literal newline (`\\n`).                                                    |\n| `%%`  |          | Literal percent sign.                                                      |\n\nIt is possible to override the default padding behavior of numeric specifiers `%?`.\nThis is not allowed for other specifiers and will result in the `BAD_FORMAT` error.\n\nModifier | Description\n-------- | -----------\n`%-?`    | Suppresses any padding including spaces and zeroes. (e.g. `%j` = `012`, `%-j` = `12`)\n`%_?`    | Uses spaces as a padding. (e.g. `%j` = `012`, `%_j` = ` 12`)\n`%0?`    | Uses zeroes as a padding. (e.g. `%e` = ` 9`, `%0e` = `09`)\n\nNotes:\n\n[^1]: `%C`, `%y`:\n   This is floor division, so 100 BCE (year number -99) will print `-1` and `99` respectively.\n\n[^2]: `%U`:\n   Week 1 starts with the first Sunday in that year.\n   It is possible to have week 0 for days before the first Sunday.\n\n[^3]: `%G`, `%g`, `%V`:\n   Week 1 is the first week with at least 4 days in that year.\n   Week 0 does not exist, so this should be used with `%G` or `%g`.\n\n[^4]: `%S`:\n   It accounts for leap seconds, so `60` is possible.\n\n[^5]: `%+`: Same as `%Y-%m-%dT%H:%M:%S%.f%:z`, i.e. 0, 3, 6 or 9 fractional\n   digits for seconds and colons in the time zone offset.\n   <br>\n   <br>\n   This format also supports having a `Z` or `UTC` in place of `%:z`. They\n   are equivalent to `+00:00`.\n   <br>\n   <br>\n   Note that all `T`, `Z`, and `UTC` are parsed case-insensitively.\n   <br>\n   <br>\n   The typical `strftime` implementations have different (and locale-dependent)\n   formats for this specifier. While Chrono's format for `%+` is far more\n   stable, it is best to avoid this specifier if you want to control the exact\n   output.\n\n[^6]: `%s`:\n   This is not padded and can be negative.\n   For the purpose of Chrono, it only accounts for non-leap seconds\n   so it slightly differs from ISO C `strftime` behavior.\n\n[^7]: `%f`, `%.f`, `%.3f`, `%.6f`, `%.9f`, `%3f`, `%6f`, `%9f`:\n   <br>\n   The default `%f` is right-aligned and always zero-padded to 9 digits\n   for the compatibility with glibc and others,\n   so it always counts the number of nanoseconds since the last whole second.\n   E.g. 7ms after the last second will print `007000000`,\n   and parsing `7000000` will yield the same.\n   <br>\n   <br>\n   The variant `%.f` is left-aligned and print 0, 3, 6 or 9 fractional digits\n   according to the precision.\n   E.g. 70ms after the last second under `%.f` will print `.070` (note: not `.07`),\n   and parsing `.07`, `.070000` etc. will yield the same.\n   Note that they can print or read nothing if the fractional part is zero or\n   the next character is not `.`.\n   <br>\n   <br>\n   The variant `%.3f`, `%.6f` and `%.9f` are left-aligned and print 3, 6 or 9 fractional digits\n   according to the number preceding `f`.\n   E.g. 70ms after the last second under `%.3f` will print `.070` (note: not `.07`),\n   and parsing `.07`, `.070000` etc. will yield the same.\n   Note that they can read nothing if the fractional part is zero or\n   the next character is not `.` however will print with the specified length.\n   <br>\n   <br>\n   The variant `%3f`, `%6f` and `%9f` are left-aligned and print 3, 6 or 9 fractional digits\n   according to the number preceding `f`, but without the leading dot.\n   E.g. 70ms after the last second under `%3f` will print `070` (note: not `07`),\n   and parsing `07`, `070000` etc. will yield the same.\n   Note that they can read nothing if the fractional part is zero.\n\n[^8]: `%Z`:\n   Offset will not be populated from the parsed data, nor will it be validated.\n   Timezone is completely ignored. Similar to the glibc `strptime` treatment of\n   this format code.\n   <br>\n   <br>\n   It is not possible to reliably convert from an abbreviation to an offset,\n   for example CDT can mean either Central Daylight Time (North America) or\n   China Daylight Time.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:2272:2082"],"is_stripped":false}},"b:2:2542-0:1959:2507":{"id":"b:2:2542-0:1959:2507","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:1959:2507","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:126","2:2546:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:90:2204":{"id":"0:90:2204","crate_id":0,"name":"years_since","span":{"filename":"src/date.rs","begin":[292,4],"end":[294,5]},"visibility":"public","docs":"Returns the number of whole years from the given `base` until `self`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["base",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u32"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:674-0:1888:1914":{"id":"b:5:674-0:1888:1914","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:670:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SecondsFormat","id":"0:1888:1914","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:676:8076","5:677:8077","5:678:8078"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3331-0:1959:2507":{"id":"b:2:3331-0:1959:2507","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3329:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:1959:2507","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3333:1470"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2239:2071":{"id":"2:2239:2071","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2542-0:2084:2779":{"id":"b:2:2542-0:2084:2779","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2084:2779","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:126","2:2546:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:927":{"id":"0:927","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[1753,0],"end":[1758,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"SubAssign","id":"2:2800:2075","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Duration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:928:1396"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1019:2373":{"id":"0:1019:2373","crate_id":0,"name":"timestamp_micros","span":{"filename":"src/naive/datetime/mod.rs","begin":[439,4],"end":[442,5]},"visibility":"public","docs":"Returns the number of non-leap *microseconds* since midnight on January 1, 1970.\n\nNote that this does *not* account for the timezone!\nThe true \"UNIX timestamp\" would count seconds since the midnight *UTC* on the epoch.\n\nNote also that this does reduce the number of years that can be\nrepresented from ~584 Billion to ~584 Thousand. (If this is a problem,\nplease file an issue to let me know what domain needs microsecond\nprecision over millennia, I'm curious.)\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet dt = NaiveDate::from_ymd_opt(1970, 1, 1).unwrap().and_hms_micro_opt(0, 0, 1, 444).unwrap();\nassert_eq!(dt.timestamp_micros(), 1_000_444);\n\nlet dt = NaiveDate::from_ymd_opt(2001, 9, 9).unwrap().and_hms_micro_opt(1, 46, 40, 555).unwrap();\nassert_eq!(dt.timestamp_micros(), 1_000_000_000_000_555);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1913:720":{"id":"0:1913:720","crate_id":0,"name":"hash","span":{"filename":"src/datetime/mod.rs","begin":[55,44],"end":[55,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9297:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1079":{"id":"0:1079","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1465,0],"end":[1472,1]},"visibility":"default","docs":"An addition of `Duration` to `NaiveDateTime` yields another `NaiveDateTime`.\n\nAs a part of Chrono's [leap second handling](./struct.NaiveTime.html#leap-second-handling),\nthe addition assumes that **there is no leap second ever**,\nexcept when the `NaiveDateTime` itself represents a leap second\nin which case the assumption becomes that **there is exactly a single leap second ever**.\n\nPanics on underflow or overflow. Use [`NaiveDateTime::checked_add_signed`]\nto detect that.\n\n# Example\n\n```\nuse chrono::{Duration, NaiveDate};\n\nlet from_ymd = NaiveDate::from_ymd;\n\nlet d = from_ymd(2016, 7, 8);\nlet hms = |h, m, s| d.and_hms_opt(h, m, s).unwrap();\nassert_eq!(hms(3, 5, 7) + Duration::zero(),             hms(3, 5, 7));\nassert_eq!(hms(3, 5, 7) + Duration::seconds(1),         hms(3, 5, 8));\nassert_eq!(hms(3, 5, 7) + Duration::seconds(-1),        hms(3, 5, 6));\nassert_eq!(hms(3, 5, 7) + Duration::seconds(3600 + 60), hms(4, 6, 7));\nassert_eq!(hms(3, 5, 7) + Duration::seconds(86_400),\n           from_ymd(2016, 7, 9).and_hms_opt(3, 5, 7).unwrap());\nassert_eq!(hms(3, 5, 7) + Duration::days(365),\n           from_ymd(2017, 7, 8).and_hms_opt(3, 5, 7).unwrap());\n\nlet hmsm = |h, m, s, milli| d.and_hms_milli_opt(h, m, s, milli).unwrap();\nassert_eq!(hmsm(3, 5, 7, 980) + Duration::milliseconds(450), hmsm(3, 5, 8, 430));\n```\n\nLeap seconds are handled,\nbut the addition assumes that it is the only leap second happened.\n\n```\n# use chrono::{Duration, NaiveDate};\n# let from_ymd = NaiveDate::from_ymd;\n# let hmsm = |h, m, s, milli| from_ymd(2016, 7, 8).and_hms_milli_opt(h, m, s, milli).unwrap();\nlet leap = hmsm(3, 5, 59, 1_300);\nassert_eq!(leap + Duration::zero(),             hmsm(3, 5, 59, 1_300));\nassert_eq!(leap + Duration::milliseconds(-500), hmsm(3, 5, 59, 800));\nassert_eq!(leap + Duration::milliseconds(500),  hmsm(3, 5, 59, 1_800));\nassert_eq!(leap + Duration::milliseconds(800),  hmsm(3, 6, 0, 100));\nassert_eq!(leap + Duration::seconds(10),        hmsm(3, 6, 9, 300));\nassert_eq!(leap + Duration::seconds(-10),       hmsm(3, 5, 50, 300));\nassert_eq!(leap + Duration::days(1),\n           from_ymd(2016, 7, 9).and_hms_milli_opt(3, 5, 59, 300).unwrap());\n```","links":{"`NaiveDateTime::checked_add_signed`":"0:1024:2189"},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Add","id":"2:2765:2072","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Duration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1080:183","0:1081:271"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2248:3047":{"id":"0:2248:3047","crate_id":0,"name":"hour_div_12","span":{"filename":"src/format/parsed.rs","begin":[86,4],"end":[86,32]},"visibility":"public","docs":"Hour number divided by 12 (0--1). 0 indicates AM and 1 indicates PM.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u32"}}],"bindings":[]}}}}},"a:2:2736:7564-0:2783:1920":{"id":"a:2:2736:7564-0:2783:1920","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:7564","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:2783:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:360":{"id":"0:360","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[906,0],"end":[913,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Add","id":"2:2765:2072","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Duration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:362:183","0:363:271"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2531-0:1959:2507":{"id":"b:2:2531-0:1959:2507","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:1959:2507","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2533:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2337":{"id":"0:2337","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[187,42],"end":[187,45]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["min","max","clamp"],"trait":{"name":"Ord","id":"2:2337:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2338:422"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1240:4923":{"id":"0:1240:4923","crate_id":0,"name":"overflowing_add_signed","span":{"filename":"src/naive/time/mod.rs","begin":[495,4],"end":[556,5]},"visibility":"public","docs":"Adds given `Duration` to the current time,\nand also returns the number of *seconds*\nin the integral number of days ignored from the addition.\n(We cannot return `Duration` because it is subject to overflow or underflow.)\n\n# Example\n\n```\nuse chrono::{Duration, NaiveTime};\n\nlet from_hms = NaiveTime::from_hms;\n\nassert_eq!(from_hms(3, 4, 5).overflowing_add_signed(Duration::hours(11)),\n           (from_hms(14, 4, 5), 0));\nassert_eq!(from_hms(3, 4, 5).overflowing_add_signed(Duration::hours(23)),\n           (from_hms(2, 4, 5), 86_400));\nassert_eq!(from_hms(3, 4, 5).overflowing_add_signed(Duration::hours(-7)),\n           (from_hms(20, 4, 5), -86_400));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"tuple","inner":[{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},{"kind":"primitive","inner":"i64"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:569:3085":{"id":"0:569:3085","crate_id":0,"name":"set_isoweek","span":{"filename":"src/format/parsed.rs","begin":[202,4],"end":[204,5]},"visibility":"public","docs":"Tries to set the [`isoweek`](#structfield.isoweek) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["value",{"kind":"primitive","inner":"i64"}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:455:1935","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:335:2543":{"id":"0:335:2543","crate_id":0,"name":"with_second","span":{"filename":"src/datetime/mod.rs","begin":[851,4],"end":[853,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["sec",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:893:2231":{"id":"0:893:2231","crate_id":0,"name":"month0","span":{"filename":"src/naive/date.rs","begin":[1318,4],"end":[1320,5]},"visibility":"default","docs":"Returns the month number starting from 0.\n\nThe return value ranges from 0 to 11.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().month0(), 8);\nassert_eq!(NaiveDate::from_ymd_opt(-308, 3, 14).unwrap().month0(), 2);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2736:7564-0:2485:1919":{"id":"a:2:2736:7564-0:2485:1919","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:7564","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:8179:7659-0:2964:1948":{"id":"a:2:8179:7659-0:2964:1948","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8179:7659","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseMonthError","id":"0:2964:1948","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:828:1927":{"id":"0:828:1927","crate_id":0,"name":"MAX_DATE","span":{"filename":"src/naive/date.rs","begin":[198,0],"end":[198,47]},"visibility":"public","docs":"The maximum possible `NaiveDate` (December 31, 262143 CE).","links":{},"attrs":["#[deprecated(since = \"0.4.20\", note = \"Use NaiveDate::MAX instead\")]"],"deprecation":{"since":"0.4.20","note":"Use NaiveDate::MAX instead"},"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"NaiveDate::MAX","value":null,"is_literal":false}},"0:138":{"id":"0:138","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[457,0],"end":[457,37]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2306:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2242:2913":{"id":"0:2242:2913","crate_id":0,"name":"week_from_sun","span":{"filename":"src/format/parsed.rs","begin":[66,4],"end":[66,34]},"visibility":"public","docs":"Week number, where the week 1 starts at the first Sunday of January\n(0--53, 1--53 or 1--52 depending on the year).","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u32"}}],"bindings":[]}}}}},"b:2:2240-0:2485:1919":{"id":"b:2:2240-0:2485:1919","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2234:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2242:6046"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2237-0:2324:1921":{"id":"b:2:2237-0:2324:1921","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2231:96","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2239:2071"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:914:271":{"id":"0:914:271","crate_id":0,"name":"add","span":{"filename":"src/naive/date.rs","begin":[1675,4],"end":[1677,5]},"visibility":"default","docs":"An addition of months to `NaiveDate` clamped to valid days in resulting month.\n\n# Panics\n\nPanics if the resulting date would be out of range.\n\n# Example\n\n```\nuse chrono::{Duration, NaiveDate, Months};\n\nlet from_ymd = NaiveDate::from_ymd;\n\nassert_eq!(from_ymd(2014, 1, 1) + Months::new(1), from_ymd(2014, 2, 1));\nassert_eq!(from_ymd(2014, 1, 1) + Months::new(11), from_ymd(2014, 12, 1));\nassert_eq!(from_ymd(2014, 1, 1) + Months::new(12), from_ymd(2015, 1, 1));\nassert_eq!(from_ymd(2014, 1, 1) + Months::new(13), from_ymd(2015, 2, 1));\nassert_eq!(from_ymd(2014, 1, 31) + Months::new(1), from_ymd(2014, 2, 28));\nassert_eq!(from_ymd(2020, 1, 31) + Months::new(1), from_ymd(2020, 2, 29));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["months",{"kind":"resolved_path","inner":{"name":"Months","id":"0:2945:1947","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:2765:2072","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:61:2121":{"id":"0:61:2121","crate_id":0,"name":"and_time","span":{"filename":"src/date.rs","begin":[89,4],"end":[92,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date and given `NaiveTime`.\nThe offset in the current date is preserved.\n\nPanics on invalid datetime.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["time",{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:226":{"id":"0:226","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[101,0],"end":[419,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:228:2117","0:229:2334","0:230:1926","0:231:2348","0:232:1598","0:233:2353","0:234:2364","0:235:2373","0:236:2381","0:237:2385","0:238:2389","0:239:2393","0:240:978","0:241:2124","0:242:2183","0:244:2189","0:245:2401","0:246:2191","0:247:2406","0:248:2409","0:249:2411","0:250:2196","0:252:2198","0:253:2123","0:254:2204","0:255:2111","0:256:2114"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2527-0:2272:2082":{"id":"b:2:2527-0:2272:2082","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2272:2082","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2530:2607"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2002:1583":{"id":"0:2002:1583","crate_id":0,"name":"0","span":{"filename":"src/format/mod.rs","begin":[151,13],"end":[151,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:2016:2727","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:2161:2284":{"id":"0:2161:2284","crate_id":0,"name":"Fixed","span":{"filename":"src/format/mod.rs","begin":[306,4],"end":[306,16]},"visibility":"default","docs":"Fixed-format item.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":{"tuple":["0:2163:1583"]},"discriminant":null}},"0:2297":{"id":"0:2297","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[850,9],"end":[850,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:9069:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9069:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2291:2080","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:2299:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:5:5633-0:2485:1919":{"id":"b:5:5633-0:2485:1919","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9074:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5631:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5635:1434"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1735:2582":{"id":"0:1735:2582","crate_id":0,"name":"timestamp_millis_opt","span":{"filename":"src/offset/mod.rs","begin":[394,4],"end":[401,5]},"visibility":"default","docs":"Makes a new `DateTime` from the number of non-leap milliseconds\nsince January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\").\n\n\nReturns `LocalResult::None` on out-of-range number of milliseconds\nand/or invalid nanosecond, otherwise always returns\n`LocalResult::Single`.\n\n# Example\n\n```\nuse chrono::{Utc, TimeZone, LocalResult};\nmatch Utc.timestamp_millis_opt(1431648000) {\n    LocalResult::Single(dt) => assert_eq!(dt.timestamp(), 1431648),\n    _ => panic!(\"Incorrect timestamp_millis\"),\n};\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["millis",{"kind":"primitive","inner":"i64"}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2797:1940","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1888:1914":{"id":"0:1888:1914","crate_id":0,"name":"SecondsFormat","span":{"filename":"src/datetime/mod.rs","begin":[56,0],"end":[80,1]},"visibility":"public","docs":"Specific formatting options for seconds. This may be extended in the\nfuture, so exhaustive matching in external code is not recommended.\n\nSee the `TimeZone::to_rfc3339_opts` function for usage.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":true,"variants":["0:1889:2290","0:1891:2293","0:1893:2296","0:1895:2299","0:1897:2303"],"impls":["a:2:8179:7659-0:1888:1914","a:2:2672:217-0:1888:1914","a:2:2736:7564-0:1888:1914","a:2:2686:225-0:1888:1914","a:2:8178:7660-0:1888:1914","b:2:2531-0:1888:1914","b:2:2542-0:1888:1914","b:2:2527-0:1888:1914","b:2:3331-0:1888:1914","b:2:2240-0:1888:1914","b:2:2537-0:1888:1914","b:2:2237-0:1888:1914","b:5:674-0:1888:1914","0:1906","0:1910","0:1907","0:1903","0:1904","0:1909","0:1912","0:1901"]}},"0:333:2542":{"id":"0:333:2542","crate_id":0,"name":"with_minute","span":{"filename":"src/datetime/mod.rs","begin":[846,4],"end":[848,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["min",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:142:1023":{"id":"0:142:1023","crate_id":0,"name":"partial_cmp","span":{"filename":"src/date.rs","begin":[460,4],"end":[462,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Ordering","id":"2:30596:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1921:415":{"id":"0:1921:415","crate_id":0,"name":"clone","span":{"filename":"src/datetime/mod.rs","begin":[87,9],"end":[87,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2319":{"id":"0:2319","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[129,39],"end":[129,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2682:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Days","id":"0:2305:1937","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1296-0:1001:1932":{"id":"0:1296-0:1001:1932","crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[19,54],"end":[19,66]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"self::datetime::MIN_DATETIME","name":"MIN_DATETIME","id":"0:1001:1932","glob":false}},"0:279":{"id":"0:279","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[522,0],"end":[582,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:280:2454","0:282:2462","0:284:2477"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:5:674-0:2324:1921":{"id":"b:5:674-0:2324:1921","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:670:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:676:8076","5:677:8077","5:678:8078"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:374:1395":{"id":"0:374:1395","crate_id":0,"name":"sub","span":{"filename":"src/datetime/mod.rs","begin":[937,4],"end":[939,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:837:4013":{"id":"0:837:4013","crate_id":0,"name":"from_isoywd","span":{"filename":"src/naive/date.rs","begin":[330,4],"end":[332,5]},"visibility":"public","docs":"Makes a new `NaiveDate` from the [ISO week date](#week-date)\n(year, week number and day of the week).\nThe resulting `NaiveDate` may have a different year from the input year.\n\nPanics on the out-of-range date and/or invalid week number.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `from_isoywd_opt()` instead\")]"],"deprecation":{"since":"0.4.23","note":"use `from_isoywd_opt()` instead"},"kind":"function","inner":{"decl":{"inputs":[["year",{"kind":"primitive","inner":"i32"}],["week",{"kind":"primitive","inner":"u32"}],["weekday",{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2848:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2542-0:1881:1908":{"id":"b:2:2542-0:1881:1908","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["2:2545:126","2:2546:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2323:1023":{"id":"0:2323:1023","crate_id":0,"name":"partial_cmp","span":{"filename":"src/naive/date.rs","begin":[129,50],"end":[129,60]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Days","id":"0:2305:1937","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::option::Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Ordering","id":"2:30596:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:889:2207":{"id":"0:889:2207","crate_id":0,"name":"MAX","span":{"filename":"src/naive/date.rs","begin":[1269,4],"end":[1269,94]},"visibility":"public","docs":"The maximum possible `NaiveDate` (December 31, 262143 CE).","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":"_"}},"0:241:2124":{"id":"0:241:2124","crate_id":0,"name":"timezone","span":{"filename":"src/datetime/mod.rs","begin":[302,4],"end":[304,5]},"visibility":"public","docs":"Retrieves an associated time zone.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"Tz"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2038:2747":{"id":"0:2038:2747","crate_id":0,"name":"LowerAmPm","span":{"filename":"src/format/mod.rs","begin":[191,4],"end":[191,13]},"visibility":"default","docs":"AM/PM.\n\nPrints in lower case, reads in any case.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:589:3152":{"id":"0:589:3152","crate_id":0,"name":"to_naive_time","span":{"filename":"src/format/parsed.rs","begin":[499,4],"end":[532,5]},"visibility":"public","docs":"Returns a parsed naive time out of given fields.\n\nThis method is able to determine the time from given subset of fields:\n\n- Hour, minute. (second and nanosecond assumed to be 0)\n- Hour, minute, second. (nanosecond assumed to be 0)\n- Hour, minute, second, nanosecond.\n\nIt is able to handle leap seconds when given second is 60.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:455:1935","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2391":{"id":"0:2391","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[82,24],"end":[82,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9289:139","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2392:720"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:247:2406":{"id":"0:247:2406","crate_id":0,"name":"checked_sub_months","span":{"filename":"src/datetime/mod.rs","begin":[352,4],"end":[357,5]},"visibility":"public","docs":"Subtracts given `Months` from the current date and time.\n\nReturns `None` when it will result in overflow, or if the\nlocal time is not valid on the newly calculated date.\n\nSee [`NaiveDate::checked_sub_months`] for more details on behavior","links":{"`NaiveDate::checked_sub_months`":"0:845:2406"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"Months","id":"0:2945:1947","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2237-0:2485:1919":{"id":"b:2:2237-0:2485:1919","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2231:96","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2239:2071"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:842:4077":{"id":"0:842:4077","crate_id":0,"name":"from_weekday_of_month_opt","span":{"filename":"src/naive/date.rs","begin":[474,4],"end":[487,5]},"visibility":"public","docs":"Makes a new `NaiveDate` by counting the number of occurrences of a particular day-of-week\nsince the beginning of the given month.  For instance, if you want the 2nd Friday of March\n2017, you would use `NaiveDate::from_weekday_of_month(2017, 3, Weekday::Fri, 2)`.  `n` is 1-indexed.\n\n```\nuse chrono::{NaiveDate, Weekday};\nassert_eq!(NaiveDate::from_weekday_of_month_opt(2017, 3, Weekday::Fri, 2),\n           NaiveDate::from_ymd_opt(2017, 3, 10))\n```\n\nReturns `None` if `n` out-of-range; ie. if `n` is larger than the number of `weekday` in\n`month` (eg. the 6th Friday of March 2017), or if `n == 0`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["year",{"kind":"primitive","inner":"i32"}],["month",{"kind":"primitive","inner":"u32"}],["weekday",{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2848:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["n",{"kind":"primitive","inner":"u8"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1704:2126":{"id":"0:1704:2126","crate_id":0,"name":"single","span":{"filename":"src/offset/mod.rs","begin":[55,4],"end":[60,5]},"visibility":"public","docs":"Returns `Some` only when the conversion result is unique, or `None` otherwise.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2240-0:2324:1921":{"id":"b:2:2240-0:2324:1921","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2234:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2242:6046"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2686:225-0:2466:1923":{"id":"a:2:2686:225-0:2466:1923","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2686:225-0:2884:1945":{"id":"a:2:2686:225-0:2884:1945","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:2884:1945","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1269:183":{"id":"0:1269:183","crate_id":0,"name":"Output","span":{"filename":"src/naive/time/mod.rs","begin":[1080,4],"end":[1080,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"b:2:2527-0:2884:1945":{"id":"b:2:2527-0:2884:1945","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:2884:1945","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2530:2607"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2736:7564-0:2466:1923":{"id":"a:2:2736:7564-0:2466:1923","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:7564","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2956":{"id":"0:2956","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[194,33],"end":[194,37]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9289:139","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Months","id":"0:2945:1947","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2957:720"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2531-0:2272:2082":{"id":"b:2:2531-0:2272:2082","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2272:2082","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2533:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1258:2541":{"id":"0:1258:2541","crate_id":0,"name":"with_hour","span":{"filename":"src/naive/time/mod.rs","begin":[859,4],"end":[865,5]},"visibility":"default","docs":"Makes a new `NaiveTime` with the hour number changed.\n\nReturns `None` when the resulting `NaiveTime` would be invalid.\n\n# Example\n\n```\nuse chrono::{NaiveTime, Timelike};\n\nlet dt = NaiveTime::from_hms_nano_opt(23, 56, 4, 12_345_678).unwrap();\nassert_eq!(dt.with_hour(7), Some(NaiveTime::from_hms_nano_opt(7, 56, 4, 12_345_678).unwrap()));\nassert_eq!(dt.with_hour(24), None);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["hour",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:913:183":{"id":"0:913:183","crate_id":0,"name":"Output","span":{"filename":"src/naive/date.rs","begin":[1653,4],"end":[1653,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:175-0:1881:1908":{"id":"0:175-0:1881:1908","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[458,15],"end":[458,19]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"date::Date","name":"Date","id":"0:1881:1908","glob":false}},"0:266:685":{"id":"0:266:685","crate_id":0,"name":"from","span":{"filename":"src/datetime/mod.rs","begin":[459,4],"end":[461,5]},"visibility":"default","docs":"Convert this `DateTime<Utc>` instance into a `DateTime<Local>` instance.\n\nConversion is performed via [`DateTime::with_timezone`], accounting for the difference in timezones.","links":{"`DateTime::with_timezone`":"0:242:2183"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["src",{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:2783:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:364":{"id":"0:364","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[915,0],"end":[923,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AddAssign","id":"2:2796:2073","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Duration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:366:272"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1056:2239":{"id":"0:1056:2239","crate_id":0,"name":"with_month0","span":{"filename":"src/naive/datetime/mod.rs","begin":[1154,4],"end":[1156,5]},"visibility":"default","docs":"Makes a new `NaiveDateTime` with the month number (starting from 0) changed.\n\nReturns `None` when the resulting `NaiveDateTime` would be invalid.\n\nSee also the [`NaiveDate::with_month0`] method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Datelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2015, 9, 30).unwrap().and_hms_opt(12, 34, 56).unwrap();\nassert_eq!(dt.with_month0(9), Some(NaiveDate::from_ymd_opt(2015, 10, 30).unwrap().and_hms_opt(12, 34, 56).unwrap()));\nassert_eq!(dt.with_month0(12), None); // no month 13\nassert_eq!(dt.with_month0(1), None); // no February 30\n```","links":{"`NaiveDate::with_month0`":"0:902:2239"},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["month0",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:441-0:636:2282":{"id":"0:441-0:636:2282","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[59,0],"end":[59,21]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"parse::parse","name":"parse","id":"0:636:2282","glob":false}},"0:1939:176":{"id":"0:1939:176","crate_id":0,"name":"None","span":{"filename":"src/format/mod.rs","begin":[79,4],"end":[79,8]},"visibility":"default","docs":"No padding.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:1806:2175":{"id":"0:1806:2175","crate_id":0,"name":"pred","span":{"filename":"src/weekday.rs","begin":[57,4],"end":[67,5]},"visibility":"public","docs":"The previous day in the week.\n\n`w`:        | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun`\n----------- | ----- | ----- | ----- | ----- | ----- | ----- | -----\n`w.pred()`: | `Sun` | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat`","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2848:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1751-0:2485:1919":{"id":"0:1751-0:2485:1919","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[484,17],"end":[484,28]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"offset::FixedOffset","name":"FixedOffset","id":"0:2485:1919","glob":false}},"0:267":{"id":"0:267","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[465,0],"end":[473,1]},"visibility":"default","docs":"Convert a `DateTime<FixedOffset>` instance into a `DateTime<Utc>` instance.","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:2783:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:268:685"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:747:2081":{"id":"0:747:2081","crate_id":0,"name":"Item","span":{"filename":"src/format/strftime.rs","begin":[273,4],"end":[273,25]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2143:2081","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}},"0:2231":{"id":"0:2231","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[359,44],"end":[359,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9289:139","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2203:2817","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2232:720"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2156:1583":{"id":"0:2156:1583","crate_id":0,"name":"0","span":{"filename":"src/format/mod.rs","begin":[301,15],"end":[301,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Box","id":"5:279:2663","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}},"0:1097:1395":{"id":"0:1097:1395","crate_id":0,"name":"sub","span":{"filename":"src/naive/datetime/mod.rs","begin":[1666,4],"end":[1668,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8179:7659-0:2466:1923":{"id":"a:2:8179:7659-0:2466:1923","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8179:7659","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2476:720":{"id":"0:2476:720","crate_id":0,"name":"hash","span":{"filename":"src/naive/time/mod.rs","begin":[190,24],"end":[190,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9297:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:674-0:2776:1909":{"id":"b:5:674-0:2776:1909","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:670:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Local","id":"0:2776:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:676:8076","5:677:8077","5:678:8078"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1244:2214":{"id":"0:1244:2214","crate_id":0,"name":"format_with_items","span":{"filename":"src/naive/time/mod.rs","begin":[699,4],"end":[705,5]},"visibility":"public","docs":"Formats the time with the specified formatting items.\nOtherwise it is the same as the ordinary [`format`](#method.format) method.\n\nThe `Iterator` of items should be `Clone`able,\nsince the resulting `DelayedFormat` value may be formatted multiple times.\n\n# Example\n\n```\nuse chrono::NaiveTime;\nuse chrono::format::strftime::StrftimeItems;\n\nlet fmt = StrftimeItems::new(\"%H:%M:%S\");\nlet t = NaiveTime::from_hms_opt(23, 56, 4).unwrap();\nassert_eq!(t.format_with_items(fmt.clone()).to_string(), \"23:56:04\");\nassert_eq!(t.format(\"%H:%M:%S\").to_string(),             \"23:56:04\");\n```\n\nThe resulting `DelayedFormat` can be formatted directly via the `Display` trait.\n\n```\n# use chrono::NaiveTime;\n# use chrono::format::strftime::StrftimeItems;\n# let fmt = StrftimeItems::new(\"%H:%M:%S\").clone();\n# let t = NaiveTime::from_hms_opt(23, 56, 4).unwrap();\nassert_eq!(format!(\"{}\", t.format_with_items(fmt)), \"23:56:04\");\n```","links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]","#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["items",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2291:2080","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7245:156","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"B"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2231:96","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2143:2081","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2785":{"id":"0:2785","crate_id":0,"name":null,"span":{"filename":"src/offset/utc.rs","begin":[43,9],"end":[43,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2684:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:2783:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11893:38828":{"id":"2:11893:38828","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:11878:1380","crate::ops::IndexMut":"2:2997:7235","str::slice_unchecked":"2:11892:38827"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:2147:1583":{"id":"0:2147:1583","crate_id":0,"name":"0","span":{"filename":"src/format/mod.rs","begin":[291,12],"end":[291,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}},"0:826:929":{"id":"0:826:929","crate_id":0,"name":"new","span":{"filename":"src/naive/date.rs","begin":[134,4],"end":[136,5]},"visibility":"public","docs":"Construct a new `Days` from a number of days","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["num",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2173:604":{"id":"0:2173:604","crate_id":0,"name":"eq","span":{"filename":"src/format/mod.rs","begin":[288,16],"end":[288,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2143:2081","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:899:2236":{"id":"0:899:2236","crate_id":0,"name":"iso_week","span":{"filename":"src/naive/date.rs","begin":[1451,4],"end":[1453,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"IsoWeek","id":"0:2448:1938","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2261":{"id":"0:2261","crate_id":0,"name":null,"span":{"filename":"src/format/parsed.rs","begin":[25,27],"end":[25,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2683:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Parsed","id":"0:2234:2283","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:176-0:57:1927":{"id":"0:176-0:57:1927","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[458,21],"end":[458,29]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"date::MAX_DATE","name":"MAX_DATE","id":"0:57:1927","glob":false}},"5:676:8076":{"id":"5:676:8076","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"0:1827":{"id":"0:1827","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[61,0],"end":[154,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:2894:1916","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1828:2168","0:1829:2175","0:1830:6941","0:1831:908"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2303":{"id":"0:2303","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[61,9],"end":[61,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9069:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveWeek","id":"0:2300:1939","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2304:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:246:2191":{"id":"0:246:2191","crate_id":0,"name":"checked_sub_signed","span":{"filename":"src/datetime/mod.rs","begin":[340,4],"end":[344,5]},"visibility":"public","docs":"Subtracts given `Duration` from the current date and time.\n\nReturns `None` when it will result in overflow.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2321:604":{"id":"0:2321:604","crate_id":0,"name":"eq","span":{"filename":"src/naive/date.rs","begin":[129,39],"end":[129,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Days","id":"0:2305:1937","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8178:7660-0:2466:1923":{"id":"a:2:8178:7660-0:2466:1923","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8178:7660","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3331-0:2783:1920":{"id":"b:2:3331-0:2783:1920","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3329:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:2783:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3333:1470"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2007:604":{"id":"0:2007:604","crate_id":0,"name":"eq","span":{"filename":"src/format/mod.rs","begin":[99,16],"end":[99,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:1959:2507","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2042:2525":{"id":"0:2042:2525","crate_id":0,"name":"Nanosecond","span":{"filename":"src/format/mod.rs","begin":[199,4],"end":[199,14]},"visibility":"default","docs":"An optional dot plus one or more digits for left-aligned nanoseconds.\nMay print nothing, 3, 6 or 9 digits according to the available accuracy.\nSee also [`Numeric::Nanosecond`](./enum.Numeric.html#variant.Nanosecond).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:2791":{"id":"0:2791","crate_id":0,"name":null,"span":{"filename":"src/offset/utc.rs","begin":[43,33],"end":[43,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2683:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:2783:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1714:2144":{"id":"0:1714:2144","crate_id":0,"name":"and_hms_milli_opt","span":{"filename":"src/offset/mod.rs","begin":[124,4],"end":[137,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date, hour, minute, second and millisecond.\nThe millisecond part can exceed 1,000 in order to represent the leap second.\nThe offset in the current date is preserved.\n\nPropagates any error. Ambiguous result would be discarded.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["hour",{"kind":"primitive","inner":"u32"}],["min",{"kind":"primitive","inner":"u32"}],["sec",{"kind":"primitive","inner":"u32"}],["milli",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2797:1940","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:576:3102":{"id":"0:576:3102","crate_id":0,"name":"set_minute","span":{"filename":"src/format/parsed.rs","begin":[253,4],"end":[255,5]},"visibility":"public","docs":"Tries to set the [`minute`](#structfield.minute) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["value",{"kind":"primitive","inner":"i64"}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:455:1935","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2399":{"id":"0:2399","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[82,53],"end":[82,58]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2400:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:402:2564":{"id":"0:402:2564","crate_id":0,"name":"from_str","span":{"filename":"src/datetime/mod.rs","begin":[1017,4],"end":[1019,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:455:1935","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:2783:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:248:2409":{"id":"0:248:2409","crate_id":0,"name":"checked_add_days","span":{"filename":"src/datetime/mod.rs","begin":[362,4],"end":[367,5]},"visibility":"public","docs":"Add a duration in [`Days`] to the date part of the `DateTime`\n\nReturns `None` if the resulting date would be out of range.","links":{"`Days`":"0:2305:1937"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["days",{"kind":"resolved_path","inner":{"name":"Days","id":"0:2305:1937","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:271":{"id":"0:271","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[491,0],"end":[499,1]},"visibility":"default","docs":"Convert a `DateTime<Local>` instance into a `DateTime<Utc>` instance.","links":{},"attrs":["#[cfg(feature = \"clock\")]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Local","id":"0:2776:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:2783:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:272:685"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:8179:7659-0:2830:1943":{"id":"a:2:8179:7659-0:2830:1943","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8179:7659","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RoundingError","id":"0:2830:1943","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11967:38839":{"id":"2:11967:38839","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:319:2241":{"id":"0:319:2241","crate_id":0,"name":"with_day0","span":{"filename":"src/datetime/mod.rs","begin":[807,4],"end":[809,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["day0",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2300:1939":{"id":"0:2300:1939","crate_id":0,"name":"NaiveWeek","span":{"filename":"src/naive/date.rs","begin":[62,0],"end":[65,1]},"visibility":"public","docs":"A week represented by a [`NaiveDate`] and a [`Weekday`] which is the first\nday of the week.","links":{"`NaiveDate`":"0:2324:1921","`Weekday`":"0:2848:1918"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:821","a:2:8179:7659-0:2300:1939","a:2:2672:217-0:2300:1939","a:2:2736:7564-0:2300:1939","a:2:2686:225-0:2300:1939","a:2:8178:7660-0:2300:1939","b:2:2531-0:2300:1939","b:2:2542-0:2300:1939","b:2:2527-0:2300:1939","b:2:3331-0:2300:1939","b:2:2240-0:2300:1939","b:2:2537-0:2300:1939","b:2:2237-0:2300:1939","0:2303"]}},"0:21-0:2783:1920":{"id":"0:21-0:2783:1920","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[449,33],"end":[449,36]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::Utc","name":"Utc","id":"0:2783:1920","glob":false}},"0:1026:2191":{"id":"0:1026:2191","crate_id":0,"name":"checked_sub_signed","span":{"filename":"src/naive/datetime/mod.rs","begin":[712,4],"end":[722,5]},"visibility":"public","docs":"Subtracts given `Duration` from the current date and time.\n\nAs a part of Chrono's [leap second handling](./struct.NaiveTime.html#leap-second-handling),\nthe subtraction assumes that **there is no leap second ever**,\nexcept when the `NaiveDateTime` itself represents a leap second\nin which case the assumption becomes that **there is exactly a single leap second ever**.\n\nReturns `None` when it will result in overflow.\n\n# Example\n\n```\nuse chrono::{Duration, NaiveDate};\n\nlet from_ymd = NaiveDate::from_ymd;\n\nlet d = from_ymd(2016, 7, 8);\nlet hms = |h, m, s| d.and_hms_opt(h, m, s).unwrap();\nassert_eq!(hms(3, 5, 7).checked_sub_signed(Duration::zero()),\n           Some(hms(3, 5, 7)));\nassert_eq!(hms(3, 5, 7).checked_sub_signed(Duration::seconds(1)),\n           Some(hms(3, 5, 6)));\nassert_eq!(hms(3, 5, 7).checked_sub_signed(Duration::seconds(-1)),\n           Some(hms(3, 5, 8)));\nassert_eq!(hms(3, 5, 7).checked_sub_signed(Duration::seconds(3600 + 60)),\n           Some(hms(2, 4, 7)));\nassert_eq!(hms(3, 5, 7).checked_sub_signed(Duration::seconds(86_400)),\n           Some(from_ymd(2016, 7, 7).and_hms_opt(3, 5, 7).unwrap()));\n\nlet hmsm = |h, m, s, milli| d.and_hms_milli_opt(h, m, s, milli).unwrap();\nassert_eq!(hmsm(3, 5, 7, 450).checked_sub_signed(Duration::milliseconds(670)),\n           Some(hmsm(3, 5, 6, 780)));\n```\n\nOverflow returns `None`.\n\n```\n# use chrono::{Duration, NaiveDate};\n# let hms = |h, m, s| NaiveDate::from_ymd_opt(2016, 7, 8).unwrap().and_hms_opt(h, m, s).unwrap();\nassert_eq!(hms(3, 5, 7).checked_sub_signed(Duration::days(1_000_000_000)), None);\n```\n\nLeap seconds are handled,\nbut the subtraction assumes that it is the only leap second happened.\n\n```\n# use chrono::{Duration, NaiveDate};\n# let from_ymd = NaiveDate::from_ymd;\n# let hmsm = |h, m, s, milli| from_ymd(2016, 7, 8).and_hms_milli_opt(h, m, s, milli).unwrap();\nlet leap = hmsm(3, 5, 59, 1_300);\nassert_eq!(leap.checked_sub_signed(Duration::zero()),\n           Some(hmsm(3, 5, 59, 1_300)));\nassert_eq!(leap.checked_sub_signed(Duration::milliseconds(200)),\n           Some(hmsm(3, 5, 59, 1_100)));\nassert_eq!(leap.checked_sub_signed(Duration::milliseconds(500)),\n           Some(hmsm(3, 5, 59, 800)));\nassert_eq!(leap.checked_sub_signed(Duration::seconds(60)),\n           Some(hmsm(3, 5, 0, 300)));\nassert_eq!(leap.checked_sub_signed(Duration::days(1)),\n           Some(from_ymd(2016, 7, 7).and_hms_milli_opt(3, 6, 0, 300).unwrap()));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2249:3049":{"id":"0:2249:3049","crate_id":0,"name":"hour_mod_12","span":{"filename":"src/format/parsed.rs","begin":[89,4],"end":[89,32]},"visibility":"public","docs":"Hour number modulo 12 (0--11).","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u32"}}],"bindings":[]}}}}},"0:2020":{"id":"0:2020","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[155,16],"end":[155,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2683:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:2016:2727","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2329":{"id":"0:2329","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[187,20],"end":[187,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2683:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1948":{"id":"0:1948","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[76,22],"end":[76,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2682:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:1938:2508","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1106":{"id":"0:1106","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1747,0],"end":[1753,1]},"visibility":"default","docs":"The `Display` output of the naive date and time `dt` is the same as\n[`dt.format(\"%Y-%m-%d %H:%M:%S%.f\")`](crate::format::strftime).\n\nIt should be noted that, for leap seconds not on the minute boundary,\nit may print a representation not distinguishable from non-leap seconds.\nThis doesn't matter in practice, since such leap seconds never happened.\n(By the time of the first leap second on 1972-06-30,\nevery time zone offset around the world has standardized to the 5-minute alignment.)\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet dt = NaiveDate::from_ymd_opt(2016, 11, 15).unwrap().and_hms_opt(7, 39, 24).unwrap();\nassert_eq!(format!(\"{}\", dt), \"2016-11-15 07:39:24\");\n```\n\nLeap seconds may also be used.\n\n```\n# use chrono::NaiveDate;\nlet dt = NaiveDate::from_ymd_opt(2015, 6, 30).unwrap().and_hms_milli_opt(23, 59, 59, 1_500).unwrap();\nassert_eq!(format!(\"{}\", dt), \"2015-06-30 23:59:60.500\");\n```","links":{"crate::format::strftime":"0:725:2667"},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9074:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1107:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1830:6941":{"id":"0:1830:6941","crate_id":0,"name":"number_from_month","span":{"filename":"src/month.rs","begin":[114,4],"end":[129,5]},"visibility":"public","docs":"Returns a month-of-year number starting from January = 1.\n\n`m`:                     | `January` | `February` | `...` | `December`\n-------------------------| --------- | ---------- | --- | -----\n`m.number_from_month()`: | 1         | 2          | `...` | 12","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2940":{"id":"0:2940","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[30,37],"end":[30,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9069:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:2894:1916","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2941:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:260:59":{"id":"0:260:59","crate_id":0,"name":"default","span":{"filename":"src/datetime/mod.rs","begin":[430,4],"end":[432,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2317:720":{"id":"0:2317:720","crate_id":0,"name":"hash","span":{"filename":"src/naive/date.rs","begin":[129,33],"end":[129,37]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9297:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:906:2243":{"id":"0:906:2243","crate_id":0,"name":"with_ordinal0","span":{"filename":"src/naive/date.rs","begin":[1609,4],"end":[1611,5]},"visibility":"default","docs":"Makes a new `NaiveDate` with the day of year (starting from 0) changed.\n\nReturns `None` when the resulting `NaiveDate` would be invalid.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(NaiveDate::from_ymd_opt(2015, 1, 1).unwrap().with_ordinal0(59),\n           Some(NaiveDate::from_ymd_opt(2015, 3, 1).unwrap()));\nassert_eq!(NaiveDate::from_ymd_opt(2015, 1, 1).unwrap().with_ordinal0(365),\n           None); // 2015 had only 365 days\n\nassert_eq!(NaiveDate::from_ymd_opt(2016, 1, 1).unwrap().with_ordinal0(59),\n           Some(NaiveDate::from_ymd_opt(2016, 2, 29).unwrap()));\nassert_eq!(NaiveDate::from_ymd_opt(2016, 1, 1).unwrap().with_ordinal0(365),\n           Some(NaiveDate::from_ymd_opt(2016, 12, 31).unwrap()));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["ordinal0",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1007:929":{"id":"0:1007:929","crate_id":0,"name":"new","span":{"filename":"src/naive/datetime/mod.rs","begin":[134,4],"end":[136,5]},"visibility":"public","docs":"Makes a new `NaiveDateTime` from date and time components.\nEquivalent to [`date.and_time(time)`](./struct.NaiveDate.html#method.and_time)\nand many other helper constructors on `NaiveDate`.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveTime, NaiveDateTime};\n\nlet d = NaiveDate::from_ymd_opt(2015, 6, 3).unwrap();\nlet t = NaiveTime::from_hms_milli_opt(12, 34, 56, 789).unwrap();\n\nlet dt = NaiveDateTime::new(d, t);\nassert_eq!(dt.date(), d);\nassert_eq!(dt.time(), t);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["date",{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["time",{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:380:183":{"id":"0:380:183","crate_id":0,"name":"Output","span":{"filename":"src/datetime/mod.rs","begin":[953,4],"end":[953,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}},"0:1771":{"id":"0:1771","crate_id":0,"name":null,"span":{"filename":"src/round.rs","begin":[47,0],"end":[75,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Timelike","id":"0:1867:1917","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Add","id":"2:2765:2072","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Duration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"T"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sub","id":"2:2770:2074","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Duration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"T"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"SubsecRound","id":"0:1768:1912","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"generic","inner":"T"},"items":["0:1773:6708","0:1774:6713"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1194":{"id":"0:1194","crate_id":0,"name":null,"span":{"filename":"src/naive/isoweek.rs","begin":[52,0],"end":[111,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"IsoWeek","id":"0:2448:1938","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1195:2230","0:1196:2918","0:1197:5393"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2686:225-0:2448:1938":{"id":"a:2:2686:225-0:2448:1938","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IsoWeek","id":"0:2448:1938","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2537-0:2797:1940":{"id":"b:2:2537-0:2797:1940","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2797:1940","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2540:126","2:2541:1457"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:300":{"id":"0:300","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[748,0],"end":[820,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["year_ce","num_days_from_ce"],"trait":{"name":"Datelike","id":"0:1848:1915","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:302:2230","0:303:1946","0:304:2231","0:305:2232","0:306:2233","0:307:2234","0:308:2235","0:309:1944","0:310:2236","0:311:2237","0:313:2238","0:315:2239","0:317:2240","0:319:2241","0:321:2242","0:323:2243"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2736:7564-0:2084:2779":{"id":"a:2:2736:7564-0:2084:2779","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:7564","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2084:2779","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2157:2507":{"id":"0:2157:2507","crate_id":0,"name":"Numeric","span":{"filename":"src/format/mod.rs","begin":[304,4],"end":[304,25]},"visibility":"default","docs":"Numeric item. Can be optionally padded to the maximal length (if any) when formatting;\nthe parser simply ignores any padded whitespace and zeroes.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":{"tuple":["0:2159:1583","0:2160:1584"]},"discriminant":null}},"0:1256:2539":{"id":"0:1256:2539","crate_id":0,"name":"second","span":{"filename":"src/naive/time/mod.rs","begin":[813,4],"end":[815,5]},"visibility":"default","docs":"Returns the second number from 0 to 59.\n\n# Example\n\n```\nuse chrono::{NaiveTime, Timelike};\n\nassert_eq!(NaiveTime::from_hms_opt(0, 0, 0).unwrap().second(), 0);\nassert_eq!(NaiveTime::from_hms_nano_opt(23, 56, 4, 12_345_678).unwrap().second(), 4);\n```\n\nThis method never returns 60 even when it is a leap second.\n([Why?](#leap-second-handling))\nUse the proper [formatting method](#method.format) to get a human-readable representation.\n\n```\n# use chrono::{NaiveTime, Timelike};\nlet leap = NaiveTime::from_hms_milli_opt(23, 59, 59, 1_000).unwrap();\nassert_eq!(leap.second(), 59);\nassert_eq!(leap.format(\"%H:%M:%S\").to_string(), \"23:59:60\");\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1976:2702":{"id":"0:1976:2702","crate_id":0,"name":"WeekFromSun","span":{"filename":"src/format/mod.rs","begin":[120,4],"end":[120,15]},"visibility":"default","docs":"Week number, where the week 1 starts at the first Sunday of January (FW=PW=2).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"b:2:2531-0:2466:1923":{"id":"b:2:2531-0:2466:1923","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2533:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1797:2847":{"id":"0:1797:2847","crate_id":0,"name":"description","span":{"filename":"src/round.rs","begin":[300,4],"end":[302,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2943:720":{"id":"0:2943:720","crate_id":0,"name":"hash","span":{"filename":"src/month.rs","begin":[30,44],"end":[30,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9297:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1198":{"id":"0:1198","crate_id":0,"name":null,"span":{"filename":"src/naive/isoweek.rs","begin":[134,0],"end":[145,1]},"visibility":"default","docs":"The `Debug` output of the ISO week `w` is the same as\n[`d.format(\"%G-W%V\")`](../format/strftime/index.html)\nwhere `d` is any `NaiveDate` value in that week.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(format!(\"{:?}\", NaiveDate::from_ymd_opt(2015,  9,  5).unwrap().iso_week()), \"2015-W36\");\nassert_eq!(format!(\"{:?}\", NaiveDate::from_ymd_opt(   0,  1,  3).unwrap().iso_week()), \"0000-W01\");\nassert_eq!(format!(\"{:?}\", NaiveDate::from_ymd_opt(9999, 12, 31).unwrap().iso_week()), \"9999-W52\");\n```\n\nISO 8601 requires an explicit sign for years before 1 BCE or after 9999 CE.\n\n```\n# use chrono::{NaiveDate, Datelike};\nassert_eq!(format!(\"{:?}\", NaiveDate::from_ymd_opt(    0,  1,  2).unwrap().iso_week()),  \"-0001-W52\");\nassert_eq!(format!(\"{:?}\", NaiveDate::from_ymd_opt(10000, 12, 31).unwrap().iso_week()), \"+10000-W52\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9069:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IsoWeek","id":"0:2448:1938","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1199:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1304-0:2466:1923":{"id":"0:1304-0:2466:1923","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[476,57],"end":[476,66]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"naive::NaiveTime","name":"NaiveTime","id":"0:2466:1923","glob":false}},"b:2:2240-0:1938:2508":{"id":"b:2:2240-0:1938:2508","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2234:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:1938:2508","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2242:6046"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2779":{"id":"0:2779","crate_id":0,"name":null,"span":{"filename":"src/offset/local/mod.rs","begin":[54,15],"end":[54,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Local","id":"0:2776:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2780:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1112":{"id":"0:1112","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1813,0],"end":[1817,1]},"visibility":"default","docs":"The default value for a NaiveDateTime is one with epoch 0\nthat is, 1st of January 1970 at 00:00:00.\n\n# Example\n\n```rust\nuse chrono::NaiveDateTime;\n\nlet default_date = NaiveDateTime::default();\nassert_eq!(default_date, NaiveDateTime::from_timestamp(0, 0));\n```","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2578:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1113:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2922:2884":{"id":"0:2922:2884","crate_id":0,"name":"October","span":{"filename":"src/month.rs","begin":[54,4],"end":[54,15]},"visibility":"default","docs":"October","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":{"expr":"9","value":"9"}}},"0:1049:2235":{"id":"0:1049:2235","crate_id":0,"name":"ordinal0","span":{"filename":"src/naive/datetime/mod.rs","begin":[1070,4],"end":[1072,5]},"visibility":"default","docs":"Returns the day of year starting from 0.\n\nThe return value ranges from 0 to 365. (The last day of year differs by years.)\n\nSee also the [`NaiveDate::ordinal0`](./struct.NaiveDate.html#method.ordinal0) method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Datelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2015, 9, 25).unwrap().and_hms_opt(12, 34, 56).unwrap();\nassert_eq!(dt.ordinal0(), 267);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1025:2401":{"id":"0:1025:2401","crate_id":0,"name":"checked_add_months","span":{"filename":"src/naive/datetime/mod.rs","begin":[647,4],"end":[649,5]},"visibility":"public","docs":"Adds given `Months` to the current date and time.\n\nReturns `None` when it will result in overflow.\n\nOverflow returns `None`.\n\n# Example\n\n```\nuse std::str::FromStr;\nuse chrono::{Months, NaiveDate, NaiveDateTime};\n\nassert_eq!(\n    NaiveDate::from_ymd_opt(2014, 1, 1).unwrap().and_hms_opt(1, 0, 0).unwrap()\n        .checked_add_months(Months::new(1)),\n    Some(NaiveDate::from_ymd_opt(2014, 2, 1).unwrap().and_hms_opt(1, 0, 0).unwrap())\n);\n\nassert_eq!(\n    NaiveDate::from_ymd_opt(2014, 1, 1).unwrap().and_hms_opt(1, 0, 0).unwrap()\n        .checked_add_months(Months::new(core::i32::MAX as u32 + 1)),\n    None\n);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"Months","id":"0:2945:1947","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2672:217-0:2203:2817":{"id":"a:2:2672:217-0:2203:2817","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2203:2817","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2269:720":{"id":"0:2269:720","crate_id":0,"name":"hash","span":{"filename":"src/format/parsed.rs","begin":[25,47],"end":[25,51]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9297:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1263":{"id":"0:1263","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[1018,0],"end":[1025,1]},"visibility":"default","docs":"An addition of `Duration` to `NaiveTime` wraps around and never overflows or underflows.\nIn particular the addition ignores integral number of days.\n\nAs a part of Chrono's [leap second handling](#leap-second-handling),\nthe addition assumes that **there is no leap second ever**,\nexcept when the `NaiveTime` itself represents a leap second\nin which case the assumption becomes that **there is exactly a single leap second ever**.\n\n# Example\n\n```\nuse chrono::{Duration, NaiveTime};\n\nlet from_hmsm = NaiveTime::from_hms_milli;\n\nassert_eq!(from_hmsm(3, 5, 7, 0) + Duration::zero(),                  from_hmsm(3, 5, 7, 0));\nassert_eq!(from_hmsm(3, 5, 7, 0) + Duration::seconds(1),              from_hmsm(3, 5, 8, 0));\nassert_eq!(from_hmsm(3, 5, 7, 0) + Duration::seconds(-1),             from_hmsm(3, 5, 6, 0));\nassert_eq!(from_hmsm(3, 5, 7, 0) + Duration::seconds(60 + 4),         from_hmsm(3, 6, 11, 0));\nassert_eq!(from_hmsm(3, 5, 7, 0) + Duration::seconds(7*60*60 - 6*60), from_hmsm(9, 59, 7, 0));\nassert_eq!(from_hmsm(3, 5, 7, 0) + Duration::milliseconds(80),        from_hmsm(3, 5, 7, 80));\nassert_eq!(from_hmsm(3, 5, 7, 950) + Duration::milliseconds(280),     from_hmsm(3, 5, 8, 230));\nassert_eq!(from_hmsm(3, 5, 7, 950) + Duration::milliseconds(-980),    from_hmsm(3, 5, 6, 970));\n```\n\nThe addition wraps around.\n\n```\n# use chrono::{Duration, NaiveTime};\n# let from_hmsm = NaiveTime::from_hms_milli;\nassert_eq!(from_hmsm(3, 5, 7, 0) + Duration::seconds(22*60*60), from_hmsm(1, 5, 7, 0));\nassert_eq!(from_hmsm(3, 5, 7, 0) + Duration::seconds(-8*60*60), from_hmsm(19, 5, 7, 0));\nassert_eq!(from_hmsm(3, 5, 7, 0) + Duration::days(800),         from_hmsm(3, 5, 7, 0));\n```\n\nLeap seconds are handled, but the addition assumes that it is the only leap second happened.\n\n```\n# use chrono::{Duration, NaiveTime};\n# let from_hmsm = NaiveTime::from_hms_milli;\nlet leap = from_hmsm(3, 5, 59, 1_300);\nassert_eq!(leap + Duration::zero(),             from_hmsm(3, 5, 59, 1_300));\nassert_eq!(leap + Duration::milliseconds(-500), from_hmsm(3, 5, 59, 800));\nassert_eq!(leap + Duration::milliseconds(500),  from_hmsm(3, 5, 59, 1_800));\nassert_eq!(leap + Duration::milliseconds(800),  from_hmsm(3, 6, 0, 100));\nassert_eq!(leap + Duration::seconds(10),        from_hmsm(3, 6, 9, 300));\nassert_eq!(leap + Duration::seconds(-10),       from_hmsm(3, 5, 50, 300));\nassert_eq!(leap + Duration::days(1),            from_hmsm(3, 5, 59, 300));\n```","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Add","id":"2:2765:2072","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Duration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1264:183","0:1265:271"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:66:2144":{"id":"0:66:2144","crate_id":0,"name":"and_hms_milli_opt","span":{"filename":"src/date.rs","begin":[130,4],"end":[138,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date, hour, minute, second and millisecond.\nThe millisecond part can exceed 1,000 in order to represent the leap second.\nThe offset in the current date is preserved.\n\nReturns `None` on invalid hour, minute, second and/or millisecond.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["hour",{"kind":"primitive","inner":"u32"}],["min",{"kind":"primitive","inner":"u32"}],["sec",{"kind":"primitive","inner":"u32"}],["milli",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2088":{"id":"0:2088","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[254,16],"end":[254,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2084:2779","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2089:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:918":{"id":"0:918","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[1705,0],"end":[1711,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Add","id":"2:2765:2072","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Days","id":"0:2305:1937","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:919:183","0:920:271"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2842":{"id":"0:2842","crate_id":0,"name":null,"span":{"filename":"src/round.rs","begin":[241,23],"end":[241,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2301:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RoundingError","id":"0:2830:1943","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RoundingError","id":"0:2830:1943","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2843:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2537-0:1959:2507":{"id":"b:2:2537-0:1959:2507","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:1959:2507","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2540:126","2:2541:1457"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:821":{"id":"0:821","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[67,0],"end":[121,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"NaiveWeek","id":"0:2300:1939","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:822:3905","0:823:3908","0:824:2269"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:905:2242":{"id":"0:905:2242","crate_id":0,"name":"with_ordinal","span":{"filename":"src/naive/date.rs","begin":[1585,4],"end":[1587,5]},"visibility":"default","docs":"Makes a new `NaiveDate` with the day of year (starting from 1) changed.\n\nReturns `None` when the resulting `NaiveDate` would be invalid.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(NaiveDate::from_ymd_opt(2015, 1, 1).unwrap().with_ordinal(60),\n           Some(NaiveDate::from_ymd_opt(2015, 3, 1).unwrap()));\nassert_eq!(NaiveDate::from_ymd_opt(2015, 1, 1).unwrap().with_ordinal(366),\n           None); // 2015 had only 365 days\n\nassert_eq!(NaiveDate::from_ymd_opt(2016, 1, 1).unwrap().with_ordinal(60),\n           Some(NaiveDate::from_ymd_opt(2016, 2, 29).unwrap()));\nassert_eq!(NaiveDate::from_ymd_opt(2016, 1, 1).unwrap().with_ordinal(366),\n           Some(NaiveDate::from_ymd_opt(2016, 12, 31).unwrap()));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["ordinal",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1651":{"id":"0:1651","crate_id":0,"name":null,"span":{"filename":"src/offset/local/mod.rs","begin":[59,0],"end":[93,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Local","id":"0:2776:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1652:2256","0:1653:6017"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1662:3179":{"id":"0:1662:3179","crate_id":0,"name":"offset_from_utc_datetime","span":{"filename":"src/offset/local/mod.rs","begin":[117,4],"end":[119,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["utc",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8179:7659-0:2203:2817":{"id":"a:2:8179:7659-0:2203:2817","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8179:7659","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2203:2817","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2385":{"id":"0:2385","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[82,9],"end":[82,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2682:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2848:1918":{"id":"0:2848:1918","crate_id":0,"name":"Weekday","span":{"filename":"src/weekday.rs","begin":[15,0],"end":[30,1]},"visibility":"public","docs":"The day of week.\n\nThe order of the days of week depends on the context.\n(This is why this type does *not* implement `PartialOrd` or `Ord` traits.)\nOne should prefer `*_from_monday` or `*_from_sunday` methods to get the correct result.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:2849:2888","0:2852:2889","0:2855:2890","0:2858:2891","0:2861:2892","0:2864:2893","0:2867:2887"],"impls":["0:1804","a:2:8179:7659-0:2848:1918","a:2:2672:217-0:2848:1918","a:2:2736:7564-0:2848:1918","a:2:2686:225-0:2848:1918","a:2:8178:7660-0:2848:1918","b:2:2531-0:2848:1918","b:2:2542-0:2848:1918","b:2:2527-0:2848:1918","b:2:3331-0:2848:1918","b:2:2240-0:2848:1918","b:2:2537-0:2848:1918","b:2:2237-0:2848:1918","b:5:5633-0:2848:1918","b:5:674-0:2848:1918","0:766","0:2879","0:2871","0:1814","0:1812","0:2870","0:2881","0:2873","0:2876","0:2874","0:2877"]}},"0:2913:2881":{"id":"0:2913:2881","crate_id":0,"name":"July","span":{"filename":"src/month.rs","begin":[48,4],"end":[48,12]},"visibility":"default","docs":"July","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":{"expr":"6","value":"6"}}},"0:2225":{"id":"0:2225","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[359,23],"end":[359,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2301:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2203:2817","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2203:2817","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2226:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1014:1926":{"id":"0:1014:1926","crate_id":0,"name":"date","span":{"filename":"src/naive/datetime/mod.rs","begin":[338,4],"end":[340,5]},"visibility":"public","docs":"Retrieves a date component.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet dt = NaiveDate::from_ymd_opt(2016, 7, 8).unwrap().and_hms_opt(9, 10, 11).unwrap();\nassert_eq!(dt.date(), NaiveDate::from_ymd_opt(2016, 7, 8).unwrap());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2480":{"id":"0:2480","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[190,42],"end":[190,45]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["min","max","clamp"],"trait":{"name":"Ord","id":"2:2337:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2481:422"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2686:225-0:2324:1921":{"id":"a:2:2686:225-0:2324:1921","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2090":{"id":"0:2090","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[254,23],"end":[254,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2682:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2084:2779","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1348:5931":{"id":"0:1348:5931","crate_id":0,"name":"offset_from_local_date","span":{"filename":"src/offset/fixed.rs","begin":[114,4],"end":[116,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["_local",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2797:1940","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3333:1470":{"id":"2:3333:1470","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"2:39008:11644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:562:3070":{"id":"0:562:3070","crate_id":0,"name":"set_year_mod_100","span":{"filename":"src/format/parsed.rs","begin":[151,4],"end":[156,5]},"visibility":"public","docs":"Tries to set the [`year_mod_100`](#structfield.year_mod_100) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["value",{"kind":"primitive","inner":"i64"}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:455:1935","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2527-0:1938:2508":{"id":"b:2:2527-0:1938:2508","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:1938:2508","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2530:2607"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:572:3091":{"id":"0:572:3091","crate_id":0,"name":"set_day","span":{"filename":"src/format/parsed.rs","begin":[220,4],"end":[222,5]},"visibility":"public","docs":"Tries to set the [`day`](#structfield.day) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["value",{"kind":"primitive","inner":"i64"}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:455:1935","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2537-0:2291:2080":{"id":"b:2:2537-0:2291:2080","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2291:2080","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:2540:126","2:2541:1457"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1952":{"id":"0:1952","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[76,33],"end":[76,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2306:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:1938:2508","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1298-0:2466:1923":{"id":"0:1298-0:2466:1923","crate_id":0,"name":null,"span":{"filename":"src/naive/mod.rs","begin":[21,0],"end":[21,30]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::time::NaiveTime","name":"NaiveTime","id":"0:2466:1923","glob":false}},"0:2938":{"id":"0:2938","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[30,30],"end":[30,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:2894:1916","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2939:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1016:2353":{"id":"0:1016:2353","crate_id":0,"name":"timestamp","span":{"filename":"src/naive/datetime/mod.rs","begin":[380,4],"end":[385,5]},"visibility":"public","docs":"Returns the number of non-leap seconds since the midnight on January 1, 1970.\n\nNote that this does *not* account for the timezone!\nThe true \"UNIX timestamp\" would count seconds since the midnight *UTC* on the epoch.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet dt = NaiveDate::from_ymd_opt(1970, 1, 1).unwrap().and_hms_milli_opt(0, 0, 1, 980).unwrap();\nassert_eq!(dt.timestamp(), 1);\n\nlet dt = NaiveDate::from_ymd_opt(2001, 9, 9).unwrap().and_hms_opt(1, 46, 40).unwrap();\nassert_eq!(dt.timestamp(), 1_000_000_000);\n\nlet dt = NaiveDate::from_ymd_opt(1969, 12, 31).unwrap().and_hms_opt(23, 59, 59).unwrap();\nassert_eq!(dt.timestamp(), -1);\n\nlet dt = NaiveDate::from_ymd_opt(-1, 1, 1).unwrap().and_hms_opt(0, 0, 0).unwrap();\nassert_eq!(dt.timestamp(), -62198755200);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:388:183":{"id":"0:388:183","crate_id":0,"name":"Output","span":{"filename":"src/datetime/mod.rs","begin":[970,4],"end":[970,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}},"0:2948":{"id":"0:2948","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[194,9],"end":[194,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Months","id":"0:2945:1947","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2949:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:912":{"id":"0:912","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[1652,0],"end":[1678,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Add","id":"2:2765:2072","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Months","id":"0:2945:1947","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:913:183","0:914:271"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2470":{"id":"0:2470","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[190,9],"end":[190,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2301:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2471:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:115:2236":{"id":"0:115:2236","crate_id":0,"name":"iso_week","span":{"filename":"src/date.rs","begin":[407,4],"end":[409,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"IsoWeek","id":"0:2448:1938","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1713:2134":{"id":"0:1713:2134","crate_id":0,"name":"and_hms_opt","span":{"filename":"src/offset/mod.rs","begin":[109,4],"end":[116,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date, hour, minute and second.\nThe offset in the current date is preserved.\n\nPropagates any error. Ambiguous result would be discarded.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["hour",{"kind":"primitive","inner":"u32"}],["min",{"kind":"primitive","inner":"u32"}],["sec",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2797:1940","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2537-0:2964:1948":{"id":"b:2:2537-0:2964:1948","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseMonthError","id":"0:2964:1948","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2540:126","2:2541:1457"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2159:1583":{"id":"0:2159:1583","crate_id":0,"name":"0","span":{"filename":"src/format/mod.rs","begin":[304,12],"end":[304,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:1959:2507","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"2:11974:30392":{"id":"2:11974:30392","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:11872:411","self::pattern":"2:11573:1962"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11578:7280","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:118:2238":{"id":"0:118:2238","crate_id":0,"name":"with_month","span":{"filename":"src/date.rs","begin":[417,4],"end":[419,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["month",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2075:604":{"id":"0:2075:604","crate_id":0,"name":"eq","span":{"filename":"src/format/mod.rs","begin":[170,16],"end":[170,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2029:2284","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:254:2204":{"id":"0:254:2204","crate_id":0,"name":"years_since","span":{"filename":"src/datetime/mod.rs","begin":[399,4],"end":[413,5]},"visibility":"public","docs":"Retrieve the elapsed years from now to the given [`DateTime`].","links":{"`DateTime`":"0:1915:1913"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["base",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u32"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2054:2765":{"id":"0:2054:2765","crate_id":0,"name":"TimezoneOffsetDoubleColon","span":{"filename":"src/format/mod.rs","begin":[221,4],"end":[221,29]},"visibility":"default","docs":"Offset from the local time to UTC with seconds (`+09:00:00` or `-04:00:00` or `+00:00:00`).\n\nIn the parser, the colon can be omitted and/or surrounded with any amount of whitespace.\nThe offset is limited from `-24:00:00` to `+24:00:00`,\nwhich is the same as [`FixedOffset`](../offset/struct.FixedOffset.html)'s range.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:173:659":{"id":"0:173:659","crate_id":0,"name":"fmt","span":{"filename":"src/date.rs","begin":[529,4],"end":[532,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:9044:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:9033:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1018:2364":{"id":"0:1018:2364","crate_id":0,"name":"timestamp_millis","span":{"filename":"src/naive/datetime/mod.rs","begin":[412,4],"end":[415,5]},"visibility":"public","docs":"Returns the number of non-leap *milliseconds* since midnight on January 1, 1970.\n\nNote that this does *not* account for the timezone!\nThe true \"UNIX timestamp\" would count seconds since the midnight *UTC* on the epoch.\n\nNote also that this does reduce the number of years that can be\nrepresented from ~584 Billion to ~584 Million. (If this is a problem,\nplease file an issue to let me know what domain needs millisecond\nprecision over billions of years, I'm curious.)\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet dt = NaiveDate::from_ymd_opt(1970, 1, 1).unwrap().and_hms_milli_opt(0, 0, 1, 444).unwrap();\nassert_eq!(dt.timestamp_millis(), 1_444);\n\nlet dt = NaiveDate::from_ymd_opt(2001, 9, 9).unwrap().and_hms_milli_opt(1, 46, 40, 555).unwrap();\nassert_eq!(dt.timestamp_millis(), 1_000_000_000_555);\n\nlet dt = NaiveDate::from_ymd_opt(1969, 12, 31).unwrap().and_hms_milli_opt(23, 59, 59, 100).unwrap();\nassert_eq!(dt.timestamp_millis(), -900);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2542-0:2324:1921":{"id":"b:2:2542-0:2324:1921","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:126","2:2546:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8178:7660-0:2448:1938":{"id":"a:2:8178:7660-0:2448:1938","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8178:7660","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IsoWeek","id":"0:2448:1938","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2672:217-0:1888:1914":{"id":"a:2:2672:217-0:1888:1914","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SecondsFormat","id":"0:1888:1914","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1665:2125":{"id":"0:1665:2125","crate_id":0,"name":"from_local_datetime","span":{"filename":"src/offset/local/mod.rs","begin":[151,4],"end":[153,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(all(target_arch = \"wasm32\", feature = \"wasmbind\",\nnot(any(target_os = \"emscripten\", target_os = \"wasi\")))))]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["local",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2797:1940","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Local","id":"0:2776:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2240-0:2894:1916":{"id":"b:2:2240-0:2894:1916","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2234:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:2894:1916","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2242:6046"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2949:415":{"id":"0:2949:415","crate_id":0,"name":"clone","span":{"filename":"src/month.rs","begin":[194,9],"end":[194,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Months","id":"0:2945:1947","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5373:39492":{"id":"5:5373:39492","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:279:2663","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:6988:8447","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Box","id":"5:279:2663","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:6988:8447","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2892":{"id":"0:2892","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[168,27],"end":[168,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2306:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:2884:1945","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1259:2542":{"id":"0:1259:2542","crate_id":0,"name":"with_minute","span":{"filename":"src/naive/time/mod.rs","begin":[881,4],"end":[887,5]},"visibility":"default","docs":"Makes a new `NaiveTime` with the minute number changed.\n\nReturns `None` when the resulting `NaiveTime` would be invalid.\n\n# Example\n\n```\nuse chrono::{NaiveTime, Timelike};\n\nlet dt = NaiveTime::from_hms_nano_opt(23, 56, 4, 12_345_678).unwrap();\nassert_eq!(dt.with_minute(45), Some(NaiveTime::from_hms_nano_opt(23, 45, 4, 12_345_678).unwrap()));\nassert_eq!(dt.with_minute(60), None);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["min",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2240-0:2186:1934":{"id":"b:2:2240-0:2186:1934","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2234:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2186:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2242:6046"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2237-0:2797:1940":{"id":"b:2:2237-0:2797:1940","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2231:96","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2797:1940","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2239:2071"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2542-0:2884:1945":{"id":"b:2:2542-0:2884:1945","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:2884:1945","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:126","2:2546:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:674-0:2305:1937":{"id":"b:5:674-0:2305:1937","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:670:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Days","id":"0:2305:1937","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:676:8076","5:677:8077","5:678:8078"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:758:929":{"id":"0:758:929","crate_id":0,"name":"new","span":{"filename":"src/format/mod.rs","begin":[870,4],"end":[879,5]},"visibility":"public","docs":"Makes a new `DelayedFormat` value out of local date and time.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["date",{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}],["time",{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}],["items",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2291:2080","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:5633-0:2830:1943":{"id":"b:5:5633-0:2830:1943","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9074:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5631:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RoundingError","id":"0:2830:1943","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5635:1434"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:250:2196":{"id":"0:250:2196","crate_id":0,"name":"signed_duration_since","span":{"filename":"src/datetime/mod.rs","begin":[382,4],"end":[384,5]},"visibility":"public","docs":"Subtracts another `DateTime` from the current date and time.\nThis does not overflow or underflow at all.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz2"}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Tz2","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:674-0:2894:1916":{"id":"b:5:674-0:2894:1916","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:670:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:2894:1916","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:676:8076","5:677:8077","5:678:8078"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2962":{"id":"0:2962","crate_id":0,"name":null,"span":{"filename":"src/month.rs","begin":[194,50],"end":[194,60]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","ge","le","lt"],"trait":{"name":"PartialOrd","id":"2:2343:186","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Months","id":"0:2945:1947","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Months","id":"0:2945:1947","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2963:1023"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1753-0:1720:1924":{"id":"0:1753-0:1720:1924","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[484,43],"end":[484,49]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"offset::Offset","name":"Offset","id":"0:1720:1924","glob":false}},"2:11901:13181":{"id":"2:11901:13181","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Lines","id":"2:42899:7315","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:674-0:2382:1922":{"id":"b:5:674-0:2382:1922","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:670:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:676:8076","5:677:8077","5:678:8078"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2324:1921":{"id":"0:2324:1921","crate_id":0,"name":"NaiveDate","span":{"filename":"src/naive/date.rs","begin":[189,0],"end":[191,1]},"visibility":"public","docs":"ISO 8601 calendar date without timezone.\nAllows for every [proleptic Gregorian date](#calendar-date)\nfrom Jan 1, 262145 BCE to Dec 31, 262143 CE.\nAlso supports the conversion from ISO 8601 ordinal and week date.\n\n# Calendar Date\n\nThe ISO 8601 **calendar date** follows the proleptic Gregorian calendar.\nIt is like a normal civil calendar but note some slight differences:\n\n* Dates before the Gregorian calendar's inception in 1582 are defined via the extrapolation.\n  Be careful, as historical dates are often noted in the Julian calendar and others\n  and the transition to Gregorian may differ across countries (as late as early 20C).\n\n  (Some example: Both Shakespeare from Britain and Cervantes from Spain seemingly died\n  on the same calendar date---April 23, 1616---but in the different calendar.\n  Britain used the Julian calendar at that time, so Shakespeare's death is later.)\n\n* ISO 8601 calendars has the year 0, which is 1 BCE (a year before 1 CE).\n  If you need a typical BCE/BC and CE/AD notation for year numbers,\n  use the [`Datelike::year_ce`](../trait.Datelike.html#method.year_ce) method.\n\n# Week Date\n\nThe ISO 8601 **week date** is a triple of year number, week number\nand [day of the week](../enum.Weekday.html) with the following rules:\n\n* A week consists of Monday through Sunday, and is always numbered within some year.\n  The week number ranges from 1 to 52 or 53 depending on the year.\n\n* The week 1 of given year is defined as the first week containing January 4 of that year,\n  or equivalently, the first week containing four or more days in that year.\n\n* The year number in the week date may *not* correspond to the actual Gregorian year.\n  For example, January 3, 2016 (Sunday) was on the last (53rd) week of 2015.\n\nChrono's date types default to the ISO 8601 [calendar date](#calendar-date),\nbut [`Datelike::iso_week`](../trait.Datelike.html#tymethod.iso_week) and\n[`Datelike::weekday`](../trait.Datelike.html#tymethod.weekday) methods\ncan be used to get the corresponding week date.\n\n# Ordinal Date\n\nThe ISO 8601 **ordinal date** is a pair of year number and day of the year (\"ordinal\").\nThe ordinal number ranges from 1 to 365 or 366 depending on the year.\nThe year number is the same as that of the [calendar date](#calendar-date).\n\nThis is currently the internal format of Chrono's date types.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:829","a:2:8179:7659-0:2324:1921","a:2:2672:217-0:2324:1921","a:2:2736:7564-0:2324:1921","a:2:2686:225-0:2324:1921","a:2:8178:7660-0:2324:1921","b:2:2531-0:2324:1921","b:2:2542-0:2324:1921","b:2:2527-0:2324:1921","b:2:3331-0:2324:1921","b:2:2240-0:2324:1921","b:2:2537-0:2324:1921","b:2:2237-0:2324:1921","b:5:5633-0:2324:1921","b:5:674-0:2324:1921","0:924","0:929","0:2330","0:2327","0:955","0:2337","0:2335","0:949","0:907","0:2340","0:890","0:2326","0:918","0:2329","0:2339","0:921","0:2332","0:912","0:910","0:951","0:927","0:946","0:915"]}},"0:2878:415":{"id":"0:2878:415","crate_id":0,"name":"clone","span":{"filename":"src/weekday.rs","begin":[11,30],"end":[11,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2848:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11993:30154":{"id":"2:11993:30154","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1941:2509":{"id":"0:1941:2509","crate_id":0,"name":"Zero","span":{"filename":"src/format/mod.rs","begin":[81,4],"end":[81,8]},"visibility":"default","docs":"Zero (`0`) padding.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"a:2:2736:7564-0:2016:2727":{"id":"a:2:2736:7564-0:2016:2727","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:7564","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:2016:2727","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2008":{"id":"0:2008","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[99,27],"end":[99,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2683:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:1959:2507","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3331-0:2291:2080":{"id":"b:2:3331-0:2291:2080","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3329:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2291:2080","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3333:1470"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:568:3083":{"id":"0:568:3083","crate_id":0,"name":"set_week_from_mon","span":{"filename":"src/format/parsed.rs","begin":[196,4],"end":[198,5]},"visibility":"public","docs":"Tries to set the [`week_from_mon`](#structfield.week_from_mon) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["value",{"kind":"primitive","inner":"i64"}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:455:1935","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1943:2674":{"id":"0:1943:2674","crate_id":0,"name":"Space","span":{"filename":"src/format/mod.rs","begin":[83,4],"end":[83,9]},"visibility":"default","docs":"Space padding.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:838:3145":{"id":"0:838:3145","crate_id":0,"name":"from_isoywd_opt","span":{"filename":"src/naive/date.rs","begin":[378,4],"end":[407,5]},"visibility":"public","docs":"Makes a new `NaiveDate` from the [ISO week date](#week-date)\n(year, week number and day of the week).\nThe resulting `NaiveDate` may have a different year from the input year.\n\nReturns `None` on the out-of-range date and/or invalid week number.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Weekday};\n\nlet from_ymd = NaiveDate::from_ymd;\nlet from_isoywd_opt = NaiveDate::from_isoywd_opt;\n\nassert_eq!(from_isoywd_opt(2015, 0, Weekday::Sun), None);\nassert_eq!(from_isoywd_opt(2015, 10, Weekday::Sun), Some(from_ymd(2015, 3, 8)));\nassert_eq!(from_isoywd_opt(2015, 30, Weekday::Mon), Some(from_ymd(2015, 7, 20)));\nassert_eq!(from_isoywd_opt(2015, 60, Weekday::Mon), None);\n\nassert_eq!(from_isoywd_opt(400000, 10, Weekday::Fri), None);\nassert_eq!(from_isoywd_opt(-400000, 10, Weekday::Sat), None);\n```\n\nThe year number of ISO week date may differ from that of the calendar date.\n\n```\n# use chrono::{NaiveDate, Weekday};\n# let from_ymd = NaiveDate::from_ymd;\n# let from_isoywd_opt = NaiveDate::from_isoywd_opt;\n//           Mo Tu We Th Fr Sa Su\n// 2014-W52  22 23 24 25 26 27 28    has 4+ days of new year,\n// 2015-W01  29 30 31  1  2  3  4 <- so this is the first week\nassert_eq!(from_isoywd_opt(2014, 52, Weekday::Sun), Some(from_ymd(2014, 12, 28)));\nassert_eq!(from_isoywd_opt(2014, 53, Weekday::Mon), None);\nassert_eq!(from_isoywd_opt(2015, 1, Weekday::Mon), Some(from_ymd(2014, 12, 29)));\n\n// 2015-W52  21 22 23 24 25 26 27    has 4+ days of old year,\n// 2015-W53  28 29 30 31  1  2  3 <- so this is the last week\n// 2016-W01   4  5  6  7  8  9 10\nassert_eq!(from_isoywd_opt(2015, 52, Weekday::Sun), Some(from_ymd(2015, 12, 27)));\nassert_eq!(from_isoywd_opt(2015, 53, Weekday::Sun), Some(from_ymd(2016, 1, 3)));\nassert_eq!(from_isoywd_opt(2015, 54, Weekday::Mon), None);\nassert_eq!(from_isoywd_opt(2016, 1, Weekday::Mon), Some(from_ymd(2016, 1, 4)));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["year",{"kind":"primitive","inner":"i32"}],["week",{"kind":"primitive","inner":"u32"}],["weekday",{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2848:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1992:2519":{"id":"0:1992:2519","crate_id":0,"name":"Minute","span":{"filename":"src/format/mod.rs","begin":[136,4],"end":[136,10]},"visibility":"default","docs":"The number of minutes since the last whole hour (FW=PW=2).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:2450":{"id":"0:2450","crate_id":0,"name":null,"span":{"filename":"src/naive/isoweek.rs","begin":[19,9],"end":[19,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2682:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IsoWeek","id":"0:2448:1938","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11907:3275":{"id":"2:11907:3275","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:11872:411","self::pattern":"2:11573:1962"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11578:7280","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8179:7659-0:2783:1920":{"id":"a:2:8179:7659-0:2783:1920","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8179:7659","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:2783:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:315:2239":{"id":"0:315:2239","crate_id":0,"name":"with_month0","span":{"filename":"src/datetime/mod.rs","begin":[797,4],"end":[799,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["month0",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11994:30153":{"id":"2:11994:30153","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:870:2169":{"id":"0:870:2169","crate_id":0,"name":"succ_opt","span":{"filename":"src/naive/date.rs","begin":[949,4],"end":[951,5]},"visibility":"public","docs":"Makes a new `NaiveDate` for the next calendar date.\n\nReturns `None` when `self` is the last representable date.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nassert_eq!(NaiveDate::from_ymd_opt(2015, 6, 3).unwrap().succ_opt(),\n           Some(NaiveDate::from_ymd_opt(2015, 6, 4).unwrap()));\nassert_eq!(NaiveDate::MAX.succ_opt(), None);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2686:225-0:2382:1922":{"id":"a:2:2686:225-0:2382:1922","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1042":{"id":"0:1042","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[942,0],"end":[1251,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["year_ce","num_days_from_ce"],"trait":{"name":"Datelike","id":"0:1848:1915","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1043:2230","0:1044:1946","0:1045:2231","0:1046:2232","0:1047:2233","0:1048:2234","0:1049:2235","0:1050:1944","0:1051:2236","0:1052:2237","0:1054:2238","0:1056:2239","0:1058:2240","0:1060:2241","0:1062:2242","0:1064:2243"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1048:2234":{"id":"0:1048:2234","crate_id":0,"name":"ordinal","span":{"filename":"src/naive/datetime/mod.rs","begin":[1051,4],"end":[1053,5]},"visibility":"default","docs":"Returns the day of year starting from 1.\n\nThe return value ranges from 1 to 366. (The last day of year differs by years.)\n\nSee also the [`NaiveDate::ordinal`](./struct.NaiveDate.html#method.ordinal) method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Datelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2015, 9, 25).unwrap().and_hms_opt(12, 34, 56).unwrap();\nassert_eq!(dt.ordinal(), 268);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:863:2162":{"id":"0:863:2162","crate_id":0,"name":"and_hms_nano_opt","span":{"filename":"src/naive/date.rs","begin":[883,4],"end":[891,5]},"visibility":"public","docs":"Makes a new `NaiveDateTime` from the current date, hour, minute, second and nanosecond.\n\nThe nanosecond part can exceed 1,000,000,000\nin order to represent the [leap second](./struct.NaiveTime.html#leap-second-handling).\n\nReturns `None` on invalid hour, minute, second and/or nanosecond.\n\n# Example\n\n```\nuse chrono::NaiveDate;\n\nlet d = NaiveDate::from_ymd_opt(2015, 6, 3).unwrap();\nassert!(d.and_hms_nano_opt(12, 34, 56,   789_012_345).is_some());\nassert!(d.and_hms_nano_opt(12, 34, 59, 1_789_012_345).is_some()); // leap second\nassert!(d.and_hms_nano_opt(12, 34, 59, 2_789_012_345).is_none());\nassert!(d.and_hms_nano_opt(12, 34, 60,   789_012_345).is_none());\nassert!(d.and_hms_nano_opt(12, 60, 56,   789_012_345).is_none());\nassert!(d.and_hms_nano_opt(24, 34, 56,   789_012_345).is_none());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["hour",{"kind":"primitive","inner":"u32"}],["min",{"kind":"primitive","inner":"u32"}],["sec",{"kind":"primitive","inner":"u32"}],["nano",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:674-0:2945:1947":{"id":"b:5:674-0:2945:1947","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:670:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Months","id":"0:2945:1947","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:676:8076","5:677:8077","5:678:8078"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3331-0:2848:1918":{"id":"b:2:3331-0:2848:1918","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3329:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2848:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3333:1470"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:25-0:2466:1923":{"id":"0:25-0:2466:1923","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[451,46],"end":[451,55]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::NaiveTime","name":"NaiveTime","id":"0:2466:1923","glob":false}},"b:2:2527-0:2291:2080":{"id":"b:2:2527-0:2291:2080","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2291:2080","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:2530:2607"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8179:7659-0:1888:1914":{"id":"a:2:8179:7659-0:1888:1914","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8179:7659","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SecondsFormat","id":"0:1888:1914","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2462:415":{"id":"0:2462:415","crate_id":0,"name":"clone","span":{"filename":"src/naive/isoweek.rs","begin":[19,47],"end":[19,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"IsoWeek","id":"0:2448:1938","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2092:604":{"id":"0:2092:604","crate_id":0,"name":"eq","span":{"filename":"src/format/mod.rs","begin":[254,23],"end":[254,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2084:2779","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2874":{"id":"0:2874","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[11,20],"end":[11,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2306:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2848:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1747:2186":{"id":"0:1747:2186","crate_id":0,"name":"from_utc_date","span":{"filename":"src/offset/mod.rs","begin":[480,4],"end":[482,5]},"visibility":"default","docs":"Converts the UTC `NaiveDate` to the local time.\nThe UTC is continuous and thus this cannot fail (but can give the duplicate local time).","links":{},"attrs":["#[allow(clippy :: wrong_self_convention)]","#[deprecated(since = \"0.4.23\", note = \"use `from_utc_datetime()` instead\")]","#[allow(deprecated)]"],"deprecation":{"since":"0.4.23","note":"use `from_utc_datetime()` instead"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["utc",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:674-0:2448:1938":{"id":"b:5:674-0:2448:1938","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:670:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IsoWeek","id":"0:2448:1938","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:676:8076","5:677:8077","5:678:8078"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8179:7659-0:1938:2508":{"id":"a:2:8179:7659-0:1938:2508","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8179:7659","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:1938:2508","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2672:217-0:2964:1948":{"id":"a:2:2672:217-0:2964:1948","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseMonthError","id":"0:2964:1948","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:358:720":{"id":"0:358:720","crate_id":0,"name":"hash","span":{"filename":"src/datetime/mod.rs","begin":[901,4],"end":[903,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"hash::Hasher","id":"2:9297:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:75:2169":{"id":"0:75:2169","crate_id":0,"name":"succ_opt","span":{"filename":"src/date.rs","begin":[207,4],"end":[209,5]},"visibility":"public","docs":"Makes a new `Date` for the next date.\n\nReturns `None` when `self` is the last representable date.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2537-0:2234:2283":{"id":"b:2:2537-0:2234:2283","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Parsed","id":"0:2234:2283","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2540:126","2:2541:1457"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1255:2538":{"id":"0:1255:2538","crate_id":0,"name":"minute","span":{"filename":"src/naive/time/mod.rs","begin":[787,4],"end":[789,5]},"visibility":"default","docs":"Returns the minute number from 0 to 59.\n\n# Example\n\n```\nuse chrono::{NaiveTime, Timelike};\n\nassert_eq!(NaiveTime::from_hms_opt(0, 0, 0).unwrap().minute(), 0);\nassert_eq!(NaiveTime::from_hms_nano_opt(23, 56, 4, 12_345_678).unwrap().minute(), 56);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1300-0:2305:1937":{"id":"0:1300-0:2305:1937","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[476,16],"end":[476,20]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"naive::Days","name":"Days","id":"0:2305:1937","glob":false}},"0:1685":{"id":"0:1685","crate_id":0,"name":null,"span":{"filename":"src/offset/utc.rs","begin":[50,0],"end":[85,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"clock\")]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:2783:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1686:2256","0:1687:6017"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1864:2242":{"id":"0:1864:2242","crate_id":0,"name":"with_ordinal","span":{"filename":"src/traits.rs","begin":[84,4],"end":[84,57]},"visibility":"default","docs":"Makes a new value with the day of year (starting from 1) changed.\n\nReturns `None` when the resulting value would be invalid.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["ordinal",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2191":{"id":"0:2191","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[348,16],"end":[348,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2186:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2192:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1285":{"id":"0:1285","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[1290,0],"end":[1294,1]},"visibility":"default","docs":"The default value for a NaiveTime is midnight, 00:00:00 exactly.\n\n# Example\n\n```rust\nuse chrono::NaiveTime;\n\nlet default_time = NaiveTime::default();\nassert_eq!(default_time, NaiveTime::from_hms_opt(0, 0, 0).unwrap());\n```","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2578:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1286:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2531-0:2776:1909":{"id":"b:2:2531-0:2776:1909","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Local","id":"0:2776:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2533:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1986:2711":{"id":"0:1986:2711","crate_id":0,"name":"Ordinal","span":{"filename":"src/format/mod.rs","begin":[130,4],"end":[130,11]},"visibility":"default","docs":"Day of the year (FW=PW=3).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:1839:659":{"id":"0:1839:659","crate_id":0,"name":"fmt","span":{"filename":"src/month.rs","begin":[212,4],"end":[214,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:9044:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:9033:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2686:225-0:2485:1919":{"id":"a:2:2686:225-0:2485:1919","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1863:2241":{"id":"0:1863:2241","crate_id":0,"name":"with_day0","span":{"filename":"src/traits.rs","begin":[79,4],"end":[79,51]},"visibility":"default","docs":"Makes a new value with the day of month (starting from 0) changed.\n\nReturns `None` when the resulting value would be invalid.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["day0",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:823:3908":{"id":"0:823:3908","crate_id":0,"name":"last_day","span":{"filename":"src/naive/date.rs","begin":[99,4],"end":[101,5]},"visibility":"public","docs":"Returns a date representing the last day of the week.\n\n# Examples\n\n```\nuse chrono::{NaiveDate, Weekday};\n\nlet date = NaiveDate::from_ymd_opt(2022, 4, 18).unwrap();\nlet week = date.week(Weekday::Mon);\nassert!(week.last_day() >= date);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11902:38829":{"id":"2:11902:38829","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LinesAny","id":"2:42909:7317","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11998:38844":{"id":"2:11998:38844","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4517:38844"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeUnicode","id":"2:42962:7331","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:907":{"id":"0:907","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[1636,0],"end":[1643,1]},"visibility":"default","docs":"An addition of `Duration` to `NaiveDate` discards the fractional days,\nrounding to the closest integral number of days towards `Duration::zero()`.\n\nPanics on underflow or overflow.\nUse [`NaiveDate::checked_add_signed`](#method.checked_add_signed) to detect that.\n\n# Example\n\n```\nuse chrono::{Duration, NaiveDate};\n\nlet from_ymd = NaiveDate::from_ymd;\n\nassert_eq!(from_ymd(2014, 1, 1) + Duration::zero(),             from_ymd(2014, 1, 1));\nassert_eq!(from_ymd(2014, 1, 1) + Duration::seconds(86399),     from_ymd(2014, 1, 1));\nassert_eq!(from_ymd(2014, 1, 1) + Duration::seconds(-86399),    from_ymd(2014, 1, 1));\nassert_eq!(from_ymd(2014, 1, 1) + Duration::days(1),            from_ymd(2014, 1, 2));\nassert_eq!(from_ymd(2014, 1, 1) + Duration::days(-1),           from_ymd(2013, 12, 31));\nassert_eq!(from_ymd(2014, 1, 1) + Duration::days(364),          from_ymd(2014, 12, 31));\nassert_eq!(from_ymd(2014, 1, 1) + Duration::days(365*4 + 1),    from_ymd(2018, 1, 1));\nassert_eq!(from_ymd(2014, 1, 1) + Duration::days(365*400 + 97), from_ymd(2414, 1, 1));\n```","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Add","id":"2:2765:2072","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Duration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:908:183","0:909:271"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:761":{"id":"0:761","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[933,0],"end":[951,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7245:156","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"B"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2231:96","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2143:2081","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9074:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2291:2080","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:765:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2237-0:2016:2727":{"id":"b:2:2237-0:2016:2727","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2231:96","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:2016:2727","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2239:2071"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8179:7659-0:2300:1939":{"id":"a:2:8179:7659-0:2300:1939","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8179:7659","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveWeek","id":"0:2300:1939","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1379:1395":{"id":"0:1379:1395","crate_id":0,"name":"sub","span":{"filename":"src/offset/fixed.rs","begin":[229,4],"end":[231,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2736:7564-0:2186:1934":{"id":"a:2:2736:7564-0:2186:1934","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:7564","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2186:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:839:4051":{"id":"0:839:4051","crate_id":0,"name":"from_num_days_from_ce","span":{"filename":"src/naive/date.rs","begin":[415,4],"end":[417,5]},"visibility":"public","docs":"Makes a new `NaiveDate` from a day's number in the proleptic Gregorian calendar, with\nJanuary 1, 1 being day 1.\n\nPanics if the date is out of range.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note =\n\"use `from_num_days_from_ce_opt()` instead\")]","#[inline]"],"deprecation":{"since":"0.4.23","note":"use `from_num_days_from_ce_opt()` instead"},"kind":"function","inner":{"decl":{"inputs":[["days",{"kind":"primitive","inner":"i32"}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1199:659":{"id":"0:1199:659","crate_id":0,"name":"fmt","span":{"filename":"src/naive/isoweek.rs","begin":[135,4],"end":[144,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:9044:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:9033:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1824-0:2848:1918":{"id":"0:1824-0:2848:1918","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[490,37],"end":[490,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"weekday::Weekday","name":"Weekday","id":"0:2848:1918","glob":false}},"0:2052:2528":{"id":"0:2052:2528","crate_id":0,"name":"TimezoneOffsetColon","span":{"filename":"src/format/mod.rs","begin":[215,4],"end":[215,23]},"visibility":"default","docs":"Offset from the local time to UTC (`+09:00` or `-04:00` or `+00:00`).\n\nIn the parser, the colon can be omitted and/or surrounded with any amount of whitespace.\nThe offset is limited from `-24:00` to `+24:00`,\nwhich is the same as [`FixedOffset`](../offset/struct.FixedOffset.html)'s range.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:1279":{"id":"0:1279","crate_id":0,"name":null,"span":{"filename":"src/naive/time/mod.rs","begin":[1233,0],"end":[1237,1]},"visibility":"default","docs":"The `Display` output of the naive time `t` is the same as\n[`t.format(\"%H:%M:%S%.f\")`](../format/strftime/index.html).\n\nThe string printed can be readily parsed via the `parse` method on `str`.\n\nIt should be noted that, for leap seconds not on the minute boundary,\nit may print a representation not distinguishable from non-leap seconds.\nThis doesn't matter in practice, since such leap seconds never happened.\n(By the time of the first leap second on 1972-06-30,\nevery time zone offset around the world has standardized to the 5-minute alignment.)\n\n# Example\n\n```\nuse chrono::NaiveTime;\n\nassert_eq!(format!(\"{}\", NaiveTime::from_hms_opt(23, 56, 4).unwrap()),              \"23:56:04\");\nassert_eq!(format!(\"{}\", NaiveTime::from_hms_milli_opt(23, 56, 4, 12).unwrap()),    \"23:56:04.012\");\nassert_eq!(format!(\"{}\", NaiveTime::from_hms_micro_opt(23, 56, 4, 1234).unwrap()),  \"23:56:04.001234\");\nassert_eq!(format!(\"{}\", NaiveTime::from_hms_nano_opt(23, 56, 4, 123456).unwrap()), \"23:56:04.000123456\");\n```\n\nLeap seconds may also be used.\n\n```\n# use chrono::NaiveTime;\nassert_eq!(format!(\"{}\", NaiveTime::from_hms_milli_opt(6, 59, 59, 1_500).unwrap()), \"06:59:60.500\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9074:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1280:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:766":{"id":"0:766","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[979,0],"end":[989,1]},"visibility":"default","docs":"Parsing a `str` into a `Weekday` uses the format [`%W`](./format/strftime/index.html).\n\n# Example\n\n```\nuse chrono::Weekday;\n\nassert_eq!(\"Sunday\".parse::<Weekday>(), Ok(Weekday::Sun));\nassert!(\"any day\".parse::<Weekday>().is_err());\n```\n\nThe parsing is case-insensitive.\n\n```\n# use chrono::Weekday;\nassert_eq!(\"mON\".parse::<Weekday>(), Ok(Weekday::Mon));\n```\n\nOnly the shortest form (e.g. `sun`) and the longest form (e.g. `sunday`) is accepted.\n\n```\n# use chrono::Weekday;\nassert!(\"thurs\".parse::<Weekday>().is_err());\n```","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:11534:2563","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2848:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:767:125","0:768:2564"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11992:30158":{"id":"2:11992:30158","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:255:2111":{"id":"0:255:2111","crate_id":0,"name":"MIN_UTC","span":{"filename":"src/datetime/mod.rs","begin":[416,4],"end":[416,94]},"visibility":"public","docs":"The minimum possible `DateTime<Utc>`.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:2783:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"default":"_"}},"b:2:2527-0:2084:2779":{"id":"b:2:2527-0:2084:2779","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2084:2779","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2530:2607"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:12-0:1915:1913":{"id":"0:12-0:1915:1913","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[445,20],"end":[445,28]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::DateTime","name":"DateTime","id":"0:1915:1913","glob":false}},"0:2458":{"id":"0:2458","crate_id":0,"name":null,"span":{"filename":"src/naive/isoweek.rs","begin":[19,36],"end":[19,39]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["min","max","clamp"],"trait":{"name":"Ord","id":"2:2337:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IsoWeek","id":"0:2448:1938","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2459:422"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2916:2882":{"id":"0:2916:2882","crate_id":0,"name":"August","span":{"filename":"src/month.rs","begin":[50,4],"end":[50,14]},"visibility":"default","docs":"August","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":{"expr":"7","value":"7"}}},"5:5377:39493":{"id":"5:5377:39493","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7239:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7239:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11578:7280","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1024:2189":{"id":"0:1024:2189","crate_id":0,"name":"checked_add_signed","span":{"filename":"src/naive/datetime/mod.rs","begin":[611,4],"end":[621,5]},"visibility":"public","docs":"Adds given `Duration` to the current date and time.\n\nAs a part of Chrono's [leap second handling](./struct.NaiveTime.html#leap-second-handling),\nthe addition assumes that **there is no leap second ever**,\nexcept when the `NaiveDateTime` itself represents a leap second\nin which case the assumption becomes that **there is exactly a single leap second ever**.\n\nReturns `None` when it will result in overflow.\n\n# Example\n\n```\nuse chrono::{Duration, NaiveDate};\n\nlet from_ymd = NaiveDate::from_ymd;\n\nlet d = from_ymd(2016, 7, 8);\nlet hms = |h, m, s| d.and_hms_opt(h, m, s).unwrap();\nassert_eq!(hms(3, 5, 7).checked_add_signed(Duration::zero()),\n           Some(hms(3, 5, 7)));\nassert_eq!(hms(3, 5, 7).checked_add_signed(Duration::seconds(1)),\n           Some(hms(3, 5, 8)));\nassert_eq!(hms(3, 5, 7).checked_add_signed(Duration::seconds(-1)),\n           Some(hms(3, 5, 6)));\nassert_eq!(hms(3, 5, 7).checked_add_signed(Duration::seconds(3600 + 60)),\n           Some(hms(4, 6, 7)));\nassert_eq!(hms(3, 5, 7).checked_add_signed(Duration::seconds(86_400)),\n           Some(from_ymd(2016, 7, 9).and_hms_opt(3, 5, 7).unwrap()));\n\nlet hmsm = |h, m, s, milli| d.and_hms_milli_opt(h, m, s, milli).unwrap();\nassert_eq!(hmsm(3, 5, 7, 980).checked_add_signed(Duration::milliseconds(450)),\n           Some(hmsm(3, 5, 8, 430)));\n```\n\nOverflow returns `None`.\n\n```\n# use chrono::{Duration, NaiveDate};\n# let hms = |h, m, s| NaiveDate::from_ymd_opt(2016, 7, 8).unwrap().and_hms_opt(h, m, s).unwrap();\nassert_eq!(hms(3, 5, 7).checked_add_signed(Duration::days(1_000_000_000)), None);\n```\n\nLeap seconds are handled,\nbut the addition assumes that it is the only leap second happened.\n\n```\n# use chrono::{Duration, NaiveDate};\n# let from_ymd = NaiveDate::from_ymd;\n# let hmsm = |h, m, s, milli| from_ymd(2016, 7, 8).and_hms_milli_opt(h, m, s, milli).unwrap();\nlet leap = hmsm(3, 5, 59, 1_300);\nassert_eq!(leap.checked_add_signed(Duration::zero()),\n           Some(hmsm(3, 5, 59, 1_300)));\nassert_eq!(leap.checked_add_signed(Duration::milliseconds(-500)),\n           Some(hmsm(3, 5, 59, 800)));\nassert_eq!(leap.checked_add_signed(Duration::milliseconds(500)),\n           Some(hmsm(3, 5, 59, 1_800)));\nassert_eq!(leap.checked_add_signed(Duration::milliseconds(800)),\n           Some(hmsm(3, 6, 0, 100)));\nassert_eq!(leap.checked_add_signed(Duration::seconds(10)),\n           Some(hmsm(3, 6, 9, 300)));\nassert_eq!(leap.checked_add_signed(Duration::seconds(-10)),\n           Some(hmsm(3, 5, 50, 300)));\nassert_eq!(leap.checked_add_signed(Duration::days(1)),\n           Some(from_ymd(2016, 7, 9).and_hms_milli_opt(3, 5, 59, 300).unwrap()));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2849:2888":{"id":"0:2849:2888","crate_id":0,"name":"Mon","span":{"filename":"src/weekday.rs","begin":[17,4],"end":[17,11]},"visibility":"default","docs":"Monday.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":{"expr":"0","value":"0"}}},"b:5:674-0:1938:2508":{"id":"b:5:674-0:1938:2508","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:670:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:1938:2508","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:676:8076","5:677:8077","5:678:8078"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2886":{"id":"0:2886","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[168,9],"end":[168,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:2884:1945","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2887:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1102:183":{"id":"0:1102:183","crate_id":0,"name":"Output","span":{"filename":"src/naive/datetime/mod.rs","begin":[1680,4],"end":[1680,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:1776:1942":{"id":"0:1776:1942","crate_id":0,"name":"DurationRound","span":{"filename":"src/round.rs","begin":[101,0],"end":[143,1]},"visibility":"public","docs":"Extension trait for rounding or truncating a DateTime by a Duration.\n\n# Limitations\nBoth rounding and truncating are done via [`Duration::num_nanoseconds`] and\n[`DateTime::timestamp_nanos`]. This means that they will fail if either the\n`Duration` or the `DateTime` are too big to represented as nanoseconds. They\nwill also fail if the `Duration` is bigger than the timestamp.","links":{"`Duration::num_nanoseconds`":"20:91:5619","`DateTime::timestamp_nanos`":"0:236:2381"},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:1777:125","0:1778:6731","0:1779:6736"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:1781","0:1786"]}},"5:677:8077":{"id":"5:677:8077","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1686:2256":{"id":"0:1686:2256","crate_id":0,"name":"today","span":{"filename":"src/offset/utc.rs","begin":[57,4],"end":[59,5]},"visibility":"public","docs":"Returns a `Date` which corresponds to the current date.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note =\n\"use `Utc::now()` instead, potentially with `.date_naive()`\")]","#[allow(deprecated)]"],"deprecation":{"since":"0.4.23","note":"use `Utc::now()` instead, potentially with `.date_naive()`"},"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:2783:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:664":{"id":"0:664","crate_id":0,"name":null,"span":{"filename":"src/format/parse.rs","begin":[481,0],"end":[522,1]},"visibility":"default","docs":"Accepts a relaxed form of RFC3339.\nA space or a 'T' are acepted as the separator between the date and time\nparts. Additional spaces are allowed between each component.\n\nAll of these examples are equivalent:\n```\n# use chrono::{DateTime, offset::FixedOffset};\n\"2012-12-12T12:12:12Z\".parse::<DateTime<FixedOffset>>();\n\"2012-12-12 12:12:12Z\".parse::<DateTime<FixedOffset>>();\n\"2012-  12-12T12:  12:12Z\".parse::<DateTime<FixedOffset>>();\n```","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:11534:2563","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:665:125","0:666:2564"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:590:3161":{"id":"0:590:3161","crate_id":0,"name":"to_naive_datetime_with_offset","span":{"filename":"src/format/parsed.rs","begin":[541,4],"end":[611,5]},"visibility":"public","docs":"Returns a parsed naive date and time out of given fields,\nexcept for the [`offset`](#structfield.offset) field (assumed to have a given value).\nThis is required for parsing a local time or other known-timezone inputs.\n\nThis method is able to determine the combined date and time\nfrom date and time fields or a single [`timestamp`](#structfield.timestamp) field.\nEither way those fields have to be consistent to each other.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["offset",{"kind":"primitive","inner":"i32"}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:455:1935","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:160:1395":{"id":"0:160:1395","crate_id":0,"name":"sub","span":{"filename":"src/date.rs","begin":[497,4],"end":[499,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:343":{"id":"0:343","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[865,0],"end":[869,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"Tz2","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2301:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz2"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:346:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:352:1023":{"id":"0:352:1023","crate_id":0,"name":"partial_cmp","span":{"filename":"src/datetime/mod.rs","begin":[889,4],"end":[891,5]},"visibility":"default","docs":"Compare two DateTimes based on their true time, ignoring time zones\n\n# Example\n\n```\nuse chrono::prelude::*;\n\nlet earlier = Utc.with_ymd_and_hms(2015, 5, 15, 2, 0, 0).unwrap().with_timezone(&FixedOffset::west_opt(1 * 3600).unwrap());\nlet later   = Utc.with_ymd_and_hms(2015, 5, 15, 3, 0, 0).unwrap().with_timezone(&FixedOffset::west_opt(5 * 3600).unwrap());\n\nassert_eq!(earlier.to_string(), \"2015-05-15 01:00:00 -01:00\");\nassert_eq!(later.to_string(), \"2015-05-14 22:00:00 -05:00\");\n\nassert!(later > earlier);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz2"}}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Ordering","id":"2:30596:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1286:59":{"id":"0:1286:59","crate_id":0,"name":"default","span":{"filename":"src/naive/time/mod.rs","begin":[1291,4],"end":[1293,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:579:3108":{"id":"0:579:3108","crate_id":0,"name":"set_timestamp","span":{"filename":"src/format/parsed.rs","begin":[271,4],"end":[273,5]},"visibility":"public","docs":"Tries to set the [`timestamp`](#structfield.timestamp) field from given value.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["value",{"kind":"primitive","inner":"i64"}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:455:1935","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2803:1583":{"id":"0:2803:1583","crate_id":0,"name":"0","span":{"filename":"src/offset/mod.rs","begin":[47,11],"end":[47,12]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"T"}},"0:902:2239":{"id":"0:902:2239","crate_id":0,"name":"with_month0","span":{"filename":"src/naive/date.rs","begin":[1523,4],"end":[1525,5]},"visibility":"default","docs":"Makes a new `NaiveDate` with the month number (starting from 0) changed.\n\nReturns `None` when the resulting `NaiveDate` would be invalid.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().with_month0(9),\n           Some(NaiveDate::from_ymd_opt(2015, 10, 8).unwrap()));\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().with_month0(12), None); // no month 13\nassert_eq!(NaiveDate::from_ymd_opt(2015, 9, 30).unwrap().with_month0(1), None); // no February 30\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["month0",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1994:2520":{"id":"0:1994:2520","crate_id":0,"name":"Second","span":{"filename":"src/format/mod.rs","begin":[138,4],"end":[138,10]},"visibility":"default","docs":"The number of seconds since the last whole minute (FW=PW=2).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:270:685":{"id":"0:270:685","crate_id":0,"name":"from","span":{"filename":"src/datetime/mod.rs","begin":[483,4],"end":[485,5]},"visibility":"default","docs":"Convert this `DateTime<FixedOffset>` instance into a `DateTime<Local>` instance.\n\nConversion is performed via [`DateTime::with_timezone`]. Returns the equivalent value in local\ntime.","links":{"`DateTime::with_timezone`":"0:242:2183"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["src",{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2154:2804":{"id":"0:2154:2804","crate_id":0,"name":"OwnedSpace","span":{"filename":"src/format/mod.rs","begin":[301,4],"end":[301,24]},"visibility":"default","docs":"Same as `Space` but with the string owned by the item.","links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"kind":"variant","inner":{"kind":{"tuple":["0:2156:1583"]},"discriminant":null}},"0:1001:1932":{"id":"0:1001:1932","crate_id":0,"name":"MIN_DATETIME","span":{"filename":"src/naive/datetime/mod.rs","begin":[52,0],"end":[52,59]},"visibility":"public","docs":"The minimum possible `NaiveDateTime`.","links":{},"attrs":["#[deprecated(since = \"0.4.20\", note = \"Use NaiveDateTime::MIN instead\")]"],"deprecation":{"since":"0.4.20","note":"Use NaiveDateTime::MIN instead"},"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"NaiveDateTime::MIN","value":null,"is_literal":false}},"b:2:2537-0:2143:2081":{"id":"b:2:2537-0:2143:2081","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2143:2081","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2540:126","2:2541:1457"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2672:217-0:2448:1938":{"id":"a:2:2672:217-0:2448:1938","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IsoWeek","id":"0:2448:1938","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:58":{"id":"0:58","crate_id":0,"name":null,"span":{"filename":"src/date.rs","begin":[74,0],"end":[300,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:60:2117","0:61:2121","0:62:2130","0:63:2134","0:65:2142","0:66:2144","0:68:2151","0:69:2153","0:71:2160","0:72:2162","0:74:2168","0:75:2169","0:77:2175","0:78:2176","0:80:978","0:81:2124","0:82:2183","0:84:2189","0:85:2191","0:86:2196","0:88:2198","0:89:2123","0:90:2204","0:91:2111","0:92:2114"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:386":{"id":"0:386","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[969,0],"end":[975,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Add","id":"2:2765:2072","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Days","id":"0:2305:1937","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:388:183","0:389:271"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:329:2539":{"id":"0:329:2539","crate_id":0,"name":"second","span":{"filename":"src/datetime/mod.rs","begin":[832,4],"end":[834,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2199":{"id":"0:2199","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[348,38],"end":[348,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2684:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2186:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2197":{"id":"0:2197","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[348,34],"end":[348,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2306:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2186:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:5:674-0:2485:1919":{"id":"b:5:674-0:2485:1919","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:670:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:676:8076","5:677:8077","5:678:8078"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:116:2237":{"id":"0:116:2237","crate_id":0,"name":"with_year","span":{"filename":"src/date.rs","begin":[412,4],"end":[414,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["year",{"kind":"primitive","inner":"i32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:394":{"id":"0:394","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[985,0],"end":[990,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9069:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:396:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1347:2180":{"id":"0:1347:2180","crate_id":0,"name":"from_offset","span":{"filename":"src/offset/fixed.rs","begin":[110,4],"end":[112,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["offset",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1731:4553":{"id":"0:1731:4553","crate_id":0,"name":"isoywd_opt","span":{"filename":"src/offset/mod.rs","begin":[328,4],"end":[333,5]},"visibility":"default","docs":"Makes a new `Date` from ISO week date (year and week number), day of the week (DOW) and\nthe current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\nThe resulting `Date` may have a different year from the input year.\n\nThe time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),\nbut it will propagate to the `DateTime` values constructed via this date.\n\nReturns `None` on the out-of-range date and/or invalid week number.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note =\n\"use `from_local_datetime()` with a `NaiveDateTime` instead\")]","#[allow(deprecated)]"],"deprecation":{"since":"0.4.23","note":"use `from_local_datetime()` with a `NaiveDateTime` instead"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["year",{"kind":"primitive","inner":"i32"}],["week",{"kind":"primitive","inner":"u32"}],["weekday",{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2848:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2797:1940","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:311:2237":{"id":"0:311:2237","crate_id":0,"name":"with_year","span":{"filename":"src/datetime/mod.rs","begin":[787,4],"end":[789,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["year",{"kind":"primitive","inner":"i32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8178:7660-0:2848:1918":{"id":"a:2:8178:7660-0:2848:1918","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8178:7660","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2848:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2531-0:2848:1918":{"id":"b:2:2531-0:2848:1918","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2848:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2533:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2884:1945":{"id":"0:2884:1945","crate_id":0,"name":"ParseWeekdayError","span":{"filename":"src/weekday.rs","begin":[169,0],"end":[171,1]},"visibility":"public","docs":"An error resulting from reading `Weekday` value with `FromStr`.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:8179:7659-0:2884:1945","a:2:2672:217-0:2884:1945","a:2:2736:7564-0:2884:1945","a:2:2686:225-0:2884:1945","a:2:8178:7660-0:2884:1945","b:2:2531-0:2884:1945","b:2:2599-0:2884:1945","b:2:2542-0:2884:1945","b:2:2527-0:2884:1945","b:2:3331-0:2884:1945","b:2:2240-0:2884:1945","b:2:2537-0:2884:1945","b:2:2237-0:2884:1945","b:5:5633-0:2884:1945","b:5:674-0:2884:1945","0:1818","0:2889","0:2888","0:1817","0:1820","0:2886","0:2891","0:2892"]}},"0:2933:604":{"id":"0:2933:604","crate_id":0,"name":"eq","span":{"filename":"src/month.rs","begin":[30,9],"end":[30,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Month","id":"0:2894:1916","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:91:2111":{"id":"0:91:2111","crate_id":0,"name":"MIN_UTC","span":{"filename":"src/date.rs","begin":[297,4],"end":[297,78]},"visibility":"public","docs":"The minimum possible `Date`.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:2783:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"default":"_"}},"0:1855:2234":{"id":"0:1855:2234","crate_id":0,"name":"ordinal","span":{"filename":"src/traits.rs","begin":[43,4],"end":[43,29]},"visibility":"default","docs":"Returns the day of year starting from 1.\n\nThe return value ranges from 1 to 366. (The last day of year differs by years.)","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:1274:183":{"id":"0:1274:183","crate_id":0,"name":"Output","span":{"filename":"src/naive/time/mod.rs","begin":[1141,4],"end":[1141,30]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Duration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:2395:1023":{"id":"0:2395:1023","crate_id":0,"name":"partial_cmp","span":{"filename":"src/naive/datetime/mod.rs","begin":[82,30],"end":[82,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::option::Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Ordering","id":"2:30596:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3331-0:2029:2284":{"id":"b:2:3331-0:2029:2284","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3329:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2029:2284","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3333:1470"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1301-0:2448:1938":{"id":"0:1301-0:2448:1938","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[476,22],"end":[476,29]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"naive::IsoWeek","name":"IsoWeek","id":"0:2448:1938","glob":false}},"b:5:5633-0:2783:1920":{"id":"b:5:5633-0:2783:1920","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9074:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5631:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:2783:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5635:1434"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:5633-0:2884:1945":{"id":"b:5:5633-0:2884:1945","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9074:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5631:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:2884:1945","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5635:1434"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1060:2241":{"id":"0:1060:2241","crate_id":0,"name":"with_day0","span":{"filename":"src/naive/datetime/mod.rs","begin":[1194,4],"end":[1196,5]},"visibility":"default","docs":"Makes a new `NaiveDateTime` with the day of month (starting from 0) changed.\n\nReturns `None` when the resulting `NaiveDateTime` would be invalid.\n\nSee also the [`NaiveDate::with_day0`] method.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Datelike};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd_opt(2015, 9, 8).unwrap().and_hms_opt(12, 34, 56).unwrap();\nassert_eq!(dt.with_day0(29), Some(NaiveDate::from_ymd_opt(2015, 9, 30).unwrap().and_hms_opt(12, 34, 56).unwrap()));\nassert_eq!(dt.with_day0(30), None); // no September 31\n```","links":{"`NaiveDate::with_day0`":"0:904:2241"},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["day0",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:20-0:2485:1919":{"id":"0:20-0:2485:1919","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[449,20],"end":[449,31]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::FixedOffset","name":"FixedOffset","id":"0:2485:1919","glob":false}},"0:1947:415":{"id":"0:1947:415","crate_id":0,"name":"clone","span":{"filename":"src/format/mod.rs","begin":[76,15],"end":[76,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:1938:2508","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2169":{"id":"0:2169","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[288,16],"end":[288,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2682:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2143:2081","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1238:4780":{"id":"0:1238:4780","crate_id":0,"name":"from_num_seconds_from_midnight_opt","span":{"filename":"src/naive/time/mod.rs","begin":[402,4],"end":[407,5]},"visibility":"public","docs":"Makes a new `NaiveTime` from the number of seconds since midnight and nanosecond.\n\nThe nanosecond part can exceed 1,000,000,000\nin order to represent the [leap second](#leap-second-handling).\n\nReturns `None` on invalid number of seconds and/or nanosecond.\n\n# Example\n\n```\nuse chrono::NaiveTime;\n\nlet from_nsecs_opt = NaiveTime::from_num_seconds_from_midnight_opt;\n\nassert!(from_nsecs_opt(0, 0).is_some());\nassert!(from_nsecs_opt(86399, 999_999_999).is_some());\nassert!(from_nsecs_opt(86399, 1_999_999_999).is_some()); // a leap second after 23:59:59\nassert!(from_nsecs_opt(86_400, 0).is_none());\nassert!(from_nsecs_opt(86399, 2_000_000_000).is_none());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["secs",{"kind":"primitive","inner":"u32"}],["nano",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1998:2722":{"id":"0:1998:2722","crate_id":0,"name":"Timestamp","span":{"filename":"src/format/mod.rs","begin":[145,4],"end":[145,13]},"visibility":"default","docs":"The number of non-leap seconds since the midnight UTC on January 1, 1970 (FW=1, PW=∞).\nFor formatting, it assumes UTC upon the absence of time zone offset.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:2963:1023":{"id":"0:2963:1023","crate_id":0,"name":"partial_cmp","span":{"filename":"src/month.rs","begin":[194,50],"end":[194,60]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Months","id":"0:2945:1947","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::option::Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Ordering","id":"2:30596:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8178:7660-0:2964:1948":{"id":"a:2:8178:7660-0:2964:1948","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8178:7660","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseMonthError","id":"0:2964:1948","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11899:36816":{"id":"2:11899:36816","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:11900:36804"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitWhitespace","id":"2:42919:7316","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:888:2206":{"id":"0:888:2206","crate_id":0,"name":"MIN","span":{"filename":"src/naive/date.rs","begin":[1267,4],"end":[1267,93]},"visibility":"public","docs":"The minimum possible `NaiveDate` (January 1, 262145 BCE).","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":"_"}},"a:2:2672:217-0:2272:2082":{"id":"a:2:2672:217-0:2272:2082","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2272:2082","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2210:2831":{"id":"0:2210:2831","crate_id":0,"name":"Invalid","span":{"filename":"src/format/mod.rs","begin":[378,4],"end":[378,11]},"visibility":"default","docs":"The input string has some invalid character sequence for given formatting items.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"a:2:2736:7564-0:2382:1922":{"id":"a:2:2736:7564-0:2382:1922","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:7564","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:529:670":{"id":"0:529:670","crate_id":0,"name":"format","span":{"filename":"src/format/mod.rs","begin":[820,0],"end":[836,1]},"visibility":"public","docs":"Tries to format given arguments with given formatting items.\nInternally used by `DelayedFormat`.","links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["w",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:9044:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["date",{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"bindings":[]}}}}],["time",{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"bindings":[]}}}}],["off",{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"tuple","inner":[{"kind":"resolved_path","inner":{"name":"String","id":"5:7239:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]}}}}],"bindings":[]}}}}],["items",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:9033:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7245:156","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"B"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2231:96","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2143:2081","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1227:5529":{"id":"0:1227:5529","crate_id":0,"name":"from_hms","span":{"filename":"src/naive/time/mod.rs","begin":[217,4],"end":[219,5]},"visibility":"public","docs":"Makes a new `NaiveTime` from hour, minute and second.\n\nNo [leap second](#leap-second-handling) is allowed here;\nuse `NaiveTime::from_hms_*` methods with a subsecond parameter instead.\n\nPanics on invalid hour, minute and/or second.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `from_hms_opt()` instead\")]","#[inline]"],"deprecation":{"since":"0.4.23","note":"use `from_hms_opt()` instead"},"kind":"function","inner":{"decl":{"inputs":[["hour",{"kind":"primitive","inner":"u32"}],["min",{"kind":"primitive","inner":"u32"}],["sec",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1990:2714":{"id":"0:1990:2714","crate_id":0,"name":"Hour12","span":{"filename":"src/format/mod.rs","begin":[134,4],"end":[134,10]},"visibility":"default","docs":"Hour number in the 12-hour clocks (FW=PW=2).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:1727:3856":{"id":"0:1727:3856","crate_id":0,"name":"ymd_opt","span":{"filename":"src/offset/mod.rs","begin":[254,4],"end":[259,5]},"visibility":"default","docs":"Makes a new `Date` from year, month, day and the current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\n\nThe time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),\nbut it will propagate to the `DateTime` values constructed via this date.\n\nReturns `None` on the out-of-range date, invalid month and/or day.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `with_ymd_and_hms()` instead\")]","#[allow(deprecated)]"],"deprecation":{"since":"0.4.23","note":"use `with_ymd_and_hms()` instead"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["year",{"kind":"primitive","inner":"i32"}],["month",{"kind":"primitive","inner":"u32"}],["day",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2797:1940","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:674-0:1915:1913":{"id":"b:5:674-0:1915:1913","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:670:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["5:676:8076","5:677:8077","5:678:8078"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2314":{"id":"0:2314","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[129,29],"end":[129,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2306:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Days","id":"0:2305:1937","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:145:422":{"id":"0:145:422","crate_id":0,"name":"cmp","span":{"filename":"src/date.rs","begin":[466,4],"end":[468,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Ordering","id":"2:30596:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:393:1395":{"id":"0:393:1395","crate_id":0,"name":"sub","span":{"filename":"src/datetime/mod.rs","begin":[980,4],"end":[982,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["days",{"kind":"resolved_path","inner":{"name":"Days","id":"0:2305:1937","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:2770:2074","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2531-0:2234:2283":{"id":"b:2:2531-0:2234:2283","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Parsed","id":"0:2234:2283","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2533:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2265:659":{"id":"0:2265:659","crate_id":0,"name":"fmt","span":{"filename":"src/format/parsed.rs","begin":[25,31],"end":[25,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:9044:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:9033:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:853:2130":{"id":"0:853:2130","crate_id":0,"name":"and_hms","span":{"filename":"src/naive/date.rs","begin":[723,4],"end":[725,5]},"visibility":"public","docs":"Makes a new `NaiveDateTime` from the current date, hour, minute and second.\n\nNo [leap second](./struct.NaiveTime.html#leap-second-handling) is allowed here;\nuse `NaiveDate::and_hms_*` methods with a subsecond parameter instead.\n\nPanics on invalid hour, minute and/or second.","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `and_hms_opt()` instead\")]","#[inline]"],"deprecation":{"since":"0.4.23","note":"use `and_hms_opt()` instead"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["hour",{"kind":"primitive","inner":"u32"}],["min",{"kind":"primitive","inner":"u32"}],["sec",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:153:271":{"id":"0:153:271","crate_id":0,"name":"add","span":{"filename":"src/date.rs","begin":[481,4],"end":[483,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"resolved_path","inner":{"name":"OldDuration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:859:2151":{"id":"0:859:2151","crate_id":0,"name":"and_hms_micro","span":{"filename":"src/naive/date.rs","begin":[815,4],"end":[817,5]},"visibility":"public","docs":"Makes a new `NaiveDateTime` from the current date, hour, minute, second and microsecond.\n\nThe microsecond part can exceed 1,000,000\nin order to represent the [leap second](./struct.NaiveTime.html#leap-second-handling).\n\nPanics on invalid hour, minute, second and/or microsecond.\n\n# Example\n\n```\nuse chrono::{NaiveDate, NaiveDateTime, Datelike, Timelike, Weekday};\n\nlet d = NaiveDate::from_ymd_opt(2015, 6, 3).unwrap();\n\nlet dt: NaiveDateTime = d.and_hms_micro(12, 34, 56, 789_012);\nassert_eq!(dt.year(), 2015);\nassert_eq!(dt.weekday(), Weekday::Wed);\nassert_eq!(dt.second(), 56);\nassert_eq!(dt.nanosecond(), 789_012_000);\n```","links":{},"attrs":["#[deprecated(since = \"0.4.23\", note = \"use `and_hms_micro_opt()` instead\")]","#[inline]"],"deprecation":{"since":"0.4.23","note":"use `and_hms_micro_opt()` instead"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["hour",{"kind":"primitive","inner":"u32"}],["min",{"kind":"primitive","inner":"u32"}],["sec",{"kind":"primitive","inner":"u32"}],["micro",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1955:659":{"id":"0:1955:659","crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[76,37],"end":[76,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:9044:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:9033:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2736:7564-0:1881:1908":{"id":"a:2:2736:7564-0:1881:1908","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Tz"},"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2736:7564","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:7564","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Date","id":"0:1881:1908","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2237-0:2382:1922":{"id":"b:2:2237-0:2382:1922","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2231:96","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2239:2071"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2686:225-0:2029:2284":{"id":"a:2:2686:225-0:2029:2284","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2029:2284","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2498:415":{"id":"0:2498:415","crate_id":0,"name":"clone","span":{"filename":"src/offset/fixed.rs","begin":[25,36],"end":[25,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2485:1919","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1697":{"id":"0:1697","crate_id":0,"name":null,"span":{"filename":"src/offset/utc.rs","begin":[115,0],"end":[119,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9069:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:2783:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1698:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:740:929":{"id":"0:740:929","crate_id":0,"name":"new","span":{"filename":"src/format/strftime.rs","begin":[230,4],"end":[232,5]},"visibility":"public","docs":"Creates a new parsing iterator from the `strftime`-like format string.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["s",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2272:2082","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8179:7659-0:1959:2507":{"id":"a:2:8179:7659-0:1959:2507","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8179:7659","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:1959:2507","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2387:604":{"id":"0:2387:604","crate_id":0,"name":"eq","span":{"filename":"src/naive/datetime/mod.rs","begin":[82,9],"end":[82,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2082:720":{"id":"0:2082:720","crate_id":0,"name":"hash","span":{"filename":"src/format/mod.rs","begin":[170,38],"end":[170,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9297:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1668-0:2776:1909":{"id":"0:1668-0:2776:1909","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[35,0],"end":[35,27]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"clock\")]"],"deprecation":null,"kind":"import","inner":{"source":"self::local::Local","name":"Local","id":"0:2776:1909","glob":false}},"b:2:2240-0:2272:2082":{"id":"b:2:2240-0:2272:2082","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:5870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2234:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2272:2082","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2242:6046"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1740:5933":{"id":"0:1740:5933","crate_id":0,"name":"offset_from_local_datetime","span":{"filename":"src/offset/mod.rs","begin":[449,4],"end":[449,93]},"visibility":"default","docs":"Creates the offset(s) for given local `NaiveDateTime` if possible.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["local",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2797:1940","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:1722:1925","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2195:604":{"id":"0:2195:604","crate_id":0,"name":"eq","span":{"filename":"src/format/mod.rs","begin":[348,23],"end":[348,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2186:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2894:1916":{"id":"0:2894:1916","crate_id":0,"name":"Month","span":{"filename":"src/month.rs","begin":[34,0],"end":[59,1]},"visibility":"public","docs":"The month of the year.\n\nThis enum is just a convenience implementation.\nThe month in dates created by DateLike objects does not return this enum.\n\nIt is possible to convert from a date to a month independently\n```\nuse num_traits::FromPrimitive;\nuse chrono::prelude::*;\nlet date = Utc.with_ymd_and_hms(2019, 10, 28, 9, 10, 11).unwrap();\n// `2019-10-28T09:10:11Z`\nlet month = Month::from_u32(date.month());\nassert_eq!(month, Some(Month::October))\n```\nOr from a Month to an integer usable by dates\n```\n# use chrono::prelude::*;\nlet month = Month::January;\nlet dt = Utc.with_ymd_and_hms(2019, month.number_from_month(), 28, 9, 10, 11).unwrap();\nassert_eq!((dt.year(), dt.month(), dt.day()), (2019, 1, 28));\n```\nAllows mapping from and to month, from 1-January to 12-December.\nCan be Serialized/Deserialized with serde","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:2895:2876","0:2898:2877","0:2901:2878","0:2904:2879","0:2907:2868","0:2910:2880","0:2913:2881","0:2916:2882","0:2919:2883","0:2922:2884","0:2925:2885","0:2928:2886"],"impls":["0:1827","a:2:8179:7659-0:2894:1916","a:2:2672:217-0:2894:1916","a:2:2736:7564-0:2894:1916","a:2:2686:225-0:2894:1916","a:2:8178:7660-0:2894:1916","b:2:2531-0:2894:1916","b:2:2542-0:2894:1916","b:2:2527-0:2894:1916","b:2:3331-0:2894:1916","b:2:2240-0:2894:1916","b:2:2537-0:2894:1916","b:2:2237-0:2894:1916","b:5:674-0:2894:1916","0:2940","0:2931","0:2932","0:2938","0:1832","0:2935","0:2934","0:2942","0:2937","0:769"]}},"0:382":{"id":"0:382","crate_id":0,"name":null,"span":{"filename":"src/datetime/mod.rs","begin":[960,0],"end":[967,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:2770:2074","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}},"items":["0:384:183","0:385:1395"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11954:38835":{"id":"2:11954:38835","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:11573:1962","`DoubleEndedIterator`":"2:7167:119","prim@char":"1:11872:411","str::rmatch_indices":"2:11957:38836"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"MatchIndices","id":"2:42795:7326","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11578:7280","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1101":{"id":"0:1101","crate_id":0,"name":null,"span":{"filename":"src/naive/datetime/mod.rs","begin":[1679,0],"end":[1685,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:2770:2074","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Days","id":"0:2305:1937","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1102:183","0:1103:1395"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1804":{"id":"0:1804","crate_id":0,"name":null,"span":{"filename":"src/weekday.rs","begin":[32,0],"end":[118,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2848:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1805:2168","0:1806:2175","0:1807:2920","0:1808:6846","0:1809:3144","0:1810:2919"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:166:183":{"id":"0:166:183","crate_id":0,"name":"Output","span":{"filename":"src/date.rs","begin":[510,4],"end":[510,30]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Duration","id":"20:296:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:2320":{"id":"0:2320","crate_id":0,"name":null,"span":{"filename":"src/naive/date.rs","begin":[129,39],"end":[129,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2301:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Days","id":"0:2305:1937","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Days","id":"0:2305:1937","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2321:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2328:604":{"id":"0:2328:604","crate_id":0,"name":"eq","span":{"filename":"src/naive/date.rs","begin":[187,9],"end":[187,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2324:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2672:217-0:2382:1922":{"id":"a:2:2672:217-0:2382:1922","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2382:1922","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2089:415":{"id":"0:2089:415","crate_id":0,"name":"clone","span":{"filename":"src/format/mod.rs","begin":[254,16],"end":[254,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2084:2779","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11910:6400":{"id":"2:11910:6400","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:11872:411","self::pattern":"2:11573:1962"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11578:7280","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11578:7280","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11593:7308","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5389:39495":{"id":"5:5389:39495","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:279:2663","`String`":"5:7239:221"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:279:2663","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:6988:8447","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7239:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1040:2207":{"id":"0:1040:2207","crate_id":0,"name":"MAX","span":{"filename":"src/naive/datetime/mod.rs","begin":[909,4],"end":[909,78]},"visibility":"public","docs":"The maximum possible `NaiveDateTime`.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"0:1821:659":{"id":"0:1821:659","crate_id":0,"name":"fmt","span":{"filename":"src/weekday.rs","begin":[184,4],"end":[186,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:9044:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:9033:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1984:2709":{"id":"0:1984:2709","crate_id":0,"name":"WeekdayFromMon","span":{"filename":"src/format/mod.rs","begin":[128,4],"end":[128,18]},"visibility":"default","docs":"Day of the week, where Monday = 1 and Sunday = 7 (FW=PW=1).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:28-0:1722:1925":{"id":"0:28-0:1722:1925","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[453,28],"end":[453,36]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::TimeZone","name":"TimeZone","id":"0:1722:1925","glob":false}},"a:2:2686:225-0:2964:1948":{"id":"a:2:2686:225-0:2964:1948","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseMonthError","id":"0:2964:1948","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11888:30350":{"id":"2:11888:30350","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9754:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9754:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:2230":{"id":"0:2230","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[359,38],"end":[359,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2684:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseErrorKind","id":"0:2203:2817","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1264:183":{"id":"0:1264:183","crate_id":0,"name":"Output","span":{"filename":"src/naive/time/mod.rs","begin":[1019,4],"end":[1019,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2466:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:2237:3024":{"id":"0:2237:3024","crate_id":0,"name":"year_mod_100","span":{"filename":"src/format/parsed.rs","begin":[41,4],"end":[41,33]},"visibility":"public","docs":"Year modulo 100. Implies that the year is >= 1 BCE when set.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i32"}}],"bindings":[]}}}}},"0:237:2385":{"id":"0:237:2385","crate_id":0,"name":"timestamp_subsec_millis","span":{"filename":"src/datetime/mod.rs","begin":[270,4],"end":[272,5]},"visibility":"public","docs":"Returns the number of milliseconds since the last second boundary\n\nwarning: in event of a leap second, this may exceed 999\n\nnote: this is not the number of milliseconds since January 1, 1970 0:00:00 UTC","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2081":{"id":"0:2081","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[170,38],"end":[170,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9289:139","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2029:2284","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2082:720"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1037:2402":{"id":"0:1037:2402","crate_id":0,"name":"and_local_timezone","span":{"filename":"src/naive/datetime/mod.rs","begin":[902,4],"end":[904,5]},"visibility":"public","docs":"Converts the `NaiveDateTime` into the timezone-aware `DateTime<Tz>`\nwith the provided timezone, if possible.\n\nThis can fail in cases where the local time represented by the `NaiveDateTime`\nis not a valid local timestamp in the target timezone due to an offset transition\nfor example if the target timezone had a change from +00:00 to +01:00\noccuring at 2015-09-05 22:59:59, then a local time of 2015-09-05 23:56:04\ncould never occur. Similarly, if the offset transitioned in the opposite direction\nthen there would be two local times of 2015-09-05 23:56:04, one at +00:00 and one\nat +01:00.\n\n# Example\n\n```\nuse chrono::{NaiveDate, Utc};\nlet dt = NaiveDate::from_ymd_opt(2015, 9, 5).unwrap().and_hms_opt(23, 56, 4).unwrap().and_local_timezone(Utc).unwrap();\nassert_eq!(dt.timezone(), Utc);","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["tz",{"kind":"generic","inner":"Tz"}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2797:1940","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:1915:1913","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TimeZone","id":"0:1722:1925","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2736:7564-0:2448:1938":{"id":"a:2:2736:7564-0:2448:1938","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:7564","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IsoWeek","id":"0:2448:1938","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"paths":{"2:4127:7442":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"11:1832:7557":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"17:13721:10823":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"1:5249:118":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"1:11672:8846":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"0:1968:2696":{"crate_id":0,"path":["chrono","format","Numeric","IsoYearDiv100"],"kind":"variant"},"23:476:7411":{"crate_id":23,"path":["num_traits","ops","wrapping","WrappingShr"],"kind":"trait"},"5:7087:8033":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"21:1512:8964":{"crate_id":21,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"2:4582:19311":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"17:13879:10856":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"0:775:1936":{"crate_id":0,"path":["chrono","naive"],"kind":"module"},"2:43400:11748":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"2:2686:225":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"2:40875:8264":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"17:10092:12550":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"5:1341:7557":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"16:3225:10934":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"17:10798:26058":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"21:5759:9560":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"16:2357:10885":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"2:20648:14192":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"16:4702:10953":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"16:6460:10912":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"16:0:7049":{"crate_id":16,"path":["gimli"],"kind":"module"},"5:4722:659":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"9:481:24990":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"6:595:8958":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"11:1534:11987":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"6:4271:9108":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"21:4765:9370":{"crate_id":21,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"2:39326:7330":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"16:6854:11130":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"6:4767:9370":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"0:2804:3172":{"crate_id":0,"path":["chrono","offset","LocalResult","Ambiguous"],"kind":"variant"},"1:8209:14101":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"16:2786:10903":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"21:1729:9096":{"crate_id":21,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"23:211:29914":{"crate_id":23,"path":["num_traits","float","FloatCore"],"kind":"trait"},"6:4602:9289":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"6:4592:9282":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"17:10569:10156":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"17:8420:26050":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"17:10505:12566":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"17:10354:10142":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"2:44417:11762":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"18:719:9967":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"21:6539:9748":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"16:4510:10948":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"16:2404:10887":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"2:2498:73":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"2:21631:7381":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"21:1714:9089":{"crate_id":21,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"17:8310:26047":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"17:11902:10333":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"1:7456:10203":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"2:31816:2726":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"5:3119:40068":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"16:7519:11210":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"16:6293:11045":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"2:42184:11716":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"6:4858:9411":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"2:44488:11765":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"1:965:8336":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"2:1655:1075":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"21:4447:9212":{"crate_id":21,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"0:2208:2829":{"crate_id":0,"path":["chrono","format","ParseErrorKind","NotEnough"],"kind":"variant"},"1:8113:7512":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"2:43376:7302":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"2:44718:11773":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"1:942:8333":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"1:8737:11847":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"5:210:8467":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"18:652:9937":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"6:4664:9312":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"6:7431:9911":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"17:11800:10318":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"16:4757:10955":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"18:766:29904":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"2:40765:7656":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"5:7012:7273":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"16:3899:10942":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"18:644:9937":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"16:4540:10949":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"2:2736:7564":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"6:5850:9599":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"6:526:8920":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"2:43364:7298":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"1:8136:7320":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"11:1085:11985":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"1:6238:203":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"2:39979:8523":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"1:3984:14081":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"21:4892:9432":{"crate_id":21,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"16:6218:12598":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"16:7293:11187":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"21:4748:9359":{"crate_id":21,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"0:2799:176":{"crate_id":0,"path":["chrono","offset","LocalResult","None"],"kind":"variant"},"17:12403:10424":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"17:13777:10831":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"1:4846:14127":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"2:2993:7234":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"5:3114:11416":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"6:4963:9470":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"17:9534:12514":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"17:9721:12524":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"1:11484:11887":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"5:1218:8338":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"20:334:7174":{"crate_id":20,"path":["time","Timespec"],"kind":"struct"},"1:11893:1474":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"16:6132:11035":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"21:1532:8972":{"crate_id":21,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"2:39633:8550":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"17:8683:10064":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"5:1602:8744":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"21:4679:9323":{"crate_id":21,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"17:8931:10071":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"2:9897:7557":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"17:13309:10690":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"16:7437:11204":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"1:7682:8409":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"6:1716:9089":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"16:8269:126":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"2:8746:659":{"crate_id":2,"path":["core","fmt"],"kind":"module"},"23:343:7397":{"crate_id":23,"path":["num_traits","ops","checked","CheckedSub"],"kind":"trait"},"2:4418:7263":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"17:10545:10150":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"1:4643:14102":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"6:4360:9169":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"1:11026:11748":{"crate_id":1,"path":["std","sys","unix","time","Nanoseconds"],"kind":"struct"},"15:198:13180":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"0:2143:2081":{"crate_id":0,"path":["chrono","format","Item"],"kind":"enum"},"11:1866:11417":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"16:2524:10892":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"21:5032:9505":{"crate_id":21,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"17:13865:10853":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"0:2036:2744":{"crate_id":0,"path":["chrono","format","Fixed","LongWeekdayName"],"kind":"variant"},"16:6307:10909":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"5:6430:8744":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"1:3996:14084":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"17:13219:10670":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"1:3293:7518":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"2:39675:8552":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"21:5771:9564":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"1:10703:7490":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"2:9082:7253":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"2:9069:110":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"2:21720:36160":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"1:10933:8839":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"2:44834:11776":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"6:532:8923":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"6:579:8948":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"17:12006:10349":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"2:21282:38094":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"5:0:283":{"crate_id":5,"path":["alloc"],"kind":"module"},"5:4311:242":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"2:43571:208":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"21:572:8945":{"crate_id":21,"path":["libc","unix","itimerval"],"kind":"struct"},"16:6696:25993":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"21:4732:9351":{"crate_id":21,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"17:2933:12498":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"1:1774:601":{"crate_id":1,"path":["std","env"],"kind":"module"},"1:8725:183":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"1:11477:11887":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"17:13385:10708":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"16:6061:25103":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"5:4127:7502":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"21:5052:9513":{"crate_id":21,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"17:13461:10730":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"2:3380:19287":{"crate_id":2,"path":["core","any","Provider"],"kind":"trait"},"6:4915:9447":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"17:12358:10415":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"2:4241:7430":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"1:641:12676":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"17:13564:10782":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"17:10316:10140":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"16:3063:9978":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"21:7429:9911":{"crate_id":21,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"16:7335:40204":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"17:3266:12500":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"16:2808:10904":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"17:9469:12509":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"6:4354:9168":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"21:4600:9289":{"crate_id":21,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"1:4415:14102":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"1:1086:8340":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"2:46719:11816":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"21:4832:9397":{"crate_id":21,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"0:1966:2694":{"crate_id":0,"path":["chrono","format","Numeric","IsoYear"],"kind":"variant"},"6:6004:9686":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"1:2388:6093":{"crate_id":1,"path":["std","io"],"kind":"module"},"1:7926:12714":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"6:4740:9353":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"16:6431:11059":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"2:39724:8556":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"5:5892:7502":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"0:2044:2522":{"crate_id":0,"path":["chrono","format","Fixed","Nanosecond3"],"kind":"variant"},"1:5504:14131":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"17:247:12488":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"5:7003:11518":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"2:10028:12659":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"0:1962:2689":{"crate_id":0,"path":["chrono","format","Numeric","YearDiv100"],"kind":"variant"},"1:6728:2281":{"crate_id":1,"path":["std","time","UNIX_EPOCH"],"kind":"constant"},"2:42543:11545":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"23:552:7371":{"crate_id":23,"path":["num_traits","NumRef"],"kind":"trait"},"18:538:9945":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"6:5060:9516":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"6:4542:9257":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"16:2764:10902":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"1:591:14030":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"23:278:7388":{"crate_id":23,"path":["num_traits","identities","One"],"kind":"trait"},"1:3250:7529":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"2:41117:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"6:7566:9931":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"7:32:24977":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"2:40654:11697":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"2:21591:11553":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"16:2931:25130":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"6:6586:9772":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"1:1595:11417":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"16:5616:10971":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"17:10452:12562":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"1:11892:1477":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"21:5703:9520":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"2:40618:11696":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"21:4913:9447":{"crate_id":21,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"6:488:8895":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"17:13257:10677":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"2:42589:6091":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"16:6361:11052":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"0:2801:2795":{"crate_id":0,"path":["chrono","offset","LocalResult","Single"],"kind":"variant"},"2:22097:173":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"2:40731:2081":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"16:6919:40201":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"5:4157:7502":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"2:2938:2614":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"6:4475:9225":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"16:5886:11000":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"17:10589:10161":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"2:45342:11789":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"16:7467:11205":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"6:6104:9711":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"1:10638:11862":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"2:43097:11736":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"17:11993:10346":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"6:4510:9245":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"17:10681:10171":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"2:4308:7436":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"2:2511:234":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"21:5848:9599":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"16:6400:11056":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"21:4846:9405":{"crate_id":21,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"17:8573:26055":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"1:1988:182":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"16:7757:11219":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"5:7058:11519":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"17:11060:10168":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"17:12592:10454":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"2:48920:243":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"23:161:5232":{"crate_id":23,"path":["num_traits","cast","FromPrimitive"],"kind":"trait"},"18:96:13169":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"1:3171:7531":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"2:29992:8443":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"17:13506:10740":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"21:4459:9217":{"crate_id":21,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"10:36:11425":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"1:11872:411":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"6:1731:9096":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"11:393:13187":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"17:11721:10285":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"17:9907:10097":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"21:5974:9679":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"21:4871:9417":{"crate_id":21,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"11:387:13186":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"14:40:10224":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"1:6190:8815":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"17:10735:10177":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"6:4943:9463":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"17:10580:10160":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"1:6588:214":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"16:2426:10888":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"2:22196:7458":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"17:9986:10103":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"17:13411:10718":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"1:6484:12708":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"6:4536:9255":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"6:4414:9197":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"2:43396:7300":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"1:873:8033":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"17:11832:10325":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"17:11544:10249":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"1:3678:12687":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"21:5765:9563":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"21:5960:9668":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"14:215:11359":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"16:5557:10910":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"16:3749:10938":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"16:6575:25992":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"1:11186:11876":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"1:10817:11481":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"1:9867:11693":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"1:8907:7877":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"2:39355:11659":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"17:12158:10369":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"1:7654:8341":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"16:5693:10977":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"6:7246:9899":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"17:11924:10340":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"2:11534:2563":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"23:474:7410":{"crate_id":23,"path":["num_traits","ops","wrapping","WrappingShl"],"kind":"trait"},"1:6298:163":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"2:11141:6399":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"2:42511:12675":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"17:13689:10808":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"2:20673:14182":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"1:7797:7485":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"21:6555:9760":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"21:6741:9845":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"2:2944:7233":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"17:9350:40213":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"23:564:7373":{"crate_id":23,"path":["num_traits","NumAssignOps"],"kind":"trait"},"6:4840:9400":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"17:9853:12529":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"16:154:8730":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"9:352:25006":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"5:3612:8744":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"5:2067:7873":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"1:4509:14120":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"13:226:11408":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"21:6591:9776":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"17:13376:10707":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"11:810:8329":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"5:264:8744":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"2:6648:13193":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"16:3030:10931":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"1:8155:12720":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"6:1520:8967":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"5:7020:8754":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"2:2851:7226":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"17:975:12491":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"21:5953:9667":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"21:4754:9362":{"crate_id":21,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"6:587:8953":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"21:7564:9931":{"crate_id":21,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"16:5724:10982":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"1:2212:7467":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"21:4453:9214":{"crate_id":21,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"17:9228:40211":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"1:11871:926":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"11:1518:25069":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"2:11136:1380":{"crate_id":2,"path":["core","str"],"kind":"module"},"2:45188:11786":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"1:7851:6365":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"1:863:8264":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"1:1930:7343":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"1:7579:7884":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"21:6531:9743":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"2:8604:85":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"21:4288:9118":{"crate_id":21,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"11:2184:11420":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"17:9577:10084":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"1:7686:2726":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"2:5455:8548":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"21:7495:9916":{"crate_id":21,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"5:7336:8449":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"2:42553:11998":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"6:1710:9088":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"16:5677:25987":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"5:1304:93":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"1:5387:12698":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"2:12488:8446":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"6:5797:9573":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"1:4640:14129":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"2:39734:8541":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"2:40807:7830":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"11:353:8737":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"1:10405:7530":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"6:4636:9300":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"17:10761:26057":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"21:7554:9929":{"crate_id":21,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"17:10026:12541":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"17:9178:12504":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"2:8180:7658":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"16:7803:11227":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"2:41707:108":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"17:9917:6369":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"17:10068:12548":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"1:9032:7286":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"2:43066:11732":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"1:4565:14079":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"16:5071:10965":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"2:39309:19316":{"crate_id":2,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"5:2077:11502":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"0:1996:2525":{"crate_id":0,"path":["chrono","format","Numeric","Nanosecond"],"kind":"variant"},"5:6081:14221":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"2:43223:19285":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"6:4449:9212":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"1:10411:7528":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"6:4715:9341":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"0:2056:2768":{"crate_id":0,"path":["chrono","format","Fixed","TimezoneOffsetTripleColon"],"kind":"variant"},"0:1978:2704":{"crate_id":0,"path":["chrono","format","Numeric","WeekFromMon"],"kind":"variant"},"2:30226:36179":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"2:20710:14186":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"18:609:12481":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"6:4702:9335":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"20:331:7176":{"crate_id":20,"path":["time","sys","inner","unix","SteadyTime"],"kind":"struct"},"23:542:7357":{"crate_id":23,"path":["num_traits","Num"],"kind":"trait"},"21:4713:9341":{"crate_id":21,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"2:41744:67":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"2:39994:8525":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"1:10994:11847":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"6:7514:9921":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"1:5336:12695":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"23:268:2509":{"crate_id":23,"path":["num_traits","identities","Zero"],"kind":"trait"},"1:959:8335":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"17:11520:10245":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"21:4707:9338":{"crate_id":21,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"2:20704:14184":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"2:21749:11570":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"2:39759:8557":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"0:2206:2824":{"crate_id":0,"path":["chrono","format","ParseErrorKind","Impossible"],"kind":"variant"},"17:8490:26052":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"16:4904:10960":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"1:8215:12721":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"2:20416:38096":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"6:5767:9563":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"16:4932:10961":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"6:5923:9650":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"18:660:12482":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"6:4796:9383":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"16:5386:10062":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"23:186:7386":{"crate_id":23,"path":["num_traits","cast","NumCast"],"kind":"trait"},"17:12033:10353":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"6:6809:9882":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"17:11410:10232":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"6:5048:9511":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"5:7239:221":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"5:1403:8327":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"6:4624:9299":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"6:6616:9794":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"17:10402:12555":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"17:11220:10221":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"16:4624:10952":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"2:38883:196":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"2:11397:7333":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"17:12293:10408":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"17:12433:10427":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"21:4385:9181":{"crate_id":21,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"6:1747:9102":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"23:557:7372":{"crate_id":23,"path":["num_traits","RefNum"],"kind":"trait"},"2:46582:11807":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"14:160:12633":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"2:40512:11680":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"16:2337:10879":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"16:4037:10943":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"1:4105:13196":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"17:11615:10273":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"21:561:8940":{"crate_id":21,"path":["libc","unix","linger"],"kind":"struct"},"1:6909:8829":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"16:7635:11215":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"16:6146:191":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"9:52:13025":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"16:2502:10891":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"5:7162:101":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"2:12365:105":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"21:6692:9809":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"1:7633:14035":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"1:10648:7484":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"16:5305:10967":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"5:1187:8337":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"23:357:7396":{"crate_id":23,"path":["num_traits","ops","checked","CheckedShr"],"kind":"trait"},"6:4903:9438":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"16:7697:10918":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"21:7530:9924":{"crate_id":21,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"17:11422:10235":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"6:1900:21054":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"23:572:7375":{"crate_id":23,"path":["num_traits","NumAssignRef"],"kind":"trait"},"2:46643:11812":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"21:4922:9453":{"crate_id":21,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"2:20456:38336":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"1:907:7273":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"6:6788:9870":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"1:3209:7532":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"2:41037:87":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"1:5558:203":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"17:8667:10063":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"17:9628:12517":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"2:39685:8553":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"1:11136:8841":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"2:39970:8211":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"21:5784:9565":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"23:352:7393":{"crate_id":23,"path":["num_traits","ops","checked","CheckedNeg"],"kind":"trait"},"17:11600:10267":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"2:42461:11996":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"17:12113:10364":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"2:48972:243":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:46360:11800":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"17:12915:10582":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"1:4329:12692":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"11:1029:8339":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"21:4519:9249":{"crate_id":21,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"17:12959:10613":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"21:651:2124":{"crate_id":21,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"1:7770:7486":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"18:590:9948":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"1:0:1372":{"crate_id":1,"path":["std"],"kind":"module"},"17:9038:40207":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"18:681:9958":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"1:7505:8831":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"2:2138:580":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"0:2068:2726":{"crate_id":0,"path":["chrono","format","Fixed","Internal"],"kind":"variant"},"17:13803:10840":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"1:11006:11848":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"2:42472:11719":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"2:11286:7337":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"16:5402:10063":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"1:508:7873":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"1:10693:117":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"1:8130:7313":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"5:7253:7274":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"21:5988:9681":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"2:25639:7382":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"21:1525:8970":{"crate_id":21,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"1:1894:2664":{"crate_id":1,"path":["std","error"],"kind":"module"},"2:2855:7227":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"16:6236:12606":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"5:3743:8328":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"0:2016:2727":{"crate_id":0,"path":["chrono","format","InternalNumeric"],"kind":"struct"},"16:7411:11013":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"17:8651:10062":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"2:41157:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"21:4490:9235":{"crate_id":21,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"21:4838:9400":{"crate_id":21,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"16:8142:12632":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"5:5803:8771":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"2:41784:72":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"17:12098:10361":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"23:450:7406":{"crate_id":23,"path":["num_traits","ops","saturating","SaturatingSub"],"kind":"trait"},"1:10683:128":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"17:10555:10151":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"1:11877:1350":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"16:6868:11132":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"1:8376:6366":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"21:6677:9804":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"2:44439:11763":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"1:2219:7468":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"2:39624:8549":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"21:5866:9611":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"17:11193:10214":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"2:44333:11759":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"23:448:7404":{"crate_id":23,"path":["num_traits","ops","saturating","SaturatingAdd"],"kind":"trait"},"21:481:8892":{"crate_id":21,"path":["libc","unix","utimbuf"],"kind":"struct"},"2:2808:7217":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"1:9027:216":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"5:4326:8765":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"17:8979:40216":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"17:12085:10359":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"18:727:9970":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"21:4467:9222":{"crate_id":21,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"23:517:7358":{"crate_id":23,"path":["num_traits","sign","Signed"],"kind":"trait"},"2:6601:8543":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"21:6033:9695":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"16:6904:11134":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"6:7556:9929":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"5:7264:7275":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"17:11090:10205":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"1:6411:8826":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"5:7050:195":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"21:4941:9463":{"crate_id":21,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"2:3993:12654":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"23:443:7403":{"crate_id":23,"path":["num_traits","ops","saturating","Saturating"],"kind":"trait"},"21:1643:9049":{"crate_id":21,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"11:632:7557":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"20:405:1934":{"crate_id":20,"path":["time","ParseError"],"kind":"enum"},"1:1574:7273":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"17:8953:10072":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"13:110:40199":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"2:21782:7459":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"2:2934:7232":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"5:6278:8744":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"2:40546:14072":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"17:9670:12522":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"21:5802:9577":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"11:1681:142":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"11:1872:11418":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"1:11894:780":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"17:10857:26059":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"1:3402:7491":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"18:614:40219":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"20:317:1903":{"crate_id":20,"path":["time","duration","OutOfRangeError"],"kind":"struct"},"5:1453:12642":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"21:531:8923":{"crate_id":21,"path":["libc","unix","hostent"],"kind":"struct"},"17:9322:40210":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"21:1708:9088":{"crate_id":21,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"17:12607:10458":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"1:3326:7537":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"17:0:7050":{"crate_id":17,"path":["object"],"kind":"module"},"16:5741:25988":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"22:65:7347":{"crate_id":22,"path":["num_integer","Integer"],"kind":"trait"},"1:9017:164":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"2:44540:11767":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"2:9989:7333":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"17:11391:10231":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"21:5815:9586":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"17:11319:10227":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"17:11556:10250":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"1:9376:8835":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"21:546:8932":{"crate_id":21,"path":["libc","unix","pollfd"],"kind":"struct"},"2:50294:11824":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"2:40748:8264":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"21:5945:9662":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"21:4412:9197":{"crate_id":21,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"23:405:7402":{"crate_id":23,"path":["num_traits","ops","mul_add","MulAddAssign"],"kind":"trait"},"1:936:8332":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"1:4577:9789":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"16:3782:10939":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"17:9946:10100":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"1:8914:32114":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"17:13367:10704":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"2:21113:14187":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"1:11882:633":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"11:738:8327":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"17:9340:12507":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"1:8949:12733":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"2:2834:7222":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"17:9826:12527":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"2:8767:36342":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"2:2863:7229":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"2:43579:192":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"17:13344:10699":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"5:1985:11991":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"1:7567:14091":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"0:1982:2707":{"crate_id":0,"path":["chrono","format","Numeric","NumDaysFromSun"],"kind":"variant"},"2:41969:143":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"6:7520:9922":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"2:6844:7536":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"2:20835:14183":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"5:7319:8328":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"6:7263:9910":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"2:21666:11560":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"16:2298:25104":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"2:30062:36141":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"2:2800:2075":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"6:6694:9809":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"1:8944:12732":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"2:20854:14091":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"2:48959:243":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"17:13499:10738":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"6:4492:9235":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"2:46602:11809":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"16:2694:10899":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"18:507:9937":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"17:11459:10241":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"2:39301:7331":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"2:2761:7574":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"1:10813:8409":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"11:2053:8337":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"21:118:19718":{"crate_id":21,"path":["libc","unix","FILE"],"kind":"enum"},"11:1065:40197":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"16:2470:10890":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"11:751:7273":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"2:42937:7328":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"6:119:19718":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"0:2066:2463":{"crate_id":0,"path":["chrono","format","Fixed","RFC3339"],"kind":"variant"},"16:2572:10894":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"1:8957:11855":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"2:39541:7512":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"17:10516:10145":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"5:5283:1380":{"crate_id":5,"path":["alloc","str"],"kind":"module"},"16:7669:10927":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"2:20751:11547":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"20:447:7172":{"crate_id":20,"path":["time","TmFmt"],"kind":"struct"},"18:531:9942":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"2:2680:7439":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"1:7017:13198":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"7:79:24984":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"0:2204:2820":{"crate_id":0,"path":["chrono","format","ParseErrorKind","OutOfRange"],"kind":"variant"},"6:4681:9323":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"2:2578:114":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"16:4400:10945":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"17:10334:10089":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"20:379:7173":{"crate_id":20,"path":["time","Tm"],"kind":"struct"},"17:11585:10261":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"17:13639:10795":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"21:6137:9736":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"1:1077:8339":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"2:21658:11559":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"6:4819:9390":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"23:375:7398":{"crate_id":23,"path":["num_traits","ops","euclid","CheckedEuclid"],"kind":"trait"},"1:11888:731":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"1:917:8328":{"crate_id":1,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"16:8090:11273":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"2:41197:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"17:13842:10849":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"5:35:8448":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"18:548:139":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"2:12376:8806":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"1:11887:735":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"2:2301:185":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"0:2148:2801":{"crate_id":0,"path":["chrono","format","Item","OwnedLiteral"],"kind":"variant"},"17:12461:10432":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"17:13651:10798":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"16:5811:10992":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"1:4075:13194":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"2:40666:11698":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"16:6321:12608":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"17:8788:10067":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"2:21770:6090":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"21:1661:9061":{"crate_id":21,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"2:4726:14038":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"16:6767:11124":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"21:4440:9209":{"crate_id":21,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"2:42953:7330":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"21:4622:9299":{"crate_id":21,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"21:4648:9311":{"crate_id":21,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"21:4404:9194":{"crate_id":21,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"17:1034:12492":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"0:1306:978":{"crate_id":0,"path":["chrono","offset"],"kind":"module"},"20:454:3675":{"crate_id":20,"path":["time","Fmt"],"kind":"enum"},"21:5046:9511":{"crate_id":21,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"16:2378:10886":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"17:10635:10165":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"6:4804:9386":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"1:5695:12703":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"6:4504:9242":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"2:2504:131":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"2:41960:7453":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"2:39532:8535":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"16:2668:10898":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"0:2046:2523":{"crate_id":0,"path":["chrono","format","Fixed","Nanosecond6"],"kind":"variant"},"2:43244:11744":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"21:4590:9282":{"crate_id":21,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"1:4682:14093":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"11:274:11410":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"16:4969:10962":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"2:40489:152":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"5:4389:8765":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"2:21683:36159":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"16:6474:10929":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"2:39610:11668":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"2:39279:11651":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"1:11879:1460":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"5:1032:13191":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"5:2896:40079":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"2:42524:11544":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"2:10222:12663":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"2:22295:168":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"16:7596:25997":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"1:11216:12116":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"17:13135:10650":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"5:3174:11418":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"2:76:1531":{"crate_id":2,"path":["core","usize"],"kind":"module"},"6:123:19719":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"16:5630:12571":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"2:31780:7426":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"18:636:9957":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"2:21:672":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"5:953:8744":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"21:7244:9899":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"21:7512:9921":{"crate_id":21,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"21:6573:9767":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"21:4662:9312":{"crate_id":21,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"2:1744:11531":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"5:5181:8744":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"17:13233:10672":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"2:44788:11775":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"21:4312:9136":{"crate_id":21,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"6:7485:9914":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"17:12894:10573":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"16:8180:26000":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"17:9453:26069":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"11:2069:8338":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"1:3882:14074":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"17:13453:10729":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"6:6818:9886":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"2:39222:7330":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"1:923:8329":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"11:119:8733":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"1:8036:7489":{"crate_id":1,"path":["std","io","readbuf","BorrowedCursor"],"kind":"struct"},"2:2868:7230":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"2:2859:7228":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"16:7711:11217":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"3:0:435":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"2:44910:11779":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"1:2833:8812":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"1:3926:14077":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"16:3872:10941":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"2:39662:8539":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"2:42203:11718":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"23:400:7401":{"crate_id":23,"path":["num_traits","ops","mul_add","MulAdd"],"kind":"trait"},"16:6544:10917":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"2:42663:7318":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"3:229:207":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"5:3678:11991":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"17:13145:10651":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"6:4381:9178":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"21:1898:21054":{"crate_id":21,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"6:6773:9862":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"2:20433:38341":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"0:1938:2508":{"crate_id":0,"path":["chrono","format","Pad"],"kind":"enum"},"17:8909:7313":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"2:31829:7575":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"17:12194:10375":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"6:4709:9338":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"17:8389:26049":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"11:2205:7282":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"1:8859:14149":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"2:30624:7205":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"2:40798:7657":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"2:11587:7309":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"2:44932:11780":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"1:6087:8806":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"6:1704:9085":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"2:6904:7429":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"17:10936:10197":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"21:4802:9386":{"crate_id":21,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"21:6762:9859":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"21:4972:9476":{"crate_id":21,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"6:4865:990":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"2:41719:11246":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"1:4437:14103":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"2:9337:7452":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"2:43392:7299":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"22:48:7363":{"crate_id":22,"path":["num_integer","average","Average"],"kind":"trait"},"2:3936:7502":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"2:2770:2074":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"2:9238:720":{"crate_id":2,"path":["core","hash"],"kind":"module"},"2:2458:14091":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"16:4728:10954":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"16:2905:10908":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"21:5795:9573":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"1:4177:12690":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"6:6566:9766":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"1:2373:7481":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"11:1840:7273":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"21:4508:9245":{"crate_id":21,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"2:4773:786":{"crate_id":2,"path":["core","iter"],"kind":"module"},"1:8827:14148":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"21:4928:9456":{"crate_id":21,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"17:13443:10726":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"1:11885:733":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"2:41679:11703":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"17:13698:10810":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"0:476:2904":{"crate_id":0,"path":["chrono","format","format_item"],"kind":"function"},"5:5819:11992":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"16:4480:10947":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"2:2812:7219":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"23:349:7394":{"crate_id":23,"path":["num_traits","ops","checked","CheckedRem"],"kind":"trait"},"18:515:9940":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"21:1721:9092":{"crate_id":21,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"2:8599:78":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"1:11884:736":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"2:7129:149":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"17:9028:12501":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"2:21118:14210":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"23:4204:7380":{"crate_id":23,"path":["num_traits","FloatErrorKind"],"kind":"enum"},"2:42603:7312":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"2:39985:7537":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"21:6002:9686":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"6:6802:9879":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"1:7843:7523":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"17:10626:10164":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"21:6786:9870":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"21:4996:9483":{"crate_id":21,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"21:1548:8980":{"crate_id":21,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"1:11063:7174":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"2:0:488":{"crate_id":2,"path":["core"],"kind":"module"},"0:455:1935":{"crate_id":0,"path":["chrono","format","ParseResult"],"kind":"typedef"},"1:1901:7342":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"2:10101:7318":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"0:7:1056":{"crate_id":0,"path":["chrono","prelude"],"kind":"module"},"5:2898:11507":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"2:2592:126":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"2:11362:7338":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"17:8718:10065":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"1:1583:11415":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"2:42423:11540":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"2:42962:7331":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"17:12770:10470":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"2:11346:7336":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"2:2679:5870":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"16:5104:10966":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"2:10707:12664":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"2:24:601":{"crate_id":2,"path":["core","env"],"kind":"macro"},"15:180:13176":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"16:7259:7656":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"1:10215:12004":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"21:553:8935":{"crate_id":21,"path":["libc","unix","winsize"],"kind":"struct"},"16:6243:40203":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"2:44387:11761":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"2:41999:11715":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"2:20388:7205":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"15:0:7048":{"crate_id":15,"path":["addr2line"],"kind":"module"},"2:39582:8545":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"16:6728:11111":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"16:5032:10964":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"1:4855:14128":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"2:21575:11552":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"17:8283:26046":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"17:12536:10447":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"17:13066:10634":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"6:4461:9217":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"1:9022:215":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"5:6997:8033":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"5:1372:8033":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"2:30596:180":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"2:3175:7241":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"16:6981:12610":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"1:8992:11858":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"2:41439:7251":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"11:1628:8741":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"5:2906:11990":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"2:20622:14191":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"2:46220:11798":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"2:39049:11645":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"16:8047:11269":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"23:4211:7381":{"crate_id":23,"path":["num_traits","ParseFloatError"],"kind":"struct"},"1:8781:12725":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"16:2720:10900":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"2:2691:7266":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"0:2038:2747":{"crate_id":0,"path":["chrono","format","Fixed","LowerAmPm"],"kind":"variant"},"17:9218:10089":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"1:3466:7510":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"21:4325:9146":{"crate_id":21,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"23:468:7408":{"crate_id":23,"path":["num_traits","ops","wrapping","WrappingMul"],"kind":"trait"},"1:2215:6073":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"17:9312:12506":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"5:1433:8331":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"2:39492:12671":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"16:2830:10905":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"2:44243:11755":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"1:1789:8387":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"17:11258:10223":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"1:11299:8843":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"6:5955:9667":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"1:644:12678":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"6:4327:9146":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"0:1939:176":{"crate_id":0,"path":["chrono","format","Pad","None"],"kind":"variant"},"21:1615:9024":{"crate_id":21,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"17:10660:10168":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"1:6554:8827":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"1:5356:12696":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"1:7921:12713":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"17:13024:10622":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"2:67:734":{"crate_id":2,"path":["core","i32"],"kind":"module"},"2:48933:243":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:7125:132":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"2:4392:7264":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"2:42451:11543":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"6:482:8892":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"16:6876:10919":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"6:5015:9491":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"0:2042:2525":{"crate_id":0,"path":["chrono","format","Fixed","Nanosecond"],"kind":"variant"},"17:9498:10082":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"1:1589:11416":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"17:12799:10490":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"2:2253:104":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"21:4373:9176":{"crate_id":21,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"5:3266:8328":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"17:11770:10310":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"2:10194:7322":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"21:4808:9387":{"crate_id":21,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"6:4734:9351":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"2:21270:11549":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"16:4327:10944":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"17:9380:26067":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"17:10527:26163":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"6:4974:9476":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"17:13356:10700":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"17:9876:10019":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"16:6254:11042":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"1:5441:12699":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"2:20661:14091":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"2:2306:123":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"6:5947:9662":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"18:690:9961":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"1:5181:187":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"2:45502:11791":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"21:7524:9923":{"crate_id":21,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"17:9866:12530":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"17:9443:12508":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"16:55:11259":{"crate_id":16,"path":["gimli","endianity","Endianity"],"kind":"trait"},"6:4290:9118":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"5:4904:7502":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"17:13812:10844":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"16:7488:11208":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"1:6375:12707":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"2:2501:147":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"2:3981:12653":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"1:10040:12735":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"2:9567:8801":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"6:4786:9379":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"20:0:1598":{"crate_id":20,"path":["time"],"kind":"module"},"1:1054:8337":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"2:39228:11646":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"2:10066:12660":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"5:3995:8744":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"21:6564:9766":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"6:4834:9397":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"2:3194:38540":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"17:12835:10521":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"17:11069:26061":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"11:1845:8328":{"crate_id":11,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"6:6764:9859":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"16:7859:25999":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"1:1991:181":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"5:5697:7273":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"1:3130:32794":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"17:9409:26068":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"6:1589:9005":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"2:20454:38338":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"1:8092:7493":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"17:12902:10576":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"6:4780:9376":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"5:7079:8033":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"1:10826:12699":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"2:5914:8560":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"2:39407:11664":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"2:7138:7565":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"0:1943:2674":{"crate_id":0,"path":["chrono","format","Pad","Space"],"kind":"variant"},"2:8179:7659":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"16:7683:10928":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"17:13181:10656":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"23:0:1967":{"crate_id":23,"path":["num_traits"],"kind":"module"},"23:466:7412":{"crate_id":23,"path":["num_traits","ops","wrapping","WrappingSub"],"kind":"trait"},"2:38843:197":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"2:46696:11815":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"2:39042:7261":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"21:473:8887":{"crate_id":21,"path":["libc","unix","group"],"kind":"struct"},"1:3940:14079":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"6:4422:9200":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"1:8160:14071":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"6:4277:9109":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"21:4817:9390":{"crate_id":21,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"6:6679:9804":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"21:4669:9316":{"crate_id":21,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"5:5631:229":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"6:5858:9604":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"6:5996:9684":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"16:6022:25990":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"6:1604:9017":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"2:9552:8796":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"5:3107:7557":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"2:12433:138":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"17:13332:10693":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"6:5990:9681":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"16:6506:11069":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"2:40957:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"17:11136:6403":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"21:1650:9053":{"crate_id":21,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"1:6371:8211":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"17:9772:10094":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"2:41689:67":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"6:4387:9181":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"0:2052:2528":{"crate_id":0,"path":["chrono","format","Fixed","TimezoneOffsetColon"],"kind":"variant"},"2:7245:156":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"6:1571:8995":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"6:4469:9222":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"1:8485:7559":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"6:7491:9915":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"6:6712:9820":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"21:4961:9470":{"crate_id":21,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"2:2683:222":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"2:39348:7329":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"1:3681:12688":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"17:12634:10461":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"2:45578:11793":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"16:3446:10936":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"17:8858:10069":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"2:2723:7569":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"1:4575:9787":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"21:1685:9078":{"crate_id":21,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"2:50273:11823":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"21:4771:9373":{"crate_id":21,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"17:11299:10226":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"21:6816:9886":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"17:9734:12525":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"0:1994:2520":{"crate_id":0,"path":["chrono","format","Numeric","Second"],"kind":"variant"},"0:2154:2804":{"crate_id":0,"path":["chrono","format","Item","OwnedSpace"],"kind":"variant"},"2:9332:7451":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"1:11889:1478":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"2:44886:11778":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"6:5831:9597":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"17:10440:12561":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"1:413:162":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"17:10923:10195":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"9:445:24991":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"2:39482:8786":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"6:4894:9432":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"17:11879:10330":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"17:9512:12512":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"6:7473:9912":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"2:4318:7261":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"17:13194:10662":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"2:43388:7305":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"16:2967:25131":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"21:4299:9126":{"crate_id":21,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"1:8882:11854":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"2:12241:12668":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"2:45424:11790":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"0:1990:2714":{"crate_id":0,"path":["chrono","format","Numeric","Hour12"],"kind":"variant"},"6:6541:9748":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"17:10377:10143":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"2:11578:7280":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"17:10840:10191":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"17:11234:10222":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"17:9822:12526":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"2:9080:7252":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"21:4269:9108":{"crate_id":21,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"2:2780:7213":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"2:43172:11738":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"16:3047:25132":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"2:21376:14091":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"2:9084:191":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"16:4845:10958":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"21:4951:9469":{"crate_id":21,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"1:4761:14089":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"2:9297:143":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"5:6724:8776":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"16:7572:40202":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"17:10491:12565":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"16:2594:10895":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"5:3537:8264":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"5:773:8746":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"6:5983:9680":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"0:1984:2709":{"crate_id":0,"path":["chrono","format","Numeric","WeekdayFromMon"],"kind":"variant"},"11:822:8333":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"6:506:8903":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"17:12059:10356":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"6:474:8887":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"1:10303:12723":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"6:4998:9483":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"2:44558:11768":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"2:43080:11735":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"16:5571:10913":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"2:42849:7324":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"1:7605:7883":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"6:1527:8970":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"2:40756:8033":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"1:682:14034":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"2:2231:96":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"2:1618:579":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"2:44287:11757":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"6:562:8940":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"2:45612:11794":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"17:12282:10406":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"0:2203:2817":{"crate_id":0,"path":["chrono","format","ParseErrorKind"],"kind":"enum"},"6:5705:9520":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"6:5976:9679":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"1:953:8334":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"1:8071:7538":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"17:11946:10341":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"5:3663:6365":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"4:0:7041":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"14:202:1934":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"0:2272:2082":{"crate_id":0,"path":["chrono","format","strftime","StrftimeItems"],"kind":"struct"},"21:4527:9253":{"crate_id":21,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"21:5733:9545":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"1:7787:7488":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"1:5023:12693":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"17:10104:10104":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"17:12419:10425":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"16:6442:11060":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"17:9188:40215":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"2:48985:243":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"11:1555:12638":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"17:10691:26164":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"2:39402:100":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"6:1550:8980":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"17:9973:10102":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"2:2459:7427":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"17:9617:12516":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"2:43368:7301":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"2:2910:115":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"1:11384:12689":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"2:41952:11710":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"17:11969:10345":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"5:3511:160":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"1:11082:7286":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"21:5058:9516":{"crate_id":21,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"5:5225:7463":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"5:7042:8033":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"0:2029:2284":{"crate_id":0,"path":["chrono","format","Fixed"],"kind":"enum"},"18:574:9937":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"2:39449:14053":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"typedef"},"23:363:7399":{"crate_id":23,"path":["num_traits","ops","euclid","Euclid"],"kind":"trait"},"6:5845:9598":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"2:40012:8529":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"2:41077:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"1:8231:11832":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"2:38969:7237":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"2:43257:7310":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"2:44642:11771":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"0:2062:2776":{"crate_id":0,"path":["chrono","format","Fixed","TimezoneOffsetZ"],"kind":"variant"},"21:5994:9684":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"21:4275:9109":{"crate_id":21,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"2:30032:11577":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"16:7478:10923":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"2:4096:7441":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"2:43635:158":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"17:10270:12552":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"0:421:670":{"crate_id":0,"path":["chrono","format"],"kind":"module"},"17:11891:10332":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"11:2080:8339":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"5:3140:11417":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"17:12646:10468":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"2:7522:8531":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"2:38859:195":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"1:3061:7539":{"crate_id":1,"path":["std","io","readbuf","BorrowedBuf"],"kind":"struct"},"23:538:7417":{"crate_id":23,"path":["num_traits","sign","Unsigned"],"kind":"trait"},"0:2291:2080":{"crate_id":0,"path":["chrono","format","DelayedFormat"],"kind":"struct"},"17:12019:10110":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"1:850:7557":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"10:44:11426":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"16:3640:9982":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"0:2048:2524":{"crate_id":0,"path":["chrono","format","Fixed","Nanosecond9"],"kind":"variant"},"2:2817:7223":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"9:0:7043":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"6:6139:9736":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"2:2786:7216":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"6:4924:9453":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"14:0:7047":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"2:39237:11647":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"21:6710:9820":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"0:1970:2698":{"crate_id":0,"path":["chrono","format","Numeric","IsoYearMod100"],"kind":"variant"},"2:2749:7571":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"17:9098:12502":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"16:6376:10911":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"2:43372:7303":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"22:83:3008":{"crate_id":22,"path":["num_integer","div_rem"],"kind":"function"},"6:4848:9405":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"6:6673:9802":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"2:39035:12670":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"0:2000:2726":{"crate_id":0,"path":["chrono","format","Numeric","Internal"],"kind":"variant"},"17:10897:10194":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"6:4314:9136":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"21:4778:9376":{"crate_id":21,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"17:13433:10723":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"6:4612:9290":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"1:10922:8838":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"2:2923:7231":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"17:8521:26053":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"2:43452:19447":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"2:11799:110":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"21:4534:9255":{"crate_id":21,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"1:561:7880":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"21:5741:9547":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"23:502:7414":{"crate_id":23,"path":["num_traits","pow","Pow"],"kind":"trait"},"17:11628:10277":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"17:13612:10783":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"6:4432:9206":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"6:5786:9565":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"1:11234:11880":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"1:7827:117":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"16:7103:11855":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"17:13015:10619":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"17:13249:10675":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"16:6164:11040":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"17:11037:26060":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"17:12510:10445":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"1:3136:33537":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"11:669:8330":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"2:42867:7325":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"20:361:7176":{"crate_id":20,"path":["time","SteadyTime"],"kind":"struct"},"2:42533:11997":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"18:624:40217":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"16:4568:10950":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"17:9265:12505":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"2:46666:11813":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"1:4126:13197":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"1:4684:14094":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"2:3164:231":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"2:44864:11777":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"11:1852:11415":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"24:0:1965":{"crate_id":24,"path":["iana_time_zone"],"kind":"module"},"6:6639:9795":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"1:537:7878":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"17:10000:10179":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"1:6540:11999":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"2:29803:7455":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"17:8548:26054":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"6:62:19664":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"2:46591:11808":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"2:43384:7304":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"2:39710:8555":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"5:4197:7557":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"21:4430:9206":{"crate_id":21,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"21:499:8900":{"crate_id":21,"path":["libc","unix","rlimit"],"kind":"struct"},"17:12522:10446":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"1:5372:12697":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"1:3616:14073":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"21:7541:9928":{"crate_id":21,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"2:42713:7319":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"6:7508:9920":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"2:39001:7240":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"2:11598:7307":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"2:40740:7557":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"1:3211:7533":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"17:13857:10850":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"2:2495:74":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"2:14:2730":{"crate_id":2,"path":["core","write"],"kind":"macro"},"17:10052:12546":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"23:1930:7384":{"crate_id":23,"path":["num_traits","float","FloatConst"],"kind":"trait"},"5:2626:11514":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"2:21522:11551":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"5:670:228":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"5:7146:7449":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"1:7648:14036":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"1:1439:142":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"2:8178:7660":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"1:11890:1475":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"17:1978:12497":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"17:9275:40209":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"21:505:8903":{"crate_id":21,"path":["libc","unix","rusage"],"kind":"struct"},"23:452:7405":{"crate_id":23,"path":["num_traits","ops","saturating","SaturatingMul"],"kind":"trait"},"16:6488:11061":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"1:5572:8816":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"1:3988:14082":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"16:7509:10924":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"16:6671:11098":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"11:444:140":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"17:13121:10646":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"21:4634:9300":{"crate_id":21,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"1:11897:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"1:3876:14075":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"21:586:8953":{"crate_id":21,"path":["libc","unix","servent"],"kind":"struct"},"2:39265:11650":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"0:1959:2507":{"crate_id":0,"path":["chrono","format","Numeric"],"kind":"enum"},"6:5817:9586":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"2:41981:6366":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"2:45312:11788":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"1:3384:6153":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"21:6654:9797":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"2:46562:11805":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"6:1677:9072":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"2:42795:7326":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"5:4808:201":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"6:1509:8962":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"2:44518:11766":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"1:1068:8338":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"2:38925:198":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"2:39653:8551":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"2:44688:11772":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"1:11870:368":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"1:11322:12687":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"2:46422:11801":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"16:5594:10915":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"6:4399:9190":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"2:9044:130":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"21:4933:9458":{"crate_id":21,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"6:6012:9689":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"17:12345:10414":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"1:10856:11849":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"5:3524:7557":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"2:21756:7456":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"17:11355:10229":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"5:1444:195":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"2:40824:207":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"17:11785:10314":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"2:38903:199":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"6:4953:9469":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"2:41453:7252":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"1:11440:11882":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"6:5743:9547":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"6:4482:9228":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"21:6800:9879":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"1:11895:1531":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"1:3356:7502":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"0:1964:2691":{"crate_id":0,"path":["chrono","format","Numeric","YearMod100"],"kind":"variant"},"2:45054:11783":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"2:39773:8558":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"21:1507:8962":{"crate_id":21,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"0:1722:1925":{"crate_id":0,"path":["chrono","offset","TimeZone"],"kind":"trait"},"17:12224:10394":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"1:8275:11833":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"16:8129:12629":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"1:7931:6269":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"7:0:1521":{"crate_id":7,"path":["unwind"],"kind":"module"},"1:8223:12718":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"1:7775:7487":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"1:11153:11874":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"17:13240:10674":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"6:1663:9061":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"17:13211:10667":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"1:6487:14143":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"21:5829:9597":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"2:7190:4443":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"2:5513:8538":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"1:8814:11851":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"17:9148:40208":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"2:40997:80":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"11:762:8328":{"crate_id":11,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"5:279:2663":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"15:219:13022":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"2:42909:7317":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"24:24:8359":{"crate_id":24,"path":["iana_time_zone","GetTimezoneError"],"kind":"enum"},"17:9478:12510":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"17:11434:10236":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"2:45762:11795":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"21:5886:9627":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"17:11471:10242":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"2:41446:7250":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"2:4237:204":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"2:9074:118":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"16:7042:11156":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"16:6935:12609":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"2:48998:243":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"21:4540:9257":{"crate_id":21,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"6:4690:9328":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"5:7193:36161":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"5:3153:40071":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"2:11127:12666":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"2:42432:11541":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"2:40680:178":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"5:6680:241":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"1:2870:126":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"2:39572:8544":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"17:10465:12563":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"2:39963:11675":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"1:487:8808":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"2:4246:7431":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"21:540:8929":{"crate_id":21,"path":["libc","unix","iovec"],"kind":"struct"},"16:7366:25996":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"2:9076:7250":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"2:10740:12665":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"1:737:140":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"5:6592:8455":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstBufDrop"],"kind":"struct"},"22:89:3886":{"crate_id":22,"path":["num_integer","div_mod_floor"],"kind":"function"},"16:2546:10893":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"17:10670:10170":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"18:582:7205":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"16:2448:10889":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"16:7016:11150":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"2:21378:14185":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"20:296:120":{"crate_id":20,"path":["time","duration","Duration"],"kind":"struct"},"2:20702:14091":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"6:5005:9486":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"0:2164:126":{"crate_id":0,"path":["chrono","format","Item","Error"],"kind":"variant"},"6:5888:9627":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"13:0:7040":{"crate_id":13,"path":["std_detect"],"kind":"module"},"17:9641:12518":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"23:471:7409":{"crate_id":23,"path":["num_traits","ops","wrapping","WrappingNeg"],"kind":"trait"},"16:6390:11055":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"17:9138:12503":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"1:4113:14100":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"22:17:7359":{"crate_id":22,"path":["num_integer","roots","Roots"],"kind":"trait"},"5:7209:11523":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"0:2060:2774":{"crate_id":0,"path":["chrono","format","Fixed","TimezoneOffset"],"kind":"variant"},"17:8443:26051":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"16:3585:10937":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"6:6836:9890":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"11:2198:11422":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"21:5856:9604":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"0:1974:2516":{"crate_id":0,"path":["chrono","format","Numeric","Day"],"kind":"variant"},"1:11875:1037":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"16:8256:11285":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"2:42621:7314":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"0:2151:2674":{"crate_id":0,"path":["chrono","format","Item","Space"],"kind":"variant"},"1:7568:7893":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"6:6045:9699":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"2:20830:14091":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"16:2862:10906":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"17:9557:10089":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"1:11854:32288":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"2:45968:11796":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"17:13426:10722":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"2:45266:11787":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"21:1587:9005":{"crate_id":21,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"6:1534:8972":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"2:39512:8534":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"21:5933:9655":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"2:30120:36163":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"21:0:807":{"crate_id":21,"path":["libc"],"kind":"module"},"17:10283:10137":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"6:5935:9655":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"17:12126:10365":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"2:42372:12674":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"2:20401:38096":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"5:770:95":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"23:354:7395":{"crate_id":23,"path":["num_traits","ops","checked","CheckedShl"],"kind":"trait"},"17:11821:10322":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"17:11502:10244":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"11:853:8335":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"1:9371:7487":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"17:12923:10583":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"2:4372:7262":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"21:487:8895":{"crate_id":21,"path":["libc","unix","timeval"],"kind":"struct"},"1:1571:8033":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"1:11886:734":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"1:10619:12743":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"23:347:7391":{"crate_id":23,"path":["num_traits","ops","checked","CheckedDiv"],"kind":"trait"},"2:42813:7327":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"1:4992:12693":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"1:6867:12943":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"6:5041:9508":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"2:7515:7276":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"21:578:8948":{"crate_id":21,"path":["libc","unix","tms"],"kind":"struct"},"18:491:9936":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"6:4773:9373":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"21:1557:8986":{"crate_id":21,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"2:43234:11740":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"16:7743:10916":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"16:6943:25994":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"1:8458:7556":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"17:13169:10653":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"17:9959:10101":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"11:0:7045":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"1:8896:12726":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"1:2188:6042":{"crate_id":1,"path":["std","fs"],"kind":"module"},"5:1971:6365":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"2:42645:7320":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"6:6557:9760":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"1:10643:11864":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"2:2804:7218":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"16:7652:195":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"2:42767:7322":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"16:5998:25989":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"1:11821:12117":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"1:1852:8405":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"9:502:11484":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"2:2682:223":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"1:8326:7553":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"2:39745:7513":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"11:1138:8340":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"17:13033:10623":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"1:5928:203":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"9:174:13035":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"16:8109:11276":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"2:20435:38339":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"2:20863:11547":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"18:671:12486":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"2:44595:11770":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"17:12372:10418":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"16:2879:10907":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"2:3181:7243":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"5:2397:11511":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"14:187:25081":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"0:2034:2742":{"crate_id":0,"path":["chrono","format","Fixed","ShortWeekdayName"],"kind":"variant"},"2:3169:133":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"2:11111:19414":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"17:13324:10692":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"21:4352:9168":{"crate_id":21,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"2:6695:8519":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"17:9933:10098":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"16:7029:11153":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"17:8360:26048":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"2:41991:11714":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"16:7588:12627":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"2:9033:207":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"2:10139:12661":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"2:45108:11785":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"21:4379:9178":{"crate_id":21,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"2:43419:120":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"0:1988:2517":{"crate_id":0,"path":["chrono","format","Numeric","Hour"],"kind":"variant"},"23:340:7390":{"crate_id":23,"path":["num_traits","ops","checked","CheckedAdd"],"kind":"trait"},"16:6890:10920":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"2:4363:7437":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"2:43145:11737":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"17:10257:12551":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"21:1745:9102":{"crate_id":21,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"2:39592:8546":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"2:42199:11717":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"1:8789:8033":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"21:4480:9228":{"crate_id":21,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"17:242:12487":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"17:13159:10652":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"22:87:2910":{"crate_id":22,"path":["num_integer","mod_floor"],"kind":"function"},"6:5773:9564":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"17:12496:10444":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"1:2210:127":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"21:7216:9896":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"2:10208:12662":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"21:7483:9914":{"crate_id":21,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"6:1514:8964":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"2:43051:11726":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"17:13821:10846":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"17:10823:10040":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"16:6793:11125":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"1:9990:12003":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"17:10712:26165":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"21:4502:9242":{"crate_id":21,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"21:4901:9438":{"crate_id":21,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"2:1625:11528":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"2:8285:7280":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"2:22829:7403":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"17:420:10026":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"17:13053:10629":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"17:3142:12499":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"1:881:8326":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"2:43440:7289":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"17:12576:10452":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"11:659:8033":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"2:2672:217":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"2:40004:8527":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"21:6010:9689":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"6:7526:9923":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"2:43664:8466":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"1:355:7891":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"6:4521:9249":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"2:21607:11556":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"2:43029:19284":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"6:4671:9316":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"11:861:8336":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"2:39554:8536":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"6:568:8943":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"6:5804:9577":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"1:1600:11418":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"2:41237:84":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"17:13316:10691":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"16:3815:10940":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"17:10743:12568":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"0:1980:1938":{"crate_id":0,"path":["chrono","format","Numeric","IsoWeek"],"kind":"variant"},"2:40917:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"22:101:7352":{"crate_id":22,"path":["num_integer","IterBinomial"],"kind":"struct"},"9:388:24992":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"2:40631:11830":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"17:8971:127":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"2:4747:38228":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"21:4364:9171":{"crate_id":21,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"17:13667:10802":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"1:8751:11848":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"2:42631:7313":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"21:6043:9699":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"2:10180:7323":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"6:4756:9362":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"21:594:8958":{"crate_id":21,"path":["libc","unix","protoent"],"kind":"struct"},"1:4680:14090":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"17:10721:10174":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"6:1583:9003":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"11:1044:25068":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"1:8064:7536":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"1:4257:12691":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"17:10649:10166":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"2:7518:8265":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"1:7467:12748":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"2:7559:36340":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"6:7240:9897":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"21:5921:9650":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"1:2575:7514":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"6:6656:9797":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"21:7518:9922":{"crate_id":21,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"17:12331:10413":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"2:39008:11644":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"5:3078:94":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"5:2159:40146":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"2:3329:68":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"17:9566:12505":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"16:7317:40205":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"16:4789:10956":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"1:2363:7476":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"2:9754:219":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"6:4726:9347":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"2:41762:126":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"6:1652:9053":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"2:46571:11806":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"17:10142:26138":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"5:870:7557":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"2:42615:7284":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"6:5761:9560":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"17:13625:10789":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"5:1356:8264":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"14:31:12633":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"17:13488:10737":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"16:7498:11209":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"17:8256:26033":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"2:9088:7255":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"17:11011:10200":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"2:2829:7221":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"17:11573:10258":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"16:5944:12573":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"2:39362:11660":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"1:7524:8833":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"0:1720:1924":{"crate_id":0,"path":["chrono","offset","Offset"],"kind":"trait"},"1:11838:6048":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"18:699:9962":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"23:194:7385":{"crate_id":23,"path":["num_traits","cast","AsPrimitive"],"kind":"trait"},"2:3091:7238":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"18:564:9947":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"6:4573:9281":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"2:3643:8033":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"2:21643:7380":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"21:1607:9019":{"crate_id":21,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"21:5981:9680":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"17:13763:10829":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"2:40595:36142":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"17:9545:10057":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"1:7584:7885":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"1:1578:8328":{"crate_id":1,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"2:43380:7306":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"1:11896:1112":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"17:13744:10824":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"21:4358:9169":{"crate_id":21,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"23:432:29920":{"crate_id":23,"path":["num_traits","ops","overflowing","OverflowingAdd"],"kind":"trait"},"17:12449:10430":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"1:7810:128":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"0:2040:2749":{"crate_id":0,"path":["chrono","format","Fixed","UpperAmPm"],"kind":"variant"},"5:6351:8033":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"16:2642:10897":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"2:4169:7260":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"5:6988:8447":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"1:11045:2280":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"0:2214:2835":{"crate_id":0,"path":["chrono","format","ParseErrorKind","TooLong"],"kind":"variant"},"1:932:8331":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"2:2839:7224":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"1:11452:11883":{"crate_id":1,"path":["std","personality","dwarf","eh","EHContext"],"kind":"struct"},"16:6351:25991":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"17:13041:10624":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"6:5034:9505":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"2:45007:11782":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"11:320:8735":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"2:44457:11764":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"1:2478:7521":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"9:325:11461":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"14:165:25074":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"0:2216:2837":{"crate_id":0,"path":["chrono","format","ParseErrorKind","BadFormat"],"kind":"variant"},"21:4724:9347":{"crate_id":21,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"21:4552:9266":{"crate_id":21,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"8:0:7042":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"6:4442:9209":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"17:13791:10838":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"17:11446:10239":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"0:2050:2758":{"crate_id":0,"path":["chrono","format","Fixed","TimezoneName"],"kind":"variant"},"1:11878:1380":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"6:4301:9126":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"5:7028:40072":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"1:5721:12704":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"1:10661:11870":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"1:928:8330":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"21:7489:9915":{"crate_id":21,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"2:45085:11784":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"17:13082:10637":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"2:40816:190":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"17:10015:12540":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"0:2064:2456":{"crate_id":0,"path":["chrono","format","Fixed","RFC2822"],"kind":"variant"},"17:10303:12554":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"6:7497:9916":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"2:43652:11754":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"2:9744:14091":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"2:46544:11804":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"17:11813:10320":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"2:4:1002":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"6:4982:9478":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"2:3246:7247":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"18:481:9935":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"16:2616:10896":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"2:46617:11810":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"0:2032:2740":{"crate_id":0,"path":["chrono","format","Fixed","LongMonthName"],"kind":"variant"},"6:4375:9176":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"16:8025:11268":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"21:1702:9085":{"crate_id":21,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"2:39563:8537":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"10:0:7044":{"crate_id":10,"path":["adler"],"kind":"module"},"11:1836:8033":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"11:2178:11419":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"2:44956:11781":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"2:43622:11751":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"2:44309:11758":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"1:7835:12712":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"2:39956:8521":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"2:3154:7239":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"2:2941:2211":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"2:44577:11769":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"2:41944:7454":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"2:22064:172":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"11:1120:12637":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"17:10967:10198":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"2:12216:189":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"21:6671:9802":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"2:39332:19317":{"crate_id":2,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"2:2792:7215":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"2:42928:7332":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"21:4980:9478":{"crate_id":21,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"2:9034:2279":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"2:22031:175":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"17:12307:10410":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"21:1539:8975":{"crate_id":21,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"6:0:807":{"crate_id":6,"path":["libc"],"kind":"module"},"17:10989:10150":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"6:4935:9458":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"1:8901:105":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"20:355:7175":{"crate_id":20,"path":["time","PreciseTime"],"kind":"struct"},"21:4738:9353":{"crate_id":21,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"17:10598:10198":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"17:9886:12532":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"17:562:10203":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"21:6834:9890":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"2:2975:7244":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"17:10080:12549":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"17:13659:10801":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"5:5229:7464":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"1:8080:7490":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"17:11109:10208":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"2:4028:8462":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"1:2345:7471":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"0:2145:2514":{"crate_id":0,"path":["chrono","format","Item","Literal"],"kind":"variant"},"21:567:8943":{"crate_id":21,"path":["libc","unix","sigval"],"kind":"struct"},"16:6520:11071":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"1:3934:14078":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"2:2507:235":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"21:1675:9072":{"crate_id":21,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"14:7:12633":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"2:38828:7236":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"2:38742:7248":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"16:7065:11158":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"21:7506:9920":{"crate_id":21,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"17:11861:10329":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"1:5322:12694":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"17:8823:10068":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"6:4366:9171":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"1:6135:12705":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"18:0:7051":{"crate_id":18,"path":["memchr"],"kind":"module"},"2:1534:7502":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"11:834:8334":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"16:7626:12628":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"5:7222:11525":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"2:46628:11811":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"17:13516:10745":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"2:11644:19278":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"17:11653:10281":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"1:8143:7315":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"2:8772:13044":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"2:46681:11814":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"5:4356:7502":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"1:9051:2280":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"1:4904:7648":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"1:9364:127":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"2:11573:1962":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"1:8719:12723":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"2:40867:7557":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"2:42695:7321":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"5:6582:8454":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"17:12236:10396":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"17:487:12490":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"2:4005:102":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"2:39694:8554":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"16:6662:11097":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"5:7134:7282":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"14:221:11361":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"1:6623:12706":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"16:5655:10914":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"6:653:2124":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"21:6122:9725":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"21:61:19664":{"crate_id":21,"path":["libc","unix","DIR"],"kind":"enum"},"5:3148:11415":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"21:4700:9335":{"crate_id":21,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"16:4445:10946":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"6:4810:9387":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"6:5868:9611":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"1:5565:8815":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"6:1723:9092":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"6:4873:9417":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"2:39419:36161":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"11:697:8331":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"1:11873:1494":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"11:1003:8338":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"17:9653:12519":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"17:9068:40214":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"2:1735:11529":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"2:30026:8444":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"2:6512:6380":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"1:2551:8796":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"17:12046:10354":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"16:8214:4508":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"2:48563:14219":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"17:1947:12494":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"18:80:13168":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"2:40529:11682":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"16:7244:40206":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"6:1609:9019":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"17:386:12489":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"21:5039:9508":{"crate_id":21,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"21:6637:9795":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"17:11641:10278":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"21:1518:8967":{"crate_id":21,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"23:96:29912":{"crate_id":23,"path":["num_traits","bounds","LowerBounded"],"kind":"trait"},"2:2684:107":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"21:525:8920":{"crate_id":21,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"2:2997:7235":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"21:6614:9794":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"17:11339:10228":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"1:4738:8813":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"2:38781:7245":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"1:4579:9791":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"2:20861:14188":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"17:13399:10715":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"6:4455:9214":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"21:4688:9328":{"crate_id":21,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"1:5069:188":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"1:1770:6041":{"crate_id":1,"path":["std","collections","hash_map"],"kind":"module"},"17:10039:12544":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"16:5976:10870":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"6:5054:9513":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"16:4596:10951":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"23:101:29913":{"crate_id":23,"path":["num_traits","bounds","UpperBounded"],"kind":"trait"},"11:777:8740":{"crate_id":11,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"1:7666:8408":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"2:20585:14190":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"2:41277:91":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"6:500:8900":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"2:7092:8532":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"5:2179:11510":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"16:5797:10991":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"2:31820:6049":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"9:234:6366":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"2:3392:12652":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"2:22394:7457":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"23:569:7374":{"crate_id":23,"path":["num_traits","NumAssign"],"kind":"trait"},"17:13469:10732":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"16:7449:12620":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"17:12259:10405":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"2:46468:11802":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"17:8632:26034":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"2:39435:11665":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"2:40892:180":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"5:1394:8326":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"18:521:29905":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"18:113:13172":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"17:12072:10357":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"2:9086:7254":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"17:9748:10089":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"1:8123:7513":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"16:5367:25102":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"1:1827:8398":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"5:1068:13192":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"1:8843:14147":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"17:1787:12493":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"6:4828:9396":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"2:42749:7323":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"17:11844:10326":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"16:6327:11047":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"17:8598:26056":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"17:9895:12535":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"5:1706:8328":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"21:1581:9003":{"crate_id":21,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"2:22361:166":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"1:8249:12722":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"2:40575:11689":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"16:5779:10987":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"0:2186:1934":{"crate_id":0,"path":["chrono","format","ParseError"],"kind":"struct"},"17:1919:26096":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"1:11891:1476":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"17:10416:12559":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"5:2106:11504":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"21:6771:9862":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"2:42919:7316":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"21:4610:9290":{"crate_id":21,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"2:42899:7315":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"17:11282:10224":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"2:44740:11774":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"17:8753:10066":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"0:0:1964":{"crate_id":0,"path":["chrono"],"kind":"module"},"1:8773:7557":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"2:22229:170":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"1:8399:7554":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"16:8156:10930":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"6:4750:9359":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"2:22328:169":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"0:2797:1940":{"crate_id":0,"path":["chrono","offset","LocalResult"],"kind":"enum"},"2:43209:11739":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"16:7767:25998":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"2:12155:134":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"6:7543:9928":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"23:434:29921":{"crate_id":23,"path":["num_traits","ops","overflowing","OverflowingSub"],"kind":"trait"},"2:7167:119":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"16:6990:11149":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"6:6098:9710":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"16:7557:11211":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"6:4650:9311":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"17:12622:10168":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"6:1617:9024":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"16:5000:10963":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"2:46298:11799":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"16:7543:10926":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"2:7088:8533":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"2:3509:7273":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"2:2234:97":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"2:9946:7320":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"1:3974:14080":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"1:8468:7557":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"18:599:40220":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"1:6011:8818":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"6:547:8932":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"11:300:11413":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"1:7659:6055":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"5:3765:8744":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"2:48946:243":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"17:12563:10451":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"16:6179:12580":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"6:1687:9078":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"1:1850:8404":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"23:135:3009":{"crate_id":23,"path":["num_traits","cast","ToPrimitive"],"kind":"trait"},"16:6201:12595":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"1:1567:7557":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"2:46758:11817":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"6:6593:9776":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"17:13292:10683":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"2:44355:11760":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"5:1422:8330":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"5:2895:8076":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"5:1412:8329":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"0:2030:2737":{"crate_id":0,"path":["chrono","format","Fixed","ShortMonthName"],"kind":"variant"},"2:43561:202":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"6:7479:9913":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"2:2765:2072":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"1:2361:7475":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"2:46110:11797":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"2:2337:179":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"17:13678:10807":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"2:38947:200":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"1:6759:14180":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"1:10673:7488":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"17:9424:10079":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"0:2212:2833":{"crate_id":0,"path":["chrono","format","ParseErrorKind","TooShort"],"kind":"variant"},"2:2775:7214":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"5:5025:8771":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"0:1972:1916":{"crate_id":0,"path":["chrono","format","Numeric","Month"],"kind":"variant"},"17:10125:10106":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"2:30048:67":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"1:10939:8840":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"1:3169:7530":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"21:4784:9379":{"crate_id":21,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"16:7837:11231":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"21:7238:9897":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"1:11876:309":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"0:2058:2527":{"crate_id":0,"path":["chrono","format","Fixed","TimezoneOffsetColonZ"],"kind":"variant"},"17:10705:10173":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"1:10451:7883":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"16:3300:10935":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"0:2084:2779":{"crate_id":0,"path":["chrono","format","InternalFixed"],"kind":"struct"},"21:7471:9912":{"crate_id":21,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"1:8416:7555":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"2:40883:8033":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"21:4571:9281":{"crate_id":21,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"21:4863:990":{"crate_id":21,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"16:4818:10957":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"1:10408:7532":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"21:4826:9396":{"crate_id":21,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"2:12189:37997":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"21:4420:9200":{"crate_id":21,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"2:46506:11803":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"17:11484:10243":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"12:0:7046":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"1:2615:7524":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"2:45548:11792":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"1:9971:8398":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"11:815:8332":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"11:2190:40198":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"23:382:7400":{"crate_id":23,"path":["num_traits","ops","inv","Inv"],"kind":"trait"},"2:39249:36169":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"16:5643:10975":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"1:6334:12706":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"17:12388:10420":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"16:2319:10877":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"0:1960:2513":{"crate_id":0,"path":["chrono","format","Numeric","Year"],"kind":"variant"},"16:6558:11073":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"2:22262:167":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"5:1203:8339":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"2:41460:7253":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"0:725:2667":{"crate_id":0,"path":["chrono","format","strftime"],"kind":"module"},"16:6336:11048":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"17:11532:10248":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"6:573:8945":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"2:21469:11550":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"2:2824:7220":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"2:2343:186":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"17:10885:10193":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"1:11843:14037":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"6:541:8929":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"17:9108:40212":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"6:4554:9266":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"2:41735:70":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"11:98:11409":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"6:4529:9253":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"21:6584:9772":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"17:12550:10450":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"1:11228:11879":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"1:7780:7484":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"2:9921:8264":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"16:7529:10925":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"17:9696:10082":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"16:5847:10998":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"5:6164:8776":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"2:39601:8547":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"2:43614:12111":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"0:2161:2284":{"crate_id":0,"path":["chrono","format","Item","Fixed"],"kind":"variant"},"17:10615:10163":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"1:9087:7894":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","Key"],"kind":"struct"},"6:6575:9767":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"5:7179:11520":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"1:10346:8836":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"2:12168:19324":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"2:22130:174":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"1:11883:634":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"2:11593:7308":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"6:6035:9695":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"21:493:8898":{"crate_id":21,"path":["libc","unix","timespec"],"kind":"struct"},"17:9683:12523":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"2:9535:8795":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"1:7258:32547":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"5:6232:7273":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"9:421:24993":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"17:11372:10230":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"17:9839:12528":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"1:4097:13195":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"1:361:7892":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"6:554:8935":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"17:13477:10733":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"5:5475:8453":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"5:5783:69":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"17:12178:10370":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"16:6717:11110":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"1:624:7344":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"18:755:9975":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"17:9596:10086":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"2:42944:7329":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"5:6563:8453":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"1:2347:6057":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"1:9109:32305":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","DtorState"],"kind":"enum"},"2:39369:19318":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"17:12138:10366":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"2:39642:8559":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"2:44263:11756":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"21:6686:9808":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"6:1559:8986":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"1:5766:8817":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"21:1569:8995":{"crate_id":21,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"21:6807:9882":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"6:5735:9545":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"5:1048:11988":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"2:1721:19374":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"18:736:29903":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"5:853:8751":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"5:1232:8340":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"0:2157:2507":{"crate_id":0,"path":["chrono","format","Item","Numeric"],"kind":"variant"},"16:5708:10980":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"0:1976:2702":{"crate_id":0,"path":["chrono","format","Numeric","WeekFromSun"],"kind":"variant"},"2:9222:12658":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"2:3209:7246":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"21:6096:9710":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"16:6535:8732":{"crate_id":16,"path":["gimli","read","lazy","imp","LazyArc"],"kind":"struct"},"1:8149:12718":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"17:8195:26035":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"1:11363:12688":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"16:535:10868":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"22:0:1966":{"crate_id":22,"path":["num_integer"],"kind":"module"},"2:11323:7339":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"1:8204:11831":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"23:345:7392":{"crate_id":23,"path":["num_traits","ops","checked","CheckedMul"],"kind":"trait"},"16:2742:10901":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"23:545:7370":{"crate_id":23,"path":["num_traits","NumOps"],"kind":"trait"},"11:985:8337":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"1:11201:11877":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"2:1903:8463":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"22:222:7356":{"crate_id":22,"path":["num_integer","ExtendedGcd"],"kind":"struct"},"1:8937:12731":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"1:894:8327":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"1:5912:8815":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"23:305:7389":{"crate_id":23,"path":["num_traits","int","PrimInt"],"kind":"trait"},"21:4397:9190":{"crate_id":21,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"16:8072:11271":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"0:2054:2765":{"crate_id":0,"path":["chrono","format","Fixed","TimezoneOffsetDoubleColon"],"kind":"variant"},"1:3133:33538":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"1:8197:11830":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"5:805:8749":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"1:3912:14076":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"17:9523:12513":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"16:5418:10969":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"16:8170:11278":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"5:679:109":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"5:3965:7273":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"1:10713:32337":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"16:6819:11126":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"1:9174:8404":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"5:6749:8782":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"0:1941:2509":{"crate_id":0,"path":["chrono","format","Pad","Zero"],"kind":"variant"},"21:7477:9913":{"crate_id":21,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"5:2902:11989":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"6:7218:9896":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"0:1992:2519":{"crate_id":0,"path":["chrono","format","Numeric","Minute"],"kind":"variant"},"17:13265:10679":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"1:10838:32294":{"crate_id":1,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"1:8765:11849":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"1:5501:9697":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"6:5962:9668":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"6:6124:9725":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"17:12980:10618":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"1:8474:7558":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"6:7532:9924":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"21:4473:9225":{"crate_id":21,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"1:9070:6092":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"16:5963:11009":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"1:3450:34064":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"16:5346:10968":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"17:9796:10096":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"2:9078:7251":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"6:1695:9079":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"19:0:1019":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"17:9488:12511":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"0:1986:2711":{"crate_id":0,"path":["chrono","format","Numeric","Ordinal"],"kind":"variant"},"16:4872:10959":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"17:13101:10638":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"21:5003:9486":{"crate_id":21,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"2:9453:8793":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"1:3441:2279":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"1:8795:11850":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"1:8308:7652":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"17:12318:10411":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"1:11159:12747":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"1:5688:12700":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"2:42498:8534":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"2:12407:202":{"crate_id":2,"path":["core","task","ready","Ready"],"kind":"struct"},"2:42441:11995":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"6:6743:9845":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"6:4881:9422":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"17:10747:126":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"16:7077:25995":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"1:1791:8388":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"11:725:8326":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"1:3248:7528":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"21:6102:9711":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"2:21704:36164":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"21:7261:9910":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"6:4930:9456":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"2:41317:12657":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"1:3783:12689":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"21:4879:9422":{"crate_id":21,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"2:2796:2073":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"1:10198:12698":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"1:11018:32334":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"1:2541:7522":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"6:1541:8975":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"17:10478:12564":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"11:60:13185":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"5:623:12639":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"17:13419:10721":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"21:1602:9017":{"crate_id":21,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"6:1645:9049":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"2:1809:7440":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"1:2868:207":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"1:8971:31978":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"0:1998:2722":{"crate_id":0,"path":["chrono","format","Numeric","Timestamp"],"kind":"variant"},"23:436:29922":{"crate_id":23,"path":["num_traits","ops","overflowing","OverflowingMul"],"kind":"trait"},"18:707:7309":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"21:122:19719":{"crate_id":21,"path":["libc","unix","fpos_t"],"kind":"enum"},"23:464:7407":{"crate_id":23,"path":["num_traits","ops","wrapping","WrappingAdd"],"kind":"trait"},"1:6103:8822":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"6:6533:9743":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"0:2210:2831":{"crate_id":0,"path":["chrono","format","ParseErrorKind","Invalid"],"kind":"variant"},"0:529:670":{"crate_id":0,"path":["chrono","format","format"],"kind":"function"},"2:2845:7225":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"21:4856:9411":{"crate_id":21,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"1:8253:9776":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"6:4406:9194":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"17:12483:10443":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"6:494:8898":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"2:22163:171":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"11:1859:11416":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"2:39388:11663":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"16:5920:11006":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"17:10428:12560":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"17:11163:10210":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"6:6688:9808":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"5:4037:8264":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"21:4794:9383":{"crate_id":21,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"1:649:14033":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"2:39289:11652":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"23:93:7383":{"crate_id":23,"path":["num_traits","bounds","Bounded"],"kind":"trait"},"1:10127:13100":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"2:43277:7281":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"2:9289:139":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"21:1693:9079":{"crate_id":21,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"1:3459:7492":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"21:5013:9491":{"crate_id":21,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"11:646:8264":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"2:39028:4508":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"21:5843:9598":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"}},"external_crates":{"23":{"name":"num_traits","html_root_url":"https://docs.rs/num-traits/0.2/"},"20":{"name":"time","html_root_url":"https://doc.rust-lang.org/time/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"22":{"name":"num_integer","html_root_url":"https://docs.rs/num-integer/0.1/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"24":{"name":"iana_time_zone","html_root_url":null},"21":{"name":"libc","html_root_url":null},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":24}