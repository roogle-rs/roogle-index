{"root":"0:0:2304","crate_version":"0.4.19","includes_private":false,"index":{"0:185":{"id":"0:185","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[526,13],"end":[526,19]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"Offset","name":"Offset","id":"0:261:1897","glob":false}},"a:2:3291:12723-0:2617:2809":{"id":"a:2:3291:12723-0:2617:2809","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3291:12723","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2617:2809","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"23:978:12567":{"id":"23:978:12567","crate_id":23,"name":"NumRef","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Num","id":"23:968:12509","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"NumOps","id":"23:971:12566","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":false,"type":{"kind":"generic","inner":"Self"}}}},{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"implementations":[]}},"0:2148:1991":{"id":"0:2148:1991","crate_id":0,"name":"from_u64","span":{"filename":"src/lib.rs","begin":[806,4],"end":[817,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["n",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2776:1908","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2853-0:2197:1896":{"id":"b:2:2853-0:2197:1896","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2847:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2197:1896","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["2:2855:2804"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2141:1976":{"id":"0:2141:1976","crate_id":0,"name":"number_from_sunday","span":{"filename":"src/lib.rs","begin":[724,4],"end":[734,5]},"visibility":"public","docs":"Returns a day-of-week number starting from Sunday = 1.\n\n`w`:                      | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun`\n------------------------- | ----- | ----- | ----- | ----- | ----- | ----- | -----\n`w.number_from_sunday()`: | 2     | 3     | 4     | 5     | 6     | 7     | 1","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2168:2144":{"id":"0:2168:2144","crate_id":0,"name":"month","span":{"filename":"src/lib.rs","begin":[1264,4],"end":[1264,27]},"visibility":"default","docs":"Returns the month number starting from 1.\n\nThe return value ranges from 1 to 12.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:3250:211-0:2585:5546":{"id":"a:2:3250:211-0:2585:5546","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3250:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2585:5546","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3179-0:2820:1906":{"id":"b:2:3179-0:2820:1906","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3156:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3153:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:2820:1906","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3182:3385"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2851:2101":{"id":"0:2851:2101","crate_id":0,"name":"November","span":{"filename":"src/lib.rs","begin":[988,4],"end":[988,17]},"visibility":"default","docs":"November","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:69":{"id":"0:69","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[488,21],"end":[488,29]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"date::MAX_DATE","name":"MAX_DATE","id":"0:1222:1877","glob":false}},"2:13464:64540":{"id":"2:13464:64540","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:13015:6159","str::match_indices":"1:15916:6546","prim@char":"1:15910:6541","`DoubleEndedIterator`":"2:8425:120"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatchIndices","id":"2:49569:12676","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:12642","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:12642","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13040:12654","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2617:2809":{"id":"0:2617:2809","crate_id":0,"name":"Item","span":{"filename":"src/format/mod.rs","begin":[263,0],"end":[281,1]},"visibility":"public","docs":"A single formatting item. This is used for both formatting and parsing.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"variants_stripped":false,"variants":["0:2619:3378","0:2622:5563","0:2625:3377","0:2628:5566","0:2631:2810","0:2635:3587","0:2638:127"],"impls":["a:2:3291:12723-0:2617:2809","a:2:9237:12747-0:2617:2809","a:2:3262:220-0:2617:2809","a:2:3250:211-0:2617:2809","a:2:9236:12748-0:2617:2809","b:2:3179-0:2617:2809","b:2:2856-0:2617:2809","b:2:2853-0:2617:2809","b:2:3983-0:2617:2809","b:2:3183-0:2617:2809","b:2:3189-0:2617:2809","b:2:3194-0:2617:2809","b:5:787-0:2617:2809","0:2640","0:2643","0:2645","0:2649","0:2651","0:2654"]}},"5:6088:65175":{"id":"5:6088:65175","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:8359:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"str_replacen\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8359:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:12642","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13395:61150":{"id":"2:13395:61150","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10911:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10911:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:138":{"id":"0:138","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[508,4],"end":[508,17]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"Date","name":"Date","id":"0:2412:1876","glob":false}},"2:13467:64541":{"id":"2:13467:64541","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:257:2554":{"id":"0:257:2554","crate_id":0,"name":"and_hms_nano_opt","span":{"filename":"src/offset/mod.rs","begin":[153,4],"end":[166,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date, hour, minute, second and nanosecond.\nThe nanosecond part can exceed 1,000,000,000 in order to represent the leap second.\nThe offset in the current date is preserved.\n\nPropagates any error. Ambiguous result would be discarded.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["hour",{"kind":"primitive","inner":"u32"}],["min",{"kind":"primitive","inner":"u32"}],["sec",{"kind":"primitive","inner":"u32"}],["nano",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2197:1896","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2443:1881","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:96":{"id":"0:96","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[497,16],"end":[497,23]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"naive::IsoWeek","name":"IsoWeek","id":"0:2379:1890","glob":false}},"2:8389:768":{"id":"2:8389:768","crate_id":2,"name":"into_iter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"I"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2518:4003":{"id":"0:2518:4003","crate_id":0,"name":"Nanosecond","span":{"filename":"src/format/mod.rs","begin":[124,4],"end":[124,14]},"visibility":"default","docs":"The number of nanoseconds since the last whole second (FW=PW=9).\nNote that this is *not* left-aligned;\nsee also [`Fixed::Nanosecond`](./enum.Fixed.html#variant.Nanosecond).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:274:2623":{"id":"0:274:2623","crate_id":0,"name":"timestamp_millis_opt","span":{"filename":"src/offset/mod.rs","begin":[375,4],"end":[382,5]},"visibility":"default","docs":"Makes a new `DateTime` from the number of non-leap milliseconds\nsince January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\").\n\n\nReturns `LocalResult::None` on out-of-range number of milliseconds\nand/or invalid nanosecond, otherwise always returns\n`LocalResult::Single`.\n\n# Example\n\n~~~~\nuse chrono::{Utc, TimeZone, LocalResult};\nmatch Utc.timestamp_millis_opt(1431648000) {\n    LocalResult::Single(dt) => assert_eq!(dt.timestamp(), 1431648),\n    _ => panic!(\"Incorrect timestamp_millis\"),\n};\n~~~~","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["millis",{"kind":"primitive","inner":"i64"}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2197:1896","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2443:1881","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13405:4139":{"id":"2:13405:4139","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"2:49387:12665","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2856-0:2536:3587":{"id":"b:2:2856-0:2536:3587","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2850:12559","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2536:3587","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2858:59480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2853-0:2729:2518":{"id":"b:2:2853-0:2729:2518","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2847:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2729:2518","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:2855:2804"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3983-0:2617:2809":{"id":"b:2:3983-0:2617:2809","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3981:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2617:2809","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:3985:1421"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2864":{"id":"0:2864","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[964,30],"end":[964,35]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:2820:1906","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2865:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2584:660":{"id":"0:2584:660","crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[165,31],"end":[165,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10229:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10218:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2830:2087":{"id":"0:2830:2087","crate_id":0,"name":"April","span":{"filename":"src/lib.rs","begin":[974,4],"end":[974,13]},"visibility":"default","docs":"April","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"b:2:2856-0:2748:2808":{"id":"b:2:2856-0:2748:2808","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2850:12559","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2748:2808","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}},"param_names":[]}},"items":["2:2858:59480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2213":{"id":"0:2213","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[29,16],"end":[29,25]},"visibility":{"restricted":{"parent":"0:206:957","path":"::offset"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"$crate::cmp::PartialEq","id":"2:2902:183","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2902:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2197:1896","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2197:1896","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["0:2215:604","0:2216:907"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2654":{"id":"0:2654","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[262,31],"end":[262,36]},"visibility":{"restricted":{"parent":"0:1595:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10269:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2617:2809","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["0:2656:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2738:408":{"id":"0:2738:408","crate_id":0,"name":"clone","span":{"filename":"src/format/strftime.rs","begin":[201,9],"end":[201,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2729:2518","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23096:13951":{"id":"2:23096:13951","crate_id":2,"name":"MaskElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SimdElement","id":"2:23733:13779","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:23087:13421","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2188:2229":{"id":"0:2188:2229","crate_id":0,"name":"second","span":{"filename":"src/lib.rs","begin":[1383,4],"end":[1383,28]},"visibility":"default","docs":"Returns the second number from 0 to 59.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:3192:127":{"id":"2:3192:127","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3163:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}}}}},"b:2:3194-0:2536:3587":{"id":"b:2:3194-0:2536:3587","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3153:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3163:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2536:3587","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3197:127","2:3198:1408"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:1079:13423":{"id":"1:1079:13423","crate_id":1,"name":"AsciiExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:1080:12561","1:1081:14262","1:1082:59490","1:1083:59491","1:1084:59492","1:1085:59493","1:1086:59494"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2167:2169":{"id":"0:2167:2169","crate_id":0,"name":"year_ce","span":{"filename":"src/lib.rs","begin":[1252,4],"end":[1259,5]},"visibility":"default","docs":"Returns the absolute year number starting from 1 with a boolean flag,\nwhich is false when the year predates the epoch (BCE/BC) and true otherwise (CE/AD).","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"bool"},{"kind":"primitive","inner":"u32"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:267:2588":{"id":"0:267:2588","crate_id":0,"name":"yo","span":{"filename":"src/offset/mod.rs","begin":[255,4],"end":[257,5]},"visibility":"default","docs":"Makes a new `Date` from year, day of year (DOY or \"ordinal\") and the current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\n\nThe time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),\nbut it will propagate to the `DateTime` values constructed via this date.\n\nPanics on the out-of-range date and/or invalid DOY.\n\n# Example\n\n~~~~\nuse chrono::{Utc, TimeZone};\n\nassert_eq!(Utc.yo(2015, 135).to_string(), \"2015-05-15UTC\");\n~~~~","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["year",{"kind":"primitive","inner":"i32"}],["ordinal",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2412:1876","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9236:12748-0:2812:1993":{"id":"a:2:9236:12748-0:2812:1993","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9236:12748","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:2812:1993","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2138:1965":{"id":"0:2138:1965","crate_id":0,"name":"succ","span":{"filename":"src/lib.rs","begin":[670,4],"end":[680,5]},"visibility":"public","docs":"The next day in the week.\n\n`w`:        | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun`\n----------- | ----- | ----- | ----- | ----- | ----- | ----- | -----\n`w.succ()`: | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun` | `Mon`","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2776:1908","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2701:5727":{"id":"0:2701:5727","crate_id":0,"name":"year_mod_100","span":{"filename":"src/format/parsed.rs","begin":[42,4],"end":[42,33]},"visibility":"public","docs":"Year modulo 100. Implies that the year is >= 1 BCE when set.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i32"}}],"bindings":[]}},"param_names":[]}}},"2:22836:14002":{"id":"2:22836:14002","crate_id":2,"name":"SimdPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:22837:13941","2:22838:1240","2:22839:1265"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2853-0:2617:2809":{"id":"b:2:2853-0:2617:2809","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2847:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2617:2809","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:2855:2804"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2155:1965":{"id":"0:2155:1965","crate_id":0,"name":"succ","span":{"filename":"src/lib.rs","begin":[1000,4],"end":[1015,5]},"visibility":"public","docs":"The next month.\n\n`m`:        | `January`  | `February` | `...` | `December`\n----------- | ---------  | ---------- | --- | ---------\n`m.succ()`: | `February` | `March`    | `...` | `January`","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Month","id":"0:2820:1906","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:790:13067":{"id":"5:790:13067","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:155":{"id":"0:155","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[520,13],"end":[520,21]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"Datelike","name":"Datelike","id":"0:2165:1905","glob":false}},"0:2819:907":{"id":"0:2819:907","crate_id":0,"name":"ne","span":{"filename":"src/lib.rs","begin":[823,16],"end":[823,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:2812:1993","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2645":{"id":"0:2645","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[262,16],"end":[262,25]},"visibility":{"restricted":{"parent":"0:1595:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2902:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2617:2809","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2617:2809","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["0:2647:604","0:2648:907"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2818:604":{"id":"0:2818:604","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[823,16],"end":[823,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:2812:1993","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10288:12710":{"id":"2:10288:12710","crate_id":2,"name":"LowerExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10289:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2853-0:2748:2808":{"id":"b:2:2853-0:2748:2808","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2847:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2748:2808","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}},"param_names":[]}},"items":["2:2855:2804"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2160:1991":{"id":"0:2160:1991","crate_id":0,"name":"from_u64","span":{"filename":"src/lib.rs","begin":[1096,4],"end":[1098,5]},"visibility":"default","docs":"Returns an Option<Month> from a i64, assuming a 1-index, January = 1.\n\n`Month::from_i64(n: i64)`: | `1`                  | `2`                   | ... | `12`\n---------------------------| -------------------- | --------------------- | ... | -----\n``:                        | Some(Month::January) | Some(Month::February) | ... | Some(Month::December)","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["n",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Month","id":"0:2820:1906","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3156:135":{"id":"2:3156:135","crate_id":2,"name":"From","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3158:681"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3291:12723-0:2871:2127":{"id":"a:2:3291:12723-0:2871:2127","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3291:12723","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseMonthError","id":"0:2871:2127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"23:813:12608":{"id":"23:813:12608","crate_id":23,"name":"WrappingShl","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:814:66428"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Shl","id":"2:3392:12535","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:134":{"id":"0:134","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[503,46],"end":[503,57]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"round::SubsecRound","name":"SubsecRound","id":"0:2115:1903","glob":false}},"0:2161:1989":{"id":"0:2161:1989","crate_id":0,"name":"from_i64","span":{"filename":"src/lib.rs","begin":[1101,4],"end":[1103,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["n",{"kind":"primitive","inner":"i64"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Month","id":"0:2820:1906","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3189-0:2871:2127":{"id":"b:2:3189-0:2871:2127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3163:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3159:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseMonthError","id":"0:2871:2127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3192:127","2:3193:1409"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:192:558":{"id":"0:192:558","crate_id":0,"name":"div","span":{"filename":"src/div.rs","begin":[5,0],"end":[41,1]},"visibility":"crate","docs":"Integer division utilities. (Shamelessly copied from [num](https://github.com/rust-lang/num/))","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:194","0:197","0:200","0:203"],"is_stripped":true}},"5:6085:13078":{"id":"5:6085:13078","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:8359:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["from",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8359:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:12642","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13399:13477":{"id":"2:13399:13477","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:15916:6546","crate::ops::Index":"2:3558:12544","str::slice_mut_unchecked":"1:15916:6546"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:108":{"id":"0:108","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[500,0],"end":[500,22]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"clock\")]","#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"offset::Local","name":"Local","id":"0:2246:1894","glob":false}},"0:261:1897":{"id":"0:261:1897","crate_id":0,"name":"Offset","span":{"filename":"src/offset/mod.rs","begin":[183,0],"end":[186,1]},"visibility":"public","docs":"The offset from the local time to UTC.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:262:2562"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"fmt::Debug","id":"2:10269:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2490:5470":{"id":"0:2490:5470","crate_id":0,"name":"IsoYearDiv100","span":{"filename":"src/format/mod.rs","begin":[94,4],"end":[94,17]},"visibility":"default","docs":"Year in the ISO week date, divided by 100 (FW=PW=2). Implies the non-negative year.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:7:1862":{"id":"0:7:1862","crate_id":0,"name":"sys","span":{"filename":"src/sys.rs","begin":[11,0],"end":[126,1]},"visibility":"crate","docs":"Platform wrappers for converting UTC times to and from the local time zone.\n\nThis code was rescued from v0.1 of the time crate, which is no longer\nmaintained. It has been substantially stripped down to the bare minimum\nrequired by chrono.","links":{},"attrs":["#[cfg(all(feature = \"clock\",\nnot(all(target_arch = \"wasm32\", not(target_os = \"wasi\"), feature =\n\"wasmbind\"))))]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":[],"is_stripped":true}},"0:2125:6439":{"id":"0:2125:6439","crate_id":0,"name":"duration_round","span":{"filename":"src/round.rs","begin":[126,4],"end":[126,75]},"visibility":"default","docs":"Return a copy rounded by Duration.\n\n# Example\n``` rust\n# use chrono::{DateTime, DurationRound, Duration, TimeZone, Utc};\nlet dt = Utc.ymd(2018, 1, 11).and_hms_milli(12, 0, 0, 154);\nassert_eq!(\n    dt.duration_round(Duration::milliseconds(10)).unwrap().to_string(),\n    \"2018-01-11 12:00:00.150 UTC\"\n);\nassert_eq!(\n    dt.duration_round(Duration::days(1)).unwrap().to_string(),\n    \"2018-01-12 00:00:00 UTC\"\n);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["duration",{"kind":"resolved_path","inner":{"name":"Duration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47564:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:2123:1901","args":null,"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"1:6864:13418":{"id":"1:6864:13418","crate_id":1,"name":"AsRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6865:59680"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:9237:12747":{"id":"2:9237:12747","crate_id":2,"name":"RefUnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2876":{"id":"0:2876","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1126,16],"end":[1126,25]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2902:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ParseMonthError","id":"0:2871:2127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseMonthError","id":"0:2871:2127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2877:604","0:2878:907"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1330:1879":{"id":"0:1330:1879","crate_id":0,"name":"datetime","span":{"filename":"src/datetime.rs","begin":[4,0],"end":[2589,1]},"visibility":"crate","docs":"ISO 8601 date and time with time zone.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:2419:1882","0:2443:1881","0:1435:1884","0:1436:1883"],"is_stripped":true}},"0:1595:671":{"id":"0:1595:671","crate_id":0,"name":"format","span":{"filename":"src/format/mod.rs","begin":[4,0],"end":[938,1]},"visibility":"public","docs":"Formatting (and parsing) utilities for date and time.\n\nThis module provides the common types and routines to implement,\nfor example, [`DateTime::format`](../struct.DateTime.html#method.format) or\n[`DateTime::parse_from_str`](../struct.DateTime.html#method.parse_from_str) methods.\nFor most cases you should use these high-level interfaces.\n\nInternally the formatting and parsing shares the same abstract **formatting items**,\nwhich are just an [`Iterator`](https://doc.rust-lang.org/std/iter/trait.Iterator.html) of\nthe [`Item`](./enum.Item.html) type.\nThey are generated from more readable **format strings**;\ncurrently Chrono supports [one built-in syntax closely resembling\nC's `strftime` format](./strftime/index.html).","links":{},"attrs":["#![allow(ellipsis_inclusive_range_patterns)]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:2022:5443","0:2463:2811","0:2481:2810","0:1651:5501","0:2536:3587","0:2585:5546","0:2617:2809","0:2657:1887","0:1667:1888","0:1680:5617","0:1736:671","0:2748:2808","0:1642","0:1645","0:1648"],"is_stripped":false}},"0:144":{"id":"0:144","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[516,4],"end":[516,24]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"SubsecRound","name":"SubsecRound","id":"0:2115:1903","glob":false}},"0:2589":{"id":"0:2589","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[237,16],"end":[237,21]},"visibility":{"restricted":{"parent":"0:1595:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2585:5546","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2590:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2072":{"id":"0:2072","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[794,0],"end":[812,1]},"visibility":{"restricted":{"parent":"0:1595:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8579:157","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"B"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2847:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2617:2809","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10276:119","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2748:2808","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}},"param_names":[]}},"items":["0:2076:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2669":{"id":"0:2669","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[320,34],"end":[320,36]},"visibility":{"restricted":{"parent":"0:1595:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2907:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2657:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"23:311:2807":{"id":"23:311:2807","crate_id":23,"name":"ToPrimitive","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:312:13358","23:313:13359","23:314:13360","23:315:3141","23:316:13361","23:317:13362","23:318:13363","23:319:13364","23:320:13365","23:321:5779","23:322:13366","23:323:13367","23:324:13368","23:325:13369"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:492":{"id":"0:492","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[471,0],"end":[471,27]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"clock\")]"],"deprecation":null,"kind":"import","inner":{"source":"self::local::Local","name":"Local","id":"0:2246:1894","glob":false}},"2:3333:12524":{"id":"2:3333:12524","crate_id":2,"name":"Div","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3335:181","2:3336:558"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2714:2227":{"id":"0:2714:2227","crate_id":0,"name":"minute","span":{"filename":"src/format/parsed.rs","begin":[93,4],"end":[93,27]},"visibility":"public","docs":"Minute number (0--59).","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u32"}}],"bindings":[]}},"param_names":[]}}},"0:2178:2196":{"id":"0:2178:2196","crate_id":0,"name":"with_month0","span":{"filename":"src/lib.rs","begin":[1310,4],"end":[1310,55]},"visibility":"default","docs":"Makes a new value with the month number (starting from 0) changed.\n\nReturns `None` when the resulting value would be invalid.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["month0",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"1:5740:13410":{"id":"1:5740:13410","crate_id":1,"name":"OpenOptionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5741:12440","1:5742:17046"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:272:2611":{"id":"0:272:2611","crate_id":0,"name":"timestamp_opt","span":{"filename":"src/offset/mod.rs","begin":[334,4],"end":[339,5]},"visibility":"default","docs":"Makes a new `DateTime` from the number of non-leap seconds\nsince January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\")\nand the number of nanoseconds since the last whole non-leap second.\n\nReturns `LocalResult::None` on out-of-range number of seconds and/or\ninvalid nanosecond, otherwise always returns `LocalResult::Single`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["secs",{"kind":"primitive","inner":"i64"}],["nsecs",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2197:1896","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2443:1881","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2761:6452":{"id":"0:2761:6452","crate_id":0,"name":"DurationExceedsLimit","span":{"filename":"src/round.rs","begin":[231,4],"end":[231,24]},"visibility":"default","docs":"Error when `Duration.num_nanoseconds` exceeds the limit.\n\n``` rust\n# use chrono::{DateTime, DurationRound, Duration, RoundingError, TimeZone, Utc};\nlet dt = Utc.ymd(2260, 12, 31).and_hms_nano(23, 59, 59, 1_75_500_000);\n\nassert_eq!(\n    dt.duration_round(Duration::days(300 * 365)),\n    Err(RoundingError::DurationExceedsLimit)\n);\n```","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2512:5488":{"id":"0:2512:5488","crate_id":0,"name":"Hour12","span":{"filename":"src/format/mod.rs","begin":[116,4],"end":[116,10]},"visibility":"default","docs":"Hour number in the 12-hour clocks (FW=PW=2).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:13455:6619":{"id":"2:13455:6619","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"prim@char":"1:15910:6541","self::pattern":"2:13015:6159","`DoubleEndedIterator`":"2:8425:120","str::matches":"1:15916:6546"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"2:49605:12677","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:12642","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3189-0:2776:1908":{"id":"b:2:3189-0:2776:1908","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3163:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3159:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2776:1908","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3192:127","2:3193:1409"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"23:638:12594":{"id":"23:638:12594","crate_id":23,"name":"CheckedShr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:639:65700"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Shr","id":"2:3398:12536","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u32"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:1436:1883":{"id":"0:1436:1883","crate_id":0,"name":"MAX_DATETIME","span":{"filename":"src/datetime.rs","begin":[78,0],"end":[78,96]},"visibility":"public","docs":"The maximum possible `DateTime<Utc>`.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2443:1881","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:2253:1899","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"0:2833:2089":{"id":"0:2833:2089","crate_id":0,"name":"May","span":{"filename":"src/lib.rs","begin":[976,4],"end":[976,11]},"visibility":"default","docs":"May","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"1:6442:13449":{"id":"1:6442:13449","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6443:12045","1:6444:12046","1:6445:17208","1:6446:62597","1:6448:62601","1:6450:62598","1:6451:62599","1:6453:62600"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10564:13421","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2619:3378":{"id":"0:2619:3378","crate_id":0,"name":"Literal","span":{"filename":"src/format/mod.rs","begin":[265,4],"end":[265,20]},"visibility":"default","docs":"A literally printed and parsed text.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}},"23:755:58037":{"id":"23:755:58037","crate_id":23,"name":"OverflowingMul","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:756:66412"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Mul","id":"2:3328:12525","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"23:441:12582":{"id":"23:441:12582","crate_id":23,"name":"Float","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:442:65752","23:443:65750","23:444:65751","23:445:65753","23:446:2696","23:447:65754","23:448:65755","23:449:2695","23:450:63841","23:451:63842","23:452:63843","23:453:63844","23:454:65757","23:455:62221","23:456:62220","23:457:1900","23:458:49011","23:459:62219","23:460:6448","23:461:12614","23:462:63839","23:463:63840","23:464:12620","23:465:63836","23:466:65758","23:467:66110","23:468:12514","23:469:15744","23:470:66111","23:471:66112","23:472:66113","23:473:66114","23:474:66115","23:475:63837","23:476:63838","23:477:1934","23:478:1933","23:479:12613","23:480:12512","23:481:66116","23:482:66117","23:483:66118","23:484:66119","23:485:66120","23:486:66121","23:487:66122","23:488:66123","23:489:66124","23:490:66125","23:491:66126","23:492:66127","23:493:66128","23:494:66129","23:495:66130","23:496:66131","23:497:66132","23:498:65756","23:499:17814"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Num","id":"23:968:12509","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3260:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"NumCast","id":"23:362:12585","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"2:2948:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Neg","id":"2:3345:12526","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13379:793":{"id":"2:13379:793","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:15910:6541"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_len\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2145:660":{"id":"0:2145:660","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[774,4],"end":[784,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10229:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10218:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2199:174":{"id":"0:2199:174","crate_id":0,"name":"None","span":{"filename":"src/offset/mod.rs","begin":[33,4],"end":[33,8]},"visibility":"default","docs":"Given local time representation is invalid.\nThis can occur when, for example, the positive timezone transition.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2219:660":{"id":"0:2219:660","crate_id":0,"name":"fmt","span":{"filename":"src/offset/mod.rs","begin":[29,27],"end":[29,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10229:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10218:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2488:5468":{"id":"0:2488:5468","crate_id":0,"name":"IsoYear","span":{"filename":"src/format/mod.rs","begin":[92,4],"end":[92,11]},"visibility":"default","docs":"Year in the ISO week date (FW=4, PW=∞).\nMay accept years before 1 BCE or after 9999 CE, given an initial sign.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:3228:115":{"id":"2:3228:115","crate_id":2,"name":"Default","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3229:59"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:115":{"id":"0:115","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[502,30],"end":[502,41]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"offset::LocalResult","name":"LocalResult","id":"0:2197:1896","glob":false}},"b:2:3983-0:1651:5501":{"id":"b:2:3983-0:1651:5501","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3981:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:1651:5501","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3985:1421"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2858":{"id":"0:2858","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[964,9],"end":[964,18]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2902:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Month","id":"0:2820:1906","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:2820:1906","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2859:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2146":{"id":"0:2146","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[790,0],"end":[818,1]},"visibility":"crate","docs":"Any weekday can be represented as an integer from 0 to 6, which equals to\n[`Weekday::num_days_from_monday`](#method.num_days_from_monday) in this implementation.\nDo not heavily depend on this though; use explicit methods whenever possible.","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["from_u16","from_i32","from_isize","from_u32","from_usize","from_i128","from_i8","from_u128","from_f32","from_u8","from_i16","from_f64"],"trait":{"kind":"resolved_path","inner":{"name":"FromPrimitive","id":"23:337:1988","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2776:1908","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2147:1989","0:2148:1991"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3370:12534":{"id":"2:3370:12534","crate_id":2,"name":"Not","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3371:181","2:3372:952"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1221:1878":{"id":"0:1221:1878","crate_id":0,"name":"MIN_DATE","span":{"filename":"src/date.rs","begin":[53,0],"end":[53,76]},"visibility":"public","docs":"The minimum possible `Date`.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2412:1876","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:2253:1899","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"2:13388:64531":{"id":"2:13388:64531","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[stable(feature = \"str_mut_extras\", since = \"1.20.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:13414:5908":{"id":"2:13414:5908","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"self::pattern":"2:13015:6159","prim@char":"1:15910:6541"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:12642","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2799":{"id":"0:2799","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[644,9],"end":[644,18]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2902:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2776:1908","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2776:1908","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2800:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3183-0:2812:1993":{"id":"b:2:3183-0:2812:1993","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3156:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:2812:1993","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3185:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:275:2638":{"id":"0:275:2638","crate_id":0,"name":"timestamp_nanos","span":{"filename":"src/offset/mod.rs","begin":[397,4],"end":[404,5]},"visibility":"default","docs":"Makes a new `DateTime` from the number of non-leap nanoseconds\nsince January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\").\n\nUnlike [`timestamp_millis`](#method.timestamp_millis), this never\npanics.\n\n# Example\n\n~~~~\nuse chrono::{Utc, TimeZone};\n\nassert_eq!(Utc.timestamp_nanos(1431648000000000).timestamp(), 1431648);\n~~~~","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["nanos",{"kind":"primitive","inner":"i64"}]],"output":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2443:1881","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"23:983:12568":{"id":"23:983:12568","crate_id":23,"name":"RefNum","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"Base","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"NumOps","id":"23:971:12566","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Base"}},{"type":{"kind":"generic","inner":"Base"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"NumOps","id":"23:971:12566","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":false,"type":{"kind":"generic","inner":"Base"}}}},{"type":{"kind":"generic","inner":"Base"}}],"bindings":[]}},"param_names":[]}},"generic_params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"implementations":[]}},"0:2874:408":{"id":"0:2874:408","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[1126,9],"end":[1126,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ParseMonthError","id":"0:2871:2127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13393:61149":{"id":"2:13393:61149","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:47437:176"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10911:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10911:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:128":{"id":"0:128","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[503,16],"end":[503,29]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"round::DurationRound","name":"DurationRound","id":"0:2123:1901","glob":false}},"0:1135":{"id":"0:1135","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[554,36],"end":[554,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::date::MAX_DATE","name":"MAX_DATE","id":"0:600:1877","glob":false}},"2:3710:224":{"id":"2:3710:224","crate_id":2,"name":"Try","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3711:181","2:3712:12550","2:3713:686","2:3714:369"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FromResidual","id":"2:3715:137","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"Try","id":"2:3710:224","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13505:64550":{"id":"2:13505:64550","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"1:15910:6541"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeUnicode","id":"2:49718:12672","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3291:12723-0:2776:1908":{"id":"a:2:3291:12723-0:2776:1908","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3291:12723","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2776:1908","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:270:2600":{"id":"0:270:2600","crate_id":0,"name":"isoywd_opt","span":{"filename":"src/offset/mod.rs","begin":[303,4],"end":[308,5]},"visibility":"default","docs":"Makes a new `Date` from ISO week date (year and week number), day of the week (DOW) and\nthe current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\nThe resulting `Date` may have a different year from the input year.\n\nThe time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),\nbut it will propagate to the `DateTime` values constructed via this date.\n\nReturns `None` on the out-of-range date and/or invalid week number.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["year",{"kind":"primitive","inner":"i32"}],["week",{"kind":"primitive","inner":"u32"}],["weekday",{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2776:1908","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2197:1896","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2412:1876","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2868":{"id":"0:2868","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[964,44],"end":[964,48]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"kind":"resolved_path","inner":{"name":"Hash","id":"2:10507:142","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:2820:1906","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2869:715"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2777:1948":{"id":"0:2777:1948","crate_id":0,"name":"Mon","span":{"filename":"src/lib.rs","begin":[648,4],"end":[648,11]},"visibility":"default","docs":"Monday.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2806:408":{"id":"0:2806:408","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[644,30],"end":[644,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2776:1908","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2816":{"id":"0:2816","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[823,16],"end":[823,25]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralPartialEq","id":"2:3258:218","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:2812:1993","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2076:660":{"id":"0:2076:660","crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[795,4],"end":[811,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10229:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10218:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13487:64547":{"id":"2:13487:64547","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"self::pattern":"2:13015:6159","prim@char":"1:15910:6541"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:12642","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:12642","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13040:12654","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2175:2189":{"id":"0:2175:2189","crate_id":0,"name":"iso_week","span":{"filename":"src/lib.rs","begin":[1295,4],"end":[1295,34]},"visibility":"default","docs":"Returns the ISO week.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"IsoWeek","id":"0:2379:1890","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"1:4688:5650":{"id":"1:4688:5650","crate_id":1,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4689:1939","1:4690:59721","1:4692:59722","1:4693:14530","1:4694:59723","1:4695:18126","1:4696:12842","1:4705:13043"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:287:2615":{"id":"0:287:2615","crate_id":0,"name":"from_utc_datetime","span":{"filename":"src/offset/mod.rs","begin":[459,4],"end":[461,5]},"visibility":"default","docs":"Converts the UTC `NaiveDateTime` to the local time.\nThe UTC is continuous and thus this cannot fail (but can give the duplicate local time).","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["utc",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2325:1892","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2443:1881","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2853-0:2463:2811":{"id":"b:2:2853-0:2463:2811","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2847:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2463:2811","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2855:2804"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2583":{"id":"0:2583","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[165,31],"end":[165,36]},"visibility":{"restricted":{"parent":"0:1595:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10269:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2536:3587","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2584:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:79":{"id":"0:79","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[491,29],"end":[491,42]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"datetime::SecondsFormat","name":"SecondsFormat","id":"0:2419:1882","glob":false}},"a:2:3262:220-0:2657:1887":{"id":"a:2:3262:220-0:2657:1887","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3262:220","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2657:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13391:4331":{"id":"2:13391:4331","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:47437:176"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10911:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10911:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3179-0:2617:2809":{"id":"b:2:3179-0:2617:2809","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3156:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3153:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2617:2809","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:3182:3385"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9236:12748-0:2197:1896":{"id":"a:2:9236:12748-0:2197:1896","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9236:12748","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9236:12748","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2197:1896","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:118":{"id":"0:118","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[502,43],"end":[502,49]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"offset::Offset","name":"Offset","id":"0:261:1897","glob":false}},"2:3981:68":{"id":"2:3981:68","crate_id":2,"name":"Any","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3982:1421"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"outlives":"'static"}],"implementations":[]}},"0:2222":{"id":"0:2222","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[29,40],"end":[29,42]},"visibility":{"restricted":{"parent":"0:206:957","path":"::offset"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralEq","id":"2:3259:217","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2197:1896","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2081:126":{"id":"0:2081:126","crate_id":0,"name":"Err","span":{"filename":"src/format/mod.rs","begin":[915,4],"end":[915,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"ParseMonthError","id":"0:2871:2127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"0:2576":{"id":"0:2576","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[165,16],"end":[165,25]},"visibility":{"restricted":{"parent":"0:1595:671","path":"::format"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralPartialEq","id":"2:3258:218","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2536:3587","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9237:12747-0:2657:1887":{"id":"a:2:9237:12747-0:2657:1887","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9237:12747","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2657:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13409:64533":{"id":"2:13409:64533","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]","#[allow(deprecated)]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LinesAny","id":"2:49665:12674","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2625:3377":{"id":"0:2625:3377","crate_id":0,"name":"Space","span":{"filename":"src/format/mod.rs","begin":[270,4],"end":[270,18]},"visibility":"default","docs":"Whitespace. Prints literally but reads zero or more whitespace.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}},"b:2:2853-0:2820:1906":{"id":"b:2:2853-0:2820:1906","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2847:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:2820:1906","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2855:2804"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:787-0:2776:1908":{"id":"b:5:787-0:2776:1908","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2776:1908","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:789:12561","5:790:13067","5:791:13068"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2124:126":{"id":"0:2124:126","crate_id":0,"name":"Err","span":{"filename":"src/round.rs","begin":[105,4],"end":[105,32]},"visibility":"default","docs":"Error that can occur in rounding or truncating","links":{},"attrs":["#[cfg(any(feature = \"std\", test))]"],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"std::error::Error","id":"1:2576:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null}},"2:13403:6261":{"id":"2:13403:6261","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:15910:6541"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Chars","id":"2:49371:12644","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2022:5443":{"id":"0:2022:5443","crate_id":0,"name":"strftime","span":{"filename":"src/format/strftime.rs","begin":[4,0],"end":[649,1]},"visibility":"public","docs":"`strftime`/`strptime`-inspired date and time formatting syntax.\n\n## Specifiers\n\nThe following specifiers are available both to formatting and parsing.\n\n| Spec. | Example  | Description                                                                |\n|-------|----------|----------------------------------------------------------------------------|\n|       |          | **DATE SPECIFIERS:**                                                       |\n| `%Y`  | `2001`   | The full proleptic Gregorian year, zero-padded to 4 digits. [^1]           |\n| `%C`  | `20`     | The proleptic Gregorian year divided by 100, zero-padded to 2 digits. [^2] |\n| `%y`  | `01`     | The proleptic Gregorian year modulo 100, zero-padded to 2 digits. [^2]     |\n|       |          |                                                                            |\n| `%m`  | `07`     | Month number (01--12), zero-padded to 2 digits.                            |\n| `%b`  | `Jul`    | Abbreviated month name. Always 3 letters.                                  |\n| `%B`  | `July`   | Full month name. Also accepts corresponding abbreviation in parsing.       |\n| `%h`  | `Jul`    | Same as `%b`.                                                              |\n|       |          |                                                                            |\n| `%d`  | `08`     | Day number (01--31), zero-padded to 2 digits.                              |\n| `%e`  | ` 8`     | Same as `%d` but space-padded. Same as `%_d`.                              |\n|       |          |                                                                            |\n| `%a`  | `Sun`    | Abbreviated weekday name. Always 3 letters.                                |\n| `%A`  | `Sunday` | Full weekday name. Also accepts corresponding abbreviation in parsing.     |\n| `%w`  | `0`      | Sunday = 0, Monday = 1, ..., Saturday = 6.                                 |\n| `%u`  | `7`      | Monday = 1, Tuesday = 2, ..., Sunday = 7. (ISO 8601)                       |\n|       |          |                                                                            |\n| `%U`  | `28`     | Week number starting with Sunday (00--53), zero-padded to 2 digits. [^3]   |\n| `%W`  | `27`     | Same as `%U`, but week 1 starts with the first Monday in that year instead.|\n|       |          |                                                                            |\n| `%G`  | `2001`   | Same as `%Y` but uses the year number in ISO 8601 week date. [^4]          |\n| `%g`  | `01`     | Same as `%y` but uses the year number in ISO 8601 week date. [^4]          |\n| `%V`  | `27`     | Same as `%U` but uses the week number in ISO 8601 week date (01--53). [^4] |\n|       |          |                                                                            |\n| `%j`  | `189`    | Day of the year (001--366), zero-padded to 3 digits.                       |\n|       |          |                                                                            |\n| `%D`  | `07/08/01`    | Month-day-year format. Same as `%m/%d/%y`.                            |\n| `%x`  | `07/08/01`    | Locale's date representation (e.g., 12/31/99).                        |\n| `%F`  | `2001-07-08`  | Year-month-day format (ISO 8601). Same as `%Y-%m-%d`.                 |\n| `%v`  | ` 8-Jul-2001` | Day-month-year format. Same as `%e-%b-%Y`.                            |\n|       |          |                                                                            |\n|       |          | **TIME SPECIFIERS:**                                                       |\n| `%H`  | `00`     | Hour number (00--23), zero-padded to 2 digits.                             |\n| `%k`  | ` 0`     | Same as `%H` but space-padded. Same as `%_H`.                              |\n| `%I`  | `12`     | Hour number in 12-hour clocks (01--12), zero-padded to 2 digits.           |\n| `%l`  | `12`     | Same as `%I` but space-padded. Same as `%_I`.                              |\n|       |          |                                                                            |\n| `%P`  | `am`     | `am` or `pm` in 12-hour clocks.                                            |\n| `%p`  | `AM`     | `AM` or `PM` in 12-hour clocks.                                            |\n|       |          |                                                                            |\n| `%M`  | `34`     | Minute number (00--59), zero-padded to 2 digits.                           |\n| `%S`  | `60`     | Second number (00--60), zero-padded to 2 digits. [^5]                      |\n| `%f`  | `026490000`   | The fractional seconds (in nanoseconds) since last whole second. [^8] |\n| `%.f` | `.026490`| Similar to `.%f` but left-aligned. These all consume the leading dot. [^8] |\n| `%.3f`| `.026`        | Similar to `.%f` but left-aligned but fixed to a length of 3. [^8]    |\n| `%.6f`| `.026490`     | Similar to `.%f` but left-aligned but fixed to a length of 6. [^8]    |\n| `%.9f`| `.026490000`  | Similar to `.%f` but left-aligned but fixed to a length of 9. [^8]    |\n| `%3f` | `026`         | Similar to `%.3f` but without the leading dot. [^8]                   |\n| `%6f` | `026490`      | Similar to `%.6f` but without the leading dot. [^8]                   |\n| `%9f` | `026490000`   | Similar to `%.9f` but without the leading dot. [^8]                   |\n|       |               |                                                                       |\n| `%R`  | `00:34`       | Hour-minute format. Same as `%H:%M`.                                  |\n| `%T`  | `00:34:60`    | Hour-minute-second format. Same as `%H:%M:%S`.                        |\n| `%X`  | `00:34:60`    | Locale's time representation (e.g., 23:13:48).                        |\n| `%r`  | `12:34:60 AM` | Hour-minute-second format in 12-hour clocks. Same as `%I:%M:%S %p`.   |\n|       |          |                                                                            |\n|       |          | **TIME ZONE SPECIFIERS:**                                                  |\n| `%Z`  | `ACST`   | Local time zone name. Skips all non-whitespace characters during parsing. [^9] |\n| `%z`  | `+0930`  | Offset from the local time to UTC (with UTC being `+0000`).                |\n| `%:z` | `+09:30` | Same as `%z` but with a colon.                                             |\n| `%#z` | `+09`    | *Parsing only:* Same as `%z` but allows minutes to be missing or present.  |\n|       |          |                                                                            |\n|       |          | **DATE & TIME SPECIFIERS:**                                                |\n|`%c`|`Sun Jul  8 00:34:60 2001`|Locale's date and time (e.g., Thu Mar  3 23:05:25 2005).       |\n| `%+`  | `2001-07-08T00:34:60.026490+09:30` | ISO 8601 / RFC 3339 date & time format. [^6]     |\n|       |               |                                                                       |\n| `%s`  | `994518299`   | UNIX timestamp, the number of seconds since 1970-01-01 00:00 UTC. [^7]|\n|       |          |                                                                            |\n|       |          | **SPECIAL SPECIFIERS:**                                                    |\n| `%t`  |          | Literal tab (`\\t`).                                                        |\n| `%n`  |          | Literal newline (`\\n`).                                                    |\n| `%%`  |          | Literal percent sign.                                                      |\n\nIt is possible to override the default padding behavior of numeric specifiers `%?`.\nThis is not allowed for other specifiers and will result in the `BAD_FORMAT` error.\n\nModifier | Description\n-------- | -----------\n`%-?`    | Suppresses any padding including spaces and zeroes. (e.g. `%j` = `012`, `%-j` = `12`)\n`%_?`    | Uses spaces as a padding. (e.g. `%j` = `012`, `%_j` = ` 12`)\n`%0?`    | Uses zeroes as a padding. (e.g. `%e` = ` 9`, `%0e` = `09`)\n\nNotes:\n\n[^1]: `%Y`:\n   Negative years are allowed in formatting but not in parsing.\n\n[^2]: `%C`, `%y`:\n   This is floor division, so 100 BCE (year number -99) will print `-1` and `99` respectively.\n\n[^3]: `%U`:\n   Week 1 starts with the first Sunday in that year.\n   It is possible to have week 0 for days before the first Sunday.\n\n[^4]: `%G`, `%g`, `%V`:\n   Week 1 is the first week with at least 4 days in that year.\n   Week 0 does not exist, so this should be used with `%G` or `%g`.\n\n[^5]: `%S`:\n   It accounts for leap seconds, so `60` is possible.\n\n[^6]: `%+`: Same as `%Y-%m-%dT%H:%M:%S%.f%:z`, i.e. 0, 3, 6 or 9 fractional\n   digits for seconds and colons in the time zone offset.\n   <br>\n   <br>\n   The typical `strftime` implementations have different (and locale-dependent)\n   formats for this specifier. While Chrono's format for `%+` is far more\n   stable, it is best to avoid this specifier if you want to control the exact\n   output.\n\n[^7]: `%s`:\n   This is not padded and can be negative.\n   For the purpose of Chrono, it only accounts for non-leap seconds\n   so it slightly differs from ISO C `strftime` behavior.\n\n[^8]: `%f`, `%.f`, `%.3f`, `%.6f`, `%.9f`, `%3f`, `%6f`, `%9f`:\n   <br>\n   The default `%f` is right-aligned and always zero-padded to 9 digits\n   for the compatibility with glibc and others,\n   so it always counts the number of nanoseconds since the last whole second.\n   E.g. 7ms after the last second will print `007000000`,\n   and parsing `7000000` will yield the same.\n   <br>\n   <br>\n   The variant `%.f` is left-aligned and print 0, 3, 6 or 9 fractional digits\n   according to the precision.\n   E.g. 70ms after the last second under `%.f` will print `.070` (note: not `.07`),\n   and parsing `.07`, `.070000` etc. will yield the same.\n   Note that they can print or read nothing if the fractional part is zero or\n   the next character is not `.`.\n   <br>\n   <br>\n   The variant `%.3f`, `%.6f` and `%.9f` are left-aligned and print 3, 6 or 9 fractional digits\n   according to the number preceding `f`.\n   E.g. 70ms after the last second under `%.3f` will print `.070` (note: not `.07`),\n   and parsing `.07`, `.070000` etc. will yield the same.\n   Note that they can read nothing if the fractional part is zero or\n   the next character is not `.` however will print with the specified length.\n   <br>\n   <br>\n   The variant `%3f`, `%6f` and `%9f` are left-aligned and print 3, 6 or 9 fractional digits\n   according to the number preceding `f`, but without the leading dot.\n   E.g. 70ms after the last second under `%3f` will print `070` (note: not `07`),\n   and parsing `07`, `070000` etc. will yield the same.\n   Note that they can read nothing if the fractional part is zero.\n\n[^9]: `%Z`:\n   Offset will not be populated from the parsed data, nor will it be validated.\n   Timezone is completely ignored. Similar to the glibc `strptime` treatment of\n   this format code.\n   <br>\n   <br>\n   It is not possible to reliably convert from an abbreviation to an offset,\n   for example CDT can mean either Central Daylight Time (North America) or\n   China Daylight Time.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:2729:2518"],"is_stripped":false}},"0:2496:3379":{"id":"0:2496:3379","crate_id":0,"name":"Day","span":{"filename":"src/format/mod.rs","begin":[100,4],"end":[100,7]},"visibility":"default","docs":"Day of the month (FW=PW=2).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2805":{"id":"0:2805","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[644,30],"end":[644,35]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2776:1908","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2806:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2856-0:2820:1906":{"id":"b:2:2856-0:2820:1906","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2850:12559","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:2820:1906","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2858:59480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2379:1890":{"id":"0:2379:1890","crate_id":0,"name":"IsoWeek","span":{"filename":"src/naive/isoweek.rs","begin":[17,0],"end":[22,1]},"visibility":"public","docs":"ISO 8601 week.\n\nThis type, combined with [`Weekday`](../enum.Weekday.html),\nconstitues the ISO 8601 [week date](./struct.NaiveDate.html#week-date).\nOne can retrieve this type from the existing [`Datelike`](../trait.Datelike.html) types\nvia the [`Datelike::iso_week`](../trait.Datelike.html#tymethod.iso_week) method.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"2:10284:12713":{"id":"2:10284:12713","crate_id":2,"name":"UpperHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10285:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13500:59493":{"id":"2:13500:59493","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3250:211-0:2776:1908":{"id":"a:2:3250:211-0:2776:1908","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3250:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2776:1908","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:124":{"id":"0:124","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[502,61],"end":[502,64]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"offset::Utc","name":"Utc","id":"0:2253:1899","glob":false}},"b:2:3179-0:2585:5546":{"id":"b:2:3179-0:2585:5546","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3156:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3153:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2585:5546","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3182:3385"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:787-0:2536:3587":{"id":"b:5:787-0:2536:3587","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2536:3587","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:789:12561","5:790:13067","5:791:13068"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2484:5464":{"id":"0:2484:5464","crate_id":0,"name":"YearDiv100","span":{"filename":"src/format/mod.rs","begin":[87,4],"end":[87,14]},"visibility":"default","docs":"Gregorian year divided by 100 (century number; FW=PW=2). Implies the non-negative year.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"b:2:3189-0:2481:2810":{"id":"b:2:3189-0:2481:2810","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3163:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3159:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2481:2810","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3192:127","2:3193:1409"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2663:408":{"id":"0:2663:408","crate_id":0,"name":"clone","span":{"filename":"src/format/mod.rs","begin":[320,16],"end":[320,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2657:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2569:5109":{"id":"0:2569:5109","crate_id":0,"name":"RFC3339","span":{"filename":"src/format/mod.rs","begin":[227,4],"end":[227,11]},"visibility":"default","docs":"RFC 3339 & ISO 8601 date and time syntax.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2424:5021":{"id":"0:2424:5021","crate_id":0,"name":"Micros","span":{"filename":"src/datetime.rs","begin":[48,4],"end":[48,10]},"visibility":"default","docs":"Use fixed 6 subsecond digits. This corresponds to\n[Fixed::Nanosecond6](format/enum.Fixed.html#variant.Nanosecond6).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:8387:2809":{"id":"2:8387:2809","crate_id":2,"name":"Item","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8579:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}},"0:2117:6421":{"id":"0:2117:6421","crate_id":0,"name":"trunc_subsecs","span":{"filename":"src/round.rs","begin":[45,4],"end":[45,48]},"visibility":"default","docs":"Return a copy truncated to the specified number of subsecond\ndigits. With 9 or more digits, self is returned unmodified.\n\n# Example\n``` rust\n# use chrono::{DateTime, SubsecRound, Timelike, TimeZone, Utc};\nlet dt = Utc.ymd(2018, 1, 11).and_hms_milli(12, 0, 0, 154);\nassert_eq!(dt.trunc_subsecs(2).nanosecond(), 150_000_000);\nassert_eq!(dt.trunc_subsecs(1).nanosecond(), 100_000_000);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["digits",{"kind":"primitive","inner":"u16"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:2907:124":{"id":"2:2907:124","crate_id":2,"name":"Eq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2902:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2204:1932":{"id":"0:2204:1932","crate_id":0,"name":"Ambiguous","span":{"filename":"src/offset/mod.rs","begin":[38,4],"end":[38,35]},"visibility":"default","docs":"Given local time representation has multiple results and thus ambiguous.\nThis can occur when, for example, the negative timezone transition.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"generic","inner":"T"},{"kind":"generic","inner":"T"}]}},"0:2705:2144":{"id":"0:2705:2144","crate_id":0,"name":"month","span":{"filename":"src/format/parsed.rs","begin":[63,4],"end":[63,26]},"visibility":"public","docs":"Month (1--12).","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u32"}}],"bindings":[]}},"param_names":[]}}},"5:5837:12658":{"id":"5:5837:12658","crate_id":5,"name":"Join","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5839:181","5:5840:5384"],"generics":{"params":[{"name":"Separator","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3250:211-0:2463:2811":{"id":"a:2:3250:211-0:2463:2811","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3250:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2463:2811","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2481:2810":{"id":"0:2481:2810","crate_id":0,"name":"Numeric","span":{"filename":"src/format/mod.rs","begin":[82,0],"end":[134,1]},"visibility":"public","docs":"Numeric item types.\nThey have associated formatting width (FW) and parsing width (PW).\n\nThe **formatting width** is the minimal width to be formatted.\nIf the number is too short, and the padding is not [`Pad::None`](./enum.Pad.html#variant.None),\nthen it is left-padded.\nIf the number is too long or (in some cases) negative, it is printed as is.\n\nThe **parsing width** is the maximal width to be scanned.\nThe parser only tries to consume from one to given number of digits (greedily).\nIt also trims the preceding whitespace if any.\nIt cannot parse the negative number, so some date and time cannot be formatted then\nparsed with the same formatting items.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:2482:3375","0:2484:5464","0:2486:5466","0:2488:5468","0:2490:5470","0:2492:5472","0:2494:1906","0:2496:3379","0:2498:5476","0:2500:5478","0:2502:1890","0:2504:5481","0:2506:5483","0:2508:5485","0:2510:3999","0:2512:5488","0:2514:4001","0:2516:4002","0:2518:4003","0:2520:5496","0:2522:5500"],"impls":["a:2:3291:12723-0:2481:2810","a:2:9237:12747-0:2481:2810","a:2:3262:220-0:2481:2810","a:2:3250:211-0:2481:2810","a:2:9236:12748-0:2481:2810","b:2:3179-0:2481:2810","b:2:2856-0:2481:2810","b:2:2853-0:2481:2810","b:2:3983-0:2481:2810","b:2:3183-0:2481:2810","b:2:3189-0:2481:2810","b:2:3194-0:2481:2810","b:5:787-0:2481:2810","0:2525","0:2527","0:2528","0:2531","0:2532","0:2534"]}},"0:255:2546":{"id":"0:255:2546","crate_id":0,"name":"and_hms_milli_opt","span":{"filename":"src/offset/mod.rs","begin":[111,4],"end":[124,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date, hour, minute, second and millisecond.\nThe millisecond part can exceed 1,000 in order to represent the leap second.\nThe offset in the current date is preserved.\n\nPropagates any error. Ambiguous result would be discarded.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["hour",{"kind":"primitive","inner":"u32"}],["min",{"kind":"primitive","inner":"u32"}],["sec",{"kind":"primitive","inner":"u32"}],["milli",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2197:1896","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2443:1881","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2808:660":{"id":"0:2808:660","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[644,37],"end":[644,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10229:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10218:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:256:2550":{"id":"0:256:2550","crate_id":0,"name":"and_hms_micro_opt","span":{"filename":"src/offset/mod.rs","begin":[132,4],"end":[145,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date, hour, minute, second and microsecond.\nThe microsecond part can exceed 1,000,000 in order to represent the leap second.\nThe offset in the current date is preserved.\n\nPropagates any error. Ambiguous result would be discarded.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["hour",{"kind":"primitive","inner":"u32"}],["min",{"kind":"primitive","inner":"u32"}],["sec",{"kind":"primitive","inner":"u32"}],["micro",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2197:1896","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2443:1881","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2938:177":{"id":"2:2938:177","crate_id":2,"name":"Ord","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2939:415","2:2940:1934","2:2941:1933","2:2942:12577"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2907:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"2:2948:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13471:64543":{"id":"2:13471:64543","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2186:2225":{"id":"0:2186:2225","crate_id":0,"name":"hour12","span":{"filename":"src/lib.rs","begin":[1370,4],"end":[1377,5]},"visibility":"default","docs":"Returns the hour number from 1 to 12 with a boolean flag,\nwhich is false for AM and true for PM.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"bool"},{"kind":"primitive","inner":"u32"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3262:220-0:2585:5546":{"id":"a:2:3262:220-0:2585:5546","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3262:220","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2585:5546","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13397:61151":{"id":"2:13397:61151","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10911:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10911:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:92":{"id":"0:92","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[495,29],"end":[495,40]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"format::ParseResult","name":"ParseResult","id":"0:1667:1888","glob":false}},"2:3382:12532":{"id":"2:3382:12532","crate_id":2,"name":"BitOr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3384:181","2:3385:353"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2704:5738":{"id":"0:2704:5738","crate_id":0,"name":"isoyear_mod_100","span":{"filename":"src/format/parsed.rs","begin":[60,4],"end":[60,36]},"visibility":"public","docs":"Year in the [ISO week date](../naive/struct.NaiveDate.html#week-date), modulo 100.\nImplies that the year is >= 1 BCE when set.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i32"}}],"bindings":[]}},"param_names":[]}}},"b:5:787-0:2463:2811":{"id":"b:5:787-0:2463:2811","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2463:2811","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:789:12561","5:790:13067","5:791:13068"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:99":{"id":"0:99","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[497,25],"end":[497,34]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"naive::NaiveDate","name":"NaiveDate","id":"0:2264:1891","glob":false}},"b:2:3183-0:2657:1887":{"id":"b:2:3183-0:2657:1887","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3156:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2657:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3185:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13473:5906":{"id":"2:13473:5906","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2190:2235":{"id":"0:2190:2235","crate_id":0,"name":"with_hour","span":{"filename":"src/lib.rs","begin":[1393,4],"end":[1393,51]},"visibility":"default","docs":"Makes a new value with the hour number changed.\n\nReturns `None` when the resulting value would be invalid.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["hour",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"23:661:12598":{"id":"23:661:12598","crate_id":23,"name":"Inv","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:662:181","23:663:12619"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1651:5501":{"id":"0:1651:5501","crate_id":0,"name":"InternalNumeric","span":{"filename":"src/format/mod.rs","begin":[137,0],"end":[139,1]},"visibility":"public","docs":"An opaque type representing numeric item types for internal uses only.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:3291:12723-0:1651:5501","a:2:9237:12747-0:1651:5501","a:2:3262:220-0:1651:5501","a:2:3250:211-0:1651:5501","a:2:9236:12748-0:1651:5501","b:2:3179-0:1651:5501","b:2:2856-0:1651:5501","b:2:2853-0:1651:5501","b:2:3983-0:1651:5501","b:2:3183-0:1651:5501","b:2:3189-0:1651:5501","b:2:3194-0:1651:5501","b:5:787-0:1651:5501","0:1653","0:1655","0:1657","0:1658"]}},"a:2:9237:12747-0:2871:2127":{"id":"a:2:9237:12747-0:2871:2127","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9237:12747","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseMonthError","id":"0:2871:2127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2183:2212":{"id":"0:2183:2212","crate_id":0,"name":"num_days_from_ce","span":{"filename":"src/lib.rs","begin":[1344,4],"end":[1359,5]},"visibility":"default","docs":"Counts the days in the proleptic Gregorian calendar, with January 1, Year 1 (CE) as day 1.\n\n# Examples\n\n```\nuse chrono::{NaiveDate, Datelike};\n\nassert_eq!(NaiveDate::from_ymd(1970, 1, 1).num_days_from_ce(), 719_163);\nassert_eq!(NaiveDate::from_ymd(2, 1, 1).num_days_from_ce(), 366);\nassert_eq!(NaiveDate::from_ymd(1, 1, 1).num_days_from_ce(), 1);\nassert_eq!(NaiveDate::from_ymd(0, 1, 1).num_days_from_ce(), -365);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:373:816":{"id":"0:373:816","crate_id":0,"name":"local","span":{"filename":"src/offset/local.rs","begin":[4,0],"end":[227,1]},"visibility":{"restricted":{"parent":"0:206:957","path":"::offset"}},"docs":"The local (system) time zone.","links":{},"attrs":["#[cfg(feature = \"clock\")]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:2246:1894"],"is_stripped":true}},"0:2137":{"id":"0:2137","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[663,0],"end":[771,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2776:1908","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2138:1965","0:2139:1968","0:2140:1973","0:2141:1976","0:2142:1981","0:2143:1984"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2422:5018":{"id":"0:2422:5018","crate_id":0,"name":"Millis","span":{"filename":"src/datetime.rs","begin":[44,4],"end":[44,10]},"visibility":"default","docs":"Use fixed 3 subsecond digits. This corresponds to\n[Fixed::Nanosecond3](format/enum.Fixed.html#variant.Nanosecond3).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2476":{"id":"0:2476","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[58,33],"end":[58,35]},"visibility":{"restricted":{"parent":"0:1595:671","path":"::format"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralEq","id":"2:3259:217","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2463:2811","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"23:995:12570":{"id":"23:995:12570","crate_id":23,"name":"NumAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Num","id":"23:968:12509","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"NumAssignOps","id":"23:990:12569","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:9236:12748-0:2617:2809":{"id":"a:2:9236:12748-0:2617:2809","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9236:12748","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2617:2809","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"23:654:12596":{"id":"23:654:12596","crate_id":23,"name":"CheckedEuclid","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:655:65959","23:656:65960"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Euclid","id":"23:648:12597","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:979:1916":{"id":"0:979:1916","crate_id":0,"name":"isoweek","span":{"filename":"src/naive/isoweek.rs","begin":[4,0],"end":[163,1]},"visibility":{"restricted":{"parent":"0:498:1889","path":"::naive"}},"docs":"ISO 8601 week.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:2379:1890"],"is_stripped":true}},"0:2140:1973":{"id":"0:2140:1973","crate_id":0,"name":"number_from_monday","span":{"filename":"src/lib.rs","begin":[706,4],"end":[716,5]},"visibility":"public","docs":"Returns a day-of-week number starting from Monday = 1. (ISO 8601 weekday number)\n\n`w`:                      | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun`\n------------------------- | ----- | ----- | ----- | ----- | ----- | ----- | -----\n`w.number_from_monday()`: | 1     | 2     | 3     | 4     | 5     | 6     | 7","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2856-0:2812:1993":{"id":"b:2:2856-0:2812:1993","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2850:12559","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:2812:1993","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2858:59480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2853-0:2812:1993":{"id":"b:2:2853-0:2812:1993","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2847:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:2812:1993","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2855:2804"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2203:1533":{"id":"0:2203:1533","crate_id":0,"name":"0","span":{"filename":"src/offset/mod.rs","begin":[35,11],"end":[35,12]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"T"}},"2:3345:12526":{"id":"2:3345:12526","crate_id":2,"name":"Neg","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3346:181","2:3347:913"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2856-0:2657:1887":{"id":"b:2:2856-0:2657:1887","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2850:12559","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2657:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2858:59480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:787-0:1651:5501":{"id":"b:5:787-0:1651:5501","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:1651:5501","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:789:12561","5:790:13067","5:791:13068"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9236:12748-0:2820:1906":{"id":"a:2:9236:12748-0:2820:1906","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9236:12748","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:2820:1906","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:697:1879":{"id":"0:697:1879","crate_id":0,"name":"datetime","span":{"filename":"src/naive/datetime.rs","begin":[4,0],"end":[2507,1]},"visibility":{"restricted":{"parent":"0:498:1889","path":"::naive"}},"docs":"ISO 8601 date and time without timezone.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:800:1884","0:801:1883","0:2325:1892"],"is_stripped":true}},"2:10517:146":{"id":"2:10517:146","crate_id":2,"name":"Hasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10518:652","2:10519:1939","2:10520:60040","2:10521:60041","2:10522:60042","2:10523:60043","2:10524:60044","2:10525:60045","2:10526:60046","2:10527:60047","2:10528:60048","2:10529:60049","2:10530:60050","2:10531:60051","2:10532:60052","2:10533:1524"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2561:5150":{"id":"0:2561:5150","crate_id":0,"name":"TimezoneOffsetColonZ","span":{"filename":"src/format/mod.rs","begin":[217,4],"end":[217,24]},"visibility":"default","docs":"Offset from the local time to UTC (`+09:00` or `-04:00` or `Z`).\n\nIn the parser, the colon can be omitted and/or surrounded with any amount of whitespace,\nand `Z` can be either in upper case or in lower case.\nThe offset is limited from `-24:00` to `+24:00`,\nwhich is the same as [`FixedOffset`](../offset/struct.FixedOffset.html)'s range.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2056:2809":{"id":"0:2056:2809","crate_id":0,"name":"Item","span":{"filename":"src/format/strftime.rs","begin":[267,4],"end":[267,25]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2617:2809","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"0:197":{"id":"0:197","crate_id":0,"name":null,"span":{"filename":"src/div.rs","begin":[10,33],"end":[10,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"num_integer::div_mod_floor","name":"div_mod_floor","id":"22:133:2498","glob":false}},"2:13400:64532":{"id":"2:13400:64532","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:15916:6546","crate::ops::IndexMut":"2:3562:12545","str::slice_unchecked":"1:15916:6546"},"attrs":["#[stable(feature = \"str_slice_mut\", since = \"1.5.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"23:990:12569":{"id":"23:990:12569","crate_id":23,"name":"NumAssignOps","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AddAssign","id":"2:3349:2805","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SubAssign","id":"2:3353:2806","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"MulAssign","id":"2:3357:12529","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"DivAssign","id":"2:3361:12528","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RemAssign","id":"2:3365:12530","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"5:783:222":{"id":"5:783:222","crate_id":5,"name":"ToOwned","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:784:12561","5:785:13067","5:786:13068"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3291:12723-0:2536:3587":{"id":"a:2:3291:12723-0:2536:3587","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3291:12723","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2536:3587","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13428:59848":{"id":"2:13428:59848","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"prim@char":"1:15910:6541","str::rsplit":"1:15916:6546","str::split_whitespace":"1:15916:6546","self::pattern":"2:13015:6159","`DoubleEndedIterator`":"2:8425:120"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"2:49401:12680","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:12642","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:498:1889":{"id":"0:498:1889","crate_id":0,"name":"naive","span":{"filename":"src/lib.rs","begin":[541,0],"end":[541,13]},"visibility":"public","docs":"Date and time types unconcerned with timezones.\n\nThey are primarily building blocks for other types\n(e.g. [`TimeZone`](../offset/trait.TimeZone.html)),\nbut can be also used for the simpler date and time handling.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:1132","0:1135","0:1138","0:1142","0:1145","0:1148","0:1151","0:1154"],"is_stripped":false}},"0:1933:2013":{"id":"0:1933:2013","crate_id":0,"name":"parse","span":{"filename":"src/format/parse.rs","begin":[234,0],"end":[240,1]},"visibility":"public","docs":"Tries to parse given string into `parsed` with given formatting items.\nReturns `Ok` when the entire string has been parsed (otherwise `parsed` should not be used).\nThere should be no trailing string after parsing;\nuse a stray [`Item::Space`](./enum.Item.html#variant.Space) to trim whitespaces.\n\nThis particular date and time parser is:\n\n- Greedy. It will consume the longest possible prefix.\n  For example, `April` is always consumed entirely when the long month name is requested;\n  it equally accepts `Apr`, but prefers the longer prefix in this case.\n\n- Padding-agnostic (for numeric items).\n  The [`Pad`](./enum.Pad.html) field is completely ignored,\n  so one can prepend any number of whitespace then any number of zeroes before numbers.\n\n- (Still) obeying the intrinsic parsing width. This allows, for example, parsing `HHMMSS`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["parsed",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Parsed","id":"0:2698:2517","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}],["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["items",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:1667:1888","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8579:157","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"B"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2847:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2617:2809","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:2475:604":{"id":"0:2475:604","crate_id":0,"name":"eq","span":{"filename":"src/format/mod.rs","begin":[58,22],"end":[58,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2463:2811","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3179-0:2812:1993":{"id":"b:2:3179-0:2812:1993","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3156:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3153:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:2812:1993","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3182:3385"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2748:2808":{"id":"0:2748:2808","crate_id":0,"name":"DelayedFormat","span":{"filename":"src/format/mod.rs","begin":[719,0],"end":[730,1]},"visibility":"public","docs":"A *temporary* object which can be used as an argument to `format!` or others.\nThis is normally constructed via `format` methods of each date and time type.","links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:2065","a:2:3291:12723-0:2748:2808","a:2:9237:12747-0:2748:2808","a:2:3262:220-0:2748:2808","a:2:3250:211-0:2748:2808","a:2:9236:12748-0:2748:2808","b:2:3179-0:2748:2808","b:2:2856-0:2748:2808","b:2:2853-0:2748:2808","b:2:3983-0:2748:2808","b:2:3183-0:2748:2808","b:2:3189-0:2748:2808","b:2:3194-0:2748:2808","b:5:6413-0:2748:2808","0:2755","0:2072"]}},"1:6690:13407":{"id":"1:6690:13407","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6691:60353","1:6692:12361","1:6693:12362","1:6694:12364","1:6695:12363","1:6696:12365","1:6697:12366","1:6698:12368","1:6699:12022","1:6700:12371","1:6701:12372","1:6702:12373","1:6703:12374","1:6704:12375","1:6705:12376","1:6706:12369","1:6707:12370"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2573:1533":{"id":"0:2573:1533","crate_id":0,"name":"0","span":{"filename":"src/format/mod.rs","begin":[233,13],"end":[233,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2585:5546","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}},"0:2498:5476":{"id":"0:2498:5476","crate_id":0,"name":"WeekFromSun","span":{"filename":"src/format/mod.rs","begin":[102,4],"end":[102,15]},"visibility":"default","docs":"Week number, where the week 1 starts at the first Sunday of January (FW=PW=2).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"b:2:2856-0:2481:2810":{"id":"b:2:2856-0:2481:2810","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2850:12559","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2481:2810","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2858:59480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2708:1916":{"id":"0:2708:1916","crate_id":0,"name":"isoweek","span":{"filename":"src/format/parsed.rs","begin":[75,4],"end":[75,28]},"visibility":"public","docs":"[ISO week number](../naive/struct.NaiveDate.html#week-date)\n(1--52 or 1--53 depending on the year).","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u32"}}],"bindings":[]}},"param_names":[]}}},"0:188":{"id":"0:188","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[526,21],"end":[526,29]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"TimeZone","name":"TimeZone","id":"0:263:1898","glob":false}},"0:269:2598":{"id":"0:269:2598","crate_id":0,"name":"isoywd","span":{"filename":"src/offset/mod.rs","begin":[290,4],"end":[292,5]},"visibility":"default","docs":"Makes a new `Date` from ISO week date (year and week number), day of the week (DOW) and\nthe current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\nThe resulting `Date` may have a different year from the input year.\n\nThe time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),\nbut it will propagate to the `DateTime` values constructed via this date.\n\nPanics on the out-of-range date and/or invalid week number.\n\n# Example\n\n~~~~\nuse chrono::{Utc, Weekday, TimeZone};\n\nassert_eq!(Utc.isoywd(2015, 20, Weekday::Fri).to_string(), \"2015-05-15UTC\");\n~~~~","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["year",{"kind":"primitive","inner":"i32"}],["week",{"kind":"primitive","inner":"u32"}],["weekday",{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2776:1908","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2412:1876","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2861":{"id":"0:2861","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[964,20],"end":[964,22]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2907:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:2820:1906","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:8864:13946":{"id":"2:8864:13946","crate_id":2,"name":"TrustedStep","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Step","id":"2:7905:13947","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2878:907":{"id":"0:2878:907","crate_id":0,"name":"ne","span":{"filename":"src/lib.rs","begin":[1126,16],"end":[1126,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ParseMonthError","id":"0:2871:2127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2642:408":{"id":"0:2642:408","crate_id":0,"name":"clone","span":{"filename":"src/format/mod.rs","begin":[262,9],"end":[262,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2617:2809","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2078:126":{"id":"0:2078:126","crate_id":0,"name":"Err","span":{"filename":"src/format/mod.rs","begin":[841,4],"end":[841,33]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:2812:1993","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"2:3339:12527":{"id":"2:3339:12527","crate_id":2,"name":"Rem","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3341:181","2:3342:1102"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5790:13412":{"id":"1:5790:13412","crate_id":1,"name":"DirEntryExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5791:62236"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2197:1896":{"id":"0:2197:1896","crate_id":0,"name":"LocalResult","span":{"filename":"src/offset/mod.rs","begin":[30,0],"end":[39,1]},"visibility":"public","docs":"The conversion result from the local time to the timezone-aware datetime types.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"variants_stripped":false,"variants":["0:2199:174","0:2201:2523","0:2204:1932"],"impls":["0:243","0:251","0:258","a:2:3291:12723-0:2197:1896","a:2:9237:12747-0:2197:1896","a:2:3262:220-0:2197:1896","a:2:3250:211-0:2197:1896","a:2:9236:12748-0:2197:1896","b:2:3179-0:2197:1896","b:2:2856-0:2197:1896","b:2:2853-0:2197:1896","b:2:3983-0:2197:1896","b:2:3183-0:2197:1896","b:2:3189-0:2197:1896","b:2:3194-0:2197:1896","b:5:787-0:2197:1896","0:2208","0:2211","0:2213","0:2217","0:2220","0:2222","0:2224","0:2227"]}},"0:1000:1545":{"id":"0:1000:1545","crate_id":0,"name":"time","span":{"filename":"src/naive/time.rs","begin":[4,0],"end":[1814,1]},"visibility":{"restricted":{"parent":"0:498:1889","path":"::naive"}},"docs":"ISO 8601 time without timezone.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:2395:1893"],"is_stripped":true}},"2:13504:13425":{"id":"2:13504:13425","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"1:15910:6541"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDefault","id":"2:49709:12671","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2224":{"id":"0:2224","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[29,40],"end":[29,42]},"visibility":{"restricted":{"parent":"0:206:957","path":"::offset"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Eq","id":"2:2907:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2907:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2197:1896","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3562:12545":{"id":"2:3562:12545","crate_id":2,"name":"IndexMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3564:754"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Index","id":"2:3558:12544","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Idx"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13380:5946":{"id":"2:13380:5946","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_is_empty\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3262:220-0:2729:2518":{"id":"a:2:3262:220-0:2729:2518","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3262:220","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2729:2518","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2473":{"id":"0:2473","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[58,22],"end":[58,31]},"visibility":{"restricted":{"parent":"0:1595:671","path":"::format"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralPartialEq","id":"2:3258:218","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2463:2811","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2468:3377":{"id":"0:2468:3377","crate_id":0,"name":"Space","span":{"filename":"src/format/mod.rs","begin":[65,4],"end":[65,9]},"visibility":"default","docs":"Space padding.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2869:715":{"id":"0:2869:715","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[964,44],"end":[964,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"$crate::hash::Hasher","id":"2:10517:146","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:243":{"id":"0:243","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[41,0],"end":[74,1]},"visibility":{"restricted":{"parent":"0:206:957","path":"::offset"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2197:1896","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["0:245:2527","0:246:2530","0:247:2532","0:248:841"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2551:5146":{"id":"0:2551:5146","crate_id":0,"name":"Nanosecond3","span":{"filename":"src/format/mod.rs","begin":[196,4],"end":[196,15]},"visibility":"default","docs":"Same as [`Nanosecond`](#variant.Nanosecond) but the accuracy is fixed to 3.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2543:5517":{"id":"0:2543:5517","crate_id":0,"name":"LongWeekdayName","span":{"filename":"src/format/mod.rs","begin":[182,4],"end":[182,19]},"visibility":"default","docs":"Full day of the week names.\n\nPrints a full name in the title case, reads either a short or full name in any case.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"5:6105:13196":{"id":"5:6105:13196","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:8359:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]","#[stable(feature = \"repeat_str\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8359:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3262:220-0:2871:2127":{"id":"a:2:3262:220-0:2871:2127","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3262:220","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseMonthError","id":"0:2871:2127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:2902:183":{"id":"2:2902:183","crate_id":2,"name":"PartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2904:604","2:2905:907"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:2711:2177":{"id":"0:2711:2177","crate_id":0,"name":"day","span":{"filename":"src/format/parsed.rs","begin":[84,4],"end":[84,24]},"visibility":"public","docs":"Day of the month (1--28, 1--29, 1--30 or 1--31 depending on the month).","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u32"}}],"bindings":[]}},"param_names":[]}}},"2:3163:227":{"id":"2:3163:227","crate_id":2,"name":"TryFrom","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3165:127","2:3166:1408"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2873":{"id":"0:2873","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1126,9],"end":[1126,14]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseMonthError","id":"0:2871:2127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2874:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2755":{"id":"0:2755","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[718,9],"end":[718,14]},"visibility":{"restricted":{"parent":"0:1595:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Debug","id":"2:10269:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10269:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2748:2808","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}},"param_names":[]}},"items":["0:2757:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3183-0:2871:2127":{"id":"b:2:3183-0:2871:2127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3156:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseMonthError","id":"0:2871:2127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3185:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:263:1898":{"id":"0:263:1898","crate_id":0,"name":"TimeZone","span":{"filename":"src/offset/mod.rs","begin":[192,0],"end":[462,1]},"visibility":"public","docs":"The time zone.\n\nThe methods here are the primarily constructors for [`Date`](../struct.Date.html) and\n[`DateTime`](../struct.DateTime.html) types.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:264:1897","0:265:2274","0:266:2578","0:267:2588","0:268:2589","0:269:2598","0:270:2600","0:271:1931","0:272:2611","0:273:2621","0:274:2623","0:275:2638","0:276:2649","0:277:2653","0:278:2655","0:279:2657","0:280:2584","0:282:2661","0:284:2663","0:285:2666","0:286:2669","0:287:2615"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:9237:12747-0:2748:2808":{"id":"a:2:9237:12747-0:2748:2808","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9237:12747","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9237:12747","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2748:2808","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"23:880:15130":{"id":"23:880:15130","crate_id":23,"name":"Real","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:881:2696","23:882:65754","23:883:65755","23:884:2695","23:885:62221","23:886:62220","23:887:1900","23:888:49011","23:889:62219","23:890:6448","23:891:12614","23:892:63839","23:893:63840","23:894:12620","23:895:63836","23:896:65758","23:897:66110","23:898:12514","23:899:15744","23:900:66111","23:901:66112","23:902:66113","23:903:66114","23:904:66115","23:905:63837","23:906:63838","23:907:1934","23:908:1933","23:909:12613","23:910:12512","23:911:66116","23:912:66117","23:913:66118","23:914:66119","23:915:66120","23:916:66121","23:917:66122","23:918:66123","23:919:66124","23:920:66125","23:921:66126","23:922:66127","23:923:66128","23:924:66129","23:925:66130","23:926:66131","23:927:66132"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Num","id":"23:968:12509","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3260:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"NumCast","id":"23:362:12585","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"2:2948:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Neg","id":"2:3345:12526","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13452:64537":{"id":"2:13452:64537","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:12642","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:12642","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13040:12654","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9237:12747-0:2617:2809":{"id":"a:2:9237:12747-0:2617:2809","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9237:12747","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2617:2809","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2486:5466":{"id":"0:2486:5466","crate_id":0,"name":"YearMod100","span":{"filename":"src/format/mod.rs","begin":[89,4],"end":[89,14]},"visibility":"default","docs":"Gregorian year modulo 100 (FW=PW=2). Cannot be negative.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:3250:211":{"id":"2:3250:211","crate_id":2,"name":"Send","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:22763:13938":{"id":"2:22763:13938","crate_id":2,"name":"SimdInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:22764:13941","2:22765:63420","2:22766:1220","2:22767:1221","2:22768:6448","2:22769:63457","2:22770:18645","2:22771:63458","2:22772:63459","2:22773:12614","2:22774:63421","2:22775:63422","2:22776:63423","2:22777:63424","2:22778:63425","2:22779:63426","2:22780:63427"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3260:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:22812:13421","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2588:660":{"id":"0:2588:660","crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[237,9],"end":[237,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10229:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10218:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9236:12748-0:2871:2127":{"id":"a:2:9236:12748-0:2871:2127","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9236:12748","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseMonthError","id":"0:2871:2127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2567:5103":{"id":"0:2567:5103","crate_id":0,"name":"RFC2822","span":{"filename":"src/format/mod.rs","begin":[225,4],"end":[225,11]},"visibility":"default","docs":"RFC 2822 date and time syntax. Commonly used for email and MIME date and time.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2547:5522":{"id":"0:2547:5522","crate_id":0,"name":"UpperAmPm","span":{"filename":"src/format/mod.rs","begin":[190,4],"end":[190,13]},"visibility":"default","docs":"AM/PM.\n\nPrints in upper case, reads in any case.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"a:2:3250:211-0:2820:1906":{"id":"a:2:3250:211-0:2820:1906","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3250:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:2820:1906","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2627:1533":{"id":"0:2627:1533","crate_id":0,"name":"0","span":{"filename":"src/format/mod.rs","begin":[270,10],"end":[270,17]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}},"2:3985:1421":{"id":"2:3985:1421","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"2:45973:12700","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:0:2304":{"id":"0:0:2304","crate_id":0,"name":"chrono","span":{"filename":"src/lib.rs","begin":[4,0],"end":[1535,1]},"visibility":"public","docs":"# Chrono: Date and Time for Rust\n\nIt aims to be a feature-complete superset of\nthe [time](https://github.com/rust-lang-deprecated/time) library.\nIn particular,\n\n* Chrono strictly adheres to ISO 8601.\n* Chrono is timezone-aware by default, with separate timezone-naive types.\n* Chrono is space-optimal and (while not being the primary goal) reasonably efficient.\n\nThere were several previous attempts to bring a good date and time library to Rust,\nwhich Chrono builds upon and should acknowledge:\n\n* [Initial research on\n   the wiki](https://github.com/rust-lang/rust-wiki-backup/blob/master/Lib-datetime.md)\n* Dietrich Epp's [datetime-rs](https://github.com/depp/datetime-rs)\n* Luis de Bethencourt's [rust-datetime](https://github.com/luisbg/rust-datetime)\n\nAny significant changes to Chrono are documented in\nthe [`CHANGELOG.md`](https://github.com/chronotope/chrono/blob/main/CHANGELOG.md) file.\n\n## Usage\n\nPut this in your `Cargo.toml`:\n\n```toml\n[dependencies]\nchrono = \"0.4\"\n```\n\n### Features\n\nChrono supports various runtime environments and operating systems, and has\nseveral features that may be enabled or disabled.\n\nDefault features:\n\n- `alloc`: Enable features that depend on allocation (primarily string formatting)\n- `std`: Enables functionality that depends on the standard library. This\n  is a superset of `alloc` and adds interoperation with standard library types\n  and traits.\n- `clock`: enables reading the system time (`now`), independent of whether\n  `std::time::SystemTime` is present, depends on having a libc.\n\nOptional features:\n\n- `wasmbind`: Enable integration with [wasm-bindgen][] and its `js-sys` project\n- [`serde`][]: Enable serialization/deserialization via serde.\n- `unstable-locales`: Enable localization. This adds various methods with a\n  `_localized` suffix. The implementation and API may change or even be\n  removed in a patch release. Feedback welcome.\n\n[`serde`]: https://github.com/serde-rs/serde\n[wasm-bindgen]: https://github.com/rustwasm/wasm-bindgen\n\nSee the [cargo docs][] for examples of specifying features.\n\n[cargo docs]: https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html#choosing-features\n\n## Overview\n\n### Duration\n\nChrono currently uses its own [`Duration`] type to represent the magnitude\nof a time span. Since this has the same name as the newer, standard type for\nduration, the reference will refer this type as `OldDuration`.\n\nNote that this is an \"accurate\" duration represented as seconds and\nnanoseconds and does not represent \"nominal\" components such as days or\nmonths.\n\nWhen the `oldtime` feature is enabled, [`Duration`] is an alias for the\n[`time::Duration`](https://docs.rs/time/0.1.40/time/struct.Duration.html)\ntype from v0.1 of the time crate. time v0.1 is deprecated, so new code\nshould disable the `oldtime` feature and use the `chrono::Duration` type\ninstead. The `oldtime` feature is enabled by default for backwards\ncompatibility, but future versions of Chrono are likely to remove the\nfeature entirely.\n\nChrono does not yet natively support\nthe standard [`Duration`](https://doc.rust-lang.org/std/time/struct.Duration.html) type,\nbut it will be supported in the future.\nMeanwhile you can convert between two types with\n[`Duration::from_std`](https://docs.rs/time/0.1.40/time/struct.Duration.html#method.from_std)\nand\n[`Duration::to_std`](https://docs.rs/time/0.1.40/time/struct.Duration.html#method.to_std)\nmethods.\n\n### Date and Time\n\nChrono provides a\n[**`DateTime`**](./struct.DateTime.html)\ntype to represent a date and a time in a timezone.\n\nFor more abstract moment-in-time tracking such as internal timekeeping\nthat is unconcerned with timezones, consider\n[`time::SystemTime`](https://doc.rust-lang.org/std/time/struct.SystemTime.html),\nwhich tracks your system clock, or\n[`time::Instant`](https://doc.rust-lang.org/std/time/struct.Instant.html), which\nis an opaque but monotonically-increasing representation of a moment in time.\n\n`DateTime` is timezone-aware and must be constructed from\nthe [**`TimeZone`**](./offset/trait.TimeZone.html) object,\nwhich defines how the local date is converted to and back from the UTC date.\nThere are three well-known `TimeZone` implementations:\n\n* [**`Utc`**](./offset/struct.Utc.html) specifies the UTC time zone. It is most efficient.\n\n* [**`Local`**](./offset/struct.Local.html) specifies the system local time zone.\n\n* [**`FixedOffset`**](./offset/struct.FixedOffset.html) specifies\n  an arbitrary, fixed time zone such as UTC+09:00 or UTC-10:30.\n  This often results from the parsed textual date and time.\n  Since it stores the most information and does not depend on the system environment,\n  you would want to normalize other `TimeZone`s into this type.\n\n`DateTime`s with different `TimeZone` types are distinct and do not mix,\nbut can be converted to each other using\nthe [`DateTime::with_timezone`](./struct.DateTime.html#method.with_timezone) method.\n\nYou can get the current date and time in the UTC time zone\n([`Utc::now()`](./offset/struct.Utc.html#method.now))\nor in the local time zone\n([`Local::now()`](./offset/struct.Local.html#method.now)).\n\n```rust\nuse chrono::prelude::*;\n\nlet utc: DateTime<Utc> = Utc::now();       // e.g. `2014-11-28T12:45:59.324310806Z`\nlet local: DateTime<Local> = Local::now(); // e.g. `2014-11-28T21:45:59.324310806+09:00`\n# let _ = utc; let _ = local;\n```\n\nAlternatively, you can create your own date and time.\nThis is a bit verbose due to Rust's lack of function and method overloading,\nbut in turn we get a rich combination of initialization methods.\n\n```rust\nuse chrono::prelude::*;\nuse chrono::offset::LocalResult;\n\nlet dt = Utc.ymd(2014, 7, 8).and_hms(9, 10, 11); // `2014-07-08T09:10:11Z`\n// July 8 is 188th day of the year 2014 (`o` for \"ordinal\")\nassert_eq!(dt, Utc.yo(2014, 189).and_hms(9, 10, 11));\n// July 8 is Tuesday in ISO week 28 of the year 2014.\nassert_eq!(dt, Utc.isoywd(2014, 28, Weekday::Tue).and_hms(9, 10, 11));\n\nlet dt = Utc.ymd(2014, 7, 8).and_hms_milli(9, 10, 11, 12); // `2014-07-08T09:10:11.012Z`\nassert_eq!(dt, Utc.ymd(2014, 7, 8).and_hms_micro(9, 10, 11, 12_000));\nassert_eq!(dt, Utc.ymd(2014, 7, 8).and_hms_nano(9, 10, 11, 12_000_000));\n\n// dynamic verification\nassert_eq!(Utc.ymd_opt(2014, 7, 8).and_hms_opt(21, 15, 33),\n           LocalResult::Single(Utc.ymd(2014, 7, 8).and_hms(21, 15, 33)));\nassert_eq!(Utc.ymd_opt(2014, 7, 8).and_hms_opt(80, 15, 33), LocalResult::None);\nassert_eq!(Utc.ymd_opt(2014, 7, 38).and_hms_opt(21, 15, 33), LocalResult::None);\n\n// other time zone objects can be used to construct a local datetime.\n// obviously, `local_dt` is normally different from `dt`, but `fixed_dt` should be identical.\nlet local_dt = Local.ymd(2014, 7, 8).and_hms_milli(9, 10, 11, 12);\nlet fixed_dt = FixedOffset::east(9 * 3600).ymd(2014, 7, 8).and_hms_milli(18, 10, 11, 12);\nassert_eq!(dt, fixed_dt);\n# let _ = local_dt;\n```\n\nVarious properties are available to the date and time, and can be altered individually.\nMost of them are defined in the traits [`Datelike`](./trait.Datelike.html) and\n[`Timelike`](./trait.Timelike.html) which you should `use` before.\nAddition and subtraction is also supported.\nThe following illustrates most supported operations to the date and time:\n\n```rust\n# extern crate chrono;\n\n# fn main() {\nuse chrono::prelude::*;\nuse chrono::Duration;\n\n// assume this returned `2014-11-28T21:45:59.324310806+09:00`:\nlet dt = FixedOffset::east(9*3600).ymd(2014, 11, 28).and_hms_nano(21, 45, 59, 324310806);\n\n// property accessors\nassert_eq!((dt.year(), dt.month(), dt.day()), (2014, 11, 28));\nassert_eq!((dt.month0(), dt.day0()), (10, 27)); // for unfortunate souls\nassert_eq!((dt.hour(), dt.minute(), dt.second()), (21, 45, 59));\nassert_eq!(dt.weekday(), Weekday::Fri);\nassert_eq!(dt.weekday().number_from_monday(), 5); // Mon=1, ..., Sun=7\nassert_eq!(dt.ordinal(), 332); // the day of year\nassert_eq!(dt.num_days_from_ce(), 735565); // the number of days from and including Jan 1, 1\n\n// time zone accessor and manipulation\nassert_eq!(dt.offset().fix().local_minus_utc(), 9 * 3600);\nassert_eq!(dt.timezone(), FixedOffset::east(9 * 3600));\nassert_eq!(dt.with_timezone(&Utc), Utc.ymd(2014, 11, 28).and_hms_nano(12, 45, 59, 324310806));\n\n// a sample of property manipulations (validates dynamically)\nassert_eq!(dt.with_day(29).unwrap().weekday(), Weekday::Sat); // 2014-11-29 is Saturday\nassert_eq!(dt.with_day(32), None);\nassert_eq!(dt.with_year(-300).unwrap().num_days_from_ce(), -109606); // November 29, 301 BCE\n\n// arithmetic operations\nlet dt1 = Utc.ymd(2014, 11, 14).and_hms(8, 9, 10);\nlet dt2 = Utc.ymd(2014, 11, 14).and_hms(10, 9, 8);\nassert_eq!(dt1.signed_duration_since(dt2), Duration::seconds(-2 * 3600 + 2));\nassert_eq!(dt2.signed_duration_since(dt1), Duration::seconds(2 * 3600 - 2));\nassert_eq!(Utc.ymd(1970, 1, 1).and_hms(0, 0, 0) + Duration::seconds(1_000_000_000),\n           Utc.ymd(2001, 9, 9).and_hms(1, 46, 40));\nassert_eq!(Utc.ymd(1970, 1, 1).and_hms(0, 0, 0) - Duration::seconds(1_000_000_000),\n           Utc.ymd(1938, 4, 24).and_hms(22, 13, 20));\n# }\n```\n\n### Formatting and Parsing\n\nFormatting is done via the [`format`](./struct.DateTime.html#method.format) method,\nwhich format is equivalent to the familiar `strftime` format.\n\nSee [`format::strftime`](./format/strftime/index.html#specifiers)\ndocumentation for full syntax and list of specifiers.\n\nThe default `to_string` method and `{:?}` specifier also give a reasonable representation.\nChrono also provides [`to_rfc2822`](./struct.DateTime.html#method.to_rfc2822) and\n[`to_rfc3339`](./struct.DateTime.html#method.to_rfc3339) methods\nfor well-known formats.\n\nChrono now also provides date formatting in almost any language without the\nhelp of an additional C library. This functionality is under the feature\n`unstable-locales`:\n\n```text\nchrono { version = \"0.4\", features = [\"unstable-locales\"]\n```\n\nThe `unstable-locales` feature requires and implies at least the `alloc` feature.\n\n```rust\nuse chrono::prelude::*;\n\nlet dt = Utc.ymd(2014, 11, 28).and_hms(12, 0, 9);\nassert_eq!(dt.format(\"%Y-%m-%d %H:%M:%S\").to_string(), \"2014-11-28 12:00:09\");\nassert_eq!(dt.format(\"%a %b %e %T %Y\").to_string(), \"Fri Nov 28 12:00:09 2014\");\nassert_eq!(dt.format_localized(\"%A %e %B %Y, %T\", Locale::fr_BE).to_string(), \"vendredi 28 novembre 2014, 12:00:09\");\nassert_eq!(dt.format(\"%a %b %e %T %Y\").to_string(), dt.format(\"%c\").to_string());\n\nassert_eq!(dt.to_string(), \"2014-11-28 12:00:09 UTC\");\nassert_eq!(dt.to_rfc2822(), \"Fri, 28 Nov 2014 12:00:09 +0000\");\nassert_eq!(dt.to_rfc3339(), \"2014-11-28T12:00:09+00:00\");\nassert_eq!(format!(\"{:?}\", dt), \"2014-11-28T12:00:09Z\");\n\n// Note that milli/nanoseconds are only printed if they are non-zero\nlet dt_nano = Utc.ymd(2014, 11, 28).and_hms_nano(12, 0, 9, 1);\nassert_eq!(format!(\"{:?}\", dt_nano), \"2014-11-28T12:00:09.000000001Z\");\n```\n\nParsing can be done with three methods:\n\n1. The standard [`FromStr`](https://doc.rust-lang.org/std/str/trait.FromStr.html) trait\n   (and [`parse`](https://doc.rust-lang.org/std/primitive.str.html#method.parse) method\n   on a string) can be used for parsing `DateTime<FixedOffset>`, `DateTime<Utc>` and\n   `DateTime<Local>` values. This parses what the `{:?}`\n   ([`std::fmt::Debug`](https://doc.rust-lang.org/std/fmt/trait.Debug.html))\n   format specifier prints, and requires the offset to be present.\n\n2. [`DateTime::parse_from_str`](./struct.DateTime.html#method.parse_from_str) parses\n   a date and time with offsets and returns `DateTime<FixedOffset>`.\n   This should be used when the offset is a part of input and the caller cannot guess that.\n   It *cannot* be used when the offset can be missing.\n   [`DateTime::parse_from_rfc2822`](./struct.DateTime.html#method.parse_from_rfc2822)\n   and\n   [`DateTime::parse_from_rfc3339`](./struct.DateTime.html#method.parse_from_rfc3339)\n   are similar but for well-known formats.\n\n3. [`Offset::datetime_from_str`](./offset/trait.TimeZone.html#method.datetime_from_str) is\n   similar but returns `DateTime` of given offset.\n   When the explicit offset is missing from the input, it simply uses given offset.\n   It issues an error when the input contains an explicit offset different\n   from the current offset.\n\nMore detailed control over the parsing process is available via\n[`format`](./format/index.html) module.\n\n```rust\nuse chrono::prelude::*;\n\nlet dt = Utc.ymd(2014, 11, 28).and_hms(12, 0, 9);\nlet fixed_dt = dt.with_timezone(&FixedOffset::east(9*3600));\n\n// method 1\nassert_eq!(\"2014-11-28T12:00:09Z\".parse::<DateTime<Utc>>(), Ok(dt.clone()));\nassert_eq!(\"2014-11-28T21:00:09+09:00\".parse::<DateTime<Utc>>(), Ok(dt.clone()));\nassert_eq!(\"2014-11-28T21:00:09+09:00\".parse::<DateTime<FixedOffset>>(), Ok(fixed_dt.clone()));\n\n// method 2\nassert_eq!(DateTime::parse_from_str(\"2014-11-28 21:00:09 +09:00\", \"%Y-%m-%d %H:%M:%S %z\"),\n           Ok(fixed_dt.clone()));\nassert_eq!(DateTime::parse_from_rfc2822(\"Fri, 28 Nov 2014 21:00:09 +0900\"),\n           Ok(fixed_dt.clone()));\nassert_eq!(DateTime::parse_from_rfc3339(\"2014-11-28T21:00:09+09:00\"), Ok(fixed_dt.clone()));\n\n// method 3\nassert_eq!(Utc.datetime_from_str(\"2014-11-28 12:00:09\", \"%Y-%m-%d %H:%M:%S\"), Ok(dt.clone()));\nassert_eq!(Utc.datetime_from_str(\"Fri Nov 28 12:00:09 2014\", \"%a %b %e %T %Y\"), Ok(dt.clone()));\n\n// oops, the year is missing!\nassert!(Utc.datetime_from_str(\"Fri Nov 28 12:00:09\", \"%a %b %e %T %Y\").is_err());\n// oops, the format string does not include the year at all!\nassert!(Utc.datetime_from_str(\"Fri Nov 28 12:00:09\", \"%a %b %e %T\").is_err());\n// oops, the weekday is incorrect!\nassert!(Utc.datetime_from_str(\"Sat Nov 28 12:00:09 2014\", \"%a %b %e %T %Y\").is_err());\n```\n\nAgain : See [`format::strftime`](./format/strftime/index.html#specifiers)\ndocumentation for full syntax and list of specifiers.\n\n### Conversion from and to EPOCH timestamps\n\nUse [`Utc.timestamp(seconds, nanoseconds)`](./offset/trait.TimeZone.html#method.timestamp)\nto construct a [`DateTime<Utc>`](./struct.DateTime.html) from a UNIX timestamp\n(seconds, nanoseconds that passed since January 1st 1970).\n\nUse [`DateTime.timestamp`](./struct.DateTime.html#method.timestamp) to get the timestamp (in seconds)\nfrom a [`DateTime`](./struct.DateTime.html). Additionally, you can use\n[`DateTime.timestamp_subsec_nanos`](./struct.DateTime.html#method.timestamp_subsec_nanos)\nto get the number of additional number of nanoseconds.\n\n```rust\n// We need the trait in scope to use Utc::timestamp().\nuse chrono::{DateTime, TimeZone, Utc};\n\n// Construct a datetime from epoch:\nlet dt = Utc.timestamp(1_500_000_000, 0);\nassert_eq!(dt.to_rfc2822(), \"Fri, 14 Jul 2017 02:40:00 +0000\");\n\n// Get epoch value from a datetime:\nlet dt = DateTime::parse_from_rfc2822(\"Fri, 14 Jul 2017 02:40:00 +0000\").unwrap();\nassert_eq!(dt.timestamp(), 1_500_000_000);\n```\n\n### Individual date\n\nChrono also provides an individual date type ([**`Date`**](./struct.Date.html)).\nIt also has time zones attached, and have to be constructed via time zones.\nMost operations available to `DateTime` are also available to `Date` whenever appropriate.\n\n```rust\nuse chrono::prelude::*;\nuse chrono::offset::LocalResult;\n\n# // these *may* fail, but only very rarely. just rerun the test if you were that unfortunate ;)\nassert_eq!(Utc::today(), Utc::now().date());\nassert_eq!(Local::today(), Local::now().date());\n\nassert_eq!(Utc.ymd(2014, 11, 28).weekday(), Weekday::Fri);\nassert_eq!(Utc.ymd_opt(2014, 11, 31), LocalResult::None);\nassert_eq!(Utc.ymd(2014, 11, 28).and_hms_milli(7, 8, 9, 10).format(\"%H%M%S\").to_string(),\n           \"070809\");\n```\n\nThere is no timezone-aware `Time` due to the lack of usefulness and also the complexity.\n\n`DateTime` has [`date`](./struct.DateTime.html#method.date) method\nwhich returns a `Date` which represents its date component.\nThere is also a [`time`](./struct.DateTime.html#method.time) method,\nwhich simply returns a naive local time described below.\n\n### Naive date and time\n\nChrono provides naive counterparts to `Date`, (non-existent) `Time` and `DateTime`\nas [**`NaiveDate`**](./naive/struct.NaiveDate.html),\n[**`NaiveTime`**](./naive/struct.NaiveTime.html) and\n[**`NaiveDateTime`**](./naive/struct.NaiveDateTime.html) respectively.\n\nThey have almost equivalent interfaces as their timezone-aware twins,\nbut are not associated to time zones obviously and can be quite low-level.\nThey are mostly useful for building blocks for higher-level types.\n\nTimezone-aware `DateTime` and `Date` types have two methods returning naive versions:\n[`naive_local`](./struct.DateTime.html#method.naive_local) returns\na view to the naive local time,\nand [`naive_utc`](./struct.DateTime.html#method.naive_utc) returns\na view to the naive UTC time.\n\n## Limitations\n\nOnly proleptic Gregorian calendar (i.e. extended to support older dates) is supported.\nBe very careful if you really have to deal with pre-20C dates, they can be in Julian or others.\n\nDate types are limited in about +/- 262,000 years from the common epoch.\nTime types are limited in the nanosecond accuracy.\n\n[Leap seconds are supported in the representation but\nChrono doesn't try to make use of them](./naive/struct.NaiveTime.html#leap-second-handling).\n(The main reason is that leap seconds are not really predictable.)\nAlmost *every* operation over the possible leap seconds will ignore them.\nConsider using `NaiveDateTime` with the implicit TAI (International Atomic Time) scale\nif you want.\n\nChrono inherently does not support an inaccurate or partial date and time representation.\nAny operation that can be ambiguous will return `None` in such cases.\nFor example, \"a month later\" of 2014-01-30 is not well-defined\nand consequently `Utc.ymd(2014, 1, 30).with_month(2)` returns `None`.\n\nNon ISO week handling is not yet supported.\nFor now you can use the [chrono_ext](https://crates.io/crates/chrono_ext)\ncrate ([sources](https://github.com/bcourtine/chrono-ext/)).\n\nAdvanced time zone handling is not yet supported.\nFor now you can try the [Chrono-tz](https://github.com/chronotope/chrono-tz/) crate instead.","links":{"`Duration`":"20:405:121"},"attrs":["#![doc(html_root_url = \"https://docs.rs/chrono/latest/\")]","#![deny(missing_docs)]","#![deny(missing_debug_implementations)]","#![deny(dead_code)]","#![allow(unknown_lints)]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:137:1030","0:206:957","0:498:1889","0:1595:671","0:2776:1908","0:2812:1993","0:2820:1906","0:2871:2127","0:2165:1905","0:2184:1907","0:62","0:66","0:69","0:72","0:76","0:79","0:82","0:85","0:89","0:92","0:96","0:99","0:102","0:105","0:108","0:112","0:115","0:118","0:121","0:124","0:128","0:131","0:134"],"is_stripped":false}},"b:2:3194-0:2463:2811":{"id":"b:2:3194-0:2463:2811","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3153:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3163:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2463:2811","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3197:127","2:3198:1408"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2159":{"id":"0:2159","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1088,0],"end":[1123,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["from_u16","from_i32","from_isize","from_u32","from_usize","from_i128","from_i8","from_u128","from_f32","from_u8","from_i16","from_f64"],"trait":{"kind":"resolved_path","inner":{"name":"FromPrimitive","id":"23:337:1988","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:2820:1906","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2160:1991","0:2161:1989","0:2162:2125"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:5794:13413":{"id":"1:5794:13413","crate_id":1,"name":"DirEntryExt2","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5795:60336"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10564:13421","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:9237:12747-0:1651:5501":{"id":"a:2:9237:12747-0:1651:5501","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9237:12747","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:1651:5501","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2504:5481":{"id":"0:2504:5481","crate_id":0,"name":"NumDaysFromSun","span":{"filename":"src/format/mod.rs","begin":[108,4],"end":[108,18]},"visibility":"default","docs":"Day of the week, where Sunday = 0 and Saturday = 6 (FW=PW=1).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2157:2116":{"id":"0:2157:2116","crate_id":0,"name":"number_from_month","span":{"filename":"src/lib.rs","begin":[1046,4],"end":[1061,5]},"visibility":"public","docs":"Returns a month-of-year number starting from January = 1.\n\n`m`:                     | `January` | `February` | `...` | `December`\n-------------------------| --------- | ---------- | --- | -----\n`m.number_from_month()`: | 1         | 2          | `...` | 12","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3291:12723-0:2748:2808":{"id":"a:2:3291:12723-0:2748:2808","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3291:12723","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3291:12723","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2748:2808","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:285:2666":{"id":"0:285:2666","crate_id":0,"name":"offset_from_utc_datetime","span":{"filename":"src/offset/mod.rs","begin":[449,4],"end":[449,76]},"visibility":"default","docs":"Creates the offset for given UTC `NaiveDateTime`. This cannot fail.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["utc",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2325:1892","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"qualified_path","inner":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:263:1898","args":null,"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2077":{"id":"0:2077","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[840,0],"end":[850,1]},"visibility":{"restricted":{"parent":"0:1595:671","path":"::format"}},"docs":"Parsing a `str` into a `Weekday` uses the format [`%W`](./format/strftime/index.html).\n\n# Example\n\n~~~~\nuse chrono::Weekday;\n\nassert_eq!(\"Sunday\".parse::<Weekday>(), Ok(Weekday::Sun));\nassert!(\"any day\".parse::<Weekday>().is_err());\n~~~~\n\nThe parsing is case-insensitive.\n\n~~~~\n# use chrono::Weekday;\nassert_eq!(\"mON\".parse::<Weekday>(), Ok(Weekday::Mon));\n~~~~\n\nOnly the shortest form (e.g. `sun`) and the longest form (e.g. `sunday`) is accepted.\n\n~~~~\n# use chrono::Weekday;\nassert!(\"thurs\".parse::<Weekday>().is_err());\n~~~~","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"FromStr","id":"2:12954:3373","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2776:1908","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2078:126","0:2079:2037"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:5:6413-0:2776:1908":{"id":"b:5:6413-0:2776:1908","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10276:119","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"ToString","id":"5:6411:223","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2776:1908","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:6415:1390"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2530:907":{"id":"0:2530:907","crate_id":0,"name":"ne","span":{"filename":"src/format/mod.rs","begin":[81,16],"end":[81,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2481:2810","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2163":{"id":"0:2163","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1131,0],"end":[1135,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10269:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseMonthError","id":"0:2871:2127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2164:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13446:61185":{"id":"2:13446:61185","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"self::pattern":"2:13015:6159","str::splitn":"1:15916:6546","prim@char":"1:15910:6541"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitN","id":"2:49523:12681","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:12642","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:12642","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13040:12654","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2640":{"id":"0:2640","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[262,9],"end":[262,14]},"visibility":{"restricted":{"parent":"0:1595:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2617:2809","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["0:2642:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3250:211-0:2481:2810":{"id":"a:2:3250:211-0:2481:2810","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3250:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2481:2810","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:2872:104":{"id":"2:2872:104","crate_id":2,"name":"Clone","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2873:408","2:2874:410"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2165:1905":{"id":"0:2165:1905","crate_id":0,"name":"Datelike","span":{"filename":"src/lib.rs","begin":[1245,0],"end":[1360,1]},"visibility":"public","docs":"The common set of methods for date component.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:2166:2166","0:2167:2169","0:2168:2144","0:2169:2174","0:2170:2177","0:2171:2180","0:2172:2183","0:2173:2186","0:2174:2032","0:2175:2189","0:2176:2192","0:2177:2194","0:2178:2196","0:2179:2198","0:2180:2200","0:2181:2202","0:2182:2204","0:2183:2212"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2867:660":{"id":"0:2867:660","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[964,37],"end":[964,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10229:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10218:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"23:525:12586":{"id":"23:525:12586","crate_id":23,"name":"One","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:526:4136","23:527:65687","23:528:65686"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Mul","id":"2:3328:12525","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:12462:14269":{"id":"2:12462:14269","crate_id":2,"name":"SlicePattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:12463:2809","2:12464:63079"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3983-0:2820:1906":{"id":"b:2:3983-0:2820:1906","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3981:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:2820:1906","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3985:1421"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3250:211-0:2657:1887":{"id":"a:2:3250:211-0:2657:1887","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3250:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2657:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2634:1534":{"id":"0:2634:1534","crate_id":0,"name":"1","span":{"filename":"src/format/mod.rs","begin":[276,21],"end":[276,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2463:2811","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}},"b:5:787-0:2585:5546":{"id":"b:5:787-0:2585:5546","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2585:5546","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:789:12561","5:790:13067","5:791:13068"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3159:228":{"id":"2:3159:228","crate_id":2,"name":"TryInto","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3161:127","2:3162:1409"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:158":{"id":"0:158","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[520,23],"end":[520,28]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"Month","name":"Month","id":"0:2820:1906","glob":false}},"0:251":{"id":"0:251","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[76,0],"end":[167,1]},"visibility":{"restricted":{"parent":"0:206:957","path":"::offset"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TimeZone","id":"0:263:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2197:1896","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2412:1876","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"items":["0:253:2540","0:254:2543","0:255:2546","0:256:2550","0:257:2554"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3183-0:2748:2808":{"id":"b:2:3183-0:2748:2808","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3156:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2748:2808","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}},"param_names":[]}},"items":["2:3185:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2853-0:2776:1908":{"id":"b:2:2853-0:2776:1908","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2847:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2776:1908","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2855:2804"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2181:2202":{"id":"0:2181:2202","crate_id":0,"name":"with_ordinal","span":{"filename":"src/lib.rs","begin":[1325,4],"end":[1325,57]},"visibility":"default","docs":"Makes a new value with the day of year (starting from 1) changed.\n\nReturns `None` when the resulting value would be invalid.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["ordinal",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2651":{"id":"0:2651","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[262,27],"end":[262,29]},"visibility":{"restricted":{"parent":"0:1595:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2907:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2617:2809","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2532":{"id":"0:2532","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[81,27],"end":[81,29]},"visibility":{"restricted":{"parent":"0:1595:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2907:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2481:2810","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2304:3222":{"id":"0:2304:3222","crate_id":0,"name":"NaiveDateWeeksIterator","span":{"filename":"src/naive/date.rs","begin":[1589,0],"end":[1591,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"0:2716:2233":{"id":"0:2716:2233","crate_id":0,"name":"nanosecond","span":{"filename":"src/format/parsed.rs","begin":[99,4],"end":[99,31]},"visibility":"public","docs":"The number of nanoseconds since the whole second (0--999,999,999).","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u32"}}],"bindings":[]}},"param_names":[]}}},"0:2557:5531":{"id":"0:2557:5531","crate_id":0,"name":"TimezoneName","span":{"filename":"src/format/mod.rs","begin":[204,4],"end":[204,16]},"visibility":"default","docs":"Timezone name.\n\nIt does not support parsing, its use in the parser is an immediate failure.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"a:2:3262:220-0:2776:1908":{"id":"a:2:3262:220-0:2776:1908","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3262:220","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2776:1908","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:495":{"id":"0:495","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[472,0],"end":[472,23]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::utc::Utc","name":"Utc","id":"0:2253:1899","glob":false}},"0:2216:907":{"id":"0:2216:907","crate_id":0,"name":"ne","span":{"filename":"src/offset/mod.rs","begin":[29,16],"end":[29,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2197:1896","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2206:1533":{"id":"0:2206:1533","crate_id":0,"name":"0","span":{"filename":"src/offset/mod.rs","begin":[38,14],"end":[38,15]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"T"}},"0:2054":{"id":"0:2054","crate_id":0,"name":null,"span":{"filename":"src/format/strftime.rs","begin":[266,0],"end":[485,1]},"visibility":{"restricted":{"parent":"0:2022:5443","path":"::format::strftime"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["rposition","try_for_each","try_collect","map_while","intersperse_with","last","sum","cmp","eq","cloned","min_by","min","is_sorted","rev","fold","ge","collect_into","flat_map","scan","count","for_each","advance_by","chain","any","all","min_by_key","max","is_sorted_by","filter","unzip","take","reduce","partition","position","flatten","product","filter_map","nth","skip","max_by","size_hint","is_sorted_by_key","copied","collect","try_reduce","partition_in_place","lt","fuse","peekable","cycle","step_by","partial_cmp","max_by_key","__iterator_get_unchecked","cmp_by","find_map","is_partitioned","inspect","skip_while","zip","find","ne","partial_cmp_by","try_find","try_fold","by_ref","take_while","intersperse","next_chunk","enumerate","le","map","eq_by","gt"],"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8579:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2729:2518","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["0:2056:2809","0:2057:922"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3179-0:2463:2811":{"id":"b:2:3179-0:2463:2811","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3156:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3153:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2463:2811","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3182:3385"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3194-0:2729:2518":{"id":"b:2:3194-0:2729:2518","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3153:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3163:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2729:2518","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:3197:127","2:3198:1408"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"23:648:12597":{"id":"23:648:12597","crate_id":23,"name":"Euclid","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:649:2292","23:650:2293"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Div","id":"2:3333:12524","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Rem","id":"2:3339:12527","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:10552:13337":{"id":"2:10552:13337","crate_id":2,"name":"BuildHasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10553:146","2:10554:18178","2:10555:62703"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2470":{"id":"0:2470","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[58,9],"end":[58,13]},"visibility":{"restricted":{"parent":"0:1595:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3260:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2463:2811","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"23:633:12591":{"id":"23:633:12591","crate_id":23,"name":"CheckedNeg","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:634:66100"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2856-0:2463:2811":{"id":"b:2:2856-0:2463:2811","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2850:12559","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2463:2811","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2858:59480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:6084:65174":{"id":"5:6084:65174","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[stable(feature = \"str_box_extras\", since = \"1.20.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:5441","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8097:14283","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:5441","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8097:14283","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3416:12540":{"id":"2:3416:12540","crate_id":2,"name":"ShlAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3418:1227"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13410:18429":{"id":"2:13410:18429","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"encode_utf16\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncodeUtf16","id":"2:49693:12659","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2698:2517":{"id":"0:2698:2517","crate_id":0,"name":"Parsed","span":{"filename":"src/format/parsed.rs","begin":[27,0],"end":[111,1]},"visibility":"public","docs":"Parsed parts of date and time. There are two classes of methods:\n\n- `set_*` methods try to set given field(s) while checking for the consistency.\n  It may or may not check for the range constraint immediately (for efficiency reasons).\n\n- `to_*` methods try to make a concrete date and time value out of set fields.\n  It fully checks any remaining out-of-range conditions and inconsistent/impossible fields.","links":{},"attrs":["#[allow(missing_copy_implementations)]"],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":["0:2699:2166","0:2700:5725","0:2701:5727","0:2702:5731","0:2703:5736","0:2704:5738","0:2705:2144","0:2706:5653","0:2707:5654","0:2708:1916","0:2709:2032","0:2710:2183","0:2711:2177","0:2712:5749","0:2713:5751","0:2714:2227","0:2715:2229","0:2716:2233","0:2717:1931","0:2718:957"],"impls":[]}},"b:2:3194-0:2197:1896":{"id":"b:2:3194-0:2197:1896","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3153:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3163:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2197:1896","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["2:3197:127","2:3198:1408"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:10290:12711":{"id":"2:10290:12711","crate_id":2,"name":"UpperExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10291:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2739":{"id":"0:2739","crate_id":0,"name":null,"span":{"filename":"src/format/strftime.rs","begin":[201,16],"end":[201,21]},"visibility":{"restricted":{"parent":"0:2022:5443","path":"::format::strftime"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10269:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2729:2518","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["0:2741:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2577":{"id":"0:2577","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[165,16],"end":[165,25]},"visibility":{"restricted":{"parent":"0:1595:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2902:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2536:3587","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2536:3587","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2578:604","0:2579:907"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:8450:3345":{"id":"2:8450:3345","crate_id":2,"name":"ExactSizeIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8451:793","2:8452:5946"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8579:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:2856-0:1651:5501":{"id":"b:2:2856-0:1651:5501","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2850:12559","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:1651:5501","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2858:59480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3085:13895":{"id":"2:3085:13895","crate_id":2,"name":"FloatToInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"Int","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:3084:13421","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3183-0:2463:2811":{"id":"b:2:3183-0:2463:2811","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3156:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2463:2811","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3185:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2827:2085":{"id":"0:2827:2085","crate_id":0,"name":"March","span":{"filename":"src/lib.rs","begin":[972,4],"end":[972,13]},"visibility":"default","docs":"March","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:13382:64529":{"id":"2:13382:64529","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2520:5496":{"id":"0:2520:5496","crate_id":0,"name":"Timestamp","span":{"filename":"src/format/mod.rs","begin":[127,4],"end":[127,13]},"visibility":"default","docs":"The number of non-leap seconds since the midnight UTC on January 1, 1970 (FW=1, PW=∞).\nFor formatting, it assumes UTC upon the absence of time zone offset.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:13401:61171":{"id":"2:13401:61171","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"1:15916:6546"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3250:211-0:1651:5501":{"id":"a:2:3250:211-0:1651:5501","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3250:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:1651:5501","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2194:2249":{"id":"0:2194:2249","crate_id":0,"name":"num_seconds_from_midnight","span":{"filename":"src/lib.rs","begin":[1416,4],"end":[1418,5]},"visibility":"default","docs":"Returns the number of non-leap seconds past the last midnight.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2492:5472":{"id":"0:2492:5472","crate_id":0,"name":"IsoYearMod100","span":{"filename":"src/format/mod.rs","begin":[96,4],"end":[96,17]},"visibility":"default","docs":"Year in the ISO week date, modulo 100 (FW=PW=2). Cannot be negative.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:13496:2013":{"id":"2:13496:2013","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:12954:3373","`FromStr`":"2:12954:3373"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47564:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"kind":"resolved_path","inner":{"name":"FromStr","id":"2:12954:3373","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FromStr","id":"2:12954:3373","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:121":{"id":"0:121","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[502,51],"end":[502,59]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"offset::TimeZone","name":"TimeZone","id":"0:263:1898","glob":false}},"b:2:3983-0:2748:2808":{"id":"b:2:3983-0:2748:2808","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3981:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2748:2808","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}},"param_names":[]}},"items":["2:3985:1421"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2581":{"id":"0:2581","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[165,27],"end":[165,29]},"visibility":{"restricted":{"parent":"0:1595:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2907:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2536:3587","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2185:2222":{"id":"0:2185:2222","crate_id":0,"name":"hour","span":{"filename":"src/lib.rs","begin":[1365,4],"end":[1365,26]},"visibility":"default","docs":"Returns the hour number from 0 to 23.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:276:2649":{"id":"0:276:2649","crate_id":0,"name":"datetime_from_str","span":{"filename":"src/offset/mod.rs","begin":[416,4],"end":[420,5]},"visibility":"default","docs":"Parses a string with the specified format string and\nreturns a `DateTime` with the current offset.\nSee the [`format::strftime` module](../format/strftime/index.html)\non the supported escape sequences.\n\nIf the format does not include offsets, the current offset is assumed;\notherwise the input should have a matching UTC offset.\n\nSee also `DateTime::parse_from_str` which gives a local `DateTime`\nwith parsed `FixedOffset`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["fmt",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ParseResult","id":"0:1667:1888","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2443:1881","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3189-0:2820:1906":{"id":"b:2:3189-0:2820:1906","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3163:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3159:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:2820:1906","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3192:127","2:3193:1409"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2464:174":{"id":"0:2464:174","crate_id":0,"name":"None","span":{"filename":"src/format/mod.rs","begin":[61,4],"end":[61,8]},"visibility":"default","docs":"No padding.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2656:660":{"id":"0:2656:660","crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[262,31],"end":[262,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10229:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10218:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6106:59490":{"id":"5:6106:59490","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"1:15916:6546"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8359:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1222:1877":{"id":"0:1222:1877","crate_id":0,"name":"MAX_DATE","span":{"filename":"src/date.rs","begin":[55,0],"end":[55,76]},"visibility":"public","docs":"The maximum possible `Date`.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2412:1876","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:2253:1899","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"0:2152":{"id":"0:2152","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[828,0],"end":[832,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10269:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:2812:1993","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2153:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:6792:13464":{"id":"1:6792:13464","crate_id":1,"name":"ChildExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6793:59842","1:6794:60020"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10564:13421","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3194-0:2776:1908":{"id":"b:2:3194-0:2776:1908","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3153:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3163:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2776:1908","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3197:127","2:3198:1408"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2661:660":{"id":"0:2661:660","crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[320,9],"end":[320,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10229:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10218:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2559:5151":{"id":"0:2559:5151","crate_id":0,"name":"TimezoneOffsetColon","span":{"filename":"src/format/mod.rs","begin":[210,4],"end":[210,23]},"visibility":"default","docs":"Offset from the local time to UTC (`+09:00` or `-04:00` or `+00:00`).\n\nIn the parser, the colon can be omitted and/or surrounded with any amount of whitespace.\nThe offset is limited from `-24:00` to `+24:00`,\nwhich is the same as [`FixedOffset`](../offset/struct.FixedOffset.html)'s range.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"a:2:3291:12723-0:2463:2811":{"id":"a:2:3291:12723-0:2463:2811","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3291:12723","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2463:2811","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2590:408":{"id":"0:2590:408","crate_id":0,"name":"clone","span":{"filename":"src/format/mod.rs","begin":[237,16],"end":[237,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2585:5546","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2776:1908":{"id":"0:2776:1908","crate_id":0,"name":"Weekday","span":{"filename":"src/lib.rs","begin":[646,0],"end":[661,1]},"visibility":"public","docs":"The day of week.\n\nThe order of the days of week depends on the context.\n(This is why this type does *not* implement `PartialOrd` or `Ord` traits.)\nOne should prefer `*_from_monday` or `*_from_sunday` methods to get the correct result.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:2777:1948","0:2780:1950","0:2783:1952","0:2786:1954","0:2789:1956","0:2792:1958","0:2795:1960"],"impls":["0:2137","a:2:3291:12723-0:2776:1908","a:2:9237:12747-0:2776:1908","a:2:3262:220-0:2776:1908","a:2:3250:211-0:2776:1908","a:2:9236:12748-0:2776:1908","b:2:3179-0:2776:1908","b:2:2856-0:2776:1908","b:2:2853-0:2776:1908","b:2:3983-0:2776:1908","b:2:3183-0:2776:1908","b:2:3189-0:2776:1908","b:2:3194-0:2776:1908","b:5:6413-0:2776:1908","b:5:787-0:2776:1908","0:2077","0:2798","0:2799","0:2801","0:2802","0:2804","0:2805","0:2807","0:2809","0:2144","0:2146"]}},"b:2:2853-0:2536:3587":{"id":"b:2:2853-0:2536:3587","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2847:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2536:3587","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2855:2804"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13490:6176":{"id":"2:13490:6176","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:15910:6541","self::pattern":"2:13015:6159"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:12642","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2549:4003":{"id":"0:2549:4003","crate_id":0,"name":"Nanosecond","span":{"filename":"src/format/mod.rs","begin":[194,4],"end":[194,14]},"visibility":"default","docs":"An optional dot plus one or more digits for left-aligned nanoseconds.\nMay print nothing, 3, 6 or 9 digits according to the available accuracy.\nSee also [`Numeric::Nanosecond`](./enum.Numeric.html#variant.Nanosecond).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:23424:13942":{"id":"2:23424:13942","crate_id":2,"name":"SimdPartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23425:1263","2:23426:1262","2:23427:1260","2:23428:1259"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SimdPartialEq","id":"2:22836:14002","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"23:849:12612":{"id":"23:849:12612","crate_id":23,"name":"Pow","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:851:181","23:852:12564"],"generics":{"params":[{"name":"RHS","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13499:59492":{"id":"2:13499:59492","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2565:5543":{"id":"0:2565:5543","crate_id":0,"name":"TimezoneOffsetZ","span":{"filename":"src/format/mod.rs","begin":[223,4],"end":[223,19]},"visibility":"default","docs":"Same as [`TimezoneOffsetColonZ`](#variant.TimezoneOffsetColonZ) but prints no colon.\nParsing allows an optional colon.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2631:2810":{"id":"0:2631:2810","crate_id":0,"name":"Numeric","span":{"filename":"src/format/mod.rs","begin":[276,4],"end":[276,25]},"visibility":"default","docs":"Numeric item. Can be optionally padded to the maximal length (if any) when formatting;\nthe parser simply ignores any padded whitespace and zeroes.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2481:2810","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2463:2811","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]}},"a:2:3291:12723-0:2197:1896":{"id":"a:2:3291:12723-0:2197:1896","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3291:12723","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3291:12723","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2197:1896","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:203":{"id":"0:203","crate_id":0,"name":null,"span":{"filename":"src/div.rs","begin":[10,57],"end":[10,66]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"num_integer::mod_floor","name":"mod_floor","id":"22:131:2500","glob":false}},"0:2480:660":{"id":"0:2480:660","crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[58,37],"end":[58,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10229:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10218:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"23:515:3376":{"id":"23:515:3376","crate_id":23,"name":"Zero","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:516:3488","23:517:66475","23:518:14307"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Add","id":"2:3318:2703","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2443:1881":{"id":"0:2443:1881","crate_id":0,"name":"DateTime","span":{"filename":"src/datetime.rs","begin":[70,0],"end":[73,1]},"visibility":"public","docs":"ISO 8601 combined date and time with time zone.\n\nThere are some constructors implemented here (the `from_*` methods), but\nthe general-purpose constructors are all via the methods on the\n[`TimeZone`](./offset/trait.TimeZone.html) implementations.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TimeZone","id":"0:263:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"0:262:2562":{"id":"0:262:2562","crate_id":0,"name":"fix","span":{"filename":"src/offset/mod.rs","begin":[185,4],"end":[185,33]},"visibility":"default","docs":"Returns the fixed offset from UTC to the local time stored.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2231:1895","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:3179-0:2536:3587":{"id":"b:2:3179-0:2536:3587","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3156:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3153:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2536:3587","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3182:3385"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1736:671":{"id":"0:1736:671","crate_id":0,"name":"format","span":{"filename":"src/format/mod.rs","begin":[689,0],"end":[705,1]},"visibility":"public","docs":"Tries to format given arguments with given formatting items.\nInternally used by `DelayedFormat`.","links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["w",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10229:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}],["date",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2264:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}}],["time",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2395:1893","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}}],["off",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"tuple","inner":[{"kind":"resolved_path","inner":{"name":"String","id":"5:8359:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2231:1895","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]}}}}],"bindings":[]}},"param_names":[]}}],["items",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10218:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8579:157","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"B"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2847:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2617:2809","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:2741:660":{"id":"0:2741:660","crate_id":0,"name":"fmt","span":{"filename":"src/format/strftime.rs","begin":[201,16],"end":[201,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10229:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10218:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3361:12528":{"id":"2:3361:12528","crate_id":2,"name":"DivAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3363:559"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3183-0:2585:5546":{"id":"b:2:3183-0:2585:5546","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3156:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2585:5546","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3185:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2246:1894":{"id":"0:2246:1894","crate_id":0,"name":"Local","span":{"filename":"src/offset/local.rs","begin":[91,0],"end":[91,17]},"visibility":"public","docs":"The local timescale. This is implemented via the standard `time` crate.\n\nUsing the [`TimeZone`](./trait.TimeZone.html) methods\non the Local struct is the preferred way to construct `DateTime<Local>`\ninstances.\n\n# Example\n\n~~~~\nuse chrono::{Local, DateTime, TimeZone};\n\nlet dt: DateTime<Local> = Local::now();\nlet dt: DateTime<Local> = Local.timestamp(0, 0);\n~~~~","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"unit","generics":{"params":[],"where_predicates":[]},"fields_stripped":false,"fields":[],"impls":[]}},"b:5:787-0:2197:1896":{"id":"b:5:787-0:2197:1896","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2197:1896","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["5:789:12561","5:790:13067","5:791:13068"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2859:604":{"id":"0:2859:604","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[964,9],"end":[964,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Month","id":"0:2820:1906","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8425:120":{"id":"2:8425:120","crate_id":2,"name":"DoubleEndedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8426:13015","2:8427:13016","2:8428:13017","2:8429:13018","2:8433:13019","2:8436:13020"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8579:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"23:773:12602":{"id":"23:773:12602","crate_id":23,"name":"SaturatingAdd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:774:1220"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Add","id":"2:3318:2703","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2049:920":{"id":"0:2049:920","crate_id":0,"name":"new","span":{"filename":"src/format/strftime.rs","begin":[219,4],"end":[221,5]},"visibility":"public","docs":"Creates a new parsing iterator from the `strftime`-like format string.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["s",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2729:2518","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"23:998:12571":{"id":"23:998:12571","crate_id":23,"name":"NumAssignRef","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"NumAssign","id":"23:995:12570","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"NumAssignOps","id":"23:990:12569","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":false,"type":{"kind":"generic","inner":"Self"}}}}],"bindings":[]}},"param_names":[]}},"generic_params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"implementations":[]}},"0:2810:715":{"id":"0:2810:715","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[644,44],"end":[644,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"$crate::hash::Hasher","id":"2:10517:146","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4631:13166":{"id":"1:4631:13166","crate_id":1,"name":"Read","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4632:6914","1:4633:62360","1:4635:62361","1:4636:62362","1:4637:13167","1:4638:18039","1:4639:18038","1:4641:62363","1:4642:13043","1:4643:4139","1:4644:5152","1:4646:3580"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:6964:13417":{"id":"1:6964:13417","crate_id":1,"name":"AsFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6965:60320"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:5:787-0:2617:2809":{"id":"b:5:787-0:2617:2809","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2617:2809","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["5:789:12561","5:790:13067","5:791:13068"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2494:1906":{"id":"0:2494:1906","crate_id":0,"name":"Month","span":{"filename":"src/format/mod.rs","begin":[98,4],"end":[98,9]},"visibility":"default","docs":"Month (FW=PW=2).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"1:5724:13408":{"id":"1:5724:13408","crate_id":1,"name":"FileExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5725:59608","1:5726:59610","1:5727:59609","1:5728:59611"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3721:12550":{"id":"2:3721:12550","crate_id":2,"name":"Residual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3723:58796"],"generics":{"params":[{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2528":{"id":"0:2528","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[81,16],"end":[81,25]},"visibility":{"restricted":{"parent":"0:1595:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2902:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2481:2810","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2481:2810","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2529:604","0:2530:907"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:5:6413-0:2657:1887":{"id":"b:5:6413-0:2657:1887","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10276:119","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"ToString","id":"5:6411:223","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2657:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:6415:1390"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2541:5515":{"id":"0:2541:5515","crate_id":0,"name":"ShortWeekdayName","span":{"filename":"src/format/mod.rs","begin":[178,4],"end":[178,20]},"visibility":"default","docs":"Abbreviated day of the week names.\n\nPrints a three-letter-long name in the title case, reads the same name in any case.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:76":{"id":"0:76","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[491,19],"end":[491,27]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"datetime::DateTime","name":"DateTime","id":"0:2443:1881","glob":false}},"0:1656:604":{"id":"0:1656:604","crate_id":0,"name":"eq","span":{"filename":"src/format/mod.rs","begin":[148,4],"end":[150,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["_other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:1651:5501","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13390:61152":{"id":"2:13390:61152","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:15927:6555"},"attrs":["#[stable(feature = \"str_as_mut_ptr\", since = \"1.36.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3194-0:2820:1906":{"id":"b:2:3194-0:2820:1906","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3153:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3163:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:2820:1906","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3197:127","2:3198:1408"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2706:5653":{"id":"0:2706:5653","crate_id":0,"name":"week_from_sun","span":{"filename":"src/format/parsed.rs","begin":[67,4],"end":[67,34]},"visibility":"public","docs":"Week number, where the week 1 starts at the first Sunday of January\n(0--53, 1--53 or 1--52 depending on the year).","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u32"}}],"bindings":[]}},"param_names":[]}}},"23:964:12615":{"id":"23:964:12615","crate_id":23,"name":"Unsigned","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Num","id":"23:968:12509","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:1672:5607":{"id":"0:1672:5607","crate_id":0,"name":"description","span":{"filename":"src/format/mod.rs","begin":[375,4],"end":[377,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2699:2166":{"id":"0:2699:2166","crate_id":0,"name":"year","span":{"filename":"src/format/parsed.rs","begin":[32,4],"end":[32,25]},"visibility":"public","docs":"Year.\n\nThis can be negative unlike [`year_div_100`](#structfield.year_div_100)\nand [`year_mod_100`](#structfield.year_mod_100) fields.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i32"}}],"bindings":[]}},"param_names":[]}}},"0:105":{"id":"0:105","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[497,51],"end":[497,60]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"naive::NaiveTime","name":"NaiveTime","id":"0:2395:1893","glob":false}},"a:2:3262:220-0:2481:2810":{"id":"a:2:3262:220-0:2481:2810","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3262:220","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2481:2810","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2283:3215":{"id":"0:2283:3215","crate_id":0,"name":"NaiveDateDaysIterator","span":{"filename":"src/naive/date.rs","begin":[1562,0],"end":[1564,1]},"visibility":"public","docs":"Iterator over `NaiveDate` with a step size of one day.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"0:1653":{"id":"0:1653","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[141,0],"end":[145,1]},"visibility":{"restricted":{"parent":"0:1595:671","path":"::format"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:1651:5501","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1654:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2231:1895":{"id":"0:2231:1895","crate_id":0,"name":"FixedOffset","span":{"filename":"src/offset/fixed.rs","begin":[23,0],"end":[25,1]},"visibility":"public","docs":"The time zone with fixed offset, from UTC-23:59:59 to UTC+23:59:59.\n\nUsing the [`TimeZone`](./trait.TimeZone.html) methods\non a `FixedOffset` struct is the preferred way to construct\n`DateTime<FixedOffset>` instances. See the [`east`](#method.east) and\n[`west`](#method.west) methods for examples.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"0:2571:5500":{"id":"0:2571:5500","crate_id":0,"name":"Internal","span":{"filename":"src/format/mod.rs","begin":[233,4],"end":[233,27]},"visibility":"default","docs":"Internal uses only.\n\nThis item exists so that one can add additional internal-only formatting\nwithout breaking major compatibility (as enum variants cannot be selectively private).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2585:5546","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]}},"0:260:1475":{"id":"0:260:1475","crate_id":0,"name":"unwrap","span":{"filename":"src/offset/mod.rs","begin":[171,4],"end":[179,5]},"visibility":"public","docs":"Returns the single unique conversion result, or panics accordingly.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:161":{"id":"0:161","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[520,30],"end":[520,38]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"Timelike","name":"Timelike","id":"0:2184:1907","glob":false}},"0:2428:5028":{"id":"0:2428:5028","crate_id":0,"name":"AutoSi","span":{"filename":"src/datetime.rs","begin":[57,4],"end":[57,10]},"visibility":"default","docs":"Automatically select one of `Secs`, `Millis`, `Micros`, or `Nanos` to\ndisplay all available non-zero sub-second digits.  This corresponds to\n[Fixed::Nanosecond](format/enum.Fixed.html#variant.Nanosecond).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:3258:218":{"id":"2:3258:218","crate_id":2,"name":"StructuralPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2842:2095":{"id":"0:2842:2095","crate_id":0,"name":"August","span":{"filename":"src/lib.rs","begin":[982,4],"end":[982,14]},"visibility":"default","docs":"August","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2510:3999":{"id":"0:2510:3999","crate_id":0,"name":"Hour","span":{"filename":"src/format/mod.rs","begin":[114,4],"end":[114,8]},"visibility":"default","docs":"Hour number in the 24-hour clocks (FW=PW=2).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:175":{"id":"0:175","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[524,13],"end":[524,22]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"NaiveDate","name":"NaiveDate","id":"0:2264:1891","glob":false}},"0:200":{"id":"0:200","crate_id":0,"name":null,"span":{"filename":"src/div.rs","begin":[10,48],"end":[10,55]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"num_integer::div_rem","name":"div_rem","id":"22:127:2499","glob":false}},"0:2229:715":{"id":"0:2229:715","crate_id":0,"name":"hash","span":{"filename":"src/offset/mod.rs","begin":[29,44],"end":[29,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"$crate::hash::Hasher","id":"2:10517:146","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2472:408":{"id":"0:2472:408","crate_id":0,"name":"clone","span":{"filename":"src/format/mod.rs","begin":[58,15],"end":[58,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2463:2811","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1148":{"id":"0:1148","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[558,58],"end":[558,70]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::datetime::MIN_DATETIME","name":"MIN_DATETIME","id":"0:800:1884","glob":false}},"5:6083":{"id":"5:6083","crate_id":5,"name":null,"span":null,"visibility":{"restricted":{"parent":"5:5903:1333","path":"::str"}},"docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["5:6084:65174","5:6085:13078","5:6088:65175","5:6091:5628","5:6103:65176","5:6104:65177","5:6105:13196","5:6106:59490","5:6107:59491"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2192:2241":{"id":"0:2192:2241","crate_id":0,"name":"with_second","span":{"filename":"src/lib.rs","begin":[1405,4],"end":[1405,52]},"visibility":"default","docs":"Makes a new value with the second number changed.\n\nReturns `None` when the resulting value would be invalid.\nAs with the [`second`](#tymethod.second) method,\nthe input range is restricted to 0 through 59.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["sec",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:800:1884":{"id":"0:800:1884","crate_id":0,"name":"MIN_DATETIME","span":{"filename":"src/naive/datetime.rs","begin":[32,0],"end":[32,89]},"visibility":"public","docs":"The minimum possible `NaiveDateTime`.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2325:1892","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"b:2:3189-0:2812:1993":{"id":"b:2:3189-0:2812:1993","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3163:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3159:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:2812:1993","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3192:127","2:3193:1409"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2471":{"id":"0:2471","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[58,15],"end":[58,20]},"visibility":{"restricted":{"parent":"0:1595:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2463:2811","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2472:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2709:2032":{"id":"0:2709:2032","crate_id":0,"name":"weekday","span":{"filename":"src/format/parsed.rs","begin":[78,4],"end":[78,32]},"visibility":"public","docs":"Day of the week.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2776:1908","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}},"b:5:787-0:2871:2127":{"id":"b:5:787-0:2871:2127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseMonthError","id":"0:2871:2127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:789:12561","5:790:13067","5:791:13068"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3250:211-0:2871:2127":{"id":"a:2:3250:211-0:2871:2127","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3250:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseMonthError","id":"0:2871:2127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2412:1876":{"id":"0:2412:1876","crate_id":0,"name":"Date","span":{"filename":"src/date.rs","begin":[47,0],"end":[50,1]},"visibility":"public","docs":"ISO 8601 calendar date with time zone.\n\nThis type should be considered ambiguous at best,\ndue to the inherent lack of precision required for the time zone resolution.\nFor serialization and deserialization uses, it is best to use `NaiveDate` instead.\nThere are some guarantees on the usage of `Date<Tz>`:\n\n- If properly constructed via `TimeZone::ymd` and others without an error,\n  the corresponding local date should exist for at least a moment.\n  (It may still have a gap from the offset changes.)\n\n- The `TimeZone` is free to assign *any* `Offset` to the local date,\n  as long as that offset did occur in given day.\n  For example, if `2015-03-08T01:59-08:00` is followed by `2015-03-08T03:00-07:00`,\n  it may produce either `2015-03-08-08:00` or `2015-03-08-07:00`\n  but *not* `2015-03-08+00:00` and others.\n\n- Once constructed as a full `DateTime`,\n  `DateTime::date` and other associated methods should return those for the original `Date`.\n  For example, if `dt = tz.ymd(y,m,d).hms(h,n,s)` were valid, `dt.date() == tz.ymd(y,m,d)`.\n\n- The date is timezone-agnostic up to one day (i.e. practically always),\n  so the local date and UTC date should be equal for most cases\n  even though the raw calculation between `NaiveDate` and `Duration` may not.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"Tz","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TimeZone","id":"0:263:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"0:2514:4001":{"id":"0:2514:4001","crate_id":0,"name":"Minute","span":{"filename":"src/format/mod.rs","begin":[118,4],"end":[118,10]},"visibility":"default","docs":"The number of minutes since the last whole hour (FW=PW=2).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:112":{"id":"0:112","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[502,17],"end":[502,28]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"offset::FixedOffset","name":"FixedOffset","id":"0:2231:1895","glob":false}},"0:2839:2093":{"id":"0:2839:2093","crate_id":0,"name":"July","span":{"filename":"src/lib.rs","begin":[980,4],"end":[980,12]},"visibility":"default","docs":"July","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:264:1897":{"id":"0:264:1897","crate_id":0,"name":"Offset","span":{"filename":"src/offset/mod.rs","begin":[196,4],"end":[196,24]},"visibility":"default","docs":"An associated offset type.\nThis type is used to store the actual offset in date and time types.\nThe original `TimeZone` value can be recovered via `TimeZone::from_offset`.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Offset","id":"0:261:1897","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null}},"1:6562:13457":{"id":"1:6562:13457","crate_id":1,"name":"JoinHandleExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6563:60329","1:6564:60330"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3983-0:2481:2810":{"id":"b:2:3983-0:2481:2810","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3981:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2481:2810","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3985:1421"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3250:211-0:2617:2809":{"id":"a:2:3250:211-0:2617:2809","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3250:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2617:2809","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3194-0:2871:2127":{"id":"b:2:3194-0:2871:2127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3153:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3163:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseMonthError","id":"0:2871:2127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3197:127","2:3198:1408"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:5833:12657":{"id":"5:5833:12657","crate_id":5,"name":"Concat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5835:181","5:5836:432"],"generics":{"params":[{"name":"Item","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Item"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:2817":{"id":"0:2817","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[823,16],"end":[823,25]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2902:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:2812:1993","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:2812:1993","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2818:604","0:2819:907"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:801:1883":{"id":"0:801:1883","crate_id":0,"name":"MAX_DATETIME","span":{"filename":"src/naive/datetime.rs","begin":[34,0],"end":[34,89]},"visibility":"public","docs":"The maximum possible `NaiveDateTime`.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2325:1892","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"b:2:3179-0:2748:2808":{"id":"b:2:3179-0:2748:2808","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3156:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3153:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2748:2808","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}},"param_names":[]}},"items":["2:3182:3385"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3250:211-0:2812:1993":{"id":"a:2:3250:211-0:2812:1993","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3250:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:2812:1993","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2665":{"id":"0:2665","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[320,23],"end":[320,32]},"visibility":{"restricted":{"parent":"0:1595:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2902:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2657:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2657:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2666:604","0:2667:907"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2463:2811":{"id":"0:2463:2811","crate_id":0,"name":"Pad","span":{"filename":"src/format/mod.rs","begin":[59,0],"end":[66,1]},"visibility":"public","docs":"Padding characters for numeric items.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:2464:174","0:2466:3376","0:2468:3377"],"impls":["a:2:3291:12723-0:2463:2811","a:2:9237:12747-0:2463:2811","a:2:3262:220-0:2463:2811","a:2:3250:211-0:2463:2811","a:2:9236:12748-0:2463:2811","b:2:3179-0:2463:2811","b:2:2856-0:2463:2811","b:2:2853-0:2463:2811","b:2:3983-0:2463:2811","b:2:3183-0:2463:2811","b:2:3189-0:2463:2811","b:2:3194-0:2463:2811","b:5:787-0:2463:2811","0:2470","0:2471","0:2473","0:2474","0:2476","0:2477","0:2479"]}},"23:370:12584":{"id":"23:370:12584","crate_id":23,"name":"AsPrimitive","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:372:65746"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3260:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3260:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"23:628:12589":{"id":"23:628:12589","crate_id":23,"name":"CheckedDiv","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:629:65678"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Div","id":"2:3333:12524","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2539:5513":{"id":"0:2539:5513","crate_id":0,"name":"LongMonthName","span":{"filename":"src/format/mod.rs","begin":[174,4],"end":[174,17]},"visibility":"default","docs":"Full month names.\n\nPrints a full name in the title case, reads either a short or full name in any case.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:22899:13444":{"id":"2:22899:13444","crate_id":2,"name":"SupportedLaneCount","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:22889:13421","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3194-0:2617:2809":{"id":"b:2:3194-0:2617:2809","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3153:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3163:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2617:2809","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:3197:127","2:3198:1408"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2757:660":{"id":"0:2757:660","crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[718,9],"end":[718,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10229:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10218:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2215:604":{"id":"0:2215:604","crate_id":0,"name":"eq","span":{"filename":"src/offset/mod.rs","begin":[29,16],"end":[29,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2197:1896","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"23:753:58036":{"id":"23:753:58036","crate_id":23,"name":"OverflowingSub","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:754:65681"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sub","id":"2:3323:2704","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2860":{"id":"0:2860","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[964,20],"end":[964,22]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralEq","id":"2:3259:217","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:2820:1906","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2758:1902":{"id":"0:2758:1902","crate_id":0,"name":"RoundingError","span":{"filename":"src/round.rs","begin":[206,0],"end":[242,1]},"visibility":"public","docs":"An error from rounding by `Duration`\n\nSee: [`DurationRound`]","links":{"`DurationRound`":"0:2123:1901"},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:2759:6451","0:2761:6452","0:2763:6449"],"impls":[]}},"0:280:2584":{"id":"0:280:2584","crate_id":0,"name":"from_local_date","span":{"filename":"src/offset/mod.rs","begin":[432,4],"end":[437,5]},"visibility":"default","docs":"Converts the local `NaiveDate` to the timezone-aware `Date` if possible.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["local",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2264:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2197:1896","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2412:1876","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2477":{"id":"0:2477","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[58,33],"end":[58,35]},"visibility":{"restricted":{"parent":"0:1595:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2907:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2463:2811","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"23:803:12605":{"id":"23:803:12605","crate_id":23,"name":"WrappingAdd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:804:1518"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Add","id":"2:3318:2703","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:148":{"id":"0:148","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[518,13],"end":[518,21]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"DateTime","name":"DateTime","id":"0:2443:1881","glob":false}},"a:2:3262:220-0:1651:5501":{"id":"a:2:3262:220-0:1651:5501","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3262:220","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:1651:5501","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3497:12543":{"id":"2:3497:12543","crate_id":2,"name":"Drop","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3498:578"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5780:13411":{"id":"1:5780:13411","crate_id":1,"name":"FileTypeExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5781:60002","1:5782:60003","1:5783:60004","1:5784:60005"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2079:2037":{"id":"0:2079:2037","crate_id":0,"name":"from_str","span":{"filename":"src/format/mod.rs","begin":[843,4],"end":[849,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47564:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"2:12954:3373","args":null,"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13484:61187":{"id":"2:13484:61187","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"self::pattern":"2:13015:6159","prim@char":"1:15910:6541"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["suffix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:12642","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:12642","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13040:12654","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4713:13173":{"id":"1:4713:13173","crate_id":1,"name":"BufRead","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4714:59844","1:4715:59845","1:4716:59846","1:4718:13172","1:4719:59847","1:4721:59848","1:4722:14606"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Read","id":"1:4631:13166","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2592":{"id":"0:2592","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[237,23],"end":[237,32]},"visibility":{"restricted":{"parent":"0:1595:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2902:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2585:5546","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2585:5546","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2593:604","0:2594:907"],"negative":false,"synthetic":false,"blanket_impl":null}},"23:407:15126":{"id":"23:407:15126","crate_id":23,"name":"FloatCore","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:408:65750","23:409:65751","23:410:65752","23:411:65753","23:412:2696","23:413:65754","23:414:65755","23:415:2695","23:416:63841","23:417:63842","23:418:63843","23:419:63844","23:420:65757","23:421:62221","23:422:62220","23:423:1900","23:424:49011","23:425:62219","23:426:6448","23:427:12614","23:428:63839","23:429:63840","23:430:1933","23:431:1934","23:432:63836","23:433:65758","23:434:63837","23:435:63838","23:436:65756"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Num","id":"23:968:12509","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"NumCast","id":"23:362:12585","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Neg","id":"2:3345:12526","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"2:2948:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3260:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:2576:127":{"id":"1:2576:127","crate_id":1,"name":"Error","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2577:13383","1:2579:6528","1:2580:5607","1:2581:13384","1:2582:13385"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10269:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10276:119","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:72":{"id":"0:72","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[488,31],"end":[488,39]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"date::MIN_DATE","name":"MIN_DATE","id":"0:1221:1878","glob":false}},"1:4991:13426":{"id":"1:4991:13426","crate_id":1,"name":"ToSocketAddrs","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4992:13355","1:4993:62562"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2702:5731":{"id":"0:2702:5731","crate_id":0,"name":"isoyear","span":{"filename":"src/format/parsed.rs","begin":[48,4],"end":[48,28]},"visibility":"public","docs":"Year in the [ISO week date](../naive/struct.NaiveDate.html#week-date).\n\nThis can be negative unlike [`isoyear_div_100`](#structfield.isoyear_div_100) and\n[`isoyear_mod_100`](#structfield.isoyear_mod_100) fields.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i32"}}],"bindings":[]}},"param_names":[]}}},"0:1151":{"id":"0:1151","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[559,4],"end":[559,35]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::isoweek::IsoWeek","name":"IsoWeek","id":"0:2379:1890","glob":false}},"2:13502:64549":{"id":"2:13502:64549","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"1:15910:6541"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDebug","id":"2:49700:12670","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2637:1533":{"id":"0:2637:1533","crate_id":0,"name":"0","span":{"filename":"src/format/mod.rs","begin":[278,10],"end":[278,15]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2536:3587","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}},"2:13498:14262":{"id":"2:13498:14262","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3262:220-0:2812:1993":{"id":"a:2:3262:220-0:2812:1993","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3262:220","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:2812:1993","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2780:1950":{"id":"0:2780:1950","crate_id":0,"name":"Tue","span":{"filename":"src/lib.rs","begin":[650,4],"end":[650,11]},"visibility":"default","docs":"Tuesday.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:8377:136":{"id":"2:8377:136","crate_id":2,"name":"FromIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8379:684"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9236:12748-0:2463:2811":{"id":"a:2:9236:12748-0:2463:2811","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9236:12748","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2463:2811","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1740:2650":{"id":"0:1740:2650","crate_id":0,"name":"parsed","span":{"filename":"src/format/parsed.rs","begin":[4,0],"end":[1283,1]},"visibility":{"restricted":{"parent":"0:1595:671","path":"::format"}},"docs":"A collection of parsed date and time items.\nThey can be constructed incrementally while being checked for consistency.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:2698:2517"],"is_stripped":true}},"0:2482:3375":{"id":"0:2482:3375","crate_id":0,"name":"Year","span":{"filename":"src/format/mod.rs","begin":[85,4],"end":[85,8]},"visibility":"default","docs":"Full Gregorian year (FW=4, PW=∞).\nMay accept years before 1 BCE or after 9999 CE, given an initial sign.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"b:2:2853-0:2657:1887":{"id":"b:2:2853-0:2657:1887","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2847:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2657:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2855:2804"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2325:1892":{"id":"0:2325:1892","crate_id":0,"name":"NaiveDateTime","span":{"filename":"src/naive/datetime.rs","begin":[62,0],"end":[65,1]},"visibility":"public","docs":"ISO 8601 combined date and time without timezone.\n\n# Example\n\n`NaiveDateTime` is commonly created from [`NaiveDate`](./struct.NaiveDate.html).\n\n~~~~\nuse chrono::{NaiveDate, NaiveDateTime};\n\nlet dt: NaiveDateTime = NaiveDate::from_ymd(2016, 7, 8).and_hms(9, 10, 11);\n# let _ = dt;\n~~~~\n\nYou can use typical [date-like](../trait.Datelike.html) and\n[time-like](../trait.Timelike.html) methods,\nprovided that relevant traits are in the scope.\n\n~~~~\n# use chrono::{NaiveDate, NaiveDateTime};\n# let dt: NaiveDateTime = NaiveDate::from_ymd(2016, 7, 8).and_hms(9, 10, 11);\nuse chrono::{Datelike, Timelike, Weekday};\n\nassert_eq!(dt.weekday(), Weekday::Fri);\nassert_eq!(dt.num_seconds_from_midnight(), 33011);\n~~~~","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"2:3182:3385":{"id":"2:3182:3385","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:3156:135"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:277:2653":{"id":"0:277:2653","crate_id":0,"name":"from_offset","span":{"filename":"src/offset/mod.rs","begin":[423,4],"end":[423,50]},"visibility":"default","docs":"Reconstructs the time zone from the offset.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["offset",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:263:1898","args":null,"param_names":[]}}}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2624:1533":{"id":"0:2624:1533","crate_id":0,"name":"0","span":{"filename":"src/format/mod.rs","begin":[268,17],"end":[268,25]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:5441","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}},"0:1132":{"id":"0:1132","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[554,25],"end":[554,34]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::date::NaiveDate","name":"NaiveDate","id":"0:2264:1891","glob":false}},"0:2474":{"id":"0:2474","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[58,22],"end":[58,31]},"visibility":{"restricted":{"parent":"0:1595:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2902:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2463:2811","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2463:2811","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2475:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13449:64536":{"id":"2:13449:64536","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:12642","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1669":{"id":"0:1669","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[358,0],"end":[370,1]},"visibility":{"restricted":{"parent":"0:1595:671","path":"::format"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10276:119","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2657:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1670:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3291:12723-0:2820:1906":{"id":"a:2:3291:12723-0:2820:1906","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3291:12723","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:2820:1906","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:5:787-0:2657:1887":{"id":"b:5:787-0:2657:1887","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2657:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:789:12561","5:790:13067","5:791:13068"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3150:74":{"id":"2:3150:74","crate_id":2,"name":"AsMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3152:13014"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:10286:189":{"id":"2:10286:189","crate_id":2,"name":"Pointer","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10287:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3262:220":{"id":"2:3262:220","crate_id":2,"name":"Sync","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3291:12723-0:2657:1887":{"id":"a:2:3291:12723-0:2657:1887","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3291:12723","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2657:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3179-0:2871:2127":{"id":"b:2:3179-0:2871:2127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3156:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3153:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseMonthError","id":"0:2871:2127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3182:3385"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1680:5617":{"id":"0:1680:5617","crate_id":0,"name":"format_item","span":{"filename":"src/format/mod.rs","begin":[391,0],"end":[401,1]},"visibility":"public","docs":"Formats single formatting item","links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["w",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10229:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}],["date",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2264:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}}],["time",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2395:1893","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}}],["off",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"tuple","inner":[{"kind":"resolved_path","inner":{"name":"String","id":"5:8359:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},{"kind":"resolved_path","inner":{"name":"FixedOffset","id":"0:2231:1895","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]}}}}],"bindings":[]}},"param_names":[]}}],["item",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2617:2809","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10218:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"1:9342:13441":{"id":"1:9342:13441","crate_id":1,"name":"StdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9343:12620","1:9344:12514","1:9345:62220","1:9346:62221","1:9347:1900","1:9348:49011","1:9349:62219"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10564:13421","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2700:5725":{"id":"0:2700:5725","crate_id":0,"name":"year_div_100","span":{"filename":"src/format/parsed.rs","begin":[39,4],"end":[39,33]},"visibility":"public","docs":"Year divided by 100. Implies that the year is >= 1 BCE when set.\n\nDue to the common usage, if this field is missing but\n[`year_mod_100`](#structfield.year_mod_100) is present,\nit is inferred to 19 when `year_mod_100 >= 70` and 20 otherwise.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i32"}}],"bindings":[]}},"param_names":[]}}},"2:3323:2704":{"id":"2:3323:2704","crate_id":2,"name":"Sub","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3325:181","2:3326:1348"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3404:12537":{"id":"2:3404:12537","crate_id":2,"name":"BitAndAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3406:352"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10282:12712":{"id":"2:10282:12712","crate_id":2,"name":"LowerHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10283:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:22710:14001":{"id":"2:22710:14001","crate_id":2,"name":"SimdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:22711:13941","2:22712:63420","2:22713:63833","2:22714:63834","2:22715:63835","2:22716:6448","2:22717:63836","2:22718:63837","2:22719:63838","2:22720:63839","2:22721:63840","2:22722:63841","2:22723:63842","2:22724:63843","2:22725:18480","2:22726:63844","2:22727:12614","2:22728:17814","2:22729:63196","2:22730:63195","2:22731:63197","2:22732:63421","2:22733:63422","2:22734:63423","2:22735:63424"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3260:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:22812:13421","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3185:681":{"id":"2:3185:681","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:14201:13484":{"id":"2:14201:13484","crate_id":2,"name":"Allocator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:14202:60403","2:14203:60404","2:14204:60405","2:14205:60406","2:14206:60407","2:14207:60408","2:14208:13043"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3756:12555":{"id":"2:3756:12555","crate_id":2,"name":"CoerceUnsized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"23:245:57928":{"id":"23:245:57928","crate_id":23,"name":"UpperBounded","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:246:2695"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2123:1901":{"id":"0:2123:1901","crate_id":0,"name":"DurationRound","span":{"filename":"src/round.rs","begin":[102,0],"end":[144,1]},"visibility":"public","docs":"Extension trait for rounding or truncating a DateTime by a Duration.\n\n# Limitations\nBoth rounding and truncating are done via [`Duration::num_nanoseconds`] and\n[`DateTime::timestamp_nanos`]. This means that they will fail if either the\n`Duration` or the `DateTime` are too big to represented as nanoseconds. They\nwill also fail if the `Duration` is bigger than the timestamp.","links":{"`DateTime::timestamp_nanos`":"0:2443:1881","`Duration::num_nanoseconds`":"20:405:121"},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:2124:126","0:2125:6439","0:2126:6444"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3558:12544":{"id":"2:3558:12544","crate_id":2,"name":"Index","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3560:181","2:3561:753"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"b:2:3983-0:2657:1887":{"id":"b:2:3983-0:2657:1887","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3981:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2657:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3985:1421"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2553:5147":{"id":"0:2553:5147","crate_id":0,"name":"Nanosecond6","span":{"filename":"src/format/mod.rs","begin":[198,4],"end":[198,15]},"visibility":"default","docs":"Same as [`Nanosecond`](#variant.Nanosecond) but the accuracy is fixed to 6.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"b:2:2856-0:2871:2127":{"id":"b:2:2856-0:2871:2127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2850:12559","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseMonthError","id":"0:2871:2127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2858:59480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:171":{"id":"0:171","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[522,26],"end":[522,29]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"Utc","name":"Utc","id":"0:2253:1899","glob":false}},"0:2208":{"id":"0:2208","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[29,9],"end":[29,14]},"visibility":{"restricted":{"parent":"0:206:957","path":"::offset"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"$crate::clone::Clone","id":"2:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2197:1896","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["0:2210:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2815:408":{"id":"0:2815:408","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[823,9],"end":[823,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:2812:1993","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13743:150":{"id":"2:13743:150","crate_id":2,"name":"IntoFuture","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13744:181","2:13745:150","2:13746:767"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"23:237:12581":{"id":"23:237:12581","crate_id":23,"name":"Bounded","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:238:2696","23:239:2695"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"23:624:12595":{"id":"23:624:12595","crate_id":23,"name":"CheckedSub","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:625:3150"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sub","id":"2:3323:2704","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:66":{"id":"0:66","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[488,15],"end":[488,19]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"date::Date","name":"Date","id":"0:2412:1876","glob":false}},"0:2502:1890":{"id":"0:2502:1890","crate_id":0,"name":"IsoWeek","span":{"filename":"src/format/mod.rs","begin":[106,4],"end":[106,11]},"visibility":"default","docs":"Week number in the ISO week date (FW=PW=2).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"a:2:9237:12747-0:2812:1993":{"id":"a:2:9237:12747-0:2812:1993","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9237:12747","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:2812:1993","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2591":{"id":"0:2591","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[237,23],"end":[237,32]},"visibility":{"restricted":{"parent":"0:1595:671","path":"::format"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralPartialEq","id":"2:3258:218","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2585:5546","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3198:1408":{"id":"2:3198:1408","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47564:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3163:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:787-0:2481:2810":{"id":"b:5:787-0:2481:2810","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2481:2810","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:789:12561","5:790:13067","5:791:13068"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3179-0:2657:1887":{"id":"b:2:3179-0:2657:1887","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3156:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3153:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2657:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3182:3385"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"22:86:12515":{"id":"22:86:12515","crate_id":22,"name":"Average","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["22:87:12516","22:88:12517"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Integer","id":"22:109:12496","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2065":{"id":"0:2065","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[733,0],"end":[791,1]},"visibility":{"restricted":{"parent":"0:1595:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8579:157","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"B"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2847:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2617:2809","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2748:2808","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}},"param_names":[]}},"items":["0:2069:920","0:2070:4997"],"negative":false,"synthetic":false,"blanket_impl":null}},"23:240:57927":{"id":"23:240:57927","crate_id":23,"name":"LowerBounded","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:241:2696"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2715:2229":{"id":"0:2715:2229","crate_id":0,"name":"second","span":{"filename":"src/format/parsed.rs","begin":[96,4],"end":[96,27]},"visibility":"public","docs":"Second number (0--60, accounting for leap seconds).","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u32"}}],"bindings":[]}},"param_names":[]}}},"1:5802:13414":{"id":"1:5802:13414","crate_id":1,"name":"DirBuilderExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5803:12440"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3262:220-0:2748:2808":{"id":"a:2:3262:220-0:2748:2808","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3262:220","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3262:220","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2748:2808","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2525":{"id":"0:2525","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[81,9],"end":[81,14]},"visibility":{"restricted":{"parent":"0:1595:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2481:2810","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2526:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2057:922":{"id":"0:2057:922","crate_id":0,"name":"next","span":{"filename":"src/format/strftime.rs","begin":[269,4],"end":[484,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2617:2809","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:7905:13947":{"id":"2:7905:13947","crate_id":2,"name":"Step","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:7906:63936","2:7907:63937","2:7908:63934","2:7909:63932","2:7910:63938","2:7911:63935","2:7912:63933"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"2:2948:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2807":{"id":"0:2807","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[644,37],"end":[644,42]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10269:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2776:1908","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2808:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9236:12748-0:2657:1887":{"id":"a:2:9236:12748-0:2657:1887","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9236:12748","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2657:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2143:1984":{"id":"0:2143:1984","crate_id":0,"name":"num_days_from_sunday","span":{"filename":"src/lib.rs","begin":[760,4],"end":[770,5]},"visibility":"public","docs":"Returns a day-of-week number starting from Sunday = 0.\n\n`w`:                        | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun`\n--------------------------- | ----- | ----- | ----- | ----- | ----- | ----- | -----\n`w.num_days_from_sunday()`: | 1     | 2     | 3     | 4     | 5     | 6     | 0","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2070:4997":{"id":"0:2070:4997","crate_id":0,"name":"new_with_offset","span":{"filename":"src/format/mod.rs","begin":[740,4],"end":[757,5]},"visibility":"public","docs":"Makes a new `DelayedFormat` value out of local date and time and UTC offset.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["date",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2264:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}],["time",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2395:1893","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}],["offset",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Off"}}}],["items",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2748:2808","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"Off","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Off"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Offset","id":"0:261:1897","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"fmt::Display","id":"2:10276:119","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6868:13453":{"id":"1:6868:13453","crate_id":1,"name":"IntoRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6869:62340"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2535:660":{"id":"0:2535:660","crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[81,31],"end":[81,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10229:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10218:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2166:2166":{"id":"0:2166:2166","crate_id":0,"name":"year","span":{"filename":"src/lib.rs","begin":[1247,4],"end":[1247,26]},"visibility":"default","docs":"Returns the year number in the [calendar date](./naive/struct.NaiveDate.html#calendar-date).","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2668":{"id":"0:2668","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[320,34],"end":[320,36]},"visibility":{"restricted":{"parent":"0:1595:671","path":"::format"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralEq","id":"2:3259:217","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2657:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2579:907":{"id":"0:2579:907","crate_id":0,"name":"ne","span":{"filename":"src/format/mod.rs","begin":[165,16],"end":[165,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2536:3587","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1435:1884":{"id":"0:1435:1884","crate_id":0,"name":"MIN_DATETIME","span":{"filename":"src/datetime.rs","begin":[76,0],"end":[76,96]},"visibility":"public","docs":"The minimum possible `DateTime<Utc>`.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2443:1881","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Utc","id":"0:2253:1899","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"2:8381:151":{"id":"2:8381:151","crate_id":2,"name":"IntoIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8382:2809","2:8383:13024","2:8384:768"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"23:971:12566":{"id":"23:971:12566","crate_id":23,"name":"NumOps","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}},{"name":"Output","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Add","id":"2:3318:2703","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Output"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sub","id":"2:3323:2704","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Output"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Mul","id":"2:3328:12525","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Output"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Div","id":"2:3333:12524","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Output"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Rem","id":"2:3339:12527","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Output"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3183-0:2481:2810":{"id":"b:2:3183-0:2481:2810","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3156:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2481:2810","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3185:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:499:1875":{"id":"0:499:1875","crate_id":0,"name":"date","span":{"filename":"src/naive/date.rs","begin":[4,0],"end":[2392,1]},"visibility":{"restricted":{"parent":"0:498:1889","path":"::naive"}},"docs":"ISO 8601 calendar date without timezone.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:2264:1891","0:599:1878","0:600:1877","0:2283:3215","0:2304:3222"],"is_stripped":true}},"0:2217":{"id":"0:2217","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[29,27],"end":[29,32]},"visibility":{"restricted":{"parent":"0:206:957","path":"::offset"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Debug","id":"2:10269:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10269:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2197:1896","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["0:2219:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:23733:13779":{"id":"2:23733:13779","crate_id":2,"name":"SimdElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:23734:13941"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:23729:13421","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3260:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:286:2669":{"id":"0:286:2669","crate_id":0,"name":"from_utc_date","span":{"filename":"src/offset/mod.rs","begin":[453,4],"end":[455,5]},"visibility":"default","docs":"Converts the UTC `NaiveDate` to the local time.\nThe UTC is continuous and thus this cannot fail (but can give the duplicate local time).","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["utc",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2264:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2412:1876","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1657":{"id":"0:1657","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[153,0],"end":[153,30]},"visibility":{"restricted":{"parent":"0:1595:671","path":"::format"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2907:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:1651:5501","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2169:2174":{"id":"0:2169:2174","crate_id":0,"name":"month0","span":{"filename":"src/lib.rs","begin":[1269,4],"end":[1269,28]},"visibility":"default","docs":"Returns the month number starting from 0.\n\nThe return value ranges from 0 to 11.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2126:6444":{"id":"0:2126:6444","crate_id":0,"name":"duration_trunc","span":{"filename":"src/round.rs","begin":[143,4],"end":[143,75]},"visibility":"default","docs":"Return a copy truncated by Duration.\n\n# Example\n``` rust\n# use chrono::{DateTime, DurationRound, Duration, TimeZone, Utc};\nlet dt = Utc.ymd(2018, 1, 11).and_hms_milli(12, 0, 0, 154);\nassert_eq!(\n    dt.duration_trunc(Duration::milliseconds(10)).unwrap().to_string(),\n    \"2018-01-11 12:00:00.150 UTC\"\n);\nassert_eq!(\n    dt.duration_trunc(Duration::days(1)).unwrap().to_string(),\n    \"2018-01-11 00:00:00 UTC\"\n);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["duration",{"kind":"resolved_path","inner":{"name":"Duration","id":"20:405:121","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47564:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:2123:1901","args":null,"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:194":{"id":"0:194","crate_id":0,"name":null,"span":{"filename":"src/div.rs","begin":[10,22],"end":[10,31]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"num_integer::div_floor","name":"div_floor","id":"22:129:2497","glob":false}},"b:2:8385-0:2729:2518":{"id":"b:2:8385-0:2729:2518","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8579:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"2:8381:151","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2729:2518","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:8387:2809","2:8388:13024","2:8389:768"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"2:10280:12705":{"id":"2:10280:12705","crate_id":2,"name":"Binary","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10281:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2171:2180":{"id":"0:2171:2180","crate_id":0,"name":"day0","span":{"filename":"src/lib.rs","begin":[1279,4],"end":[1279,26]},"visibility":"default","docs":"Returns the day of month starting from 0.\n\nThe return value ranges from 0 to 30. (The last day of month differs by months.)","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"1:4706:13170":{"id":"1:4706:13170","crate_id":1,"name":"Seek","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4707:59523","1:4708:6784","1:4709:59524","1:4710:59525"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3262:220-0:2463:2811":{"id":"a:2:3262:220-0:2463:2811","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3262:220","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2463:2811","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3262:220-0:2197:1896":{"id":"a:2:3262:220-0:2197:1896","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3262:220","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3262:220","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2197:1896","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:282:2661":{"id":"0:282:2661","crate_id":0,"name":"from_local_datetime","span":{"filename":"src/offset/mod.rs","begin":[440,4],"end":[443,5]},"visibility":"default","docs":"Converts the local `NaiveDateTime` to the timezone-aware `DateTime` if possible.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["local",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2325:1892","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2197:1896","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2443:1881","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:14127:141":{"id":"2:14127:141","crate_id":2,"name":"GlobalAlloc","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:14128:277","2:14129:518","2:14130:280","2:14131:1079"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9236:12748-0:2748:2808":{"id":"a:2:9236:12748-0:2748:2808","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9236:12748","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9236:12748","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2748:2808","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:168":{"id":"0:168","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[522,13],"end":[522,24]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"FixedOffset","name":"FixedOffset","id":"0:2231:1895","glob":false}},"0:2191:2237":{"id":"0:2191:2237","crate_id":0,"name":"with_minute","span":{"filename":"src/lib.rs","begin":[1398,4],"end":[1398,52]},"visibility":"default","docs":"Makes a new value with the minute number changed.\n\nReturns `None` when the resulting value would be invalid.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["min",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2527":{"id":"0:2527","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[81,16],"end":[81,25]},"visibility":{"restricted":{"parent":"0:1595:671","path":"::format"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralPartialEq","id":"2:3258:218","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2481:2810","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3983-0:2585:5546":{"id":"b:2:3983-0:2585:5546","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3981:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2585:5546","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3985:1421"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2426:5024":{"id":"0:2426:5024","crate_id":0,"name":"Nanos","span":{"filename":"src/datetime.rs","begin":[52,4],"end":[52,9]},"visibility":"default","docs":"Use fixed 9 subsecond digits. This corresponds to\n[Fixed::Nanosecond9](format/enum.Fixed.html#variant.Nanosecond9).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2649":{"id":"0:2649","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[262,27],"end":[262,29]},"visibility":{"restricted":{"parent":"0:1595:671","path":"::format"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralEq","id":"2:3259:217","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2617:2809","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"1:6866:13452":{"id":"1:6866:13452","crate_id":1,"name":"FromRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6867:60200"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3698:12548":{"id":"2:3698:12548","crate_id":2,"name":"OneSidedRange","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RangeBounds","id":"2:3629:12547","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13478:64546":{"id":"2:13478:64546","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"self::pattern":"2:13015:6159","prim@char":"1:15910:6541"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:12642","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3179-0:2776:1908":{"id":"b:2:3179-0:2776:1908","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3156:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3153:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2776:1908","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3182:3385"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3194-0:2812:1993":{"id":"b:2:3194-0:2812:1993","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3153:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3163:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:2812:1993","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3197:127","2:3198:1408"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"23:751:58035":{"id":"23:751:58035","crate_id":23,"name":"OverflowingAdd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:752:65729"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Add","id":"2:3318:2703","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13474:64544":{"id":"2:13474:64544","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3189-0:2657:1887":{"id":"b:2:3189-0:2657:1887","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3163:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3159:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2657:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3192:127","2:3193:1409"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13040:12654":{"id":"2:13040:12654","crate_id":2,"name":"ReverseSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:13042:13015","2:13043:63407","2:13044:63408"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Searcher","id":"2:13034:12655","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3183-0:2776:1908":{"id":"b:2:3183-0:2776:1908","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3156:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2776:1908","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3185:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3377:12531":{"id":"2:3377:12531","crate_id":2,"name":"BitAnd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3379:181","2:3380:351"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13501:59494":{"id":"2:13501:59494","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13420:6283":{"id":"2:13420:6283","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"self::pattern":"2:13015:6159","prim@char":"1:15910:6541","`None`":"2:47437:176"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:12642","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3473:116":{"id":"2:3473:116","crate_id":2,"name":"Deref","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3474:221","2:3475:543"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13045:12653":{"id":"2:13045:12653","crate_id":2,"name":"DoubleEndedSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13040:12654","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:2847:97":{"id":"2:2847:97","crate_id":2,"name":"Borrow","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2849:2804"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"23:815:12609":{"id":"23:815:12609","crate_id":23,"name":"WrappingShr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:816:65720"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Shr","id":"2:3398:12536","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:258":{"id":"0:258","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[169,0],"end":[180,1]},"visibility":{"restricted":{"parent":"0:206:957","path":"::offset"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"fmt::Debug","id":"2:10269:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2197:1896","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["0:260:1475"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3983-0:2729:2518":{"id":"b:2:3983-0:2729:2518","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3981:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2729:2518","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:3985:1421"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:6104:65177":{"id":"5:6104:65177","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`String`":"5:8359:216","`Box<str>`":"5:432:5441"},"attrs":["#[stable(feature = \"box_str\", since = \"1.4.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:5441","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8097:14283","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8359:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:85":{"id":"0:85","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[491,58],"end":[491,70]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"datetime::MIN_DATETIME","name":"MIN_DATETIME","id":"0:1435:1884","glob":false}},"0:2596":{"id":"0:2596","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[237,34],"end":[237,36]},"visibility":{"restricted":{"parent":"0:1595:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2907:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2585:5546","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2082:2037":{"id":"0:2082:2037","crate_id":0,"name":"from_str","span":{"filename":"src/format/mod.rs","begin":[917,4],"end":[937,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47564:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"2:12954:3373","args":null,"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2866":{"id":"0:2866","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[964,37],"end":[964,42]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10269:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:2820:1906","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2867:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:8344:13874":{"id":"2:8344:13874","crate_id":2,"name":"Product","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8346:11955"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:141":{"id":"0:141","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[511,4],"end":[511,18]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"clock\")]","#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"Local","name":"Local","id":"0:2246:1894","glob":false}},"0:2763:6449":{"id":"0:2763:6449","crate_id":0,"name":"TimestampExceedsLimit","span":{"filename":"src/round.rs","begin":[241,4],"end":[241,25]},"visibility":"default","docs":"Error when `DateTime.timestamp_nanos` exceeds the limit.\n\n``` rust\n# use chrono::{DateTime, DurationRound, Duration, RoundingError, TimeZone, Utc};\nlet dt = Utc.ymd(2300, 12, 12).and_hms(0, 0, 0);\n\nassert_eq!(dt.duration_round(Duration::days(1)), Err(RoundingError::TimestampExceedsLimit),);\n```","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"5:6415:1390":{"id":"5:6415:1390","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8359:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10507:142":{"id":"2:10507:142","crate_id":2,"name":"Hash","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10508:715","2:10510:13342"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2712:5749":{"id":"0:2712:5749","crate_id":0,"name":"hour_div_12","span":{"filename":"src/format/parsed.rs","begin":[87,4],"end":[87,32]},"visibility":"public","docs":"Hour number divided by 12 (0--1). 0 indicates AM and 1 indicates PM.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u32"}}],"bindings":[]}},"param_names":[]}}},"0:1654:408":{"id":"0:1654:408","crate_id":0,"name":"clone","span":{"filename":"src/format/mod.rs","begin":[142,4],"end":[144,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:253:2540":{"id":"0:253:2540","crate_id":0,"name":"and_time","span":{"filename":"src/offset/mod.rs","begin":[82,4],"end":[89,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date and given `NaiveTime`.\nThe offset in the current date is preserved.\n\nPropagates any error. Ambiguous result would be discarded.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["time",{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2395:1893","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2197:1896","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2443:1881","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2856-0:2776:1908":{"id":"b:2:2856-0:2776:1908","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2850:12559","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2776:1908","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2858:59480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3262:220-0:2536:3587":{"id":"a:2:3262:220-0:2536:3587","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3262:220","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2536:3587","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2419:1882":{"id":"0:2419:1882","crate_id":0,"name":"SecondsFormat","span":{"filename":"src/datetime.rs","begin":[38,0],"end":[62,1]},"visibility":"public","docs":"Specific formatting options for seconds. This may be extended in the\nfuture, so exhaustive matching in external code is not recommended.\n\nSee the `TimeZone::to_rfc3339_opts` function for usage.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":true,"variants":["0:2420:5015","0:2422:5018","0:2424:5021","0:2426:5024","0:2428:5028"],"impls":[]}},"0:1851:2013":{"id":"0:1851:2013","crate_id":0,"name":"parse","span":{"filename":"src/format/parse.rs","begin":[5,0],"end":[934,1]},"visibility":{"restricted":{"parent":"0:1595:671","path":"::format"}},"docs":"Date and time parsing routines.","links":{},"attrs":["#![allow(deprecated)]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:1933:2013"],"is_stripped":true}},"2:12954:3373":{"id":"2:12954:3373","crate_id":2,"name":"FromStr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:12955:126","2:12956:2037"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2666:604":{"id":"0:2666:604","crate_id":0,"name":"eq","span":{"filename":"src/format/mod.rs","begin":[320,23],"end":[320,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2657:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2529:604":{"id":"0:2529:604","crate_id":0,"name":"eq","span":{"filename":"src/format/mod.rs","begin":[81,16],"end":[81,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2481:2810","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3179-0:2729:2518":{"id":"b:2:3179-0:2729:2518","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3156:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3153:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2729:2518","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:3182:3385"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9237:12747-0:2820:1906":{"id":"a:2:9237:12747-0:2820:1906","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9237:12747","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:2820:1906","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:8857:12636":{"id":"2:8857:12636","crate_id":2,"name":"FusedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8579:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2187:2227":{"id":"0:2187:2227","crate_id":0,"name":"minute","span":{"filename":"src/lib.rs","begin":[1380,4],"end":[1380,28]},"visibility":"default","docs":"Returns the minute number from 0 to 59.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2531":{"id":"0:2531","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[81,27],"end":[81,29]},"visibility":{"restricted":{"parent":"0:1595:671","path":"::format"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralEq","id":"2:3259:217","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2481:2810","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2857":{"id":"0:2857","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[964,9],"end":[964,18]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralPartialEq","id":"2:3258:218","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:2820:1906","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"1:5746:13407":{"id":"1:5746:13407","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5747:12069","1:5748:62236","1:5749:12440","1:5750:62237","1:5751:12045","1:5752:12046","1:5753:62238","1:5754:1297","1:5755:62239","1:5756:62240","1:5757:62241","1:5758:62242","1:5759:62243","1:5760:62244","1:5761:62245","1:5762:62246"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2154":{"id":"0:2154","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[993,0],"end":[1086,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:2820:1906","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2155:1965","0:2156:1968","0:2157:2116","0:2158:899"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2193:2246":{"id":"0:2193:2246","crate_id":0,"name":"with_nanosecond","span":{"filename":"src/lib.rs","begin":[1412,4],"end":[1412,57]},"visibility":"default","docs":"Makes a new value with nanoseconds since the whole non-leap second changed.\n\nReturns `None` when the resulting value would be invalid.\nAs with the [`nanosecond`](#tymethod.nanosecond) method,\nthe input range can exceed 1,000,000,000 for leap seconds.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["nano",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:9236:12748":{"id":"2:9236:12748","crate_id":2,"name":"UnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6411:223":{"id":"5:6411:223","crate_id":5,"name":"ToString","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:6412:1390"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3194-0:2585:5546":{"id":"b:2:3194-0:2585:5546","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3153:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3163:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2585:5546","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3197:127","2:3198:1408"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"23:777:12603":{"id":"23:777:12603","crate_id":23,"name":"SaturatingMul","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:778:66468"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Mul","id":"2:3328:12525","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2660":{"id":"0:2660","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[320,9],"end":[320,14]},"visibility":{"restricted":{"parent":"0:1595:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10269:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2657:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2661:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2856-0:2617:2809":{"id":"b:2:2856-0:2617:2809","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2850:12559","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2617:2809","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:2858:59480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3291:12723-0:2585:5546":{"id":"a:2:3291:12723-0:2585:5546","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3291:12723","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2585:5546","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:5658:13460":{"id":"1:5658:13460","crate_id":1,"name":"OsStrExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5659:14976","1:5660:5917"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10564:13421","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2848:2099":{"id":"0:2848:2099","crate_id":0,"name":"October","span":{"filename":"src/lib.rs","begin":[986,4],"end":[986,15]},"visibility":"default","docs":"October","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:8860:13357":{"id":"2:8860:13357","crate_id":2,"name":"TrustedLen","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8579:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:5:787-0:2820:1906":{"id":"b:5:787-0:2820:1906","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:2820:1906","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:789:12561","5:790:13067","5:791:13068"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1659:660":{"id":"0:1659:660","crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[156,4],"end":[158,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10229:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10218:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3291:12723-0:2729:2518":{"id":"a:2:3291:12723-0:2729:2518","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3291:12723","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2729:2518","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3189-0:2197:1896":{"id":"b:2:3189-0:2197:1896","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3163:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3159:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2197:1896","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["2:3192:127","2:3193:1409"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3500:130":{"id":"2:3500:130","crate_id":2,"name":"Fn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3502:376"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnMut","id":"2:3503:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:9237:12747-0:2463:2811":{"id":"a:2:9237:12747-0:2463:2811","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9237:12747","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2463:2811","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2116:6416":{"id":"0:2116:6416","crate_id":0,"name":"round_subsecs","span":{"filename":"src/round.rs","begin":[33,4],"end":[33,48]},"visibility":"default","docs":"Return a copy rounded to the specified number of subsecond digits. With\n9 or more digits, self is returned unmodified. Halfway values are\nrounded up (away from zero).\n\n# Example\n``` rust\n# use chrono::{DateTime, SubsecRound, Timelike, TimeZone, Utc};\nlet dt = Utc.ymd(2018, 1, 11).and_hms_milli(12, 0, 0, 154);\nassert_eq!(dt.round_subsecs(2).nanosecond(), 150_000_000);\nassert_eq!(dt.round_subsecs(1).nanosecond(), 200_000_000);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["digits",{"kind":"primitive","inner":"u16"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2069:920":{"id":"0:2069:920","crate_id":0,"name":"new","span":{"filename":"src/format/mod.rs","begin":[735,4],"end":[737,5]},"visibility":"public","docs":"Makes a new `DelayedFormat` value out of local date and time.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["date",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2264:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}],["time",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NaiveTime","id":"0:2395:1893","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}],["items",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2748:2808","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"23:362:12585":{"id":"23:362:12585","crate_id":23,"name":"NumCast","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:363:681"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ToPrimitive","id":"23:311:2807","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2537:5510":{"id":"0:2537:5510","crate_id":0,"name":"ShortMonthName","span":{"filename":"src/format/mod.rs","begin":[170,4],"end":[170,18]},"visibility":"default","docs":"Abbreviated month names.\n\nPrints a three-letter-long name in the title case, reads the same name in any case.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"b:2:2856-0:2197:1896":{"id":"b:2:2856-0:2197:1896","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2850:12559","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2197:1896","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["2:2858:59480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:23048:26292":{"id":"2:23048:26292","crate_id":2,"name":"ToBitMask","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23049:16843","2:23050:63351","2:23051:63352"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:23041:13421","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"23:968:12509":{"id":"23:968:12509","crate_id":23,"name":"Num","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:969:65966","23:970:14184"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2902:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Zero","id":"23:515:3376","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"One","id":"23:525:12586","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"NumOps","id":"23:971:12566","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3189-0:2729:2518":{"id":"b:2:3189-0:2729:2518","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3163:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3159:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2729:2518","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:3192:127","2:3193:1409"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:288:2671":{"id":"0:288:2671","crate_id":0,"name":"fixed","span":{"filename":"src/offset/fixed.rs","begin":[4,0],"end":[244,1]},"visibility":{"restricted":{"parent":"0:206:957","path":"::offset"}},"docs":"The time zone which has a fixed offset from UTC.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:2231:1895"],"is_stripped":true}},"2:3506:132":{"id":"2:3506:132","crate_id":2,"name":"FnOnce","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3508:181","2:3509:378"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8340:13875":{"id":"2:8340:13875","crate_id":2,"name":"Sum","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8342:3487"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2657:1887":{"id":"0:2657:1887","crate_id":0,"name":"ParseError","span":{"filename":"src/format/mod.rs","begin":[321,0],"end":[321,38]},"visibility":"public","docs":"An error from the `parse` function.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:3291:12723-0:2657:1887","a:2:9237:12747-0:2657:1887","a:2:3262:220-0:2657:1887","a:2:3250:211-0:2657:1887","a:2:9236:12748-0:2657:1887","b:2:3179-0:2657:1887","b:2:2856-0:2657:1887","b:2:2853-0:2657:1887","b:2:3983-0:2657:1887","b:2:3183-0:2657:1887","b:2:3189-0:2657:1887","b:2:3194-0:2657:1887","b:5:6413-0:2657:1887","b:5:787-0:2657:1887","0:2660","0:2662","0:2664","0:2665","0:2668","0:2669","0:2671","0:1669","0:1671"]}},"2:13407:18686":{"id":"2:13407:18686","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_whitespace":"1:15916:6546"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_ascii_whitespace\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitAsciiWhitespace","id":"2:49684:12660","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:254:2543":{"id":"0:254:2543","crate_id":0,"name":"and_hms_opt","span":{"filename":"src/offset/mod.rs","begin":[96,4],"end":[103,5]},"visibility":"public","docs":"Makes a new `DateTime` from the current date, hour, minute and second.\nThe offset in the current date is preserved.\n\nPropagates any error. Ambiguous result would be discarded.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["hour",{"kind":"primitive","inner":"u32"}],["min",{"kind":"primitive","inner":"u32"}],["sec",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2197:1896","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2443:1881","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Tz"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2594:907":{"id":"0:2594:907","crate_id":0,"name":"ne","span":{"filename":"src/format/mod.rs","begin":[237,23],"end":[237,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2585:5546","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3189-0:2463:2811":{"id":"b:2:3189-0:2463:2811","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3163:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3159:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2463:2811","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3192:127","2:3193:1409"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3983-0:2812:1993":{"id":"b:2:3983-0:2812:1993","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3981:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:2812:1993","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3985:1421"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2174:2032":{"id":"0:2174:2032","crate_id":0,"name":"weekday","span":{"filename":"src/lib.rs","begin":[1292,4],"end":[1292,33]},"visibility":"default","docs":"Returns the day of week.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2776:1908","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:181":{"id":"0:181","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[524,39],"end":[524,48]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"NaiveTime","name":"NaiveTime","id":"0:2395:1893","glob":false}},"0:2664":{"id":"0:2664","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[320,23],"end":[320,32]},"visibility":{"restricted":{"parent":"0:1595:671","path":"::format"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralPartialEq","id":"2:3258:218","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2657:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2875":{"id":"0:2875","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1126,16],"end":[1126,25]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralPartialEq","id":"2:3258:218","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseMonthError","id":"0:2871:2127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:435:2664":{"id":"0:435:2664","crate_id":0,"name":"utc","span":{"filename":"src/offset/utc.rs","begin":[4,0],"end":[100,1]},"visibility":{"restricted":{"parent":"0:206:957","path":"::offset"}},"docs":"The UTC (Coordinated Universal Time) time zone.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:2253:1899"],"is_stripped":true}},"2:13402:61172":{"id":"2:13402:61172","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"1:15916:6546"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13728:138":{"id":"2:13728:138","crate_id":2,"name":"Future","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13729:181","2:13730:1013"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3540:12553":{"id":"2:3540:12553","crate_id":2,"name":"Generator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3542:237","2:3543:206","2:3544:63130"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"tuple","inner":[]},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10278:12706":{"id":"2:10278:12706","crate_id":2,"name":"Octal","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10279:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2201:2523":{"id":"0:2201:2523","crate_id":0,"name":"Single","span":{"filename":"src/offset/mod.rs","begin":[35,4],"end":[35,13]},"visibility":"default","docs":"Given local time representation has a single unique result.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"generic","inner":"T"}]}},"a:2:9237:12747-0:2776:1908":{"id":"a:2:9237:12747-0:2776:1908","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9237:12747","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2776:1908","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2824:2083":{"id":"0:2824:2083","crate_id":0,"name":"February","span":{"filename":"src/lib.rs","begin":[970,4],"end":[970,16]},"visibility":"default","docs":"February","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2264:1891":{"id":"0:2264:1891","crate_id":0,"name":"NaiveDate","span":{"filename":"src/naive/date.rs","begin":[99,0],"end":[101,1]},"visibility":"public","docs":"ISO 8601 calendar date without timezone.\nAllows for every [proleptic Gregorian date](#calendar-date)\nfrom Jan 1, 262145 BCE to Dec 31, 262143 CE.\nAlso supports the conversion from ISO 8601 ordinal and week date.\n\n# Calendar Date\n\nThe ISO 8601 **calendar date** follows the proleptic Gregorian calendar.\nIt is like a normal civil calendar but note some slight differences:\n\n* Dates before the Gregorian calendar's inception in 1582 are defined via the extrapolation.\n  Be careful, as historical dates are often noted in the Julian calendar and others\n  and the transition to Gregorian may differ across countries (as late as early 20C).\n\n  (Some example: Both Shakespeare from Britain and Cervantes from Spain seemingly died\n  on the same calendar date---April 23, 1616---but in the different calendar.\n  Britain used the Julian calendar at that time, so Shakespeare's death is later.)\n\n* ISO 8601 calendars has the year 0, which is 1 BCE (a year before 1 CE).\n  If you need a typical BCE/BC and CE/AD notation for year numbers,\n  use the [`Datelike::year_ce`](../trait.Datelike.html#method.year_ce) method.\n\n# Week Date\n\nThe ISO 8601 **week date** is a triple of year number, week number\nand [day of the week](../enum.Weekday.html) with the following rules:\n\n* A week consists of Monday through Sunday, and is always numbered within some year.\n  The week number ranges from 1 to 52 or 53 depending on the year.\n\n* The week 1 of given year is defined as the first week containing January 4 of that year,\n  or equivalently, the first week containing four or more days in that year.\n\n* The year number in the week date may *not* correspond to the actual Gregorian year.\n  For example, January 3, 2016 (Sunday) was on the last (53rd) week of 2015.\n\nChrono's date types default to the ISO 8601 [calendar date](#calendar-date),\nbut [`Datelike::iso_week`](../trait.Datelike.html#tymethod.iso_week) and\n[`Datelike::weekday`](../trait.Datelike.html#tymethod.weekday) methods\ncan be used to get the corresponding week date.\n\n# Ordinal Date\n\nThe ISO 8601 **ordinal date** is a pair of year number and day of the year (\"ordinal\").\nThe ordinal number ranges from 1 to 365 or 366 depending on the year.\nThe year number is the same as that of the [calendar date](#calendar-date).\n\nThis is currently the internal format of Chrono's date types.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"0:2647:604":{"id":"0:2647:604","crate_id":0,"name":"eq","span":{"filename":"src/format/mod.rs","begin":[262,16],"end":[262,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2617:2809","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2635:3587":{"id":"0:2635:3587","crate_id":0,"name":"Fixed","span":{"filename":"src/format/mod.rs","begin":[278,4],"end":[278,16]},"visibility":"default","docs":"Fixed-format item.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2536:3587","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]}},"0:2801":{"id":"0:2801","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[644,20],"end":[644,22]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralEq","id":"2:3259:217","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2776:1908","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3262:220-0:2617:2809":{"id":"a:2:3262:220-0:2617:2809","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3262:220","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2617:2809","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2524:1533":{"id":"0:2524:1533","crate_id":0,"name":"0","span":{"filename":"src/format/mod.rs","begin":[133,13],"end":[133,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:1651:5501","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}},"2:3629:12547":{"id":"2:3629:12547","crate_id":2,"name":"RangeBounds","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3631:62975","2:3632:62976","2:3633:6267"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:13437:64534":{"id":"2:13437:64534","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"`DoubleEndedIterator`":"2:8425:120","str::rsplit_terminator":"1:15916:6546","str::split":"1:15916:6546","self::pattern":"2:13015:6159","prim@char":"1:15910:6541"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitTerminator","id":"2:49451:12684","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:12642","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3250:211-0:2536:3587":{"id":"a:2:3250:211-0:2536:3587","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3250:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2536:3587","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3291:12723-0:2812:1993":{"id":"a:2:3291:12723-0:2812:1993","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3291:12723","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:2812:1993","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2783:1952":{"id":"0:2783:1952","crate_id":0,"name":"Wed","span":{"filename":"src/lib.rs","begin":[652,4],"end":[652,11]},"visibility":"default","docs":"Wednesday.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2479":{"id":"0:2479","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[58,37],"end":[58,42]},"visibility":{"restricted":{"parent":"0:1595:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10269:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2463:2811","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2480:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2172:2183":{"id":"0:2172:2183","crate_id":0,"name":"ordinal","span":{"filename":"src/lib.rs","begin":[1284,4],"end":[1284,29]},"visibility":"default","docs":"Returns the day of year starting from 1.\n\nThe return value ranges from 1 to 366. (The last day of year differs by years.)","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:9236:12748-0:2776:1908":{"id":"a:2:9236:12748-0:2776:1908","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9236:12748","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2776:1908","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"23:337:1988":{"id":"23:337:1988","crate_id":23,"name":"FromPrimitive","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:338:13370","23:339:13371","23:340:13372","23:341:13373","23:342:1989","23:343:13374","23:344:689","23:345:13375","23:346:13376","23:347:2125","23:348:1991","23:349:13377","23:350:13378","23:351:13379"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3194-0:1651:5501":{"id":"b:2:3194-0:1651:5501","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3153:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3163:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:1651:5501","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3197:127","2:3198:1408"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2578:604":{"id":"0:2578:604","crate_id":0,"name":"eq","span":{"filename":"src/format/mod.rs","begin":[165,16],"end":[165,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2536:3587","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2170:2177":{"id":"0:2170:2177","crate_id":0,"name":"day","span":{"filename":"src/lib.rs","begin":[1274,4],"end":[1274,25]},"visibility":"default","docs":"Returns the day of month starting from 1.\n\nThe return value ranges from 1 to 31. (The last day of month differs by months.)","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:3503:131":{"id":"2:3503:131","crate_id":2,"name":"FnMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3505:377"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnOnce","id":"2:3506:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"23:635:12593":{"id":"23:635:12593","crate_id":23,"name":"CheckedShl","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:636:65709"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Shl","id":"2:3392:12535","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u32"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:164":{"id":"0:164","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[520,40],"end":[520,47]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"Weekday","name":"Weekday","id":"0:2776:1908","glob":false}},"2:13434:61181":{"id":"2:13434:61181","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"`DoubleEndedIterator`":"2:8425:120","self::pattern":"2:13015:6159","prim@char":"1:15910:6541","str::split":"1:15916:6546"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplit","id":"2:49419:12679","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:12642","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:12642","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13040:12654","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:271:1931":{"id":"0:271:1931","crate_id":0,"name":"timestamp","span":{"filename":"src/offset/mod.rs","begin":[324,4],"end":[326,5]},"visibility":"default","docs":"Makes a new `DateTime` from the number of non-leap seconds\nsince January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\")\nand the number of nanoseconds since the last whole non-leap second.\n\nPanics on the out-of-range number of seconds and/or invalid nanosecond,\nfor a non-panicking version see [`timestamp_opt`](#method.timestamp_opt).\n\n# Example\n\n~~~~\nuse chrono::{Utc, TimeZone};\n\nassert_eq!(Utc.timestamp(1431648000, 0).to_string(), \"2015-05-15 00:00:00 UTC\");\n~~~~","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["secs",{"kind":"primitive","inner":"i64"}],["nsecs",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2443:1881","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1645":{"id":"0:1645","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[43,0],"end":[43,29]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::parsed::Parsed","name":"Parsed","id":"0:2698:2517","glob":false}},"b:5:6413-0:2748:2808":{"id":"b:5:6413-0:2748:2808","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10276:119","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"ToString","id":"5:6411:223","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2748:2808","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}},"param_names":[]}},"items":["5:6415:1390"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2173:2186":{"id":"0:2173:2186","crate_id":0,"name":"ordinal0","span":{"filename":"src/lib.rs","begin":[1289,4],"end":[1289,30]},"visibility":"default","docs":"Returns the day of year starting from 0.\n\nThe return value ranges from 0 to 365. (The last day of year differs by years.)","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2633:1533":{"id":"0:2633:1533","crate_id":0,"name":"0","span":{"filename":"src/format/mod.rs","begin":[276,12],"end":[276,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2481:2810","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}},"2:3408:12538":{"id":"2:3408:12538","crate_id":2,"name":"BitOrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3410:354"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2795:1960":{"id":"0:2795:1960","crate_id":0,"name":"Sun","span":{"filename":"src/lib.rs","begin":[660,4],"end":[660,11]},"visibility":"default","docs":"Sunday.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2545:5520":{"id":"0:2545:5520","crate_id":0,"name":"LowerAmPm","span":{"filename":"src/format/mod.rs","begin":[186,4],"end":[186,13]},"visibility":"default","docs":"AM/PM.\n\nPrints in lower case, reads in any case.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"a:2:3250:211-0:2729:2518":{"id":"a:2:3250:211-0:2729:2518","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3250:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2729:2518","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13025:12642":{"id":"2:13025:12642","crate_id":2,"name":"Pattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13027:12655","2:13028:63898","2:13029:63899","2:13030:63900","2:13031:63902","2:13032:63901","2:13033:63903"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2147:1989":{"id":"0:2147:1989","crate_id":0,"name":"from_i64","span":{"filename":"src/lib.rs","begin":[792,4],"end":[803,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["n",{"kind":"primitive","inner":"i64"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2776:1908","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2516:4002":{"id":"0:2516:4002","crate_id":0,"name":"Second","span":{"filename":"src/format/mod.rs","begin":[120,4],"end":[120,10]},"visibility":"default","docs":"The number of seconds since the last whole minute (FW=PW=2).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:3353:2806":{"id":"2:3353:2806","crate_id":2,"name":"SubAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3355:1349"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2466:3376":{"id":"0:2466:3376","crate_id":0,"name":"Zero","span":{"filename":"src/format/mod.rs","begin":[63,4],"end":[63,8]},"visibility":"default","docs":"Zero (`0`) padding.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:246:2530":{"id":"0:246:2530","crate_id":0,"name":"earliest","span":{"filename":"src/offset/mod.rs","begin":[51,4],"end":[56,5]},"visibility":"public","docs":"Returns `Some` for the earliest possible conversion result, or `None` if none.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3193:1409":{"id":"2:3193:1409","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47564:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3163:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3189-0:2536:3587":{"id":"b:2:3189-0:2536:3587","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3163:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3159:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2536:3587","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3192:127","2:3193:1409"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3983-0:2871:2127":{"id":"b:2:3983-0:2871:2127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3981:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseMonthError","id":"0:2871:2127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3985:1421"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2593:604":{"id":"0:2593:604","crate_id":0,"name":"eq","span":{"filename":"src/format/mod.rs","begin":[237,23],"end":[237,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2585:5546","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2853-0:2585:5546":{"id":"b:2:2853-0:2585:5546","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2847:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2585:5546","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2855:2804"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1658":{"id":"0:1658","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[155,0],"end":[159,1]},"visibility":{"restricted":{"parent":"0:1595:671","path":"::format"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10269:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:1651:5501","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1659:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2853-0:2481:2810":{"id":"b:2:2853-0:2481:2810","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2847:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2481:2810","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2855:2804"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9237:12747-0:2585:5546":{"id":"a:2:9237:12747-0:2585:5546","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9237:12747","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2585:5546","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"23:775:12604":{"id":"23:775:12604","crate_id":23,"name":"SaturatingSub","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:776:1221"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sub","id":"2:3323:2704","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"23:943:12510":{"id":"23:943:12510","crate_id":23,"name":"Signed","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:944:6448","23:945:12613","23:946:12614","23:947:63458","23:948:63459"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Num","id":"23:968:12509","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Neg","id":"2:3345:12526","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:2850:12559":{"id":"2:2850:12559","crate_id":2,"name":"BorrowMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2852:59480"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2847:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Borrowed"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:62":{"id":"0:62","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[486,0],"end":[486,26]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"oldtime::Duration","name":"Duration","id":"20:405:121","glob":false}},"b:2:3183-0:2820:1906":{"id":"b:2:3183-0:2820:1906","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3156:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:2820:1906","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3185:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3715:137":{"id":"2:3715:137","crate_id":2,"name":"FromResidual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3717:687"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"Try","id":"2:3710:224","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:599:1878":{"id":"0:599:1878","crate_id":0,"name":"MIN_DATE","span":{"filename":"src/naive/date.rs","begin":[104,0],"end":[104,94]},"visibility":"public","docs":"The minimum possible `NaiveDate` (January 1, 262145 BCE).","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2264:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"2:3412:12539":{"id":"2:3412:12539","crate_id":2,"name":"BitXorAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3414:357"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2526:408":{"id":"0:2526:408","crate_id":0,"name":"clone","span":{"filename":"src/format/mod.rs","begin":[81,9],"end":[81,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2481:2810","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3260:106":{"id":"2:3260:106","crate_id":2,"name":"Copy","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2184:1907":{"id":"0:2184:1907","crate_id":0,"name":"Timelike","span":{"filename":"src/lib.rs","begin":[1363,0],"end":[1419,1]},"visibility":"public","docs":"The common set of methods for time component.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:2185:2222","0:2186:2225","0:2187:2227","0:2188:2229","0:2189:2233","0:2190:2235","0:2191:2237","0:2192:2241","0:2193:2246","0:2194:2249"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3793:12556":{"id":"2:3793:12556","crate_id":2,"name":"DispatchFromDyn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2802":{"id":"0:2802","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[644,20],"end":[644,22]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2907:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2776:1908","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2220":{"id":"0:2220","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[29,34],"end":[29,38]},"visibility":{"restricted":{"parent":"0:206:957","path":"::offset"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"$crate::marker::Copy","id":"2:3260:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3260:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2197:1896","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13475:64545":{"id":"2:13475:64545","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"self::pattern":"2:13015:6159","prim@char":"1:15910:6541"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:12642","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:12642","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"DoubleEndedSearcher","id":"2:13045:12653","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3365:12530":{"id":"2:3365:12530","crate_id":2,"name":"RemAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3367:1103"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2536:3587":{"id":"0:2536:3587","crate_id":0,"name":"Fixed","span":{"filename":"src/format/mod.rs","begin":[166,0],"end":[234,1]},"visibility":"public","docs":"Fixed-format item types.\n\nThey have their own rules of formatting and parsing.\nOtherwise noted, they print in the specified cases but parse case-insensitively.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:2537:5510","0:2539:5513","0:2541:5515","0:2543:5517","0:2545:5520","0:2547:5522","0:2549:4003","0:2551:5146","0:2553:5147","0:2555:5148","0:2557:5531","0:2559:5151","0:2561:5150","0:2563:5541","0:2565:5543","0:2567:5103","0:2569:5109","0:2571:5500"],"impls":["a:2:3291:12723-0:2536:3587","a:2:9237:12747-0:2536:3587","a:2:3262:220-0:2536:3587","a:2:3250:211-0:2536:3587","a:2:9236:12748-0:2536:3587","b:2:3179-0:2536:3587","b:2:2856-0:2536:3587","b:2:2853-0:2536:3587","b:2:3983-0:2536:3587","b:2:3183-0:2536:3587","b:2:3189-0:2536:3587","b:2:3194-0:2536:3587","b:5:787-0:2536:3587","0:2574","0:2576","0:2577","0:2580","0:2581","0:2583"]}},"2:3387:12533":{"id":"2:3387:12533","crate_id":2,"name":"BitXor","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3389:181","2:3390:356"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:273:2621":{"id":"0:273:2621","crate_id":0,"name":"timestamp_millis","span":{"filename":"src/offset/mod.rs","begin":[354,4],"end":[356,5]},"visibility":"default","docs":"Makes a new `DateTime` from the number of non-leap milliseconds\nsince January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\").\n\nPanics on out-of-range number of milliseconds for a non-panicking\nversion see [`timestamp_millis_opt`](#method.timestamp_millis_opt).\n\n# Example\n\n~~~~\nuse chrono::{Utc, TimeZone};\n\nassert_eq!(Utc.timestamp_millis(1431648000).timestamp(), 1431648);\n~~~~","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["millis",{"kind":"primitive","inner":"i64"}]],"output":{"kind":"resolved_path","inner":{"name":"DateTime","id":"0:2443:1881","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3318:2703":{"id":"2:3318:2703","crate_id":2,"name":"Add","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3320:181","2:3321:265"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2804":{"id":"0:2804","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[644,24],"end":[644,28]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3260:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2776:1908","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:8390:12770":{"id":"2:8390:12770","crate_id":2,"name":"Extend","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8392:13021","2:8394:13022","2:8395:13023"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3357:12529":{"id":"2:3357:12529","crate_id":2,"name":"MulAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3359:893"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:82":{"id":"0:82","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[491,44],"end":[491,56]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"datetime::MAX_DATETIME","name":"MAX_DATETIME","id":"0:1436:1883","glob":false}},"2:13469:64542":{"id":"2:13469:64542","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23429:26311":{"id":"2:23429:26311","crate_id":2,"name":"SimdOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23430:63195","2:23431:63196","2:23432:63197"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SimdPartialOrd","id":"2:23424:13942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2718:957":{"id":"0:2718:957","crate_id":0,"name":"offset","span":{"filename":"src/format/parsed.rs","begin":[107,4],"end":[107,27]},"visibility":"public","docs":"Offset from the local time to UTC, in seconds.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i32"}}],"bindings":[]}},"param_names":[]}}},"b:5:787-0:2729:2518":{"id":"b:5:787-0:2729:2518","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2729:2518","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["5:789:12561","5:790:13067","5:791:13068"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3194-0:2481:2810":{"id":"b:2:3194-0:2481:2810","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3153:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3163:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2481:2810","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3197:127","2:3198:1408"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13411:6267":{"id":"2:13411:6267","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"self::pattern":"2:13015:6159","prim@char":"1:15910:6541"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:12642","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13381:18478":{"id":"2:13381:18478","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"is_char_boundary\", since = \"1.9.0\")]","#[rustc_const_unstable(feature = \"const_is_char_boundary\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:268:2589":{"id":"0:268:2589","crate_id":0,"name":"yo_opt","span":{"filename":"src/offset/mod.rs","begin":[266,4],"end":[271,5]},"visibility":"default","docs":"Makes a new `Date` from year, day of year (DOY or \"ordinal\") and the current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\n\nThe time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),\nbut it will propagate to the `DateTime` values constructed via this date.\n\nReturns `None` on the out-of-range date and/or invalid DOY.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["year",{"kind":"primitive","inner":"i32"}],["ordinal",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2197:1896","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2412:1876","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2207:1534":{"id":"0:2207:1534","crate_id":0,"name":"1","span":{"filename":"src/offset/mod.rs","begin":[38,25],"end":[38,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"T"}},"0:2574":{"id":"0:2574","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[165,9],"end":[165,14]},"visibility":{"restricted":{"parent":"0:1595:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2536:3587","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2575:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2395:1893":{"id":"0:2395:1893","crate_id":0,"name":"NaiveTime","span":{"filename":"src/naive/time.rs","begin":[182,0],"end":[185,1]},"visibility":"public","docs":"ISO 8601 time without timezone.\nAllows for the nanosecond precision and optional leap second representation.\n\n# Leap Second Handling\n\nSince 1960s, the manmade atomic clock has been so accurate that\nit is much more accurate than Earth's own motion.\nIt became desirable to define the civil time in terms of the atomic clock,\nbut that risks the desynchronization of the civil time from Earth.\nTo account for this, the designers of the Coordinated Universal Time (UTC)\nmade that the UTC should be kept within 0.9 seconds of the observed Earth-bound time.\nWhen the mean solar day is longer than the ideal (86,400 seconds),\nthe error slowly accumulates and it is necessary to add a **leap second**\nto slow the UTC down a bit.\n(We may also remove a second to speed the UTC up a bit, but it never happened.)\nThe leap second, if any, follows 23:59:59 of June 30 or December 31 in the UTC.\n\nFast forward to the 21st century,\nwe have seen 26 leap seconds from January 1972 to December 2015.\nYes, 26 seconds. Probably you can read this paragraph within 26 seconds.\nBut those 26 seconds, and possibly more in the future, are never predictable,\nand whether to add a leap second or not is known only before 6 months.\nInternet-based clocks (via NTP) do account for known leap seconds,\nbut the system API normally doesn't (and often can't, with no network connection)\nand there is no reliable way to retrieve leap second information.\n\nChrono does not try to accurately implement leap seconds; it is impossible.\nRather, **it allows for leap seconds but behaves as if there are *no other* leap seconds.**\nVarious operations will ignore any possible leap second(s)\nexcept when any of the operands were actually leap seconds.\n\nIf you cannot tolerate this behavior,\nyou must use a separate `TimeZone` for the International Atomic Time (TAI).\nTAI is like UTC but has no leap seconds, and thus slightly differs from UTC.\nChrono does not yet provide such implementation, but it is planned.\n\n## Representing Leap Seconds\n\nThe leap second is indicated via fractional seconds more than 1 second.\nThis makes possible to treat a leap second as the prior non-leap second\nif you don't care about sub-second accuracy.\nYou should use the proper formatting to get the raw leap second.\n\nAll methods accepting fractional seconds will accept such values.\n\n~~~~\nuse chrono::{NaiveDate, NaiveTime, Utc, TimeZone};\n\nlet t = NaiveTime::from_hms_milli(8, 59, 59, 1_000);\n\nlet dt1 = NaiveDate::from_ymd(2015, 7, 1).and_hms_micro(8, 59, 59, 1_000_000);\n\nlet dt2 = Utc.ymd(2015, 6, 30).and_hms_nano(23, 59, 59, 1_000_000_000);\n# let _ = (t, dt1, dt2);\n~~~~\n\nNote that the leap second can happen anytime given an appropriate time zone;\n2015-07-01 01:23:60 would be a proper leap second if UTC+01:24 had existed.\nPractically speaking, though, by the time of the first leap second on 1972-06-30,\nevery time zone offset around the world has standardized to the 5-minute alignment.\n\n## Date And Time Arithmetics\n\nAs a concrete example, let's assume that `03:00:60` and `04:00:60` are leap seconds.\nIn reality, of course, leap seconds are separated by at least 6 months.\nWe will also use some intuitive concise notations for the explanation.\n\n`Time + Duration`\n(short for [`NaiveTime::overflowing_add_signed`](#method.overflowing_add_signed)):\n\n- `03:00:00 + 1s = 03:00:01`.\n- `03:00:59 + 60s = 03:02:00`.\n- `03:00:59 + 1s = 03:01:00`.\n- `03:00:60 + 1s = 03:01:00`.\n  Note that the sum is identical to the previous.\n- `03:00:60 + 60s = 03:01:59`.\n- `03:00:60 + 61s = 03:02:00`.\n- `03:00:60.1 + 0.8s = 03:00:60.9`.\n\n`Time - Duration`\n(short for [`NaiveTime::overflowing_sub_signed`](#method.overflowing_sub_signed)):\n\n- `03:00:00 - 1s = 02:59:59`.\n- `03:01:00 - 1s = 03:00:59`.\n- `03:01:00 - 60s = 03:00:00`.\n- `03:00:60 - 60s = 03:00:00`.\n  Note that the result is identical to the previous.\n- `03:00:60.7 - 0.4s = 03:00:60.3`.\n- `03:00:60.7 - 0.9s = 03:00:59.8`.\n\n`Time - Time`\n(short for [`NaiveTime::signed_duration_since`](#method.signed_duration_since)):\n\n- `04:00:00 - 03:00:00 = 3600s`.\n- `03:01:00 - 03:00:00 = 60s`.\n- `03:00:60 - 03:00:00 = 60s`.\n  Note that the difference is identical to the previous.\n- `03:00:60.6 - 03:00:59.4 = 1.2s`.\n- `03:01:00 - 03:00:59.8 = 0.2s`.\n- `03:01:00 - 03:00:60.5 = 0.5s`.\n  Note that the difference is larger than the previous,\n  even though the leap second clearly follows the previous whole second.\n- `04:00:60.9 - 03:00:60.1 =\n  (04:00:60.9 - 04:00:00) + (04:00:00 - 03:01:00) + (03:01:00 - 03:00:60.1) =\n  60.9s + 3540s + 0.9s = 3601.8s`.\n\nIn general,\n\n- `Time + Duration` unconditionally equals to `Duration + Time`.\n\n- `Time - Duration` unconditionally equals to `Time + (-Duration)`.\n\n- `Time1 - Time2` unconditionally equals to `-(Time2 - Time1)`.\n\n- Associativity does not generally hold, because\n  `(Time + Duration1) - Duration2` no longer equals to `Time + (Duration1 - Duration2)`\n  for two positive durations.\n\n    - As a special case, `(Time + Duration) - Duration` also does not equal to `Time`.\n\n    - If you can assume that all durations have the same sign, however,\n      then the associativity holds:\n      `(Time + Duration1) + Duration2` equals to `Time + (Duration1 + Duration2)`\n      for two positive durations.\n\n## Reading And Writing Leap Seconds\n\nThe \"typical\" leap seconds on the minute boundary are\ncorrectly handled both in the formatting and parsing.\nThe leap second in the human-readable representation\nwill be represented as the second part being 60, as required by ISO 8601.\n\n~~~~\nuse chrono::{Utc, TimeZone};\n\nlet dt = Utc.ymd(2015, 6, 30).and_hms_milli(23, 59, 59, 1_000);\nassert_eq!(format!(\"{:?}\", dt), \"2015-06-30T23:59:60Z\");\n~~~~\n\nThere are hypothetical leap seconds not on the minute boundary\nnevertheless supported by Chrono.\nThey are allowed for the sake of completeness and consistency;\nthere were several \"exotic\" time zone offsets with fractional minutes prior to UTC after all.\nFor such cases the human-readable representation is ambiguous\nand would be read back to the next non-leap second.\n\n~~~~\nuse chrono::{DateTime, Utc, TimeZone};\n\nlet dt = Utc.ymd(2015, 6, 30).and_hms_milli(23, 56, 4, 1_000);\nassert_eq!(format!(\"{:?}\", dt), \"2015-06-30T23:56:05Z\");\n\nlet dt = Utc.ymd(2015, 6, 30).and_hms(23, 56, 5);\nassert_eq!(format!(\"{:?}\", dt), \"2015-06-30T23:56:05Z\");\nassert_eq!(DateTime::parse_from_rfc3339(\"2015-06-30T23:56:05Z\").unwrap(), dt);\n~~~~\n\nSince Chrono alone cannot determine any existence of leap seconds,\n**there is absolutely no guarantee that the leap second read has actually happened**.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"2:13389:304":{"id":"2:13389:304","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"1:15916:6546","`u8`":"1:15927:6555"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"rustc_str_as_ptr\", since = \"1.32.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:131":{"id":"0:131","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[503,31],"end":[503,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"round::RoundingError","name":"RoundingError","id":"0:2758:1902","glob":false}},"0:206:957":{"id":"0:206:957","crate_id":0,"name":"offset","span":{"filename":"src/offset/mod.rs","begin":[4,0],"end":[531,1]},"visibility":"public","docs":"The time zone, which calculates offsets from the local time to UTC.\n\nThere are four operations provided by the `TimeZone` trait:\n\n1. Converting the local `NaiveDateTime` to `DateTime<Tz>`\n2. Converting the UTC `NaiveDateTime` to `DateTime<Tz>`\n3. Converting `DateTime<Tz>` to the local `NaiveDateTime`\n4. Constructing `DateTime<Tz>` objects from various offsets\n\n1 is used for constructors. 2 is used for the `with_timezone` method of date and time types.\n3 is used for other methods, e.g. `year()` or `format()`, and provided by an associated type\nwhich implements `Offset` (which then passed to `TimeZone` for actual implementations).\nTechnically speaking `TimeZone` has a total knowledge about given timescale,\nbut `Offset` is used as a cache to avoid the repeated conversion\nand provides implementations for 1 and 3.\nAn `TimeZone` instance can be reconstructed from the corresponding `Offset` instance.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:2197:1896","0:261:1897","0:263:1898","0:489","0:492","0:495"],"is_stripped":false}},"0:1138":{"id":"0:1138","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[554,46],"end":[554,54]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::date::MIN_DATE","name":"MIN_DATE","id":"0:599:1878","glob":false}},"b:2:3183-0:2536:3587":{"id":"b:2:3183-0:2536:3587","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3156:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2536:3587","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3185:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2877:604":{"id":"0:2877:604","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[1126,16],"end":[1126,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ParseMonthError","id":"0:2871:2127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9236:12748-0:2729:2518":{"id":"a:2:9236:12748-0:2729:2518","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9236:12748","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2729:2518","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3189-0:1651:5501":{"id":"b:2:3189-0:1651:5501","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3163:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3159:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:1651:5501","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3192:127","2:3193:1409"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3421:12541":{"id":"2:3421:12541","crate_id":2,"name":"ShrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3423:1230"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13424:13020":{"id":"2:13424:13020","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"self::pattern":"2:13015:6159","prim@char":"1:15910:6541","`None`":"2:47437:176"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:12642","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:12642","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13040:12654","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:279:2657":{"id":"0:279:2657","crate_id":0,"name":"offset_from_local_datetime","span":{"filename":"src/offset/mod.rs","begin":[429,4],"end":[429,93]},"visibility":"default","docs":"Creates the offset(s) for given local `NaiveDateTime` if possible.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["local",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDateTime","id":"0:2325:1892","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2197:1896","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:263:1898","args":null,"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2648:907":{"id":"0:2648:907","crate_id":0,"name":"ne","span":{"filename":"src/format/mod.rs","begin":[262,16],"end":[262,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2617:2809","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3983-0:2776:1908":{"id":"b:2:3983-0:2776:1908","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3981:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2776:1908","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3985:1421"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:10276:119":{"id":"2:10276:119","crate_id":2,"name":"Display","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10277:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2555:5148":{"id":"0:2555:5148","crate_id":0,"name":"Nanosecond9","span":{"filename":"src/format/mod.rs","begin":[200,4],"end":[200,15]},"visibility":"default","docs":"Same as [`Nanosecond`](#variant.Nanosecond) but the accuracy is fixed to 9.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2671":{"id":"0:2671","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[320,38],"end":[320,42]},"visibility":{"restricted":{"parent":"0:1595:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3260:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2657:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2047":{"id":"0:2047","crate_id":0,"name":null,"span":{"filename":"src/format/strftime.rs","begin":[217,0],"end":[262,1]},"visibility":{"restricted":{"parent":"0:2022:5443","path":"::format::strftime"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2729:2518","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["0:2049:920"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:137:1030":{"id":"0:137:1030","crate_id":0,"name":"prelude","span":{"filename":"src/lib.rs","begin":[506,0],"end":[506,15]},"visibility":"public","docs":"A convenience module appropriate for glob imports (`use chrono::prelude::*;`).","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:138","0:141","0:144","0:148","0:151","0:155","0:158","0:161","0:164","0:168","0:171","0:175","0:178","0:181","0:185","0:188"],"is_stripped":false}},"23:630:12592":{"id":"23:630:12592","crate_id":23,"name":"CheckedRem","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:631:66439"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Rem","id":"2:3339:12527","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2253:1899":{"id":"0:2253:1899","crate_id":0,"name":"Utc","span":{"filename":"src/offset/utc.rs","begin":[36,0],"end":[36,15]},"visibility":"public","docs":"The UTC time zone. This is the most efficient time zone when you don't need the local time.\nIt is also used as an offset (which is also a dummy type).\n\nUsing the [`TimeZone`](./trait.TimeZone.html) methods\non the UTC struct is the preferred way to construct `DateTime<Utc>`\ninstances.\n\n# Example\n\n~~~~\nuse chrono::{DateTime, TimeZone, NaiveDateTime, Utc};\n\nlet dt = DateTime::<Utc>::from_utc(NaiveDateTime::from_timestamp(61, 0), Utc);\n\nassert_eq!(Utc.timestamp(61, 0), dt);\nassert_eq!(Utc.ymd(1970, 1, 1).and_hms(0, 1, 1), dt);\n~~~~","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"unit","generics":{"params":[],"where_predicates":[]},"fields_stripped":false,"fields":[],"impls":[]}},"2:13378":{"id":"2:13378","crate_id":2,"name":null,"span":null,"visibility":{"restricted":{"parent":"2:12475:1333","path":"::str"}},"docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["2:13379:793","2:13380:5946","2:13381:18478","2:13382:64529","2:13384:64530","2:13387:5917","2:13388:64531","2:13389:304","2:13390:61152","2:13391:4331","2:13393:61149","2:13395:61150","2:13397:61151","2:13399:13477","2:13400:64532","2:13401:61171","2:13402:61172","2:13403:6261","2:13404:13849","2:13405:4139","2:13406:18688","2:13407:18686","2:13408:14606","2:13409:64533","2:13410:18429","2:13411:6267","2:13414:5908","2:13417:60816","2:13420:6283","2:13424:13020","2:13428:59848","2:13431:18687","2:13434:61181","2:13437:64534","2:13440:64535","2:13443:61183","2:13446:61185","2:13449:64536","2:13452:64537","2:13455:6619","2:13458:64538","2:13461:64539","2:13464:64540","2:13467:64541","2:13469:64542","2:13471:64543","2:13473:5906","2:13474:64544","2:13475:64545","2:13478:64546","2:13481:18081","2:13484:61187","2:13487:64547","2:13490:6176","2:13493:64548","2:13496:2013","2:13498:14262","2:13499:59492","2:13500:59493","2:13501:59494","2:13502:64549","2:13504:13425","2:13505:64550"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13493:64548":{"id":"2:13493:64548","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"self::pattern":"2:13015:6159","prim@char":"1:15910:6541"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:12642","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:12642","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13040:12654","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2522:5500":{"id":"0:2522:5500","crate_id":0,"name":"Internal","span":{"filename":"src/format/mod.rs","begin":[133,4],"end":[133,29]},"visibility":"default","docs":"Internal uses only.\n\nThis item exists so that one can add additional internal-only formatting\nwithout breaking major compatibility (as enum variants cannot be selectively private).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:1651:5501","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]}},"2:8388:13024":{"id":"2:8388:13024","crate_id":2,"name":"IntoIter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"I"}}},"0:102":{"id":"0:102","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[497,36],"end":[497,49]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"naive::NaiveDateTime","name":"NaiveDateTime","id":"0:2325:1892","glob":false}},"0:89":{"id":"0:89","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[495,17],"end":[495,27]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"format::ParseError","name":"ParseError","id":"0:2657:1887","glob":false}},"0:2809":{"id":"0:2809","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[644,44],"end":[644,48]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"kind":"resolved_path","inner":{"name":"Hash","id":"2:10507:142","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2776:1908","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2810:715"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2420:5015":{"id":"0:2420:5015","crate_id":0,"name":"Secs","span":{"filename":"src/datetime.rs","begin":[40,4],"end":[40,8]},"visibility":"default","docs":"Format whole seconds only, with no decimal point nor subseconds.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:245:2527":{"id":"0:245:2527","crate_id":0,"name":"single","span":{"filename":"src/offset/mod.rs","begin":[43,4],"end":[48,5]},"visibility":"public","docs":"Returns `Some` only when the conversion result is unique, or `None` otherwise.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1157:1875":{"id":"0:1157:1875","crate_id":0,"name":"date","span":{"filename":"src/date.rs","begin":[4,0],"end":[480,1]},"visibility":"crate","docs":"ISO 8601 calendar date with time zone.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:2412:1876","0:1221:1878","0:1222:1877"],"is_stripped":true}},"b:2:3183-0:2197:1896":{"id":"b:2:3183-0:2197:1896","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3156:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2197:1896","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["2:3185:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3147:75":{"id":"2:3147:75","crate_id":2,"name":"AsRef","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3149:305"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"a:2:9237:12747-0:2197:1896":{"id":"a:2:9237:12747-0:2197:1896","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9237:12747","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9237:12747","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2197:1896","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1648":{"id":"0:1648","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[44,0],"end":[44,38]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::strftime::StrftimeItems","name":"StrftimeItems","id":"0:2729:2518","glob":false}},"a:2:3262:220-0:2820:1906":{"id":"a:2:3262:220-0:2820:1906","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3262:220","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:2820:1906","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:266:2578":{"id":"0:266:2578","crate_id":0,"name":"ymd_opt","span":{"filename":"src/offset/mod.rs","begin":[233,4],"end":[238,5]},"visibility":"default","docs":"Makes a new `Date` from year, month, day and the current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\n\nThe time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),\nbut it will propagate to the `DateTime` values constructed via this date.\n\nReturns `None` on the out-of-range date, invalid month and/or day.\n\n# Example\n\n~~~~\nuse chrono::{Utc, LocalResult, TimeZone};\n\nassert_eq!(Utc.ymd_opt(2015, 5, 15).unwrap().to_string(), \"2015-05-15UTC\");\nassert_eq!(Utc.ymd_opt(2000, 0, 0), LocalResult::None);\n~~~~","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["year",{"kind":"primitive","inner":"i32"}],["month",{"kind":"primitive","inner":"u32"}],["day",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2197:1896","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2412:1876","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2563:5541":{"id":"0:2563:5541","crate_id":0,"name":"TimezoneOffset","span":{"filename":"src/format/mod.rs","begin":[220,4],"end":[220,18]},"visibility":"default","docs":"Same as [`TimezoneOffsetColon`](#variant.TimezoneOffsetColon) but prints no colon.\nParsing allows an optional colon.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2580":{"id":"0:2580","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[165,27],"end":[165,29]},"visibility":{"restricted":{"parent":"0:1595:671","path":"::format"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralEq","id":"2:3259:217","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2536:3587","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3189-0:2585:5546":{"id":"b:2:3189-0:2585:5546","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3163:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3159:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2585:5546","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3192:127","2:3193:1409"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2080":{"id":"0:2080","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[914,0],"end":[938,1]},"visibility":{"restricted":{"parent":"0:1595:671","path":"::format"}},"docs":"Parsing a `str` into a `Month` uses the format [`%W`](./format/strftime/index.html).\n\n# Example\n\n~~~~\nuse chrono::Month;\n\nassert_eq!(\"January\".parse::<Month>(), Ok(Month::January));\nassert!(\"any day\".parse::<Month>().is_err());\n~~~~\n\nThe parsing is case-insensitive.\n\n~~~~\n# use chrono::Month;\nassert_eq!(\"fEbruARy\".parse::<Month>(), Ok(Month::February));\n~~~~\n\nOnly the shortest form (e.g. `jan`) and the longest form (e.g. `january`) is accepted.\n\n~~~~\n# use chrono::Month;\nassert!(\"septem\".parse::<Month>().is_err());\nassert!(\"Augustin\".parse::<Month>().is_err());\n~~~~","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"FromStr","id":"2:12954:3373","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:2820:1906","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2081:126","0:2082:2037"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:2858:59480":{"id":"2:2858:59480","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3983-0:2536:3587":{"id":"b:2:3983-0:2536:3587","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3981:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2536:3587","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3985:1421"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"23:679:12599":{"id":"23:679:12599","crate_id":23,"name":"MulAdd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:682:181","23:683:12620"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10911:214":{"id":"2:10911:214","crate_id":2,"name":"SliceIndex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:10913:181","2:10914:4331","2:10915:61149","2:10916:61150","2:10917:61151","2:10918:753","2:10919:754"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:10902:13421","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2500:5478":{"id":"0:2500:5478","crate_id":0,"name":"WeekFromMon","span":{"filename":"src/format/mod.rs","begin":[104,4],"end":[104,15]},"visibility":"default","docs":"Week number, where the week 1 starts at the first Monday of January (FW=PW=2).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"23:807:12606":{"id":"23:807:12606","crate_id":23,"name":"WrappingMul","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:808:1519"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Mul","id":"2:3328:12525","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2585:5546":{"id":"0:2585:5546","crate_id":0,"name":"InternalFixed","span":{"filename":"src/format/mod.rs","begin":[238,0],"end":[240,1]},"visibility":"public","docs":"An opaque type representing fixed-format item types for internal uses only.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:3291:12723-0:2585:5546","a:2:9237:12747-0:2585:5546","a:2:3262:220-0:2585:5546","a:2:3250:211-0:2585:5546","a:2:9236:12748-0:2585:5546","b:2:3179-0:2585:5546","b:2:2856-0:2585:5546","b:2:2853-0:2585:5546","b:2:3983-0:2585:5546","b:2:3183-0:2585:5546","b:2:3189-0:2585:5546","b:2:3194-0:2585:5546","b:5:787-0:2585:5546","0:2587","0:2589","0:2591","0:2592","0:2595","0:2596"]}},"0:2142:1981":{"id":"0:2142:1981","crate_id":0,"name":"num_days_from_monday","span":{"filename":"src/lib.rs","begin":[742,4],"end":[752,5]},"visibility":"public","docs":"Returns a day-of-week number starting from Monday = 0.\n\n`w`:                        | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun`\n--------------------------- | ----- | ----- | ----- | ----- | ----- | ----- | -----\n`w.num_days_from_monday()`: | 0     | 1     | 2     | 3     | 4     | 5     | 6","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2717:1931":{"id":"0:2717:1931","crate_id":0,"name":"timestamp","span":{"filename":"src/format/parsed.rs","begin":[104,4],"end":[104,30]},"visibility":"public","docs":"The number of non-leap seconds since the midnight UTC on January 1, 1970.\n\nThis can be off by one if [`second`](#structfield.second) is 60 (a leap second).","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i64"}}],"bindings":[]}},"param_names":[]}}},"2:13034:12655":{"id":"2:13034:12655","crate_id":2,"name":"Searcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:13036:13842","2:13037:922","2:13038:62992","2:13039:62993"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2871:2127":{"id":"0:2871:2127","crate_id":0,"name":"ParseMonthError","span":{"filename":"src/lib.rs","begin":[1127,0],"end":[1129,1]},"visibility":"public","docs":"An error resulting from reading `<Month>` value with `FromStr`.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:3291:12723-0:2871:2127","a:2:9237:12747-0:2871:2127","a:2:3262:220-0:2871:2127","a:2:3250:211-0:2871:2127","a:2:9236:12748-0:2871:2127","b:2:3179-0:2871:2127","b:2:2856-0:2871:2127","b:2:2853-0:2871:2127","b:2:3983-0:2871:2127","b:2:3183-0:2871:2127","b:2:3189-0:2871:2127","b:2:3194-0:2871:2127","b:5:787-0:2871:2127","0:2873","0:2875","0:2876","0:2163"]}},"0:2845:2097":{"id":"0:2845:2097","crate_id":0,"name":"September","span":{"filename":"src/lib.rs","begin":[984,4],"end":[984,17]},"visibility":"default","docs":"September","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:13458:64538":{"id":"2:13458:64538","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"prim@char":"1:15910:6541","`DoubleEndedIterator`":"2:8425:120","str::matches":"1:15916:6546","self::pattern":"2:13015:6159"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatches","id":"2:49623:12678","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:12642","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:12642","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13040:12654","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6464:13446":{"id":"1:6464:13446","crate_id":1,"name":"ExitStatusExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6465:60250","1:6466:6951","1:6467:60251","1:6468:60252","1:6469:60253","1:6470:60254"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10564:13421","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:8579:157":{"id":"2:8579:157","crate_id":2,"name":"Iterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8580:2809","2:8581:922","2:8582:13025","2:8585:3343","2:8586:495","2:8588:13026","2:8591:13027","2:8592:13028","2:8593:13029","2:8594:5152","2:8596:13030","2:8598:13031","2:8599:13032","2:8601:841","2:8604:13033","2:8611:12101","2:8613:13034","2:8616:6168","2:8617:13035","2:8618:13036","2:8620:13037","2:8622:13038","2:8625:1301","2:8626:3580","2:8627:5676","2:8631:13039","2:8634:13040","2:8635:13041","2:8636:13042","2:8638:13043","2:8639:3581","2:8641:13044","2:8644:13045","2:8646:13046","2:8656:13047","2:8671:13048","2:8673:13049","2:8677:13050","2:8686:13051","2:8689:13052","2:8691:13053","2:8694:276","2:8701:294","2:8708:6283","2:8715:13054","2:8724:13055","2:8734:1014","2:8741:13056","2:8748:1934","2:8749:1933","2:8750:12627","2:8762:12626","2:8769:12625","2:8781:12624","2:8788:13057","2:8789:13058","2:8794:13059","2:8797:6163","2:8800:2984","2:8801:3487","2:8803:11955","2:8805:415","2:8808:13060","2:8811:997","2:8814:13061","2:8817:604","2:8820:13062","2:8823:907","2:8825:826","2:8827:792","2:8829:713","2:8831:696","2:8833:13063","2:8834:13064","2:8842:13065"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2180:2200":{"id":"0:2180:2200","crate_id":0,"name":"with_day0","span":{"filename":"src/lib.rs","begin":[1320,4],"end":[1320,51]},"visibility":"default","docs":"Makes a new value with the day of month (starting from 0) changed.\n\nReturns `None` when the resulting value would be invalid.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["day0",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:9237:12747-0:2729:2518":{"id":"a:2:9237:12747-0:2729:2518","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9237:12747","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2729:2518","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2179:2198":{"id":"0:2179:2198","crate_id":0,"name":"with_day","span":{"filename":"src/lib.rs","begin":[1315,4],"end":[1315,49]},"visibility":"default","docs":"Makes a new value with the day of month (starting from 1) changed.\n\nReturns `None` when the resulting value would be invalid.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["day",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:2853-0:1651:5501":{"id":"b:2:2853-0:1651:5501","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2847:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:1651:5501","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2855:2804"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2162:2125":{"id":"0:2162:2125","crate_id":0,"name":"from_u32","span":{"filename":"src/lib.rs","begin":[1106,4],"end":[1122,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["n",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Month","id":"0:2820:1906","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2789:1956":{"id":"0:2789:1956","crate_id":0,"name":"Fri","span":{"filename":"src/lib.rs","begin":[656,4],"end":[656,11]},"visibility":"default","docs":"Friday.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2534":{"id":"0:2534","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[81,31],"end":[81,36]},"visibility":{"restricted":{"parent":"0:1595:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10269:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2481:2810","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2535:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2211":{"id":"0:2211","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[29,16],"end":[29,25]},"visibility":{"restricted":{"parent":"0:206:957","path":"::offset"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralPartialEq","id":"2:3258:218","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2197:1896","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2667:907":{"id":"0:2667:907","crate_id":0,"name":"ne","span":{"filename":"src/format/mod.rs","begin":[320,23],"end":[320,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2657:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2210:408":{"id":"0:2210:408","crate_id":0,"name":"clone","span":{"filename":"src/offset/mod.rs","begin":[29,9],"end":[29,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2197:1896","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:791:13068":{"id":"5:791:13068","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["target",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2863":{"id":"0:2863","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[964,24],"end":[964,28]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3260:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Month","id":"0:2820:1906","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"5:6103:65176":{"id":"5:6103:65176","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:8359:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8359:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:265:2274":{"id":"0:265:2274","crate_id":0,"name":"ymd","span":{"filename":"src/offset/mod.rs","begin":[213,4],"end":[215,5]},"visibility":"default","docs":"Makes a new `Date` from year, month, day and the current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\n\nThe time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),\nbut it will propagate to the `DateTime` values constructed via this date.\n\nPanics on the out-of-range date, invalid month and/or day.\n\n# Example\n\n~~~~\nuse chrono::{Utc, TimeZone};\n\nassert_eq!(Utc.ymd(2015, 5, 15).to_string(), \"2015-05-15UTC\");\n~~~~","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["year",{"kind":"primitive","inner":"i32"}],["month",{"kind":"primitive","inner":"u32"}],["day",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Date","id":"0:2412:1876","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:7800:13556":{"id":"1:7800:13556","crate_id":1,"name":"Termination","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:7801:62284"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5652:13462":{"id":"1:5652:13462","crate_id":1,"name":"OsStringExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5653:60031","1:5654:14353"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10564:13421","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13404:13849":{"id":"2:13404:13849","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:15910:6541"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CharIndices","id":"2:49377:12666","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3183-0:2729:2518":{"id":"b:2:3183-0:2729:2518","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3156:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2729:2518","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:3185:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2713:5751":{"id":"0:2713:5751","crate_id":0,"name":"hour_mod_12","span":{"filename":"src/format/parsed.rs","begin":[90,4],"end":[90,32]},"visibility":"public","docs":"Hour number modulo 12 (0--11).","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u32"}}],"bindings":[]}},"param_names":[]}}},"b:2:3183-0:2617:2809":{"id":"b:2:3183-0:2617:2809","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3156:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2617:2809","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:3185:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:600:1877":{"id":"0:600:1877","crate_id":0,"name":"MAX_DATE","span":{"filename":"src/naive/date.rs","begin":[106,0],"end":[106,95]},"visibility":"public","docs":"The maximum possible `NaiveDate` (December 31, 262143 CE).","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2264:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"b:2:2856-0:2729:2518":{"id":"b:2:2856-0:2729:2518","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2850:12559","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2729:2518","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:2858:59480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"23:621:12588":{"id":"23:621:12588","crate_id":23,"name":"CheckedAdd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:622:3139"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Add","id":"2:3318:2703","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:1670:660":{"id":"0:1670:660","crate_id":0,"name":"fmt","span":{"filename":"src/format/mod.rs","begin":[359,4],"end":[369,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10229:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10218:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13431:18687":{"id":"2:13431:18687","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:15910:6541","self::pattern":"2:13015:6159"},"attrs":["#[stable(feature = \"split_inclusive\", since = \"1.51.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitInclusive","id":"2:12807:12661","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:12642","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2759:6451":{"id":"0:2759:6451","crate_id":0,"name":"DurationExceedsTimestamp","span":{"filename":"src/round.rs","begin":[218,4],"end":[218,28]},"visibility":"default","docs":"Error when the Duration exceeds the Duration from or until the Unix epoch.\n\n``` rust\n# use chrono::{DateTime, DurationRound, Duration, RoundingError, TimeZone, Utc};\nlet dt = Utc.ymd(1970, 12, 12).and_hms(0, 0, 0);\n\nassert_eq!(\n    dt.duration_round(Duration::days(365)),\n    Err(RoundingError::DurationExceedsTimestamp),\n);\n```","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:4764:13822":{"id":"2:4764:13822","crate_id":2,"name":"AsyncIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4765:2809","2:4766:63507","2:4767:3343"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:2855:2804":{"id":"2:2855:2804","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1154":{"id":"0:1154","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[560,4],"end":[560,34]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::time::NaiveTime","name":"NaiveTime","id":"0:2395:1893","glob":false}},"23:572:12587":{"id":"23:572:12587","crate_id":23,"name":"PrimInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:573:66008","23:574:66009","23:575:66010","23:576:49085","23:577:66011","23:578:66012","23:579:1118","23:580:1119","23:581:66013","23:582:66014","23:583:66015","23:584:66016","23:585:66017","23:586:18639","23:587:66018","23:588:66019","23:589:66020","23:590:66021","23:591:12564"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3260:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Num","id":"23:968:12509","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}},{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}},{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}},{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"NumCast","id":"23:362:12585","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Bounded","id":"23:237:12581","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"2:2948:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Ord","id":"2:2938:177","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2907:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Not","id":"2:3370:12534","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"BitAnd","id":"2:3377:12531","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"BitOr","id":"2:3382:12532","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"BitXor","id":"2:3387:12533","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Shl","id":"2:3392:12535","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Shr","id":"2:3398:12536","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"CheckedAdd","id":"23:621:12588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"CheckedSub","id":"23:624:12595","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"CheckedMul","id":"23:626:12590","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"CheckedDiv","id":"23:628:12589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Saturating","id":"23:768:12601","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2792:1958":{"id":"0:2792:1958","crate_id":0,"name":"Sat","span":{"filename":"src/lib.rs","begin":[658,4],"end":[658,11]},"visibility":"default","docs":"Saturday.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2628:5566":{"id":"0:2628:5566","crate_id":0,"name":"OwnedSpace","span":{"filename":"src/format/mod.rs","begin":[273,4],"end":[273,24]},"visibility":"default","docs":"Same as `Space` but with the string owned by the item.","links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:5441","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}]}},"0:2638:127":{"id":"0:2638:127","crate_id":0,"name":"Error","span":{"filename":"src/format/mod.rs","begin":[280,4],"end":[280,9]},"visibility":"default","docs":"Issues a formatting error. Used to signal an invalid format string.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2630:1533":{"id":"0:2630:1533","crate_id":0,"name":"0","span":{"filename":"src/format/mod.rs","begin":[273,15],"end":[273,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:5441","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}},"0:2083:1900":{"id":"0:2083:1900","crate_id":0,"name":"round","span":{"filename":"src/round.rs","begin":[4,0],"end":[456,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:2115:1903","0:2123:1901","0:2758:1902"],"is_stripped":true}},"0:2621:1533":{"id":"0:2621:1533","crate_id":0,"name":"0","span":{"filename":"src/format/mod.rs","begin":[265,12],"end":[265,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}},"b:2:3179-0:1651:5501":{"id":"b:2:3179-0:1651:5501","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3156:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3153:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:1651:5501","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3182:3385"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9237:12747-0:2481:2810":{"id":"a:2:9237:12747-0:2481:2810","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9237:12747","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2481:2810","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:284:2663":{"id":"0:284:2663","crate_id":0,"name":"offset_from_utc_date","span":{"filename":"src/offset/mod.rs","begin":[446,4],"end":[446,68]},"visibility":"default","docs":"Creates the offset for given UTC `NaiveDate`. This cannot fail.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["utc",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2264:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"qualified_path","inner":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:263:1898","args":null,"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"23:805:12610":{"id":"23:805:12610","crate_id":23,"name":"WrappingSub","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:806:1520"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sub","id":"2:3323:2704","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2622:5563":{"id":"0:2622:5563","crate_id":0,"name":"OwnedLiteral","span":{"filename":"src/format/mod.rs","begin":[268,4],"end":[268,26]},"visibility":"default","docs":"Same as `Literal` but with the string owned by the item.","links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:5441","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}]}},"2:10219:5650":{"id":"2:10219:5650","crate_id":2,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10220:1524","2:10221:13394","2:10223:12842"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3189-0:2617:2809":{"id":"b:2:3189-0:2617:2809","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3163:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3159:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2617:2809","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:3192:127","2:3193:1409"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2703:5736":{"id":"0:2703:5736","crate_id":0,"name":"isoyear_div_100","span":{"filename":"src/format/parsed.rs","begin":[56,4],"end":[56,36]},"visibility":"public","docs":"Year in the [ISO week date](../naive/struct.NaiveDate.html#week-date), divided by 100.\nImplies that the year is >= 1 BCE when set.\n\nDue to the common usage, if this field is missing but\n[`isoyear_mod_100`](#structfield.isoyear_mod_100) is present,\nit is inferred to 19 when `isoyear_mod_100 >= 70` and 20 otherwise.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i32"}}],"bindings":[]}},"param_names":[]}}},"a:2:3250:211-0:2197:1896":{"id":"a:2:3250:211-0:2197:1896","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3250:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3250:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2197:1896","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2853-0:2871:2127":{"id":"b:2:2853-0:2871:2127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2847:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseMonthError","id":"0:2871:2127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2855:2804"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3197:127":{"id":"2:3197:127","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Infallible","id":"2:38750:12695","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"2:10269:109":{"id":"2:10269:109","crate_id":2,"name":"Debug","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10270:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2643":{"id":"0:2643","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[262,16],"end":[262,25]},"visibility":{"restricted":{"parent":"0:1595:671","path":"::format"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralPartialEq","id":"2:3258:218","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Item","id":"0:2617:2809","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:4032:12699":{"id":"2:4032:12699","crate_id":2,"name":"Provider","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4033:13385"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"22:37:12511":{"id":"22:37:12511","crate_id":22,"name":"Roots","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["22:38:12513","22:39:12514","22:40:12512"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Integer","id":"22:109:12496","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2800:604":{"id":"0:2800:604","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[644,9],"end":[644,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2776:1908","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:278:2655":{"id":"0:278:2655","crate_id":0,"name":"offset_from_local_date","span":{"filename":"src/offset/mod.rs","begin":[426,4],"end":[426,85]},"visibility":"default","docs":"Creates the offset(s) for given local `NaiveDate` if possible.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["local",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"NaiveDate","id":"0:2264:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2197:1896","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:263:1898","args":null,"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"5:789:12561":{"id":"5:789:12561","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"a:2:9237:12747-0:2536:3587":{"id":"a:2:9237:12747-0:2536:3587","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9237:12747","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2536:3587","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3179-0:2481:2810":{"id":"b:2:3179-0:2481:2810","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3156:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3153:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2481:2810","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3182:3385"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2156:1968":{"id":"0:2156:1968","crate_id":0,"name":"pred","span":{"filename":"src/lib.rs","begin":[1023,4],"end":[1038,5]},"visibility":"public","docs":"The previous month.\n\n`m`:        | `January`  | `February` | `...` | `December`\n----------- | ---------  | ---------- | --- | ---------\n`m.succ()`: | `December` | `January`  | `...` | `November`","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Month","id":"0:2820:1906","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3259:217":{"id":"2:3259:217","crate_id":2,"name":"StructuralEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2820:1906":{"id":"0:2820:1906","crate_id":0,"name":"Month","span":{"filename":"src/lib.rs","begin":[966,0],"end":[991,1]},"visibility":"public","docs":"The month of the year.\n\nThis enum is just a convenience implementation.\nThe month in dates created by DateLike objects does not return this enum.\n\nIt is possible to convert from a date to a month independently\n```\n# extern crate num_traits;\nuse num_traits::FromPrimitive;\nuse chrono::prelude::*;\nlet date = Utc.ymd(2019, 10, 28).and_hms(9, 10, 11);\n// `2019-10-28T09:10:11Z`\nlet month = Month::from_u32(date.month());\nassert_eq!(month, Some(Month::October))\n```\nOr from a Month to an integer usable by dates\n```\n# use chrono::prelude::*;\nlet month = Month::January;\nlet dt = Utc.ymd(2019, month.number_from_month(), 28).and_hms(9, 10, 11);\nassert_eq!((dt.year(), dt.month(), dt.day()), (2019, 1, 28));\n```\nAllows mapping from and to month, from 1-January to 12-December.\nCan be Serialized/Deserialized with serde","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:2821:2081","0:2824:2083","0:2827:2085","0:2830:2087","0:2833:2089","0:2836:2091","0:2839:2093","0:2842:2095","0:2845:2097","0:2848:2099","0:2851:2101","0:2854:2104"],"impls":["0:2154","a:2:3291:12723-0:2820:1906","a:2:9237:12747-0:2820:1906","a:2:3262:220-0:2820:1906","a:2:3250:211-0:2820:1906","a:2:9236:12748-0:2820:1906","b:2:3179-0:2820:1906","b:2:2856-0:2820:1906","b:2:2853-0:2820:1906","b:2:3983-0:2820:1906","b:2:3183-0:2820:1906","b:2:3189-0:2820:1906","b:2:3194-0:2820:1906","b:5:787-0:2820:1906","0:2080","0:2857","0:2858","0:2860","0:2861","0:2863","0:2864","0:2866","0:2868","0:2159"]}},"2:13481:18081":{"id":"2:13481:18081","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:15910:6541","self::pattern":"2:13015:6159"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:12642","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2736":{"id":"0:2736","crate_id":0,"name":null,"span":{"filename":"src/format/strftime.rs","begin":[201,9],"end":[201,14]},"visibility":{"restricted":{"parent":"0:2022:5443","path":"::format::strftime"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StrftimeItems","id":"0:2729:2518","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["0:2738:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1145":{"id":"0:1145","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[558,44],"end":[558,56]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::datetime::MAX_DATETIME","name":"MAX_DATETIME","id":"0:801:1883","glob":false}},"0:2836:2091":{"id":"0:2836:2091","crate_id":0,"name":"June","span":{"filename":"src/lib.rs","begin":[978,4],"end":[978,12]},"visibility":"default","docs":"June","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"23:2514:12583":{"id":"23:2514:12583","crate_id":23,"name":"FloatConst","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:2515:2011","23:2516:20270","23:2517:20274","23:2518:20271","23:2519:20272","23:2520:20265","23:2521:20266","23:2522:20267","23:2523:20268","23:2524:20269","23:2525:20280","23:2526:20279","23:2527:20277","23:2528:20275","23:2529:20263","23:2530:20273","23:2531:20264","23:2532:20278","23:2533:20276"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2139:1968":{"id":"0:2139:1968","crate_id":0,"name":"pred","span":{"filename":"src/lib.rs","begin":[688,4],"end":[698,5]},"visibility":"public","docs":"The previous day in the week.\n\n`w`:        | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun`\n----------- | ----- | ----- | ----- | ----- | ----- | ----- | -----\n`w.pred()`: | `Sun` | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat`","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2776:1908","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"23:810:12607":{"id":"23:810:12607","crate_id":23,"name":"WrappingNeg","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:811:18747"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2821:2081":{"id":"0:2821:2081","crate_id":0,"name":"January","span":{"filename":"src/lib.rs","begin":[968,4],"end":[968,15]},"visibility":"default","docs":"January","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2164:660":{"id":"0:2164:660","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[1132,4],"end":[1134,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10229:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10218:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2662":{"id":"0:2662","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[320,16],"end":[320,21]},"visibility":{"restricted":{"parent":"0:1595:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2657:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2663:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2710:2183":{"id":"0:2710:2183","crate_id":0,"name":"ordinal","span":{"filename":"src/format/parsed.rs","begin":[81,4],"end":[81,28]},"visibility":"public","docs":"Day of the year (1--365 or 1--366 depending on the year).","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u32"}}],"bindings":[]}},"param_names":[]}}},"2:13461:64539":{"id":"2:13461:64539","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:13015:6159","prim@char":"1:15910:6541","`DoubleEndedIterator`":"2:8425:120","str::rmatch_indices":"1:15916:6546"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"MatchIndices","id":"2:49551:12675","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:12642","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1642":{"id":"0:1642","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[42,0],"end":[42,27]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::parse::parse","name":"parse","id":"0:1933:2013","glob":false}},"b:5:787-0:2812:1993":{"id":"b:5:787-0:2812:1993","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:2812:1993","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:789:12561","5:790:13067","5:791:13068"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"23:768:12601":{"id":"23:768:12601","crate_id":23,"name":"Saturating","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:769:1220","23:770:1221"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3183-0:1651:5501":{"id":"b:2:3183-0:1651:5501","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3156:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:1651:5501","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3185:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:178":{"id":"0:178","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[524,24],"end":[524,37]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"NaiveDateTime","name":"NaiveDateTime","id":"0:2325:1892","glob":false}},"0:1142":{"id":"0:1142","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[558,29],"end":[558,42]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::datetime::NaiveDateTime","name":"NaiveDateTime","id":"0:2325:1892","glob":false}},"23:684:12600":{"id":"23:684:12600","crate_id":23,"name":"MulAddAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:687:65748"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2144":{"id":"0:2144","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[773,0],"end":[785,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10276:119","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2776:1908","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2145:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2729:2518":{"id":"0:2729:2518","crate_id":0,"name":"StrftimeItems","span":{"filename":"src/format/strftime.rs","begin":[202,0],"end":[215,1]},"visibility":"public","docs":"Parsing iterator for `strftime`-like format strings.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:2047","a:2:3291:12723-0:2729:2518","a:2:9237:12747-0:2729:2518","a:2:3262:220-0:2729:2518","a:2:3250:211-0:2729:2518","a:2:9236:12748-0:2729:2518","b:2:3179-0:2729:2518","b:2:2856-0:2729:2518","b:2:2853-0:2729:2518","b:2:3983-0:2729:2518","b:2:3183-0:2729:2518","b:2:3189-0:2729:2518","b:2:3194-0:2729:2518","b:2:8385-0:2729:2518","b:5:787-0:2729:2518","0:2736","0:2739","0:2054"]}},"0:2158:899":{"id":"0:2158:899","crate_id":0,"name":"name","span":{"filename":"src/lib.rs","begin":[1070,4],"end":[1085,5]},"visibility":"public","docs":"Get the name of the month\n\n```\nuse chrono::Month;\n\nassert_eq!(Month::January.name(), \"January\")\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'static","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3983-0:2463:2811":{"id":"b:2:3983-0:2463:2811","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3981:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Pad","id":"0:2463:2811","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3985:1421"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13417:60816":{"id":"2:13417:60816","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"self::pattern":"2:13015:6159","prim@char":"1:15910:6541"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:12642","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:12642","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13040:12654","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13384:64530":{"id":"2:13384:64530","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"1:15916:6546"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3194-0:2657:1887":{"id":"b:2:3194-0:2657:1887","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3153:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3163:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2657:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3197:127","2:3198:1408"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9236:12748-0:2536:3587":{"id":"a:2:9236:12748-0:2536:3587","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9236:12748","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2536:3587","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9236:12748-0:2481:2810":{"id":"a:2:9236:12748-0:2481:2810","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9236:12748","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2481:2810","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3349:2805":{"id":"2:3349:2805","crate_id":2,"name":"AddAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3351:266"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9236:12748-0:1651:5501":{"id":"a:2:9236:12748-0:1651:5501","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9236:12748","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:1651:5501","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:2948:184":{"id":"2:2948:184","crate_id":2,"name":"PartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2950:997","2:2951:826","2:2952:792","2:2953:713","2:2954:696"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2902:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3983-0:2197:1896":{"id":"b:2:3983-0:2197:1896","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3981:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2197:1896","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["2:3985:1421"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2595":{"id":"0:2595","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[237,34],"end":[237,36]},"visibility":{"restricted":{"parent":"0:1595:671","path":"::format"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralEq","id":"2:3259:217","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2585:5546","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3153:149":{"id":"2:3153:149","crate_id":2,"name":"Into","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3155:3385"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13440:64535":{"id":"2:13440:64535","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"prim@char":"1:15910:6541","str::split_terminator":"1:15916:6546","str::split":"1:15916:6546","self::pattern":"2:13015:6159"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitTerminator","id":"2:49469:12683","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:12642","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:12642","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13040:12654","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2506:5483":{"id":"0:2506:5483","crate_id":0,"name":"WeekdayFromMon","span":{"filename":"src/format/mod.rs","begin":[110,4],"end":[110,18]},"visibility":"default","docs":"Day of the week, where Monday = 1 and Sunday = 7 (FW=PW=1).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2812:1993":{"id":"0:2812:1993","crate_id":0,"name":"ParseWeekdayError","span":{"filename":"src/lib.rs","begin":[824,0],"end":[826,1]},"visibility":"public","docs":"An error resulting from reading `Weekday` value with `FromStr`.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:3291:12723-0:2812:1993","a:2:9237:12747-0:2812:1993","a:2:3262:220-0:2812:1993","a:2:3250:211-0:2812:1993","a:2:9236:12748-0:2812:1993","b:2:3179-0:2812:1993","b:2:2856-0:2812:1993","b:2:2853-0:2812:1993","b:2:3983-0:2812:1993","b:2:3183-0:2812:1993","b:2:3189-0:2812:1993","b:2:3194-0:2812:1993","b:5:787-0:2812:1993","0:2814","0:2816","0:2817","0:2152"]}},"0:1667:1888":{"id":"0:1667:1888","crate_id":0,"name":"ParseResult","span":{"filename":"src/format/mod.rs","begin":[356,0],"end":[356,48]},"visibility":"public","docs":"Same as `Result<T, ParseError>`.","links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47564:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2657:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}},"0:2865:408":{"id":"0:2865:408","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[964,30],"end":[964,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Month","id":"0:2820:1906","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3398:12536":{"id":"2:3398:12536","crate_id":2,"name":"Shr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3400:181","2:3401:1229"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6091:5628":{"id":"5:6091:5628","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:8359:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8359:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2153:660":{"id":"0:2153:660","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[829,4],"end":[831,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10229:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10218:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2814":{"id":"0:2814","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[823,9],"end":[823,14]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseWeekdayError","id":"0:2812:1993","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2815:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"22:109:12496":{"id":"22:109:12496","crate_id":22,"name":"Integer","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["22:110:2497","22:111:2500","22:112:12498","22:113:12499","22:114:12500","22:115:12501","22:116:65473","22:118:65466","22:119:65467","22:120:65468","22:121:65469","22:122:65470","22:123:2499","22:124:2498","22:125:65471","22:126:65472"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Num","id":"23:968:12509","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"2:2948:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Ord","id":"2:2938:177","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2907:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:248:841":{"id":"0:248:841","crate_id":0,"name":"map","span":{"filename":"src/offset/mod.rs","begin":[67,4],"end":[73,5]},"visibility":"public","docs":"Maps a `LocalResult<T>` into `LocalResult<U>` with given function.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2197:1896","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnMut","id":"2:3503:131","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"T"}],"output":{"kind":"generic","inner":"U"}}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2786:1954":{"id":"0:2786:1954","crate_id":0,"name":"Thu","span":{"filename":"src/lib.rs","begin":[654,4],"end":[654,11]},"visibility":"default","docs":"Thursday.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2189:2233":{"id":"0:2189:2233","crate_id":0,"name":"nanosecond","span":{"filename":"src/lib.rs","begin":[1388,4],"end":[1388,32]},"visibility":"default","docs":"Returns the number of nanoseconds since the whole non-leap second.\nThe range from 1,000,000,000 to 1,999,999,999 represents\nthe [leap second](./naive/struct.NaiveTime.html#leap-second-handling).","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:3179-0:2197:1896":{"id":"b:2:3179-0:2197:1896","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3156:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3153:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2197:1896","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["2:3182:3385"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:5732:13409":{"id":"1:5732:13409","crate_id":1,"name":"PermissionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5733:12440","1:5734:60151","1:5735:60152"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3486:12542":{"id":"2:3486:12542","crate_id":2,"name":"DerefMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3487:545"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Deref","id":"2:3473:116","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3392:12535":{"id":"2:3392:12535","crate_id":2,"name":"Shl","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3394:181","2:3395:1226"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"23:626:12590":{"id":"23:626:12590","crate_id":23,"name":"CheckedMul","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:627:4570"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Mul","id":"2:3328:12525","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"5:6107:59491":{"id":"5:6107:59491","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"1:15916:6546"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8359:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2707:5654":{"id":"0:2707:5654","crate_id":0,"name":"week_from_mon","span":{"filename":"src/format/parsed.rs","begin":[71,4],"end":[71,34]},"visibility":"public","docs":"Week number, where the week 1 starts at the first Monday of January\n(0--53, 1--53 or 1--52 depending on the year).","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u32"}}],"bindings":[]}},"param_names":[]}}},"0:151":{"id":"0:151","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[518,23],"end":[518,36]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"SecondsFormat","name":"SecondsFormat","id":"0:2419:1882","glob":false}},"2:3328:12525":{"id":"2:3328:12525","crate_id":2,"name":"Mul","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3330:181","2:3331:892"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13408:14606":{"id":"2:13408:14606","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are ended with either a newline (`\\n`) or a carriage return with\na line feed (`\\r\\n`).\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Lines","id":"2:49655:12673","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13443:61183":{"id":"2:13443:61183","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:15910:6541","str::rsplitn":"1:15916:6546","self::pattern":"2:13015:6159"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"2:49505:12682","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:12642","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:247:2532":{"id":"0:247:2532","crate_id":0,"name":"latest","span":{"filename":"src/offset/mod.rs","begin":[59,4],"end":[64,5]},"visibility":"public","docs":"Returns `Some` for the latest possible conversion result, or `None` if none.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2798":{"id":"0:2798","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[644,9],"end":[644,18]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralPartialEq","id":"2:3258:218","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Weekday","id":"0:2776:1908","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2508:5485":{"id":"0:2508:5485","crate_id":0,"name":"Ordinal","span":{"filename":"src/format/mod.rs","begin":[112,4],"end":[112,11]},"visibility":"default","docs":"Day of the year (FW=PW=3).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:2854:2104":{"id":"0:2854:2104","crate_id":0,"name":"December","span":{"filename":"src/lib.rs","begin":[990,4],"end":[990,17]},"visibility":"default","docs":"December","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:13387:5917":{"id":"2:13387:5917","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:12486:12663"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"str_as_bytes\", since = \"1.39.0\")]","#[must_use]","#[allow(unused_attributes)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2227":{"id":"0:2227","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[29,44],"end":[29,48]},"visibility":{"restricted":{"parent":"0:206:957","path":"::offset"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"$crate::hash::Hash","id":"2:10507:142","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"kind":"resolved_path","inner":{"name":"Hash","id":"2:10507:142","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"LocalResult","id":"0:2197:1896","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["0:2229:715"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2176:2192":{"id":"0:2176:2192","crate_id":0,"name":"with_year","span":{"filename":"src/lib.rs","begin":[1300,4],"end":[1300,51]},"visibility":"default","docs":"Makes a new value with the year number changed.\n\nReturns `None` when the resulting value would be invalid.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["year",{"kind":"primitive","inner":"i32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:3291:12723-0:2481:2810":{"id":"a:2:3291:12723-0:2481:2810","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3291:12723","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Numeric","id":"0:2481:2810","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2587":{"id":"0:2587","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[237,9],"end":[237,14]},"visibility":{"restricted":{"parent":"0:1595:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10269:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2585:5546","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2588:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3291:12723":{"id":"2:3291:12723","crate_id":2,"name":"Unpin","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2182:2204":{"id":"0:2182:2204","crate_id":0,"name":"with_ordinal0","span":{"filename":"src/lib.rs","begin":[1330,4],"end":[1330,59]},"visibility":"default","docs":"Makes a new value with the day of year (starting from 0) changed.\n\nReturns `None` when the resulting value would be invalid.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["ordinal0",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:3291:12723-0:1651:5501":{"id":"a:2:3291:12723-0:1651:5501","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3291:12723","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:1651:5501","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2115:1903":{"id":"0:2115:1903","crate_id":0,"name":"SubsecRound","span":{"filename":"src/round.rs","begin":[21,0],"end":[46,1]},"visibility":"public","docs":"Extension trait for subsecond rounding or truncation to a maximum number\nof digits. Rounding can be used to decrease the error variance when\nserializing/persisting to lower precision. Truncation is the default\nbehavior in Chrono display formatting.  Either can be used to guarantee\nequality (e.g. for testing) when round-tripping through a lower precision\nformat.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:2116:6416","0:2117:6421"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3194-0:2748:2808":{"id":"b:2:3194-0:2748:2808","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3153:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3163:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2748:2808","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}},"param_names":[]}},"items":["2:3197:127","2:3198:1408"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1671":{"id":"0:1671","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[373,0],"end":[378,1]},"visibility":{"restricted":{"parent":"0:1595:671","path":"::format"}},"docs":null,"links":{},"attrs":["#[cfg(any(feature = \"std\", test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["backtrace","type_id","cause","source","description","provide"],"trait":{"kind":"resolved_path","inner":{"name":"Error","id":"1:2576:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:2657:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1672:5607"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:489":{"id":"0:489","crate_id":0,"name":null,"span":{"filename":"src/offset/mod.rs","begin":[469,0],"end":[469,33]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::fixed::FixedOffset","name":"FixedOffset","id":"0:2231:1895","glob":false}},"2:22799:14000":{"id":"2:22799:14000","crate_id":2,"name":"SimdUint","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:22800:63420","2:22801:1220","2:22802:1221","2:22803:63421","2:22804:63422","2:22805:63423","2:22806:63424","2:22807:63425","2:22808:63426","2:22809:63427"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3260:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:22812:13421","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:1655":{"id":"0:1655","crate_id":0,"name":null,"span":{"filename":"src/format/mod.rs","begin":[147,0],"end":[151,1]},"visibility":{"restricted":{"parent":"0:1595:671","path":"::format"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2902:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:1651:5501","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalNumeric","id":"0:1651:5501","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1656:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3189-0:2748:2808":{"id":"b:2:3189-0:2748:2808","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3163:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3159:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2748:2808","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}},"param_names":[]}},"items":["2:3192:127","2:3193:1409"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2575:408":{"id":"0:2575:408","crate_id":0,"name":"clone","span":{"filename":"src/format/mod.rs","begin":[165,9],"end":[165,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Fixed","id":"0:2536:3587","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13406:18688":{"id":"2:13406:18688","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_ascii_whitespace":"1:15916:6546"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_whitespace\", since = \"1.1.0\")]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitWhitespace","id":"2:49675:12662","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3250:211-0:2748:2808":{"id":"a:2:3250:211-0:2748:2808","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3250:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3250:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"DelayedFormat","id":"0:2748:2808","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2177:2194":{"id":"0:2177:2194","crate_id":0,"name":"with_month","span":{"filename":"src/lib.rs","begin":[1305,4],"end":[1305,53]},"visibility":"default","docs":"Makes a new value with the month number (starting from 1) changed.\n\nReturns `None` when the resulting value would be invalid.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["month",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:9236:12748-0:2585:5546":{"id":"a:2:9236:12748-0:2585:5546","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9236:12748","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2585:5546","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2856-0:2585:5546":{"id":"b:2:2856-0:2585:5546","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2850:12559","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InternalFixed","id":"0:2585:5546","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2858:59480"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:6795:13449":{"id":"1:6795:13449","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6796:17209"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10564:13421","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3255:2164":{"id":"2:3255:2164","crate_id":2,"name":"Sized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}}},"paths":{"2:45966:12549":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"21:5378:10734":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"2:51063:13974":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"2:53472:16944":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"21:4402:10122":{"crate_id":21,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"16:6999:14804":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"12:354:17010":{"crate_id":12,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"21:5945:7900":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"23:998:12571":{"crate_id":23,"path":["num_traits","NumAssignRef"],"kind":"trait"},"17:10140:15014":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"16:3064:14971":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"6:4377:10118":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"2:51431:13984":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"9:722:14428":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLFlush"],"kind":"enum"},"21:6804:11679":{"crate_id":21,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"17:9729:65450":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"2:52185:13977":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"16:6569:14943":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"0:2468:3377":{"crate_id":0,"path":["chrono","format","Pad","Space"],"kind":"variant"},"16:5960:14668":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"1:7260:17200":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"17:13386:16602":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"22:127:2499":{"crate_id":22,"path":["num_integer","div_rem"],"kind":"function"},"16:4535:15416":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"2:51808:15769":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"1:6795:13449":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"17:11254:15037":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"17:11604:16171":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"2:46008:13142":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"1:8479:202":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"14:56:16161":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"2:52377:13954":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"16:6152:14741":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"17:11482:16161":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"1:9144:12740":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"2:6611:63532":{"crate_id":2,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"2:46653:13809":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"6:5191:10720":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"17:12327:16294":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"0:263:1898":{"crate_id":0,"path":["chrono","offset","TimeZone"],"kind":"trait"},"18:644:15111":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"2:13743:150":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"2:53358:16936":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"2:24174:17018":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"12:463:17514":{"crate_id":12,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"17:11519:16166":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"21:3943:10072":{"crate_id":21,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"2:2902:183":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"2:48792:17038":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"6:1563:7968":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"0:2795:1960":{"crate_id":0,"path":["chrono","Weekday","Sun"],"kind":"variant"},"17:13192:16555":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"1:11504:13508":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"0:2827:2085":{"crate_id":0,"path":["chrono","Month","March"],"kind":"variant"},"5:5315:200":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"21:4052:10085":{"crate_id":21,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"1:15913:6543":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"21:6177:11151":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"21:504:7075":{"crate_id":21,"path":["libc","unix","group"],"kind":"struct"},"17:10468:15011":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"17:13554:16648":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"2:9237:12747":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"17:9886:17118":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"2:13025:12642":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"17:11767:16197":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"6:4281:10106":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"16:7264:14757":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"23:311:2807":{"crate_id":23,"path":["num_traits","cast","ToPrimitive"],"kind":"trait"},"2:46662:13795":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"5:1635:13525":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"2:51336:15767":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"17:10529:16992":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"17:12756:16384":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"17:12480:16337":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"16:6269:14791":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"2:46644:13794":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"2:49605:12677":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"16:3145:14924":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"1:14715:17204":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"1:10807:13416":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"21:4417:10124":{"crate_id":21,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"6:519:7076":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"6:6893:10260":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"21:5399:10736":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"17:12307:16293":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"17:10571:17136":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"6:6100:11146":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"16:7360:194":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"2:51462:13988":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"16:3714:15404":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"17:13574:16654":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"6:5228:10724":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"2:24458:173":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"1:699:13606":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"1:10675:22102":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"2:25202:12601":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"2:52989:13986":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"2:46532:12692":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"12:112:17513":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"1:5790:13412":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"21:4451:10128":{"crate_id":21,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"2:53393:16939":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"17:9296:15370":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"22:0:1863":{"crate_id":22,"path":["num_integer"],"kind":"module"},"1:1505:13530":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"16:4790:15423":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"2:23096:13951":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"2:3793:12556":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"17:13377:16601":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"17:11726:16187":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"2:6415:13791":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"6:610:7087":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"1:9302:2407":{"crate_id":1,"path":["std","time","UNIX_EPOCH"],"kind":"constant"},"0:2561:5150":{"crate_id":0,"path":["chrono","format","Fixed","TimezoneOffsetColonZ"],"kind":"variant"},"21:4175:10097":{"crate_id":21,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"12:181:14565":{"crate_id":12,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"5:4443:13355":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"21:6192:11152":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"21:524:2780":{"crate_id":21,"path":["libc","unix","timespec"],"kind":"struct"},"6:6923:11705":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"2:57617:16946":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"23:990:12569":{"crate_id":23,"path":["num_traits","NumAssignOps"],"kind":"trait"},"22:145:12504":{"crate_id":22,"path":["num_integer","IterBinomial"],"kind":"struct"},"16:7971:127":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"1:4604:13158":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"0:2482:3375":{"crate_id":0,"path":["chrono","format","Numeric","Year"],"kind":"variant"},"1:10790:13467":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"9:234:14451":{"crate_id":9,"path":["miniz_oxide","deflate","core","HuffmanOxide"],"kind":"struct"},"1:6704:12375":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"1:15911:6542":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"21:3860:10066":{"crate_id":21,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"17:0:6524":{"crate_id":17,"path":["object"],"kind":"module"},"21:4486:10131":{"crate_id":21,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"17:12195:16275":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"2:2847:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"23:978:12567":{"crate_id":23,"path":["num_traits","NumRef"],"kind":"trait"},"2:23830:14168":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"6:591:7084":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"2:9740:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"16:4614:15417":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"21:1546:7967":{"crate_id":21,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"2:13778:62938":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"21:5420:10739":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"2:2907:124":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"2:8340:13875":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"5:1685:194":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"22:266:12497":{"crate_id":22,"path":["num_integer","ExtendedGcd"],"kind":"struct"},"17:13564:16651":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"17:12142:16267":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"5:4515:14364":{"crate_id":5,"path":["alloc","collections","vec_deque","pair_slices","PairSlices"],"kind":"struct"},"1:4688:5650":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"1:2460:17197":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"17:11458:16160":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"18:677:142":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"1:1511:13531":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"21:4119:10093":{"crate_id":21,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"17:299:17109":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"17:9186:15002":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"2:3228:115":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"2:1944:2466":{"crate_id":2,"path":["core","mem"],"kind":"module"},"17:13154:16544":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"1:14494:13415":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"2:4047:12698":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"21:5183:10720":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"2:8860:13357":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"2:3150:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"1:10943:13185":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"17:13205:16560":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"5:7815:15233":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"5:1560:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"17:12725:16378":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"1:7737:13552":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"1:4475:13189":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"21:5122:10675":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"16:6718:14946":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"0:1736:671":{"crate_id":0,"path":["chrono","format","format"],"kind":"function"},"21:5961:6954":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"17:9809:65451":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"6:5386:10734":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"5:2553:14383":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"1:12671:13639":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"0:2498:5476":{"crate_id":0,"path":["chrono","format","Numeric","WeekFromSun"],"kind":"variant"},"2:50129:14151":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"21:4065:10087":{"crate_id":21,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"21:4015:10080":{"crate_id":21,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"17:12685:16373":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"2:2267:13900":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"2:47487:13356":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"5:3370:13486":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"2:56277:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:24594:169":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"1:11603:13513":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"16:6219:14789":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"2:2850:12559":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"16:6807:14803":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"7:38:49363":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"5:8167:14278":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"23:630:12592":{"crate_id":23,"path":["num_traits","ops","checked","CheckedRem"],"kind":"trait"},"23:768:12601":{"crate_id":23,"path":["num_traits","ops","saturating","Saturating"],"kind":"trait"},"5:1597:13355":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"2:4032:12699":{"crate_id":2,"path":["core","any","Provider"],"kind":"trait"},"6:4127:10093":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"17:12247:16282":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"17:12385:16320":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"5:4306:13356":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"6:4095:10089":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"1:12181:13581":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"6:4511:10133":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"17:12118:16265":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"23:679:12599":{"crate_id":23,"path":["num_traits","ops","mul_add","MulAdd"],"kind":"trait"},"17:10001:51441":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"17:10975:17152":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"2:53280:13993":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"17:11045:51395":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"16:3392:14926":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"6:5522:10771":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"16:5522:14646":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"16:5632:14651":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"16:5707:14653":{"crate_id":16,"path":["gimli","read","cfi","UninitializedUnwindContext"],"kind":"struct"},"1:8137:13629":{"crate_id":1,"path":["std","sync","mpsc","shared","Packet"],"kind":"struct"},"2:49693:12659":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"16:7549:14750":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"17:11358:14997":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"22:129:2497":{"crate_id":22,"path":["num_integer","div_floor"],"kind":"function"},"22:37:12511":{"crate_id":22,"path":["num_integer","roots","Roots"],"kind":"trait"},"1:15140:13479":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"17:10864:16154":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"2:3408:12538":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"6:1736:7984":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"1:10839:118":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"17:12442:16332":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"16:4641:15418":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"18:896:15107":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"1:8393:13508":{"crate_id":1,"path":["std","sync","mpsc","sync","State"],"kind":"struct"},"12:377:14564":{"crate_id":12,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"2:3278:12722":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"5:4643:15225":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"16:6208:14788":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"17:9368:15371":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"21:4044:10084":{"crate_id":21,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"17:13331:16589":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"1:5732:13409":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"0:2555:5148":{"crate_id":0,"path":["chrono","format","Fixed","Nanosecond9"],"kind":"variant"},"17:8954:15004":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"5:8159:194":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"2:10902:13421":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"11:0:6519":{"crate_id":11,"path":["adler"],"kind":"module"},"1:15245:13436":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"16:3549:16792":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"2:3163:227":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"17:13963:16773":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"0:1680:5617":{"crate_id":0,"path":["chrono","format","format_item"],"kind":"function"},"1:10426:15267":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"1:11111:13174":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"12:866:12633":{"crate_id":12,"path":["hashbrown","map","Drain"],"kind":"struct"},"2:24798:164":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"12:396:14563":{"crate_id":12,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"1:1655:13538":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"1:15922:6550":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"2:46713:13804":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"1:13875:13552":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"21:5970:11141":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"2:77:1482":{"crate_id":2,"path":["core","usize"],"kind":"module"},"5:5875:15229":{"crate_id":5,"path":["alloc","slice","insert_head","InsertionHole"],"kind":"struct"},"17:13272:16577":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"16:4417:15412":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"17:13477:16625":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"20:405:121":{"crate_id":20,"path":["time","duration","Duration"],"kind":"struct"},"5:7771:234":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"2:48464:133":{"crate_id":2,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"1:14554:60034":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"0:0:2304":{"crate_id":0,"path":["chrono"],"kind":"module"},"17:13810:16732":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"2:5389:12635":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"2:5011:13143":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"17:9332:14995":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"6:157:6744":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"1:11118:12665":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"2:10290:12711":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"9:1020:14493":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"17:13446:16617":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"1:10451:15269":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"17:12582:16352":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"1:12067:13596":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"21:5304:10729":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"1:8294:13629":{"crate_id":1,"path":["std","sync","mpsc","stream","Packet"],"kind":"struct"},"17:10317:14993":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"1:11614:13514":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"1:7122:12735":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"5:3336:13487":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"2:3398:12536":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"2:46503:17186":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"21:6092:11146":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"5:920:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"2:3416:12540":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"21:3897:10069":{"crate_id":21,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"5:4599:15223":{"crate_id":5,"path":["alloc","collections","vec_deque","spec_extend","spec_extend","WrapAddOnDrop"],"kind":"struct"},"6:4013:10079":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"5:3362:13488":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"2:50141:14147":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"12:1651:14569":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"5:3040:16854":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"1:9068:13568":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"6:4478:10130":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"2:3981:68":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"21:6168:11150":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"5:8454:14324":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"2:5608:779":{"crate_id":2,"path":["core","iter"],"kind":"module"},"21:5247:10704":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"17:13054:16506":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"2:8377:136":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"2:50137:14146":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"21:4093:10090":{"crate_id":21,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"5:8382:12631":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"17:12287:16287":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"5:1011:13355":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"2:51255:13963":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"1:12176:13716":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"16:7823:14753":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"1:8493:13595":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"23:755:58037":{"crate_id":23,"path":["num_traits","ops","overflowing","OverflowingMul"],"kind":"trait"},"17:11015:17155":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"6:4272:10105":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"9:749:14429":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLStatus"],"kind":"enum"},"21:4025:10081":{"crate_id":21,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"16:7158:14807":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"1:14160:13189":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"17:11665:16181":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"1:11269:15836":{"crate_id":1,"path":["std","net","parser","AddrParseError"],"kind":"struct"},"6:4112:10091":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"2:11402:14118":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"21:4125:10094":{"crate_id":21,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"16:4477:15414":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"2:2171:578":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"1:13700:13558":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"1:11191:13434":{"crate_id":1,"path":["std","net","ip","Ipv4Addr"],"kind":"struct"},"16:7928:2008":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"23:628:12589":{"crate_id":23,"path":["num_traits","ops","checked","CheckedDiv"],"kind":"trait"},"5:4242:15220":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"1:2437:17196":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"9:469:17724":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"21:5266:10726":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"5:1663:13528":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"1:6324:13699":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"1:15920:6548":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"17:9933:17119":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"1:11343:13747":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"2:51119:13995":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"12:2025:13486":{"crate_id":12,"path":["hashbrown","set","Intersection"],"kind":"struct"},"1:2031:145":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"0:2549:4003":{"crate_id":0,"path":["chrono","format","Fixed","Nanosecond"],"kind":"variant"},"21:1736:7985":{"crate_id":21,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"1:4265:13201":{"crate_id":1,"path":["std","io","readbuf","ReadBuf"],"kind":"struct"},"16:7226:14813":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"1:8978:13578":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"1:6700:12371":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"1:1306:143":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"17:13842:16747":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"2:3323:2704":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"2:13015:6159":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"2:24662:168":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"21:5520:9980":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"1:15933:6561":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"21:4075:10088":{"crate_id":21,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"2:3353:2806":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"16:6166:14786":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"2:46395:14051":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"1:2175:13486":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"16:7786:14752":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"6:3881:10067":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"2:51150:13983":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"1:15876:17742":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"2:22836:14002":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"17:11434:16159":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"16:7392:14747":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"17:2543:15008":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"4:0:6515":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"2:3421:12541":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"17:12431:16330":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"21:571:7082":{"crate_id":21,"path":["libc","unix","iovec"],"kind":"struct"},"2:12486:12663":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"17:13609:16662":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"2:46960:17035":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"5:1644:13526":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"5:6411:223":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"1:5652:13462":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"17:12234:16280":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"6:4331:10112":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"1:14489:17042":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"0:2502:1890":{"crate_id":0,"path":["chrono","format","Numeric","IsoWeek"],"kind":"variant"},"20:442:12470":{"crate_id":20,"path":["time","sys","inner","unix","SteadyTime"],"kind":"struct"},"17:10477:15010":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"6:6085:11144":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"17:12208:16277":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"1:11357:13684":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"23:370:12584":{"crate_id":23,"path":["num_traits","cast","AsPrimitive"],"kind":"trait"},"1:3319:13644":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"16:6413:14575":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"2:50125:14153":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"2:9951:14100":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"6:4401:10121":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"2:11416:14119":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"0:2518:4003":{"crate_id":0,"path":["chrono","format","Numeric","Nanosecond"],"kind":"variant"},"21:150:6744":{"crate_id":21,"path":["libc","unix","FILE"],"kind":"enum"},"6:4317:10110":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"18:729:65463":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"21:1519:7963":{"crate_id":21,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"5:8241:12643":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"18:704:16106":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"11:54:14547":{"crate_id":11,"path":["adler","Adler32"],"kind":"struct"},"17:11640:16178":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"2:53194:13955":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"17:8929:51388":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"6:5197:10721":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"17:12783:16388":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"2:49359:12669":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"9:686:14425":{"crate_id":9,"path":["miniz_oxide","deflate","core","SymFreq"],"kind":"struct"},"2:46445:14194":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"0:2494:1906":{"crate_id":0,"path":["chrono","format","Numeric","Month"],"kind":"variant"},"17:11100:15041":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"2:50337:14157":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"2:46226:12671":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"16:3488:14922":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"19:117:16102":{"crate_id":19,"path":["panic_unwind","dwarf","eh","EHContext"],"kind":"struct"},"1:903:13611":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"5:994:14395":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"1:6442:13449":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"16:7195:14810":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"23:0:1864":{"crate_id":23,"path":["num_traits"],"kind":"module"},"2:50969:15763":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"23:807:12606":{"crate_id":23,"path":["num_traits","ops","wrapping","WrappingMul"],"kind":"trait"},"0:2496:3379":{"crate_id":0,"path":["chrono","format","Numeric","Day"],"kind":"variant"},"1:6942:13454":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"17:12494:16339":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"1:11289:13685":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"5:783:222":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"5:8121:12633":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"1:14469:13466":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"0:2547:5522":{"crate_id":0,"path":["chrono","format","Fixed","UpperAmPm"],"kind":"variant"},"6:5945:6996":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"2:4651:13158":{"crate_id":2,"path":["core","array","try_collect_into_array","Guard"],"kind":"struct"},"6:6858:10255":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"5:3039:65415":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"0:2520:5496":{"crate_id":0,"path":["chrono","format","Numeric","Timestamp"],"kind":"variant"},"1:15908:6539":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"21:3982:10076":{"crate_id":21,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"2:5020:14063":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"2:3392:12535":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"16:6357:14792":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"2:45754:12554":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"6:5241:10703":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"1:15923:6551":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"17:9162:15038":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"2:45887:197":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"0:2622:5563":{"crate_id":0,"path":["chrono","format","Item","OwnedLiteral"],"kind":"variant"},"1:1021:13629":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"0:2512:5488":{"crate_id":0,"path":["chrono","format","Numeric","Hour12"],"kind":"variant"},"2:24560:172":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"17:10128:15084":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"17:12467:16335":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"2:46316:14251":{"crate_id":2,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"6:616:7088":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"16:5456:14640":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"2:13924:62936":{"crate_id":2,"path":["core","future","from_generator","GenFuture"],"kind":"struct"},"0:2635:3587":{"crate_id":0,"path":["chrono","format","Item","Fixed"],"kind":"variant"},"17:13041:16500":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"2:12733:14139":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"17:10656:16122":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"16:3118:14925":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"2:56329:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:2948:184":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"6:4005:10078":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"16:5346:14740":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"17:10543:15381":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"6:6881:10258":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"2:51485:13991":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"16:3365:14671":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"2:49781:13824":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"0:2464:174":{"crate_id":0,"path":["chrono","format","Pad","None"],"kind":"variant"},"1:11544:13510":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"6:1717:7981":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"1:6690:13407":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"2:13854:17185":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"18:866:15105":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"17:1311:15088":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"16:7870:14748":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"16:6620:14941":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"1:8415:14402":{"crate_id":1,"path":["std","sync","mpsc","sync","Node"],"kind":"struct"},"6:3978:10075":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"16:3939:15407":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"2:4:979":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"1:3333:13647":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"2:46554:13806":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"6:5563:10773":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"2:47742:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"17:13163:16548":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"17:9600:65452":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"2:3084:13421":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"16:6136:14780":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"2:9238:12746":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"5:6652:69":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"1:4697:60465":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"2:51581:13964":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"2:46615:13792":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"2:49266:14126":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"23:964:12615":{"crate_id":23,"path":["num_traits","sign","Unsigned"],"kind":"trait"},"1:11051:13198":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"2:52735:13998":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"2:10552:13337":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"6:6106:11147":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"2:8390:12770":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"2:2872:104":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"6:4120:10092":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"0:2522:5500":{"crate_id":0,"path":["chrono","format","Numeric","Internal"],"kind":"variant"},"0:137:1030":{"crate_id":0,"path":["chrono","prelude"],"kind":"module"},"1:8930:13724":{"crate_id":1,"path":["std","sync","once","WaiterQueue"],"kind":"struct"},"2:11115:13356":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"5:8194:13024":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"1:3200:13167":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"17:12795:16395":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"2:47868:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"1:12211:2406":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"18:837:12655":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"16:4890:15426":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"21:6231:11155":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"1:15326:13690":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"21:1588:7971":{"crate_id":21,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"16:6577:14798":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"5:5889:15231":{"crate_id":5,"path":["alloc","slice","merge","MergeHole"],"kind":"struct"},"17:12073:16258":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"17:11082:15003":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"21:4285:10107":{"crate_id":21,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"5:0:277":{"crate_id":5,"path":["alloc"],"kind":"module"},"21:6020:7928":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"17:11628:16175":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"2:23901:14169":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"23:815:12609":{"crate_id":23,"path":["num_traits","ops","wrapping","WrappingShr"],"kind":"trait"},"1:12045:13355":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"2:32293:13083":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"2:47470:2809":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"6:4193:10098":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"17:9065:51391":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"17:11328:16385":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"17:13394:16604":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"6:3868:10066":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"2:24181:14219":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"1:4477:13190":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"6:5414:10737":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"16:5407:14637":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"18:857:15104":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"0:2486:5466":{"crate_id":0,"path":["chrono","format","Numeric","YearMod100"],"kind":"variant"},"5:1843:15220":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"1:2366:600":{"crate_id":1,"path":["std","env"],"kind":"module"},"15:230:14578":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"2:46428:14193":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"2:51317:13952":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"2:22523:62854":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"16:5941:189":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"6:4449:10127":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"0:2625:3377":{"crate_id":0,"path":["chrono","format","Item","Space"],"kind":"variant"},"12:1180:14558":{"crate_id":12,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"17:9649:17114":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"21:4038:10083":{"crate_id":21,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"1:11246:59484":{"crate_id":1,"path":["std","net","parser","AddrKind"],"kind":"enum"},"17:9440:15373":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"23:661:12598":{"crate_id":23,"path":["num_traits","ops","inv","Inv"],"kind":"trait"},"6:5953:7900":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"17:10095:15081":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"2:10272:109":{"crate_id":2,"path":["core","fmt","macros","Debug"],"kind":"proc_derive"},"2:22893:13442":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"2:45864:198":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"2:50301:190":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"17:10599:17138":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"21:6915:11705":{"crate_id":21,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"1:8695:13705":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"1:11194:13435":{"crate_id":1,"path":["std","net","ip","Ipv6Addr"],"kind":"struct"},"2:22889:13421":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"5:3300:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"17:13532:16643":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"0:2830:2087":{"crate_id":0,"path":["chrono","Month","April"],"kind":"variant"},"17:12521:16343":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"2:3412:12539":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"1:11131:12673":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"2:13728:138":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"1:786:15266":{"crate_id":1,"path":["std","thread","local","fast","Key"],"kind":"struct"},"5:3488:13485":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"2:4359:13024":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"17:10912:17144":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"9:41:14476":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","LocalBuf"],"kind":"struct"},"16:6424:14794":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"6:4419:10123":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"2:12018:15245":{"crate_id":2,"path":["core","slice","sort","CopyOnDrop"],"kind":"struct"},"6:5282:10727":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"21:4509:10134":{"crate_id":21,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"2:52528:13978":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"17:13240:16564":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"2:50283:201":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"6:6200:11152":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"17:11932:16228":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"6:6899:10261":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"16:4350:15410":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"2:57638:16947":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"17:9005:51389":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"21:562:7081":{"crate_id":21,"path":["libc","unix","hostent"],"kind":"struct"},"2:46376:14255":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"23:648:12597":{"crate_id":23,"path":["num_traits","ops","euclid","Euclid"],"kind":"trait"},"6:4255:10103":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"6:3905:10069":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"1:14544:13169":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"1:1045:13459":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"21:6077:11144":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"17:11678:16182":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"1:14847:15273":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"17:9476:15374":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"0:2851:2101":{"crate_id":0,"path":["chrono","Month","November"],"kind":"variant"},"12:1688:14571":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"2:9745:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"16:6768:14950":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"23:5049:12573":{"crate_id":23,"path":["num_traits","FloatErrorKind"],"kind":"enum"},"2:47910:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"1:15925:6553":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"5:8137:64122":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"2:46232:17020":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"21:1668:7977":{"crate_id":21,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"16:5421:14638":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"17:10435:17129":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"6:4023:10080":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"0:2537:5510":{"crate_id":0,"path":["chrono","format","Fixed","ShortMonthName"],"kind":"variant"},"2:11388:12681":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"2:3255:2164":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"17:10938:17149":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"1:15881:21123":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"1:6964:13417":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"2:13091:13827":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"2:7835:13784":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"17:10224:17128":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"23:751:58035":{"crate_id":23,"path":["num_traits","ops","overflowing","OverflowingAdd"],"kind":"trait"},"1:3701:13183":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"21:4423:10125":{"crate_id":21,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"17:13348:16594":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"17:11147:16993":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"2:50145:121":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"2:32118:14214":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"6:1547:7966":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"12:1144:13537":{"crate_id":12,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"21:1715:7982":{"crate_id":21,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"2:51015:13994":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"1:7980:15248":{"crate_id":1,"path":["std","sync","mpsc","mpsc_queue","Queue"],"kind":"struct"},"9:27:14475":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","HashBuffers"],"kind":"struct"},"1:14154:13191":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"9:157:14443":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressorOxide"],"kind":"struct"},"21:5202:10722":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"6:4215:10100":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"2:3156:135":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"21:4104:10091":{"crate_id":21,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"17:10041:17122":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"21:4112:10092":{"crate_id":21,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"17:13733:16708":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"2:3473:116":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"6:605:7086":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"1:11982:13555":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"2:8579:157":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"1:1522:13532":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"16:7738:14817":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"2:48036:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"2:45843:195":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"2:46563:13787":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"5:6688:14287":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"2:4733:102":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"21:5428:16096":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"6:531:2780":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"1:2576:127":{"crate_id":1,"path":["std","error","Error"],"kind":"trait"},"23:753:58036":{"crate_id":23,"path":["num_traits","ops","overflowing","OverflowingSub"],"kind":"trait"},"2:49401:12680":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"6:6124:11148":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"0:2777:1948":{"crate_id":0,"path":["chrono","Weekday","Mon"],"kind":"variant"},"1:9770:15265":{"crate_id":1,"path":["std","sys_common","rwlock","StaticRwLockWriteGuard"],"kind":"struct"},"2:45933:12546":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"5:1195:17519":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"2:32459:63207":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum64"],"kind":"enum"},"17:11030:127":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"6:5428:10739":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"0:2463:2811":{"crate_id":0,"path":["chrono","format","Pad"],"kind":"enum"},"17:13582:16655":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"23:995:12570":{"crate_id":23,"path":["num_traits","NumAssign"],"kind":"trait"},"2:0:488":{"crate_id":2,"path":["core"],"kind":"module"},"17:10458:15334":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"17:11847:16220":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"21:6083:11145":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"17:10403:15013":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"13:232:16841":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"2:5146:13144":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"2:2178:13080":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"17:9799:17117":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"1:823:15266":{"crate_id":1,"path":["std","thread","local","os","Key"],"kind":"struct"},"2:51224:13975":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"1:1463:13526":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"12:429:14562":{"crate_id":12,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"5:3951:13485":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"2:24832:14172":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"2:49202:14121":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"1:1646:13537":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"2:23623:13443":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"2:3349:2805":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"2:47624:13024":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"2:5015:14062":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"2:49211:14122":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"17:13780:16726":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"2:52071:13989":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"23:971:12566":{"crate_id":23,"path":["num_traits","NumOps"],"kind":"trait"},"21:4247:10103":{"crate_id":21,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"8:0:6516":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"9:900:16848":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"6:5528:9980":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"6:3945:10071":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"21:5540:10772":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"6:1676:7977":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"5:1674:13529":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"17:9849:65456":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"16:5360:14635":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"23:635:12593":{"crate_id":23,"path":["num_traits","ops","checked","CheckedShl"],"kind":"trait"},"0:2729:2518":{"crate_id":0,"path":["chrono","format","strftime","StrftimeItems"],"kind":"struct"},"2:10507:142":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"12:2331:12643":{"crate_id":12,"path":["hashbrown","TryReserveError"],"kind":"enum"},"6:3892:10068":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"17:9245:14994":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"2:12756:14140":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"2:3318:2703":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"17:10516:15016":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"5:5093:660":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"2:49301:14129":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"16:6126:14785":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"2:56303:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:49193:14120":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"16:6176:14787":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"1:15914:6544":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"2:24088:15740":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"16:7571:14738":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"16:6605:14756":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"12:160:14561":{"crate_id":12,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"16:6391:14793":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"6:4052:10084":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"2:3147:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"21:584:7084":{"crate_id":21,"path":["libc","unix","winsize"],"kind":"struct"},"1:10658:13492":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"2:5092:13142":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"16:7333:14760":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"2:48762:146":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"1:11587:13511":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"2:46369:14254":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"16:2843:14909":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"17:10331:15014":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"17:13356:16597":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"0:2492:5472":{"crate_id":0,"path":["chrono","format","Numeric","IsoYearMod100"],"kind":"variant"},"1:11283:13684":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"17:13465:16624":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"17:11406:16157":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"5:3341:14341":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"2:47700:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"0:2569:5109":{"crate_id":0,"path":["chrono","format","Fixed","RFC3339"],"kind":"variant"},"2:49962:13835":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"2:23635:62858":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"2:10440:715":{"crate_id":2,"path":["core","hash"],"kind":"module"},"5:1235:14378":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"2:8425:120":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"2:47608:13355":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"1:15404:14587":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"0:1651:5501":{"crate_id":0,"path":["chrono","format","InternalNumeric"],"kind":"struct"},"22:86:12515":{"crate_id":22,"path":["num_integer","average","Average"],"kind":"trait"},"1:14235:13120":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"1:12087:13597":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"2:49469:12683":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"2:3721:12550":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"21:4350:10115":{"crate_id":21,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"1:4359:13667":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"1:10692:17204":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"2:51173:13987":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"23:237:12581":{"crate_id":23,"path":["num_traits","bounds","Bounded"],"kind":"trait"},"1:4397:13191":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"17:13547:16647":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"2:53404:16940":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"16:6744:14948":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"9:1056:14486":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"6:6091:11145":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"1:10609:13120":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"0:2165:1905":{"crate_id":0,"path":["chrono","Datelike"],"kind":"trait"},"17:11539:16167":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"16:6636:14758":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"2:13245:17521":{"crate_id":2,"path":["core","str","lossy","Utf8LossyChunksIter"],"kind":"struct"},"3:300:205":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"1:15146:13480":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"0:2500:5478":{"crate_id":0,"path":["chrono","format","Numeric","WeekFromMon"],"kind":"variant"},"2:47616:13356":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"1:5746:13407":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"17:10827:15074":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"16:4852:15425":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"23:983:12568":{"crate_id":23,"path":["num_traits","RefNum"],"kind":"trait"},"2:24011:17016":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"17:2314:15051":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"12:2032:13487":{"crate_id":12,"path":["hashbrown","set","Difference"],"kind":"struct"},"21:5990:11143":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"2:49320:14131":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"1:15096:13471":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"12:1118:13536":{"crate_id":12,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"6:1522:7962":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"17:12671:16372":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"2:22563:62882":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"0:2824:2083":{"crate_id":0,"path":["chrono","Month","February"],"kind":"variant"},"18:136:17507":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"6:5969:6954":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"6:632:7090":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"1:13853:17622":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"6:3972:9918":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"21:3884:10068":{"crate_id":21,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"2:68:729":{"crate_id":2,"path":["core","i32"],"kind":"module"},"1:14956:60038":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"0:2567:5103":{"crate_id":0,"path":["chrono","format","Fixed","RFC2822"],"kind":"variant"},"0:2508:5485":{"crate_id":0,"path":["chrono","format","Numeric","Ordinal"],"kind":"variant"},"6:4470:10129":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"17:13520:16640":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"21:598:7086":{"crate_id":21,"path":["libc","unix","sigval"],"kind":"struct"},"16:3041:14914":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"6:1729:7983":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"2:2938:177":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"5:8271:101":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"2:48525:71":{"crate_id":2,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"17:13746:16714":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"16:6110:14779":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"16:5580:14649":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"6:5347:10730":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"16:5595:14650":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"1:1623:13535":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"1:11058:13200":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"21:1576:7970":{"crate_id":21,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"17:13318:16583":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"21:4137:10095":{"crate_id":21,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"6:3862:10065":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"2:51534:13976":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"1:5503:13690":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"1:12005:59485":{"crate_id":1,"path":["std","sync","mpsc","sync","Failure"],"kind":"enum"},"17:10584:15076":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"2:51760:15768":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"1:10652:21120":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"1:15928:6556":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"16:2945:14934":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"1:14520:129":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"16:3287:14920":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"23:880:15130":{"crate_id":23,"path":["num_traits","real","Real"],"kind":"trait"},"2:52024:13985":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"21:617:7089":{"crate_id":21,"path":["libc","unix","servent"],"kind":"struct"},"2:8141:17520":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"17:11714:16184":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"5:3882:13184":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"2:47495:13024":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"16:5855:14663":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"6:4501:10132":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"0:2839:2093":{"crate_id":0,"path":["chrono","Month","July"],"kind":"variant"},"18:811:15100":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"1:5802:13414":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"0:1667:1888":{"crate_id":0,"path":["chrono","format","ParseResult"],"kind":"typedef"},"1:8644:13702":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"2:24628:13632":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"23:813:12608":{"crate_id":23,"path":["num_traits","ops","wrapping","WrappingShl"],"kind":"trait"},"17:9280:15369":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"2:13045:12653":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"2:2276:13901":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"17:11118:51396":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"2:32307:63206":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum16"],"kind":"enum"},"17:9133:51393":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"12:2018:13485":{"crate_id":12,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"23:943:12510":{"crate_id":23,"path":["num_traits","sign","Signed"],"kind":"trait"},"2:14127:141":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"17:12699:16376":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"17:13620:16663":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"2:23729:13421":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"1:12116:13599":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"17:12262:16285":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"2:49569:12676":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"17:10801:17143":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"5:3759:13355":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"5:3044:17614":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"12:2005:13355":{"crate_id":12,"path":["hashbrown","set","Iter"],"kind":"struct"},"15:0:6522":{"crate_id":15,"path":["addr2line"],"kind":"module"},"17:11822:16216":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"2:24526:171":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"1:8743:13714":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"2:3365:12530":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"2:50113:14148":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"1:7512:119":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"21:5392:10735":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"5:8370:12630":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"1:15033:17047":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"2:22899:13444":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"2:52102:13992":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"17:10420:15045":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"2:48200:12705":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"2:3328:12525":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"6:5274:10726":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"17:10814:15073":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"12:949:13532":{"crate_id":12,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"18:739:17106":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"2:14:1939":{"crate_id":2,"path":["core","write"],"kind":"macro"},"6:6068:7904":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"2:45818:194":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"6:6176:11150":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"2:49451:12684":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"1:11952:13553":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"17:13180:16550":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"0:2854:2104":{"crate_id":0,"path":["chrono","Month","December"],"kind":"variant"},"2:3259:217":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"1:11164:13429":{"crate_id":1,"path":["std","net","addr","SocketAddrV6"],"kind":"struct"},"16:6591:14799":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"1:11527:13509":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"18:754:65460":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"9:927:49466":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"2:3159:228":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"1:2937:179":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"6:4387:10119":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"17:12659:16371":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"1:15305:13683":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"6:6812:11679":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"2:48737:13340":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"2:23098:13941":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"1:15930:6558":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"17:9943:65458":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"17:11970:16238":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"1:15112:13472":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"23:240:57927":{"crate_id":23,"path":["num_traits","bounds","LowerBounded"],"kind":"trait"},"1:15892:60037":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"6:6870:10257":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"1:11435:12736":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"16:3172:14915":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"17:12917:16397":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"1:15934:6562":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"1:12664:128":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"2:50133:14152":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"1:11990:17039":{"crate_id":1,"path":["std","sync","mpsc","blocking","SignalToken"],"kind":"struct"},"2:3260:106":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"0:206:957":{"crate_id":0,"path":["chrono","offset"],"kind":"module"},"21:3873:10067":{"crate_id":21,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"5:8151:13024":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"2:23733:13779":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"21:1752:7986":{"crate_id":21,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"1:7668:13549":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"21:4207:10100":{"crate_id":21,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"9:692:14427":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressionStrategy"],"kind":"enum"},"17:10887:16155":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"12:1855:145":{"crate_id":12,"path":["hashbrown","set","HashSet"],"kind":"struct"},"2:3739:13914":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"17:11159:15391":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"18:636:16106":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"2:46601:17028":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"17:11001:17154":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"2:13040:12654":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"6:1527:7963":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"2:46734:13800":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"6:1760:7986":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"6:4046:10083":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"2:46573:13788":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"1:1153:17187":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"6:88:6678":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"0:2510:3999":{"crate_id":0,"path":["chrono","format","Numeric","Hour"],"kind":"variant"},"2:2381:13583":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"2:22495:12623":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"2:49987:13837":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"6:4459:10128":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"2:32359:63205":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum32"],"kind":"enum"},"2:6870:13808":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"16:6691:14801":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"2:47994:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"1:6792:13464":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"17:9088:51392":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"16:7236:14814":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"6:4395:10120":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"23:849:12612":{"crate_id":23,"path":["num_traits","pow","Pow"],"kind":"trait"},"0:2536:3587":{"crate_id":0,"path":["chrono","format","Fixed"],"kind":"enum"},"1:1450:13525":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"7:85:49370":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"5:6672:14286":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"6:4133:10094":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"21:4264:10105":{"crate_id":21,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"9:996:14492":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"23:777:12603":{"crate_id":23,"path":["num_traits","ops","saturating","SaturatingMul"],"kind":"trait"},"12:976:13534":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"18:667:15113":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"18:885:15106":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"2:22799:14000":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"17:4157:15077":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"21:5159:10718":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"2:23087:13421":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"2:13240:17184":{"crate_id":2,"path":["core","str","lossy","Utf8Lossy"],"kind":"struct"},"5:3970:15220":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"6:5998:11143":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"9:963:14491":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"5:1486:13538":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"17:11304:51397":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"17:9659:65455":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"18:620:16986":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"21:4369:10118":{"crate_id":21,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"16:3429:14674":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"1:1492:13527":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"17:11981:16241":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"6:6864:10256":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"2:2492:13823":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"17:12537:16345":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"17:8849:15035":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"21:6213:11154":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"1:4572:13199":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"16:6518:14796":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"16:5295:49813":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"16:5231:15431":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"18:152:17508":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"12:556:143":{"crate_id":12,"path":["hashbrown","map","HashMap"],"kind":"struct"},"1:4631:13166":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"1:3345:13653":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"2:5082:14068":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"6:4033:10081":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"6:5400:10735":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"2:14091:201":{"crate_id":2,"path":["core","task","ready","Ready"],"kind":"struct"},"1:5935:13743":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"1:4649:13168":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"17:10788:17141":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"16:2968:14912":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"16:7804:14751":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"16:7514:14761":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"2:48561:13132":{"crate_id":2,"path":["core","fmt","FlagV1"],"kind":"enum"},"2:49310:14130":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"1:2163:13024":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"16:5996:14783":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"16:7378:14746":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"5:2310:14410":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"1:0:1324":{"crate_id":1,"path":["std"],"kind":"module"},"16:3218:14917":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"23:626:12590":{"crate_id":23,"path":["num_traits","ops","checked","CheckedMul"],"kind":"trait"},"17:9528:12665":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"1:15660:15276":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"21:556:7080":{"crate_id":21,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"1:2462:17198":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"17:13819:16734":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"2:10286:189":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"21:5371:10733":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"6:6214:11153":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"2:3500:130":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"2:24106:48748":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"21:4356:10116":{"crate_id":21,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"6:1533:7964":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"21:4462:10129":{"crate_id":21,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"20:427:12477":{"crate_id":20,"path":["time","duration","OutOfRangeError"],"kind":"struct"},"21:4431:10126":{"crate_id":21,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"2:3756:12555":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"16:5472:14643":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"5:432:5441":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"6:563:7080":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"21:3964:9918":{"crate_id":21,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"2:49804:13825":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"14:11:17170":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"16:2794:14673":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"17:12040:16248":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"16:6491:14795":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"17:12343:16299":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"17:13772:16723":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"2:46241:14046":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"6:6005:6861":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"17:12632:16369":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"1:10564:13421":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"2:49551:12675":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"2:50378:12697":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"5:8112:14396":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"2:47437:176":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"1:7337:186":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"17:11378:14996":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"2:53338:16934":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"6:5987:11142":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"13:0:6514":{"crate_id":13,"path":["std_detect"],"kind":"module"},"21:518:7077":{"crate_id":21,"path":["libc","unix","timeval"],"kind":"struct"},"2:51635:13971":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"0:2628:5566":{"crate_id":0,"path":["chrono","format","Item","OwnedSpace"],"kind":"variant"},"3:0:430":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"16:7420:14762":{"crate_id":16,"path":["gimli","read","unit","UnitOffset"],"kind":"struct"},"2:11140:12680":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"6:4241:10102":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"12:853:13526":{"crate_id":12,"path":["hashbrown","map","Values"],"kind":"struct"},"12:2309:16843":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"17:11947:16232":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"5:7611:14328":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"1:15927:6555":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"20:473:12470":{"crate_id":20,"path":["time","SteadyTime"],"kind":"struct"},"1:8198:15248":{"crate_id":1,"path":["std","sync","mpsc","spsc_queue","Queue"],"kind":"struct"},"17:13540:16646":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"2:49718:12672":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"16:4995:15429":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"17:9210:51394":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"12:1253:13538":{"crate_id":12,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"2:23048:26292":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"21:4292:10108":{"crate_id":21,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"2:4902:14061":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"21:6891:10261":{"crate_id":21,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"1:9626:59980":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutex"],"kind":"struct"},"6:4083:10088":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"1:11408:13451":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"2:53457:16943":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"6:6051:7901":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"16:5753:14659":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"6:1708:7980":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"6:5420:10738":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"17:9839:15014":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"15:269:14583":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"0:2842:2095":{"crate_id":0,"path":["chrono","Month","August"],"kind":"variant"},"6:3951:10072":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"21:1532:7965":{"crate_id":21,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"17:12095:16259":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"6:5255:10704":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"1:15003:6640":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"2:50167:6643":{"crate_id":2,"path":["core","time","FromFloatSecsError"],"kind":"struct"},"6:1596:7971":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"21:4493:10132":{"crate_id":21,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"2:46681:13797":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"5:3396:13489":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"1:7937:17617":{"crate_id":1,"path":["std","sync","mpsc","blocking","WaitToken"],"kind":"struct"},"16:5433:14639":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"2:49976:13836":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"1:12186:13582":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"16:7146:14806":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"2:46333:12671":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"2:45994:2008":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"2:24730:166":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"21:3854:10065":{"crate_id":21,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"14:189:17170":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"1:1432:13356":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"2:53319:13958":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"0:2617:2809":{"crate_id":0,"path":["chrono","format","Item"],"kind":"enum"},"1:4399:13192":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"17:14000:16780":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"6:1700:7979":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"17:12568:16350":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"1:1486:13485":{"crate_id":1,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"2:3361:12528":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"2:53495:16945":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"5:2777:14382":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"2:46545:13803":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"6:4300:10108":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"21:6606:7032":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"1:11161:13428":{"crate_id":1,"path":["std","net","addr","SocketAddrV4"],"kind":"struct"},"2:53534:15772":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"5:8188:13024":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"2:10517:146":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"1:15041:13560":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"1:14021:15272":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"17:10160:16117":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"2:21:672":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"21:5412:10738":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"17:11337:14998":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"17:12946:16417":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"6:1540:7965":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"1:1442:13024":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"21:5997:6861":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"1:4365:13669":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"0:2204:1932":{"crate_id":0,"path":["chrono","offset","LocalResult","Ambiguous"],"kind":"variant"},"16:7279:14959":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"16:6731:14947":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"16:6682:14755":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"6:4145:10095":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"1:9732:13677":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutexGuard"],"kind":"struct"},"21:6147:11149":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"1:11197:13496":{"crate_id":1,"path":["std","net","ip","Ipv6MulticastScope"],"kind":"enum"},"17:11588:16170":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"21:577:7083":{"crate_id":21,"path":["libc","unix","pollfd"],"kind":"struct"},"17:607:17111":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"17:12168:16126":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"1:11137:13427":{"crate_id":1,"path":["std","net","addr","SocketAddr"],"kind":"enum"},"6:525:7077":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"5:8254:13542":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"22:109:12496":{"crate_id":22,"path":["num_integer","Integer"],"kind":"trait"},"23:773:12602":{"crate_id":23,"path":["num_traits","ops","saturating","SaturatingAdd"],"kind":"trait"},"16:6780:14802":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"16:7119:14678":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"1:12100:13598":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"2:46308:12672":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"1:11933:13551":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"17:13978:16774":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"1:2598:17199":{"crate_id":1,"path":["std","error","from","StringError"],"kind":"struct"},"1:12171:13564":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"17:13402:16606":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"1:14157:13193":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"17:10926:17148":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"6:569:7081":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"20:569:6239":{"crate_id":20,"path":["time","Fmt"],"kind":"enum"},"0:2516:4002":{"crate_id":0,"path":["chrono","format","Numeric","Second"],"kind":"variant"},"21:4470:10130":{"crate_id":21,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"1:9765:15264":{"crate_id":1,"path":["std","sys_common","rwlock","StaticRwLockReadGuard"],"kind":"struct"},"17:13760:16720":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"1:12061:13024":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"2:49997:13838":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"2:46672:13796":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"2:8450:3345":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"2:48440:67":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"17:10623:17140":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"6:511:7075":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"21:3989:10077":{"crate_id":21,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"16:5314:15368":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"6:5548:10772":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"21:5233:10703":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"1:8808:162":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"2:49925:13834":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"17:10081:14987":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"1:12334:17197":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"6:161:6745":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"17:10117:15083":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"21:1609:7972":{"crate_id":21,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"9:1075:14494":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"16:4304:15409":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"1:10701:12692":{"crate_id":1,"path":["std","error","Chain"],"kind":"struct"},"23:525:12586":{"crate_id":23,"path":["num_traits","identities","One"],"kind":"trait"},"23:775:12604":{"crate_id":23,"path":["num_traits","ops","saturating","SaturatingSub"],"kind":"trait"},"5:2218:14344":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"21:1650:7975":{"crate_id":21,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"17:12051:16249":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"17:9404:15372":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"21:5979:11142":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"0:2565:5543":{"crate_id":0,"path":["chrono","format","Fixed","TimezoneOffsetZ"],"kind":"variant"},"2:4764:13822":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"1:4043:205":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"12:812:13529":{"crate_id":12,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"2:12462:14269":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"16:3604:15301":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"5:5536:14286":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"12:892:14549":{"crate_id":12,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"16:4762:15422":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"17:10611:17139":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"2:22508:62854":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"1:15917:6547":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"2:46592:13790":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"2:11333:14116":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"17:12155:16270":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"1:11338:13744":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"2:7733:13811":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"21:1514:7962":{"crate_id":21,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"17:10061:17124":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"1:6562:13457":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"1:5986:13749":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"2:51278:13967":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"5:5903:1333":{"crate_id":5,"path":["alloc","str"],"kind":"module"},"17:9971:65453":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"0:261:1897":{"crate_id":0,"path":["chrono","offset","Offset"],"kind":"trait"},"2:22710:14001":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"23:654:12596":{"crate_id":23,"path":["num_traits","ops","euclid","CheckedEuclid"],"kind":"trait"},"0:2657:1887":{"crate_id":0,"path":["chrono","format","ParseError"],"kind":"struct"},"17:11277:15393":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"14:216:49743":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"2:4721:13891":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"2:2253:13896":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"1:7291:17200":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"1:15415:14587":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"16:3091:14972":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"5:2200:15222":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"21:625:7090":{"crate_id":21,"path":["libc","unix","protoent"],"kind":"struct"},"5:5788:15220":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"12:877:13485":{"crate_id":12,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"6:5312:10729":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"5:3839:15220":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"17:10179:16119":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"21:6850:10255":{"crate_id":21,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"1:15931:6559":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"1:2399:17194":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"23:633:12591":{"crate_id":23,"path":["num_traits","ops","checked","CheckedNeg"],"kind":"trait"},"0:2022:5443":{"crate_id":0,"path":["chrono","format","strftime"],"kind":"module"},"5:8289:14350":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"2:2062:13158":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"2:3345:12526":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"1:12191:6640":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"2:50360:158":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"17:12610:16358":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"2:46931:17033":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"2:8864:13946":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"17:13627:16665":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"6:578:7082":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"6:5167:10718":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"1:11124:12680":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"2:47564:205":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"12:469:17515":{"crate_id":12,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"14:231:1887":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"1:14732:13555":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"1:4438:13194":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"16:3018:14913":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"1:1501:13529":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"1:10668:13539":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"12:925:13527":{"crate_id":12,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"2:11295:12679":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"6:4410:10122":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"21:4005:10079":{"crate_id":21,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"6:4040:10082":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"1:3647:13176":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"2:45802:196":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"1:11067:13169":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"21:3997:10078":{"crate_id":21,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"20:562:12475":{"crate_id":20,"path":["time","TmFmt"],"kind":"struct"},"17:2484:51479":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"21:6060:7904":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"5:3894:14403":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"6:6636:11517":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"16:5029:15430":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"17:12275:16286":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"1:10800:13415":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"15:248:14579":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"21:5213:10723":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"2:5137:14069":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"2:53131:13990":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"16:7205:14811":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"21:5451:10740":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"5:8437:13485":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"6:1744:7985":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"22:133:2498":{"crate_id":22,"path":["num_integer","div_mod_floor"],"kind":"function"},"2:53367:16937":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"0:2780:1950":{"crate_id":0,"path":["chrono","Weekday","Tue"],"kind":"variant"},"2:46724:13174":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"2:24144:48749":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"2:47952:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"1:7446:185":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"2:51945:13997":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"1:15935:6563":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"16:3506:14921":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"1:10855:13182":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"12:1235:14560":{"crate_id":12,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"1:5376:13682":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"1:15926:6554":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"6:584:7083":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"21:4298:10109":{"crate_id":21,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"1:5863:13740":{"crate_id":1,"path":["std","os","unix","net","addr","AsciiEscaped"],"kind":"struct"},"2:3506:132":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"1:6866:13452":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"2:49505:12682":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"17:13282:16578":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"6:5210:10722":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"6:5459:10740":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"2:49819:13828":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"1:15921:6549":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"1:15932:6560":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"2:23041:13421":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"0:2638:127":{"crate_id":0,"path":["chrono","format","Item","Error"],"kind":"variant"},"2:45726:12557":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"20:445:2417":{"crate_id":20,"path":["time","Timespec"],"kind":"struct"},"2:10278:12706":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"17:13488:16629":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"17:13296:16579":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"6:3957:10073":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"2:7905:13947":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"6:5436:16096":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"21:4233:10102":{"crate_id":21,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"0:2571:5500":{"crate_id":0,"path":["chrono","format","Fixed","Internal"],"kind":"variant"},"6:624:7089":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"2:8344:13874":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"1:6702:12373":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"17:12182:16274":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"1:8032:13629":{"crate_id":1,"path":["std","sync","mpsc","oneshot","Packet"],"kind":"struct"},"2:46922:13118":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"1:13573:13524":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"2:46355:12670":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"17:11199:15392":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"21:5274:10727":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"17:11750:16189":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"9:0:6517":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"2:49142:14117":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"2:23972:15735":{"crate_id":2,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"5:7373:13024":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"16:6252:14790":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"1:8651:13704":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"0:2820:1906":{"crate_id":0,"path":["chrono","Month"],"kind":"enum"},"1:10938:13574":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"2:47479:13355":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"17:10279:14987":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"6:6644:11518":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"21:6879:10259":{"crate_id":21,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"21:6043:7901":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"6:4439:10126":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"2:48774:13508":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"0:2543:5517":{"crate_id":0,"path":["chrono","format","Fixed","LongWeekdayName"],"kind":"variant"},"14:194:49737":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"21:4254:10104":{"crate_id":21,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"17:13119:16543":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"17:9264:15368":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"23:362:12585":{"crate_id":23,"path":["num_traits","cast","NumCast"],"kind":"trait"},"2:50121:14149":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"1:11994:60036":{"crate_id":1,"path":["std","sync","mpsc","shared","StartResult"],"kind":"enum"},"21:1682:7978":{"crate_id":21,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"1:9633:15263":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutexGuard"],"kind":"struct"},"1:13336:13696":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"1:9860:15266":{"crate_id":1,"path":["std","sys_common","thread_local_key","Key"],"kind":"struct"},"6:1665:7976":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"12:761:13356":{"crate_id":12,"path":["hashbrown","map","IterMut"],"kind":"struct"},"17:13637:16670":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"17:10211:17127":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"0:2514:4001":{"crate_id":0,"path":["chrono","format","Numeric","Minute"],"kind":"variant"},"6:4101:10090":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"16:7216:14812":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"17:10266:15048":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"16:4823:15424":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"2:48473:67":{"crate_id":2,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"16:7024:14957":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"2:3357:12529":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"5:3048:17615":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"2:24492:170":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"2:48753:13339":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"21:5177:10719":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"16:5927:14666":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"1:15916:6546":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"1:11349:13695":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"12:747:13355":{"crate_id":12,"path":["hashbrown","map","Iter"],"kind":"struct"},"0:2845:2097":{"crate_id":0,"path":["chrono","Month","September"],"kind":"variant"},"5:8129:14397":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"14:250:16796":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"16:7843:14819":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"6:4517:10134":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"6:4227:10101":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"0:2504:5481":{"crate_id":0,"path":["chrono","format","Numeric","NumDaysFromSun"],"kind":"variant"},"5:1694:14375":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"16:7174:14808":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"2:51683:13956":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"6:5359:10731":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"1:15915:6545":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"9:776:14473":{"crate_id":9,"path":["miniz_oxide","deflate","CompressionLevel"],"kind":"enum"},"17:12456:16334":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"1:2181:13487":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"2:46001:13771":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"1:12156:13710":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"21:4339:10114":{"crate_id":21,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"21:4441:10127":{"crate_id":21,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"2:49684:12660":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"17:10407:15046":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"18:694:15114":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"5:7111:15233":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"5:7840:15237":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"17:12408:16329":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"6:1602:2428":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"2:11260:14115":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"2:46703:13799":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"2:50117:14150":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"17:12221:16278":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"16:7073:14805":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"2:47547:12891":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"2:10269:109":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"16:5488:14644":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"2:50109:14145":{"crate_id":2,"path":["core","str","LinesAnyMap"],"kind":"struct"},"1:3997:13576":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"17:10673:51579":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"1:3613:13181":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"21:3910:10070":{"crate_id":21,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"17:11915:16222":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"5:1457:13537":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"1:12012:15852":{"crate_id":1,"path":["std","sync","mpsc","cache_aligned","CacheAligned"],"kind":"struct"},"1:7682:13550":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"17:10200:17126":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"2:46633:13807":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"2:48214:12712":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"17:11616:16174":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"17:10377:15050":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"5:3375:14342":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"1:2793:12694":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"2:3710:224":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"6:5371:10732":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"12:1159:14557":{"crate_id":12,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"2:24080:16857":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"6:6887:10259":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"9:809:13508":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"0:2848:2099":{"crate_id":0,"path":["chrono","Month","October"],"kind":"variant"},"18:720:16108":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"16:7185:14809":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"21:3949:10073":{"crate_id":21,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"1:11597:13355":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"6:537:7078":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"2:53419:16941":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"1:5973:13748":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"2:51864:15771":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"1:5724:13408":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"16:3264:14919":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"6:1554:7967":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"6:4347:10114":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"2:45973:12700":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"2:14040:14159":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"5:374:14349":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"1:3197:6914":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"21:5339:10730":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"2:22812:13421":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"1:1161:21121":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"1:15929:6557":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"2:56342:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"17:12598:16356":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"2:14030:13766":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"21:1594:2428":{"crate_id":21,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"1:14930:13553":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"21:4393:10121":{"crate_id":21,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"18:169:17511":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"21:1709:7981":{"crate_id":21,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"1:11967:13554":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"21:4032:10082":{"crate_id":21,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"2:49898:13833":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"17:4008:17113":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"2:5561:11706":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"2:11091:13355":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"0:2748:2808":{"crate_id":0,"path":["chrono","format","DelayedFormat"],"kind":"struct"},"21:1721:7983":{"crate_id":21,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"16:7295:14759":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"17:13497:16632":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"1:1528:13533":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"23:515:3376":{"crate_id":23,"path":["num_traits","identities","Zero"],"kind":"trait"},"21:6885:10260":{"crate_id":21,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"17:13258:16572":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"2:9358:12642":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"12:0:6520":{"crate_id":12,"path":["hashbrown"],"kind":"module"},"21:4333:10113":{"crate_id":21,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"5:3748:160":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"1:2401:17195":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"17:13884:16753":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"1:897:13610":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"16:5766:14660":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"2:49665:12674":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"2:51086:13962":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"1:15910:6541":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"0:2484:5464":{"crate_id":0,"path":["chrono","format","Numeric","YearDiv100"],"kind":"variant"},"2:12772:14141":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"1:8385:13629":{"crate_id":1,"path":["std","sync","mpsc","sync","Packet"],"kind":"struct"},"23:337:1988":{"crate_id":23,"path":["num_traits","cast","FromPrimitive"],"kind":"trait"},"1:11101:12692":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"17:12741:16380":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"2:49700:12670":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"21:4379:10119":{"crate_id":21,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"2:52311:13969":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"2:56264:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:37569:178":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"17:10071:15087":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"1:5740:13410":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"2:50180:14203":{"crate_id":2,"path":["core","time","FromFloatSecsErrorKind"],"kind":"enum"},"0:2545:5520":{"crate_id":0,"path":["chrono","format","Fixed","LowerAmPm"],"kind":"variant"},"1:15267:13682":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"21:6206:11153":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"1:15924:6552":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"16:7856:14820":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"6:5221:10723":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"1:13501:17522":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"16:4230:15408":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"21:6862:10257":{"crate_id":21,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"1:8913:13118":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"2:49709:12671":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"6:4425:10124":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"1:4713:13173":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"2:3404:12537":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"2:6488:13805":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"2:48745:17036":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"17:10558:17133":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"5:5415:13158":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"17:12552:16349":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"0:2631:2810":{"crate_id":0,"path":["chrono","format","Item","Numeric"],"kind":"variant"},"0:2557:5531":{"crate_id":0,"path":["chrono","format","Fixed","TimezoneName"],"kind":"variant"},"6:3966:10074":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"1:14983:2417":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"21:5937:6996":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"12:1762:15218":{"crate_id":12,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"2:24128:48740":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"2:49419:12679":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"2:46053:14020":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"1:6868:13453":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"0:498:1889":{"crate_id":0,"path":["chrono","naive"],"kind":"module"},"21:1555:7968":{"crate_id":21,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"1:5658:13460":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"6:543:7079":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"21:6636:11518":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"17:13221:16563":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"1:14719:13463":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"2:51612:13968":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"12:930:13530":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"16:0:6523":{"crate_id":16,"path":["gimli"],"kind":"module"},"12:774:13024":{"crate_id":12,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"2:3629:12547":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"1:14484:17040":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"21:6902:10262":{"crate_id":21,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"2:49623:12678":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"16:6021:14908":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"18:660:15112":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"21:512:7076":{"crate_id":21,"path":["libc","unix","utimbuf"],"kind":"struct"},"21:4503:10133":{"crate_id":21,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"0:2506:5483":{"crate_id":0,"path":["chrono","format","Numeric","WeekdayFromMon"],"kind":"variant"},"1:10586:13615":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"2:49377:12666":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"5:8335:14352":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"17:13912:16762":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"1:15380:16954":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"1:11363:13700":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"5:3038:12561":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"16:7453:14742":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"17:10253:15049":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"2:12807:12661":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"2:23429:26311":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"16:4671:15419":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"17:3743:15070":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"17:10052:17123":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"1:2187:13488":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"0:2792:1958":{"crate_id":0,"path":["chrono","Weekday","Sat"],"kind":"variant"},"21:5261:10725":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"2:46744:13801":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"17:10635:16120":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"0:2488:5468":{"crate_id":0,"path":["chrono","format","Numeric","IsoYear"],"kind":"variant"},"2:28013:12580":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"16:4506:15415":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"2:48988:14260":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"2:3291:12723":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"12:2045:13489":{"crate_id":12,"path":["hashbrown","set","Union"],"kind":"struct"},"5:3772:13356":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"2:48491:107":{"crate_id":2,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"2:49371:12644":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"0:2871:2127":{"crate_id":0,"path":["chrono","ParseMonthError"],"kind":"struct"},"23:805:12610":{"crate_id":23,"path":["num_traits","ops","wrapping","WrappingSub"],"kind":"trait"},"2:3256:12719":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"2:46693:13798":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"17:13942:16770":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"21:4058:10086":{"crate_id":21,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"2:3727:12552":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"2:47784:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"2:49344:12645":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"17:13306:16580":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"21:81:6678":{"crate_id":21,"path":["libc","unix","DIR"],"kind":"enum"},"2:3333:12524":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"6:1622:7973":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"2:50346:14158":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"5:8106:13024":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"16:6101:14737":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"21:6098:11147":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"12:2323:16845":{"crate_id":12,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"2:48458:70":{"crate_id":2,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"17:11696:16183":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"2:24065:12573":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"21:5510:2464":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","time_t"],"kind":"typedef"},"2:48221:12713":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"2:3562:12545":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"2:55906:13775":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"5:1618:13024":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"16:6238:14744":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"17:10962:17151":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"1:3194:13640":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"17:13865:16748":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"17:12771:16385":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"6:6185:11151":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"16:3195:14916":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"2:10424:17183":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"1:7620:13546":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"2:51660:13953":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"21:5363:10732":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"2:8084:13198":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"20:492:2427":{"crate_id":20,"path":["time","Tm"],"kind":"struct"},"2:53347:16935":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"2:24052:12574":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"17:10353:15052":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"21:4363:10117":{"crate_id":21,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"2:2203:1050":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"12:1667:14570":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"1:2159:13355":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"1:2166:12633":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"2:49850:13832":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"2:49220:14123":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"2:10557:13338":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"17:11499:16165":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"1:3623:15247":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"2:49240:14125":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"2:51192:15765":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"0:2539:5513":{"crate_id":0,"path":["chrono","format","Fixed","LongMonthName"],"kind":"variant"},"17:12373:16318":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"16:5736:14656":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"5:4215:12633":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"2:22542:62879":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"21:5514:10771":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"17:13685:16707":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"17:13506:16633":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"17:9961:17120":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"1:1497:13528":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"2:24196:14186":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"6:4306:10109":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"0:2553:5147":{"crate_id":0,"path":["chrono","format","Fixed","Nanosecond6"],"kind":"variant"},"1:10591:13627":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"21:5461:10741":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"5:8353:16855":{"crate_id":5,"path":["alloc","slice","merge_sort","Run"],"kind":"struct"},"17:10149:17118":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"20:519:1887":{"crate_id":20,"path":["time","ParseError"],"kind":"enum"},"2:3382:12532":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"17:9719:17115":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"2:50390:12696":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"21:6628:11517":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"16:2773:14935":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"2:52264:13965":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"23:803:12605":{"crate_id":23,"path":["num_traits","ops","wrapping","WrappingAdd"],"kind":"trait"},"17:12712:16377":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"19:0:994":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"1:3192:128":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"21:6844:10254":{"crate_id":21,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"2:52342:13972":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"12:1200:14559":{"crate_id":12,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"21:4309:10110":{"crate_id":21,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"1:11453:13498":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"16:6644:14800":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"2:48207:12706":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"0:2481:2810":{"crate_id":0,"path":["chrono","format","Numeric"],"kind":"enum"},"6:3918:10070":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"2:23424:13942":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"2:38750:12695":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"17:11779:16200":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"2:50990:15764":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"12:2013:12633":{"crate_id":12,"path":["hashbrown","set","Drain"],"kind":"struct"},"6:4431:10125":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"6:5269:10725":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"16:4386:15411":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"6:4494:10131":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"6:5978:11141":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"0:2490:5470":{"crate_id":0,"path":["chrono","format","Numeric","IsoYearDiv100"],"kind":"variant"},"2:47504:12744":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"2:22540:62881":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"2:24696:165":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"17:542:14679":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"6:4358:10115":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"16:4922:15427":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"1:10376:17211":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"6:4203:10099":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"16:5330:15369":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"1:3317:13643":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"21:5189:10721":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"0:2551:5146":{"crate_id":0,"path":["chrono","format","Fixed","Nanosecond3"],"kind":"variant"},"17:11572:16169":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"17:2512:15047":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"2:56316:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:13837:13550":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"17:13453:16618":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"12:784:13528":{"crate_id":12,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"2:24027:15737":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"16:7250:14815":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"0:2197:1896":{"crate_id":0,"path":["chrono","offset","LocalResult"],"kind":"enum"},"17:9759:17116":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"1:1476:12633":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"12:968:13533":{"crate_id":12,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"16:5975:14782":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"1:10565:13607":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"6:4060:10085":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"5:6954:14273":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"1:13482:17196":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"16:7884:14749":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"16:3522:15297":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"1:10795:13639":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"1:1194:21122":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"2:46270:14049":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"2:53068:13970":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"2:3262:220":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"21:1614:7973":{"crate_id":21,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"17:11653:16180":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"16:4704:15420":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"2:46523:13802":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"0:2783:1952":{"crate_id":0,"path":["chrono","Weekday","Wed"],"kind":"variant"},"21:1564:7969":{"crate_id":21,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"21:1657:7976":{"crate_id":21,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"17:13986:16777":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"14:244:17008":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"1:7634:13547":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"1:6464:13446":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"2:22763:13938":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"16:7894:14777":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"1:11386:6861":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"7:0:1472":{"crate_id":7,"path":["unwind"],"kind":"module"},"10:0:6518":{"crate_id":10,"path":["rustc_std_workspace_alloc"],"kind":"module"},"17:13098:16538":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"20:0:1545":{"crate_id":20,"path":["time"],"kind":"module"},"17:13172:16549":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"0:2559:5151":{"crate_id":0,"path":["chrono","format","Fixed","TimezoneOffsetColon"],"kind":"variant"},"21:6856:10256":{"crate_id":21,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"1:7932:13628":{"crate_id":1,"path":["std","sync","mpsc","blocking","Inner"],"kind":"struct"},"5:6257:14328":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"16:2816:14928":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"16:2866:14910":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"21:6873:10258":{"crate_id":21,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"2:51840:15770":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"2:46940:13199":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"2:10276:119":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"6:1617:7972":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"1:10637:21118":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"21:5220:10724":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"21:5151:10717":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"1:2751:12693":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"2:46624:13793":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"5:8359:216":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"23:407:15126":{"crate_id":23,"path":["num_traits","float","FloatCore"],"kind":"trait"},"21:4087:10089":{"crate_id":21,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"2:46295:14257":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"6:0:798":{"crate_id":6,"path":["libc"],"kind":"module"},"16:7042:14958":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"17:12507:16340":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"18:790:15098":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"17:9769:65459":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"2:3503:131":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"2:51384:13996":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"17:9574:15005":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"17:9551:15036":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"2:11885:14132":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"1:11167:13433":{"crate_id":1,"path":["std","net","ip","IpAddr"],"kind":"enum"},"21:4387:10120":{"crate_id":21,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"2:48577:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"5:7212:12633":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"21:4411:10123":{"crate_id":21,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"21:1622:7974":{"crate_id":21,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"21:1700:7980":{"crate_id":21,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"2:8157:13579":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"5:6764:13158":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"2:8857:12636":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"2:3250:211":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"2:10280:12705":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"5:1607:13356":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"2:47633:178":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"17:681:15396":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"0:2199:174":{"crate_id":0,"path":["chrono","offset","LocalResult","None"],"kind":"variant"},"17:9896:65454":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"1:3335:13648":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"2:49523:12681":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"17:1236:17112":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"16:6014:14784":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"5:5833:12657":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"20:467:12469":{"crate_id":20,"path":["time","PreciseTime"],"kind":"struct"},"1:11079:13171":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"1:4045:127":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"17:11026:17156":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"18:849:15103":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"18:801:15099":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"5:4628:235":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"2:53378:16938":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"5:1441:13535":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"2:46339:14252":{"crate_id":2,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"16:6366:14576":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"2:51038:13982":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"1:5794:13413":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"6:4364:10116":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"6:4164:10096":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"6:4183:10097":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"1:13948:13551":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"5:2330:14379":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"16:7467:14743":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"21:4156:10096":{"crate_id":21,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"9:603:17734":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"2:49387:12665":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"16:6087:14739":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"21:1900:8124":{"crate_id":21,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"1:5379:13683":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"2:53442:16942":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"18:0:6525":{"crate_id":18,"path":["memchr"],"kind":"module"},"2:46410:100":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"23:684:12600":{"crate_id":23,"path":["num_traits","ops","mul_add","MulAddAssign"],"kind":"trait"},"6:3997:10077":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"16:5273:14676":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"2:22561:62884":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"1:1079:13423":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"1:12673:15271":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"18:610:15109":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"2:3085:13895":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"2:9956:14101":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"2:48078:14196":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"2:3698:12548":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"17:9689:65457":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"18:782:16106":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"5:3329:13355":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"16:3800:15406":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"2:53241:13973":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"23:621:12588":{"crate_id":23,"path":["num_traits","ops","checked","CheckedAdd"],"kind":"trait"},"17:10106:15082":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"23:968:12509":{"crate_id":23,"path":["num_traits","Num"],"kind":"trait"},"5:923:14394":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"14:47:17170":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"21:0:798":{"crate_id":21,"path":["libc"],"kind":"module"},"2:9236:12748":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"1:7800:13556":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"16:3320:14973":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"2:32258:13082":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"1:14863:15274":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"21:1539:7966":{"crate_id":21,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"1:1156:17189":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"6:6910:10262":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"21:1728:7984":{"crate_id":21,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"1:2192:13489":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"1:15127:13473":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"6:5407:10736":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"16:2991:14923":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"12:2039:13488":{"crate_id":12,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"1:5957:13745":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"18:829:15102":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"2:11374:12682":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"2:3258:218":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"1:10933:13573":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"17:13598:16658":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"2:46915:17032":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"18:712:12623":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"2:46583:13789":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"16:6964:12744":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"23:572:12587":{"crate_id":23,"path":["num_traits","int","PrimInt"],"kind":"trait"},"1:1534:13534":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"17:13062:16508":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"16:5815:14662":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"2:8381:151":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"21:1692:7979":{"crate_id":21,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"2:5166:12727":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"17:13933:16768":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"1:10821:129":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"17:12010:16245":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"17:10304:14990":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"16:7406:14745":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"2:3268:12720":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"18:744:65461":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"12:840:13525":{"crate_id":12,"path":["hashbrown","map","Keys"],"kind":"struct"},"2:10911:214":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"16:6554:14797":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"23:624:12595":{"crate_id":23,"path":["num_traits","ops","checked","CheckedSub"],"kind":"trait"},"2:46362:14253":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"1:14964:2406":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"2:7647:13030":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"6:4262:10104":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"5:7633:14329":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"21:609:7088":{"crate_id":21,"path":["libc","unix","tms"],"kind":"struct"},"1:9638:59978":{"crate_id":1,"path":["std","sys_common","mutex","MovableMutex"],"kind":"struct"},"17:11794:16206":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"6:599:7085":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"2:48503:127":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"1:9717:13676":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutex"],"kind":"struct"},"6:4371:10117":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"1:5780:13411":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"16:5790:14661":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"21:4317:10111":{"crate_id":21,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"6:5159:10717":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"16:6032:14677":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"12:937:13531":{"crate_id":12,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"21:5284:10728":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"5:792:108":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"13:120:49709":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"0:2585:5546":{"crate_id":0,"path":["chrono","format","InternalFixed"],"kind":"struct"},"16:6949:14954":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"2:47826:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"0:2786:1954":{"crate_id":0,"path":["chrono","Weekday","Thu"],"kind":"variant"},"2:49230:14124":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"5:7257:15220":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"17:13898:16755":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"1:4436:13193":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"16:2889:14929":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"1:4991:13426":{"crate_id":1,"path":["std","net","addr","ToSocketAddrs"],"kind":"trait"},"16:2754:14672":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"6:5379:10733":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"16:4448:15413":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"6:5185:10719":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"17:11962:16236":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"6:4066:10086":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"2:46493:15239":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"2:51708:13957":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"16:3338:14670":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"6:670:2469":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"16:2912:14911":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"1:14507:15855":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"2:56290:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"23:245:57928":{"crate_id":23,"path":["num_traits","bounds","UpperBounded"],"kind":"trait"},"17:10489:15015":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"2:24764:167":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"1:1419:13355":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"1:15389:60402":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"1:10365:15396":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"1:11294:13686":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"1:14869:15275":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"1:2170:13485":{"crate_id":1,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"1:8844:17201":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"6:6155:11149":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"2:3339:12527":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"2:46285:14256":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"5:1091:15220":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"17:11186:16994":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"17:9034:51390":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"16:6072:14628":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"2:10218:205":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"21:5351:10731":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"2:13819:187":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"5:6475:12633":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"0:2466:3376":{"crate_id":0,"path":["chrono","format","Pad","Zero"],"kind":"variant"},"21:5406:10737":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"2:48984:14259":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"2:22952:13941":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"2:14201:13484":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"17:10988:17153":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"5:1215:14377":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"6:6614:7032":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"1:10576:60401":{"crate_id":1,"path":["std","thread","local","fast","DtorState"],"kind":"enum"},"16:7477:14763":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"5:8321:14351":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"1:3360:2465":{"crate_id":1,"path":["std","io"],"kind":"module"},"23:441:12582":{"crate_id":23,"path":["num_traits","float","Float"],"kind":"trait"},"2:37593:12623":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"1:6204:13698":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"17:10236:15007":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"17:11809:16212":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"6:4293:10107":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"5:2262:14380":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"22:131:2500":{"crate_id":22,"path":["num_integer","mod_floor"],"kind":"function"},"6:1908:8124":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"2:47658:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"17:13799:16731":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"6:4073:10087":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"1:15909:6540":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"21:530:7078":{"crate_id":21,"path":["libc","unix","rlimit"],"kind":"struct"},"1:7654:13548":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"0:2776:1908":{"crate_id":0,"path":["chrono","Weekday"],"kind":"enum"},"17:10502:16991":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"1:12132:13600":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"1:1637:13536":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"1:9065:13711":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"2:46415:14192":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"21:4273:10106":{"crate_id":21,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"6:5292:10728":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"6:1723:7982":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"6:6935:11707":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"21:3937:10071":{"crate_id":21,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"1:10863:13184":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"11:46:16847":{"crate_id":11,"path":["adler","algo","U32X4"],"kind":"struct"},"2:38813:12724":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"2:10229:134":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"17:11993:16242":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"1:11939:181":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"2:5582:13948":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"1:6864:13418":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"1:4362:13668":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"2:49833:13831":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"2:2753:579":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"6:5130:10675":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"2:12696:14138":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"17:11738:16188":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"2:3540:12553":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"2:3387:12533":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"2:10284:12713":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"18:650:15108":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"17:12645:16370":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"2:24209:14185":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"17:13788:16727":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"17:11555:16168":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"16:3241:14918":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"0:2201:2523":{"crate_id":0,"path":["chrono","offset","LocalResult","Single"],"kind":"variant"},"6:6239:11155":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"17:8902:51387":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"17:10950:17150":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"5:69:14323":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"17:12028:16246":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"16:5384:14636":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"2:11183:12661":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"2:50010:15759":{"crate_id":2,"path":["core","str","lossy","Utf8LossyChunk"],"kind":"struct"},"17:9592:128":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"2:3497:12543":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"1:10847:13660":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"21:5555:10773":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"2:10288:12710":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"1:7797:6799":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"6:4341:10113":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"0:2541:5515":{"crate_id":0,"path":["chrono","format","Fixed","ShortWeekdayName"],"kind":"variant"},"2:3558:12544":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"2:52878:13966":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"1:4706:13170":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"6:4325:10111":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"2:46949:16922":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"0:2563:5541":{"crate_id":0,"path":["chrono","format","Fixed","TimezoneOffset"],"kind":"variant"},"0:2184:1907":{"crate_id":0,"path":["chrono","Timelike"],"kind":"trait"},"1:9342:13441":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"6:4523:10135":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"1:14537:118":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"0:2821:2081":{"crate_id":0,"path":["chrono","Month","January"],"kind":"variant"},"5:1653:13527":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"1:11331:13427":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"2:3715:137":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"21:6927:11707":{"crate_id":21,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"1:12053:13593":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"0:1595:671":{"crate_id":0,"path":["chrono","format"],"kind":"module"},"21:536:7079":{"crate_id":21,"path":["libc","unix","rusage"],"kind":"struct"},"1:11226:16951":{"crate_id":1,"path":["std","net","ip","fmt","Span"],"kind":"struct"},"21:154:6745":{"crate_id":21,"path":["libc","unix","fpos_t"],"kind":"enum"},"21:4185:10098":{"crate_id":21,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"16:2733:14630":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"6:1690:7978":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"5:7444:15220":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"2:10219:5650":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"16:547:14657":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"16:5505:14645":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"18:820:15101":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"21:4323:10112":{"crate_id":21,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"6:6028:7928":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"2:23994:14038":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"6:1630:7974":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"16:7342:14774":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"2:10282:12712":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"21:1525:7964":{"crate_id":21,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"2:51297:15766":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"12:1100:13535":{"crate_id":12,"path":["hashbrown","map","Entry"],"kind":"enum"},"1:9593:15262":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"2:49655:12673":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"5:1939:13485":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"6:1572:7969":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"5:4699:15225":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"5:5837:12658":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"2:47538:12745":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"1:9179:17201":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"6:6221:11154":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"17:13370:16599":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"1:1136:12701":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"21:662:2469":{"crate_id":21,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"17:10448:15012":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"21:3970:10075":{"crate_id":21,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"0:2789:1956":{"crate_id":0,"path":["chrono","Weekday","Fri"],"kind":"variant"},"2:48784:17037":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"2:45910:199":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"17:12982:16448":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"5:1472:13536":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"17:11231:15039":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"0:2836:2091":{"crate_id":0,"path":["chrono","Month","June"],"kind":"variant"},"21:4515:10135":{"crate_id":21,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"17:10844:15014":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"21:6116:11148":{"crate_id":21,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"2:4866:14060":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"2:3153:149":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"2:49279:14127":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"12:2315:65447":{"crate_id":12,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"12:2009:13024":{"crate_id":12,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"17:510:17110":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"21:4195:10099":{"crate_id":21,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"2:3486:12542":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"6:6852:10254":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"2:49675:12662":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"2:50293:16933":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"17:11835:16217":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"17:13429:16610":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"16:7761:14818":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"2:3377:12531":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"1:6087:13692":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"2:4709:13890":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"21:603:7087":{"crate_id":21,"path":["libc","unix","itimerval"],"kind":"struct"},"2:3370:12534":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"1:3524:13180":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"6:3990:10076":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"1:9466:17282":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"6:1658:7975":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"1:12231:6641":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"23:2514:12583":{"crate_id":23,"path":["num_traits","float","FloatConst"],"kind":"trait"},"23:5056:12574":{"crate_id":23,"path":["num_traits","ParseFloatError"],"kind":"struct"},"16:4734:15421":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"21:4219:10101":{"crate_id":21,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"16:5561:14648":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"17:10028:17121":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"2:46254:14047":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"6:5469:10741":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"21:592:7085":{"crate_id":21,"path":["libc","unix","linger"],"kind":"struct"},"16:4955:15428":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"2:11918:14133":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"2:11222:14114":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"17:13590:16657":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"17:294:17108":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"1:11382:13465":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"23:638:12594":{"crate_id":23,"path":["num_traits","ops","checked","CheckedShr"],"kind":"trait"},"18:766:16116":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"5:8097:14283":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"1:5965:13746":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"1:2934:180":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"2:13034:12655":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"0:2833:2089":{"crate_id":0,"path":["chrono","Month","May"],"kind":"variant"},"16:7303:14816":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"14:0:6521":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"16:5672:14652":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"1:8486:13594":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"2:12954:3373":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"12:2303:16842":{"crate_id":12,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"23:810:12607":{"crate_id":23,"path":["num_traits","ops","wrapping","WrappingNeg"],"kind":"trait"},"16:6464:14754":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"2:4946:13141":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"2:32299:13084":{"crate_id":2,"path":["core","mem","valid_align","ValidAlign"],"kind":"struct"},"2:49292:14128":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"0:2619:3378":{"crate_id":0,"path":["chrono","format","Item","Literal"],"kind":"variant"},"5:8304:14193":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"16:3772:15405":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"21:3958:10074":{"crate_id":21,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"6:1584:7970":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"2:5189:13145":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"17:13924:16764":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"18:774:16106":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"0:2812:1993":{"crate_id":0,"path":["chrono","ParseWeekdayError"],"kind":"struct"},"16:5717:14655":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"2:47556:188":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"1:14943:13554":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"1:10696:5500":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"}},"external_crates":{"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"23":{"name":"num_traits","html_root_url":"https://docs.rs/num-traits/0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"20":{"name":"time","html_root_url":"https://doc.rust-lang.org/time/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"22":{"name":"num_integer","html_root_url":"https://docs.rs/num-integer/0.1/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"adler","html_root_url":"https://docs.rs/adler/0.2.3/"},"21":{"name":"libc","html_root_url":null},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":16}