{"root":"0:0","crate_version":"0.8.2","includes_private":false,"index":{"a:2:3065-0:200":{"id":"a:2:3065-0:200","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3065","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:200","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2632-0:55":{"id":"b:2:2632-0:55","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3029","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2626","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Entry","id":"0:55","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:2634"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:61":{"id":"0:61","crate_id":0,"name":"Occupied","span":{"filename":"src/lib.rs","begin":[76,4],"end":[76,34]},"visibility":"default","docs":"An occupied Entry","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"resolved_path","inner":{"name":"OccupiedEntry","id":"0:69","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}}]}},"0:179":{"id":"0:179","crate_id":0,"name":"extend","span":{"filename":"src/lib.rs","begin":[808,4],"end":[810,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["iter",{"kind":"generic","inner":"I"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"2:7715","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","binding":{"equality":{"type":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"V"}}}]}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null}}}],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"b:2:2632-0:215":{"id":"b:2:2632-0:215","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3029","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2626","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:215","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:2634"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:8180":{"id":"2:8180","crate_id":2,"name":"FusedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"2:12635":{"id":"2:12635","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:15809"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Chars","id":"2:47813","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"0:318":{"id":"0:318","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1054,0],"end":[1054,44]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":["is_empty","len"],"trait":{"kind":"resolved_path","inner":{"name":"ExactSizeIterator","id":"2:7784","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:12669":{"id":"2:12669","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"prim@char":"1:15809","`DoubleEndedIterator`":"2:7759","str::rsplit_terminator":"1:15814","self::pattern":"2:12249","str::split":"1:15814"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitTerminator","id":"2:47893","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12259","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":[],"abi":"\"Rust\"","has_body":true}},"a:2:3065-0:246":{"id":"a:2:3065-0:246","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"V"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3065","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3065","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3065-0:226":{"id":"a:2:3065-0:226","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3065","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Keys","id":"0:226","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:7907":{"id":"2:7907","crate_id":2,"name":"Iterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:7908","2:7909","2:7910","2:7911","2:7913","2:7916","2:7917","2:7918","2:7919","2:7921","2:7923","2:7924","2:7926","2:7929","2:7936","2:7938","2:7941","2:7942","2:7943","2:7945","2:7947","2:7950","2:7951","2:7952","2:7956","2:7959","2:7960","2:7961","2:7963","2:7964","2:7966","2:7969","2:7979","2:7994","2:7996","2:8000","2:8009","2:8012","2:8014","2:8017","2:8024","2:8031","2:8038","2:8047","2:8057","2:8064","2:8071","2:8072","2:8073","2:8085","2:8092","2:8104","2:8111","2:8112","2:8117","2:8120","2:8123","2:8124","2:8126","2:8128","2:8131","2:8134","2:8137","2:8140","2:8143","2:8146","2:8148","2:8150","2:8152","2:8154","2:8156","2:8157","2:8165"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"b:2:3746-0:55":{"id":"b:2:3746-0:55","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3029","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3744","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Entry","id":"0:55","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:3748"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2927":{"id":"2:2927","crate_id":2,"name":"Into","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2929"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:174":{"id":"0:174","crate_id":0,"name":"extend","span":{"filename":"src/lib.rs","begin":[800,4],"end":[804,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["iter",{"kind":"generic","inner":"I"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"2:7715","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","binding":{"equality":{"type":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"generic","inner":"V"}]}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null}}}],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"a:2:3036-0:51":{"id":"a:2:3036-0:51","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"V"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"VecMap","id":"0:51","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:347":{"id":"0:347","crate_id":0,"name":"size_hint","span":{"filename":"src/lib.rs","begin":[916,0],"end":[916,49]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:45974","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"2:12678":{"id":"2:12678","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"self::pattern":"2:12249","prim@char":"1:15809","str::splitn":"1:15814"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitN","id":"2:47965","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12259","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"ty":{"kind":"qualified_path","inner":{"name":"Searcher","self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12259","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:12274","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":[],"abi":"\"Rust\"","has_body":true}},"2:3272":{"id":"2:3272","crate_id":2,"name":"FnMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3274"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnOnce","id":"2:3275","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"5:5441":{"id":"5:5441","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:315","`String`":"5:7626"},"attrs":["#[stable(feature = \"box_str\", since = \"1.4.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:315","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:7409","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7626","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"1:7782":{"id":"1:7782","crate_id":1,"name":"Termination","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:7783"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:91":{"id":"0:91","crate_id":0,"name":"values_mut","span":{"filename":"src/lib.rs","begin":[229,4],"end":[231,5]},"visibility":"public","docs":"Returns an iterator visiting all values in ascending order of the keys.\nThe iterator's element type is `&'r mut V`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ValuesMut","id":"0:242","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"0:278":{"id":"0:278","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1003,0],"end":[1005,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":["nth_back","rfold","advance_back_by","try_rfold","rfind"],"trait":{"kind":"resolved_path","inner":{"name":"DoubleEndedIterator","id":"2:7759","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Keys","id":"0:226","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["0:281"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:7674":{"id":"2:7674","crate_id":2,"name":"Sum","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:7676"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"2:2634":{"id":"2:2634","crate_id":2,"name":"borrow_mut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":["const"],"abi":"\"Rust\"","has_body":true}},"0:194":{"id":"0:194","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[838,0],"end":[843,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IndexMut","id":"2:3331","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"usize"}}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"VecMap","id":"0:51","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["0:197"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2953-0:69":{"id":"b:2:2953-0:69","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:2930","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:2927","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"OccupiedEntry","id":"0:69","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:2956"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3032":{"id":"2:3032","crate_id":2,"name":"StructuralPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:185":{"id":"0:185","crate_id":0,"name":"index","span":{"filename":"src/lib.rs","begin":[817,4],"end":[819,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"V"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"b:2:2957-0:251":{"id":"b:2:2957-0:251","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:2930","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:251","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:2959"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:12725":{"id":"2:12725","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"self::pattern":"2:12249","prim@char":"1:15809"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_deprecated(since = \"1.33.0\", reason =\n\"superseded by `trim_end_matches`\", suggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12259","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"ty":{"kind":"qualified_path","inner":{"name":"Searcher","self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12259","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:12274","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":[],"abi":"\"Rust\"","has_body":true}},"a:2:3024-0:242":{"id":"a:2:3024-0:242","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"V"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ValuesMut","id":"0:242","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:193":{"id":"0:193","crate_id":0,"name":"index_mut","span":{"filename":"src/lib.rs","begin":[833,4],"end":[835,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"V"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"b:2:2957-0:246":{"id":"b:2:2957-0:246","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:2930","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:2959"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:281":{"id":"0:281","crate_id":0,"name":"next_back","span":{"filename":"src/lib.rs","begin":[1004,4],"end":[1004,83]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:45974","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"a:2:3036-0:234":{"id":"a:2:3036-0:234","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"V"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Values","id":"0:234","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3091":{"id":"2:3091","crate_id":2,"name":"Add","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3093","2:3094"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"2:12634":{"id":"2:12634","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"1:15814"},"attrs":["#[inline]","#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"5:671":{"id":"5:671","crate_id":5,"name":"clone_into","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["target",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"2:2859":{"id":"2:2859","crate_id":2,"name":"FloatToInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"Int","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:2858","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"0:352":{"id":"0:352","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[930,0],"end":[930,56]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":["partial_cmp_by","all","rev","fold","unzip","try_collect","le","scan","intersperse_with","last","min_by_key","ge","cmp","zip","copied","eq","reduce","cloned","partition","eq_by","flat_map","take","for_each","advance_by","max_by","position","is_sorted","cycle","partial_cmp","try_reduce","filter","partition_in_place","flatten","peekable","nth","max_by_key","ne","count","size_hint","is_sorted_by","sum","find","is_partitioned","fuse","skip_while","gt","step_by","lt","is_sorted_by_key","product","find_map","collect","enumerate","inspect","try_fold","take_while","chain","skip","min","any","__iterator_get_unchecked","cmp_by","try_find","filter_map","try_for_each","by_ref","map_while","rposition","intersperse","map","min_by","max"],"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:215","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["0:355","0:356","0:357"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:125":{"id":"0:125","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[668,0],"end":[699,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"OccupiedEntry","id":"0:69","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["0:128","0:129","0:130","0:131","0:132"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11696":{"id":"2:11696","crate_id":2,"name":"SlicePattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:11697","2:11698"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:144":{"id":"0:144","crate_id":0,"name":"partial_cmp","span":{"filename":"src/lib.rs","begin":[724,4],"end":[726,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:45974","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Ordering","id":"2:36229","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"0:342":{"id":"0:342","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[916,0],"end":[916,49]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":["partial_cmp_by","all","rev","fold","unzip","try_collect","le","scan","intersperse_with","last","min_by_key","ge","cmp","zip","copied","eq","reduce","cloned","partition","eq_by","flat_map","take","for_each","advance_by","max_by","position","is_sorted","cycle","partial_cmp","try_reduce","filter","partition_in_place","flatten","peekable","nth","max_by_key","ne","count","size_hint","is_sorted_by","sum","find","is_partitioned","fuse","skip_while","gt","step_by","lt","is_sorted_by_key","product","find_map","collect","enumerate","inspect","try_fold","take_while","chain","skip","min","any","__iterator_get_unchecked","cmp_by","try_find","filter_map","try_for_each","by_ref","map_while","rposition","intersperse","map","min_by","max"],"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:200","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["0:345","0:346","0:347"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2632-0:69":{"id":"b:2:2632-0:69","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3029","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2626","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"OccupiedEntry","id":"0:69","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:2634"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3746-0:242":{"id":"b:2:3746-0:242","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3029","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3744","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ValuesMut","id":"0:242","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:3748"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:298":{"id":"0:298","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1020,0],"end":[1025,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":["partial_cmp_by","all","rev","fold","unzip","try_collect","le","scan","intersperse_with","last","min_by_key","ge","cmp","zip","copied","eq","reduce","cloned","partition","eq_by","flat_map","take","for_each","advance_by","max_by","position","is_sorted","cycle","partial_cmp","try_reduce","filter","partition_in_place","flatten","peekable","nth","max_by_key","ne","count","size_hint","is_sorted_by","sum","find","is_partitioned","fuse","skip_while","gt","step_by","lt","is_sorted_by_key","product","find_map","collect","enumerate","inspect","try_fold","take_while","chain","skip","min","any","__iterator_get_unchecked","cmp_by","try_find","filter_map","try_for_each","by_ref","map_while","rposition","intersperse","map","min_by","max"],"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ValuesMut","id":"0:242","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["0:301","0:302","0:304"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:9602":{"id":"2:9602","crate_id":2,"name":"Display","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:9603"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"b:2:2968-0:246":{"id":"b:2:2968-0:246","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:2927","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:2937","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:2971","2:2972"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:186":{"id":"0:186","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[822,0],"end":[829,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Index","id":"2:3327","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"usize"}}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"VecMap","id":"0:51","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["0:189","0:190"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:12637":{"id":"2:12637","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"2:47829","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"5:5442":{"id":"5:5442","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7626"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]","#[stable(feature = \"repeat_str\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7626","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"a:2:3065-0:64":{"id":"a:2:3065-0:64","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3065","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"VacantEntry","id":"0:64","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:76":{"id":"0:76","crate_id":0,"name":"default","span":{"filename":"src/lib.rs","begin":[93,4],"end":[93,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"2:7264":{"id":"2:7264","crate_id":2,"name":"Step","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:7265","2:7266","2:7267","2:7268","2:7269","2:7270","2:7271"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2645","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"2:2722","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"2:2623":{"id":"2:2623","crate_id":2,"name":"Borrow","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2625"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3029","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"bounds":[],"implementors":[]}},"2:12666":{"id":"2:12666","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"prim@char":"1:15809","self::pattern":"2:12249","str::split":"1:15814","`DoubleEndedIterator`":"2:7759"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplit","id":"2:47861","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12259","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"ty":{"kind":"qualified_path","inner":{"name":"Searcher","self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12259","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:12274","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":[],"abi":"\"Rust\"","has_body":true}},"1:4624":{"id":"1:4624","crate_id":1,"name":"Read","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4625","1:4626","1:4628","1:4629","1:4630","1:4631","1:4632","1:4634","1:4635","1:4636","1:4637","1:4639"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:356":{"id":"0:356","crate_id":0,"name":"next","span":{"filename":"src/lib.rs","begin":[930,0],"end":[930,56]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:45974","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"generic","inner":"V"}}}]}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"b:2:7719-0:234":{"id":"b:2:7719-0:234","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"2:7715","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Values","id":"0:234","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:7721","2:7722","2:7723"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"2:3165":{"id":"2:3165","crate_id":2,"name":"Shl","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3167","2:3168"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"2:2921":{"id":"2:2921","crate_id":2,"name":"AsRef","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2923"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3029","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"bounds":[],"implementors":[]}},"2:3024":{"id":"2:3024","crate_id":2,"name":"Send","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"2:2966":{"id":"2:2966","crate_id":2,"name":"Error","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"qualified_path","inner":{"name":"Error","self_type":{"kind":"generic","inner":"U"},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:2937","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}}},"generics":{"params":[],"where_predicates":[]}}},"a:2:3065-0:51":{"id":"a:2:3065-0:51","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"V"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3065","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3065","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"VecMap","id":"0:51","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:2645":{"id":"2:2645","crate_id":2,"name":"Clone","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2646","2:2647"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"b:2:3746-0:69":{"id":"b:2:3746-0:69","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3029","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3744","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"OccupiedEntry","id":"0:69","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:3748"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2933":{"id":"2:2933","crate_id":2,"name":"TryInto","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2935","2:2936"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:163":{"id":"0:163","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[782,4],"end":[782,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"T"}}}]},"generics":{"params":[],"where_predicates":[]}}},"b:2:2953-0:226":{"id":"b:2:2953-0:226","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:2930","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:2927","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Keys","id":"0:226","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:2956"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:264":{"id":"0:264","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[990,0],"end":[992,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":["nth_back","rfold","advance_back_by","try_rfold","rfind"],"trait":{"kind":"resolved_path","inner":{"name":"DoubleEndedIterator","id":"2:7759","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:251","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["0:267"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:2626":{"id":"2:2626","crate_id":2,"name":"BorrowMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2628"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3029","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2623","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Borrowed"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"2:9610":{"id":"2:9610","crate_id":2,"name":"UpperHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:9611"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"2:3126":{"id":"2:3126","crate_id":2,"name":"SubAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3128"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"b:2:2629-0:215":{"id":"b:2:2629-0:215","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3029","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2623","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:215","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:2631"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3143":{"id":"2:3143","crate_id":2,"name":"Not","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3144","2:3145"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"2:7678":{"id":"2:7678","crate_id":2,"name":"Product","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:7680"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"b:2:2629-0:246":{"id":"b:2:2629-0:246","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3029","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2623","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:2631"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2963-0:242":{"id":"b:2:2963-0:242","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:2937","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:2933","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ValuesMut","id":"0:242","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:2966","2:2967"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:12706":{"id":"2:12706","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[inline]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_deprecated(since = \"1.33.0\", reason = \"superseded by `trim_end`\",\nsuggestion = \"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"0:296":{"id":"0:296","crate_id":0,"name":"next_back","span":{"filename":"src/lib.rs","begin":[1017,4],"end":[1017,85]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:45974","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"V"}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"b:2:2632-0:251":{"id":"b:2:2632-0:251","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3029","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2626","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:251","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:2634"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8633-0:51":{"id":"a:2:8633-0:51","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"V"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:8633","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:8633","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"VecMap","id":"0:51","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:8634-0:251":{"id":"a:2:8634-0:251","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"V"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:8634","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:8634","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:251","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3106":{"id":"2:3106","crate_id":2,"name":"Div","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3108","2:3109"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"2:2675":{"id":"2:2675","crate_id":2,"name":"PartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2677","2:2678"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3029","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"bounds":[],"implementors":[]}},"a:2:3065-0:242":{"id":"a:2:3065-0:242","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3065","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ValuesMut","id":"0:242","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2953-0:64":{"id":"b:2:2953-0:64","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:2930","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:2927","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"VacantEntry","id":"0:64","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:2956"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3467":{"id":"2:3467","crate_id":2,"name":"OneSidedRange","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3029","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RangeBounds","id":"2:3398","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"b:2:2953-0:242":{"id":"b:2:2953-0:242","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:2930","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:2927","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ValuesMut","id":"0:242","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:2956"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:105":{"id":"0:105","crate_id":0,"name":"clear","span":{"filename":"src/lib.rs","begin":[460,4],"end":[460,58]},"visibility":"public","docs":"Clears the map, removing all key-value pairs.\n\n# Examples\n\n```\nuse vec_map::VecMap;\n\nlet mut a = VecMap::new();\na.insert(1, \"a\");\na.clear();\nassert!(a.is_empty());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"b:2:2963-0:55":{"id":"b:2:2963-0:55","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:2937","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:2933","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Entry","id":"0:55","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:2966","2:2967"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3029":{"id":"2:3029","crate_id":2,"name":"Sized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:124":{"id":"0:124","crate_id":0,"name":"insert","span":{"filename":"src/lib.rs","begin":[661,4],"end":[665,5]},"visibility":"public","docs":"Sets the value of the entry with the VacantEntry's key,\nand returns a mutable reference to it.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["value",{"kind":"generic","inner":"V"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"generic","inner":"V"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"2:9612":{"id":"2:9612","crate_id":2,"name":"Pointer","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:9613"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"2:12610":{"id":"2:12610","crate_id":2,"name":null,"span":null,"visibility":{"restricted":{"parent":"2:11709","path":"::str"}},"docs":null,"links":{},"attrs":["#[lang = \"str\"]","#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["2:12611","2:12612","2:12613","2:12614","2:12616","2:12619","2:12620","2:12621","2:12622","2:12623","2:12625","2:12627","2:12629","2:12631","2:12632","2:12633","2:12634","2:12635","2:12636","2:12637","2:12638","2:12639","2:12640","2:12641","2:12642","2:12643","2:12646","2:12649","2:12652","2:12656","2:12660","2:12663","2:12666","2:12669","2:12672","2:12675","2:12678","2:12681","2:12684","2:12687","2:12690","2:12693","2:12696","2:12699","2:12701","2:12703","2:12705","2:12706","2:12707","2:12710","2:12713","2:12716","2:12719","2:12722","2:12725","2:12728","2:12730","2:12731","2:12732","2:12733","2:12734","2:12736","2:12737"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:12734":{"id":"2:12734","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{}\", c);\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"1:15809"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDebug","id":"2:48142","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"2:2971":{"id":"2:2971","crate_id":2,"name":"Error","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"Infallible","id":"2:37407","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generics":{"params":[],"where_predicates":[]}}},"0:315":{"id":"0:315","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[1034,4],"end":[1034,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"generic","inner":"V"}]},"generics":{"params":[],"where_predicates":[]}}},"2:2956":{"id":"2:2956","crate_id":2,"name":"into","span":null,"visibility":"public","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2930"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":["const"],"abi":"\"Rust\"","has_body":true}},"2:2631":{"id":"2:2631","crate_id":2,"name":"borrow","span":null,"visibility":"public","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":["const"],"abi":"\"Rust\"","has_body":true}},"2:12639":{"id":"2:12639","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_whitespace":"1:15814"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_ascii_whitespace\", since = \"1.34.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitAsciiWhitespace","id":"2:48126","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"b:2:7719-0:200":{"id":"b:2:7719-0:200","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"2:7715","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:200","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:7721","2:7722","2:7723"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"b:2:2632-0:226":{"id":"b:2:2632-0:226","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3029","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2626","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Keys","id":"0:226","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:2634"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8634-0:69":{"id":"a:2:8634-0:69","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"V"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:8634","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:8634","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"OccupiedEntry","id":"0:69","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:12696":{"id":"2:12696","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"str::match_indices":"1:15814","`DoubleEndedIterator`":"2:7759","prim@char":"1:15809","self::pattern":"2:12249"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatchIndices","id":"2:48011","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12259","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"ty":{"kind":"qualified_path","inner":{"name":"Searcher","self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12259","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:12274","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":[],"abi":"\"Rust\"","has_body":true}},"0:79":{"id":"0:79","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[97,4],"end":[106,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Hasher","id":"2:9812","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null}}}],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"2:12656":{"id":"2:12656","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the rightmost match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"self::pattern":"2:12249","`None`":"2:45974","prim@char":"1:15809"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:45974","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12259","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"ty":{"kind":"qualified_path","inner":{"name":"Searcher","self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12259","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:12274","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":[],"abi":"\"Rust\"","has_body":true}},"b:2:2629-0:55":{"id":"b:2:2629-0:55","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3029","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2623","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Entry","id":"0:55","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:2631"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8634-0:64":{"id":"a:2:8634-0:64","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"V"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:8634","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:8634","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"VacantEntry","id":"0:64","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:118":{"id":"0:118","crate_id":0,"name":"or_insert","span":{"filename":"src/lib.rs","begin":[640,4],"end":[645,5]},"visibility":"public","docs":"Ensures a value is in the entry by inserting the default if empty, and\nreturns a mutable reference to the value in the entry.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["default",{"kind":"generic","inner":"V"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"generic","inner":"V"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"0:90":{"id":"0:90","crate_id":0,"name":"values","span":{"filename":"src/lib.rs","begin":[223,4],"end":[225,5]},"visibility":"public","docs":"Returns an iterator visiting all values in ascending order of the keys.\nThe iterator's element type is `&'r V`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Values","id":"0:234","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"0:316":{"id":"0:316","crate_id":0,"name":"next","span":{"filename":"src/lib.rs","begin":[1036,4],"end":[1047,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:45974","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"generic","inner":"V"}]}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"a:2:3036-0:200":{"id":"a:2:3036-0:200","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"V"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:200","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:7784":{"id":"2:7784","crate_id":2,"name":"ExactSizeIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:7785","2:7786"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"2:12627":{"id":"2:12627","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":["unsafe"],"abi":"\"Rust\"","has_body":true}},"1:9311":{"id":"1:9311","crate_id":1,"name":"StdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9312","1:9313","1:9314","1:9315","1:9316","1:9317","1:9318"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10521","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"b:2:2963-0:64":{"id":"b:2:2963-0:64","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:2937","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:2933","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"VacantEntry","id":"0:64","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:2966","2:2967"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3150":{"id":"2:3150","crate_id":2,"name":"BitAnd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3152","2:3153"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"a:2:8633-0:246":{"id":"a:2:8633-0:246","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"V"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:8633","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:8634","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:8633","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:670":{"id":"5:670","crate_id":5,"name":"to_owned","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"b:2:2957-0:55":{"id":"b:2:2957-0:55","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:2930","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Entry","id":"0:55","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:2959"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:12733":{"id":"2:12733","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"0:289":{"id":"0:289","crate_id":0,"name":"size_hint","span":{"filename":"src/lib.rs","begin":[1011,4],"end":[1011,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:45974","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"0:304":{"id":"0:304","crate_id":0,"name":"size_hint","span":{"filename":"src/lib.rs","begin":[1024,4],"end":[1024,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:45974","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"2:7724":{"id":"2:7724","crate_id":2,"name":"Extend","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:7726","2:7728","2:7729"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"2:12274":{"id":"2:12274","crate_id":2,"name":"ReverseSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:12276","2:12277","2:12278"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Searcher","id":"2:12268","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"b:2:2957-0:242":{"id":"b:2:2957-0:242","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:2930","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ValuesMut","id":"0:242","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:2959"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3024-0:226":{"id":"a:2:3024-0:226","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"V"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Keys","id":"0:226","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:345":{"id":"0:345","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[916,0],"end":[916,49]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"V"}}}]},"generics":{"params":[],"where_predicates":[]}}},"0:211":{"id":"0:211","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[905,4],"end":[913,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:200","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"a:2:3024-0:246":{"id":"a:2:3024-0:246","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"V"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:88":{"id":"0:88","crate_id":0,"name":"shrink_to_fit","span":{"filename":"src/lib.rs","begin":[204,4],"end":[213,5]},"visibility":"public","docs":"Trims the `VecMap` of any excess capacity.\n\nThe collection may reserve more space to avoid frequent reallocations.\n\n# Examples\n\n```\nuse vec_map::VecMap;\nlet mut map: VecMap<&str> = VecMap::with_capacity(10);\nmap.shrink_to_fit();\nassert_eq!(map.capacity(), 0);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"1:6564":{"id":"1:6564","crate_id":1,"name":"JoinHandleExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6565","1:6566"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:6958":{"id":"1:6958","crate_id":1,"name":"AsFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6959"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:320":{"id":"0:320","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1056,0],"end":[1066,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":["nth_back","rfold","advance_back_by","try_rfold","rfind"],"trait":{"kind":"resolved_path","inner":{"name":"DoubleEndedIterator","id":"2:7759","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["0:322"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3096":{"id":"2:3096","crate_id":2,"name":"Sub","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3098","2:3099"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:305":{"id":"0:305","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1027,0],"end":[1027,53]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":["is_empty","len"],"trait":{"kind":"resolved_path","inner":{"name":"ExactSizeIterator","id":"2:7784","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ValuesMut","id":"0:242","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:358":{"id":"0:358","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[932,0],"end":[932,69]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":["nth_back","rfold","advance_back_by","try_rfold","rfind"],"trait":{"kind":"resolved_path","inner":{"name":"DoubleEndedIterator","id":"2:7759","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:215","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["0:361"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:293":{"id":"0:293","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1016,0],"end":[1018,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":["nth_back","rfold","advance_back_by","try_rfold","rfind"],"trait":{"kind":"resolved_path","inner":{"name":"DoubleEndedIterator","id":"2:7759","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Values","id":"0:234","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["0:296"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:7721":{"id":"2:7721","crate_id":2,"name":"Item","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"qualified_path","inner":{"name":"Item","self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"generics":{"params":[],"where_predicates":[]}}},"5:5421":{"id":"5:5421","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[stable(feature = \"str_box_extras\", since = \"1.20.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:315","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:7409","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"Box","id":"5:315","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:7409","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"2:2937":{"id":"2:2937","crate_id":2,"name":"TryFrom","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2939","2:2940"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:5797":{"id":"1:5797","crate_id":1,"name":"DirEntryExt2","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5798"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10521","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"b:2:2968-0:200":{"id":"b:2:2968-0:200","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:2927","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:2937","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:200","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:2971","2:2972"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8633-0:55":{"id":"a:2:8633-0:55","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:8633","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Entry","id":"0:55","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:148":{"id":"0:148","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[736,0],"end":[740,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"fmt::Debug","id":"2:9595","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:9595","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"VecMap","id":"0:51","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["0:150"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:230":{"id":"0:230","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[940,0],"end":[946,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2645","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Keys","id":"0:226","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["0:233"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:172":{"id":"0:172","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[799,0],"end":[805,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":["extend_one","extend_reserve"],"trait":{"kind":"resolved_path","inner":{"name":"Extend","id":"2:7724","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"generic","inner":"V"}]}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"VecMap","id":"0:51","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["0:174"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:5743":{"id":"1:5743","crate_id":1,"name":"OpenOptionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5744","1:5745"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"2:3484":{"id":"2:3484","crate_id":2,"name":"FromResidual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3486"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Residual","self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"Try","id":"2:3479","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"a:2:8633-0:215":{"id":"a:2:8633-0:215","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:8633","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:215","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:361":{"id":"0:361","crate_id":0,"name":"next_back","span":{"filename":"src/lib.rs","begin":[932,0],"end":[932,69]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:45974","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"generic","inner":"V"}}}]}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"2:12632":{"id":"2:12632","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"str::slice_unchecked":"1:15814","`str`":"1:15814","crate::ops::IndexMut":"2:3331"},"attrs":["#[stable(feature = \"str_slice_mut\", since = \"1.5.0\")]","#[rustc_deprecated(since = \"1.29.0\", reason =\n\"use `get_unchecked_mut(begin..end)` instead\")]","#[inline]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":["unsafe"],"abi":"\"Rust\"","has_body":true}},"a:2:3036-0:69":{"id":"a:2:3036-0:69","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"V"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"OccupiedEntry","id":"0:69","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:121":{"id":"0:121","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[658,0],"end":[666,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"VacantEntry","id":"0:64","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["0:124"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3065-0:251":{"id":"a:2:3065-0:251","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3065","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:251","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:12622":{"id":"2:12622","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:15823"},"attrs":["#[stable(feature = \"str_as_mut_ptr\", since = \"1.36.0\")]","#[must_use]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"2:12672":{"id":"2:12672","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"str::split":"1:15814","prim@char":"1:15809","str::split_terminator":"1:15814","self::pattern":"2:12249"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitTerminator","id":"2:47911","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12259","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"ty":{"kind":"qualified_path","inner":{"name":"Searcher","self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12259","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:12274","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":[],"abi":"\"Rust\"","has_body":true}},"0:157":{"id":"0:157","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[751,4],"end":[751,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"generic","inner":"T"}]},"generics":{"params":[],"where_predicates":[]}}},"0:77":{"id":"0:77","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[96,0],"end":[107,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Hash","id":"2:9802","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null}}}],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"kind":"resolved_path","inner":{"name":"Hash","id":"2:9802","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"VecMap","id":"0:51","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["0:79"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:151":{"id":"0:151","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[742,0],"end":[748,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"FromIterator","id":"2:7711","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"generic","inner":"V"}]}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"VecMap","id":"0:51","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["0:153"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:22201":{"id":"2:22201","crate_id":2,"name":"MaskElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SimdElement","id":"2:22844","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:22192","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"2:3522":{"id":"2:3522","crate_id":2,"name":"CoerceUnsized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3029","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"bounds":[],"implementors":[]}},"b:2:2957-0:51":{"id":"b:2:2957-0:51","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:2930","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"VecMap","id":"0:51","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:2959"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3024-0:51":{"id":"a:2:3024-0:51","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"V"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"VecMap","id":"0:51","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:112":{"id":"0:112","crate_id":0,"name":"entry","span":{"filename":"src/lib.rs","begin":[590,4],"end":[606,5]},"visibility":"public","docs":"Gets the given key's corresponding entry in the map for in-place manipulation.\n\n# Examples\n\n```\nuse vec_map::VecMap;\n\nlet mut count: VecMap<u32> = VecMap::new();\n\n// count the number of occurrences of numbers in the vec\nfor x in vec![1, 2, 1, 2, 3, 4, 1, 2, 4] {\n    *count.entry(x).or_insert(0) += 1;\n}\n\nassert_eq!(count[1], 3);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["key",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Entry","id":"0:55","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"0:133":{"id":"0:133","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[701,0],"end":[712,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2645","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2645","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"VecMap","id":"0:51","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["0:135","0:136"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2963-0:226":{"id":"b:2:2963-0:226","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:2937","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:2933","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Keys","id":"0:226","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:2966","2:2967"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:6794":{"id":"1:6794","crate_id":1,"name":"ChildExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6795","1:6796"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10521","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"a:2:8633-0:64":{"id":"a:2:8633-0:64","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:8633","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"VacantEntry","id":"0:64","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:311":{"id":"0:311","crate_id":0,"name":"next_back","span":{"filename":"src/lib.rs","begin":[1030,4],"end":[1030,91]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:45974","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"generic","inner":"V"}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"b:2:2968-0:251":{"id":"b:2:2968-0:251","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:2927","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:2937","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:251","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:2971","2:2972"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:351":{"id":"0:351","crate_id":0,"name":"next_back","span":{"filename":"src/lib.rs","begin":[918,0],"end":[918,62]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:45974","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"V"}}}]}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"2:3134":{"id":"2:3134","crate_id":2,"name":"DivAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3136"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"b:2:2632-0:242":{"id":"b:2:2632-0:242","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3029","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2626","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ValuesMut","id":"0:242","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:2634"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2953-0:246":{"id":"b:2:2953-0:246","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:2930","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:2927","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:2956"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:9606":{"id":"2:9606","crate_id":2,"name":"Binary","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:9607"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"2:7723":{"id":"2:7723","crate_id":2,"name":"into_iter","span":null,"visibility":"public","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"I"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"0:259":{"id":"0:259","crate_id":0,"name":"next","span":{"filename":"src/lib.rs","begin":[984,4],"end":[984,65]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:45974","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"generic","inner":"V"}]}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"5:663":{"id":"5:663","crate_id":5,"name":"ToOwned","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:664","5:665","5:666"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"b:2:2629-0:234":{"id":"b:2:2629-0:234","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3029","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2623","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Values","id":"0:234","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:2631"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3065-0:69":{"id":"a:2:3065-0:69","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3065","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"OccupiedEntry","id":"0:69","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:81":{"id":"0:81","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[109,0],"end":[635,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"VecMap","id":"0:51","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["0:83","0:84","0:85","0:86","0:87","0:88","0:89","0:90","0:91","0:92","0:93","0:94","0:95","0:99","0:103","0:104","0:105","0:106","0:107","0:108","0:109","0:111","0:112","0:113"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:357":{"id":"0:357","crate_id":0,"name":"size_hint","span":{"filename":"src/lib.rs","begin":[930,0],"end":[930,56]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:45974","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"2:7715":{"id":"2:7715","crate_id":2,"name":"IntoIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:7716","2:7717","2:7718"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"2:2680":{"id":"2:2680","crate_id":2,"name":"Eq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2675","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"b:2:2632-0:51":{"id":"b:2:2632-0:51","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3029","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2626","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"VecMap","id":"0:51","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:2634"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2963-0:51":{"id":"b:2:2963-0:51","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:2937","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:2933","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"VecMap","id":"0:51","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:2966","2:2967"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:6446":{"id":"1:6446","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6447","1:6448","1:6449","1:6450","1:6452","1:6454","1:6455"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10521","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"2:2959":{"id":"2:2959","crate_id":2,"name":"from","span":null,"visibility":"public","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":["const"],"abi":"\"Rust\"","has_body":true}},"2:3559":{"id":"2:3559","crate_id":2,"name":"DispatchFromDyn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:223":{"id":"0:223","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[931,0],"end":[931,51]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":["is_empty","len"],"trait":{"kind":"resolved_path","inner":{"name":"ExactSizeIterator","id":"2:7784","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:215","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"5:5443":{"id":"5:5443","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"1:15814"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7626","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"b:2:2629-0:251":{"id":"b:2:2629-0:251","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3029","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2623","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:251","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:2631"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:12736":{"id":"2:12736","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{}\", c);\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"1:15809"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDefault","id":"2:48151","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"b:2:2957-0:69":{"id":"b:2:2957-0:69","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:2930","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"OccupiedEntry","id":"0:69","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:2959"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8633-0:226":{"id":"a:2:8633-0:226","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"V"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:8634","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:8633","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Keys","id":"0:226","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2968-0:69":{"id":"b:2:2968-0:69","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:2927","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:2937","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"OccupiedEntry","id":"0:69","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:2971","2:2972"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:8634":{"id":"2:8634","crate_id":2,"name":"RefUnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:212":{"id":"0:212","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[917,0],"end":[917,48]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":["is_empty","len"],"trait":{"kind":"resolved_path","inner":{"name":"ExactSizeIterator","id":"2:7784","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:200","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3036-0:215":{"id":"a:2:3036-0:215","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"V"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:215","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:7719-0:215":{"id":"b:2:7719-0:215","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"2:7715","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:215","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:7721","2:7722","2:7723"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"b:2:2963-0:215":{"id":"b:2:2963-0:215","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:2937","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:2933","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:215","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:2966","2:2967"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:12710":{"id":"2:12710","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"self::pattern":"2:12249","prim@char":"1:15809"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12259","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":[],"abi":"\"Rust\"","has_body":true}},"2:12690":{"id":"2:12690","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:12249","prim@char":"1:15809","`DoubleEndedIterator`":"2:7759","str::matches":"1:15814"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatches","id":"2:48065","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12259","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"ty":{"kind":"qualified_path","inner":{"name":"Searcher","self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12259","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:12274","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":[],"abi":"\"Rust\"","has_body":true}},"a:2:3024-0:64":{"id":"a:2:3024-0:64","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"V"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"VacantEntry","id":"0:64","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:290":{"id":"0:290","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1014,0],"end":[1014,50]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":["is_empty","len"],"trait":{"kind":"resolved_path","inner":{"name":"ExactSizeIterator","id":"2:7784","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Values","id":"0:234","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3255":{"id":"2:3255","crate_id":2,"name":"DerefMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3256"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Deref","id":"2:3242","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"1:4699":{"id":"1:4699","crate_id":1,"name":"Seek","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4700","1:4701","1:4702","1:4703"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"2:3189":{"id":"2:3189","crate_id":2,"name":"ShlAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3191"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"2:12633":{"id":"2:12633","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"1:15814"},"attrs":["#[inline]","#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"0:242":{"id":"0:242","crate_id":0,"name":"ValuesMut","span":{"filename":"src/lib.rs","begin":[963,0],"end":[965,1]},"visibility":"public","docs":"An iterator over the values of a map.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[{"outlives":"'a"}],"default":null}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:3024-0:242","a:2:8633-0:242","a:2:8634-0:242","a:2:3036-0:242","a:2:3065-0:242","b:2:2963-0:242","b:2:3746-0:242","b:2:2957-0:242","b:2:7719-0:242","b:2:2968-0:242","b:2:2632-0:242","b:2:2953-0:242","b:2:2629-0:242","0:298","0:305","0:308"]}},"b:5:667-0:234":{"id":"b:5:667-0:234","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2645","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:663","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Values","id":"0:234","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["5:669","5:670","5:671"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2632-0:234":{"id":"b:2:2632-0:234","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3029","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2626","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Values","id":"0:234","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:2634"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3155":{"id":"2:3155","crate_id":2,"name":"BitOr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3157","2:3158"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:274":{"id":"0:274","crate_id":0,"name":"size_hint","span":{"filename":"src/lib.rs","begin":[998,4],"end":[998,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:45974","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"a:2:3024-0:251":{"id":"a:2:3024-0:251","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"V"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:251","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:9608":{"id":"2:9608","crate_id":2,"name":"LowerHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:9609"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:4987":{"id":"1:4987","crate_id":1,"name":"ToSocketAddrs","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4988","1:4989"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"2:3130":{"id":"2:3130","crate_id":2,"name":"MulAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3132"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:255":{"id":"0:255","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[981,0],"end":[986,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":["partial_cmp_by","all","rev","fold","unzip","try_collect","le","scan","intersperse_with","last","min_by_key","ge","cmp","zip","copied","eq","reduce","cloned","partition","eq_by","flat_map","take","for_each","advance_by","max_by","position","is_sorted","cycle","partial_cmp","try_reduce","filter","partition_in_place","flatten","peekable","nth","max_by_key","ne","count","size_hint","is_sorted_by","sum","find","is_partitioned","fuse","skip_while","gt","step_by","lt","is_sorted_by_key","product","find_map","collect","enumerate","inspect","try_fold","take_while","chain","skip","min","any","__iterator_get_unchecked","cmp_by","try_find","filter_map","try_for_each","by_ref","map_while","rposition","intersperse","map","min_by","max"],"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:251","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["0:258","0:259","0:260"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:12975":{"id":"2:12975","crate_id":2,"name":"IntoFuture","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:12976","2:12977","2:12978"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"b:2:2957-0:64":{"id":"b:2:2957-0:64","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:2930","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"VacantEntry","id":"0:64","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:2959"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3036-0:242":{"id":"a:2:3036-0:242","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"V"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ValuesMut","id":"0:242","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:302":{"id":"0:302","crate_id":0,"name":"next","span":{"filename":"src/lib.rs","begin":[1023,4],"end":[1023,83]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:45974","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"generic","inner":"V"}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"0:135":{"id":"0:135","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[703,4],"end":[705,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"1:6868":{"id":"1:6868","crate_id":1,"name":"FromRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6869"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"2:12631":{"id":"2:12631","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"crate::ops::Index":"2:3327","str::slice_mut_unchecked":"1:15814","`str`":"1:15814"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_deprecated(since = \"1.29.0\", reason =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]","#[inline]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":["unsafe"],"abi":"\"Rust\"","has_body":true}},"2:2930":{"id":"2:2930","crate_id":2,"name":"From","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2932"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"5:5425":{"id":"5:5425","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7626"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"str_replacen\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7626","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12259","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":[],"abi":"\"Rust\"","has_body":true}},"a:2:3036-0:64":{"id":"a:2:3036-0:64","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"V"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"VacantEntry","id":"0:64","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:184":{"id":"0:184","crate_id":0,"name":"Output","span":{"filename":"src/lib.rs","begin":[814,4],"end":[814,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"generic","inner":"V"},"generics":{"params":[],"where_predicates":[]}}},"0:119":{"id":"0:119","crate_id":0,"name":"or_insert_with","span":{"filename":"src/lib.rs","begin":[650,4],"end":[655,5]},"visibility":"public","docs":"Ensures a value is in the entry by inserting the result of the default\nfunction if empty, and returns a mutable reference to the value in the\nentry.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["default",{"kind":"generic","inner":"F"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"generic","inner":"V"}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnOnce","id":"2:3275","args":{"parenthesized":{"inputs":[],"output":{"kind":"generic","inner":"V"}}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null}}}],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"0:147":{"id":"0:147","crate_id":0,"name":"cmp","span":{"filename":"src/lib.rs","begin":[731,4],"end":[733,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Ordering","id":"2:36229","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"0:86":{"id":"0:86","crate_id":0,"name":"reserve_len","span":{"filename":"src/lib.rs","begin":[162,4],"end":[167,5]},"visibility":"public","docs":"Reserves capacity for the given `VecMap` to contain `len` distinct keys.\nIn the case of `VecMap` this means reallocations will not occur as long\nas all inserted keys are less than `len`.\n\nThe collection may reserve more space to avoid frequent reallocations.\n\n# Examples\n\n```\nuse vec_map::VecMap;\nlet mut map: VecMap<&str> = VecMap::new();\nmap.reserve_len(10);\nassert!(map.capacity() >= 10);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["len",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"0:197":{"id":"0:197","crate_id":0,"name":"index_mut","span":{"filename":"src/lib.rs","begin":[840,4],"end":[842,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"usize"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"V"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"0:140":{"id":"0:140","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[720,0],"end":[720,31]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2680","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2680","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"VecMap","id":"0:51","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:5:667-0:200":{"id":"b:5:667-0:200","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2645","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:663","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:200","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["5:669","5:670","5:671"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:12699":{"id":"2:12699","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[inline]","#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"2:3101":{"id":"2:3101","crate_id":2,"name":"Mul","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3103","2:3104"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"2:12687":{"id":"2:12687","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"str::matches":"1:15814","self::pattern":"2:12249","`DoubleEndedIterator`":"2:7759","prim@char":"1:15809"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"2:48047","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12259","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":[],"abi":"\"Rust\"","has_body":true}},"b:2:2963-0:69":{"id":"b:2:2963-0:69","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:2937","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:2933","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"OccupiedEntry","id":"0:69","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:2966","2:2967"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:165":{"id":"0:165","crate_id":0,"name":"into_iter","span":{"filename":"src/lib.rs","begin":[785,4],"end":[787,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:200","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"0:169":{"id":"0:169","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[791,4],"end":[791,35]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"generic","inner":"T"}}}]},"generics":{"params":[],"where_predicates":[]}}},"b:2:2963-0:251":{"id":"b:2:2963-0:251","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:2937","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:2933","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:251","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:2966","2:2967"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:130":{"id":"0:130","crate_id":0,"name":"into_mut","span":{"filename":"src/lib.rs","begin":[682,4],"end":[685,5]},"visibility":"public","docs":"Converts the entry into a mutable reference to its value.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"generic","inner":"V"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"0:129":{"id":"0:129","crate_id":0,"name":"get_mut","span":{"filename":"src/lib.rs","begin":[676,4],"end":[679,5]},"visibility":"public","docs":"Gets a mutable reference to the value in the entry.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"V"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"1:6870":{"id":"1:6870","crate_id":1,"name":"IntoRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6871"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:64":{"id":"0:64","crate_id":0,"name":"VacantEntry","span":{"filename":"src/lib.rs","begin":[80,0],"end":[83,1]},"visibility":"public","docs":"A vacant Entry.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[{"outlives":"'a"}],"default":null}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:121","a:2:3024-0:64","a:2:8633-0:64","a:2:8634-0:64","a:2:3036-0:64","a:2:3065-0:64","b:2:2963-0:64","b:2:3746-0:64","b:2:2957-0:64","b:2:2968-0:64","b:2:2632-0:64","b:2:2953-0:64","b:2:2629-0:64"]}},"a:2:3024-0:200":{"id":"a:2:3024-0:200","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"V"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:200","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:111":{"id":"0:111","crate_id":0,"name":"remove","span":{"filename":"src/lib.rs","begin":[562,4],"end":[572,5]},"visibility":"public","docs":"Removes a key from the map, returning the value at the key if the key\nwas previously in the map.\n\n# Examples\n\n```\nuse vec_map::VecMap;\n\nlet mut map = VecMap::new();\nmap.insert(1, \"a\");\nassert_eq!(map.remove(1), Some(\"a\"));\nassert_eq!(map.remove(1), None);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["key",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:45974","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"0:287":{"id":"0:287","crate_id":0,"name":"next","span":{"filename":"src/lib.rs","begin":[1010,4],"end":[1010,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:45974","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"V"}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"b:2:7719-0:246":{"id":"b:2:7719-0:246","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"2:7715","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:7721","2:7722","2:7723"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"2:9802":{"id":"2:9802","crate_id":2,"name":"Hash","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:9803","2:9805"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"2:12279":{"id":"2:12279","crate_id":2,"name":"DoubleEndedSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:12274","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"2:3269":{"id":"2:3269","crate_id":2,"name":"Fn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3271"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnMut","id":"2:3272","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"2:12705":{"id":"2:12705","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[inline]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_deprecated(since = \"1.33.0\", reason = \"superseded by `trim_start`\",\nsuggestion = \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"0:58":{"id":"0:58","crate_id":0,"name":"Vacant","span":{"filename":"src/lib.rs","begin":[73,4],"end":[73,30]},"visibility":"default","docs":"A vacant Entry","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"resolved_path","inner":{"name":"VacantEntry","id":"0:64","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}}]}},"2:12640":{"id":"2:12640","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are ended with either a newline (`\\n`) or a carriage return with\na line feed (`\\r\\n`).\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Lines","id":"2:48097","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"0:346":{"id":"0:346","crate_id":0,"name":"next","span":{"filename":"src/lib.rs","begin":[916,0],"end":[916,49]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:45974","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"V"}}}]}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"0:238":{"id":"0:238","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[954,0],"end":[960,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2645","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Values","id":"0:234","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["0:241"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:171":{"id":"0:171","crate_id":0,"name":"into_iter","span":{"filename":"src/lib.rs","begin":[794,4],"end":[796,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:215","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"b:2:3746-0:64":{"id":"b:2:3746-0:64","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3029","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3744","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"VacantEntry","id":"0:64","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:3748"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:131":{"id":"0:131","crate_id":0,"name":"insert","span":{"filename":"src/lib.rs","begin":[689,4],"end":[692,5]},"visibility":"public","docs":"Sets the value of the entry with the OccupiedEntry's key,\nand returns the entry's old value.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["value",{"kind":"generic","inner":"V"}]],"output":{"kind":"generic","inner":"V"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"2:9604":{"id":"2:9604","crate_id":2,"name":"Octal","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:9605"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"2:12737":{"id":"2:12737","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{}\", c);\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"1:15809"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeUnicode","id":"2:48160","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"a:2:3065-0:234":{"id":"a:2:3065-0:234","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3065","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Values","id":"0:234","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2963-0:200":{"id":"b:2:2963-0:200","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:2937","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:2933","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:200","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:2966","2:2967"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:9812":{"id":"2:9812","crate_id":2,"name":"Hasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:9813","2:9814","2:9815","2:9816","2:9817","2:9818","2:9819","2:9820","2:9821","2:9822","2:9823","2:9824","2:9825","2:9826"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"a:2:3024-0:69":{"id":"a:2:3024-0:69","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"V"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"OccupiedEntry","id":"0:69","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:145":{"id":"0:145","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[729,0],"end":[734,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Ord","id":"2:2711","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null}}}],"where_predicates":[]},"provided_trait_methods":["min","clamp","max"],"trait":{"kind":"resolved_path","inner":{"name":"Ord","id":"2:2711","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"VecMap","id":"0:51","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["0:147"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:5742":{"id":"5:5742","crate_id":5,"name":"ToString","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5743"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"2:12641":{"id":"2:12641","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_deprecated(since = \"1.4.0\", reason = \"use lines() instead now\")]","#[inline]","#[allow(deprecated)]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LinesAny","id":"2:48107","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"5:5428":{"id":"5:5428","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7626"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7626","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"1:2452":{"id":"1:2452","crate_id":1,"name":"Error","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2453","1:2455","1:2456","1:2457"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:9595","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:9602","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"0:286":{"id":"0:286","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[1008,4],"end":[1008,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"V"}}},"generics":{"params":[],"where_predicates":[]}}},"a:2:8633-0:200":{"id":"a:2:8633-0:200","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"V"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:8634","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:8633","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:200","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3487":{"id":"2:3487","crate_id":2,"name":"Residual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3489"],"generics":{"params":[{"name":"O","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:107":{"id":"0:107","crate_id":0,"name":"contains_key","span":{"filename":"src/lib.rs","begin":[495,4],"end":[497,5]},"visibility":"public","docs":"Returns true if the map contains a value for the specified key.\n\n# Examples\n\n```\nuse vec_map::VecMap;\n\nlet mut map = VecMap::new();\nmap.insert(1, \"a\");\nassert_eq!(map.contains_key(1), true);\nassert_eq!(map.contains_key(2), false);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["key",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"0:251":{"id":"0:251","crate_id":0,"name":"Drain","span":{"filename":"src/lib.rs","begin":[975,0],"end":[979,1]},"visibility":"public","docs":"A draining iterator over the key-value pairs of a map.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[{"outlives":"'a"}],"default":null}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:3024-0:251","a:2:8633-0:251","a:2:8634-0:251","a:2:3036-0:251","a:2:3065-0:251","b:2:2963-0:251","b:2:3746-0:251","b:2:2957-0:251","b:2:7719-0:251","b:2:2968-0:251","b:2:2632-0:251","b:2:2953-0:251","b:2:2629-0:251","0:255","0:261","0:264"]}},"1:5661":{"id":"1:5661","crate_id":1,"name":"OsStrExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5662","1:5663"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10521","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"b:2:2953-0:51":{"id":"b:2:2953-0:51","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:2930","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:2927","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"VecMap","id":"0:51","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:2956"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8634-0:234":{"id":"a:2:8634-0:234","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"V"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:8634","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:8634","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Values","id":"0:234","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:12625":{"id":"2:12625","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:45974"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:45974","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":[],"abi":"\"Rust\"","has_body":true}},"1:5793":{"id":"1:5793","crate_id":1,"name":"DirEntryExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5794"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:189":{"id":"0:189","crate_id":0,"name":"Output","span":{"filename":"src/lib.rs","begin":[823,4],"end":[823,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"generic","inner":"V"},"generics":{"params":[],"where_predicates":[]}}},"0:233":{"id":"0:233","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[941,4],"end":[945,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Keys","id":"0:226","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"1:5783":{"id":"1:5783","crate_id":1,"name":"FileTypeExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5784","1:5785","1:5786","1:5787"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:159":{"id":"0:159","crate_id":0,"name":"into_iter","span":{"filename":"src/lib.rs","begin":[772,4],"end":[778,5]},"visibility":"default","docs":"Returns an iterator visiting all key-value pairs in ascending order of\nthe keys, consuming the original `VecMap`.\nThe iterator's element type is `(usize, &'r V)`.\n\n# Examples\n\n```\nuse vec_map::VecMap;\n\nlet mut map = VecMap::new();\nmap.insert(1, \"a\");\nmap.insert(3, \"c\");\nmap.insert(2, \"b\");\n\nlet vec: Vec<(usize, &str)> = map.into_iter().collect();\n\nassert_eq!(vec, [(1, \"a\"), (2, \"b\"), (3, \"c\")]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"0:0":{"id":"0:0","crate_id":0,"name":"vec_map","span":{"filename":"src/lib.rs","begin":[11,0],"end":[1623,1]},"visibility":"public","docs":"A simple map based on a vector for small integer keys. Space requirements\nare O(highest integer key).","links":{},"attrs":["#![deny(missing_docs)]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:51","0:55","0:64","0:69","0:200","0:215","0:226","0:234","0:242","0:246","0:251"]}},"0:261":{"id":"0:261","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[988,0],"end":[988,49]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":["is_empty","len"],"trait":{"kind":"resolved_path","inner":{"name":"ExactSizeIterator","id":"2:7784","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:251","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:69":{"id":"0:69","crate_id":0,"name":"OccupiedEntry","span":{"filename":"src/lib.rs","begin":[86,0],"end":[89,1]},"visibility":"public","docs":"An occupied Entry.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[{"outlives":"'a"}],"default":null}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:125","a:2:3024-0:69","a:2:8633-0:69","a:2:8634-0:69","a:2:3036-0:69","a:2:3065-0:69","b:2:2963-0:69","b:2:3746-0:69","b:2:2957-0:69","b:2:2968-0:69","b:2:2632-0:69","b:2:2953-0:69","b:2:2629-0:69"]}},"2:3242":{"id":"2:3242","crate_id":2,"name":"Deref","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3243","2:3244"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"2:12259":{"id":"2:12259","crate_id":2,"name":"Pattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:12261","2:12262","2:12263","2:12264","2:12265","2:12266","2:12267"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"2:12623":{"id":"2:12623","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:45974"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:45974","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":[],"abi":"\"Rust\"","has_body":true}},"2:12642":{"id":"2:12642","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"encode_utf16\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncodeUtf16","id":"2:48135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"0:355":{"id":"0:355","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[930,0],"end":[930,56]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"generic","inner":"V"}}}]},"generics":{"params":[],"where_predicates":[]}}},"2:12703":{"id":"2:12703","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\nassert_eq!(\" Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[inline]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"0:258":{"id":"0:258","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[982,4],"end":[982,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"generic","inner":"V"}]},"generics":{"params":[],"where_predicates":[]}}},"b:2:2629-0:242":{"id":"b:2:2629-0:242","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3029","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2623","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ValuesMut","id":"0:242","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:2631"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:322":{"id":"0:322","crate_id":0,"name":"next_back","span":{"filename":"src/lib.rs","begin":[1057,4],"end":[1065,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:45974","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"generic","inner":"V"}]}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"2:12713":{"id":"2:12713","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:15809","self::pattern":"2:12249"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:45974","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12259","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":[],"abi":"\"Rust\"","has_body":true}},"2:9595":{"id":"2:9595","crate_id":2,"name":"Debug","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:9596"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:139":{"id":"0:139","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[715,4],"end":[717,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"0:92":{"id":"0:92","crate_id":0,"name":"iter","span":{"filename":"src/lib.rs","begin":[251,4],"end":[259,5]},"visibility":"public","docs":"Returns an iterator visiting all key-value pairs in ascending order of the keys.\nThe iterator's element type is `(usize, &'r V)`.\n\n# Examples\n\n```\nuse vec_map::VecMap;\n\nlet mut map = VecMap::new();\nmap.insert(1, \"a\");\nmap.insert(3, \"c\");\nmap.insert(2, \"b\");\n\n// Print `1: a` then `2: b` then `3: c`\nfor (key, value) in map.iter() {\n    println!(\"{}: {}\", key, value);\n}\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:200","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"a:2:8633-0:242":{"id":"a:2:8633-0:242","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:8633","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ValuesMut","id":"0:242","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"2:3112":{"id":"2:3112","crate_id":2,"name":"Rem","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3114","2:3115"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"2:3122":{"id":"2:3122","crate_id":2,"name":"AddAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3124"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"b:2:2968-0:242":{"id":"b:2:2968-0:242","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:2927","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:2937","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ValuesMut","id":"0:242","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:2971","2:2972"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8634-0:215":{"id":"a:2:8634-0:215","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"V"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:8634","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:8634","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:215","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2629-0:226":{"id":"b:2:2629-0:226","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3029","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2623","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Keys","id":"0:226","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:2631"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3033":{"id":"2:3033","crate_id":2,"name":"StructuralEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:60":{"id":"0:60","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[73,11],"end":[73,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"VacantEntry","id":"0:64","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}}},"2:9614":{"id":"2:9614","crate_id":2,"name":"LowerExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:9615"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:109":{"id":"0:109","crate_id":0,"name":"insert","span":{"filename":"src/lib.rs","begin":[537,4],"end":[547,5]},"visibility":"public","docs":"Inserts a key-value pair into the map. If the key already had a value\npresent in the map, that value is returned. Otherwise, `None` is returned.\n\n# Examples\n\n```\nuse vec_map::VecMap;\n\nlet mut map = VecMap::new();\nassert_eq!(map.insert(37, \"a\"), None);\nassert_eq!(map.is_empty(), false);\n\nmap.insert(37, \"b\");\nassert_eq!(map.insert(37, \"c\"), Some(\"b\"));\nassert_eq!(map[37], \"c\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["key",{"kind":"primitive","inner":"usize"}],["value",{"kind":"generic","inner":"V"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:45974","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"a:2:8633-0:251":{"id":"a:2:8633-0:251","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"V"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:8634","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:8633","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:251","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:176":{"id":"0:176","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[807,0],"end":[811,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3034","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null}}}],"where_predicates":[]},"provided_trait_methods":["extend_one","extend_reserve"],"trait":{"kind":"resolved_path","inner":{"name":"Extend","id":"2:7724","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"V"}}}]}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"VecMap","id":"0:51","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["0:179"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:271":{"id":"0:271","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[995,4],"end":[995,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"primitive","inner":"usize"},"generics":{"params":[],"where_predicates":[]}}},"b:2:3746-0:234":{"id":"b:2:3746-0:234","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3029","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3744","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Values","id":"0:234","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:3748"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:99":{"id":"0:99","crate_id":0,"name":"drain","span":{"filename":"src/lib.rs","begin":[406,4],"end":[414,5]},"visibility":"public","docs":"Returns an iterator visiting all key-value pairs in ascending order of\nthe keys, emptying (but not consuming) the original `VecMap`.\nThe iterator's element type is `(usize, &'r V)`. Keeps the allocated memory for reuse.\n\n# Examples\n\n```\nuse vec_map::VecMap;\n\nlet mut map = VecMap::new();\nmap.insert(1, \"a\");\nmap.insert(3, \"c\");\nmap.insert(2, \"b\");\n\nlet vec: Vec<(usize, &str)> = map.drain().collect();\n\nassert_eq!(vec, [(1, \"a\"), (2, \"b\"), (3, \"c\")]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:251","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"b:2:2957-0:234":{"id":"b:2:2957-0:234","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:2930","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Values","id":"0:234","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:2959"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:272":{"id":"0:272","crate_id":0,"name":"next","span":{"filename":"src/lib.rs","begin":[997,4],"end":[997,73]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:45974","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"2:12681":{"id":"2:12681","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:45974","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12259","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":[],"abi":"\"Rust\"","has_body":true}},"0:89":{"id":"0:89","crate_id":0,"name":"keys","span":{"filename":"src/lib.rs","begin":[217,4],"end":[219,5]},"visibility":"public","docs":"Returns an iterator visiting all keys in ascending order of the keys.\nThe iterator's element type is `usize`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Keys","id":"0:226","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"2:8183":{"id":"2:8183","crate_id":2,"name":"TrustedLen","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"2:2972":{"id":"2:2972","crate_id":2,"name":"try_from","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:46101","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","self_type":{"kind":"generic","inner":"T"},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:2937","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":["const"],"abi":"\"Rust\"","has_body":true}},"1:6866":{"id":"1:6866","crate_id":1,"name":"AsRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6867"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"2:3275":{"id":"2:3275","crate_id":2,"name":"FnOnce","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3277","2:3278"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:160":{"id":"0:160","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[781,0],"end":[788,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"2:7715","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"VecMap","id":"0:51","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}}},"items":["0:163","0:164","0:165"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:12643":{"id":"2:12643","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:15809","self::pattern":"2:12249"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12259","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":[],"abi":"\"Rust\"","has_body":true}},"2:3171":{"id":"2:3171","crate_id":2,"name":"Shr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3173","2:3174"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"2:3177":{"id":"2:3177","crate_id":2,"name":"BitAndAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3179"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"a:2:3065-0:55":{"id":"a:2:3065-0:55","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3065","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Entry","id":"0:55","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:7719-0:226":{"id":"b:2:7719-0:226","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"2:7715","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Keys","id":"0:226","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:7721","2:7722","2:7723"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"2:3138":{"id":"2:3138","crate_id":2,"name":"RemAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3140"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"5:5422":{"id":"5:5422","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7626"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["from",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7626","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12259","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":[],"abi":"\"Rust\"","has_body":true}},"2:12722":{"id":"2:12722","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"self::pattern":"2:12249","prim@char":"1:15809"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_deprecated(since = \"1.33.0\", reason =\n\"superseded by `trim_start_matches`\", suggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12259","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":[],"abi":"\"Rust\"","has_body":true}},"2:12649":{"id":"2:12649","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"self::pattern":"2:12249","prim@char":"1:15809"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12259","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"ty":{"kind":"qualified_path","inner":{"name":"Searcher","self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12259","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:12274","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":[],"abi":"\"Rust\"","has_body":true}},"2:12611":{"id":"2:12611","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:15809"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_len\", since = \"1.39.0\")]","#[must_use]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":["const"],"abi":"\"Rust\"","has_body":true}},"b:2:2953-0:215":{"id":"b:2:2953-0:215","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:2930","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:2927","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:215","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:2956"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2968-0:234":{"id":"b:2:2968-0:234","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:2927","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:2937","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Values","id":"0:234","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:2971","2:2972"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:132":{"id":"0:132","crate_id":0,"name":"remove","span":{"filename":"src/lib.rs","begin":[695,4],"end":[698,5]},"visibility":"public","docs":"Takes the value of the entry out of the map, and returns it.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"V"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"2:9616":{"id":"2:9616","crate_id":2,"name":"UpperExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:9617"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:85":{"id":"0:85","crate_id":0,"name":"capacity","span":{"filename":"src/lib.rs","begin":[144,4],"end":[146,5]},"visibility":"public","docs":"Returns the number of elements the `VecMap` can hold without\nreallocating.\n\n# Examples\n\n```\nuse vec_map::VecMap;\nlet map: VecMap<String> = VecMap::with_capacity(10);\nassert!(map.capacity() >= 10);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"2:12701":{"id":"2:12701","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\nassert_eq!(\"Hello\\tworld\\t\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[inline]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"1:4681":{"id":"1:4681","crate_id":1,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4682","1:4683","1:4685","1:4686","1:4687","1:4688","1:4689","1:4698"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:5655":{"id":"1:5655","crate_id":1,"name":"OsStringExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5656","1:5657"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10521","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"0:84":{"id":"0:84","crate_id":0,"name":"with_capacity","span":{"filename":"src/lib.rs","begin":[129,4],"end":[131,5]},"visibility":"public","docs":"Creates an empty `VecMap` with space for at least `capacity`\nelements before resizing.\n\n# Examples\n\n```\nuse vec_map::VecMap;\nlet mut map: VecMap<&str> = VecMap::with_capacity(10);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["capacity",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"0:137":{"id":"0:137","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[714,0],"end":[718,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2675","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2675","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"VecMap","id":"0:51","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"VecMap","id":"0:51","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["0:139"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3746-0:226":{"id":"b:2:3746-0:226","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3029","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3744","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Keys","id":"0:226","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:3748"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3194":{"id":"2:3194","crate_id":2,"name":"ShrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3196"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"2:3036":{"id":"2:3036","crate_id":2,"name":"Sync","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"2:12613":{"id":"2:12613","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"is_char_boundary\", since = \"1.9.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"0:260":{"id":"0:260","crate_id":0,"name":"size_hint","span":{"filename":"src/lib.rs","begin":[985,4],"end":[985,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:45974","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"0:51":{"id":"0:51","crate_id":0,"name":"VecMap","span":{"filename":"src/lib.rs","begin":[65,0],"end":[68,1]},"visibility":"public","docs":"A map optimized for small integer keys.\n\n# Examples\n\n```\nuse vec_map::VecMap;\n\nlet mut months = VecMap::new();\nmonths.insert(1, \"Jan\");\nmonths.insert(2, \"Feb\");\nmonths.insert(3, \"Mar\");\n\nif !months.contains_key(12) {\n    println!(\"The end is near!\");\n}\n\nassert_eq!(months.get(1), Some(&\"Jan\"));\n\nif let Some(value) = months.get_mut(3) {\n    *value = \"Venus\";\n}\n\nassert_eq!(months.get(3), Some(&\"Venus\"));\n\n// Print out all months\nfor (key, value) in &months {\n    println!(\"month {} is {}\", key, value);\n}\n\nmonths.clear();\nassert!(months.is_empty());\n```","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:81","a:2:3024-0:51","a:2:8633-0:51","a:2:8634-0:51","a:2:3036-0:51","a:2:3065-0:51","b:2:2963-0:51","b:2:3746-0:51","b:2:2957-0:51","b:2:2968-0:51","b:2:2632-0:51","b:2:2953-0:51","b:2:2629-0:51","b:5:667-0:51","0:74","0:77","0:133","0:137","0:140","0:142","0:145","0:148","0:151","0:155","0:160","0:166","0:172","0:176","0:182","0:186","0:191","0:194"]}},"5:5440":{"id":"5:5440","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7626"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7626","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"2:3331":{"id":"2:3331","crate_id":2,"name":"IndexMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3333"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3029","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Index","id":"2:3327","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Idx"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"2:3181":{"id":"2:3181","crate_id":2,"name":"BitOrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3183"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:87":{"id":"0:87","crate_id":0,"name":"reserve_len_exact","span":{"filename":"src/lib.rs","begin":[185,4],"end":[190,5]},"visibility":"public","docs":"Reserves the minimum capacity for the given `VecMap` to contain `len` distinct keys.\nIn the case of `VecMap` this means reallocations will not occur as long as all inserted\nkeys are less than `len`.\n\nNote that the allocator may give the collection more space than it requests.\nTherefore capacity cannot be relied upon to be precisely minimal.  Prefer\n`reserve_len` if future insertions are expected.\n\n# Examples\n\n```\nuse vec_map::VecMap;\nlet mut map: VecMap<&str> = VecMap::new();\nmap.reserve_len_exact(10);\nassert!(map.capacity() >= 10);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["len",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"0:226":{"id":"0:226","crate_id":0,"name":"Keys","span":{"filename":"src/lib.rs","begin":[935,0],"end":[937,1]},"visibility":"public","docs":"An iterator over the keys of a map.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[{"outlives":"'a"}],"default":null}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:3024-0:226","a:2:8633-0:226","a:2:8634-0:226","a:2:3036-0:226","a:2:3065-0:226","b:2:2963-0:226","b:2:3746-0:226","b:2:2957-0:226","b:2:7719-0:226","b:2:2968-0:226","b:2:2632-0:226","b:2:2953-0:226","b:2:2629-0:226","b:5:667-0:226","0:230","0:268","0:275","0:278"]}},"0:275":{"id":"0:275","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1001,0],"end":[1001,48]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":["is_empty","len"],"trait":{"kind":"resolved_path","inner":{"name":"ExactSizeIterator","id":"2:7784","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Keys","id":"0:226","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3036-0:246":{"id":"a:2:3036-0:246","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"V"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2629-0:69":{"id":"b:2:2629-0:69","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3029","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2623","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"OccupiedEntry","id":"0:69","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:2631"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3746-0:246":{"id":"b:2:3746-0:246","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3029","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3744","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:3748"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:7711":{"id":"2:7711","crate_id":2,"name":"FromIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:7713"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"b:2:2957-0:215":{"id":"b:2:2957-0:215","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:2930","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:215","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:2959"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2953-0:234":{"id":"b:2:2953-0:234","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:2930","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:2927","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Values","id":"0:234","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:2956"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:246":{"id":"0:246","crate_id":0,"name":"IntoIter","span":{"filename":"src/lib.rs","begin":[968,0],"end":[972,1]},"visibility":"public","docs":"A consuming iterator over the key-value pairs of a map.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:3024-0:246","a:2:8633-0:246","a:2:8634-0:246","a:2:3036-0:246","a:2:3065-0:246","b:2:2963-0:246","b:2:3746-0:246","b:2:2957-0:246","b:2:7719-0:246","b:2:2968-0:246","b:2:2632-0:246","b:2:2953-0:246","b:2:2629-0:246","0:313","0:318","0:320"]}},"0:215":{"id":"0:215","crate_id":0,"name":"IterMut","span":{"filename":"src/lib.rs","begin":[922,0],"end":[928,1]},"visibility":"public","docs":"An iterator over the key-value pairs of a map, with the\nvalues being mutable.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[{"outlives":"'a"}],"default":null}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:3024-0:215","a:2:8633-0:215","a:2:8634-0:215","a:2:3036-0:215","a:2:3065-0:215","b:2:2963-0:215","b:2:3746-0:215","b:2:2957-0:215","b:2:7719-0:215","b:2:2968-0:215","b:2:2632-0:215","b:2:2953-0:215","b:2:2629-0:215","0:352","0:223","0:358"]}},"2:12660":{"id":"2:12660","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"prim@char":"1:15809","`DoubleEndedIterator`":"2:7759","str::rsplit":"1:15814","self::pattern":"2:12249","str::split_whitespace":"1:15814"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"2:47843","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12259","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":[],"abi":"\"Rust\"","has_body":true}},"1:6466":{"id":"1:6466","crate_id":1,"name":"ExitStatusExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6467","1:6468","1:6469","1:6470","1:6471","1:6472"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10521","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"1:5805":{"id":"1:5805","crate_id":1,"name":"DirBuilderExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5806"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"2:9843":{"id":"2:9843","crate_id":2,"name":"BuildHasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:9844","2:9845","2:9846"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"2:7722":{"id":"2:7722","crate_id":2,"name":"IntoIter","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"generic","inner":"I"},"generics":{"params":[],"where_predicates":[]}}},"2:12188":{"id":"2:12188","crate_id":2,"name":"FromStr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:12189","2:12190"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"a:2:3036-0:226":{"id":"a:2:3036-0:226","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"V"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Keys","id":"0:226","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:55":{"id":"0:55","crate_id":0,"name":"Entry","span":{"filename":"src/lib.rs","begin":[71,0],"end":[77,1]},"visibility":"public","docs":"A view into a single entry in a map, which may either be vacant or occupied.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[{"outlives":"'a"}],"default":null}}}],"where_predicates":[]},"variants_stripped":false,"variants":["0:58","0:61"],"impls":["0:115","a:2:3024-0:55","a:2:8633-0:55","a:2:8634-0:55","a:2:3036-0:55","a:2:3065-0:55","b:2:2963-0:55","b:2:3746-0:55","b:2:2957-0:55","b:2:2968-0:55","b:2:2632-0:55","b:2:2953-0:55","b:2:2629-0:55"]}},"0:283":{"id":"0:283","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1007,0],"end":[1012,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":["partial_cmp_by","all","rev","fold","unzip","try_collect","le","scan","intersperse_with","last","min_by_key","ge","cmp","zip","copied","eq","reduce","cloned","partition","eq_by","flat_map","take","for_each","advance_by","max_by","position","is_sorted","cycle","partial_cmp","try_reduce","filter","partition_in_place","flatten","peekable","nth","max_by_key","ne","count","size_hint","is_sorted_by","sum","find","is_partitioned","fuse","skip_while","gt","step_by","lt","is_sorted_by_key","product","find_map","collect","enumerate","inspect","try_fold","take_while","chain","skip","min","any","__iterator_get_unchecked","cmp_by","try_find","filter_map","try_for_each","by_ref","map_while","rposition","intersperse","map","min_by","max"],"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Values","id":"0:234","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["0:286","0:287","0:289"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3746-0:51":{"id":"b:2:3746-0:51","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3029","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3744","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"VecMap","id":"0:51","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:3748"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:12612":{"id":"2:12612","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_is_empty\", since = \"1.39.0\")]","#[must_use]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":["const"],"abi":"\"Rust\"","has_body":true}},"0:191":{"id":"0:191","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[831,0],"end":[836,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IndexMut","id":"2:3331","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"VecMap","id":"0:51","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["0:193"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:12268":{"id":"2:12268","crate_id":2,"name":"Searcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:12270","2:12271","2:12272","2:12273"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:190":{"id":"0:190","crate_id":0,"name":"index","span":{"filename":"src/lib.rs","begin":[826,4],"end":[828,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"usize"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"V"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"0:313":{"id":"0:313","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1033,0],"end":[1052,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":["partial_cmp_by","all","rev","fold","unzip","try_collect","le","scan","intersperse_with","last","min_by_key","ge","cmp","zip","copied","eq","reduce","cloned","partition","eq_by","flat_map","take","for_each","advance_by","max_by","position","is_sorted","cycle","partial_cmp","try_reduce","filter","partition_in_place","flatten","peekable","nth","max_by_key","ne","count","size_hint","is_sorted_by","sum","find","is_partitioned","fuse","skip_while","gt","step_by","lt","is_sorted_by_key","product","find_map","collect","enumerate","inspect","try_fold","take_while","chain","skip","min","any","__iterator_get_unchecked","cmp_by","try_find","filter_map","try_for_each","by_ref","map_while","rposition","intersperse","map","min_by","max"],"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["0:315","0:316","0:317"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2957-0:200":{"id":"b:2:2957-0:200","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:2930","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:200","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:2959"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2629-0:64":{"id":"b:2:2629-0:64","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3029","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2623","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"VacantEntry","id":"0:64","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:2631"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:12663":{"id":"2:12663","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:15809","self::pattern":"2:12249"},"attrs":["#[stable(feature = \"split_inclusive\", since = \"1.51.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitInclusive","id":"2:12041","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12259","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":[],"abi":"\"Rust\"","has_body":true}},"0:108":{"id":"0:108","crate_id":0,"name":"get_mut","span":{"filename":"src/lib.rs","begin":[513,4],"end":[519,5]},"visibility":"public","docs":"Returns a mutable reference to the value corresponding to the key.\n\n# Examples\n\n```\nuse vec_map::VecMap;\n\nlet mut map = VecMap::new();\nmap.insert(1, \"a\");\nif let Some(x) = map.get_mut(1) {\n    *x = \"b\";\n}\nassert_eq!(map[1], \"b\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["key",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:45974","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"V"}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"0:158":{"id":"0:158","crate_id":0,"name":"IntoIter","span":{"filename":"src/lib.rs","begin":[752,4],"end":[752,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generics":{"params":[],"where_predicates":[]}}},"b:2:3746-0:200":{"id":"b:2:3746-0:200","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3029","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3744","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:200","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:3748"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3744":{"id":"2:3744","crate_id":2,"name":"Any","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3745"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"outlives":"'static"}],"implementors":[]}},"2:12707":{"id":"2:12707","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:15809","self::pattern":"2:12249"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12259","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"ty":{"kind":"qualified_path","inner":{"name":"Searcher","self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12259","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"DoubleEndedSearcher","id":"2:12279","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":[],"abi":"\"Rust\"","has_body":true}},"2:12616":{"id":"2:12616","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"1:15814"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"2:12620":{"id":"2:12620","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[stable(feature = \"str_mut_extras\", since = \"1.20.0\")]","#[must_use]","#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":["unsafe"],"abi":"\"Rust\"","has_body":true}},"2:3327":{"id":"2:3327","crate_id":2,"name":"Index","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3329","2:3330"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3029","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"bounds":[],"implementors":[]}},"a:2:3036-0:55":{"id":"a:2:3036-0:55","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"V"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Entry","id":"0:55","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:669":{"id":"5:669","crate_id":5,"name":"Owned","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"generic","inner":"T"},"generics":{"params":[],"where_predicates":[]}}},"b:2:2968-0:64":{"id":"b:2:2968-0:64","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:2927","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:2937","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"VacantEntry","id":"0:64","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:2971","2:2972"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:94":{"id":"0:94","crate_id":0,"name":"append","span":{"filename":"src/lib.rs","begin":[317,4],"end":[319,5]},"visibility":"public","docs":"Moves all elements from `other` into the map while overwriting existing keys.\n\n# Examples\n\n```\nuse vec_map::VecMap;\n\nlet mut a = VecMap::new();\na.insert(1, \"a\");\na.insert(2, \"b\");\n\nlet mut b = VecMap::new();\nb.insert(3, \"c\");\nb.insert(4, \"d\");\n\na.append(&mut b);\n\nassert_eq!(a.len(), 4);\nassert_eq!(b.len(), 0);\nassert_eq!(a[1], \"a\");\nassert_eq!(a[2], \"b\");\nassert_eq!(a[3], \"c\");\nassert_eq!(a[4], \"d\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"1:5749":{"id":"1:5749","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5750","1:5751","1:5752","1:5753","1:5754","1:5755","1:5756","1:5757","1:5758","1:5759","1:5760","1:5761","1:5762","1:5763","1:5764","1:5765"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"2:12730":{"id":"2:12730","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"2:8633":{"id":"2:8633","crate_id":2,"name":"UnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:104":{"id":"0:104","crate_id":0,"name":"is_empty","span":{"filename":"src/lib.rs","begin":[444,4],"end":[446,5]},"visibility":"public","docs":"Returns true if the map contains no elements.\n\n# Examples\n\n```\nuse vec_map::VecMap;\n\nlet mut a = VecMap::new();\nassert!(a.is_empty());\na.insert(1, \"a\");\nassert!(!a.is_empty());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"a:2:8634-0:242":{"id":"a:2:8634-0:242","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"V"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:8634","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:8634","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ValuesMut","id":"0:242","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:5420":{"id":"5:5420","crate_id":5,"name":null,"span":null,"visibility":{"restricted":{"parent":"5:5240","path":"::str"}},"docs":"Methods for string slices.","links":{},"attrs":["#[lang = \"str_alloc\"]","#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["5:5421","5:5422","5:5425","5:5428","5:5440","5:5441","5:5442","5:5443","5:5444"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3024-0:215":{"id":"a:2:3024-0:215","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"V"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:215","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3036-0:251":{"id":"a:2:3036-0:251","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"V"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:251","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:5172":{"id":"5:5172","crate_id":5,"name":"Concat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5174","5:5175"],"generics":{"params":[{"name":"Item","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"Item"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3029","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"bounds":[],"implementors":[]}},"b:2:2953-0:200":{"id":"b:2:2953-0:200","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:2930","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:2927","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:200","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:2956"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2632-0:200":{"id":"b:2:2632-0:200","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3029","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2626","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:200","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:2634"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:4384":{"id":"2:4384","crate_id":2,"name":"AsyncIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4385","2:4386","2:4387"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"b:2:2953-0:55":{"id":"b:2:2953-0:55","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:2930","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:2927","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Entry","id":"0:55","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:2956"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:5444":{"id":"5:5444","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"1:15814"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7626","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"2:12732":{"id":"2:12732","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"2:12619":{"id":"2:12619","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:11720"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"str_as_bytes\", since = \"1.39.0\")]","#[must_use]","#[inline(always)]","#[allow(unused_attributes)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":["const"],"abi":"\"Rust\"","has_body":true}},"2:2722":{"id":"2:2722","crate_id":2,"name":"PartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2724","2:2725","2:2726","2:2727","2:2728"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3029","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2675","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"2:12652":{"id":"2:12652","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"prim@char":"1:15809","self::pattern":"2:12249","`None`":"2:45974"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:45974","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12259","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":[],"abi":"\"Rust\"","has_body":true}},"0:301":{"id":"0:301","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[1021,4],"end":[1021,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"generic","inner":"V"}}},"generics":{"params":[],"where_predicates":[]}}},"5:5176":{"id":"5:5176","crate_id":5,"name":"Join","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5178","5:5179"],"generics":{"params":[{"name":"Separator","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:115":{"id":"0:115","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[637,0],"end":[656,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Entry","id":"0:55","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["0:118","0:119"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3266":{"id":"2:3266","crate_id":2,"name":"Drop","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3267"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"a:2:8634-0:226":{"id":"a:2:8634-0:226","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"V"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:8634","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:8634","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Keys","id":"0:226","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2968-0:51":{"id":"b:2:2968-0:51","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:2927","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:2937","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"VecMap","id":"0:51","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:2971","2:2972"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:6692":{"id":"1:6692","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6693","1:6694","1:6695","1:6696","1:6697","1:6698","1:6699","1:6700","1:6701","1:6702","1:6703","1:6704","1:6705","1:6706","1:6707","1:6708","1:6709"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"b:5:667-0:51":{"id":"b:5:667-0:51","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2645","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:663","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"VecMap","id":"0:51","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["5:669","5:670","5:671"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:12646":{"id":"2:12646","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"self::pattern":"2:12249","prim@char":"1:15809"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12259","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":[],"abi":"\"Rust\"","has_body":true}},"0:136":{"id":"0:136","crate_id":0,"name":"clone_from","span":{"filename":"src/lib.rs","begin":[708,4],"end":[711,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["source",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"2:12614":{"id":"2:12614","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"a:2:8634-0:246":{"id":"a:2:8634-0:246","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"V"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:8634","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:8634","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3024-0:234":{"id":"a:2:3024-0:234","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"V"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Values","id":"0:234","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2629-0:200":{"id":"b:2:2629-0:200","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3029","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2623","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:200","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:2631"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:164":{"id":"0:164","crate_id":0,"name":"IntoIter","span":{"filename":"src/lib.rs","begin":[783,4],"end":[783,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:200","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generics":{"params":[],"where_predicates":[]}}},"b:2:2968-0:55":{"id":"b:2:2968-0:55","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:2927","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:2937","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Entry","id":"0:55","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:2971","2:2972"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:103":{"id":"0:103","crate_id":0,"name":"len","span":{"filename":"src/lib.rs","begin":[428,4],"end":[430,5]},"visibility":"public","docs":"Returns the number of elements in the map.\n\n# Examples\n\n```\nuse vec_map::VecMap;\n\nlet mut a = VecMap::new();\nassert_eq!(a.len(), 0);\na.insert(1, \"a\");\nassert_eq!(a.len(), 1);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"0:348":{"id":"0:348","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[918,0],"end":[918,62]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":["nth_back","rfold","advance_back_by","try_rfold","rfind"],"trait":{"kind":"resolved_path","inner":{"name":"DoubleEndedIterator","id":"2:7759","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:200","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["0:351"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:12636":{"id":"2:12636","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:15809"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CharIndices","id":"2:47819","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"2:13430":{"id":"2:13430","crate_id":2,"name":"Allocator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:13431","2:13432","2:13433","2:13434","2:13435","2:13436","2:13437"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"2:12960":{"id":"2:12960","crate_id":2,"name":"Future","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:12961","2:12962"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:200":{"id":"0:200","crate_id":0,"name":"Iter","span":{"filename":"src/lib.rs","begin":[895,0],"end":[901,1]},"visibility":"public","docs":"An iterator over the key-value pairs of a map.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[{"outlives":"'a"}],"default":null}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:3024-0:200","a:2:8633-0:200","a:2:8634-0:200","a:2:3036-0:200","a:2:3065-0:200","b:2:2963-0:200","b:2:3746-0:200","b:2:2957-0:200","b:2:7719-0:200","b:2:2968-0:200","b:2:2632-0:200","b:2:2953-0:200","b:2:2629-0:200","b:5:667-0:200","0:208","0:342","0:212","0:348"]}},"b:5:667-0:226":{"id":"b:5:667-0:226","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2645","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:663","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Keys","id":"0:226","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["5:669","5:670","5:671"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:170":{"id":"0:170","crate_id":0,"name":"IntoIter","span":{"filename":"src/lib.rs","begin":[792,4],"end":[792,35]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:215","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generics":{"params":[],"where_predicates":[]}}},"2:3065":{"id":"2:3065","crate_id":2,"name":"Unpin","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"2:12731":{"id":"2:12731","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"2:3034":{"id":"2:3034","crate_id":2,"name":"Copy","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2645","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"2:12719":{"id":"2:12719","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:15809","self::pattern":"2:12249"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12259","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"ty":{"kind":"qualified_path","inner":{"name":"Searcher","self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12259","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:12274","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":[],"abi":"\"Rust\"","has_body":true}},"b:2:7719-0:251":{"id":"b:2:7719-0:251","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"2:7715","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:251","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:7721","2:7722","2:7723"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:113":{"id":"0:113","crate_id":0,"name":"retain","span":{"filename":"src/lib.rs","begin":[621,4],"end":[634,5]},"visibility":"public","docs":"Retains only the elements specified by the predicate.\n\nIn other words, remove all pairs `(k, v)` such that `f(&k, &mut v)` returns `false`.\n\n# Examples\n\n```\nuse vec_map::VecMap;\n\nlet mut map: VecMap<usize> = (0..8).map(|x|(x, x*10)).collect();\nmap.retain(|k, _| k % 2 == 0);\nassert_eq!(map.len(), 4);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"generic","inner":"F"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnMut","id":"2:3272","args":{"parenthesized":{"inputs":[{"kind":"primitive","inner":"usize"},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"V"}}}],"output":{"kind":"primitive","inner":"bool"}}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":[],"abi":"\"Rust\"","has_body":true}},"b:2:3746-0:215":{"id":"b:2:3746-0:215","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3029","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3744","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:215","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:3748"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:12716":{"id":"2:12716","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"self::pattern":"2:12249","prim@char":"1:15809"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["suffix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:45974","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12259","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"ty":{"kind":"qualified_path","inner":{"name":"Searcher","self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12259","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:12274","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":[],"abi":"\"Rust\"","has_body":true}},"0:234":{"id":"0:234","crate_id":0,"name":"Values","span":{"filename":"src/lib.rs","begin":[949,0],"end":[951,1]},"visibility":"public","docs":"An iterator over the values of a map.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[{"outlives":"'a"}],"default":null}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:3024-0:234","a:2:8633-0:234","a:2:8634-0:234","a:2:3036-0:234","a:2:3065-0:234","b:2:2963-0:234","b:2:3746-0:234","b:2:2957-0:234","b:2:7719-0:234","b:2:2968-0:234","b:2:2632-0:234","b:2:2953-0:234","b:2:2629-0:234","b:5:667-0:234","0:238","0:283","0:290","0:293"]}},"0:63":{"id":"0:63","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[76,13],"end":[76,33]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"OccupiedEntry","id":"0:69","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}}},"b:2:7719-0:242":{"id":"b:2:7719-0:242","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"2:7715","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ValuesMut","id":"0:242","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:7721","2:7722","2:7723"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"2:12693":{"id":"2:12693","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"str::rmatch_indices":"1:15814","prim@char":"1:15809","self::pattern":"2:12249","`DoubleEndedIterator`":"2:7759"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"MatchIndices","id":"2:47993","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12259","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":[],"abi":"\"Rust\"","has_body":true}},"a:2:8634-0:55":{"id":"a:2:8634-0:55","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"V"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:8634","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:8634","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Entry","id":"0:55","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3024-0:55":{"id":"a:2:3024-0:55","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"V"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Entry","id":"0:55","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:4706":{"id":"1:4706","crate_id":1,"name":"BufRead","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4707","1:4708","1:4709","1:4711","1:4712","1:4714","1:4715"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Read","id":"1:4624","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"0:153":{"id":"0:153","crate_id":0,"name":"from_iter","span":{"filename":"src/lib.rs","begin":[743,4],"end":[747,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["iter",{"kind":"generic","inner":"I"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"2:7715","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","binding":{"equality":{"type":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"generic","inner":"V"}]}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null}}}],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"b:2:2968-0:226":{"id":"b:2:2968-0:226","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:2927","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:2937","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Keys","id":"0:226","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:2971","2:2972"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3002":{"id":"2:3002","crate_id":2,"name":"Default","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3003"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:267":{"id":"0:267","crate_id":0,"name":"next_back","span":{"filename":"src/lib.rs","begin":[991,4],"end":[991,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:45974","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"generic","inner":"V"}]}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"2:22844":{"id":"2:22844","crate_id":2,"name":"SimdElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:22845"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:22840","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3034","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"2:10178":{"id":"2:10178","crate_id":2,"name":"SliceIndex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:10180","2:10181","2:10182","2:10183","2:10184","2:10185","2:10186"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3029","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:10169","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"1:969":{"id":"1:969","crate_id":1,"name":"AsciiExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:970","1:971","1:972","1:973","1:974","1:975","1:976"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"a:2:8633-0:69":{"id":"a:2:8633-0:69","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:8633","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"OccupiedEntry","id":"0:69","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"2:12684":{"id":"2:12684","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:45974","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12259","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"ty":{"kind":"qualified_path","inner":{"name":"Searcher","self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12259","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:12274","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":[],"abi":"\"Rust\"","has_body":true}},"1:5727":{"id":"1:5727","crate_id":1,"name":"FileExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5728","1:5729","1:5730","1:5731"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:5735":{"id":"1:5735","crate_id":1,"name":"PermissionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5736","1:5737","1:5738"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"2:3398":{"id":"2:3398","crate_id":2,"name":"RangeBounds","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3400","2:3401","2:3402"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3029","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"bounds":[],"implementors":[]}},"b:2:2957-0:226":{"id":"b:2:2957-0:226","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:2930","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Keys","id":"0:226","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:2959"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:8187":{"id":"2:8187","crate_id":2,"name":"TrustedStep","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Step","id":"2:7264","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"0:208":{"id":"0:208","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[904,0],"end":[914,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2645","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:200","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["0:211"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:74":{"id":"0:74","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[91,0],"end":[94,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Default","id":"2:3002","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"VecMap","id":"0:51","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["0:76"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:7759":{"id":"2:7759","crate_id":2,"name":"DoubleEndedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:7760","2:7761","2:7762","2:7763","2:7767","2:7770"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"b:2:2963-0:234":{"id":"b:2:2963-0:234","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:2937","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:2933","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Values","id":"0:234","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:2966","2:2967"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:12728":{"id":"2:12728","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"`FromStr`":"2:12188","FromStr::Err":"2:12189"},"attrs":["#[inline]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:46101","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","self_type":{"kind":"generic","inner":"F"},"trait":{"kind":"resolved_path","inner":{"name":"FromStr","id":"2:12188","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FromStr","id":"2:12188","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":[],"abi":"\"Rust\"","has_body":true}},"0:128":{"id":"0:128","crate_id":0,"name":"get","span":{"filename":"src/lib.rs","begin":[670,4],"end":[673,5]},"visibility":"public","docs":"Gets a reference to the value in the entry.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"V"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"0:150":{"id":"0:150","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[737,4],"end":[739,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:9555","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:9544","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"0:166":{"id":"0:166","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[790,0],"end":[797,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"2:7715","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"resolved_path","inner":{"name":"VecMap","id":"0:51","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}}},"items":["0:169","0:170","0:171"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:9545":{"id":"2:9545","crate_id":2,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:9546","2:9547","2:9549"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:93":{"id":"0:93","crate_id":0,"name":"iter_mut","span":{"filename":"src/lib.rs","begin":[283,4],"end":[291,5]},"visibility":"public","docs":"Returns an iterator visiting all key-value pairs in ascending order of the keys,\nwith mutable references to the values.\nThe iterator's element type is `(usize, &'r mut V)`.\n\n# Examples\n\n```\nuse vec_map::VecMap;\n\nlet mut map = VecMap::new();\nmap.insert(1, \"a\");\nmap.insert(2, \"b\");\nmap.insert(3, \"c\");\n\nfor (key, value) in map.iter_mut() {\n    *value = \"x\";\n}\n\nfor (key, value) in &map {\n    assert_eq!(value, &\"x\");\n}\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:215","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"0:182":{"id":"0:182","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[813,0],"end":[820,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Index","id":"2:3327","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"VecMap","id":"0:51","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["0:184","0:185"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:6797":{"id":"1:6797","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6798"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10521","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"b:2:2968-0:215":{"id":"b:2:2968-0:215","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:2927","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:2937","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:215","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:2971","2:2972"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:268":{"id":"0:268","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[994,0],"end":[999,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":["partial_cmp_by","all","rev","fold","unzip","try_collect","le","scan","intersperse_with","last","min_by_key","ge","cmp","zip","copied","eq","reduce","cloned","partition","eq_by","flat_map","take","for_each","advance_by","max_by","position","is_sorted","cycle","partial_cmp","try_reduce","filter","partition_in_place","flatten","peekable","nth","max_by_key","ne","count","size_hint","is_sorted_by","sum","find","is_partitioned","fuse","skip_while","gt","step_by","lt","is_sorted_by_key","product","find_map","collect","enumerate","inspect","try_fold","take_while","chain","skip","min","any","__iterator_get_unchecked","cmp_by","try_find","filter_map","try_for_each","by_ref","map_while","rposition","intersperse","map","min_by","max"],"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:7907","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Keys","id":"0:226","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["0:271","0:272","0:274"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:2924":{"id":"2:2924","crate_id":2,"name":"AsMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2926"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3029","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"bounds":[],"implementors":[]}},"0:241":{"id":"0:241","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[955,4],"end":[959,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Values","id":"0:234","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"2:3748":{"id":"2:3748","crate_id":2,"name":"type_id","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"2:44623","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"b:2:2632-0:246":{"id":"b:2:2632-0:246","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3029","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2626","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:2634"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2632-0:64":{"id":"b:2:2632-0:64","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3029","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2626","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"VacantEntry","id":"0:64","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:2634"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3309":{"id":"2:3309","crate_id":2,"name":"Generator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3311","2:3312","2:3313"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"tuple","inner":[]}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:317":{"id":"0:317","crate_id":0,"name":"size_hint","span":{"filename":"src/lib.rs","begin":[1049,4],"end":[1051,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:45974","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"a:2:8634-0:51":{"id":"a:2:8634-0:51","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"V"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:8634","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:8634","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"VecMap","id":"0:51","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:83":{"id":"0:83","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[118,4],"end":[118,55]},"visibility":"public","docs":"Creates an empty `VecMap`.\n\n# Examples\n\n```\nuse vec_map::VecMap;\nlet mut map: VecMap<&str> = VecMap::new();\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"2:22051":{"id":"2:22051","crate_id":2,"name":"SupportedLaneCount","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:22041","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"a:2:3065-0:215":{"id":"a:2:3065-0:215","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3065","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:215","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:308":{"id":"0:308","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1029,0],"end":[1031,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":["nth_back","rfold","advance_back_by","try_rfold","rfind"],"trait":{"kind":"resolved_path","inner":{"name":"DoubleEndedIterator","id":"2:7759","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ValuesMut","id":"0:242","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["0:311"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:155":{"id":"0:155","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[750,0],"end":[779,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"2:7715","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"VecMap","id":"0:51","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["0:157","0:158","0:159"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:12675":{"id":"2:12675","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"self::pattern":"2:12249","prim@char":"1:15809","str::rsplitn":"1:15814"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"2:47947","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12259","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":[],"abi":"\"Rust\"","has_body":true}},"b:2:2629-0:51":{"id":"b:2:2629-0:51","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3029","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2623","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"VecMap","id":"0:51","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:2631"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13359":{"id":"2:13359","crate_id":2,"name":"GlobalAlloc","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:13360","2:13361","2:13362","2:13363"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"2:3479":{"id":"2:3479","crate_id":2,"name":"Try","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3480","2:3481","2:3482","2:3483"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FromResidual","id":"2:3484","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Residual","self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"Try","id":"2:3479","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"2:3118":{"id":"2:3118","crate_id":2,"name":"Neg","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3119","2:3120"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"a:2:8634-0:200":{"id":"a:2:8634-0:200","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"V"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:8634","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:8634","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:200","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3185":{"id":"2:3185","crate_id":2,"name":"BitXorAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3187"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:106":{"id":"0:106","crate_id":0,"name":"get","span":{"filename":"src/lib.rs","begin":[474,4],"end":[480,5]},"visibility":"public","docs":"Returns a reference to the value corresponding to the key.\n\n# Examples\n\n```\nuse vec_map::VecMap;\n\nlet mut map = VecMap::new();\nmap.insert(1, \"a\");\nassert_eq!(map.get(1), Some(&\"a\"));\nassert_eq!(map.get(2), None);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["key",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:45974","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"V"}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"0:142":{"id":"0:142","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[722,0],"end":[727,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"2:2722","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null}}}],"where_predicates":[]},"provided_trait_methods":["le","ge","lt","gt"],"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"2:2722","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"VecMap","id":"0:51","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"VecMap","id":"0:51","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["0:144"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2963-0:246":{"id":"b:2:2963-0:246","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:2937","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:2933","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:246","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:2966","2:2967"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3160":{"id":"2:3160","crate_id":2,"name":"BitXor","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3162","2:3163"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"b:2:3746-0:251":{"id":"b:2:3746-0:251","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3029","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3744","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:251","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:3748"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:12638":{"id":"2:12638","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_ascii_whitespace":"1:15814"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_whitespace\", since = \"1.1.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitWhitespace","id":"2:48117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"b:2:2953-0:251":{"id":"b:2:2953-0:251","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:2930","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:2927","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:251","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":["2:2956"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8633-0:234":{"id":"a:2:8633-0:234","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"V","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"V"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:8634","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:8633","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Values","id":"0:234","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:2711":{"id":"2:2711","crate_id":2,"name":"Ord","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2712","2:2713","2:2714","2:2715"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2680","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"2:2722","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"2:12621":{"id":"2:12621","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"1:15814","`u8`":"1:15823"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"rustc_str_as_ptr\", since = \"1.32.0\")]","#[must_use]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":["const"],"abi":"\"Rust\"","has_body":true}},"0:95":{"id":"0:95","crate_id":0,"name":"split_off","span":{"filename":"src/lib.rs","begin":[347,4],"end":[386,5]},"visibility":"public","docs":"Splits the collection into two at the given key.\n\nReturns a newly allocated `Self`. `self` contains elements `[0, at)`,\nand the returned `Self` contains elements `[at, max_key)`.\n\nNote that the capacity of `self` does not change.\n\n# Examples\n\n```\nuse vec_map::VecMap;\n\nlet mut a = VecMap::new();\na.insert(1, \"a\");\na.insert(2, \"b\");\na.insert(3, \"c\");\na.insert(4, \"d\");\n\nlet b = a.split_off(3);\n\nassert_eq!(a[1], \"a\");\nassert_eq!(a[2], \"b\");\n\nassert_eq!(b[3], \"c\");\nassert_eq!(b[4], \"d\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["at",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"2:12629":{"id":"2:12629","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":["unsafe"],"abi":"\"Rust\"","has_body":true}},"2:2967":{"id":"2:2967","crate_id":2,"name":"try_into","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:46101","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","self_type":{"kind":"generic","inner":"U"},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:2937","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":["const"],"abi":"\"Rust\"","has_body":true}}},"paths":{"1:14273":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"1:3644":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"6:5509":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"15:10975":{"crate_id":15,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"14:2991":{"crate_id":14,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"14:7571":{"crate_id":14,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"5:505":{"crate_id":5,"path":["vec_map","Target"],"kind":"typedef"},"1:14944":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"2:2740":{"crate_id":2,"path":["core","cmp","max"],"kind":"function"},"12:189":{"crate_id":12,"path":["rustc_demangle","Demangle"],"kind":"struct"},"5:7626":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"1:15827":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"2:54525":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"5:6441":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"15:12467":{"crate_id":15,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"1:15818":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"15:11499":{"crate_id":15,"path":["object","elf","SectionHeader32"],"kind":"struct"},"2:44411":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"14:2889":{"crate_id":14,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"15:10160":{"crate_id":15,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"15:12343":{"crate_id":15,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"2:11269":{"crate_id":2,"path":["core","slice","sort","CopyOnDrop"],"kind":"struct"},"6:1900":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"9:181":{"crate_id":9,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"2:10358":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"2:44544":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"2:45209":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"2:12268":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"1:10747":{"crate_id":1,"path":["std","ffi","c_str","IntoStringError"],"kind":"struct"},"16:820":{"crate_id":16,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"2:45039":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"1:10652":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"17:234":{"crate_id":17,"path":["miniz_oxide","deflate","core","HuffmanOxide"],"kind":"struct"},"6:4303":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"16:744":{"crate_id":16,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"2:10560":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"1:11643":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"2:22844":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"6:4330":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"2:47746":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"15:10938":{"crate_id":15,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"2:47947":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"15:10331":{"crate_id":15,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"2:50624":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"1:4711":{"crate_id":1,"path":["std","io","BufRead","read_until"],"kind":"foreign_type"},"5:6284":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"14:6744":{"crate_id":14,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"5:6098":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"1:4706":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"9:160":{"crate_id":9,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"2:13010":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"1:15812":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"2:51633":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"2:44861":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"14:3488":{"crate_id":14,"path":["gimli","common","DwoId"],"kind":"struct"},"1:15303":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"6:3979":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"2:4":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"2:47829":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"6:5142":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"15:13172":{"crate_id":15,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"14:6366":{"crate_id":14,"path":["gimli","read","line","LineRow"],"kind":"struct"},"1:10656":{"crate_id":1,"path":["std","error","Chain"],"kind":"struct"},"6:5214":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"6:5414":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"1:5021":{"crate_id":1,"path":["vec_map","Iter"],"kind":"typedef"},"1:3722":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"5:1468":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"15:12095":{"crate_id":15,"path":["object","macho","Section32"],"kind":"struct"},"15:4008":{"crate_id":15,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"5:1505":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"1:13299":{"crate_id":1,"path":["std","sys","unix","mutex","Mutex"],"kind":"struct"},"5:6764":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"2:12273":{"crate_id":2,"path":["core","str","pattern","Searcher","next_reject"],"kind":"foreign_type"},"2:47446":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"2:7923":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator","intersperse"],"kind":"foreign_type"},"6:5956":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"5:4173":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"2:47755":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"2:47993":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"1:15821":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"15:299":{"crate_id":15,"path":["object","read","util","DebugLen"],"kind":"struct"},"14:5960":{"crate_id":14,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"1:11212":{"crate_id":1,"path":["std","net","addr","SocketAddrV4"],"kind":"struct"},"2:51428":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"15:10128":{"crate_id":15,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"2:3309":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"15:11822":{"crate_id":15,"path":["object","elf","NoteHeader64"],"kind":"struct"},"9:2018":{"crate_id":9,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"6:1597":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"15:11714":{"crate_id":15,"path":["object","elf","Dyn32"],"kind":"struct"},"1:797":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"1:11544":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"15:11779":{"crate_id":15,"path":["object","elf","Verneed"],"kind":"struct"},"1:15314":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"2:12041":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"2:3042":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"2:8283":{"crate_id":2,"path":["core","lazy","Lazy"],"kind":"struct"},"5:6694":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"6:1612":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"1:14542":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"1:7540":{"crate_id":1,"path":["vec_map","IntoIter"],"kind":"typedef"},"14:6518":{"crate_id":14,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"6:6685":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"15:4157":{"crate_id":15,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"2:23289":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"2:22045":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"2:51973":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"1:14656":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"2:10653":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"17:603":{"crate_id":17,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"5:7517":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"1:1507":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"1:8618":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"15:12307":{"crate_id":15,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"14:3218":{"crate_id":14,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"15:11726":{"crate_id":15,"path":["object","elf","Dyn64"],"kind":"struct"},"5:7586":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"5:4665":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"1:2061":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"14:4304":{"crate_id":14,"path":["gimli","constants","DwForm"],"kind":"struct"},"1:3202":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"1:14643":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"15:12783":{"crate_id":15,"path":["object","macho","RelocationInfo"],"kind":"struct"},"14:7894":{"crate_id":14,"path":["gimli","read","value","ValueType"],"kind":"enum"},"15:13180":{"crate_id":15,"path":["object","pe","Guid"],"kind":"struct"},"2:10681":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"2:4529":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"2:9602":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"15:9551":{"crate_id":15,"path":["object","read","util","ByteString"],"kind":"struct"},"1:15813":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"5:6303":{"crate_id":5,"path":["alloc","vec"],"kind":"module"},"12:231":{"crate_id":12,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"2:44590":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"5:1729":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"6:159":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"2:2645":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"6:4066":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"2:48452":{"crate_id":2,"path":["core","str","lossy","Utf8LossyChunk"],"kind":"struct"},"15:9839":{"crate_id":15,"path":["object","read","any","SymbolTable"],"kind":"struct"},"2:2966":{"crate_id":2,"path":["vec_map","Error"],"kind":"typedef"},"2:51843":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"2:3150":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"1:8973":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"2:49823":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"1:11245":{"crate_id":1,"path":["std","net","ip","Ipv6Addr"],"kind":"struct"},"15:10353":{"crate_id":15,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"15:10814":{"crate_id":15,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"1:7539":{"crate_id":1,"path":["vec_map","Item"],"kind":"typedef"},"14:7279":{"crate_id":14,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"15:10477":{"crate_id":15,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"2:46007":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"1:1046":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"5:3857":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"2:7759":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"2:46231":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"1:15146":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"14:2843":{"crate_id":14,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"15:11750":{"crate_id":15,"path":["object","elf","Verdef"],"kind":"struct"},"6:4324":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"1:4464":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"1:985":{"crate_id":1,"path":["vec_map","Owned"],"kind":"typedef"},"14:5790":{"crate_id":14,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"15:13306":{"crate_id":15,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"6:4051":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"1:12022":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"2:3194":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"15:10403":{"crate_id":15,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"14:5314":{"crate_id":14,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"14:7158":{"crate_id":14,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"14:3091":{"crate_id":14,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"9:784":{"crate_id":9,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"1:12446":{"crate_id":1,"path":["std","sys","unix","condvar","Condvar"],"kind":"struct"},"2:9277":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"2:45049":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"15:11616":{"crate_id":15,"path":["object","elf","Syminfo64"],"kind":"struct"},"1:1200":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"14:3800":{"crate_id":14,"path":["gimli","constants","DwChildren"],"kind":"struct"},"15:11406":{"crate_id":15,"path":["object","archive","Header"],"kind":"struct"},"15:13318":{"crate_id":15,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"14:5975":{"crate_id":14,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"2:8187":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"16:0":{"crate_id":16,"path":["memchr"],"kind":"module"},"9:2309":{"crate_id":9,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"1:7726":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"15:10435":{"crate_id":15,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"1:11378":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"2:3177":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"6:576":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"2:9598":{"crate_id":2,"path":["core","fmt","macros","Debug"],"kind":"proc_derive"},"1:15281":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"6:1660":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"2:47199":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"2:12279":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"1:9606":{"crate_id":1,"path":["std","sys_common","mutex","MovableMutex"],"kind":"struct"},"5:3921":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"2:47207":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"1:6797":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"6:1625":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"14:4614":{"crate_id":14,"path":["gimli","constants","DwLang"],"kind":"struct"},"2:4671":{"crate_id":2,"path":["vec_map","Target"],"kind":"typedef"},"14:4955":{"crate_id":14,"path":["gimli","constants","DwLnct"],"kind":"struct"},"16:620":{"crate_id":16,"path":["memchr","cow","Imp"],"kind":"struct"},"6:4072":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"1:626":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"14:6780":{"crate_id":14,"path":["gimli","read","op","DieReference"],"kind":"enum"},"1:7110":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"1:8849":{"crate_id":1,"path":["std","sync","once","WaiterQueue"],"kind":"struct"},"2:11701":{"crate_id":2,"path":["vec_map","Item"],"kind":"typedef"},"2:47224":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"5:3390":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"2:50074":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"15:10864":{"crate_id":15,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"1:15814":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"2:48097":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"2:45100":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"2:48261":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"6:6151":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"2:22051":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"1:6093":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"5:2797":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"6:6036":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"1:6938":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"9:0":{"crate_id":9,"path":["hashbrown"],"kind":"module"},"6:4280":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"2:54512":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:11973":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"15:13402":{"crate_id":15,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"2:45240":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"2:12981":{"crate_id":2,"path":["vec_map","Output"],"kind":"typedef"},"5:1496":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"2:3505":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"14:7042":{"crate_id":14,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"1:10688":{"crate_id":1,"path":["std","ffi","c_str","NulError"],"kind":"struct"},"2:2924":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"15:10149":{"crate_id":15,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"9:747":{"crate_id":9,"path":["hashbrown","map","Iter"],"kind":"struct"},"15:12373":{"crate_id":15,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"1:1303":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"6:561":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"14:3392":{"crate_id":14,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"14:7761":{"crate_id":14,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"1:6330":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"5:3500":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"15:13377":{"crate_id":15,"path":["object","pe","ImageRelocation"],"kind":"struct"},"2:37407":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"0:64":{"crate_id":0,"path":["vec_map","VacantEntry"],"kind":"struct"},"2:4538":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"15:9659":{"crate_id":15,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"1:969":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"2:7009":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"1:15811":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"6:5359":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"9:937":{"crate_id":9,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"5:7487":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"1:11248":{"crate_id":1,"path":["std","net","ip","Ipv6MulticastScope"],"kind":"enum"},"2:48142":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"5:5397":{"crate_id":5,"path":["vec_map","Output"],"kind":"typedef"},"1:10716":{"crate_id":1,"path":["std","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"2:13323":{"crate_id":2,"path":["core","task","ready","Ready"],"kind":"struct"},"17:996":{"crate_id":17,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"2:3052":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"2:46685":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"0:315":{"crate_id":0,"path":["vec_map","Item"],"kind":"typedef"},"6:5381":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"1:15816":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"5:2527":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"5:3032":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"15:12685":{"crate_id":15,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"1:12156":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"14:7333":{"crate_id":14,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"14:4734":{"crate_id":14,"path":["gimli","constants","DwInl"],"kind":"struct"},"15:13924":{"crate_id":15,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"2:51806":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"6:3905":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"2:48551":{"crate_id":2,"path":["core","str","LinesAnyMap"],"kind":"struct"},"2:5790":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"2:48383":{"crate_id":2,"path":["vec_map","Searcher"],"kind":"typedef"},"2:9555":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"6:3896":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"14:4417":{"crate_id":14,"path":["gimli","constants","DwDs"],"kind":"struct"},"9:1651":{"crate_id":9,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"6:1671":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"6:541":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"15:11981":{"crate_id":15,"path":["object","macho","FatArch64"],"kind":"struct"},"14:7303":{"crate_id":14,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"2:44500":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"15:13590":{"crate_id":15,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"15:9896":{"crate_id":15,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"1:5017":{"crate_id":1,"path":["vec_map","Iter"],"kind":"typedef"},"14:5421":{"crate_id":14,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"2:46678":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"2:9545":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"5:6929":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"1:8625":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"14:2968":{"crate_id":14,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"2:23102":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"1:12196":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"14:6691":{"crate_id":14,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"1:13971":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"2:1882":{"crate_id":2,"path":["vec_map","Target"],"kind":"typedef"},"2:47786":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"1:8467":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"0:158":{"crate_id":0,"path":["vec_map","IntoIter"],"kind":"typedef"},"1:11493":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"2:9812":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"2:7921":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator","zip"],"kind":"foreign_type"},"15:2314":{"crate_id":15,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"2:45459":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"9:1180":{"crate_id":9,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"2:22192":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"5:7493":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"1:2323":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"1:13673":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"1:6446":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"2:45974":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"14:6682":{"crate_id":14,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"14:2866":{"crate_id":14,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"2:46016":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"5:663":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"6:3917":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"12:11":{"crate_id":12,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"1:5661":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"9:2315":{"crate_id":9,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"1:4631":{"crate_id":1,"path":["std","io","Read","read_exact"],"kind":"foreign_type"},"15:10788":{"crate_id":15,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"6:3801":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"15:13746":{"crate_id":15,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"2:49477":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"15:13497":{"crate_id":15,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"1:6798":{"crate_id":1,"path":["std","os","linux","process","CommandExt","create_pidfd"],"kind":"foreign_type"},"1:12030":{"crate_id":1,"path":["std","sync","mpsc","blocking","SignalToken"],"kind":"struct"},"1:2252":{"crate_id":1,"path":["std","env"],"kind":"module"},"15:10253":{"crate_id":15,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"2:11150":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"2:13051":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"6:1591":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"15:12431":{"crate_id":15,"path":["object","macho","DylibReference"],"kind":"struct"},"6:1567":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"15:13465":{"crate_id":15,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"2:45218":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"16:729":{"crate_id":16,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"1:10995":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"15:11118":{"crate_id":15,"path":["object","read","SymbolSection"],"kind":"enum"},"6:5938":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"2:47733":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"2:44924":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"2:46411":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"2:46195":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"15:13637":{"crate_id":15,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"2:48292":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"2:21808":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"15:10950":{"crate_id":15,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"6:3962":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"1:10899":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"1:9276":{"crate_id":1,"path":["vec_map","Target"],"kind":"typedef"},"15:13620":{"crate_id":15,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"17:1075":{"crate_id":17,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"1:11130":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"15:11482":{"crate_id":15,"path":["object","elf","Ident"],"kind":"struct"},"15:13986":{"crate_id":15,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"15:13348":{"crate_id":15,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"14:3772":{"crate_id":14,"path":["gimli","constants","DwCfa"],"kind":"struct"},"15:13898":{"crate_id":15,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"1:4629":{"crate_id":1,"path":["std","io","Read","read_to_end"],"kind":"foreign_type"},"6:3911":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"6:5104":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"2:7678":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"15:12182":{"crate_id":15,"path":["object","macho","DylibCommand"],"kind":"struct"},"15:10140":{"crate_id":15,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"14:6219":{"crate_id":14,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"15:11993":{"crate_id":15,"path":["object","macho","MachHeader32"],"kind":"struct"},"15:11572":{"crate_id":15,"path":["object","elf","Sym32"],"kind":"struct"},"1:1381":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"6:5979":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"15:9799":{"crate_id":15,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"1:2073":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"15:9759":{"crate_id":15,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"6:5173":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"1:15168":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"16:660":{"crate_id":16,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"1:15006":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"5:7721":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"1:2346":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"14:5736":{"crate_id":14,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"15:13041":{"crate_id":15,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"14:4704":{"crate_id":14,"path":["gimli","constants","DwCc"],"kind":"struct"},"1:4690":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"6:1549":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"6:5373":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"15:13386":{"crate_id":15,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"1:15807":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"6:535":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"15:13963":{"crate_id":15,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"2:48743":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"15:9849":{"crate_id":15,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"6:3999":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"1:5805":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"15:13221":{"crate_id":15,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"14:5855":{"crate_id":14,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"14:6021":{"crate_id":14,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"1:13601":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"2:4655":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"2:3003":{"crate_id":2,"path":["core","default","Default","default"],"kind":"foreign_type"},"15:10211":{"crate_id":15,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"1:8900":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"1:15822":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"1:14562":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"6:3820":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"2:44521":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"1:8727":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"1:5758":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt","atime"],"kind":"foreign_type"},"5:874":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"2:21846":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"6:3991":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"1:7779":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"6:3857":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"6:6594":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"1:11637":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"2:49612":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"2:45152":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"1:2045":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"2:31319":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"5:5734":{"crate_id":5,"path":["vec_map","Target"],"kind":"typedef"},"6:517":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"2:49924":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"1:8982":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"1:9594":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutex"],"kind":"struct"},"0:246":{"crate_id":0,"path":["vec_map","IntoIter"],"kind":"struct"},"1:5749":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"15:10458":{"crate_id":15,"path":["object","read","elf","note","Note"],"kind":"struct"},"2:13359":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"5:7704":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"1:8460":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"16:136":{"crate_id":16,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"2:7964":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator","collect"],"kind":"foreign_type"},"1:12052":{"crate_id":1,"path":["std","sync","mpsc","cache_aligned","CacheAligned"],"kind":"struct"},"2:12276":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher","next_back"],"kind":"foreign_type"},"15:11378":{"crate_id":15,"path":["object","read","CompressedData"],"kind":"struct"},"2:49901":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"14:3264":{"crate_id":14,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"15:9186":{"crate_id":15,"path":["object","common","SectionFlags"],"kind":"enum"},"6:1739":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"2:23196":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"1:11475":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"15:10912":{"crate_id":15,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"14:4890":{"crate_id":14,"path":["gimli","constants","DwLns"],"kind":"struct"},"6:6822":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"15:9210":{"crate_id":15,"path":["object","common","SymbolFlags"],"kind":"enum"},"16:636":{"crate_id":16,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"15:10656":{"crate_id":15,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"6:6828":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"1:11242":{"crate_id":1,"path":["std","net","ip","Ipv4Addr"],"kind":"struct"},"1:10333":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"6:589":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"15:10028":{"crate_id":15,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"1:14853":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"14:7823":{"crate_id":14,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"1:1316":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"2:9843":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"1:5497":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"15:9933":{"crate_id":15,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"5:1302":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"1:10985":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"1:3353":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"2:47656":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"1:913":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"5:2311":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"15:11665":{"crate_id":15,"path":["object","elf","Rela64"],"kind":"struct"},"2:11720":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"16:857":{"crate_id":16,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"5:2801":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"2:47764":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"1:15826":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"0:58":{"crate_id":0,"path":["vec_map","Entry","Vacant"],"kind":"variant"},"15:13865":{"crate_id":15,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"0:69":{"crate_id":0,"path":["vec_map","OccupiedEntry"],"kind":"struct"},"14:2945":{"crate_id":14,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"2:44855":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"2:12975":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"6:4310":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"2:44883":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"1:5727":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"6:5186":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"14:6087":{"crate_id":14,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"1:2874":{"crate_id":1,"path":["vec_map","Owned"],"kind":"typedef"},"15:8849":{"crate_id":15,"path":["object","common","Architecture"],"kind":"enum"},"1:7393":{"crate_id":1,"path":["vec_map","Target"],"kind":"typedef"},"5:693":{"crate_id":5,"path":["vec_map","Target"],"kind":"typedef"},"1:12107":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"9:469":{"crate_id":9,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"2:3744":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"14:5672":{"crate_id":14,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"14:5330":{"crate_id":14,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"14:7205":{"crate_id":14,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"15:12699":{"crate_id":15,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"1:10566":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"9:2032":{"crate_id":9,"path":["hashbrown","set","Difference"],"kind":"struct"},"19:117":{"crate_id":19,"path":["panic_unwind","dwarf","eh","EHContext"],"kind":"struct"},"2:3033":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"15:9971":{"crate_id":15,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"6:5474":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"1:13800":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"1:983":{"crate_id":1,"path":["vec_map","Owned"],"kind":"typedef"},"6:4245":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"1:15808":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"2:47813":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"6:4194":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"2:13086":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"14:4535":{"crate_id":14,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"1:4682":{"crate_id":1,"path":["std","io","Write","write"],"kind":"foreign_type"},"1:6466":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"2:51817":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"5:7620":{"crate_id":5,"path":["alloc","slice","merge_sort","Run"],"kind":"struct"},"14:6768":{"crate_id":14,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"17:686":{"crate_id":17,"path":["miniz_oxide","deflate","core","SymFreq"],"kind":"struct"},"2:23252":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"13:248":{"crate_id":13,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"6:4407":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"5:1110":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"17:963":{"crate_id":17,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"14:6252":{"crate_id":14,"path":["gimli","read","line","LineRows"],"kind":"struct"},"2:46375":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"2:8180":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"4:0":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"1:4340":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"2:9616":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"1:3327":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"2:47694":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"1:15809":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"6:6810":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"2:44991":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"15:2512":{"crate_id":15,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"2:48429":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"2:47665":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"16:837":{"crate_id":16,"path":["memchr","memmem","Searcher"],"kind":"struct"},"15:12142":{"crate_id":15,"path":["object","macho","Fvmlib"],"kind":"struct"},"2:3242":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"1:684":{"crate_id":1,"path":["std","thread","local","fast","Key"],"kind":"struct"},"2:12271":{"crate_id":2,"path":["core","str","pattern","Searcher","next"],"kind":"foreign_type"},"5:7501":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"1:9820":{"crate_id":1,"path":["std","sys_common","thread_local_key","Key"],"kind":"struct"},"2:50099":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"2:2078":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"15:11159":{"crate_id":15,"path":["object","read","SymbolMapName"],"kind":"struct"},"2:51911":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"17:1056":{"crate_id":17,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"6:614":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"2:7767":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator","rfold"],"kind":"foreign_type"},"15:10988":{"crate_id":15,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"2:31284":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"2:44998":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"1:721":{"crate_id":1,"path":["std","thread","local","os","Key"],"kind":"struct"},"6:4430":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"2:49558":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"2:8156":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator","is_sorted"],"kind":"foreign_type"},"6:1712":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"1:935":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"5:7133":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"1:8453":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"1:10383":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"1:4687":{"crate_id":1,"path":["std","io","Write","write_all"],"kind":"foreign_type"},"6:5227":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"2:23236":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"1:8112":{"crate_id":1,"path":["std","sync","mpsc","shared","Packet"],"kind":"struct"},"2:10598":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"5:5172":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"2:47684":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"2:3101":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"1:11215":{"crate_id":1,"path":["std","net","addr","SocketAddrV6"],"kind":"struct"},"14:7185":{"crate_id":14,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"5:7418":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"2:47843":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"14:7174":{"crate_id":14,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"1:15829":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"2:44945":{"crate_id":2,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"6:6781":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"1:8990":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"2:10525":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"2:44962":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"2:22041":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"0:51":{"crate_id":0,"path":["vec_map","VecMap"],"kind":"struct"},"2:50279":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"2:2971":{"crate_id":2,"path":["vec_map","Error"],"kind":"typedef"},"9:1762":{"crate_id":9,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"2:48117":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"6:5949":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"6:5166":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"15:10801":{"crate_id":15,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"15:11254":{"crate_id":15,"path":["object","read","Export"],"kind":"struct"},"14:7453":{"crate_id":14,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"2:9610":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"1:11118":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"1:4660":{"crate_id":1,"path":["vec_map","Target"],"kind":"typedef"},"2:8635":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"2:48135":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"14:3939":{"crate_id":14,"path":["gimli","constants","DwTag"],"kind":"struct"},"5:971":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"2:50051":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"7:85":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"2:12474":{"crate_id":2,"path":["core","str","lossy","Utf8Lossy"],"kind":"struct"},"2:45497":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"1:12045":{"crate_id":1,"path":["std","sync","mpsc","sync","Failure"],"kind":"enum"},"15:11026":{"crate_id":15,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"18:46":{"crate_id":18,"path":["adler","algo","U32X4"],"kind":"struct"},"16:790":{"crate_id":16,"path":["memchr","memmem","FindIter"],"kind":"struct"},"14:7378":{"crate_id":14,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"2:45129":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"2:5984":{"crate_id":2,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"2:7960":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator","fuse"],"kind":"foreign_type"},"14:2912":{"crate_id":14,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"9:2331":{"crate_id":9,"path":["hashbrown","TryReserveError"],"kind":"enum"},"15:11328":{"crate_id":15,"path":["object","read","Relocation"],"kind":"struct"},"2:9805":{"crate_id":2,"path":["core","hash","Hash","hash_slice"],"kind":"foreign_type"},"1:12356":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"1:3205":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"1:14616":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"2:7724":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"9:840":{"crate_id":9,"path":["hashbrown","map","Keys"],"kind":"struct"},"2:48011":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"5:7424":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"1:5783":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"6:4154":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"1:2883":{"crate_id":1,"path":["vec_map","Output"],"kind":"typedef"},"2:2859":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"6:4388":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"5:1437":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"2:49736":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"1:7916":{"crate_id":1,"path":["std","sync","mpsc","blocking","WaitToken"],"kind":"struct"},"6:4201":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"1:11654":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"2:44870":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"11:0":{"crate_id":11,"path":["std_detect"],"kind":"module"},"5:803":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"2:7969":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator","partition"],"kind":"foreign_type"},"2:12006":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"1:10730":{"crate_id":1,"path":["std","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"15:13163":{"crate_id":15,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"2:9802":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"2:48439":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"15:12582":{"crate_id":15,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"1:6706":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"2:3112":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"14:3041":{"crate_id":14,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"5:1314":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"5:2095":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"14:3018":{"crate_id":14,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"5:1090":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"6:4084":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"6:4316":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"9:1100":{"crate_id":9,"path":["hashbrown","map","Entry"],"kind":"enum"},"1:14276":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"12:244":{"crate_id":12,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"6:4220":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"1:12734":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"2:45005":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"14:3195":{"crate_id":14,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"1:8832":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"2:3160":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"14:2773":{"crate_id":14,"path":["gimli","common","LineEncoding"],"kind":"struct"},"2:7929":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator","for_each"],"kind":"foreign_type"},"6:6002":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"1:12256":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"13:0":{"crate_id":13,"path":["addr2line"],"kind":"module"},"5:1487":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"6:4256":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"1:11627":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"14:5561":{"crate_id":14,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"15:12040":{"crate_id":15,"path":["object","macho","LcStr"],"kind":"struct"},"6:5352":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"9:1118":{"crate_id":9,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"2:23282":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"6:1685":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"14:7928":{"crate_id":14,"path":["gimli","read","value","Value"],"kind":"enum"},"1:1051":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"2:46170":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"15:11082":{"crate_id":15,"path":["object","read","SectionIndex"],"kind":"struct"},"1:15040":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"1:4343":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"5:1986":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"6:567":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"2:0":{"crate_id":2,"path":["core"],"kind":"module"},"15:12917":{"crate_id":15,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"1:10522":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"15:9088":{"crate_id":15,"path":["object","common","RelocationKind"],"kind":"enum"},"6:5324":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"1:8268":{"crate_id":1,"path":["std","sync","mpsc","stream","Packet"],"kind":"struct"},"1:10873":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"1:11397":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"5:1288":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"1:6870":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"10:0":{"crate_id":10,"path":["rustc_std_workspace_alloc"],"kind":"module"},"6:5237":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"14:547":{"crate_id":14,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"1:10631":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"9:2303":{"crate_id":9,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"6:3807":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"2:46101":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"2:46935":{"crate_id":2,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"14:0":{"crate_id":14,"path":["gimli"],"kind":"module"},"6:4286":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"1:14884":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"5:3366":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"15:12028":{"crate_id":15,"path":["object","macho","LoadCommand"],"kind":"struct"},"2:3030":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"15:13394":{"crate_id":15,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"15:510":{"crate_id":15,"path":["object","read","any","Segment"],"kind":"struct"},"1:7623":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"15:13532":{"crate_id":15,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"2:48559":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"2:46953":{"crate_id":2,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"2:3275":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"2:46911":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"15:9649":{"crate_id":15,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"5:3830":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"6:4059":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"1:10533":{"crate_id":1,"path":["std","thread","local","fast","DtorState"],"kind":"enum"},"14:5360":{"crate_id":14,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"14:7467":{"crate_id":14,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"12:47":{"crate_id":12,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"2:12405":{"crate_id":2,"path":["vec_map","Searcher"],"kind":"typedef"},"6:5494":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"15:12552":{"crate_id":15,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"2:46075":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"15:12073":{"crate_id":15,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"1:14796":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"6:3844":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"9:761":{"crate_id":9,"path":["hashbrown","map","IterMut"],"kind":"struct"},"6:1695":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"13:269":{"crate_id":13,"path":["addr2line","RangeAttributes"],"kind":"struct"},"6:622":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"15:3743":{"crate_id":15,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"15:13506":{"crate_id":15,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"6:3972":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"2:3266":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"2:9606":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"2:2001":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"2:46024":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"6:3985":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"5:7158":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"15:10558":{"crate_id":15,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"2:47861":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"1:11152":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"5:4783":{"crate_id":5,"path":["vec_map","Target"],"kind":"typedef"},"1:12034":{"crate_id":1,"path":["std","sync","mpsc","shared","StartResult"],"kind":"enum"},"14:7804":{"crate_id":14,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"9:1855":{"crate_id":9,"path":["hashbrown","set","HashSet"],"kind":"struct"},"2:48725":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"5:4055":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"6:5200":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"15:13685":{"crate_id":15,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"2:47647":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"2:2675":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"1:10521":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"6:3890":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"2:7979":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator","partition_in_place"],"kind":"foreign_type"},"2:3096":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"5:6006":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"15:11001":{"crate_id":15,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"2:21827":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"1:14042":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"6:6852":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"2:7996":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator","try_fold"],"kind":"foreign_type"},"15:9368":{"crate_id":15,"path":["object","endian","U64Bytes"],"kind":"struct"},"9:1144":{"crate_id":9,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"1:15810":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"15:9005":{"crate_id":15,"path":["object","common","ComdatKind"],"kind":"enum"},"9:2005":{"crate_id":9,"path":["hashbrown","set","Iter"],"kind":"struct"},"2:48567":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"2:45486":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"14:6554":{"crate_id":14,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"15:13760":{"crate_id":15,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"14:6807":{"crate_id":14,"path":["gimli","read","op","Operation"],"kind":"enum"},"6:90":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"14:6110":{"crate_id":14,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"2:27037":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"2:49525":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"1:0":{"crate_id":1,"path":["std"],"kind":"module"},"1:7435":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"14:6357":{"crate_id":14,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"14:6413":{"crate_id":14,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"2:3122":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"15:13733":{"crate_id":15,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"2:5863":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"15:9961":{"crate_id":15,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"1:6210":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"5:672":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"16:610":{"crate_id":16,"path":["memchr","cow","CowBytes"],"kind":"struct"},"2:50781":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"1:14610":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"15:11604":{"crate_id":15,"path":["object","elf","Syminfo32"],"kind":"struct"},"2:23304":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"2:47965":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"1:9488":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"6:5155":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"5:69":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"2:8634":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"15:13564":{"crate_id":15,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"14:7856":{"crate_id":14,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"15:10844":{"crate_id":15,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"2:7950":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator","skip"],"kind":"foreign_type"},"1:11567":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"2:46303":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"1:1418":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"1:8173":{"crate_id":1,"path":["std","sync","mpsc","spsc_queue","Queue"],"kind":"struct"},"14:6999":{"crate_id":14,"path":["gimli","read","op","Piece"],"kind":"struct"},"1:1530":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"14:6136":{"crate_id":14,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"15:13842":{"crate_id":15,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"6:4034":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"15:13370":{"crate_id":15,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"15:9034":{"crate_id":15,"path":["object","common","SymbolKind"],"kind":"enum"},"2:49717":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"1:1385":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"15:11915":{"crate_id":15,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"2:11930":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"1:15206":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"14:7843":{"crate_id":14,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"2:46519":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"15:11199":{"crate_id":15,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"15:9296":{"crate_id":15,"path":["object","endian","U16Bytes"],"kind":"struct"},"1:14936":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"15:10304":{"crate_id":15,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"5:5195":{"crate_id":5,"path":["vec_map","Output"],"kind":"typedef"},"2:54473":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:10543":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"14:3429":{"crate_id":14,"path":["gimli","common","SectionId"],"kind":"enum"},"15:9440":{"crate_id":15,"path":["object","endian","I32Bytes"],"kind":"struct"},"15:9280":{"crate_id":15,"path":["object","endian","BigEndian"],"kind":"struct"},"1:12140":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"15:10081":{"crate_id":15,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"15:9592":{"crate_id":15,"path":["object","read","any","File"],"kind":"struct"},"2:7674":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"6:163":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"2:7760":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator","next_back"],"kind":"foreign_type"},"2:9608":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"16:704":{"crate_id":16,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"15:12408":{"crate_id":15,"path":["object","macho","DylibModule64"],"kind":"struct"},"15:11555":{"crate_id":15,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"2:21793":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"2:45199":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"2:12134":{"crate_id":2,"path":["vec_map","Output"],"kind":"typedef"},"15:12442":{"crate_id":15,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"2:47911":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"2:10639":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"1:1389":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"1:3341":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"5:315":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"1:11584":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"1:2052":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"15:13296":{"crate_id":15,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"15:13192":{"crate_id":15,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"15:294":{"crate_id":15,"path":["object","read","util","DebugByte"],"kind":"struct"},"1:9549":{"crate_id":1,"path":["std","sys_common","condvar","Condvar"],"kind":"struct"},"6:4440":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"0:200":{"crate_id":0,"path":["vec_map","Iter"],"kind":"struct"},"1:7782":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"15:10052":{"crate_id":15,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"14:6101":{"crate_id":14,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"14:3549":{"crate_id":14,"path":["gimli","arch","X86"],"kind":"struct"},"1:14879":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"1:11218":{"crate_id":1,"path":["std","net","ip","IpAddr"],"kind":"enum"},"15:11962":{"crate_id":15,"path":["object","macho","FatHeader"],"kind":"struct"},"14:6014":{"crate_id":14,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"2:45190":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"1:973":{"crate_id":1,"path":["std","ascii","AsciiExt","to_ascii_lowercase"],"kind":"foreign_type"},"1:8359":{"crate_id":1,"path":["std","sync","mpsc","sync","Packet"],"kind":"struct"},"2:2711":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"2:50463":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"14:5815":{"crate_id":14,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"9:112":{"crate_id":9,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"15:11640":{"crate_id":15,"path":["object","elf","Rela32"],"kind":"struct"},"2:46161":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"6:4180":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"2:4902":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"18:54":{"crate_id":18,"path":["adler","Adler32"],"kind":"struct"},"14:7226":{"crate_id":14,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"1:14639":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"15:10962":{"crate_id":15,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"14:6605":{"crate_id":14,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"2:23160":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"14:2733":{"crate_id":14,"path":["gimli","common","Format"],"kind":"enum"},"1:11162":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"9:396":{"crate_id":9,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"1:4346":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"6:4005":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"6:4368":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"2:4610":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"2:3189":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"6:529":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"2:51934":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"15:11015":{"crate_id":15,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"15:13788":{"crate_id":15,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"15:13978":{"crate_id":15,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"2:23630":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"1:6795":{"crate_id":1,"path":["std","os","linux","process","ChildExt","pidfd"],"kind":"foreign_type"},"6:4142":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"14:4230":{"crate_id":14,"path":["gimli","constants","DwAt"],"kind":"struct"},"15:11809":{"crate_id":15,"path":["object","elf","NoteHeader32"],"kind":"struct"},"2:51896":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"15:10543":{"crate_id":15,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"2:9126":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"6:630":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"15:11767":{"crate_id":15,"path":["object","elf","Verdaux"],"kind":"struct"},"2:2006":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"15:12982":{"crate_id":15,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"15:12385":{"crate_id":15,"path":["object","macho","DylibModule32"],"kind":"struct"},"2:9803":{"crate_id":2,"path":["core","hash","Hash","hash"],"kind":"foreign_type"},"15:13446":{"crate_id":15,"path":["object","pe","ImageImportByName"],"kind":"struct"},"2:8245":{"crate_id":2,"path":["core","lazy","OnceCell"],"kind":"struct"},"1:12093":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"1:15034":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"2:14":{"crate_id":2,"path":["core","write"],"kind":"macro"},"15:9574":{"crate_id":15,"path":["object","read","util","StringTable"],"kind":"struct"},"15:9162":{"crate_id":15,"path":["object","common","FileFlags"],"kind":"enum"},"1:11311":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"2:45181":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"14:4477":{"crate_id":14,"path":["gimli","constants","DwAccess"],"kind":"struct"},"14:6208":{"crate_id":14,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"2:2930":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"16:782":{"crate_id":16,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"6:665":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"6:4360":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"1:9677":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutex"],"kind":"struct"},"2:2092":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"1:15825":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"14:4922":{"crate_id":14,"path":["gimli","constants","DwLne"],"kind":"struct"},"6:5345":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"1:8767":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"15:12537":{"crate_id":15,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"2:9604":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"15:10224":{"crate_id":15,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"2:7941":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator","enumerate"],"kind":"foreign_type"},"2:7722":{"crate_id":2,"path":["vec_map","IntoIter"],"kind":"typedef"},"15:11519":{"crate_id":15,"path":["object","elf","SectionHeader64"],"kind":"struct"},"1:14270":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"1:6958":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"0:226":{"crate_id":0,"path":["vec_map","Keys"],"kind":"struct"},"1:976":{"crate_id":1,"path":["std","ascii","AsciiExt","make_ascii_lowercase"],"kind":"foreign_type"},"1:15819":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"0:301":{"crate_id":0,"path":["vec_map","Item"],"kind":"typedef"},"15:11847":{"crate_id":15,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"14:6032":{"crate_id":14,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"14:7073":{"crate_id":14,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"15:13119":{"crate_id":15,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"1:2452":{"crate_id":1,"path":["std","error","Error"],"kind":"trait"},"2:44623":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"16:811":{"crate_id":16,"path":["memchr","memmem","Finder"],"kind":"struct"},"2:7721":{"crate_id":2,"path":["vec_map","Item"],"kind":"typedef"},"15:0":{"crate_id":15,"path":["object"],"kind":"module"},"6:4348":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"2:49502":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"1:11426":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"2:11183":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"14:6636":{"crate_id":14,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"14:5766":{"crate_id":14,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"15:13598":{"crate_id":15,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"14:5753":{"crate_id":14,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"2:47023":{"crate_id":2,"path":["core","fmt","FlagV1"],"kind":"enum"},"2:12259":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"2:8012":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator","reduce"],"kind":"foreign_type"},"16:694":{"crate_id":16,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"1:1395":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"1:4624":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"1:3325":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"1:5743":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"1:1406":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"2:3559":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"14:5384":{"crate_id":14,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"17:722":{"crate_id":17,"path":["miniz_oxide","deflate","core","TDEFLFlush"],"kind":"enum"},"15:10611":{"crate_id":15,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"2:49454":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"2:7711":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"6:4122":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"1:5793":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"1:1376":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"1:15791":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"1:6796":{"crate_id":1,"path":["std","os","linux","process","ChildExt","take_pidfd"],"kind":"foreign_type"},"2:3479":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"14:7195":{"crate_id":14,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"14:7295":{"crate_id":14,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"16:152":{"crate_id":16,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"5:3061":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"14:3714":{"crate_id":14,"path":["gimli","constants","DwUt"],"kind":"struct"},"6:6127":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"16:896":{"crate_id":16,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"1:11992":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"2:51680":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"6:3944":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"2:9814":{"crate_id":2,"path":["core","hash","Hasher","write"],"kind":"foreign_type"},"1:9728":{"crate_id":1,"path":["std","sys_common","rwlock","StaticRWLockWriteGuard"],"kind":"struct"},"15:9729":{"crate_id":15,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"14:7250":{"crate_id":14,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"6:608":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"2:9544":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"0:0":{"crate_id":0,"path":["vec_map"],"kind":"module"},"2:13262":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"2:50967":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"15:11186":{"crate_id":15,"path":["object","read","ObjectMap"],"kind":"struct"},"14:5488":{"crate_id":14,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"6:1528":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"15:11539":{"crate_id":15,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"1:7326":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"6:0":{"crate_id":6,"path":["libc"],"kind":"module"},"15:9809":{"crate_id":15,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"2:8866":{"crate_id":2,"path":["vec_map","Target"],"kind":"typedef"},"14:7406":{"crate_id":14,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"2:7956":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator","flat_map"],"kind":"foreign_type"},"2:23317":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"1:10609":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"15:13520":{"crate_id":15,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"2:45082":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"2:45271":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"2:51174":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"1:6868":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"17:41":{"crate_id":17,"path":["miniz_oxide","deflate","buffer","LocalBuf"],"kind":"struct"},"5:5226":{"crate_id":5,"path":["alloc","slice","merge","MergeHole"],"kind":"struct"},"1:7643":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"1:4380":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"14:6591":{"crate_id":14,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"2:12274":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"1:4681":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"14:3172":{"crate_id":14,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"15:9332":{"crate_id":15,"path":["object","endian","U32Bytes"],"kind":"struct"},"1:13312":{"crate_id":1,"path":["std","sys","unix","mutex","ReentrantMutex"],"kind":"struct"},"9:2323":{"crate_id":9,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"15:13582":{"crate_id":15,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"2:3118":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"1:14101":{"crate_id":1,"path":["std","sys","unix","rwlock","RWLock"],"kind":"struct"},"2:48571":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"1:9311":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"2:12188":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"2:2101":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"1:12236":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"14:6166":{"crate_id":14,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"1:1084":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"2:4995":{"crate_id":2,"path":["vec_map","Target"],"kind":"typedef"},"18:0":{"crate_id":18,"path":["adler"],"kind":"module"},"1:10648":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"14:5472":{"crate_id":14,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"2:9612":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"15:13912":{"crate_id":15,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"1:7671":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"2:44567":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"15:2484":{"crate_id":15,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"2:10487":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"5:5401":{"crate_id":5,"path":["vec_map","Output"],"kind":"typedef"},"1:14567":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"1:11403":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"2:47774":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"8:0":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"15:13429":{"crate_id":15,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"1:15817":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"5:3512":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"2:46084":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"15:11588":{"crate_id":15,"path":["object","elf","Sym64"],"kind":"struct"},"6:5896":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"2:36250":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"15:12946":{"crate_id":15,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"6:6136":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"14:6644":{"crate_id":14,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"1:2056":{"crate_id":1,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"2:45120":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"1:4679":{"crate_id":1,"path":["vec_map","Target"],"kind":"typedef"},"15:9476":{"crate_id":15,"path":["object","endian","I64Bytes"],"kind":"struct"},"2:4600":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"15:12659":{"crate_id":15,"path":["object","macho","IdentCommand"],"kind":"struct"},"1:2952":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"5:4241":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"2:3134":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"5:7463":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"2:4384":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"2:51832":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"2:3034":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"2:3036":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"15:9065":{"crate_id":15,"path":["object","common","SymbolScope"],"kind":"enum"},"2:48622":{"crate_id":2,"path":["core","time","FromFloatSecsErrorKind"],"kind":"enum"},"15:13205":{"crate_id":15,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"1:6704":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"0:170":{"crate_id":0,"path":["vec_map","IntoIter"],"kind":"typedef"},"15:13799":{"crate_id":15,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"2:3143":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"2:44459":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"14:5632":{"crate_id":14,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"1:15828":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"2:11990":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"2:3255":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"2:54486":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"0:242":{"crate_id":0,"path":["vec_map","ValuesMut"],"kind":"struct"},"1:1521":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"5:5127":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"1:11979":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"2:48788":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"2:7994":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator","is_partitioned"],"kind":"foreign_type"},"1:11109":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"15:9245":{"crate_id":15,"path":["object","endian","Endianness"],"kind":"enum"},"2:46153":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"1:10665":{"crate_id":1,"path":["std","ffi","c_str","CString"],"kind":"struct"},"1:9601":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutexGuard"],"kind":"struct"},"15:13282":{"crate_id":15,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"2:46483":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"14:6126":{"crate_id":14,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"5:1459":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"2:10354":{"crate_id":2,"path":["vec_map","IntoIter"],"kind":"typedef"},"14:5505":{"crate_id":14,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"2:7194":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"15:10407":{"crate_id":15,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"2:3130":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"2:3467":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"2:2937":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"2:13156":{"crate_id":2,"path":["core","future","from_generator","GenFuture"],"kind":"struct"},"15:11738":{"crate_id":15,"path":["object","elf","Versym"],"kind":"struct"},"1:2078":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"15:12051":{"crate_id":15,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"16:866":{"crate_id":16,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"5:1640":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"17:749":{"crate_id":17,"path":["miniz_oxide","deflate","core","TDEFLStatus"],"kind":"enum"},"5:3054":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"2:46671":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"16:720":{"crate_id":16,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"2:23886":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"14:7971":{"crate_id":14,"path":["gimli","read","Error"],"kind":"enum"},"1:4712":{"crate_id":1,"path":["std","io","BufRead","read_line"],"kind":"foreign_type"},"14:6964":{"crate_id":14,"path":["gimli","read","op","Location"],"kind":"enum"},"6:5257":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"2:4664":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"2:24226":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"6:4264":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"1:1334":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"2:8752":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"14:4995":{"crate_id":14,"path":["gimli","constants","DwMacro"],"kind":"struct"},"6:5404":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"1:4708":{"crate_id":1,"path":["std","io","BufRead","consume"],"kind":"foreign_type"},"5:3588":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"1:6794":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"2:23188":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"14:2794":{"crate_id":14,"path":["gimli","common","Register"],"kind":"struct"},"2:44383":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"2:48555":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"2:23119":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"2:9614":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"6:6106":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"1:13323":{"crate_id":1,"path":["std","sys","unix","mutex","PthreadMutexAttr"],"kind":"struct"},"16:644":{"crate_id":16,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"14:7884":{"crate_id":14,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"14:3338":{"crate_id":14,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"1:15820":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"2:23790":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"15:12568":{"crate_id":15,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"5:1968":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"1:6692":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"2:12479":{"crate_id":2,"path":["core","str","lossy","Utf8LossyChunksIter"],"kind":"struct"},"1:3994":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"1:12727":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"1:1347":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"1:1326":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"1:3343":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"15:10420":{"crate_id":15,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"15:12741":{"crate_id":15,"path":["object","macho","Nlist32"],"kind":"struct"},"2:23918":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"15:10317":{"crate_id":15,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"2:51507":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"1:4642":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"9:976":{"crate_id":9,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"2:23726":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"15:11835":{"crate_id":15,"path":["object","elf","HashHeader"],"kind":"struct"},"15:12168":{"crate_id":15,"path":["object","macho","Dylib"],"kind":"struct"},"2:49775":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"2:3327":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"2:48735":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"2:7784":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"1:5797":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"6:4022":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"12:194":{"crate_id":12,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"14:5029":{"crate_id":14,"path":["gimli","constants","DwRle"],"kind":"struct"},"6:4378":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"9:1667":{"crate_id":9,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"2:2858":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"2:48779":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"2:12189":{"crate_id":2,"path":["core","str","traits","FromStr","Err"],"kind":"foreign_type"},"14:5231":{"crate_id":14,"path":["gimli","constants","DwOp"],"kind":"struct"},"0:169":{"crate_id":0,"path":["vec_map","Item"],"kind":"typedef"},"14:3365":{"crate_id":14,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"1:6702":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"2:47215":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"1:5971":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"5:7533":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"14:6424":{"crate_id":14,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"6:6793":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"5:2805":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"2:48579":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"5:4882":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"1:9690":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutexGuard"],"kind":"struct"},"15:11696":{"crate_id":15,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"14:3522":{"crate_id":14,"path":["gimli","arch","Arm"],"kind":"struct"},"1:11277":{"crate_id":1,"path":["std","net","ip","fmt","Span"],"kind":"struct"},"2:54417":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"1:6866":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"2:50247":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"2:49870":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"15:11100":{"crate_id":15,"path":["object","read","SymbolIndex"],"kind":"struct"},"14:7477":{"crate_id":14,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"14:5927":{"crate_id":14,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"15:10041":{"crate_id":15,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"2:44914":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"15:12610":{"crate_id":15,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"2:3398":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"2:10178":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"2:54460":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:5002":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"17:1020":{"crate_id":17,"path":["miniz_oxide","MZError"],"kind":"enum"},"5:3457":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"1:7959":{"crate_id":1,"path":["std","sync","mpsc","mpsc_queue","Queue"],"kind":"struct"},"1:975":{"crate_id":1,"path":["std","ascii","AsciiExt","make_ascii_uppercase"],"kind":"foreign_type"},"14:7738":{"crate_id":14,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"2:48126":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"1:8778":{"crate_id":1,"path":["vec_map","Target"],"kind":"typedef"},"6:6057":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"17:0":{"crate_id":17,"path":["miniz_oxide"],"kind":"module"},"2:9595":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"5:5417":{"crate_id":5,"path":["vec_map","Owned"],"kind":"typedef"},"14:4386":{"crate_id":14,"path":["gimli","constants","DwLle"],"kind":"struct"},"1:11169":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"15:12521":{"crate_id":15,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"15:12247":{"crate_id":15,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"1:7609":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"15:10279":{"crate_id":15,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"16:829":{"crate_id":16,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"14:5346":{"crate_id":14,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"14:7024":{"crate_id":14,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"15:10489":{"crate_id":15,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"9:2039":{"crate_id":9,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"2:8633":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"14:6731":{"crate_id":14,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"6:4297":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"15:12010":{"crate_id":15,"path":["object","macho","MachHeader64"],"kind":"struct"},"1:6450":{"crate_id":1,"path":["std","os","unix","process","CommandExt","pre_exec"],"kind":"foreign_type"},"16:169":{"crate_id":16,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"15:13054":{"crate_id":15,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"7:38":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"15:12118":{"crate_id":15,"path":["object","macho","Section64"],"kind":"struct"},"5:6587":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"2:48246":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"2:46041":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"15:11304":{"crate_id":15,"path":["object","read","RelocationTarget"],"kind":"enum"},"1:4421":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"15:13933":{"crate_id":15,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"2:48404":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"1:9733":{"crate_id":1,"path":["std","sys_common","rwlock","MovableRWLock"],"kind":"struct"},"2:48817":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"2:23566":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"6:4012":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"2:51758":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"2:51317":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"2:45110":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"9:892":{"crate_id":9,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"14:7420":{"crate_id":14,"path":["gimli","read","unit","UnitOffset"],"kind":"struct"},"1:3634":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"6:6051":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"2:48367":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"5:669":{"crate_id":5,"path":["vec_map","Owned"],"kind":"typedef"},"14:5433":{"crate_id":14,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"1:5992":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"15:13547":{"crate_id":15,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"2:46032":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"1:10594":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"2:45230":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"14:6577":{"crate_id":14,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"5:5189":{"crate_id":5,"path":["vec_map","Output"],"kind":"typedef"},"6:6864":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"5:5183":{"crate_id":5,"path":["vec_map","Output"],"kind":"typedef"},"15:9133":{"crate_id":15,"path":["object","common","RelocationEncoding"],"kind":"enum"},"2:50703":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"2:46965":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"14:7146":{"crate_id":14,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"9:925":{"crate_id":9,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"5:891":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"1:4699":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"2:3171":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"0:55":{"crate_id":0,"path":["vec_map","Entry"],"kind":"enum"},"14:4762":{"crate_id":14,"path":["gimli","constants","DwOrd"],"kind":"struct"},"15:12507":{"crate_id":15,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"1:5372":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"6:4103":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"1:12101":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"2:44968":{"crate_id":2,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"2:7908":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator","Item"],"kind":"foreign_type"},"2:10169":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"6:6019":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"15:10200":{"crate_id":15,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"1:12211":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"1:11102":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"5:1392":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"16:754":{"crate_id":16,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"9:1159":{"crate_id":9,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"1:4246":{"crate_id":1,"path":["std","io","readbuf","ReadBuf"],"kind":"struct"},"15:13609":{"crate_id":15,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"14:7236":{"crate_id":14,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"17:776":{"crate_id":17,"path":["miniz_oxide","deflate","CompressionLevel"],"kind":"enum"},"2:55711":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"1:5979":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"9:812":{"crate_id":9,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"1:14351":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"15:12756":{"crate_id":15,"path":["object","macho","Nlist64"],"kind":"struct"},"6:1522":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"15:13488":{"crate_id":15,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"14:5407":{"crate_id":14,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"15:13819":{"crate_id":15,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"2:3272":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"6:3929":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"1:7280":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:46267":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"14:5996":{"crate_id":14,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"1:5866":{"crate_id":1,"path":["std","os","unix","net","addr","AsciiEscaped"],"kind":"struct"},"15:10377":{"crate_id":15,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"16:739":{"crate_id":16,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"15:13154":{"crate_id":15,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"15:10623":{"crate_id":15,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"2:47720":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"5:7409":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"6:1579":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"16:774":{"crate_id":16,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"2:23214":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"5:3046":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"15:11337":{"crate_id":15,"path":["object","read","CompressionFormat"],"kind":"enum"},"1:11188":{"crate_id":1,"path":["std","net","addr","SocketAddr"],"kind":"enum"},"15:13240":{"crate_id":15,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"1:11383":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"2:8183":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"2:45138":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"14:3241":{"crate_id":14,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"15:11358":{"crate_id":15,"path":["object","read","CompressedFileRange"],"kind":"struct"},"2:51570":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"14:6176":{"crate_id":14,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"2:50020":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"2:45261":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"9:1688":{"crate_id":9,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"2:2921":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"15:10117":{"crate_id":15,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"2:48575":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"2:2535":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"1:2285":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"1:10852":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"9:2025":{"crate_id":9,"path":["hashbrown","set","Intersection"],"kind":"struct"},"1:9187":{"crate_id":1,"path":["std","lazy","SyncOnceCell"],"kind":"struct"},"11:120":{"crate_id":11,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"2:46920":{"crate_id":2,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"2:45024":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"14:5456":{"crate_id":14,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"2:12960":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"14:5580":{"crate_id":14,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"1:11182":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"15:9528":{"crate_id":15,"path":["object","read","util","Bytes"],"kind":"struct"},"5:7649":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"1:7249":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"1:7657":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"6:4423":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"15:12287":{"crate_id":15,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"15:13331":{"crate_id":15,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"14:6072":{"crate_id":14,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"0:286":{"crate_id":0,"path":["vec_map","Item"],"kind":"typedef"},"2:49589":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"2:8304":{"crate_id":2,"path":["vec_map","Target"],"kind":"typedef"},"15:12712":{"crate_id":15,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"1:10548":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"2:23758":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"1:5735":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"15:10071":{"crate_id":15,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"15:10001":{"crate_id":15,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"2:51777":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"5:4188":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"14:7870":{"crate_id":14,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"12:0":{"crate_id":12,"path":["rustc_demangle"],"kind":"module"},"12:56":{"crate_id":12,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"14:6491":{"crate_id":14,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"1:4378":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"14:4671":{"crate_id":14,"path":["gimli","constants","DwId"],"kind":"struct"},"5:5742":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"2:46145":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"15:12262":{"crate_id":15,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"1:4987":{"crate_id":1,"path":["std","net","addr","ToSocketAddrs"],"kind":"trait"},"2:10667":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"1:2348":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"15:9264":{"crate_id":15,"path":["object","endian","LittleEndian"],"kind":"struct"},"19:0":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"5:1426":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"2:23694":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"6:1535":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"2:54447":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"5:0":{"crate_id":5,"path":["alloc"],"kind":"module"},"6:4270":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"2:3032":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"9:2045":{"crate_id":9,"path":["hashbrown","set","Union"],"kind":"struct"},"14:7514":{"crate_id":14,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"16:677":{"crate_id":16,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"1:12172":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"14:5273":{"crate_id":14,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"6:582":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"2:23173":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"6:1755":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"15:9600":{"crate_id":15,"path":["object","read","any","FileInternal"],"kind":"enum"},"2:3024":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"15:13884":{"crate_id":15,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"6:6799":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"1:2593":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"15:12234":{"crate_id":15,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"0:258":{"crate_id":0,"path":["vec_map","Item"],"kind":"typedef"},"2:37470":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"5:3569":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"7:0":{"crate_id":7,"path":["unwind"],"kind":"module"},"2:2626":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"15:11434":{"crate_id":15,"path":["object","elf","FileHeader32"],"kind":"struct"},"2:46692":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"14:5595":{"crate_id":14,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"1:2781":{"crate_id":1,"path":["vec_map","Target"],"kind":"typedef"},"2:23009":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"15:12494":{"crate_id":15,"path":["object","macho","RpathCommand"],"kind":"struct"},"1:8669":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"14:5707":{"crate_id":14,"path":["gimli","read","cfi","UninitializedUnwindContext"],"kind":"struct"},"1:15815":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"15:10673":{"crate_id":15,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"2:2646":{"crate_id":2,"path":["core","clone","Clone","clone"],"kind":"foreign_type"},"2:46987":{"crate_id":2,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"15:10061":{"crate_id":15,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"5:5206":{"crate_id":5,"path":["vec_map","Owned"],"kind":"typedef"},"6:6564":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"1:14626":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"2:2722":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"15:9886":{"crate_id":15,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"1:15021":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"5:800":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"2:9725":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"6:5219":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"6:5304":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"15:13356":{"crate_id":15,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"15:12155":{"crate_id":15,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"0:164":{"crate_id":0,"path":["vec_map","IntoIter"],"kind":"typedef"},"6:4166":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"5:1325":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"2:46926":{"crate_id":2,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"2:7926":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator","map"],"kind":"foreign_type"},"5:7599":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"1:13949":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"15:12725":{"crate_id":15,"path":["object","macho","NoteCommand"],"kind":"struct"},"1:5941":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"9:2009":{"crate_id":9,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"5:3039":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"14:7119":{"crate_id":14,"path":["gimli","read","op","Expression"],"kind":"struct"},"5:7433":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"14:3604":{"crate_id":14,"path":["gimli","arch","X86_64"],"kind":"struct"},"5:5806":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"1:6564":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"14:6391":{"crate_id":14,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"14:3320":{"crate_id":14,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"15:10887":{"crate_id":15,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"1:11322":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"15:13772":{"crate_id":15,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"1:12127":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"14:3118":{"crate_id":14,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"1:11317":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"6:509":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"1:1043":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"15:11277":{"crate_id":15,"path":["object","read","CodeView"],"kind":"struct"},"15:13540":{"crate_id":15,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"15:11678":{"crate_id":15,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"5:6542":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"15:10926":{"crate_id":15,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"15:10529":{"crate_id":15,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"15:12795":{"crate_id":15,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"2:45161":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"2:50199":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"6:4211":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"1:15775":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"1:15823":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"2:7907":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"2:7443":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"2:3155":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"1:7911":{"crate_id":1,"path":["std","sync","mpsc","blocking","Inner"],"kind":"struct"},"5:7246":{"crate_id":5,"path":["vec_map","Target"],"kind":"typedef"},"6:6787":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"2:45069":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"2:51881":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"15:9769":{"crate_id":15,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"5:5176":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"1:5760":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt","mtime"],"kind":"foreign_type"},"2:7959":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator","flatten"],"kind":"foreign_type"},"5:6121":{"crate_id":5,"path":["vec_map","Target"],"kind":"typedef"},"2:48563":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"2:10347":{"crate_id":2,"path":["vec_map","Item"],"kind":"typedef"},"1:10990":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"5:3377":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"15:11947":{"crate_id":15,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"1:11297":{"crate_id":1,"path":["std","net","parser","AddrParseError"],"kind":"struct"},"16:801":{"crate_id":16,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"1:8897":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"2:22201":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"2:45468":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"2:9808":{"crate_id":2,"path":["core","hash","macros","Hash"],"kind":"proc_derive"},"2:48160":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"2:9848":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"15:12771":{"crate_id":15,"path":["object","macho","Relocation"],"kind":"struct"},"2:45170":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"2:51786":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"6:603":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"2:48275":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"11:232":{"crate_id":11,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"2:49694":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"0:345":{"crate_id":0,"path":["vec_map","Item"],"kind":"typedef"},"15:13477":{"crate_id":15,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"9:877":{"crate_id":9,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"2:50303":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"1:4423":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"2:3486":{"crate_id":2,"path":["core","ops","try_trait","FromResidual","from_residual"],"kind":"foreign_type"},"1:2949":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"14:4448":{"crate_id":14,"path":["gimli","constants","DwEnd"],"kind":"struct"},"2:9131":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"6:1653":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"9:2013":{"crate_id":9,"path":["hashbrown","set","Drain"],"kind":"struct"},"1:1917":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"14:5522":{"crate_id":14,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"2:48360":{"crate_id":2,"path":["vec_map","Searcher"],"kind":"typedef"},"5:2796":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"14:6269":{"crate_id":14,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"2:10406":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"6:6075":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"1:5963":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"2:23854":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"1:4038":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"0:157":{"crate_id":0,"path":["vec_map","Item"],"kind":"typedef"},"2:6232":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"2:49756":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"15:10635":{"crate_id":15,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"5:6951":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"9:463":{"crate_id":9,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"2:7916":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator","advance_by"],"kind":"foreign_type"},"2:7936":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator","filter"],"kind":"foreign_type"},"6:6190":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"1:3668":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"2:10154":{"crate_id":2,"path":["vec_map","Output"],"kind":"typedef"},"15:542":{"crate_id":15,"path":["object","read","any","Section"],"kind":"struct"},"15:10599":{"crate_id":15,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"1:12736":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"6:5904":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"2:22203":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"2:45091":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"1:12216":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"2:48340":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"12:216":{"crate_id":12,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"1:10915":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"1:10907":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"1:11448":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"2:11967":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"16:712":{"crate_id":16,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"9:354":{"crate_id":9,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"15:9719":{"crate_id":15,"path":["object","read","any","SectionIterator"],"kind":"struct"},"15:10827":{"crate_id":15,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"5:7441":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"6:5130":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"1:5375":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"2:48587":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"14:6152":{"crate_id":14,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"5:7089":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"9:968":{"crate_id":9,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"1:9246":{"crate_id":1,"path":["std","lazy","SyncLazy"],"kind":"struct"},"2:44937":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"1:11422":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"2:50384":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"15:10179":{"crate_id":15,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"2:2205":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"2:23598":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"6:5331":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"2:3269":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"16:885":{"crate_id":16,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"2:50816":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"1:14132":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"14:5941":{"crate_id":14,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"0:163":{"crate_id":0,"path":["vec_map","Item"],"kind":"typedef"},"1:8011":{"crate_id":1,"path":["std","sync","mpsc","oneshot","Packet"],"kind":"struct"},"2:2927":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"2:48583":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"1:12085":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"6:4452":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"6:4232":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"14:4790":{"crate_id":14,"path":["gimli","constants","DwDsc"],"kind":"struct"},"6:5929":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"1:9050":{"crate_id":1,"path":["vec_map","Target"],"kind":"typedef"},"2:3138":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"0:61":{"crate_id":0,"path":["vec_map","Entry","Occupied"],"kind":"variant"},"2:3106":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"6:6172":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"2:22938":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"15:10584":{"crate_id":15,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"9:853":{"crate_id":9,"path":["hashbrown","map","Values"],"kind":"struct"},"15:10266":{"crate_id":15,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"2:49429":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"2:4464":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"2:48802":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"5:7449":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"1:8389":{"crate_id":1,"path":["std","sync","mpsc","sync","Node"],"kind":"struct"},"15:10106":{"crate_id":15,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"15:12327":{"crate_id":15,"path":["object","macho","SymtabCommand"],"kind":"struct"},"2:23135":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"1:2983":{"crate_id":1,"path":["vec_map","Target"],"kind":"typedef"},"15:1236":{"crate_id":15,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"6:3884":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"2:54499":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:4466":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"0:234":{"crate_id":0,"path":["vec_map","Values"],"kind":"struct"},"14:6620":{"crate_id":14,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"6:1542":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"1:7420":{"crate_id":1,"path":["vec_map","Owned"],"kind":"typedef"},"6:1703":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"2:7715":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"2:7909":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator","next"],"kind":"foreign_type"},"14:4506":{"crate_id":14,"path":["gimli","constants","DwVis"],"kind":"struct"},"1:14903":{"crate_id":1,"path":["std","sys","unix","time","inner","SystemTime"],"kind":"struct"},"6:523":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"2:44984":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"15:8954":{"crate_id":15,"path":["object","common","SectionKind"],"kind":"enum"},"15:11231":{"crate_id":15,"path":["object","read","Import"],"kind":"struct"},"2:50541":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"15:12195":{"crate_id":15,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"2:22745":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"5:7637":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"6:1517":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"1:3100":{"crate_id":1,"path":["vec_map","Owned"],"kind":"typedef"},"15:11970":{"crate_id":15,"path":["object","macho","FatArch32"],"kind":"struct"},"15:1311":{"crate_id":15,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"1:4597":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"15:13098":{"crate_id":15,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"1:4683":{"crate_id":1,"path":["std","io","Write","write_vectored"],"kind":"foreign_type"},"1:3200":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"6:5292":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"6:5468":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"16:650":{"crate_id":16,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"1:14866":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"16:667":{"crate_id":16,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"5:4955":{"crate_id":5,"path":["alloc","slice"],"kind":"module"},"5:7539":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"5:2795":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"15:9943":{"crate_id":15,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"15:11932":{"crate_id":15,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"1:8367":{"crate_id":1,"path":["std","sync","mpsc","sync","State"],"kind":"struct"},"2:48609":{"crate_id":2,"path":["core","time","FromFloatSecsError"],"kind":"struct"},"17:469":{"crate_id":17,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"16:766":{"crate_id":16,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"2:3126":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"6:4446":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"1:2635":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"17:27":{"crate_id":17,"path":["miniz_oxide","deflate","buffer","HashBuffers"],"kind":"struct"},"1:15831":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"5:4123":{"crate_id":5,"path":["alloc","collections","vec_deque","pair_slices","PairSlices"],"kind":"struct"},"1:10624":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"15:13453":{"crate_id":15,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"3:309":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"6:5365":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"2:46093":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"15:13554":{"crate_id":15,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"2:31142":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"9:866":{"crate_id":9,"path":["hashbrown","map","Drain"],"kind":"struct"},"2:8009":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator","fold"],"kind":"foreign_type"},"1:13582":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"6:1731":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"15:13062":{"crate_id":15,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"15:11147":{"crate_id":15,"path":["object","read","SymbolMap"],"kind":"struct"},"5:2075":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"2:21848":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"1:1412":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"2:45250":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"2:49663":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"15:13627":{"crate_id":15,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"1:5728":{"crate_id":1,"path":["std","os","unix","fs","FileExt","read_at"],"kind":"foreign_type"},"1:11175":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"2:3091":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"2:7924":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator","intersperse_with"],"kind":"foreign_type"},"2:48829":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"15:14000":{"crate_id":15,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"5:5986":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"17:692":{"crate_id":17,"path":["miniz_oxide","deflate","core","CompressionStrategy"],"kind":"enum"},"15:12480":{"crate_id":15,"path":["object","macho","UuidCommand"],"kind":"struct"},"2:4981":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"2:3331":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"5:1478":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"2:13430":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"14:7392":{"crate_id":14,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"1:14593":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"0:251":{"crate_id":0,"path":["vec_map","Drain"],"kind":"struct"},"1:11371":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"6:5112":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"6:6042":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"17:809":{"crate_id":17,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"1:1026":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"1:10842":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"2:47246":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"6:6165":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"15:13780":{"crate_id":15,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"15:12598":{"crate_id":15,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"2:47039":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"14:2754":{"crate_id":14,"path":["gimli","common","Encoding"],"kind":"struct"},"14:6569":{"crate_id":14,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"1:10408":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"2:3484":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"1:9723":{"crate_id":1,"path":["std","sys_common","rwlock","StaticRWLockReadGuard"],"kind":"struct"},"5:2027":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"1:5730":{"crate_id":1,"path":["std","os","unix","fs","FileExt","write_at"],"kind":"foreign_type"},"1:7501":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"2:9282":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"1:11389":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"1:3545":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"1:972":{"crate_id":1,"path":["std","ascii","AsciiExt","to_ascii_uppercase"],"kind":"foreign_type"},"9:774":{"crate_id":9,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"2:2680":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"2:21780":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"15:11628":{"crate_id":15,"path":["object","elf","Rel32"],"kind":"struct"},"2:21825":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"6:4239":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"15:12275":{"crate_id":15,"path":["object","macho","ThreadCommand"],"kind":"struct"},"1:15227":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"2:1999":{"crate_id":2,"path":["core","mem","replace"],"kind":"function"},"2:3181":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"1:13436":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"2:47819":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"1:15830":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"15:10095":{"crate_id":15,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"15:11458":{"crate_id":15,"path":["object","elf","FileHeader64"],"kind":"struct"},"1:14580":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"2:45281":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"1:10615":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"6:1724":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"14:7342":{"crate_id":14,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"2:3065":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"2:13272":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"9:377":{"crate_id":9,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"6:5316":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"0:189":{"crate_id":0,"path":["vec_map","Output"],"kind":"typedef"},"2:2312":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"2:10348":{"crate_id":2,"path":["vec_map","IntoIter"],"kind":"typedef"},"15:10516":{"crate_id":15,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"15:12208":{"crate_id":15,"path":["object","macho","SubClientCommand"],"kind":"struct"},"17:900":{"crate_id":17,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"1:4565":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"2:7095":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"15:13574":{"crate_id":15,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"15:8902":{"crate_id":15,"path":["object","common","AddressSize"],"kind":"enum"},"2:23080":{"crate_id":2,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"1:15824":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"14:3506":{"crate_id":14,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"2:10353":{"crate_id":2,"path":["vec_map","Item"],"kind":"typedef"},"2:8672":{"crate_id":2,"path":["vec_map","Target"],"kind":"typedef"},"2:1995":{"crate_id":2,"path":["core","mem","swap"],"kind":"function"},"2:44899":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"15:12671":{"crate_id":15,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"14:5717":{"crate_id":14,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"1:12007":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"15:8929":{"crate_id":15,"path":["object","common","BinaryFormat"],"kind":"enum"},"9:1253":{"crate_id":9,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"2:2623":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"6:6839":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"6:1558":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"2:3185":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"6:3952":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"6:3936":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"2:46339":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"2:23662":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"15:12645":{"crate_id":15,"path":["object","macho","SymsegCommand"],"kind":"struct"},"15:10571":{"crate_id":15,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"2:48223":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"14:6949":{"crate_id":14,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"6:1718":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"14:7264":{"crate_id":14,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"14:2816":{"crate_id":14,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"5:816":{"crate_id":5,"path":["vec_map","Target"],"kind":"typedef"},"15:10448":{"crate_id":15,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"2:50510":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"16:849":{"crate_id":16,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"9:949":{"crate_id":9,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"2:2933":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"1:2469":{"crate_id":1,"path":["std","error","from","StringError"],"kind":"struct"},"5:3142":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"2:4533":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"14:4823":{"crate_id":14,"path":["gimli","constants","DwIdx"],"kind":"struct"},"6:6816":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"2:47236":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"14:3064":{"crate_id":14,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"6:4399":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"5:1450":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"14:6718":{"crate_id":14,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"15:13272":{"crate_id":15,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"0:215":{"crate_id":0,"path":["vec_map","IterMut"],"kind":"struct"},"5:5588":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"17:157":{"crate_id":17,"path":["miniz_oxide","deflate","core","CompressorOxide"],"kind":"struct"},"1:793":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"1:10683":{"crate_id":1,"path":["std","ffi","c_str","CStr"],"kind":"struct"},"15:11045":{"crate_id":15,"path":["object","read","FileKind"],"kind":"enum"},"0:271":{"crate_id":0,"path":["vec_map","Item"],"kind":"typedef"},"15:10236":{"crate_id":15,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"2:3522":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"2:47893":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"15:12632":{"crate_id":15,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"12:250":{"crate_id":12,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"2:4328":{"crate_id":2,"path":["core","array","try_collect_into_array","Guard"],"kind":"struct"},"1:14774":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"2:51719":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"5:5212":{"crate_id":5,"path":["alloc","slice","insert_head","InsertionHole"],"kind":"struct"},"5:4445":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"14:4852":{"crate_id":14,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"1:2287":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"14:7216":{"crate_id":14,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"2:11696":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"2:7917":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator","nth"],"kind":"foreign_type"},"2:7494":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"2:47450":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"1:5655":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"2:47801":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"2:4617":{"crate_id":2,"path":["vec_map","Target"],"kind":"typedef"},"2:22840":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"9:1235":{"crate_id":9,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"17:927":{"crate_id":17,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"15:607":{"crate_id":15,"path":["object","read","any","Comdat"],"kind":"struct"},"1:3208":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"14:6238":{"crate_id":14,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"2:4683":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"5:5":{"crate_id":5,"path":["alloc","vec"],"kind":"macro"},"1:2049":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"14:7549":{"crate_id":14,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"2:12982":{"crate_id":2,"path":["vec_map","Future"],"kind":"typedef"},"15:11794":{"crate_id":15,"path":["object","elf","Vernaux"],"kind":"struct"},"2:36229":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"2:21":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"9:429":{"crate_id":9,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"1:15780":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"2:48151":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"2:4040":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"14:3287":{"crate_id":14,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"5:4763":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"6:5136":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"13:230":{"crate_id":13,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"1:10703":{"crate_id":1,"path":["std","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"14:7360":{"crate_id":14,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"1:1360":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"2:46447":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"1:9054":{"crate_id":1,"path":["vec_map","Target"],"kind":"typedef"},"1:15290":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"2:50122":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"2:12249":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"2:7945":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator","take_while"],"kind":"foreign_type"},"2:47674":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"3:0":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"2:44682":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"1:14990":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"1:4625":{"crate_id":1,"path":["std","io","Read","read"],"kind":"foreign_type"},"5:1070":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"2:51858":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"2:10382":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"2:7910":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator","size_hint"],"kind":"foreign_type"},"1:14790":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"1:4040":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"2:49631":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"15:11030":{"crate_id":15,"path":["object","read","Error"],"kind":"struct"},"6:4132":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"6:5920":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"2:7264":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"14:4641":{"crate_id":14,"path":["gimli","constants","DwAddr"],"kind":"struct"},"2:44475":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"6:4354":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"2:48418":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"6:3831":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"1:1539":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"5:1416":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"15:681":{"crate_id":15,"path":["object","read","any","Symbol"],"kind":"struct"},"1:4707":{"crate_id":1,"path":["std","io","BufRead","fill_buf"],"kind":"foreign_type"},"2:3493":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"6:1617":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"6:5075":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"1:10322":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"2:47254":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"1:5762":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt","ctime"],"kind":"foreign_type"},"0:184":{"crate_id":0,"path":["vec_map","Output"],"kind":"typedef"},"9:1200":{"crate_id":9,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"15:12456":{"crate_id":15,"path":["object","macho","TwolevelHint"],"kind":"struct"},"9:556":{"crate_id":9,"path":["hashbrown","map","HashMap"],"kind":"struct"},"1:9016":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"2:48107":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"1:2067":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"2:10448":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"2:22101":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"1:13934":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"15:2543":{"crate_id":15,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"2:3487":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"1:10847":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"2:12272":{"crate_id":2,"path":["core","str","pattern","Searcher","next_match"],"kind":"foreign_type"},"2:5028":{"crate_id":2,"path":["core","iter"],"kind":"module"},"15:13258":{"crate_id":15,"path":["object","pe","ImageSymbol"],"kind":"struct"},"6:597":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"2:48047":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"14:3145":{"crate_id":14,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"2:3165":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"1:8736":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"2:7785":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator","len"],"kind":"foreign_type"},"2:50147":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"2:45477":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"1:10859":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"2:55732":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"2:45452":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"14:5295":{"crate_id":14,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"2:23822":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"2:12325":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"2:3029":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"9:930":{"crate_id":9,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"2:51797":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"6:6586":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"15:9404":{"crate_id":15,"path":["object","endian","I16Bytes"],"kind":"struct"},"14:7786":{"crate_id":14,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"2:48065":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"15:10468":{"crate_id":15,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"15:11653":{"crate_id":15,"path":["object","elf","Rel64"],"kind":"struct"},"1:14557":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"15:9689":{"crate_id":15,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"1:10891":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"6:4040":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"1:15559":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"0:355":{"crate_id":0,"path":["vec_map","Item"],"kind":"typedef"},"15:10502":{"crate_id":15,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"1:1370":{"crate_id":1,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"2:3002":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"14:6464":{"crate_id":14,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"2:50750":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"14:4350":{"crate_id":14,"path":["gimli","constants","DwAte"],"kind":"struct"},"2:49973":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"6:4339":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"2:49408":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"15:13810":{"crate_id":15,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"5:6022":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"2:1950":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"2:47596":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"15:13942":{"crate_id":15,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"15:12221":{"crate_id":15,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"}},"external_crates":{"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"17":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"adler","html_root_url":"https://docs.rs/adler/0.2.3/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"12":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":10}