{"root":"0:0:1072","crate_version":"1.0.23","includes_private":false,"index":{"0:357:412":{"id":"0:357:412","crate_id":0,"name":"clone","span":{"filename":"src/runtime.rs","begin":[140,15],"end":[140,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"RepInterp","id":"0:349:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:245:1969":{"id":"0:245:1969","crate_id":0,"name":"push_underscore","span":{"filename":"src/runtime.rs","begin":[372,0],"end":[374,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:139":{"id":"0:139","crate_id":0,"name":null,"span":{"filename":"src/runtime.rs","begin":[13,0],"end":[18,1]},"visibility":{"restricted":{"parent":"0:124:1645","path":"::__private"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitOr","id":"2:2817:2282","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ThereIsNoIteratorInRepetition","id":"0:137:1914","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThereIsNoIteratorInRepetition","id":"0:137:1914","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:140:183","0:141:359"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:148":{"id":"0:148","crate_id":0,"name":null,"span":{"filename":"src/runtime.rs","begin":[34,0],"end":[39,1]},"visibility":{"restricted":{"parent":"0:124:1645","path":"::__private"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitOr","id":"2:2817:2282","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"HasIterator","id":"0:135:1915","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"HasIterator","id":"0:135:1915","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:149:183","0:150:359"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:98:1643":{"id":"0:98:1643","crate_id":0,"name":"to_tokens","span":{"filename":"src/to_tokens.rs","begin":[102,4],"end":[104,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11399:57062":{"id":"2:11399:57062","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"self::pattern":"2:11036:2974","str::rsplitn":"2:11402:57064","prim@char":"1:12300:408"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"2:50126:2888","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11041:2967","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:11:2126":{"id":"0:11:2126","crate_id":0,"name":"append","span":{"filename":"src/ext.rs","begin":[12,4],"end":[14,27]},"visibility":"default","docs":"For use by `ToTokens` implementations.\n\nAppends the token specified to this list of tokens.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"generic","inner":"U"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"TokenTree","id":"21:836:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:2528-0:135:1915":{"id":"b:2:2528-0:135:1915","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"HasIterator","id":"0:135:1915","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2531:127","2:2532:1426"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11434:61059":{"id":"2:11434:61059","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"self::pattern":"2:11036:2974","prim@char":"1:12300:408"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11041:2967","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:309":{"id":"0:309","crate_id":0,"name":null,"span":{"filename":"src/ident_fragment.rs","begin":[86,0],"end":[86,55]},"visibility":{"restricted":{"parent":"0:39:1642","path":"::ident_fragment"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["span"],"trait":{"name":"IdentFragment","id":"0:45:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u8"},"items":["0:310:655"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11337:61039":{"id":"2:11337:61039","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]","#[rustc_const_unstable(feature = \"const_is_char_boundary\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:110:1643":{"id":"0:110:1643","crate_id":0,"name":"to_tokens","span":{"filename":"src/to_tokens.rs","begin":[165,4],"end":[168,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2532:1426":{"id":"2:2532:1426","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48198:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11353:57027":{"id":"2:11353:57027","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9138:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9138:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:84:1643":{"id":"0:84:1643","crate_id":0,"name":"to_tokens","span":{"filename":"src/to_tokens.rs","begin":[78,4],"end":[80,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:95:1643":{"id":"0:95:1643","crate_id":0,"name":"to_tokens","span":{"filename":"src/to_tokens.rs","begin":[96,4],"end":[98,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:369:1984":{"id":"0:369:1984","crate_id":0,"name":"push_at_spanned","span":{"filename":"src/runtime.rs","begin":[332,0],"end":[332,40]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:830:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11390:57060":{"id":"2:11390:57060","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"`DoubleEndedIterator`":"2:7079:120","self::pattern":"2:11036:2974","str::split":"2:11384:57056","prim@char":"1:12300:408"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplit","id":"2:50040:2890","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11041:2967","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11041:2967","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11056:3574","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:399:1995":{"id":"0:399:1995","crate_id":0,"name":"push_ge_spanned","span":{"filename":"src/runtime.rs","begin":[347,0],"end":[347,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:830:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2517-0:349:1903":{"id":"b:2:2517-0:349:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2490:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RepInterp","id":"0:349:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2519:673"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:681-0:446:2213":{"id":"b:5:681-0:446:2213","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2255:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:677:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IdentFragmentAdapter","id":"0:446:2213","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["5:683:2525","5:684:2723","5:685:2724"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:404:1949":{"id":"0:404:1949","crate_id":0,"name":"push_lt","span":{"filename":"src/runtime.rs","begin":[350,0],"end":[350,40]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11393:61046":{"id":"2:11393:61046","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"str::rsplit_terminator":"2:11396:61047","self::pattern":"2:11036:2974","prim@char":"1:12300:408","str::split":"2:11384:57056","`DoubleEndedIterator`":"2:7079:120"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitTerminator","id":"2:50072:3832","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11041:2967","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:269":{"id":"0:269","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[112,0],"end":[112,35]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::to_tokens::ToTokens","name":"ToTokens","id":"0:77:1648","glob":false}},"0:89":{"id":"0:89","crate_id":0,"name":null,"span":{"filename":"src/to_tokens.rs","begin":[89,0],"end":[93,1]},"visibility":{"restricted":{"parent":"0:64:1643","path":"::to_tokens"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"ToOwned","id":"5:677:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ToTokens","id":"0:77:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["to_token_stream","into_token_stream"],"trait":{"name":"ToTokens","id":"0:77:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:686:110","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:92:1643"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:199:2306":{"id":"0:199:2306","crate_id":0,"name":"Iter","span":{"filename":"src/runtime.rs","begin":[122,8],"end":[122,43]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Iter","id":"5:2948:2306","args":{"angle_bracketed":{"args":[{"lifetime":"'q"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}},"b:2:2238-0:137:1914":{"id":"b:2:2238-0:137:1914","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThereIsNoIteratorInRepetition","id":"0:137:1914","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2240:2215"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11359:3864":{"id":"2:11359:3864","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:12300:408"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Chars","id":"2:49992:2970","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11347:8208":{"id":"2:11347:8208","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:48056:176"},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48054:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9138:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9138:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2662:217-0:446:2213":{"id":"a:2:2662:217-0:446:2213","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IdentFragmentAdapter","id":"0:446:2213","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2523-0:446:2213":{"id":"b:2:2523-0:446:2213","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2493:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IdentFragmentAdapter","id":"0:446:2213","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2526:127","2:2527:1427"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:361:1980":{"id":"0:361:1980","crate_id":0,"name":"push_add_eq_spanned","span":{"filename":"src/runtime.rs","begin":[328,0],"end":[328,52]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:830:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:5373-0:446:2213":{"id":"b:5:5373-0:446:2213","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:8601:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5371:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IdentFragmentAdapter","id":"0:446:2213","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["5:5375:1406"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11365:61045":{"id":"2:11365:61045","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LinesAny","id":"2:50286:3841","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:78:1643":{"id":"0:78:1643","crate_id":0,"name":"to_tokens","span":{"filename":"src/to_tokens.rs","begin":[53,4],"end":[53,50]},"visibility":"default","docs":"Write `self` to the given `TokenStream`.\n\nThe token append methods provided by the [`TokenStreamExt`] extension\ntrait may be useful for implementing `ToTokens`.\n\n[`TokenStreamExt`]: trait.TokenStreamExt.html\n\n# Example\n\nExample implementation for a struct representing Rust paths like\n`std::cmp::PartialEq`:\n\n```\nuse proc_macro2::{TokenTree, Spacing, Span, Punct, TokenStream};\nuse quote::{TokenStreamExt, ToTokens};\n\npub struct Path {\n    pub global: bool,\n    pub segments: Vec<PathSegment>,\n}\n\nimpl ToTokens for Path {\n    fn to_tokens(&self, tokens: &mut TokenStream) {\n        for (i, segment) in self.segments.iter().enumerate() {\n            if i > 0 || self.global {\n                // Double colon `::`\n                tokens.append(Punct::new(':', Spacing::Joint));\n                tokens.append(Punct::new(':', Spacing::Alone));\n            }\n            segment.to_tokens(tokens);\n        }\n    }\n}\n#\n# pub struct PathSegment;\n#\n# impl ToTokens for PathSegment {\n#     fn to_tokens(&self, tokens: &mut TokenStream) {\n#         unimplemented!()\n#     }\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:251:1884":{"id":"0:251:1884","crate_id":0,"name":"span","span":{"filename":"src/runtime.rs","begin":[405,4],"end":[407,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48054:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Span","id":"21:830:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:96":{"id":"0:96","crate_id":0,"name":null,"span":{"filename":"src/to_tokens.rs","begin":[101,0],"end":[105,1]},"visibility":{"restricted":{"parent":"0:64:1643","path":"::to_tokens"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"ToTokens","id":"0:77:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["to_token_stream","into_token_stream"],"trait":{"name":"ToTokens","id":"0:77:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Rc","id":"5:4532:201","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:98:1643"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2676:225-0:137:1914":{"id":"a:2:2676:225-0:137:1914","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2676:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThereIsNoIteratorInRepetition","id":"0:137:1914","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:324:1643":{"id":"0:324:1643","crate_id":0,"name":"to_tokens","span":{"filename":"src/to_tokens.rs","begin":[139,0],"end":[156,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11429:61056":{"id":"2:11429:61056","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2726:2541-0:446:2213":{"id":"a:2:2726:2541-0:446:2213","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2726:2541","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2726:2541","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IdentFragmentAdapter","id":"0:446:2213","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:304:655":{"id":"0:304:655","crate_id":0,"name":"fmt","span":{"filename":"src/ident_fragment.rs","begin":[85,0],"end":[85,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8556:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8545:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2240:2215":{"id":"2:2240:2215","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:118:1643":{"id":"0:118:1643","crate_id":0,"name":"to_tokens","span":{"filename":"src/to_tokens.rs","begin":[190,4],"end":[192,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:417:1974":{"id":"0:417:1974","crate_id":0,"name":"push_pound_spanned","span":{"filename":"src/runtime.rs","begin":[356,0],"end":[356,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:830:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11335:789":{"id":"2:11335:789","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:12300:408"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5122:2737":{"id":"5:5122:2737","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:6994:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6994:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11414:61050":{"id":"2:11414:61050","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"str::matches":"2:11411:2479","prim@char":"1:12300:408","self::pattern":"2:11036:2974","`DoubleEndedIterator`":"2:7079:120"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatches","id":"2:50244:3840","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11041:2967","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11041:2967","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11056:3574","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:234:2017":{"id":"0:234:2017","crate_id":0,"name":"push_lifetime_spanned","span":{"filename":"src/runtime.rs","begin":[248,0],"end":[280,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:830:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["lifetime",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3321-0:446:2213":{"id":"b:2:3321-0:446:2213","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3319:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IdentFragmentAdapter","id":"0:446:2213","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3323:1440"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:319":{"id":"0:319","crate_id":0,"name":null,"span":{"filename":"src/ident_fragment.rs","begin":[86,0],"end":[86,55]},"visibility":{"restricted":{"parent":"0:39:1642","path":"::ident_fragment"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["span"],"trait":{"name":"IdentFragment","id":"0:45:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"usize"},"items":["0:320:655"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11461:61064":{"id":"2:11461:61064","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4465:61064"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeUnicode","id":"2:50339:3846","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:428:1960":{"id":"0:428:1960","crate_id":0,"name":"push_fat_arrow","span":{"filename":"src/runtime.rs","begin":[362,0],"end":[362,58]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:7049:2607":{"id":"2:7049:2607","crate_id":2,"name":"IntoIter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"I"}}},"0:140:183":{"id":"0:140:183","crate_id":0,"name":"Output","span":{"filename":"src/runtime.rs","begin":[14,4],"end":[14,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"ThereIsNoIteratorInRepetition","id":"0:137:1914","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:113":{"id":"0:113","crate_id":0,"name":null,"span":{"filename":"src/to_tokens.rs","begin":[177,0],"end":[181,1]},"visibility":{"restricted":{"parent":"0:64:1643","path":"::to_tokens"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["to_token_stream","into_token_stream"],"trait":{"name":"ToTokens","id":"0:77:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Ident","id":"21:897:2214","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:114:1643"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:2527:1427":{"id":"2:2527:1427","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48198:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:279":{"id":"0:279","crate_id":0,"name":null,"span":{"filename":"src/spanned.rs","begin":[14,0],"end":[18,1]},"visibility":{"restricted":{"parent":"0:270:1649","path":"::spanned"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"ToTokens","id":"0:77:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Spanned","id":"0:275:2351","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"generic","inner":"T"},"items":["0:281:2352"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:441:2014":{"id":"0:441:2014","crate_id":0,"name":"push_star_spanned","span":{"filename":"src/runtime.rs","begin":[368,0],"end":[368,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:830:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11460:3081":{"id":"2:11460:3081","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4468:3081"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDefault","id":"2:50330:3082","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:101:1643":{"id":"0:101:1643","crate_id":0,"name":"to_tokens","span":{"filename":"src/to_tokens.rs","begin":[108,4],"end":[112,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11449:61062":{"id":"2:11449:61062","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"self::pattern":"2:11036:2974","prim@char":"1:12300:408"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11041:2967","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11041:2967","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11056:3574","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:407:1999":{"id":"0:407:1999","crate_id":0,"name":"push_mul_eq_spanned","span":{"filename":"src/runtime.rs","begin":[351,0],"end":[351,52]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:830:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:206":{"id":"0:206","crate_id":0,"name":null,"span":{"filename":"src/runtime.rs","begin":[143,0],"end":[151,1]},"visibility":{"restricted":{"parent":"0:124:1645","path":"::__private"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"RepInterp","id":"0:349:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:208:928"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:252":{"id":"0:252","crate_id":0,"name":null,"span":{"filename":"src/runtime.rs","begin":[410,0],"end":[414,1]},"visibility":{"restricted":{"parent":"0:124:1645","path":"::__private"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IdentFragment","id":"0:45:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:8601:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IdentFragmentAdapter","id":"0:446:2213","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:254:655"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:81":{"id":"0:81","crate_id":0,"name":null,"span":{"filename":"src/to_tokens.rs","begin":[77,0],"end":[81,1]},"visibility":{"restricted":{"parent":"0:64:1643","path":"::to_tokens"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"ToTokens","id":"0:77:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["to_token_stream","into_token_stream"],"trait":{"name":"ToTokens","id":"0:77:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"T"}}},"items":["0:84:1643"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:382:1939":{"id":"0:382:1939","crate_id":0,"name":"push_div","span":{"filename":"src/runtime.rs","begin":[339,0],"end":[339,42]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:80:2259":{"id":"0:80:2259","crate_id":0,"name":"into_token_stream","span":{"filename":"src/to_tokens.rs","begin":[69,4],"end":[74,5]},"visibility":"default","docs":"Convert `self` directly into a `TokenStream` object.\n\nThis method is implicitly implemented using `to_tokens`, and acts as a\nconvenience method for consumers of the `ToTokens` trait.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:0:168-0:349:1903":{"id":"b:0:168-0:349:1903","crate_id":0,"name":null,"span":{"filename":"src/runtime.rs","begin":[79,4],"end":[79,54]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"ToTokens","id":"0:77:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["next","quote_into_iter"],"trait":{"name":"RepToTokensExt","id":"0:165:2298","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RepInterp","id":"0:349:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:167:1900":{"id":"0:167:1900","crate_id":0,"name":"quote_into_iter","span":{"filename":"src/runtime.rs","begin":[74,8],"end":[76,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}},{"kind":"resolved_path","inner":{"name":"DoesNotHaveIter","id":"0:137:1914","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:373:1986":{"id":"0:373:1986","crate_id":0,"name":"push_caret_spanned","span":{"filename":"src/runtime.rs","begin":[334,0],"end":[334,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:830:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:0:163-0:349:1903":{"id":"b:0:163-0:349:1903","crate_id":0,"name":null,"span":{"filename":"src/runtime.rs","begin":[61,4],"end":[61,45]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7156:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["quote_into_iter"],"trait":{"name":"RepIteratorExt","id":"0:161:2294","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RepInterp","id":"0:349:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:55:655":{"id":"0:55:655","crate_id":0,"name":"fmt","span":{"filename":"src/ident_fragment.rs","begin":[38,4],"end":[40,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8556:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8545:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:107":{"id":"0:107","crate_id":0,"name":null,"span":{"filename":"src/to_tokens.rs","begin":[158,0],"end":[162,1]},"visibility":{"restricted":{"parent":"0:64:1643","path":"::to_tokens"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["to_token_stream","into_token_stream"],"trait":{"name":"ToTokens","id":"0:77:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"char"},"items":["0:108:1643"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:383:1988":{"id":"0:383:1988","crate_id":0,"name":"push_div_spanned","span":{"filename":"src/runtime.rs","begin":[339,0],"end":[339,42]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:830:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:180":{"id":"0:180","crate_id":0,"name":null,"span":{"filename":"src/runtime.rs","begin":[97,4],"end":[103,5]},"visibility":{"restricted":{"parent":"0:151:1641","path":"::__private::ext"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'q","kind":{"lifetime":{"outlives":[]}}},{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RepAsIteratorExt","id":"0:170:2304","args":{"angle_bracketed":{"args":[{"lifetime":"'q"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RepAsIteratorExt","id":"0:170:2304","args":{"angle_bracketed":{"args":[{"lifetime":"'q"}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"generic","inner":"T"}}},"items":["0:184:2306","0:185:1900"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:166:928":{"id":"0:166:928","crate_id":0,"name":"next","span":{"filename":"src/runtime.rs","begin":[70,8],"end":[72,9]},"visibility":"default","docs":"Pretend to be an iterator for the purposes of `quote_into_iter`.\nThis allows repeated calls to `quote_into_iter` to continue\ncorrectly returning DoesNotHaveIter.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48054:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:111":{"id":"0:111","crate_id":0,"name":null,"span":{"filename":"src/to_tokens.rs","begin":[171,0],"end":[175,1]},"visibility":{"restricted":{"parent":"0:64:1643","path":"::to_tokens"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["to_token_stream","into_token_stream"],"trait":{"name":"ToTokens","id":"0:77:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Group","id":"21:851:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:112:1643"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:439:2013":{"id":"0:439:2013","crate_id":0,"name":"push_shr_eq_spanned","span":{"filename":"src/runtime.rs","begin":[367,0],"end":[367,56]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:830:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2528-0:137:1914":{"id":"b:2:2528-0:137:1914","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThereIsNoIteratorInRepetition","id":"0:137:1914","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2531:127","2:2532:1426"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:326:1643":{"id":"0:326:1643","crate_id":0,"name":"to_tokens","span":{"filename":"src/to_tokens.rs","begin":[139,0],"end":[156,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:431:1977":{"id":"0:431:1977","crate_id":0,"name":"push_semi_spanned","span":{"filename":"src/runtime.rs","begin":[363,0],"end":[363,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:830:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:684:2723":{"id":"5:684:2723","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:117":{"id":"0:117","crate_id":0,"name":null,"span":{"filename":"src/to_tokens.rs","begin":[189,0],"end":[193,1]},"visibility":{"restricted":{"parent":"0:64:1643","path":"::to_tokens"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["to_token_stream","into_token_stream"],"trait":{"name":"ToTokens","id":"0:77:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Literal","id":"21:902:2229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:118:1643"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:339":{"id":"0:339","crate_id":0,"name":null,"span":{"filename":"src/to_tokens.rs","begin":[139,0],"end":[156,1]},"visibility":{"restricted":{"parent":"0:64:1643","path":"::to_tokens"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["to_token_stream","into_token_stream"],"trait":{"name":"ToTokens","id":"0:77:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u64"},"items":["0:340:1643"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2662:217-0:137:1914":{"id":"a:2:2662:217-0:137:1914","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThereIsNoIteratorInRepetition","id":"0:137:1914","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:683:2525":{"id":"5:683:2525","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"0:355":{"id":"0:355","crate_id":0,"name":null,"span":{"filename":"src/runtime.rs","begin":[140,15],"end":[140,20]},"visibility":{"restricted":{"parent":"0:124:1645","path":"::__private"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2255:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2255:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RepInterp","id":"0:349:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:357:412"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:423:2006":{"id":"0:423:2006","crate_id":0,"name":"push_larrow_spanned","span":{"filename":"src/runtime.rs","begin":[359,0],"end":[359,52]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:830:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2241-0:446:2213":{"id":"b:2:2241-0:446:2213","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IdentFragmentAdapter","id":"0:446:2213","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2243:54206"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:123:2259":{"id":"0:123:2259","crate_id":0,"name":"into_token_stream","span":{"filename":"src/to_tokens.rs","begin":[206,4],"end":[208,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7736:2546-0:137:1914":{"id":"a:2:7736:2546-0:137:1914","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7736:2546","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThereIsNoIteratorInRepetition","id":"0:137:1914","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:150:359":{"id":"0:150:359","crate_id":0,"name":"bitor","span":{"filename":"src/runtime.rs","begin":[36,4],"end":[38,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["_rhs",{"kind":"resolved_path","inner":{"name":"HasIterator","id":"0:135:1915","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"HasIterator","id":"0:135:1915","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:54:1884":{"id":"0:54:1884","crate_id":0,"name":"span","span":{"filename":"src/ident_fragment.rs","begin":[34,4],"end":[36,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48054:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Span","id":"21:830:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2238-0:446:2213":{"id":"b:2:2238-0:446:2213","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IdentFragmentAdapter","id":"0:446:2213","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2240:2215"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:13:2136":{"id":"0:13:2136","crate_id":0,"name":"append_all","span":{"filename":"src/ext.rs","begin":[33,4],"end":[36,26]},"visibility":"default","docs":"For use by `ToTokens` implementations.\n\n```\n# use quote::{quote, TokenStreamExt, ToTokens};\n# use proc_macro2::TokenStream;\n#\nstruct X;\n\nimpl ToTokens for X {\n    fn to_tokens(&self, tokens: &mut TokenStream) {\n        tokens.append_all(&[true, false]);\n    }\n}\n\nlet tokens = quote!(#X);\nassert_eq!(tokens.to_string(), \"true false\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["iter",{"kind":"generic","inner":"I"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:7042:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:7042:149","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"ToTokens","id":"0:77:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:444:1967":{"id":"0:444:1967","crate_id":0,"name":"push_sub_eq","span":{"filename":"src/runtime.rs","begin":[370,0],"end":[370,52]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11351:57026":{"id":"2:11351:57026","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9138:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9138:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"b:2:7046-0:349:1903":{"id":"b:2:7046-0:349:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7156:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7042:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RepInterp","id":"0:349:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:7048:2138","2:7049:2607","2:7050:762"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:223:1918":{"id":"0:223:1918","crate_id":0,"name":"push_ident","span":{"filename":"src/runtime.rs","begin":[209,0],"end":[212,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:394:1944":{"id":"0:394:1944","crate_id":0,"name":"push_eq","span":{"filename":"src/runtime.rs","begin":[345,0],"end":[345,40]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:264":{"id":"0:264","crate_id":0,"name":null,"span":{"filename":"src/runtime.rs","begin":[434,0],"end":[438,1]},"visibility":{"restricted":{"parent":"0:124:1645","path":"::__private"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IdentFragment","id":"0:45:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"fmt::Binary","id":"2:8605:2350","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Binary","id":"2:8605:2350","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IdentFragmentAdapter","id":"0:446:2213","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:266:655"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:316:655":{"id":"0:316:655","crate_id":0,"name":"fmt","span":{"filename":"src/ident_fragment.rs","begin":[86,0],"end":[86,55]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8556:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8545:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:343":{"id":"0:343","crate_id":0,"name":null,"span":{"filename":"src/to_tokens.rs","begin":[139,0],"end":[156,1]},"visibility":{"restricted":{"parent":"0:64:1643","path":"::to_tokens"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["to_token_stream","into_token_stream"],"trait":{"name":"ToTokens","id":"0:77:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"usize"},"items":["0:344:1643"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:685:2724":{"id":"5:685:2724","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["target",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2726:2541-0:135:1915":{"id":"a:2:2726:2541-0:135:1915","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2726:2541","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"HasIterator","id":"0:135:1915","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:162:1900":{"id":"0:162:1900","crate_id":0,"name":"quote_into_iter","span":{"filename":"src/runtime.rs","begin":[56,8],"end":[58,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"tuple","inner":[{"kind":"generic","inner":"Self"},{"kind":"resolved_path","inner":{"name":"HasIter","id":"0:135:1915","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:263:655":{"id":"0:263:655","crate_id":0,"name":"fmt","span":{"filename":"src/runtime.rs","begin":[429,4],"end":[431,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8556:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8545:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:122:1643":{"id":"0:122:1643","crate_id":0,"name":"to_tokens","span":{"filename":"src/to_tokens.rs","begin":[202,4],"end":[204,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:306:655":{"id":"0:306:655","crate_id":0,"name":"fmt","span":{"filename":"src/ident_fragment.rs","begin":[85,0],"end":[85,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8556:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8545:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:393:1992":{"id":"0:393:1992","crate_id":0,"name":"push_dot_dot_eq_spanned","span":{"filename":"src/runtime.rs","begin":[344,0],"end":[344,64]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:830:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:34:2123":{"id":"0:34:2123","crate_id":0,"name":"Sealed","span":{"filename":"src/ext.rs","begin":[107,4],"end":[107,23]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:2531:127":{"id":"2:2531:127","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Infallible","id":"2:39298:3156","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:378:1919":{"id":"0:378:1919","crate_id":0,"name":"push_colon2","span":{"filename":"src/runtime.rs","begin":[337,0],"end":[337,52]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2523-0:135:1915":{"id":"b:2:2523-0:135:1915","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2493:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"HasIterator","id":"0:135:1915","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2526:127","2:2527:1427"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:48":{"id":"0:48","crate_id":0,"name":null,"span":{"filename":"src/ident_fragment.rs","begin":[23,0],"end":[31,1]},"visibility":{"restricted":{"parent":"0:39:1642","path":"::ident_fragment"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IdentFragment","id":"0:45:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["span"],"trait":{"name":"IdentFragment","id":"0:45:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"items":["0:50:1884","0:51:655"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:15:2141":{"id":"0:15:2141","crate_id":0,"name":"append_separated","span":{"filename":"src/ext.rs","begin":[42,4],"end":[46,20]},"visibility":"default","docs":"For use by `ToTokens` implementations.\n\nAppends all of the items in the iterator `I`, separated by the tokens\n`U`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["iter",{"kind":"generic","inner":"I"}],["op",{"kind":"generic","inner":"U"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:7042:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:7042:149","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"ToTokens","id":"0:77:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"ToTokens","id":"0:77:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:11427:61055":{"id":"2:11427:61055","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:132":{"id":"0:132","crate_id":0,"name":null,"span":{"filename":"src/runtime.rs","begin":[6,0],"end":[6,29]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"core::option::Option","name":"Option","id":"2:48054:178","glob":false}},"b:2:2238-0:135:1915":{"id":"b:2:2238-0:135:1915","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"HasIterator","id":"0:135:1915","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2240:2215"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:149:183":{"id":"0:149:183","crate_id":0,"name":"Output","span":{"filename":"src/runtime.rs","begin":[35,4],"end":[35,30]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"HasIterator","id":"0:135:1915","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:21":{"id":"0:21","crate_id":0,"name":null,"span":{"filename":"src/ext.rs","begin":[59,0],"end":[102,1]},"visibility":{"restricted":{"parent":"0:4:1641","path":"::ext"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"TokenStreamExt","id":"0:10:1646","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:22:2126","0:24:2136","0:26:2141","0:29:2145"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2241-0:349:1903":{"id":"b:2:2241-0:349:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RepInterp","id":"0:349:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2243:54206"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2726:2541-0:349:1903":{"id":"a:2:2726:2541-0:349:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2726:2541","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2726:2541","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RepInterp","id":"0:349:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:430:1928":{"id":"0:430:1928","crate_id":0,"name":"push_semi","span":{"filename":"src/runtime.rs","begin":[363,0],"end":[363,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11430:61057":{"id":"2:11430:61057","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:0:279-0:349:1903":{"id":"b:0:279-0:349:1903","crate_id":0,"name":null,"span":{"filename":"src/spanned.rs","begin":[14,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"ToTokens","id":"0:77:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Spanned","id":"0:275:2351","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RepInterp","id":"0:349:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:281:2352"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:421:2005":{"id":"0:421:2005","crate_id":0,"name":"push_rarrow_spanned","span":{"filename":"src/runtime.rs","begin":[358,0],"end":[358,52]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:830:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:172:2306":{"id":"0:172:2306","crate_id":0,"name":"Iter","span":{"filename":"src/runtime.rs","begin":[84,8],"end":[84,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7156:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}},"0:59":{"id":"0:59","crate_id":0,"name":null,"span":{"filename":"src/ident_fragment.rs","begin":[58,0],"end":[69,1]},"visibility":{"restricted":{"parent":"0:39:1642","path":"::ident_fragment"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"IdentFragment","id":"0:45:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ToOwned","id":"5:677:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["span"],"trait":{"name":"IdentFragment","id":"0:45:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:686:110","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:61:1884","0:62:655"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:438:1964":{"id":"0:438:1964","crate_id":0,"name":"push_shr_eq","span":{"filename":"src/runtime.rs","begin":[367,0],"end":[367,56]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2516:2149":{"id":"2:2516:2149","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2490:132"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11361:2973":{"id":"2:11361:2973","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"2:50008:3218","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5105:61696":{"id":"5:5105:61696","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:286:2261","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:6739:2554","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Box","id":"5:286:2261","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:6739:2554","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:328:1643":{"id":"0:328:1643","crate_id":0,"name":"to_tokens","span":{"filename":"src/to_tokens.rs","begin":[139,0],"end":[156,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:61:1884":{"id":"0:61:1884","crate_id":0,"name":"span","span":{"filename":"src/ident_fragment.rs","begin":[62,4],"end":[64,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48054:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Span","id":"21:830:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:318:655":{"id":"0:318:655","crate_id":0,"name":"fmt","span":{"filename":"src/ident_fragment.rs","begin":[86,0],"end":[86,55]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8556:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8545:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:450":{"id":"0:450","crate_id":0,"name":null,"span":{"filename":"src/runtime.rs","begin":[401,9],"end":[401,13]},"visibility":{"restricted":{"parent":"0:124:1645","path":"::__private"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::marker::Copy","id":"2:2674:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"IdentFragment","id":"0:45:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2674:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IdentFragmentAdapter","id":"0:446:2213","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:359:1979":{"id":"0:359:1979","crate_id":0,"name":"push_add_spanned","span":{"filename":"src/runtime.rs","begin":[327,0],"end":[327,42]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:830:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5109:61697":{"id":"5:5109:61697","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:6994:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6994:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11041:2967","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11437:54715":{"id":"2:11437:54715","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12300:408","self::pattern":"2:11036:2974"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48054:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11041:2967","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:317":{"id":"0:317","crate_id":0,"name":null,"span":{"filename":"src/ident_fragment.rs","begin":[86,0],"end":[86,55]},"visibility":{"restricted":{"parent":"0:39:1642","path":"::ident_fragment"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["span"],"trait":{"name":"IdentFragment","id":"0:45:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u128"},"items":["0:318:655"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2241-0:137:1914":{"id":"b:2:2241-0:137:1914","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThereIsNoIteratorInRepetition","id":"0:137:1914","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2243:54206"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:213":{"id":"0:213","crate_id":0,"name":null,"span":{"filename":"src/runtime.rs","begin":[161,0],"end":[165,1]},"visibility":{"restricted":{"parent":"0:124:1645","path":"::__private"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ToTokens","id":"0:77:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["to_token_stream","into_token_stream"],"trait":{"name":"ToTokens","id":"0:77:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RepInterp","id":"0:349:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:215:1643"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:425:2007":{"id":"0:425:2007","crate_id":0,"name":"push_rem_spanned","span":{"filename":"src/runtime.rs","begin":[360,0],"end":[360,42]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:830:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:390:1942":{"id":"0:390:1942","crate_id":0,"name":"push_dot3","span":{"filename":"src/runtime.rs","begin":[343,0],"end":[343,52]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3321-0:137:1914":{"id":"b:2:3321-0:137:1914","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3319:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThereIsNoIteratorInRepetition","id":"0:137:1914","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3323:1440"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:312:655":{"id":"0:312:655","crate_id":0,"name":"fmt","span":{"filename":"src/ident_fragment.rs","begin":[86,0],"end":[86,55]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8556:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8545:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2662:217-0:135:1915":{"id":"a:2:2662:217-0:135:1915","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"HasIterator","id":"0:135:1915","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:338:1643":{"id":"0:338:1643","crate_id":0,"name":"to_tokens","span":{"filename":"src/to_tokens.rs","begin":[139,0],"end":[156,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:681-0:349:1903":{"id":"b:5:681-0:349:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2255:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:677:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RepInterp","id":"0:349:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["5:683:2525","5:684:2723","5:685:2724"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:10:1646":{"id":"0:10:1646","crate_id":0,"name":"TokenStreamExt","span":{"filename":"src/ext.rs","begin":[8,0],"end":[57,1]},"visibility":"public","docs":"TokenStream extension trait with methods for appending tokens.\n\nThis trait is sealed and cannot be implemented outside of the `quote` crate.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:11:2126","0:13:2136","0:15:2141","0:18:2145"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"private::Sealed","id":"0:34:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:21"]}},"2:11411:2479":{"id":"2:11411:2479","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"prim@char":"1:12300:408","str::matches":"2:11411:2479","self::pattern":"2:11036:2974","`DoubleEndedIterator`":"2:7079:120"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"2:50226:3839","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11041:2967","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:372:1937":{"id":"0:372:1937","crate_id":0,"name":"push_caret","span":{"filename":"src/runtime.rs","begin":[334,0],"end":[334,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2526:127":{"id":"2:2526:127","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}},"0:371:1985":{"id":"0:371:1985","crate_id":0,"name":"push_bang_spanned","span":{"filename":"src/runtime.rs","begin":[333,0],"end":[333,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:830:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11349:57025":{"id":"2:11349:57025","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:48056:176"},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48054:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9138:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9138:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:381:1975":{"id":"0:381:1975","crate_id":0,"name":"push_comma_spanned","span":{"filename":"src/runtime.rs","begin":[338,0],"end":[338,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:830:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:163":{"id":"0:163","crate_id":0,"name":null,"span":{"filename":"src/runtime.rs","begin":[61,4],"end":[61,45]},"visibility":{"restricted":{"parent":"0:151:1641","path":"::__private::ext"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7156:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["quote_into_iter"],"trait":{"name":"RepIteratorExt","id":"0:161:2294","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"generic","inner":"T"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:400:1947":{"id":"0:400:1947","crate_id":0,"name":"push_gt","span":{"filename":"src/runtime.rs","begin":[348,0],"end":[348,40]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:208:928":{"id":"0:208:928","crate_id":0,"name":"next","span":{"filename":"src/runtime.rs","begin":[148,4],"end":[150,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48054:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:7048:2138":{"id":"2:7048:2138","crate_id":2,"name":"Item","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:7156:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:395:1993":{"id":"0:395:1993","crate_id":0,"name":"push_eq_spanned","span":{"filename":"src/runtime.rs","begin":[345,0],"end":[345,40]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:830:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:185:1900":{"id":"0:185:1900","crate_id":0,"name":"quote_into_iter","span":{"filename":"src/runtime.rs","begin":[100,8],"end":[102,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'q","mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"qualified_path","inner":{"name":"Iter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:170:2304","args":null}}},{"kind":"resolved_path","inner":{"name":"HasIter","id":"0:135:1915","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:92:1643":{"id":"0:92:1643","crate_id":0,"name":"to_tokens","span":{"filename":"src/to_tokens.rs","begin":[90,4],"end":[92,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:144:359":{"id":"0:144:359","crate_id":0,"name":"bitor","span":{"filename":"src/runtime.rs","begin":[22,4],"end":[24,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["_rhs",{"kind":"resolved_path","inner":{"name":"ThereIsNoIteratorInRepetition","id":"0:137:1914","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"HasIterator","id":"0:135:1915","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:391:1991":{"id":"0:391:1991","crate_id":0,"name":"push_dot3_spanned","span":{"filename":"src/runtime.rs","begin":[343,0],"end":[343,52]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:830:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:405:1998":{"id":"0:405:1998","crate_id":0,"name":"push_lt_spanned","span":{"filename":"src/runtime.rs","begin":[350,0],"end":[350,40]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:830:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:246:2018":{"id":"0:246:2018","crate_id":0,"name":"push_underscore_spanned","span":{"filename":"src/runtime.rs","begin":[376,0],"end":[378,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:830:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:281:2352":{"id":"0:281:2352","crate_id":0,"name":"__span","span":{"filename":"src/spanned.rs","begin":[15,4],"end":[17,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Span","id":"21:830:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:267":{"id":"0:267","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[110,0],"end":[110,35]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::ext::TokenStreamExt","name":"TokenStreamExt","id":"0:10:1646","glob":false}},"0:105:1643":{"id":"0:105:1643","crate_id":0,"name":"to_tokens","span":{"filename":"src/to_tokens.rs","begin":[122,4],"end":[124,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11360:3602":{"id":"2:11360:3602","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:12300:408"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CharIndices","id":"2:49998:3828","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:349:1903":{"id":"0:349:1903","crate_id":0,"name":"RepInterp","span":{"filename":"src/runtime.rs","begin":[141,0],"end":[141,31]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":["0:352:1553"]},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:206","a:2:2676:225-0:349:1903","a:2:7736:2546-0:349:1903","a:2:2662:217-0:349:1903","a:2:2726:2541-0:349:1903","a:2:7735:2547-0:349:1903","b:0:163-0:349:1903","b:0:279-0:349:1903","b:0:168-0:349:1903","b:2:2523-0:349:1903","b:2:2513-0:349:1903","b:2:7046-0:349:1903","b:2:2241-0:349:1903","b:2:2517-0:349:1903","b:2:2528-0:349:1903","b:2:3321-0:349:1903","b:2:2238-0:349:1903","b:5:681-0:349:1903","0:201","0:353","0:355","0:209","0:213"]}},"2:11373:2357":{"id":"2:11373:2357","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:12300:408","self::pattern":"2:11036:2974"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11041:2967","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11041:2967","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11056:3574","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:403:1997":{"id":"0:403:1997","crate_id":0,"name":"push_le_spanned","span":{"filename":"src/runtime.rs","begin":[349,0],"end":[349,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:830:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7736:2546-0:135:1915":{"id":"a:2:7736:2546-0:135:1915","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7736:2546","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"HasIterator","id":"0:135:1915","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:51:655":{"id":"0:51:655","crate_id":0,"name":"fmt","span":{"filename":"src/ident_fragment.rs","begin":[28,4],"end":[30,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8556:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8545:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:348:1643":{"id":"0:348:1643","crate_id":0,"name":"to_tokens","span":{"filename":"src/to_tokens.rs","begin":[139,0],"end":[156,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:332:1643":{"id":"0:332:1643","crate_id":0,"name":"to_tokens","span":{"filename":"src/to_tokens.rs","begin":[139,0],"end":[156,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:365:1982":{"id":"0:365:1982","crate_id":0,"name":"push_and_and_spanned","span":{"filename":"src/runtime.rs","begin":[330,0],"end":[330,54]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:830:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11338:61040":{"id":"2:11338:61040","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:432:1961":{"id":"0:432:1961","crate_id":0,"name":"push_shl","span":{"filename":"src/runtime.rs","begin":[364,0],"end":[364,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11366:59154":{"id":"2:11366:59154","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncodeUtf16","id":"2:50314:3844","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:427:2008":{"id":"0:427:2008","crate_id":0,"name":"push_rem_eq_spanned","span":{"filename":"src/runtime.rs","begin":[361,0],"end":[361,52]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:830:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11355:61043":{"id":"2:11355:61043","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:12306:1352","str::slice_mut_unchecked":"2:11356:61044","crate::ops::Index":"2:2987:2590"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:366:1934":{"id":"0:366:1934","crate_id":0,"name":"push_and_eq","span":{"filename":"src/runtime.rs","begin":[331,0],"end":[331,52]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2517-0:137:1914":{"id":"b:2:2517-0:137:1914","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2490:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThereIsNoIteratorInRepetition","id":"0:137:1914","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2519:673"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:314:655":{"id":"0:314:655","crate_id":0,"name":"fmt","span":{"filename":"src/ident_fragment.rs","begin":[86,0],"end":[86,55]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8556:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8545:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:142":{"id":"0:142","crate_id":0,"name":null,"span":{"filename":"src/runtime.rs","begin":[20,0],"end":[25,1]},"visibility":{"restricted":{"parent":"0:124:1645","path":"::__private"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitOr","id":"2:2817:2282","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ThereIsNoIteratorInRepetition","id":"0:137:1914","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"HasIterator","id":"0:135:1915","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:143:183","0:144:359"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:5112:61698":{"id":"5:5112:61698","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:6994:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6994:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:0:1072":{"id":"0:0:1072","crate_id":0,"name":"quote","span":{"filename":"src/lib.rs","begin":[1,0],"end":[1434,1]},"visibility":"public","docs":"[![github]](https://github.com/dtolnay/quote)&ensp;[![crates-io]](https://crates.io/crates/quote)&ensp;[![docs-rs]](https://docs.rs/quote)\n\n[github]: https://img.shields.io/badge/github-8da0cb?style=for-the-badge&labelColor=555555&logo=github\n[crates-io]: https://img.shields.io/badge/crates.io-fc8d62?style=for-the-badge&labelColor=555555&logo=rust\n[docs-rs]: https://img.shields.io/badge/docs.rs-66c2a5?style=for-the-badge&labelColor=555555&logo=docs.rs\n\n<br>\n\nThis crate provides the [`quote!`] macro for turning Rust syntax tree data\nstructures into tokens of source code.\n\n[`quote!`]: macro.quote.html\n\nProcedural macros in Rust receive a stream of tokens as input, execute\narbitrary Rust code to determine how to manipulate those tokens, and produce\na stream of tokens to hand back to the compiler to compile into the caller's\ncrate. Quasi-quoting is a solution to one piece of that &mdash; producing\ntokens to return to the compiler.\n\nThe idea of quasi-quoting is that we write *code* that we treat as *data*.\nWithin the `quote!` macro, we can write what looks like code to our text\neditor or IDE. We get all the benefits of the editor's brace matching,\nsyntax highlighting, indentation, and maybe autocompletion. But rather than\ncompiling that as code into the current crate, we can treat it as data, pass\nit around, mutate it, and eventually hand it back to the compiler as tokens\nto compile into the macro caller's crate.\n\nThis crate is motivated by the procedural macro use case, but is a\ngeneral-purpose Rust quasi-quoting library and is not specific to procedural\nmacros.\n\n```toml\n[dependencies]\nquote = \"1.0\"\n```\n\n<br>\n\n# Example\n\nThe following quasi-quoted block of code is something you might find in [a]\nprocedural macro having to do with data structure serialization. The `#var`\nsyntax performs interpolation of runtime variables into the quoted tokens.\nCheck out the documentation of the [`quote!`] macro for more detail about\nthe syntax. See also the [`quote_spanned!`] macro which is important for\nimplementing hygienic procedural macros.\n\n[a]: https://serde.rs/\n[`quote_spanned!`]: macro.quote_spanned.html\n\n```\n# use quote::quote;\n#\n# let generics = \"\";\n# let where_clause = \"\";\n# let field_ty = \"\";\n# let item_ty = \"\";\n# let path = \"\";\n# let value = \"\";\n#\nlet tokens = quote! {\n    struct SerializeWith #generics #where_clause {\n        value: &'a #field_ty,\n        phantom: core::marker::PhantomData<#item_ty>,\n    }\n\n    impl #generics serde::Serialize for SerializeWith #generics #where_clause {\n        fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>\n        where\n            S: serde::Serializer,\n        {\n            #path(self.value, serializer)\n        }\n    }\n\n    SerializeWith {\n        value: #value,\n        phantom: core::marker::PhantomData::<#item_ty>,\n    }\n};\n```","links":{},"attrs":["#![doc(html_root_url = \"https://docs.rs/quote/1.0.23\")]","#![allow(clippy :: doc_markdown, clippy :: missing_errors_doc, clippy ::\nmissing_panics_doc, clippy :: module_name_repetitions, clippy ::\nwrong_self_convention,)]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:267","0:268","0:269","0:37:2207","0:286:1072","0:287:1883"],"is_stripped":false}},"0:392:1943":{"id":"0:392:1943","crate_id":0,"name":"push_dot_dot_eq","span":{"filename":"src/runtime.rs","begin":[344,0],"end":[344,64]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11334":{"id":"2:11334","crate_id":2,"name":null,"span":null,"visibility":{"restricted":{"parent":"2:10599:1352","path":"::str"}},"docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["2:11335:789","2:11336:2666","2:11337:61039","2:11338:61040","2:11340:61041","2:11343:56905","2:11344:61042","2:11345:309","2:11346:8166","2:11347:8208","2:11349:57025","2:11351:57026","2:11353:57027","2:11355:61043","2:11356:61044","2:11357:57048","2:11358:57049","2:11359:3864","2:11360:3602","2:11361:2973","2:11362:59129","2:11363:59144","2:11364:4351","2:11365:61045","2:11366:59154","2:11367:8207","2:11370:2225","2:11373:2357","2:11376:2700","2:11380:2665","2:11384:57056","2:11387:57058","2:11390:57060","2:11393:61046","2:11396:61047","2:11399:57062","2:11402:57064","2:11405:61048","2:11408:61049","2:11411:2479","2:11414:61050","2:11417:61051","2:11420:61052","2:11423:61053","2:11425:61054","2:11427:61055","2:11429:61056","2:11430:61057","2:11431:61058","2:11434:61059","2:11437:54715","2:11440:57066","2:11443:61060","2:11446:61061","2:11449:61062","2:11452:1970","2:11454:4014","2:11455:54238","2:11456:54239","2:11457:54240","2:11458:61063","2:11460:3081","2:11461:61064"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:347":{"id":"0:347","crate_id":0,"name":null,"span":{"filename":"src/to_tokens.rs","begin":[139,0],"end":[156,1]},"visibility":{"restricted":{"parent":"0:64:1643","path":"::to_tokens"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["to_token_stream","into_token_stream"],"trait":{"name":"ToTokens","id":"0:77:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"f64"},"items":["0:348:1643"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:119":{"id":"0:119","crate_id":0,"name":null,"span":{"filename":"src/to_tokens.rs","begin":[195,0],"end":[199,1]},"visibility":{"restricted":{"parent":"0:64:1643","path":"::to_tokens"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["to_token_stream","into_token_stream"],"trait":{"name":"ToTokens","id":"0:77:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TokenTree","id":"21:836:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:120:1643"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11431:61058":{"id":"2:11431:61058","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:12300:408","self::pattern":"2:11036:2974"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11041:2967","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11041:2967","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:11061:3575","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:254:655":{"id":"0:254:655","crate_id":0,"name":"fmt","span":{"filename":"src/runtime.rs","begin":[411,4],"end":[413,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8556:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8545:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:303":{"id":"0:303","crate_id":0,"name":null,"span":{"filename":"src/ident_fragment.rs","begin":[85,0],"end":[85,48]},"visibility":{"restricted":{"parent":"0:39:1642","path":"::ident_fragment"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["span"],"trait":{"name":"IdentFragment","id":"0:45:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"str"},"items":["0:304:655"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:276:2352":{"id":"0:276:2352","crate_id":0,"name":"__span","span":{"filename":"src/spanned.rs","begin":[5,4],"end":[5,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Span","id":"21:830:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:217:1973":{"id":"0:217:1973","crate_id":0,"name":"push_group_spanned","span":{"filename":"src/runtime.rs","begin":[171,0],"end":[180,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:830:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["delimiter",{"kind":"resolved_path","inner":{"name":"Delimiter","id":"21:855:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["inner",{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:380:1926":{"id":"0:380:1926","crate_id":0,"name":"push_comma","span":{"filename":"src/runtime.rs","begin":[338,0],"end":[338,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:29:2145":{"id":"0:29:2145","crate_id":0,"name":"append_terminated","span":{"filename":"src/ext.rs","begin":[91,4],"end":[101,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["iter",{"kind":"generic","inner":"I"}],["term",{"kind":"generic","inner":"U"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:7042:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:7042:149","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"ToTokens","id":"0:77:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"ToTokens","id":"0:77:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:255":{"id":"0:255","crate_id":0,"name":null,"span":{"filename":"src/runtime.rs","begin":[416,0],"end":[420,1]},"visibility":{"restricted":{"parent":"0:124:1645","path":"::__private"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IdentFragment","id":"0:45:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"fmt::Octal","id":"2:8603:2347","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Octal","id":"2:8603:2347","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IdentFragmentAdapter","id":"0:446:2213","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:257:655"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11455:54238":{"id":"2:11455:54238","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:141:359":{"id":"0:141:359","crate_id":0,"name":"bitor","span":{"filename":"src/runtime.rs","begin":[15,4],"end":[17,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["_rhs",{"kind":"resolved_path","inner":{"name":"ThereIsNoIteratorInRepetition","id":"0:137:1914","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"ThereIsNoIteratorInRepetition","id":"0:137:1914","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:360:1931":{"id":"0:360:1931","crate_id":0,"name":"push_add_eq","span":{"filename":"src/runtime.rs","begin":[328,0],"end":[328,52]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:389:1990":{"id":"0:389:1990","crate_id":0,"name":"push_dot2_spanned","span":{"filename":"src/runtime.rs","begin":[342,0],"end":[342,48]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:830:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:402:1948":{"id":"0:402:1948","crate_id":0,"name":"push_le","span":{"filename":"src/runtime.rs","begin":[349,0],"end":[349,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:408:1951":{"id":"0:408:1951","crate_id":0,"name":"push_ne","span":{"filename":"src/runtime.rs","begin":[352,0],"end":[352,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:352:1553":{"id":"0:352:1553","crate_id":0,"name":"0","span":{"filename":"src/runtime.rs","begin":[141,24],"end":[141,29]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"T"}},"0:341":{"id":"0:341","crate_id":0,"name":null,"span":{"filename":"src/to_tokens.rs","begin":[139,0],"end":[156,1]},"visibility":{"restricted":{"parent":"0:64:1643","path":"::to_tokens"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["to_token_stream","into_token_stream"],"trait":{"name":"ToTokens","id":"0:77:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u128"},"items":["0:342:1643"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2517-0:135:1915":{"id":"b:2:2517-0:135:1915","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2490:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"HasIterator","id":"0:135:1915","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2519:673"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:58:655":{"id":"0:58:655","crate_id":0,"name":"fmt","span":{"filename":"src/ident_fragment.rs","begin":[48,4],"end":[55,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8556:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8545:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:411:2001":{"id":"0:411:2001","crate_id":0,"name":"push_or_spanned","span":{"filename":"src/runtime.rs","begin":[353,0],"end":[353,40]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:830:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:37:2207":{"id":"0:37:2207","crate_id":0,"name":"format_ident","span":{"filename":"src/format.rs","begin":[111,0],"end":[125,1]},"visibility":"public","docs":"Formatting macro for constructing `Ident`s.\n\n<br>\n\n# Syntax\n\nSyntax is copied from the [`format!`] macro, supporting both positional and\nnamed arguments.\n\nOnly a limited set of formatting traits are supported. The current mapping\nof format types to traits is:\n\n* `{}` ⇒ [`IdentFragment`]\n* `{:o}` ⇒ [`Octal`](std::fmt::Octal)\n* `{:x}` ⇒ [`LowerHex`](std::fmt::LowerHex)\n* `{:X}` ⇒ [`UpperHex`](std::fmt::UpperHex)\n* `{:b}` ⇒ [`Binary`](std::fmt::Binary)\n\nSee [`std::fmt`] for more information.\n\n<br>\n\n# IdentFragment\n\nUnlike `format!`, this macro uses the [`IdentFragment`] formatting trait by\ndefault. This trait is like `Display`, with a few differences:\n\n* `IdentFragment` is only implemented for a limited set of types, such as\n   unsigned integers and strings.\n* [`Ident`] arguments will have their `r#` prefixes stripped, if present.\n\n[`IdentFragment`]: crate::IdentFragment\n[`Ident`]: proc_macro2::Ident\n\n<br>\n\n# Hygiene\n\nThe [`Span`] of the first `Ident` argument is used as the span of the final\nidentifier, falling back to [`Span::call_site`] when no identifiers are\nprovided.\n\n```\n# use quote::format_ident;\n# let ident = format_ident!(\"Ident\");\n// If `ident` is an Ident, the span of `my_ident` will be inherited from it.\nlet my_ident = format_ident!(\"My{}{}\", ident, \"IsCool\");\nassert_eq!(my_ident, \"MyIdentIsCool\");\n```\n\nAlternatively, the span can be overridden by passing the `span` named\nargument.\n\n```\n# use quote::format_ident;\n# const IGNORE_TOKENS: &'static str = stringify! {\nlet my_span = /* ... */;\n# };\n# let my_span = proc_macro2::Span::call_site();\nformat_ident!(\"MyIdent\", span = my_span);\n```\n\n[`Span`]: proc_macro2::Span\n[`Span::call_site`]: proc_macro2::Span::call_site\n\n<p><br></p>\n\n# Panics\n\nThis method will panic if the resulting formatted string is not a valid\nidentifier.\n\n<br>\n\n# Examples\n\nComposing raw and non-raw identifiers:\n```\n# use quote::format_ident;\nlet my_ident = format_ident!(\"My{}\", \"Ident\");\nassert_eq!(my_ident, \"MyIdent\");\n\nlet raw = format_ident!(\"r#Raw\");\nassert_eq!(raw, \"r#Raw\");\n\nlet my_ident_raw = format_ident!(\"{}Is{}\", my_ident, raw);\nassert_eq!(my_ident_raw, \"MyIdentIsRaw\");\n```\n\nInteger formatting options:\n```\n# use quote::format_ident;\nlet num: u32 = 10;\n\nlet decimal = format_ident!(\"Id_{}\", num);\nassert_eq!(decimal, \"Id_10\");\n\nlet octal = format_ident!(\"Id_{:o}\", num);\nassert_eq!(octal, \"Id_12\");\n\nlet binary = format_ident!(\"Id_{:b}\", num);\nassert_eq!(binary, \"Id_1010\");\n\nlet lower_hex = format_ident!(\"Id_{:x}\", num);\nassert_eq!(lower_hex, \"Id_a\");\n\nlet upper_hex = format_ident!(\"Id_{:X}\", num);\nassert_eq!(upper_hex, \"Id_A\");\n```","links":{"std::fmt::LowerHex":"2:8607:2348","std::fmt::Octal":"2:8603:2347","std::fmt::UpperHex":"2:8609:2349","std::fmt::Binary":"2:8605:2350","`format!`":"5:6:664","proc_macro2::Ident":"21:897:2214","proc_macro2::Span":"21:830:1885","proc_macro2::Span::call_site":"21:528:2280","crate::IdentFragment":"0:45:1647","`std::fmt`":"5:4439:655"},"attrs":["#[macro_export]"],"deprecation":null,"kind":"macro","inner":"macro_rules! format_ident {\n    ($fmt:expr) => { ... };\n    ($fmt:expr, $($rest:tt)*) => { ... };\n}"},"2:11420:61052":{"id":"2:11420:61052","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"prim@char":"1:12300:408","self::pattern":"2:11036:2974","`DoubleEndedIterator`":"2:7079:120","str::match_indices":"2:11417:61051"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatchIndices","id":"2:50190:3837","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11041:2967","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11041:2967","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11056:3574","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:195:1900":{"id":"0:195:1900","crate_id":0,"name":"quote_into_iter","span":{"filename":"src/runtime.rs","begin":[116,8],"end":[118,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'q","mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"qualified_path","inner":{"name":"Iter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:170:2304","args":null}}},{"kind":"resolved_path","inner":{"name":"HasIter","id":"0:135:1915","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:204:2306":{"id":"0:204:2306","crate_id":0,"name":"Iter","span":{"filename":"src/runtime.rs","begin":[130,8],"end":[130,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Iter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"RepAsIteratorExt","id":"0:170:2304","args":{"angle_bracketed":{"args":[{"lifetime":"'q"}],"bindings":[]}}}}}}},"0:385:1989":{"id":"0:385:1989","crate_id":0,"name":"push_div_eq_spanned","span":{"filename":"src/runtime.rs","begin":[340,0],"end":[340,52]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:830:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:134":{"id":"0:134","crate_id":0,"name":null,"span":{"filename":"src/runtime.rs","begin":[8,0],"end":[8,20]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"std::format","name":"format","id":"5:6:664","glob":false}},"0:337":{"id":"0:337","crate_id":0,"name":null,"span":{"filename":"src/to_tokens.rs","begin":[139,0],"end":[156,1]},"visibility":{"restricted":{"parent":"0:64:1643","path":"::to_tokens"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["to_token_stream","into_token_stream"],"trait":{"name":"ToTokens","id":"0:77:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u32"},"items":["0:338:1643"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11346:8166":{"id":"2:11346:8166","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12317:1448"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:257:655":{"id":"0:257:655","crate_id":0,"name":"fmt","span":{"filename":"src/runtime.rs","begin":[417,4],"end":[419,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8556:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8545:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:277":{"id":"0:277","crate_id":0,"name":null,"span":{"filename":"src/spanned.rs","begin":[8,0],"end":[12,1]},"visibility":{"restricted":{"parent":"0:270:1649","path":"::spanned"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Spanned","id":"0:275:2351","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Span","id":"21:830:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:278:2352"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:7735:2547-0:349:1903":{"id":"a:2:7735:2547-0:349:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:7735:2547","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7735:2547","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RepInterp","id":"0:349:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:321":{"id":"0:321","crate_id":0,"name":null,"span":{"filename":"src/to_tokens.rs","begin":[139,0],"end":[156,1]},"visibility":{"restricted":{"parent":"0:64:1643","path":"::to_tokens"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["to_token_stream","into_token_stream"],"trait":{"name":"ToTokens","id":"0:77:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"i8"},"items":["0:322:1643"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:261":{"id":"0:261","crate_id":0,"name":null,"span":{"filename":"src/runtime.rs","begin":[428,0],"end":[432,1]},"visibility":{"restricted":{"parent":"0:124:1645","path":"::__private"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IdentFragment","id":"0:45:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"fmt::UpperHex","id":"2:8609:2349","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UpperHex","id":"2:8609:2349","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IdentFragmentAdapter","id":"0:446:2213","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:263:655"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:88:1643":{"id":"0:88:1643","crate_id":0,"name":"to_tokens","span":{"filename":"src/to_tokens.rs","begin":[84,4],"end":[86,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5123:54236":{"id":"5:5123:54236","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:11456:54239"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6994:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:331":{"id":"0:331","crate_id":0,"name":null,"span":{"filename":"src/to_tokens.rs","begin":[139,0],"end":[156,1]},"visibility":{"restricted":{"parent":"0:64:1643","path":"::to_tokens"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["to_token_stream","into_token_stream"],"trait":{"name":"ToTokens","id":"0:77:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"isize"},"items":["0:332:1643"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:170:2304":{"id":"0:170:2304","crate_id":0,"name":"RepAsIteratorExt","span":{"filename":"src/runtime.rs","begin":[83,4],"end":[87,5]},"visibility":"public","docs":"Extension trait providing the `quote_into_iter` method for types that\ncan be referenced as an iterator.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:172:2306","0:173:1900"],"generics":{"params":[{"name":"'q","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":["0:174","0:180","0:186","0:191","0:196","0:201"]}},"0:412:1953":{"id":"0:412:1953","crate_id":0,"name":"push_or_eq","span":{"filename":"src/runtime.rs","begin":[354,0],"end":[354,50]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:201":{"id":"0:201","crate_id":0,"name":null,"span":{"filename":"src/runtime.rs","begin":[129,4],"end":[135,5]},"visibility":{"restricted":{"parent":"0:151:1641","path":"::__private::ext"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'q","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RepAsIteratorExt","id":"0:170:2304","args":{"angle_bracketed":{"args":[{"lifetime":"'q"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RepAsIteratorExt","id":"0:170:2304","args":{"angle_bracketed":{"args":[{"lifetime":"'q"}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RepInterp","id":"0:349:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:204:2306","0:205:1900"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:333":{"id":"0:333","crate_id":0,"name":null,"span":{"filename":"src/to_tokens.rs","begin":[139,0],"end":[156,1]},"visibility":{"restricted":{"parent":"0:64:1643","path":"::to_tokens"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["to_token_stream","into_token_stream"],"trait":{"name":"ToTokens","id":"0:77:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u8"},"items":["0:334:1643"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:387:1976":{"id":"0:387:1976","crate_id":0,"name":"push_dot_spanned","span":{"filename":"src/runtime.rs","begin":[341,0],"end":[341,42]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:830:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11425:61054":{"id":"2:11425:61054","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:173:1900":{"id":"0:173:1900","crate_id":0,"name":"quote_into_iter","span":{"filename":"src/runtime.rs","begin":[86,8],"end":[86,62]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'q","mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"qualified_path","inner":{"name":"Iter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:170:2304","args":null}}},{"kind":"resolved_path","inner":{"name":"HasIter","id":"0:135:1915","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:388:1941":{"id":"0:388:1941","crate_id":0,"name":"push_dot2","span":{"filename":"src/runtime.rs","begin":[342,0],"end":[342,48]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:112:1643":{"id":"0:112:1643","crate_id":0,"name":"to_tokens","span":{"filename":"src/to_tokens.rs","begin":[172,4],"end":[174,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:413:2002":{"id":"0:413:2002","crate_id":0,"name":"push_or_eq_spanned","span":{"filename":"src/runtime.rs","begin":[354,0],"end":[354,50]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:830:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:418:1955":{"id":"0:418:1955","crate_id":0,"name":"push_question","span":{"filename":"src/runtime.rs","begin":[357,0],"end":[357,52]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:143:183":{"id":"0:143:183","crate_id":0,"name":"Output","span":{"filename":"src/runtime.rs","begin":[21,4],"end":[21,30]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"HasIterator","id":"0:135:1915","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"5:5124:54237":{"id":"5:5124:54237","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:11457:54240"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6994:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5121:61700":{"id":"5:5121:61700","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`String`":"5:6994:221","`Box<str>`":"5:286:2261"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:286:2261","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:6739:2554","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6994:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:437:2012":{"id":"0:437:2012","crate_id":0,"name":"push_shr_spanned","span":{"filename":"src/runtime.rs","begin":[366,0],"end":[366,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:830:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:362:1932":{"id":"0:362:1932","crate_id":0,"name":"push_and","span":{"filename":"src/runtime.rs","begin":[329,0],"end":[329,42]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:114:1643":{"id":"0:114:1643","crate_id":0,"name":"to_tokens","span":{"filename":"src/to_tokens.rs","begin":[178,4],"end":[180,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:161:2294":{"id":"0:161:2294","crate_id":0,"name":"RepIteratorExt","span":{"filename":"src/runtime.rs","begin":[55,4],"end":[59,5]},"visibility":"public","docs":"Extension trait providing the `quote_into_iter` method on iterators.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:162:1900"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7156:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:163"]}},"2:11396:61047":{"id":"2:11396:61047","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"prim@char":"1:12300:408","str::split":"2:11384:57056","self::pattern":"2:11036:2974","str::split_terminator":"2:11393:61046"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitTerminator","id":"2:50090:3833","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11041:2967","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11041:2967","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11056:3574","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:329":{"id":"0:329","crate_id":0,"name":null,"span":{"filename":"src/to_tokens.rs","begin":[139,0],"end":[156,1]},"visibility":{"restricted":{"parent":"0:64:1643","path":"::to_tokens"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["to_token_stream","into_token_stream"],"trait":{"name":"ToTokens","id":"0:77:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"i128"},"items":["0:330:1643"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2528-0:349:1903":{"id":"b:2:2528-0:349:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RepInterp","id":"0:349:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2531:127","2:2532:1426"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:62:655":{"id":"0:62:655","crate_id":0,"name":"fmt","span":{"filename":"src/ident_fragment.rs","begin":[66,4],"end":[68,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8556:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8545:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11357:57048":{"id":"2:11357:57048","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"2:11358:57049"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2513-0:137:1914":{"id":"b:2:2513-0:137:1914","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2490:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2487:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThereIsNoIteratorInRepetition","id":"0:137:1914","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2516:2149"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:364:1933":{"id":"0:364:1933","crate_id":0,"name":"push_and_and","span":{"filename":"src/runtime.rs","begin":[330,0],"end":[330,54]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11380:2665":{"id":"2:11380:2665","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"prim@char":"1:12300:408","self::pattern":"2:11036:2974","`None`":"2:48056:176"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48054:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11041:2967","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11041:2967","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11056:3574","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11363:59144":{"id":"2:11363:59144","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:11362:59129"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitAsciiWhitespace","id":"2:50305:3843","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5104":{"id":"5:5104","crate_id":5,"name":null,"span":null,"visibility":{"restricted":{"parent":"5:5015:1352","path":"::str"}},"docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["5:5105:61696","5:5106:3221","5:5109:61697","5:5112:61698","5:5120:61699","5:5121:61700","5:5122:2737","5:5123:54236","5:5124:54237"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:200:1900":{"id":"0:200:1900","crate_id":0,"name":"quote_into_iter","span":{"filename":"src/runtime.rs","begin":[124,8],"end":[126,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'q","mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"qualified_path","inner":{"name":"Iter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:170:2304","args":null}}},{"kind":"resolved_path","inner":{"name":"HasIter","id":"0:135:1915","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:327":{"id":"0:327","crate_id":0,"name":null,"span":{"filename":"src/to_tokens.rs","begin":[139,0],"end":[156,1]},"visibility":{"restricted":{"parent":"0:64:1643","path":"::to_tokens"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["to_token_stream","into_token_stream"],"trait":{"name":"ToTokens","id":"0:77:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"i64"},"items":["0:328:1643"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:45:1647":{"id":"0:45:1647","crate_id":0,"name":"IdentFragment","span":{"filename":"src/ident_fragment.rs","begin":[11,0],"end":[21,1]},"visibility":"public","docs":"Specialized formatting trait used by `format_ident!`.\n\n[`Ident`] arguments formatted using this trait will have their `r#` prefix\nstripped, if present.\n\nSee [`format_ident!`] for more information.","links":{"`Ident`":"21:897:2214","`format_ident!`":"0:37:2207"},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:46:655","0:47:1884"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:48","0:52","0:56","0:59","0:301","0:303","0:305","0:307","0:309","0:311","0:313","0:315","0:317","0:319"]}},"2:11417:61051":{"id":"2:11417:61051","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"str::rmatch_indices":"2:11420:61052","`DoubleEndedIterator`":"2:7079:120","prim@char":"1:12300:408","self::pattern":"2:11036:2974"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"MatchIndices","id":"2:50172:3836","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11041:2967","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:7050:762":{"id":"2:7050:762","crate_id":2,"name":"into_iter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"I"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:50:1884":{"id":"0:50:1884","crate_id":0,"name":"span","span":{"filename":"src/ident_fragment.rs","begin":[24,4],"end":[26,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48054:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Span","id":"21:830:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:133":{"id":"0:133","crate_id":0,"name":null,"span":{"filename":"src/runtime.rs","begin":[7,0],"end":[7,23]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"proc_macro2","name":"proc_macro2","id":"21:0:2020","glob":true}},"a:2:2726:2541-0:137:1914":{"id":"a:2:2726:2541-0:137:1914","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2726:2541","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThereIsNoIteratorInRepetition","id":"0:137:1914","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11443:61060":{"id":"2:11443:61060","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12300:408","self::pattern":"2:11036:2974"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11041:2967","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11041:2967","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11056:3574","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5106:3221":{"id":"5:5106:3221","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:6994:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["from",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6994:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11041:2967","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:446:2213":{"id":"0:446:2213","crate_id":0,"name":"IdentFragmentAdapter","span":{"filename":"src/runtime.rs","begin":[402,0],"end":[402,57]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":["0:449:1553"]},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IdentFragment","id":"0:45:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:249","a:2:2676:225-0:446:2213","a:2:7736:2546-0:446:2213","a:2:2662:217-0:446:2213","a:2:2726:2541-0:446:2213","a:2:7735:2547-0:446:2213","b:2:2523-0:446:2213","b:2:2513-0:446:2213","b:2:2241-0:446:2213","b:2:2517-0:446:2213","b:2:2528-0:446:2213","b:2:3321-0:446:2213","b:2:2238-0:446:2213","b:5:5373-0:446:2213","b:5:681-0:446:2213","0:450","0:452","0:252","0:255","0:258","0:261","0:264"]}},"0:77:1648":{"id":"0:77:1648","crate_id":0,"name":"ToTokens","span":{"filename":"src/to_tokens.rs","begin":[10,0],"end":[75,1]},"visibility":"public","docs":"Types that can be interpolated inside a `quote!` invocation.\n\n[`quote!`]: macro.quote.html","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:78:1643","0:79:2258","0:80:2259"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:81","0:85","0:89","0:93","0:96","0:99","0:102","0:104","0:321","0:323","0:325","0:327","0:329","0:331","0:333","0:335","0:337","0:339","0:341","0:343","0:345","0:347","0:107","0:109","0:111","0:113","0:115","0:117","0:119","0:121","0:213"]}},"2:2519:673":{"id":"2:2519:673","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:165:2298":{"id":"0:165:2298","crate_id":0,"name":"RepToTokensExt","span":{"filename":"src/runtime.rs","begin":[66,4],"end":[77,5]},"visibility":"public","docs":"Extension trait providing the `quote_into_iter` method for\nnon-iterable types. These types interpolate the same value in each\niteration of the repetition.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:166:928","0:167:1900"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:168"]}},"0:374:1938":{"id":"0:374:1938","crate_id":0,"name":"push_caret_eq","span":{"filename":"src/runtime.rs","begin":[335,0],"end":[335,56]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3323:1440":{"id":"2:3323:1440","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"2:46537:3174","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:376:1929":{"id":"0:376:1929","crate_id":0,"name":"push_colon","span":{"filename":"src/runtime.rs","begin":[336,0],"end":[336,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:120:1643":{"id":"0:120:1643","crate_id":0,"name":"to_tokens","span":{"filename":"src/to_tokens.rs","begin":[196,4],"end":[198,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7735:2547-0:135:1915":{"id":"a:2:7735:2547-0:135:1915","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7735:2547","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"HasIterator","id":"0:135:1915","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11384:57056":{"id":"2:11384:57056","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"prim@char":"1:12300:408","self::pattern":"2:11036:2974","`DoubleEndedIterator`":"2:7079:120","str::rsplit":"2:11390:57060","str::split_whitespace":"2:11362:59129"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"2:50022:2886","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11041:2967","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11458:61063":{"id":"2:11458:61063","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4467:61063"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDebug","id":"2:50321:3845","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:103:1643":{"id":"0:103:1643","crate_id":0,"name":"to_tokens","span":{"filename":"src/to_tokens.rs","begin":[116,4],"end":[118,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:325":{"id":"0:325","crate_id":0,"name":null,"span":{"filename":"src/to_tokens.rs","begin":[139,0],"end":[156,1]},"visibility":{"restricted":{"parent":"0:64:1643","path":"::to_tokens"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["to_token_stream","into_token_stream"],"trait":{"name":"ToTokens","id":"0:77:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"i32"},"items":["0:326:1643"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11457:54240":{"id":"2:11457:54240","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3321-0:135:1915":{"id":"b:2:3321-0:135:1915","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3319:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"HasIterator","id":"0:135:1915","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3323:1440"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11340:61041":{"id":"2:11340:61041","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:11338:61040"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:449:1553":{"id":"0:449:1553","crate_id":0,"name":"0","span":{"filename":"src/runtime.rs","begin":[402,50],"end":[402,55]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"T"}},"0:335":{"id":"0:335","crate_id":0,"name":null,"span":{"filename":"src/to_tokens.rs","begin":[139,0],"end":[156,1]},"visibility":{"restricted":{"parent":"0:64:1643","path":"::to_tokens"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["to_token_stream","into_token_stream"],"trait":{"name":"ToTokens","id":"0:77:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u16"},"items":["0:336:1643"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2238-0:349:1903":{"id":"b:2:2238-0:349:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RepInterp","id":"0:349:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2240:2215"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:47:1884":{"id":"0:47:1884","crate_id":0,"name":"span","span":{"filename":"src/ident_fragment.rs","begin":[18,4],"end":[20,5]},"visibility":"default","docs":"Span associated with this `IdentFragment`.\n\nIf non-`None`, may be inherited by formatted identifiers.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48054:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Span","id":"21:830:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:406:1950":{"id":"0:406:1950","crate_id":0,"name":"push_mul_eq","span":{"filename":"src/runtime.rs","begin":[351,0],"end":[351,52]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11364:4351":{"id":"2:11364:4351","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Lines","id":"2:50276:3220","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11345:309":{"id":"2:11345:309","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"`u8`":"1:12317:1448","str::as_mut_ptr":"2:11346:8166"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:342:1643":{"id":"0:342:1643","crate_id":0,"name":"to_tokens","span":{"filename":"src/to_tokens.rs","begin":[139,0],"end":[156,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11452:1970":{"id":"2:11452:1970","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:10998:126","`FromStr`":"2:10997:2516"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48198:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"name":"FromStr","id":"2:10997:2516","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:10997:2516","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11336:2666":{"id":"2:11336:2666","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:190:1900":{"id":"0:190:1900","crate_id":0,"name":"quote_into_iter","span":{"filename":"src/runtime.rs","begin":[108,8],"end":[110,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'q","mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"qualified_path","inner":{"name":"Iter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:170:2304","args":null}}},{"kind":"resolved_path","inner":{"name":"HasIter","id":"0:135:1915","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:194:2306":{"id":"0:194:2306","crate_id":0,"name":"Iter","span":{"filename":"src/runtime.rs","begin":[114,8],"end":[114,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Iter","id":"2:9280:2306","args":{"angle_bracketed":{"args":[{"lifetime":"'q"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}},"0:102":{"id":"0:102","crate_id":0,"name":null,"span":{"filename":"src/to_tokens.rs","begin":[115,0],"end":[119,1]},"visibility":{"restricted":{"parent":"0:64:1643","path":"::to_tokens"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["to_token_stream","into_token_stream"],"trait":{"name":"ToTokens","id":"0:77:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"str"},"items":["0:103:1643"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:346:1643":{"id":"0:346:1643","crate_id":0,"name":"to_tokens","span":{"filename":"src/to_tokens.rs","begin":[139,0],"end":[156,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2676:225-0:446:2213":{"id":"a:2:2676:225-0:446:2213","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2676:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2676:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IdentFragmentAdapter","id":"0:446:2213","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:370:1936":{"id":"0:370:1936","crate_id":0,"name":"push_bang","span":{"filename":"src/runtime.rs","begin":[333,0],"end":[333,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:219:2019":{"id":"0:219:2019","crate_id":0,"name":"parse_spanned","span":{"filename":"src/runtime.rs","begin":[187,0],"end":[190,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:830:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:440:1965":{"id":"0:440:1965","crate_id":0,"name":"push_star","span":{"filename":"src/runtime.rs","begin":[368,0],"end":[368,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11423:61053":{"id":"2:11423:61053","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5120:61699":{"id":"5:5120:61699","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:6994:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6994:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2513-0:135:1915":{"id":"b:2:2513-0:135:1915","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2490:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2487:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"HasIterator","id":"0:135:1915","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2516:2149"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:330:1643":{"id":"0:330:1643","crate_id":0,"name":"to_tokens","span":{"filename":"src/to_tokens.rs","begin":[139,0],"end":[156,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:168":{"id":"0:168","crate_id":0,"name":null,"span":{"filename":"src/runtime.rs","begin":[79,4],"end":[79,54]},"visibility":{"restricted":{"parent":"0:151:1641","path":"::__private::ext"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ToTokens","id":"0:77:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["next","quote_into_iter"],"trait":{"name":"RepToTokensExt","id":"0:165:2298","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"generic","inner":"T"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11408:61049":{"id":"2:11408:61049","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48054:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11041:2967","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11041:2967","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11056:3574","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:247:2210":{"id":"0:247:2210","crate_id":0,"name":"mk_ident","span":{"filename":"src/runtime.rs","begin":[382,0],"end":[385,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["id",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["span",{"kind":"resolved_path","inner":{"name":"Option","id":"2:48054:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Span","id":"21:830:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Ident","id":"21:897:2214","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:151:1641":{"id":"0:151:1641","crate_id":0,"name":"ext","span":{"filename":"src/runtime.rs","begin":[47,0],"end":[47,11]},"visibility":"public","docs":"Extension traits used by the implementation of `quote!`. These are defined\nin separate traits, rather than as a single trait due to ambiguity issues.\n\nThese traits expose a `quote_into_iter` method which should allow calling\nwhichever impl happens to be applicable. Calling that method repeatedly on\nthe returned value should be idempotent.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:161:2294","0:165:2298","0:170:2304"],"is_stripped":false}},"0:454:412":{"id":"0:454:412","crate_id":0,"name":"clone","span":{"filename":"src/runtime.rs","begin":[401,15],"end":[401,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"IdentFragmentAdapter","id":"0:446:2213","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7735:2547-0:137:1914":{"id":"a:2:7735:2547-0:137:1914","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7735:2547","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThereIsNoIteratorInRepetition","id":"0:137:1914","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11440:57066":{"id":"2:11440:57066","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"self::pattern":"2:11036:2974","prim@char":"1:12300:408"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["suffix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48054:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11041:2967","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11041:2967","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11056:3574","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2513-0:446:2213":{"id":"b:2:2513-0:446:2213","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2490:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2487:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IdentFragmentAdapter","id":"0:446:2213","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2516:2149"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:24:2136":{"id":"0:24:2136","crate_id":0,"name":"append_all","span":{"filename":"src/ext.rs","begin":[67,4],"end":[75,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["iter",{"kind":"generic","inner":"I"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:7042:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:7042:149","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"ToTokens","id":"0:77:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:443:2015":{"id":"0:443:2015","crate_id":0,"name":"push_sub_spanned","span":{"filename":"src/runtime.rs","begin":[369,0],"end":[369,42]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:830:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:344:1643":{"id":"0:344:1643","crate_id":0,"name":"to_tokens","span":{"filename":"src/to_tokens.rs","begin":[139,0],"end":[156,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:146:183":{"id":"0:146:183","crate_id":0,"name":"Output","span":{"filename":"src/runtime.rs","begin":[28,4],"end":[28,30]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"HasIterator","id":"0:135:1915","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:11405:61048":{"id":"2:11405:61048","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48054:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11041:2967","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:301":{"id":"0:301","crate_id":0,"name":null,"span":{"filename":"src/ident_fragment.rs","begin":[85,0],"end":[85,48]},"visibility":{"restricted":{"parent":"0:39:1642","path":"::ident_fragment"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["span"],"trait":{"name":"IdentFragment","id":"0:45:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"bool"},"items":["0:302:655"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:286:1072":{"id":"0:286:1072","crate_id":0,"name":"quote","span":{"filename":"src/lib.rs","begin":[473,0],"end":[477,1]},"visibility":"public","docs":"The whole point.\n\nPerforms variable interpolation against the input and produces it as\n[`proc_macro2::TokenStream`].\n\nNote: for returning tokens to the compiler in a procedural macro, use\n`.into()` on the result to convert to [`proc_macro::TokenStream`].\n\n[`TokenStream`]: https://docs.rs/proc-macro2/1.0/proc_macro2/struct.TokenStream.html\n\n<br>\n\n# Interpolation\n\nVariable interpolation is done with `#var` (similar to `$var` in\n`macro_rules!` macros). This grabs the `var` variable that is currently in\nscope and inserts it in that location in the output tokens. Any type\nimplementing the [`ToTokens`] trait can be interpolated. This includes most\nRust primitive types as well as most of the syntax tree types from the [Syn]\ncrate.\n\n[`ToTokens`]: trait.ToTokens.html\n[Syn]: https://github.com/dtolnay/syn\n\nRepetition is done using `#(...)*` or `#(...),*` again similar to\n`macro_rules!`. This iterates through the elements of any variable\ninterpolated within the repetition and inserts a copy of the repetition body\nfor each one. The variables in an interpolation may be a `Vec`, slice,\n`BTreeSet`, or any `Iterator`.\n\n- `#(#var)*` — no separators\n- `#(#var),*` — the character before the asterisk is used as a separator\n- `#( struct #var; )*` — the repetition can contain other tokens\n- `#( #k => println!(\"{}\", #v), )*` — even multiple interpolations\n\n<br>\n\n# Hygiene\n\nAny interpolated tokens preserve the `Span` information provided by their\n`ToTokens` implementation. Tokens that originate within the `quote!`\ninvocation are spanned with [`Span::call_site()`].\n\n[`Span::call_site()`]: https://docs.rs/proc-macro2/1.0/proc_macro2/struct.Span.html#method.call_site\n\nA different span can be provided through the [`quote_spanned!`] macro.\n\n[`quote_spanned!`]: macro.quote_spanned.html\n\n<br>\n\n# Return type\n\nThe macro evaluates to an expression of type `proc_macro2::TokenStream`.\nMeanwhile Rust procedural macros are expected to return the type\n`proc_macro::TokenStream`.\n\nThe difference between the two types is that `proc_macro` types are entirely\nspecific to procedural macros and cannot ever exist in code outside of a\nprocedural macro, while `proc_macro2` types may exist anywhere including\ntests and non-macro code like main.rs and build.rs. This is why even the\nprocedural macro ecosystem is largely built around `proc_macro2`, because\nthat ensures the libraries are unit testable and accessible in non-macro\ncontexts.\n\nThere is a [`From`]-conversion in both directions so returning the output of\n`quote!` from a procedural macro usually looks like `tokens.into()` or\n`proc_macro::TokenStream::from(tokens)`.\n\n[`From`]: https://doc.rust-lang.org/std/convert/trait.From.html\n\n<br>\n\n# Examples\n\n### Procedural macro\n\nThe structure of a basic procedural macro is as follows. Refer to the [Syn]\ncrate for further useful guidance on using `quote!` as part of a procedural\nmacro.\n\n[Syn]: https://github.com/dtolnay/syn\n\n```\n# #[cfg(any())]\nextern crate proc_macro;\n# extern crate proc_macro2;\n\n# #[cfg(any())]\nuse proc_macro::TokenStream;\n# use proc_macro2::TokenStream;\nuse quote::quote;\n\n# const IGNORE_TOKENS: &'static str = stringify! {\n#[proc_macro_derive(HeapSize)]\n# };\npub fn derive_heap_size(input: TokenStream) -> TokenStream {\n    // Parse the input and figure out what implementation to generate...\n    # const IGNORE_TOKENS: &'static str = stringify! {\n    let name = /* ... */;\n    let expr = /* ... */;\n    # };\n    #\n    # let name = 0;\n    # let expr = 0;\n\n    let expanded = quote! {\n        // The generated impl.\n        impl heapsize::HeapSize for #name {\n            fn heap_size_of_children(&self) -> usize {\n                #expr\n            }\n        }\n    };\n\n    // Hand the output tokens back to the compiler.\n    TokenStream::from(expanded)\n}\n```\n\n<p><br></p>\n\n### Combining quoted fragments\n\nUsually you don't end up constructing an entire final `TokenStream` in one\npiece. Different parts may come from different helper functions. The tokens\nproduced by `quote!` themselves implement `ToTokens` and so can be\ninterpolated into later `quote!` invocations to build up a final result.\n\n```\n# use quote::quote;\n#\nlet type_definition = quote! {...};\nlet methods = quote! {...};\n\nlet tokens = quote! {\n    #type_definition\n    #methods\n};\n```\n\n<p><br></p>\n\n### Constructing identifiers\n\nSuppose we have an identifier `ident` which came from somewhere in a macro\ninput and we need to modify it in some way for the macro output. Let's\nconsider prepending the identifier with an underscore.\n\nSimply interpolating the identifier next to an underscore will not have the\nbehavior of concatenating them. The underscore and the identifier will\ncontinue to be two separate tokens as if you had written `_ x`.\n\n```\n# use proc_macro2::{self as syn, Span};\n# use quote::quote;\n#\n# let ident = syn::Ident::new(\"i\", Span::call_site());\n#\n// incorrect\nquote! {\n    let mut _#ident = 0;\n}\n# ;\n```\n\nThe solution is to build a new identifier token with the correct value. As\nthis is such a common case, the [`format_ident!`] macro provides a\nconvenient utility for doing so correctly.\n\n```\n# use proc_macro2::{Ident, Span};\n# use quote::{format_ident, quote};\n#\n# let ident = Ident::new(\"i\", Span::call_site());\n#\nlet varname = format_ident!(\"_{}\", ident);\nquote! {\n    let mut #varname = 0;\n}\n# ;\n```\n\nAlternatively, the APIs provided by Syn and proc-macro2 can be used to\ndirectly build the identifier. This is roughly equivalent to the above, but\nwill not handle `ident` being a raw identifier.\n\n```\n# use proc_macro2::{self as syn, Span};\n# use quote::quote;\n#\n# let ident = syn::Ident::new(\"i\", Span::call_site());\n#\nlet concatenated = format!(\"_{}\", ident);\nlet varname = syn::Ident::new(&concatenated, ident.span());\nquote! {\n    let mut #varname = 0;\n}\n# ;\n```\n\n<p><br></p>\n\n### Making method calls\n\nLet's say our macro requires some type specified in the macro input to have\na constructor called `new`. We have the type in a variable called\n`field_type` of type `syn::Type` and want to invoke the constructor.\n\n```\n# use quote::quote;\n#\n# let field_type = quote!(...);\n#\n// incorrect\nquote! {\n    let value = #field_type::new();\n}\n# ;\n```\n\nThis works only sometimes. If `field_type` is `String`, the expanded code\ncontains `String::new()` which is fine. But if `field_type` is something\nlike `Vec<i32>` then the expanded code is `Vec<i32>::new()` which is invalid\nsyntax. Ordinarily in handwritten Rust we would write `Vec::<i32>::new()`\nbut for macros often the following is more convenient.\n\n```\n# use quote::quote;\n#\n# let field_type = quote!(...);\n#\nquote! {\n    let value = <#field_type>::new();\n}\n# ;\n```\n\nThis expands to `<Vec<i32>>::new()` which behaves correctly.\n\nA similar pattern is appropriate for trait methods.\n\n```\n# use quote::quote;\n#\n# let field_type = quote!(...);\n#\nquote! {\n    let value = <#field_type as core::default::Default>::default();\n}\n# ;\n```\n\n<p><br></p>\n\n### Interpolating text inside of doc comments\n\nNeither doc comments nor string literals get interpolation behavior in\nquote:\n\n```compile_fail\nquote! {\n    /// try to interpolate: #ident\n    ///\n    /// ...\n}\n```\n\n```compile_fail\nquote! {\n    #[doc = \"try to interpolate: #ident\"]\n}\n```\n\nInstead the best way to build doc comments that involve variables is by\nformatting the doc string literal outside of quote.\n\n```rust\n# use proc_macro2::{Ident, Span};\n# use quote::quote;\n#\n# const IGNORE: &str = stringify! {\nlet msg = format!(...);\n# };\n#\n# let ident = Ident::new(\"var\", Span::call_site());\n# let msg = format!(\"try to interpolate: {}\", ident);\nquote! {\n    #[doc = #msg]\n    ///\n    /// ...\n}\n# ;\n```\n\n<p><br></p>\n\n### Indexing into a tuple struct\n\nWhen interpolating indices of a tuple or tuple struct, we need them not to\nappears suffixed as integer literals by interpolating them as [`syn::Index`]\ninstead.\n\n[`syn::Index`]: https://docs.rs/syn/1.0/syn/struct.Index.html\n\n```compile_fail\nlet i = 0usize..self.fields.len();\n\n// expands to 0 + self.0usize.heap_size() + self.1usize.heap_size() + ...\n// which is not valid syntax\nquote! {\n    0 #( + self.#i.heap_size() )*\n}\n```\n\n```\n# use proc_macro2::{Ident, TokenStream};\n# use quote::quote;\n#\n# mod syn {\n#     use proc_macro2::{Literal, TokenStream};\n#     use quote::{ToTokens, TokenStreamExt};\n#\n#     pub struct Index(usize);\n#\n#     impl From<usize> for Index {\n#         fn from(i: usize) -> Self {\n#             Index(i)\n#         }\n#     }\n#\n#     impl ToTokens for Index {\n#         fn to_tokens(&self, tokens: &mut TokenStream) {\n#             tokens.append(Literal::usize_unsuffixed(self.0));\n#         }\n#     }\n# }\n#\n# struct Struct {\n#     fields: Vec<Ident>,\n# }\n#\n# impl Struct {\n#     fn example(&self) -> TokenStream {\nlet i = (0..self.fields.len()).map(syn::Index::from);\n\n// expands to 0 + self.0.heap_size() + self.1.heap_size() + ...\nquote! {\n    0 #( + self.#i.heap_size() )*\n}\n#     }\n# }\n```","links":{"`format_ident!`":"0:37:2207","`proc_macro::TokenStream`":"20:2604:1824","`proc_macro2::TokenStream`":"21:825:1824"},"attrs":["#[cfg(doc)]","#[macro_export]"],"deprecation":null,"kind":"macro","inner":"macro_rules! quote {\n    ($($tt:tt)*) => { ... };\n}"},"0:268":{"id":"0:268","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[111,0],"end":[111,45]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::ident_fragment::IdentFragment","name":"IdentFragment","id":"0:45:1647","glob":false}},"0:429:2009":{"id":"0:429:2009","crate_id":0,"name":"push_fat_arrow_spanned","span":{"filename":"src/runtime.rs","begin":[362,0],"end":[362,58]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:830:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:57:1884":{"id":"0:57:1884","crate_id":0,"name":"span","span":{"filename":"src/ident_fragment.rs","begin":[44,4],"end":[46,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48054:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Span","id":"21:830:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2676:225-0:349:1903":{"id":"a:2:2676:225-0:349:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2676:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2676:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RepInterp","id":"0:349:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2676:225-0:135:1915":{"id":"a:2:2676:225-0:135:1915","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2676:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"HasIterator","id":"0:135:1915","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:313":{"id":"0:313","crate_id":0,"name":null,"span":{"filename":"src/ident_fragment.rs","begin":[86,0],"end":[86,55]},"visibility":{"restricted":{"parent":"0:39:1642","path":"::ident_fragment"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["span"],"trait":{"name":"IdentFragment","id":"0:45:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u32"},"items":["0:314:655"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:320:655":{"id":"0:320:655","crate_id":0,"name":"fmt","span":{"filename":"src/ident_fragment.rs","begin":[86,0],"end":[86,55]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8556:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8545:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:135:1915":{"id":"0:135:1915","crate_id":0,"name":"HasIterator","span":{"filename":"src/runtime.rs","begin":[10,0],"end":[10,23]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":"unit","generics":{"params":[],"where_predicates":[]},"impls":["a:2:2676:225-0:135:1915","a:2:7736:2546-0:135:1915","a:2:2662:217-0:135:1915","a:2:2726:2541-0:135:1915","a:2:7735:2547-0:135:1915","b:2:2523-0:135:1915","b:2:2513-0:135:1915","b:2:2241-0:135:1915","b:2:2517-0:135:1915","b:2:2528-0:135:1915","b:2:3321-0:135:1915","b:2:2238-0:135:1915","0:142","0:145","0:148"]}},"0:189:2306":{"id":"0:189:2306","crate_id":0,"name":"Iter","span":{"filename":"src/runtime.rs","begin":[106,8],"end":[106,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Iter","id":"2:9280:2306","args":{"angle_bracketed":{"args":[{"lifetime":"'q"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}},"0:436:1963":{"id":"0:436:1963","crate_id":0,"name":"push_shr","span":{"filename":"src/runtime.rs","begin":[366,0],"end":[366,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:336:1643":{"id":"0:336:1643","crate_id":0,"name":"to_tokens","span":{"filename":"src/to_tokens.rs","begin":[139,0],"end":[156,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:375:1987":{"id":"0:375:1987","crate_id":0,"name":"push_caret_eq_spanned","span":{"filename":"src/runtime.rs","begin":[335,0],"end":[335,56]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:830:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:409:2000":{"id":"0:409:2000","crate_id":0,"name":"push_ne_spanned","span":{"filename":"src/runtime.rs","begin":[352,0],"end":[352,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:830:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2517-0:446:2213":{"id":"b:2:2517-0:446:2213","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2490:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IdentFragmentAdapter","id":"0:446:2213","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2519:673"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:211:2138":{"id":"0:211:2138","crate_id":0,"name":"Item","span":{"filename":"src/runtime.rs","begin":[154,4],"end":[154,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"Iterator","id":"2:7156:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:186":{"id":"0:186","crate_id":0,"name":null,"span":{"filename":"src/runtime.rs","begin":[105,4],"end":[111,5]},"visibility":{"restricted":{"parent":"0:151:1641","path":"::__private::ext"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'q","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"outlives":"'q"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RepAsIteratorExt","id":"0:170:2304","args":{"angle_bracketed":{"args":[{"lifetime":"'q"}],"bindings":[]}}},"for":{"kind":"slice","inner":{"kind":"generic","inner":"T"}},"items":["0:189:2306","0:190:1900"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:137:1914":{"id":"0:137:1914","crate_id":0,"name":"ThereIsNoIteratorInRepetition","span":{"filename":"src/runtime.rs","begin":[11,0],"end":[11,41]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":"unit","generics":{"params":[],"where_predicates":[]},"impls":["a:2:2676:225-0:137:1914","a:2:7736:2546-0:137:1914","a:2:2662:217-0:137:1914","a:2:2726:2541-0:137:1914","a:2:7735:2547-0:137:1914","b:2:2523-0:137:1914","b:2:2513-0:137:1914","b:2:2241-0:137:1914","b:2:2517-0:137:1914","b:2:2528-0:137:1914","b:2:3321-0:137:1914","b:2:2238-0:137:1914","0:139","0:142","0:145"]}},"0:266:655":{"id":"0:266:655","crate_id":0,"name":"fmt","span":{"filename":"src/runtime.rs","begin":[435,4],"end":[437,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8556:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8545:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:178:2306":{"id":"0:178:2306","crate_id":0,"name":"Iter","span":{"filename":"src/runtime.rs","begin":[90,8],"end":[90,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Iter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"RepAsIteratorExt","id":"0:170:2304","args":{"angle_bracketed":{"args":[{"lifetime":"'q"}],"bindings":[]}}}}}}},"0:145":{"id":"0:145","crate_id":0,"name":null,"span":{"filename":"src/runtime.rs","begin":[27,0],"end":[32,1]},"visibility":{"restricted":{"parent":"0:124:1645","path":"::__private"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitOr","id":"2:2817:2282","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"HasIterator","id":"0:135:1915","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThereIsNoIteratorInRepetition","id":"0:137:1914","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:146:183","0:147:359"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:209":{"id":"0:209","crate_id":0,"name":null,"span":{"filename":"src/runtime.rs","begin":[153,0],"end":[159,1]},"visibility":{"restricted":{"parent":"0:124:1645","path":"::__private"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7156:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["fuse","take_while","intersperse","size_hint","any","is_sorted","all","array_chunks","min_by","find_map","is_partitioned","inspect","map_while","fold","intersperse_with","advance_by","is_sorted_by","sum","rev","le","try_find","try_fold","map","by_ref","take","position","for_each","filter_map","nth","is_sorted_by_key","product","eq","unzip","rposition","try_for_each","collect","try_collect","gt","scan","last","filter","step_by","partial_cmp","__iterator_get_unchecked","cmp_by","copied","max_by_key","reduce","collect_into","flat_map","peekable","chain","ge","count","skip","enumerate","cmp","max","partial_cmp_by","cloned","max_by","try_reduce","partition","flatten","skip_while","lt","zip","next_chunk","min","eq_by","cycle","min_by_key","find","partition_in_place","ne"],"trait":{"name":"Iterator","id":"2:7156:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RepInterp","id":"0:349:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:211:2138","0:212:928"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:225:1968":{"id":"0:225:1968","crate_id":0,"name":"push_lifetime","span":{"filename":"src/runtime.rs","begin":[218,0],"end":[246,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["lifetime",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:179:1900":{"id":"0:179:1900","crate_id":0,"name":"quote_into_iter","span":{"filename":"src/runtime.rs","begin":[92,8],"end":[94,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'q","mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"qualified_path","inner":{"name":"Iter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:170:2304","args":null}}},{"kind":"resolved_path","inner":{"name":"HasIter","id":"0:135:1915","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11446:61061":{"id":"2:11446:61061","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"self::pattern":"2:11036:2974","prim@char":"1:12300:408"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11041:2967","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7736:2546-0:349:1903":{"id":"a:2:7736:2546-0:349:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:7736:2546","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7736:2546","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RepInterp","id":"0:349:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:345":{"id":"0:345","crate_id":0,"name":null,"span":{"filename":"src/to_tokens.rs","begin":[139,0],"end":[156,1]},"visibility":{"restricted":{"parent":"0:64:1643","path":"::to_tokens"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["to_token_stream","into_token_stream"],"trait":{"name":"ToTokens","id":"0:77:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"f32"},"items":["0:346:1643"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:420:1956":{"id":"0:420:1956","crate_id":0,"name":"push_rarrow","span":{"filename":"src/runtime.rs","begin":[358,0],"end":[358,52]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:56":{"id":"0:56","crate_id":0,"name":null,"span":{"filename":"src/ident_fragment.rs","begin":[43,0],"end":[56,1]},"visibility":{"restricted":{"parent":"0:39:1642","path":"::ident_fragment"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["span"],"trait":{"name":"IdentFragment","id":"0:45:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Ident","id":"21:897:2214","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:57:1884","0:58:655"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11356:61044":{"id":"2:11356:61044","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:12306:1352","crate::ops::IndexMut":"2:2991:2591","str::slice_unchecked":"2:11355:61043"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:218:1970":{"id":"0:218:1970","crate_id":0,"name":"parse","span":{"filename":"src/runtime.rs","begin":[182,0],"end":[185,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3321-0:349:1903":{"id":"b:2:3321-0:349:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3319:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RepInterp","id":"0:349:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3323:1440"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:205:1900":{"id":"0:205:1900","crate_id":0,"name":"quote_into_iter","span":{"filename":"src/runtime.rs","begin":[132,8],"end":[134,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'q","mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"qualified_path","inner":{"name":"Iter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:170:2304","args":null}}},{"kind":"resolved_path","inner":{"name":"HasIter","id":"0:135:1915","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:147:359":{"id":"0:147:359","crate_id":0,"name":"bitor","span":{"filename":"src/runtime.rs","begin":[29,4],"end":[31,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["_rhs",{"kind":"resolved_path","inner":{"name":"HasIterator","id":"0:135:1915","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"HasIterator","id":"0:135:1915","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:363:1981":{"id":"0:363:1981","crate_id":0,"name":"push_and_spanned","span":{"filename":"src/runtime.rs","begin":[329,0],"end":[329,42]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:830:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:216:1920":{"id":"0:216:1920","crate_id":0,"name":"push_group","span":{"filename":"src/runtime.rs","begin":[167,0],"end":[169,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["delimiter",{"kind":"resolved_path","inner":{"name":"Delimiter","id":"21:855:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["inner",{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:305":{"id":"0:305","crate_id":0,"name":null,"span":{"filename":"src/ident_fragment.rs","begin":[85,0],"end":[85,48]},"visibility":{"restricted":{"parent":"0:39:1642","path":"::ident_fragment"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["span"],"trait":{"name":"IdentFragment","id":"0:45:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"String","id":"5:6994:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:306:655"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:368:1935":{"id":"0:368:1935","crate_id":0,"name":"push_at","span":{"filename":"src/runtime.rs","begin":[332,0],"end":[332,40]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11344:61042":{"id":"2:11344:61042","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:442:1966":{"id":"0:442:1966","crate_id":0,"name":"push_sub","span":{"filename":"src/runtime.rs","begin":[369,0],"end":[369,42]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:415:2003":{"id":"0:415:2003","crate_id":0,"name":"push_or_or_spanned","span":{"filename":"src/runtime.rs","begin":[355,0],"end":[355,50]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:830:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:419:2004":{"id":"0:419:2004","crate_id":0,"name":"push_question_spanned","span":{"filename":"src/runtime.rs","begin":[357,0],"end":[357,52]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:830:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:353":{"id":"0:353","crate_id":0,"name":null,"span":{"filename":"src/runtime.rs","begin":[140,9],"end":[140,13]},"visibility":{"restricted":{"parent":"0:124:1645","path":"::__private"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::marker::Copy","id":"2:2674:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2674:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RepInterp","id":"0:349:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:109":{"id":"0:109","crate_id":0,"name":null,"span":{"filename":"src/to_tokens.rs","begin":[164,0],"end":[169,1]},"visibility":{"restricted":{"parent":"0:64:1643","path":"::to_tokens"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["to_token_stream","into_token_stream"],"trait":{"name":"ToTokens","id":"0:77:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"bool"},"items":["0:110:1643"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:196":{"id":"0:196","crate_id":0,"name":null,"span":{"filename":"src/runtime.rs","begin":[121,4],"end":[127,5]},"visibility":{"restricted":{"parent":"0:151:1641","path":"::__private::ext"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'q","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"outlives":"'q"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RepAsIteratorExt","id":"0:170:2304","args":{"angle_bracketed":{"args":[{"lifetime":"'q"}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BTreeSet","id":"5:2919:95","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:199:2306","0:200:1900"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2523-0:137:1914":{"id":"b:2:2523-0:137:1914","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2493:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThereIsNoIteratorInRepetition","id":"0:137:1914","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2526:127","2:2527:1427"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:184:2306":{"id":"0:184:2306","crate_id":0,"name":"Iter","span":{"filename":"src/runtime.rs","begin":[98,8],"end":[98,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Iter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"RepAsIteratorExt","id":"0:170:2304","args":{"angle_bracketed":{"args":[{"lifetime":"'q"}],"bindings":[]}}}}}}},"2:11370:2225":{"id":"2:11370:2225","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"self::pattern":"2:11036:2974","prim@char":"1:12300:408"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11041:2967","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:22:2126":{"id":"0:22:2126","crate_id":0,"name":"append","span":{"filename":"src/ext.rs","begin":[60,4],"end":[65,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"generic","inner":"U"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"TokenTree","id":"21:836:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:424:1958":{"id":"0:424:1958","crate_id":0,"name":"push_rem","span":{"filename":"src/runtime.rs","begin":[360,0],"end":[360,42]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:398:1946":{"id":"0:398:1946","crate_id":0,"name":"push_ge","span":{"filename":"src/runtime.rs","begin":[347,0],"end":[347,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:340:1643":{"id":"0:340:1643","crate_id":0,"name":"to_tokens","span":{"filename":"src/to_tokens.rs","begin":[139,0],"end":[156,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:445:2016":{"id":"0:445:2016","crate_id":0,"name":"push_sub_eq_spanned","span":{"filename":"src/runtime.rs","begin":[370,0],"end":[370,52]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:830:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:99":{"id":"0:99","crate_id":0,"name":null,"span":{"filename":"src/to_tokens.rs","begin":[107,0],"end":[113,1]},"visibility":{"restricted":{"parent":"0:64:1643","path":"::to_tokens"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ToTokens","id":"0:77:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["to_token_stream","into_token_stream"],"trait":{"name":"ToTokens","id":"0:77:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48054:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:101:1643"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:215:1643":{"id":"0:215:1643","crate_id":0,"name":"to_tokens","span":{"filename":"src/runtime.rs","begin":[162,4],"end":[164,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:18:2145":{"id":"0:18:2145","crate_id":0,"name":"append_terminated","span":{"filename":"src/ext.rs","begin":[52,4],"end":[56,20]},"visibility":"default","docs":"For use by `ToTokens` implementations.\n\nAppends all tokens in the iterator `I`, appending `U` after each\nelement, including after the last element of the iterator.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["iter",{"kind":"generic","inner":"I"}],["term",{"kind":"generic","inner":"U"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:7042:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:7042:149","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"ToTokens","id":"0:77:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"ToTokens","id":"0:77:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:7735:2547-0:446:2213":{"id":"a:2:7735:2547-0:446:2213","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:7735:2547","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7735:2547","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IdentFragmentAdapter","id":"0:446:2213","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:410:1952":{"id":"0:410:1952","crate_id":0,"name":"push_or","span":{"filename":"src/runtime.rs","begin":[353,0],"end":[353,40]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2523-0:349:1903":{"id":"b:2:2523-0:349:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2493:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RepInterp","id":"0:349:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2526:127","2:2527:1427"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:358:1930":{"id":"0:358:1930","crate_id":0,"name":"push_add","span":{"filename":"src/runtime.rs","begin":[327,0],"end":[327,42]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11456:54239":{"id":"2:11456:54239","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11454:4014":{"id":"2:11454:4014","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11402:57064":{"id":"2:11402:57064","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"self::pattern":"2:11036:2974","prim@char":"1:12300:408","str::splitn":"2:11399:57062"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitN","id":"2:50144:2884","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11041:2967","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11041:2967","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11056:3574","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:307":{"id":"0:307","crate_id":0,"name":null,"span":{"filename":"src/ident_fragment.rs","begin":[85,0],"end":[85,48]},"visibility":{"restricted":{"parent":"0:39:1642","path":"::ident_fragment"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["span"],"trait":{"name":"IdentFragment","id":"0:45:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"char"},"items":["0:308:655"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:323":{"id":"0:323","crate_id":0,"name":null,"span":{"filename":"src/to_tokens.rs","begin":[139,0],"end":[156,1]},"visibility":{"restricted":{"parent":"0:64:1643","path":"::to_tokens"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["to_token_stream","into_token_stream"],"trait":{"name":"ToTokens","id":"0:77:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"i16"},"items":["0:324:1643"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:249":{"id":"0:249","crate_id":0,"name":null,"span":{"filename":"src/runtime.rs","begin":[404,0],"end":[408,1]},"visibility":{"restricted":{"parent":"0:124:1645","path":"::__private"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IdentFragment","id":"0:45:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"IdentFragmentAdapter","id":"0:446:2213","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:251:1884"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:116:1643":{"id":"0:116:1643","crate_id":0,"name":"to_tokens","span":{"filename":"src/to_tokens.rs","begin":[184,4],"end":[186,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:93":{"id":"0:93","crate_id":0,"name":null,"span":{"filename":"src/to_tokens.rs","begin":[95,0],"end":[99,1]},"visibility":{"restricted":{"parent":"0:64:1643","path":"::to_tokens"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"ToTokens","id":"0:77:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["to_token_stream","into_token_stream"],"trait":{"name":"ToTokens","id":"0:77:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Box","id":"5:286:2261","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:95:1643"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:174":{"id":"0:174","crate_id":0,"name":null,"span":{"filename":"src/runtime.rs","begin":[89,4],"end":[95,5]},"visibility":{"restricted":{"parent":"0:151:1641","path":"::__private::ext"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'q","kind":{"lifetime":{"outlives":[]}}},{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RepAsIteratorExt","id":"0:170:2304","args":{"angle_bracketed":{"args":[{"lifetime":"'q"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RepAsIteratorExt","id":"0:170:2304","args":{"angle_bracketed":{"args":[{"lifetime":"'q"}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"T"}}},"items":["0:178:2306","0:179:1900"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:258":{"id":"0:258","crate_id":0,"name":null,"span":{"filename":"src/runtime.rs","begin":[422,0],"end":[426,1]},"visibility":{"restricted":{"parent":"0:124:1645","path":"::__private"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IdentFragment","id":"0:45:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"fmt::LowerHex","id":"2:8607:2348","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"LowerHex","id":"2:8607:2348","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IdentFragmentAdapter","id":"0:446:2213","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:260:655"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2513-0:349:1903":{"id":"b:2:2513-0:349:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2490:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2487:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RepInterp","id":"0:349:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2516:2149"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:386:1927":{"id":"0:386:1927","crate_id":0,"name":"push_dot","span":{"filename":"src/runtime.rs","begin":[341,0],"end":[341,42]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:377:1978":{"id":"0:377:1978","crate_id":0,"name":"push_colon_spanned","span":{"filename":"src/runtime.rs","begin":[336,0],"end":[336,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:830:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:108:1643":{"id":"0:108:1643","crate_id":0,"name":"to_tokens","span":{"filename":"src/to_tokens.rs","begin":[159,4],"end":[161,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:422:1957":{"id":"0:422:1957","crate_id":0,"name":"push_larrow","span":{"filename":"src/runtime.rs","begin":[359,0],"end":[359,52]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:315":{"id":"0:315","crate_id":0,"name":null,"span":{"filename":"src/ident_fragment.rs","begin":[86,0],"end":[86,55]},"visibility":{"restricted":{"parent":"0:39:1642","path":"::ident_fragment"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["span"],"trait":{"name":"IdentFragment","id":"0:45:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u64"},"items":["0:316:655"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2662:217-0:349:1903":{"id":"a:2:2662:217-0:349:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RepInterp","id":"0:349:1903","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:379:1972":{"id":"0:379:1972","crate_id":0,"name":"push_colon2_spanned","span":{"filename":"src/runtime.rs","begin":[337,0],"end":[337,52]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:830:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2241-0:135:1915":{"id":"b:2:2241-0:135:1915","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"HasIterator","id":"0:135:1915","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2243:54206"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:334:1643":{"id":"0:334:1643","crate_id":0,"name":"to_tokens","span":{"filename":"src/to_tokens.rs","begin":[139,0],"end":[156,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11376:2700":{"id":"2:11376:2700","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:48056:176","self::pattern":"2:11036:2974","prim@char":"1:12300:408"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48054:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11041:2967","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:79:2258":{"id":"0:79:2258","crate_id":0,"name":"to_token_stream","span":{"filename":"src/to_tokens.rs","begin":[59,4],"end":[63,5]},"visibility":"default","docs":"Convert `self` directly into a `TokenStream` object.\n\nThis method is implicitly implemented using `to_tokens`, and acts as a\nconvenience method for consumers of the `ToTokens` trait.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:452":{"id":"0:452","crate_id":0,"name":null,"span":{"filename":"src/runtime.rs","begin":[401,15],"end":[401,20]},"visibility":{"restricted":{"parent":"0:124:1645","path":"::__private"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2255:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"IdentFragment","id":"0:45:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2255:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IdentFragmentAdapter","id":"0:446:2213","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:454:412"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:384:1940":{"id":"0:384:1940","crate_id":0,"name":"push_div_eq","span":{"filename":"src/runtime.rs","begin":[340,0],"end":[340,52]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7736:2546-0:446:2213":{"id":"a:2:7736:2546-0:446:2213","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:7736:2546","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7736:2546","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IdentFragmentAdapter","id":"0:446:2213","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:26:2141":{"id":"0:26:2141","crate_id":0,"name":"append_separated","span":{"filename":"src/ext.rs","begin":[77,4],"end":[89,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["iter",{"kind":"generic","inner":"I"}],["op",{"kind":"generic","inner":"U"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:7042:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:7042:149","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"ToTokens","id":"0:77:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"ToTokens","id":"0:77:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:278:2352":{"id":"0:278:2352","crate_id":0,"name":"__span","span":{"filename":"src/spanned.rs","begin":[9,4],"end":[11,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Span","id":"21:830:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:85":{"id":"0:85","crate_id":0,"name":null,"span":{"filename":"src/to_tokens.rs","begin":[83,0],"end":[87,1]},"visibility":{"restricted":{"parent":"0:64:1643","path":"::to_tokens"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"ToTokens","id":"0:77:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["to_token_stream","into_token_stream"],"trait":{"name":"ToTokens","id":"0:77:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"generic","inner":"T"}}},"items":["0:88:1643"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:416:1925":{"id":"0:416:1925","crate_id":0,"name":"push_pound","span":{"filename":"src/runtime.rs","begin":[356,0],"end":[356,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:302:655":{"id":"0:302:655","crate_id":0,"name":"fmt","span":{"filename":"src/ident_fragment.rs","begin":[85,0],"end":[85,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8556:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8545:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5375:1406":{"id":"5:5375:1406","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6994:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:52":{"id":"0:52","crate_id":0,"name":null,"span":{"filename":"src/ident_fragment.rs","begin":[33,0],"end":[41,1]},"visibility":{"restricted":{"parent":"0:39:1642","path":"::ident_fragment"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IdentFragment","id":"0:45:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["span"],"trait":{"name":"IdentFragment","id":"0:45:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"items":["0:54:1884","0:55:655"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:212:928":{"id":"0:212:928","crate_id":0,"name":"next","span":{"filename":"src/runtime.rs","begin":[156,4],"end":[158,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48054:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:7156:156","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:367:1983":{"id":"0:367:1983","crate_id":0,"name":"push_and_eq_spanned","span":{"filename":"src/runtime.rs","begin":[331,0],"end":[331,52]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:830:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:121":{"id":"0:121","crate_id":0,"name":null,"span":{"filename":"src/to_tokens.rs","begin":[201,0],"end":[209,1]},"visibility":{"restricted":{"parent":"0:64:1643","path":"::to_tokens"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["to_token_stream","into_token_stream"],"trait":{"name":"ToTokens","id":"0:77:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:122:1643","0:123:2259"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:396:1945":{"id":"0:396:1945","crate_id":0,"name":"push_eq_eq","span":{"filename":"src/runtime.rs","begin":[346,0],"end":[346,50]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:434:1962":{"id":"0:434:1962","crate_id":0,"name":"push_shl_eq","span":{"filename":"src/runtime.rs","begin":[365,0],"end":[365,56]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:435:2011":{"id":"0:435:2011","crate_id":0,"name":"push_shl_eq_spanned","span":{"filename":"src/runtime.rs","begin":[365,0],"end":[365,56]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:830:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:433:2010":{"id":"0:433:2010","crate_id":0,"name":"push_shl_spanned","span":{"filename":"src/runtime.rs","begin":[364,0],"end":[364,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:830:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:104":{"id":"0:104","crate_id":0,"name":null,"span":{"filename":"src/to_tokens.rs","begin":[121,0],"end":[125,1]},"visibility":{"restricted":{"parent":"0:64:1643","path":"::to_tokens"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["to_token_stream","into_token_stream"],"trait":{"name":"ToTokens","id":"0:77:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"String","id":"5:6994:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:105:1643"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:414:1954":{"id":"0:414:1954","crate_id":0,"name":"push_or_or","span":{"filename":"src/runtime.rs","begin":[355,0],"end":[355,50]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:287:1883":{"id":"0:287:1883","crate_id":0,"name":"quote_spanned","span":{"filename":"src/lib.rs","begin":[612,0],"end":[616,1]},"visibility":"public","docs":"Same as `quote!`, but applies a given span to all tokens originating within\nthe macro invocation.\n\n<br>\n\n# Syntax\n\nA span expression of type [`Span`], followed by `=>`, followed by the tokens\nto quote. The span expression should be brief &mdash; use a variable for\nanything more than a few characters. There should be no space before the\n`=>` token.\n\n[`Span`]: https://docs.rs/proc-macro2/1.0/proc_macro2/struct.Span.html\n\n```\n# use proc_macro2::Span;\n# use quote::quote_spanned;\n#\n# const IGNORE_TOKENS: &'static str = stringify! {\nlet span = /* ... */;\n# };\n# let span = Span::call_site();\n# let init = 0;\n\n// On one line, use parentheses.\nlet tokens = quote_spanned!(span=> Box::into_raw(Box::new(#init)));\n\n// On multiple lines, place the span at the top and use braces.\nlet tokens = quote_spanned! {span=>\n    Box::into_raw(Box::new(#init))\n};\n```\n\nThe lack of space before the `=>` should look jarring to Rust programmers\nand this is intentional. The formatting is designed to be visibly\noff-balance and draw the eye a particular way, due to the span expression\nbeing evaluated in the context of the procedural macro and the remaining\ntokens being evaluated in the generated code.\n\n<br>\n\n# Hygiene\n\nAny interpolated tokens preserve the `Span` information provided by their\n`ToTokens` implementation. Tokens that originate within the `quote_spanned!`\ninvocation are spanned with the given span argument.\n\n<br>\n\n# Example\n\nThe following procedural macro code uses `quote_spanned!` to assert that a\nparticular Rust type implements the [`Sync`] trait so that references can be\nsafely shared between threads.\n\n[`Sync`]: https://doc.rust-lang.org/std/marker/trait.Sync.html\n\n```\n# use quote::{quote_spanned, TokenStreamExt, ToTokens};\n# use proc_macro2::{Span, TokenStream};\n#\n# struct Type;\n#\n# impl Type {\n#     fn span(&self) -> Span {\n#         Span::call_site()\n#     }\n# }\n#\n# impl ToTokens for Type {\n#     fn to_tokens(&self, _tokens: &mut TokenStream) {}\n# }\n#\n# let ty = Type;\n# let call_site = Span::call_site();\n#\nlet ty_span = ty.span();\nlet assert_sync = quote_spanned! {ty_span=>\n    struct _AssertSync where #ty: Sync;\n};\n```\n\nIf the assertion fails, the user will see an error like the following. The\ninput span of their type is highlighted in the error.\n\n```text\nerror[E0277]: the trait bound `*const (): std::marker::Sync` is not satisfied\n  --> src/main.rs:10:21\n   |\n10 |     static ref PTR: *const () = &();\n   |                     ^^^^^^^^^ `*const ()` cannot be shared between threads safely\n```\n\nIn this example it is important for the where-clause to be spanned with the\nline/column information of the user's input type so that error messages are\nplaced appropriately by the compiler.","links":{},"attrs":["#[cfg(doc)]","#[macro_export]"],"deprecation":null,"kind":"macro","inner":"macro_rules! quote_spanned {\n    ($span:expr=> $($tt:tt)*) => { ... };\n}"},"2:2243:54206":{"id":"2:2243:54206","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11367:8207":{"id":"2:11367:8207","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:12300:408","self::pattern":"2:11036:2974"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11041:2967","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:308:655":{"id":"0:308:655","crate_id":0,"name":"fmt","span":{"filename":"src/ident_fragment.rs","begin":[85,0],"end":[85,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8556:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8545:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:401:1996":{"id":"0:401:1996","crate_id":0,"name":"push_gt_spanned","span":{"filename":"src/runtime.rs","begin":[348,0],"end":[348,40]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:830:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11387:57058":{"id":"2:11387:57058","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:12300:408","self::pattern":"2:11036:2974"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitInclusive","id":"2:10860:2902","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11041:2967","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:224:1971":{"id":"0:224:1971","crate_id":0,"name":"push_ident_spanned","span":{"filename":"src/runtime.rs","begin":[214,0],"end":[216,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:830:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:191":{"id":"0:191","crate_id":0,"name":null,"span":{"filename":"src/runtime.rs","begin":[113,4],"end":[119,5]},"visibility":{"restricted":{"parent":"0:151:1641","path":"::__private::ext"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'q","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"outlives":"'q"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RepAsIteratorExt","id":"0:170:2304","args":{"angle_bracketed":{"args":[{"lifetime":"'q"}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:6421:240","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:194:2306","0:195:1900"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:322:1643":{"id":"0:322:1643","crate_id":0,"name":"to_tokens","span":{"filename":"src/to_tokens.rs","begin":[139,0],"end":[156,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11358:57049":{"id":"2:11358:57049","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:11357:57048"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:46:655":{"id":"0:46:655","crate_id":0,"name":"fmt","span":{"filename":"src/ident_fragment.rs","begin":[13,4],"end":[13,57]},"visibility":"default","docs":"Format this value as an identifier fragment.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8556:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8545:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:397:1994":{"id":"0:397:1994","crate_id":0,"name":"push_eq_eq_spanned","span":{"filename":"src/runtime.rs","begin":[346,0],"end":[346,50]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:830:1885","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:115":{"id":"0:115","crate_id":0,"name":null,"span":{"filename":"src/to_tokens.rs","begin":[183,0],"end":[187,1]},"visibility":{"restricted":{"parent":"0:64:1643","path":"::to_tokens"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["to_token_stream","into_token_stream"],"trait":{"name":"ToTokens","id":"0:77:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Punct","id":"21:875:2230","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:116:1643"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:426:1959":{"id":"0:426:1959","crate_id":0,"name":"push_rem_eq","span":{"filename":"src/runtime.rs","begin":[361,0],"end":[361,52]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:825:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2528-0:446:2213":{"id":"b:2:2528-0:446:2213","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IdentFragmentAdapter","id":"0:446:2213","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2531:127","2:2532:1426"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:275:2351":{"id":"0:275:2351","crate_id":0,"name":"Spanned","span":{"filename":"src/spanned.rs","begin":[4,0],"end":[6,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:276:2352"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:277","0:279"]}},"2:11343:56905":{"id":"2:11343:56905","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:10604:3985"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:260:655":{"id":"0:260:655","crate_id":0,"name":"fmt","span":{"filename":"src/runtime.rs","begin":[423,4],"end":[425,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8556:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8545:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11362:59129":{"id":"2:11362:59129","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:11363:59144"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitWhitespace","id":"2:50296:3842","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:311":{"id":"0:311","crate_id":0,"name":null,"span":{"filename":"src/ident_fragment.rs","begin":[86,0],"end":[86,55]},"visibility":{"restricted":{"parent":"0:39:1642","path":"::ident_fragment"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["span"],"trait":{"name":"IdentFragment","id":"0:45:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u16"},"items":["0:312:655"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:310:655":{"id":"0:310:655","crate_id":0,"name":"fmt","span":{"filename":"src/ident_fragment.rs","begin":[86,0],"end":[86,55]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8556:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8545:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"paths":{"2:21706:173":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"3:0:432":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"1:7870:3391":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"2:11050:3573":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"16:7135:4380":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"5:3473:2994":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"18:766:4934":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"17:13340:6156":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"3:223:207":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"21:931:2607":{"crate_id":21,"path":["proc_macro2","token_stream","IntoIter"],"kind":"struct"},"14:160:8067":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"5:1196:3297":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"2:49998:3828":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"17:12060:5778":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"16:4327:6253":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"1:4017:3475":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"2:51747:3763":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"2:7079:120":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"6:487:6600":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"6:7220:7521":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"18:590:5371":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"17:9831:4895":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"17:11235:5609":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"6:1532:6688":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"1:11070:3180":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"16:2320:4390":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"17:13478:6195":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"6:4102:6820":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"16:7469:4526":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"2:53072:3723":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"1:9515:164":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"16:2749:4692":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"2:2285:185":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"17:9577:4773":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"1:524:5195":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"17:12164:5795":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"16:7929:4595":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"6:4690:973":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"1:7300:8035":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"6:6269:7355":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"2:2670:2542":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"5:271:5169":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"19:0:999":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"2:21871:167":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"2:46519:2595":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"16:6781:4536":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"1:8139:3230":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"2:11915:139":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"1:7539:56582":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"6:4152:6857":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"16:7483:4527":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"1:8814:3317":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"17:10506:5525":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"6:5713:7293":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"1:6782:3509":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"1:9239:3152":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"1:10426:8032":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"20:218:62071":{"crate_id":20,"path":["proc_macro","bridge","fxhash","FxHasher"],"kind":"struct"},"18:538:4940":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"2:50979:3866":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"20:407:62038":{"crate_id":20,"path":["proc_macro","bridge","scoped_cell","RefMutL"],"kind":"struct"},"6:4379:6976":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"17:13134:6088":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"16:4921:6271":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"17:9155:8004":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"16:6496:4578":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"2:48266:180":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"2:49057:130":{"crate_id":2,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"16:4662:6263":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"17:8822:62018":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"17:8494:5462":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"2:50276:3220":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"1:8448:152":{"crate_id":1,"path":["std","net","ip_addr","IpAddr"],"kind":"enum"},"1:8694:3534":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"2:25212:3571":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"18:719:4930":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"2:52000:3736":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"2:54051:7710":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"1:5227:14291":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"2:8873:3089":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"6:6322:7384":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"5:2981:2627":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"16:2727:4691":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"1:8737:3177":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"17:12609:5938":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"16:6735:4539":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"5:1944:3411":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"17:11315:5631":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"1:4906:7401":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"1:2248:128":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"1:2411:3447":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"2:2935:2588":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"17:1962:4833":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"2:2904:116":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"17:12850:6017":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"20:967:5163":{"crate_id":20,"path":["proc_macro","bridge","client","FreeFunctions"],"kind":"struct"},"20:2717:1921":{"crate_id":20,"path":["proc_macro","Delimiter"],"kind":"enum"},"16:5510:4428":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"2:50090:3833":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"17:10921:5545":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"16:6743:4583":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"2:47243:2769":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"6:6352:7406":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"6:6509:7474":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"2:7156:156":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"1:12305:1322":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"1:6316:5199":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"2:9280:2306":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"16:6790:4584":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"2:22402:3559":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"2:52514:7658":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"5:5437:2961":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"2:9522:2891":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"2:46958:101":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"16:7567:4545":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"17:9947:47508":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"17:9844:4896":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"6:1595:6730":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"14:0:2371":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"1:12310:629":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"1:11289:54679":{"crate_id":1,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"21:836:2119":{"crate_id":21,"path":["proc_macro2","TokenTree"],"kind":"enum"},"1:4657:3493":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"17:12337:4872":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"2:2232:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"17:13192:6100":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"2:4719:773":{"crate_id":2,"path":["core","iter"],"kind":"module"},"16:6345:4521":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"2:20858:2880":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"5:2737:2525":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"1:1826:8030":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"1:10857:3235":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"1:8429:3218":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"1:2253:3433":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"17:12265:5815":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"17:11271:5614":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"6:4437:6980":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"2:2822:2576":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"1:11390:5217":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"17:12756:5991":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"1:5763:3150":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"18:636:5380":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"17:8441:4873":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"1:9207:3149":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"12:834:3294":{"crate_id":12,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"12:853:3295":{"crate_id":12,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"1:484:5220":{"crate_id":1,"path":["std","thread","local","fast","Key"],"kind":"struct"},"6:6424:7419":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"17:9627:4778":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"1:7962:11944":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"6:5835:7322":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"2:54179:7718":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"2:53570:3735":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"12:2178:2228":{"crate_id":12,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"5:779:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"5:1691:2630":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"2:8603:2347":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"18:564:4941":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"6:5692:7281":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"2:50761:3859":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"2:46793:3614":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"2:1751:7541":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"17:11841:5729":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"2:47167:7931":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"16:6463:4577":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"2:47190:2766":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"2:20261:3625":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"2:20290:2123":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"5:5371:229":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"1:11601:7956":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"5:4105:5173":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"1:0:1344":{"crate_id":1,"path":["std"],"kind":"module"},"17:13374:6168":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"2:3382:3172":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"16:7237:4383":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"20:1072:1885":{"crate_id":20,"path":["proc_macro","bridge","client","Span"],"kind":"struct"},"1:2612:3222":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"17:11734:5486":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"12:777:4293":{"crate_id":12,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"1:1604:2306":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"22:0:2505":{"crate_id":22,"path":["unicode_ident"],"kind":"module"},"1:8796:14292":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"12:2198:6519":{"crate_id":12,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"6:6448:7431":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"20:2418:2119":{"crate_id":20,"path":["proc_macro","bridge","TokenTree"],"kind":"enum"},"16:7543:4519":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"17:8393:4804":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"1:9485:7799":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"1:12325:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"2:47284:2772":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"1:6441:54662":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"1:4216:3365":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"17:10159:5515":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"6:5504:7183":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"6:4461:6982":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"2:3147:2594":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"1:10863:3233":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"1:5695:3147":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"1:12303:1017":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"17:12211:5809":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"17:13184:6099":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"1:4972:3178":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"2:9577:2884":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"17:8510:5463":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"2:47048:12469":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"2:53966:3762":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"1:11640:7805":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"2:21673:172":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"1:8435:2886":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"2:51000:158":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"2:7426:2608":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"1:1864:8032":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"2:11858:3868":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"5:1359:2606":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"2:21313:59376":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"6:6500:7471":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"2:49922:2895":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"16:7298:4588":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"6:1550:6699":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"17:10682:4876":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"2:52178:3757":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"16:7309:4589":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"2:48557:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"6:586:6658":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"2:50402:3572":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"17:8418:4817":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"2:1919:3381":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"17:12251:5812":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"1:7978:8074":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"18:652:5369":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"17:11356:5642":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"16:7319:4590":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"17:10434:7857":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"16:2300:4710":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"2:56959:242":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:52392:3725":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"17:11070:5581":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"6:7243:7527":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"2:3174:2598":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"5:2747:60606":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"5:950:5169":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"2:52346:3740":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"17:9885:47507":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"2:2497:233":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"18:660:4925":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"1:8147:2994":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"1:8330:3242":{"crate_id":1,"path":["std","io","readbuf","BorrowedCursor"],"kind":"struct"},"16:2261:4414":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"16:6903:4374":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"16:6200:4570":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"1:3404:3123":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"17:11288:5622":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"2:9411:2887":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"12:1852:2628":{"crate_id":12,"path":["hashbrown","set","Intersection"],"kind":"struct"},"6:5684:7280":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"17:12349:5826":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"1:1608:2607":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"16:4849:6269":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"5:286:2261":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"1:8471:3193":{"crate_id":1,"path":["std","net","ip_addr","Ipv4Addr"],"kind":"struct"},"17:386:47309":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"5:1227:3298":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"1:11099:3116":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"17:11787:5721":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"1:6079:3512":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"14:215:7901":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"5:3734:2961":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"5:5526:69":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"17:9658:8011":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"1:2026:182":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"5:1060:4098":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"16:7825:4593":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"9:0:2367":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"1:12322:767":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"2:52648:3766":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"2:47294:2756":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"1:4894:3107":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"1:9442:54725":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"2:50439:3579":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"1:8412:2759":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"16:7659:4514":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"2:50144:2884":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"2:29569:67":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"16:6877:4373":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"6:539:6633":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"6:4665:7066":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"17:11247:5612":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"16:0:2373":{"crate_id":16,"path":["gimli"],"kind":"module"},"17:10721:5543":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"5:6793:2607":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"2:8609:2349":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"21:668:1824":{"crate_id":21,"path":["proc_macro2","fallback","TokenStream"],"kind":"struct"},"16:7847:4594":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"17:11559:5690":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"5:3561:5169":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"17:11748:5717":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"17:10608:4755":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"1:12306:1352":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"6:6302:7378":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"2:11036:2974":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"1:2515:3228":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"2:7736:2546":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"1:7737:5354":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"1:6785:3349":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"2:56985:242":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:50650:2968":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"2:46991:3916":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"17:11054:5577":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"1:9225:3151":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"2:51948:3744":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"16:7343:4525":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"1:8590:3086":{"crate_id":1,"path":["std","net","socket_addr","SocketAddr"],"kind":"enum"},"1:5317:54695":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"16:2868:4455":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"5:2738:60612":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"1:359:3387":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"2:11889:202":{"crate_id":2,"path":["core","task","ready","Ready"],"kind":"struct"},"6:4653:7061":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"1:9526:215":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"17:3249:4821":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"2:2796:2571":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"17:10528:4868":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"18:755:4933":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"12:1085:4303":{"crate_id":12,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"21:851:2228":{"crate_id":21,"path":["proc_macro2","Group"],"kind":"struct"},"2:49355:144":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"1:8687:3086":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"1:9407:54692":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"16:2605:4740":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"16:2683:4689":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"1:4441:3538":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"17:13203:6104":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"20:1814:5355":{"crate_id":20,"path":["proc_macro","bridge","Marked"],"kind":"struct"},"6:4126:6837":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"2:4086:3773":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"5:3911:2306":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"16:5472:4424":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"17:9274:47361":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"17:9371:8003":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"2:21970:166":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"21:855:1921":{"crate_id":21,"path":["proc_macro2","Delimiter"],"kind":"enum"},"17:11813:5725":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"15:193:4324":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"1:8379:3157":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"6:1574:6716":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"1:990:3294":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"1:11786:3474":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"2:56998:242":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:5394:188":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"16:3566:6243":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"1:9302:3273":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"1:9283:3272":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"2:2674:108":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"2:21365:3956":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"16:4385:6255":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"2:2235:98":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"6:5523:7185":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"2:50126:2888":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"17:13366:6165":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"6:6479:7457":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"16:7511:4395":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"6:4329:6951":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"2:11061:3575":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"16:6123:4515":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"17:12926:6034":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"6:5699:7282":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"6:6392:7409":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"1:11688:7963":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"1:9831:3430":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"2:47210:2767":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"17:9317:4885":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"2:7737:3379":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"5:1954:4058":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"1:12282:55157":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"17:11300:5625":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"12:1840:2961":{"crate_id":12,"path":["hashbrown","set","Drain"],"kind":"struct"},"1:7748:8078":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"2:50545:3585":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"17:10394:4849":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"6:4496:6984":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"1:1091:3297":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"2:2662:217":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"2:8303:655":{"crate_id":2,"path":["core","fmt"],"kind":"module"},"5:1595:5169":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"17:11617:5697":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"1:3086:3241":{"crate_id":1,"path":["std","io","readbuf","BorrowedBuf"],"kind":"struct"},"1:9450:4374":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"17:10949:5549":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"2:38124:180":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"9:19:4228":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","HashBuffers"],"kind":"struct"},"17:13327:6150":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"1:10902:3393":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"17:11034:5576":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"6:4644:7055":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"2:1672:1055":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"2:4191:204":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"12:320:4307":{"crate_id":12,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"6:4247:6911":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"16:6690:4524":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"17:10490:5524":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"2:50596:3587":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"17:9700:4834":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"5:1044:8029":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"12:393:8025":{"crate_id":12,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"1:8370:3240":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"20:2742:2317":{"crate_id":20,"path":["proc_macro","Spacing"],"kind":"enum"},"2:49154:2832":{"crate_id":2,"path":["core","fmt","FlagV1"],"kind":"enum"},"2:47252:2770":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"5:4439:655":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"5:5909:5183":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"1:3154:3460":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"2:11847:106":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"2:10749:3831":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"1:11124:3432":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"6:4816:7137":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"7:0:1491":{"crate_id":7,"path":["unwind"],"kind":"module"},"5:1370:2607":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"1:8422:2773":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"21:897:2214":{"crate_id":21,"path":["proc_macro2","Ident"],"kind":"struct"},"16:6376:4576":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"17:247:62021":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"2:57011:242":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"16:534:4442":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"17:10845:4872":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"17:11639:5704":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"1:11457:3152":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"6:4398:6977":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"17:13580:6219":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"17:9021:8002":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"6:567:6648":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"5:5823:16379":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"5:6809:4059":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"12:119:4309":{"crate_id":12,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"16:4262:6251":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"2:50321:3845":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"1:11277:3150":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"1:11384:5216":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"2:48793:2350":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"5:6971:4085":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"2:4272:2843":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"16:2367:4685":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"1:7939:10950":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"1:4454:3539":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"17:9488:4769":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"1:2578:3229":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"6:4475:6983":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"6:554:6642":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"17:9738:4838":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"17:13148:6090":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"16:6052:4568":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"1:8106:129":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"17:13141:6089":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"17:9873:8013":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"5:6994:221":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"1:11112:7955":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"16:6109:4413":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"2:20292:3376":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"20:2495:3067":{"crate_id":20,"path":["proc_macro","bridge","Diagnostic"],"kind":"struct"},"5:1349:2306":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"6:4683:7077":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"17:9328:4886":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"1:2869:3358":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"16:7278:4586":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"2:52018:7649":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"2:7841:2967":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"16:4749:6266":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"1:3377:3207":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"2:50813:3364":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"2:46537:3174":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"5:6911:102":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"1:12311:630":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"17:10708:4871":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"5:4042:5173":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"1:6640:54700":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"1:1828:8031":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"1:8391:3216":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"2:52294:3733":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"20:1029:2987":{"crate_id":20,"path":["proc_macro","bridge","client","SourceFile"],"kind":"struct"},"16:5374:4516":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"15:0:2372":{"crate_id":15,"path":["addr2line"],"kind":"module"},"1:12315:722":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"2:11631:33082":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"1:6604:163":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"6:4179:6880":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"17:12909:6029":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"2:46377:195":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"6:6545:7493":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"16:7426:4541":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"5:6490:5187":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"1:11954:4332":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"1:7848:2123":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"6:4726:7094":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"2:48443:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"16:6528:4579":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"1:10322:3489":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"2:2928:2586":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"1:11307:3153":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"6:5472:7165":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"2:46888:4002":{"crate_id":2,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"9:382:4132":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"1:6409:5206":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"17:12630:5948":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"2:47158:2763":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"5:5001:5181":{"crate_id":5,"path":["alloc","slice","merge","MergeHole"],"kind":"struct"},"2:52102:3765":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"17:10774:4748":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"21:480:2510":{"crate_id":21,"path":["proc_macro2","LexError"],"kind":"struct"},"1:5009:3119":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"5:1396:3288":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"2:57024:242":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:52324:3737":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"17:12617:5941":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"2:56972:242":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"17:12934:6037":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"16:5558:4431":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"17:8991:62010":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"2:49066:67":{"crate_id":2,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"2:6516:2758":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"17:13126:6085":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"2:47550:2738":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"2:46857:3846":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"16:7956:4529":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"2:9449:2903":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"2:39347:2649":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"5:1426:3291":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"1:8123:118":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"17:12278:5816":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"21:676:2987":{"crate_id":21,"path":["proc_macro2","fallback","SourceFile"],"kind":"struct"},"17:9293:4889":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"16:7435:4557":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"12:1555:4316":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"1:774:141":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"1:8719:3495":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"6:7226:7522":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"2:3168:2596":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"6:4200:6888":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"2:9138:219":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"20:2261:2228":{"crate_id":20,"path":["proc_macro","bridge","Group"],"kind":"struct"},"16:6816:4720":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"6:5772:7309":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"17:13047:6060":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"16:7872:4533":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"2:5380:2764":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"1:7982:4107":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"1:1615:2630":{"crate_id":1,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"5:5634:3207":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"5:4268:2292":{"crate_id":5,"path":["alloc","collections","btree_set"],"kind":"module"},"2:21267:7549":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"12:810:3289":{"crate_id":12,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"2:21:665":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"1:12142:5221":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"2:3968:3700":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"16:4144:6249":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"14:7:8067":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"16:5761:4441":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"16:7288:4587":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"6:4565:7019":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"2:21252:3688":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"2:50339:3846":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"17:13231:6112":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"1:4268:3107":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"2:20339:3623":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"17:8774:4747":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"20:2758:2214":{"crate_id":20,"path":["proc_macro","Ident"],"kind":"struct"},"16:5596:4433":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"2:48807:2348":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"1:5013:3128":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"6:6329:7388":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"16:6316:4544":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"17:12972:6044":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"16:6654:4582":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"6:646:40075":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"2:21391:3901":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"17:8796:4756":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"17:9475:4770":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"18:582:3076":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"2:11679:189":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"2:48198:207":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"17:12134:5789":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"1:900:2606":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"2:47089:2750":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"16:8056:4394":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"2:48329:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"2:9563:2888":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"1:11655:7960":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"2:10123:2901":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"6:1580:6718":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"6:4559:7017":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"5:2030:60671":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"17:11125:5589":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"2:7429:2609":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"5:7005:2957":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"2:2817:2282":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"2:7433:2746":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"17:13114:6082":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"2:51723:7647":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"6:4629:7051":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"2:9605:2885":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"12:2080:3299":{"crate_id":12,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"2:7005:2747":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"2:29747:3913":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"1:9253:3153":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"5:0:282":{"crate_id":5,"path":["alloc"],"kind":"module"},"12:1518:4314":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"12:2184:6517":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"1:6838:3470":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"16:2535:4687":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"1:6886:214":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"18:681:4927":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"17:11186:5599":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"1:8131:3454":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"1:3269:3233":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"0:287:1883":{"crate_id":0,"path":["quote","quote_spanned"],"kind":"macro"},"2:54088:7713":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"2:54156:7717":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"2:2851:2583":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"2:8324:3814":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"5:1446:4096":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"5:2255:4104":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"17:9382:5474":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"1:11477:3936":{"crate_id":1,"path":["std","sys","unix","time","Nanoseconds"],"kind":"struct"},"17:8110:47305":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"6:4317:6945":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"2:53428:3767":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"17:11515:5681":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"12:632:2306":{"crate_id":12,"path":["hashbrown","map","Iter"],"kind":"struct"},"16:5628:4435":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"1:3232:3238":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"16:6210:4571":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"1:931:3288":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"20:2551:3068":{"crate_id":20,"path":["proc_macro","diagnostic","Level"],"kind":"enum"},"1:12314:721":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"18:614:62028":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"6:5741:7301":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"6:7289:7536":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"1:1611:2961":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"17:420:4459":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"5:6171:5169":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"6:6524:7481":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"6:5541:7197":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"1:5826:3155":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"2:39338:3171":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"6:7279:7534":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"17:11174:5598":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"6:5625:7247":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"5:4748:2533":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"2:46465:200":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"17:11536:5685":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"17:10532:127":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"1:8083:3432":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"17:13594:6222":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"16:7249:4384":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"2:50617:3589":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"17:13024:6057":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"1:10799:5214":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"1:598:3370":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"6:7249:7528":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"12:669:3290":{"crate_id":12,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"1:960:3289":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"2:2987:2590":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"6:4810:7134":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"6:6415:7416":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"1:8222:3356":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"16:6517:4320":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"2:2932:2587":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"2:29583:3911":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"5:2994:4056":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"17:11343:5641":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"2:2784:2523":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"2:3616:2607":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"0:286:1072":{"crate_id":0,"path":["quote","quote"],"kind":"macro"},"2:8819:140":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"17:242:62023":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"1:4969:3176":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"17:12768:5996":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"17:9362:4782":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"2:10090:2900":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"5:6323:4040":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"2:7038:133":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"12:0:2370":{"crate_id":12,"path":["hashbrown"],"kind":"module"},"18:96:7993":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"9:709:3327":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"2:46821:3617":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"6:7255:7529":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"17:12022:5774":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"17:10257:8019":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"1:4316:3103":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"2:46918:4004":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"17:10207:47574":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"17:10270:47563":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"11:36:6521":{"crate_id":11,"path":["adler","algo","U32X4"],"kind":"struct"},"16:2894:4701":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"1:12300:408":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"20:2692:2987":{"crate_id":20,"path":["proc_macro","SourceFile"],"kind":"struct"},"17:10350:4748":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"1:8534:1885":{"crate_id":1,"path":["std","net","ip_addr","fmt","Span"],"kind":"struct"},"1:1105:3298":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"2:50040:2890":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"2:49051:70":{"crate_id":2,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"2:7051:2633":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"2:20966:3624":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"2:51769:3751":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"2:2991:2591":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"17:10583:4752":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"6:4797:7129":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"2:3370:3173":{"crate_id":2,"path":["core","any","Provider"],"kind":"trait"},"5:870:2306":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"16:5996:4565":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"2:4:983":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"5:2477:4103":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"17:10455:4907":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"1:918:3287":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"6:4307:6938":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"2:11041:2967":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"12:1628:5167":{"crate_id":12,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"2:29641:3912":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"12:1866:2627":{"crate_id":12,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"2:2780:2568":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"2:20870:60450":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"6:5782:7311":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"16:7093:4376":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"16:5541:4430":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"16:5703:4437":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"17:9539:4767":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"12:1859:2626":{"crate_id":12,"path":["hashbrown","set","Difference"],"kind":"struct"},"17:10670:4875":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"16:4817:6268":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"16:5433:4421":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"16:6330:4574":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"2:8868:3088":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"5:4072:3207":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"5:2743:60605":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"1:11134:129":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"2:4346:2653":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"17:9820:4893":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"18:671:4926":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"18:599:62027":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"1:9531:216":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"6:4659:7063":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"17:9061:4782":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"2:3236:2545":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"2:48367:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"9:676:4226":{"crate_id":9,"path":["miniz_oxide","deflate","CompressionLevel"],"kind":"enum"},"2:8596:111":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"20:140:5347":{"crate_id":20,"path":["proc_macro","bridge","client","Client"],"kind":"struct"},"1:9836:5213":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"9:956:4135":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"5:3805:2606":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"1:8488:3194":{"crate_id":1,"path":["std","net","ip_addr","Ipv6Addr"],"kind":"struct"},"2:54042:7709":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"2:53038:3741":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"6:5660:7268":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"17:12237:5811":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"12:1065:4302":{"crate_id":12,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"2:49830:2892":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"1:6709:3308":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"2:21739:174":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"1:12304:307":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"17:11259:5613":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"17:9250:47360":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"17:9681:5367":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"2:52962:3734":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"17:13158:6093":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"17:8871:7999":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"2:52248:3745":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"6:4761:7107":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"12:2190:61984":{"crate_id":12,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"17:9751:4836":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"2:7735:2547":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"2:50749:3856":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"2:46421:199":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"17:13557:6215":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"9:827:4134":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"17:12695:5984":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"1:7192:5208":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"1:1620:2628":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"2:7102:2632":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"17:9401:5476":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"2:49992:2970":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"6:4673:7071":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"1:12317:1448":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"1:6496:3270":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"5:3363:2606":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"1:1002:3296":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"17:8272:4877":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"16:3716:6247":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"16:5235:6273":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"1:4254:3105":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"2:29328:3951":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"16:5664:4436":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"2:21292:59370":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"16:6186:4517":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"2:8329:3815":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"2:50244:3840":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"20:53:3373":{"crate_id":20,"path":["proc_macro","bridge","buffer","Buffer"],"kind":"struct"},"12:751:2961":{"crate_id":12,"path":["hashbrown","map","Drain"],"kind":"struct"},"1:11154:3157":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"17:12948:6039":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"17:8055:4746":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"16:4519:6258":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"2:3157:230":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"17:13404:6174":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"2:2792:2572":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"17:9031:62025":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"16:7372:4727":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"6:4515:6996":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"2:8611:191":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"17:11909:5739":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"2:50769:3854":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"2:9128:2123":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"2:49932:2896":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"2:48519:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"16:3632:6245":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"20:2737:2230":{"crate_id":20,"path":["proc_macro","Punct"],"kind":"struct"},"1:12319:1446":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"1:9464:54702":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"2:47335:2775":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"1:7805:5211":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"6:4335:6954":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"2:21358:7917":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"2:21216:7545":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"1:2385:3437":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"2:2481:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"6:600:6666":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"1:969:3291":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"2:46784:7923":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"16:6865:4723":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"1:11445:3151":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"16:4888:6270":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"2:10860:2902":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"2:3956:3699":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"16:3263:6241":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"1:10860:3237":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"2:2490:132":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"16:7166:4381":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"12:60:8023":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"2:3184:3641":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"17:13506:6204":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"18:80:7992":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"5:4532:201":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"12:725:3287":{"crate_id":12,"path":["hashbrown","map","Keys"],"kind":"struct"},"20:2370:2229":{"crate_id":20,"path":["proc_macro","bridge","Literal"],"kind":"struct"},"2:20418:2123":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"2:2805:2577":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"2:48241:2306":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"1:3461:2828":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"17:13039:6059":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"18:0:2375":{"crate_id":18,"path":["memchr"],"kind":"module"},"1:4744:3178":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"5:1241:3300":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"17:8981:8001":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"1:719:10953":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"20:481:5162":{"crate_id":20,"path":["proc_macro","bridge","server","RunningSameThreadGuard"],"kind":"struct"},"2:47233:2768":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"2:11618:135":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"2:5845:2777":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"6:4635:7052":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"2:58299:7726":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"17:8137:47311":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"16:6161:4569":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"21:686:1885":{"crate_id":21,"path":["proc_macro2","fallback","Span"],"kind":"struct"},"16:2930:4456":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"17:10139:4782":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"9:188:4204":{"crate_id":9,"path":["miniz_oxide","deflate","core","HuffmanOxide"],"kind":"struct"},"6:1562:6708":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"2:21240:3687":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"1:11704:5220":{"crate_id":1,"path":["std","sys_common","thread_local_key","Key"],"kind":"struct"},"1:3347:2738":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"12:1534:4315":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"21:662:2997":{"crate_id":21,"path":["proc_macro2","rcvec","RcVecIntoIter"],"kind":"struct"},"1:7924:10947":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"2:2669:2223":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"2:46882:3082":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"1:6233:203":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"1:11089:7948":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"16:4721:6265":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"17:12860:6018":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"17:11997:5770":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"2:49840:2893":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"7:32:44878":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"14:202:2960":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"17:10332:4912":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"1:11094:7950":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"17:13459:6190":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"16:2993:4697":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"16:6270:4518":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"1:11826:3475":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"17:12176:5797":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"1:954:2630":{"crate_id":1,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"17:12307:5819":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"1:2652:3231":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"1:9637:8033":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"17:9071:62019":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"14:40:2214":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"16:5460:4423":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"17:8951:62022":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"5:6739:2554":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"12:659:2607":{"crate_id":12,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"12:353:4306":{"crate_id":12,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"1:7955:3301":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"1:2588:5197":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"12:646:2606":{"crate_id":12,"path":["hashbrown","map","IterMut"],"kind":"struct"},"16:5525:4429":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"6:5841:7323":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"17:10894:4814":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"6:4592:7036":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"6:1541:6693":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"17:8941:8000":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"6:6311:7379":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"16:2705:4690":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"20:1397:5354":{"crate_id":20,"path":["proc_macro","bridge","symbol","Symbol"],"kind":"struct"},"2:47535:2734":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"16:6241:4572":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"2:20173:3620":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"1:1476:143":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"1:9555:3361":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"2:47544:2736":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"17:12964:6042":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"2:52772:3758":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"1:545:3411":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"1:4433:3536":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"2:52726:3754":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"6:4115:6829":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"2:46299:2600":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"1:979:3293":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"1:5823:3154":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"6:6375:7407":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"17:9458:4745":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"2:50314:3844":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"2:48633:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"1:8887:3328":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"2:39334:4107":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"20:246:62090":{"crate_id":20,"path":["proc_macro","bridge","handle","OwnedStore"],"kind":"struct"},"17:10546:47314":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"1:9824:128":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"21:875:2230":{"crate_id":21,"path":["proc_macro2","Punct"],"kind":"struct"},"17:10466:7859":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"1:11144:118":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"2:2763:2567":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"1:11496:3361":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"6:1525:6685":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"12:1832:2306":{"crate_id":12,"path":["hashbrown","set","Iter"],"kind":"struct"},"5:6801:195":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"6:4286:6928":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"1:12312:723":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"17:11721:5713":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"2:2672:223":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"2:8546:2828":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"2:21937:169":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"2:54126:7715":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"6:1678:6791":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"17:13082:6071":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"2:6563:3568":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"17:8241:4874":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"1:6393:3868":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"18:521:4935":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"20:2678:3064":{"crate_id":20,"path":["proc_macro","LineColumn"],"kind":"struct"},"17:11161:5596":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"2:48249:2606":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"1:6043:3503":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"18:699:4929":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"5:6763:2961":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"2:2444:2123":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"18:574:5369":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"5:853:4073":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"1:8956:2306":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"17:10403:4750":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"1:3230:3237":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"16:3599:6244":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"6:6430:7420":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"2:4195:3774":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"2:54103:7714":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"17:11547:5688":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"2:49170:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"5:7016:2958":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"17:13221:6107":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"21:881:2317":{"crate_id":21,"path":["proc_macro2","Spacing"],"kind":"enum"},"2:48122:2606":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"2:49903:2894":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"17:13393:6173":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"6:135:39743":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"2:10997:2516":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"2:6610:2728":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"17:8814:128":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"5:4027:241":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"17:11893:5734":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"2:49096:127":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"12:1681:143":{"crate_id":12,"path":["hashbrown","set","HashSet"],"kind":"struct"},"2:49966:2971":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"2:50470:3583":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"2:46260:2601":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"17:12322:5823":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"6:560:6645":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"16:6359:4575":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"17:10088:5513":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"1:678:10949":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"2:49581:2910":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"2:47577:2744":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"17:10752:4750":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"2:9372:2902":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"2:48595:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"16:5839:4446":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"2:20449:3719":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"21:327:2510":{"crate_id":21,"path":["proc_macro2","imp","LexError"],"kind":"enum"},"6:6998:7517":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"2:14:2482":{"crate_id":2,"path":["core","write"],"kind":"macro"},"16:4606:6261":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"2:50630:3927":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"2:5624:60477":{"crate_id":2,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"17:10075:47485":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"1:12271:10954":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"2:4059:3772":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"17:3125:8016":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"6:6277:7360":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"5:3542:2630":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"1:4908:7403":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"17:11594:5694":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"17:0:2374":{"crate_id":17,"path":["object"],"kind":"module"},"1:10651:3148":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"1:8645:3477":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"16:2487:4686":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"1:686:10952":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"17:9691:4835":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"2:47068:2749":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"2:47269:2771":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"12:1836:2607":{"crate_id":12,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"1:8442:3220":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"1:11264:8074":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"17:11014:5566":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"1:8217:3355":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"17:9857:4820":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"2:50792:121":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"5:6942:3915":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"16:6829:4721":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"6:608:6671":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"1:5887:3270":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"17:8212:4870":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"2:48405:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"17:12874:6019":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"2:10574:2872":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"17:9183:8005":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"17:13536:6212":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"2:53882:3724":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"16:5163:4457":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"1:2401:3442":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"1:1123:3300":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"6:5443:7141":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"6:6293:7372":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"14:165:45610":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"2:2255:105":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"6:4206:6890":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"17:13492:6197":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"21:14:4965":{"crate_id":21,"path":["proc_macro2","marker","ProcMacroAutoTraits"],"kind":"struct"},"5:686:110":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"17:11528:5683":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"1:965:3290":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"17:10822:47315":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"1:2383:3436":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"2:7042:149":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"1:11268:3315":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"2:2917:2585":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"2:2578:127":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"2:50453:3582":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"6:1738:6813":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"17:13176:6097":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"2:4200:3775":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"17:11606:5696":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"16:5878:4447":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"6:4716:7093":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"2:2969:2599":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"17:12797:6004":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"5:630:8073":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"1:10581:3160":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"6:4778:7115":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"2:50737:3852":{"crate_id":2,"path":["core","str","LinesAnyMap"],"kind":"struct"},"18:727:4931":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"1:5646:3144":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"2:20210:3716":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"6:4257:6917":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"16:2282:4389":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"16:6619:4581":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"16:5184:45683":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"16:2771:4693":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"5:6928:4083":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"17:8162:4818":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"17:10221:8017":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"1:4312:3109":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"16:2509:4698":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"1:5880:203":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"17:9930:5481":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"17:12896:6023":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"6:5534:7193":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"6:5498:7180":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"6:4581:7028":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"20:107:62091":{"crate_id":20,"path":["proc_macro","bridge","client","Bridge"],"kind":"struct"},"2:11652:59329":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"5:6988:7539":{"crate_id":5,"path":["alloc","slice","merge_sort","Run"],"kind":"struct"},"1:6681:3513":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"1:8554:3529":{"crate_id":1,"path":["std","net","parser","AddrKind"],"kind":"enum"},"2:20021:60505":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"2:8935:1322":{"crate_id":2,"path":["core","slice"],"kind":"module"},"16:5963:191":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"12:1044:4301":{"crate_id":12,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"1:7945:3096":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"5:4949:3182":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"2:3908:3207":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"17:1771:4772":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"17:10374:4847":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"2:49820:2882":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"5:2050:4100":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"16:6593:4580":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"17:12033:5775":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"17:12087:5782":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"1:8227:3232":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"16:7329:4591":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"2:49385:7938":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"17:13071:6067":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"5:6779:60576":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"5:2989:2628":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"2:8833:144":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"2:51978:3732":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"2:54141:7716":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"2:10604:3985":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"2:49751:3827":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"16:8014:4396":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"17:11873:5733":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"17:12748:5990":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"17:12638:5949":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"12:2205:2618":{"crate_id":12,"path":["hashbrown","TryReserveError"],"kind":"enum"},"6:6953:7505":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"17:967:8008":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"6:4575:7025":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"16:6298:4543":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"6:6409:7414":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"6:4294:6933":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"6:1668:6785":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"17:9223:47359":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"6:5720:7295":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"12:738:3288":{"crate_id":12,"path":["hashbrown","map","Values"],"kind":"struct"},"20:2294:2230":{"crate_id":20,"path":["proc_macro","bridge","Punct"],"kind":"struct"},"2:1737:3961":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"17:13413:6176":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"2:51017:3102":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"2:2839:2580":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"5:2960:4055":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"2:52467:7657":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"17:11485:5672":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"17:8701:5467":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"16:6284:4528":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"6:0:794":{"crate_id":6,"path":["libc"],"kind":"module"},"5:4987:5178":{"crate_id":5,"path":["alloc","slice","insert_head","InsertionHole"],"kind":"struct"},"20:998:1824":{"crate_id":20,"path":["proc_macro","bridge","client","TokenStream"],"kind":"struct"},"2:8615:2834":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"2:48054:178":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"5:2948:2306":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"17:11217:5608":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"5:3485:4080":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"1:11607:3161":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"1:11164:56886":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"2:51815:3731":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"6:4417:6978":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"2:49577:4012":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"2:4317:3781":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"2:49367:3327":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"6:4449:6981":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"1:1626:2626":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"1:3953:3256":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"2:49890:2898":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"1:3470:58725":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"2:11970:2553":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"2:52055:7650":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"17:9553:4782":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"1:5178:3254":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"16:7396:4592":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"5:782:4072":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"17:9764:7855":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"12:1872:2629":{"crate_id":12,"path":["hashbrown","set","Union"],"kind":"struct"},"17:9339:4887":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"2:1825:2548":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"2:50072:3832":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"1:9389:106":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"1:5348:54695":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:49330:3091":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"1:1811:597":{"crate_id":1,"path":["std","env"],"kind":"module"},"5:5546:2533":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"16:4635:6262":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"16:6070:4458":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"17:8752:3218":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"20:2763:2229":{"crate_id":20,"path":["proc_macro","Literal"],"kind":"struct"},"6:513:6613":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"2:38141:3076":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"2:46925:4005":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"2:46845:4007":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"2:8749:59385":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"1:8973:3333":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"2:48291:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"2:47139:2761":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"2:50424:3576":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"17:12008:5772":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"21:762:1885":{"crate_id":21,"path":["proc_macro2","imp","Span"],"kind":"enum"},"17:9303:4780":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"1:5680:3146":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"2:51847:3764":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"16:7267:4585":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"17:9644:4764":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"2:50286:3841":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"1:11903:7806":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"1:6010:3500":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"2:29541:3309":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"5:6748:2607":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"2:2564:115":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"21:672:2510":{"crate_id":21,"path":["proc_macro2","fallback","LexError"],"kind":"struct"},"16:7970:4530":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"6:4506:6991":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"6:5568:7217":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"2:50944:192":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"20:2664:1885":{"crate_id":20,"path":["proc_macro","Span"],"kind":"struct"},"17:12225:5810":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"2:9484:2890":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"12:985:3297":{"crate_id":12,"path":["hashbrown","map","Entry"],"kind":"enum"},"1:9315:3274":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"1:8962:3332":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"12:387:8024":{"crate_id":12,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"17:13031:6058":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"1:7896:3393":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"17:11828:5728":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"17:11106:5588":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"6:581:6656":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"17:8881:62017":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"1:8741:7388":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"1:4014:3474":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"2:8160:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"2:56946:242":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:11107:3578":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"1:3271:3234":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"1:8071:3430":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"1:11763:3261":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"16:5411:4420":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"17:10997:2214":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"2:50226:3839":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"2:47199:2776":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"17:13214:6105":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"2:21329:59366":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"18:507:5369":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"1:8613:3258":{"crate_id":1,"path":["std","net","socket_addr","SocketAddrV4"],"kind":"struct"},"6:5510:7184":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"21:825:1824":{"crate_id":21,"path":["proc_macro2","TokenStream"],"kind":"struct"},"6:4598:7039":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"16:7388:4540":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"16:5219:5463":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"2:2753:2522":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"17:10062:8015":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"6:4139:6847":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"2:48172:3921":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"17:562:5354":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"21:108:2996":{"crate_id":21,"path":["proc_macro2","rcvec","RcVecBuilder"],"kind":"struct"},"1:4904:7399":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"1:1637:2629":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"2:19989:60447":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"2:50745:3857":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"2:52148:3753":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"2:51793:3743":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"16:4413:6256":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"12:98:4305":{"crate_id":12,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"17:10420:4906":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"16:7059:3919":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"6:4267:6920":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"9:505:4127":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"17:13279:6149":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"10:0:2368":{"crate_id":10,"path":["rustc_std_workspace_alloc"],"kind":"module"},"17:11774:5720":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"6:1701:6801":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"2:52037:3721":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"2:48114:2306":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"21:708:2229":{"crate_id":21,"path":["proc_macro2","fallback","Literal"],"kind":"struct"},"2:8165:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"2:8601:119":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"9:896:4139":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"2:50757:3858":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"17:12816:6005":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"17:10296:47562":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"18:481:4936":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"18:624:62029":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"1:9395:3415":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"16:6567:4535":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"1:4302:3108":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"1:12301:1464":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"9:863:4137":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"1:12299:912":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"1:6217:3270":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"2:8605:2350":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"2:3084:2515":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"1:8625:3259":{"crate_id":1,"path":["std","net","socket_addr","SocketAddrV6"],"kind":"struct"},"2:8556:131":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"2:7001:2748":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"2:10590:2874":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"5:6096:2607":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"17:11708:5710":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"17:11684:5709":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"18:736:4932":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"14:221:6471":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"2:6759:2731":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"5:2739:7538":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"17:11939:5758":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"6:4611:7044":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"5:1982:4101":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"16:6842:7900":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"6:5595:7224":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"17:12291:5817":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"1:4246:3104":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"16:4357:6254":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"16:2579:4739":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"2:2713:2648":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"2:48130:2607":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"17:12198:5808":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"2:48190:190":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"9:33:4229":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","LocalBuf"],"kind":"struct"},"1:8505:3195":{"crate_id":1,"path":["std","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"18:644:5369":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"2:46865:4001":{"crate_id":2,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"17:9108:8003":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"1:1889:8034":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"2:21772:171":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"6:1600:6732":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"16:8069:127":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"2:52568:7660":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"2:50518:3584":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"2:50305:3843":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"17:12955:6041":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"0:37:2207":{"crate_id":0,"path":["quote","format_ident"],"kind":"macro"},"17:9722:5478":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"18:548:140":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"1:8650:3478":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"6:5605:7231":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"1:5894:3271":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"1:4210:3366":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"2:21904:168":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"2:4672:10955":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"17:8475:4759":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"2:8613:2833":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"5:2955:2626":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"2:49033:67":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"5:1078:4099":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"2:46546:4396":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"16:4574:6260":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"9:800:6572":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"16:4786:6267":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"16:3188:6240":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"12:2053:3297":{"crate_id":12,"path":["hashbrown","set","Entry"],"kind":"enum"},"1:12320:1447":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"2:52802:3761":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"17:9193:62015":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"1:2903:207":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"1:3194:3236":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"1:11373:5215":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"1:4838:3367":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"17:9909:5479":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"1:3157:3461":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"2:48257:2607":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"5:36:4034":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"16:6676:4523":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"6:4185:6881":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"2:50765:3853":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"17:9805:4892":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"17:10245:8018":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"21:753:2986":{"crate_id":21,"path":["proc_macro2","imp","TokenTreeIter"],"kind":"enum"},"1:11947:4332":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"5:2919:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"5:1415:3290":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"2:49084:109":{"crate_id":2,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"2:52884:3746":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"2:49338:7936":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"2:49811:2881":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"6:62:39676":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"16:5203:5462":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"21:696:2228":{"crate_id":21,"path":["proc_macro2","fallback","Group"],"kind":"struct"},"6:5733:7299":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"20:0:1043":{"crate_id":20,"path":["proc_macro"],"kind":"module"},"1:3594:3197":{"crate_id":1,"path":["std","net","display_buffer","DisplayBuffer"],"kind":"struct"},"5:6895:2619":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"1:11847:3482":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"2:20023:60501":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"16:5737:4440":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"1:5011:3126":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"16:7211:4382":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"18:113:7996":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"4:0:2365":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"2:10825:3838":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"6:1695:6798":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"17:9791:7856":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"2:50753:3860":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"12:1003:3298":{"crate_id":12,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"17:8561:4831":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"5:6465:5183":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"18:707:3573":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"1:7150:8076":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"6:545:6636":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"1:8946:3330":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"17:12674:5979":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"17:8911:62026":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"21:830:1885":{"crate_id":21,"path":["proc_macro2","Span"],"kind":"struct"},"6:5749:7303":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"6:6981:7508":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"6:4212:6893":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"2:53928:3742":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"2:46805:3615":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"5:1405:3289":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"17:10445:4872":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"1:8904:3329":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"2:48814:2349":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"17:12361:5833":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"1:1967:3426":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"6:5672:7273":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"2:29507:2999":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"1:9536:3280":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"6:5876:7348":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"16:5494:4425":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"1:973:3292":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"2:50582:3586":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"17:13007:6050":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"16:6668:4718":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"16:7557:4520":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"1:3160:3462":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"12:762:2630":{"crate_id":12,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"20:183:62044":{"crate_id":20,"path":["proc_macro","bridge","closure","Closure"],"kind":"struct"},"2:2321:179":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"17:10796:4869":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"16:7497:4522":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"17:10520:5528":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"2:50773:3936":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"16:5793:4444":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"6:4096:6819":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"20:2233:4961":{"crate_id":20,"path":["proc_macro","bridge","DelimSpan"],"kind":"struct"},"5:7071:2630":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"2:47181:2765":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"16:4689:6264":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"2:47528:7935":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"5:6304:4039":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"2:49118:71":{"crate_id":2,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"1:8639:3476":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"2:2154:577":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"2:20249:2123":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"13:0:2364":{"crate_id":13,"path":["std_detect"],"kind":"module"},"20:651:3069":{"crate_id":20,"path":["proc_macro","diagnostic","MultiSpan"],"kind":"trait"},"17:9897:8014":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"2:9329:2886":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"2:20004:60447":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"6:4605:7041":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"2:48181:39305":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"17:10360:4905":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"16:2657:4699":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"17:11199:5600":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"2:10809:3835":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"1:2905:127":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"1:6921:54700":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"15:175:4323":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"16:2411:4704":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"17:1021:4890":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"17:10310:8021":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"12:274:7903":{"crate_id":12,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"1:9384:54685":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"2:49377:7937":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"1:8763:3179":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"17:10875:4815":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"13:220:6516":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"1:11921:7807":{"crate_id":1,"path":["std","personality","dwarf","eh","EHContext"],"kind":"struct"},"6:7166:7518":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"2:6430:2675":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"12:1845:2630":{"crate_id":12,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"2:49980:3312":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"16:2433:4388":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"6:4527:7003":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"1:10668:55120":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"17:10625:4757":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"16:6146:4561":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"17:13527:6210":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"1:3479:3163":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"6:1707:3488":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"2:11756:59326":{"crate_id":2,"path":["core","future","from_generator","GenFuture"],"kind":"struct"},"2:21200:7913":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"1:8076:3116":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"1:9347:3276":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"17:12781:6001":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"6:1500:6675":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"6:4768:7110":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"2:50190:3837":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"18:690:4928":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"2:56589:3873":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"6:507:6611":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"2:39298:3156":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"1:1938:3425":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"17:12884:6020":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"2:49851:2899":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"2:49346:3090":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"2:20423:16167":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"17:11149:5593":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"2:50330:3082":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"16:2341:4703":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"12:444:141":{"crate_id":12,"path":["hashbrown","map","HashMap"],"kind":"struct"},"6:1636:6762":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"16:7637:4531":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"2:47149:2762":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"2:22003:3888":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"1:12307:1430":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"1:9269:3269":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"1:5087:3118":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"17:10854:4832":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"16:3689:6246":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"5:6333:4041":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstBufDrop"],"kind":"struct"},"16:7890:4532":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"20:370:62041":{"crate_id":20,"path":["proc_macro","bridge","rpc","PanicMessage"],"kind":"enum"},"17:12118:5788":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"17:9526:4768":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"17:9433:47372":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"2:47120:2752":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"2:47111:2751":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"2:47129:2760":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"2:50607:3588":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"2:51917:7648":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"2:4126:2539":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"2:20236:3770":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"5:4945:3184":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"5:7088:4035":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"5:6958:4084":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"17:13059:6066":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"6:4551:7013":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"9:111:4196":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressorOxide"],"kind":"struct"},"2:2843:2581":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"6:4706:7087":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"1:11533:3280":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"5:3339:160":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"2:10200:5194":{"crate_id":2,"path":["core","slice","sort","CopyOnDrop"],"kind":"struct"},"1:2257:3215":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"17:11087:5583":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"17:8666:5466":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"16:6252:4573":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"17:13572:6216":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"5:217:4071":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"21:790:2229":{"crate_id":21,"path":["proc_macro2","imp","Literal"],"kind":"enum"},"2:2445:3200":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"16:7603:4542":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"1:5169:3083":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"2:51899:3756":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"2:8599:111":{"crate_id":2,"path":["core","fmt","macros","Debug"],"kind":"proc_derive"},"16:4217:6250":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"1:4117:3482":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"1:9370:3508":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"2:46346:2592":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"17:13354:6162":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"17:487:47310":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"2:5457:2753":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"2:4369:2845":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"1:11469:56883":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"1:353:3386":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"6:4191:6883":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"16:2465:4709":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"17:8526:4851":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"1:661:3427":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"5:1437:195":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"1:411:162":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"2:20298:3377":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"1:3314:3225":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"2:9304:2606":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"17:9283:47373":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"2:4003:3380":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"17:10233:47583":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"16:3457:5386":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"2:20042:60506":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"16:5388:4419":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"2:0:485":{"crate_id":2,"path":["core"],"kind":"module"},"6:4534:7004":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"5:6771:4075":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"2:47569:2742":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"6:4280:6925":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"17:12739:5989":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"21:902:2229":{"crate_id":21,"path":["proc_macro2","Literal"],"kind":"struct"},"1:9430:54687":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"2:54022:7707":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"16:3402:6242":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"1:2250:3431":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"2:4326:2844":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"18:515:4938":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"5:5562:4063":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"2:46778:3082":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"2:2812:2575":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"1:4403:3533":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"7:79:44885":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"18:491:7850":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"2:2833:2579":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"17:12730:5985":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"17:2916:4809":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"12:1120:4304":{"crate_id":12,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"2:2726:2541":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"1:996:3295":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"1:8864:3327":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"16:5949:4450":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"20:2604:1824":{"crate_id":20,"path":["proc_macro","TokenStream"],"kind":"struct"},"18:531:4939":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"20:2617:2607":{"crate_id":20,"path":["proc_macro","token_stream","IntoIter"],"kind":"struct"},"2:52545:7659":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"5:4627:3207":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"1:11682:7962":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"16:5981:4452":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"1:9261:2306":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"6:1714:6804":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"2:1643:3712":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"1:681:10951":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"17:11137:5592":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"6:1518:6683":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"2:50825:3938":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"17:10283:8020":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"5:6883:2618":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"20:2613:3059":{"crate_id":20,"path":["proc_macro","ExpandError"],"kind":"struct"},"12:861:3296":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"21:739:1824":{"crate_id":21,"path":["proc_macro2","imp","TokenStream"],"kind":"enum"},"17:8339:47313":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"17:11800:5723":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"13:108:61985":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"9:920:4136":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"16:6171:4562":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"6:4239:6908":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"17:12485:5835":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"1:1114:3299":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"17:11951:5760":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"1:9437:54664":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"2:2493:234":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"1:11514:7804":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"6:4621:7047":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"17:11853:5730":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"1:12316:718":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"9:586:4177":{"crate_id":9,"path":["miniz_oxide","deflate","core","SymFreq"],"kind":"struct"},"1:2029:181":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"2:3199:2544":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"1:8577:3530":{"crate_id":1,"path":["std","net","parser","AddrParseError"],"kind":"struct"},"2:2676:225":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"12:697:3291":{"crate_id":12,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"2:50987:3867":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"2:20701:3626":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"9:977:4140":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"5:6421:240":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"16:5780:4443":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"1:7860:55327":{"crate_id":1,"path":["std","thread","local","fast","DtorState"],"kind":"enum"},"2:46361:197":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"17:12980:6046":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"2:4693:59498":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"6:4361:6965":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"17:9501:4780":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"2:47521:2733":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"1:12318:1445":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"17:8295:47312":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"1:9574:3362":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"16:2825:4694":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"2:47559:2740":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"2:54062:7711":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"1:12298:366":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"1:2399:3441":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"5:3350:2306":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"18:609:62030":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"2:47038:5188":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"6:4346:6959":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"17:12148:5791":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"6:1643:6766":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"2:52416:3726":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"2:3319:68":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"6:5587:7219":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"20:2697:2119":{"crate_id":20,"path":["proc_macro","TokenTree"],"kind":"enum"},"1:6852:3471":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"16:5122:6272":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"2:11704:33083":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"21:0:2020":{"crate_id":21,"path":["proc_macro2"],"kind":"module"},"2:48139:3919":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"17:13100:6075":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"17:11500:5676":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"2:46835:4006":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"21:644:2994":{"crate_id":21,"path":["proc_macro2","parse","Cursor"],"kind":"struct"},"14:187:45616":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"6:7266:7533":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"16:4441:6257":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"2:53680:3755":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"2:21379:3902":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"20:2023:62036":{"crate_id":20,"path":["proc_macro","bridge","LitKind"],"kind":"enum"},"2:52200:3760":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"17:9422:8009":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"1:5064:3129":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"5:3107:2630":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"6:1608:6737":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"20:1202:193":{"crate_id":20,"path":["proc_macro","bridge","client","ProcMacro"],"kind":"enum"},"17:10642:4878":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"1:7849:3404":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"17:11761:5718":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"2:49912:2897":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"5:6830:2607":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"2:9591:2889":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"2:3980:103":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"6:7208:7519":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"17:12836:6013":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"9:592:4179":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressionStrategy"],"kind":"enum"},"6:131:39742":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"16:5815:4445":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"1:6137:5199":{"crate_id":1,"path":["std","sync","mpmc","array","Channel"],"kind":"struct"},"17:10182:5516":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"6:4224:6902":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"2:47305:2773":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"2:19976:3076":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"2:48481:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"16:6017:4566":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"2:20044:60503":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"2:48800:2347":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"6:4354:6963":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"2:4530:2963":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"16:4297:6252":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"5:5212:4039":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"17:1931:4766":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"2:2327:186":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"6:519:6616":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"12:822:3293":{"crate_id":12,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"2:2774:2569":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"1:8699:3537":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"16:2389:4387":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"17:11576:5693":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"1:6017:3502":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"5:677:228":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"6:1722:6808":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"2:49802:2883":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"2:2847:2582":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"1:12321:1444":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"5:4901:5169":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"16:4545:6259":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"9:622:4180":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLFlush"],"kind":"enum"},"1:12266:56578":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"17:8631:5465":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"2:20451:3623":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"11:44:4291":{"crate_id":11,"path":["adler","Adler32"],"kind":"struct"},"6:4300:6935":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"2:46401:196":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"2:21110:3885":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"6:4540:7007":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"17:11368:5645":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"17:12073:5779":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"2:2673:222":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"2:2739:2650":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"14:31:8067":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"2:50022:2886":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"2:2827:2578":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"17:10476:47584":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"16:3010:4696":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"17:8596:5464":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"6:1511:6680":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"12:1029:3299":{"crate_id":12,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"2:46904:3845":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"2:10786:3834":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"17:10321:4904":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"16:2631:4700":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"1:5660:3145":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"2:50172:3836":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"2:46487:2593":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"1:3486:3162":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"17:13518:6206":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"1:8713:3476":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"2:2290:124":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"5:5977:2961":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"16:6472:4321":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"6:6554:7496":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"2:48671:3925":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"1:10445:8038":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"1:7057:3375":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"16:5447:4422":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"2:2487:147":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"1:8705:3487":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"20:2609:2510":{"crate_id":20,"path":["proc_macro","LexError"],"kind":"struct"},"8:0:2366":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"2:2758:2570":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"5:6754:4074":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"1:5574:119":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"16:7980:4397":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"6:4274:6923":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"2:46443:198":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"20:436:5161":{"crate_id":20,"path":["proc_macro","bridge","scoped_cell","replace","PutBackOnDrop"],"kind":"struct"},"2:50926:202":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"1:628:3079":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"17:11436:5647":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"6:592:6661":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"6:6572:7499":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"2:2768:2566":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"16:6137:4513":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"2:51877:3752":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"1:4505:3484":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"21:105:2995":{"crate_id":21,"path":["proc_macro2","rcvec","RcVec"],"kind":"struct"},"17:9712:5477":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"1:3422:3158":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"17:13168:6096":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"6:4231:6906":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"17:10497:47585":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"17:9446:8010":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"2:11262:111":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"2:50296:3842":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"6:6975:7506":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"2:2856:2584":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"5:3430:5169":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"17:9165:62024":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"21:748:7844":{"crate_id":21,"path":["proc_macro2","imp","DeferredTokenStream"],"kind":"struct"},"17:10108:4812":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"1:1887:8033":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"17:13091:6074":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"2:51029:2552":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"1:4585:3492":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"17:13436:6189":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"2:21184:3692":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"2:21640:175":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"17:10385:4848":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"15:214:4328":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"1:4324:3111":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"16:7909:4534":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"20:2574:4954":{"crate_id":20,"path":["proc_macro","diagnostic","Children"],"kind":"struct"},"16:3854:6248":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"17:11974:5769":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"2:46553:59378":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"12:300:4308":{"crate_id":12,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"2:48105:2138":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"2:11056:3574":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"2:50741:3855":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"5:6:664":{"crate_id":5,"path":["alloc","format"],"kind":"macro"},"2:47320:2774":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"2:20706:16185":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"2:50008:3218":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"17:10121:4813":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"6:4698:7082":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"17:1903:47401":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"16:7942:4596":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"2:46605:3631":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"5:3764:5169":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"16:6059:4684":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"1:10756:3149":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"16:6719:4716":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"17:12046:5777":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"17:11661:5705":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"1:1632:2627":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"5:1312:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"2:8545:207":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"6:1505:6677":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"17:9671:4805":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"1:11585:5218":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"2:3162:134":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"2:21163:7543":{"crate_id":2,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"2:12012:3077":{"crate_id":2,"path":["core","const_closure","ConstFnMutClosure"],"kind":"struct"},"2:2938:2589":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"16:153:4386":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"12:1138:3300":{"crate_id":12,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"6:501:6608":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"2:8607:2348":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"2:46911:4003":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"6:6538:7490":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"6:575:6653":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"9:649:4181":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLStatus"],"kind":"enum"},"1:574:3416":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"1:944:2961":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"21:702:2214":{"crate_id":21,"path":["proc_macro2","fallback","Ident"],"kind":"struct"},"16:7044:4375":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"0:0:1072":{"crate_id":0,"path":["quote"],"kind":"module"},"6:5480:7167":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"17:12103:5784":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"1:9213:183":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"2:46944:3619":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"6:5554:7206":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"1:3192:3235":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"16:2842:4454":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"6:1654:6774":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"6:5727:7296":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"2:1760:3960":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"5:6023:5169":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"16:6034:4567":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"2:53222:3747":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"20:2565:3067":{"crate_id":20,"path":["proc_macro","diagnostic","Diagnostic"],"kind":"struct"},"6:4745:7102":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"20:2712:2228":{"crate_id":20,"path":["proc_macro","Group"],"kind":"struct"},"6:495:6605":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"1:5709:3148":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"17:10973:5563":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"1:11670:8077":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"17:9601:4771":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"16:7452:195":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"1:910:2607":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"2:20442:2123":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"1:7875:3414":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"2:54004:3727":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"6:1686:6792":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"2:46963:3914":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"16:7117:4379":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"1:12324:1091":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"2:52370:3722":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"6:7237:7526":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"17:9631:4765":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"16:2793:4695":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"2:6819:2148":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"2:1552:3207":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"2:4262:3780":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"6:4804:7132":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"6:1887:41050":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"1:887:2306":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"2:21805:2879":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"21:772:2228":{"crate_id":21,"path":["proc_macro2","imp","Group"],"kind":"enum"},"2:50936:208":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"17:12514:5855":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"1:12313:720":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"20:2525:7847":{"crate_id":20,"path":["proc_macro","bridge","ExpnGlobals"],"kind":"struct"},"17:9778:4837":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"2:2788:2574":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"1:8363:2731":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"2:54077:7712":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"2:46975:3915":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"5:1212:3299":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"1:4766:3190":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"1:10495:3316":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"6:4367:6967":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"2:54218:7719":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"1:6677:2734":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"1:7786:5209":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"6:4489:3494":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"20:2320:2214":{"crate_id":20,"path":["proc_macro","bridge","Ident"],"kind":"struct"},"1:9331:3275":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"12:815:3292":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"6:7214:7520":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"21:781:2214":{"crate_id":21,"path":["proc_macro2","imp","Ident"],"kind":"enum"},"16:6704:4537":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"16:5614:4434":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"6:5582:7218":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"6:4427:6979":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"2:29547:3714":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"16:3026:5382":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"6:5861:7337":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"2:53820:3759":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"1:8093:3117":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"2:49877:2749":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"2:1636:576":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"1:5506:187":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"2:21057:3883":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"5:6836:2607":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"12:2069:3298":{"crate_id":12,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"2:21838:170":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"2:53008:3738":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"1:8066:3384":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"2:2800:2573":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"5:1387:3287":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"2:46560:2843":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"2:53758:3739":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"2:20964:2123":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"17:8368:4749":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"17:11330:5637":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"2:58320:7727":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"1:9277:2607":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"16:7357:4538":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"2:21275:7550":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"6:4737:7100":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"17:9350:4888":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"11:0:2369":{"crate_id":11,"path":["adler"],"kind":"module"},"1:4262:3106":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"2:47098:2759":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"1:12323:1501":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"5:3015:2629":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"2:51703:7646":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"17:12550:5886":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"2:54031:7708":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"2:2681:2540":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"17:9263:8006":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"17:9118:62011":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"2:47219:2754":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"1:6544:203":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"1:4425:3535":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"2:2484:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"16:2557:4688":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"17:13382:6169":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"}},"external_crates":{"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"10":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"20":{"name":"proc_macro","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"22":{"name":"unicode_ident","html_root_url":null},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"21":{"name":"proc_macro2","html_root_url":"https://docs.rs/proc-macro2/1.0.50/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":24}