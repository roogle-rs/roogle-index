{"root":"0:0:1068","crate_version":"1.0.21","includes_private":false,"index":{"2:2946:184":{"id":"2:2946:184","crate_id":2,"name":"PartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2948:998","2:2949:827","2:2950:793","2:2951:714","2:2952:697"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2900:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:410:1634":{"id":"0:410:1634","crate_id":0,"name":"to_tokens","span":{"filename":"src/to_tokens.rs","begin":[139,0],"end":[156,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13803:59993":{"id":"2:13803:59993","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"1:15744:2387"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeUnicode","id":"2:50030:3853","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:9127:2593":{"id":"2:9127:2593","crate_id":2,"name":"TrustedLen","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8844:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:2905:124":{"id":"2:2905:124","crate_id":2,"name":"Eq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2900:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3148:75":{"id":"2:3148:75","crate_id":2,"name":"AsRef","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3150:306"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:484:1939":{"id":"0:484:1939","crate_id":0,"name":"push_le","span":{"filename":"src/runtime.rs","begin":[349,0],"end":[349,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:512:1919":{"id":"0:512:1919","crate_id":0,"name":"push_semi","span":{"filename":"src/runtime.rs","begin":[363,0],"end":[363,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:77":{"id":"0:77","crate_id":0,"name":null,"span":{"filename":"src/ident_fragment.rs","begin":[58,0],"end":[69,1]},"visibility":{"restricted":{"parent":"0:49:1633","path":"::ident_fragment"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"IdentFragment","id":"0:63:1638","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ToOwned","id":"5:844:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["span"],"trait":{"name":"IdentFragment","id":"0:63:1638","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:853:108","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:79:1875","0:80:661"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:164:1636":{"id":"0:164:1636","crate_id":0,"name":"__private","span":{"filename":"src/runtime.rs","begin":[1,0],"end":[438,1]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(hidden)]","#[path = \"runtime.rs\"]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:207:1632","0:184","0:188","0:191:1906","0:193:1905","0:431:1894","0:286:1911","0:287:1964","0:288:1961","0:289:2010","0:293:1909","0:294:1962","0:295:1959","0:304:2008","0:440:1921","0:441:1970","0:442:1922","0:443:1971","0:444:1923","0:445:1972","0:446:1924","0:447:1973","0:448:1925","0:449:1974","0:450:1926","0:451:1975","0:452:1927","0:453:1976","0:454:1928","0:455:1977","0:456:1929","0:457:1978","0:458:1920","0:459:1969","0:460:1910","0:461:1963","0:462:1917","0:463:1966","0:464:1930","0:465:1979","0:466:1931","0:467:1980","0:468:1918","0:469:1967","0:470:1932","0:471:1981","0:472:1933","0:473:1982","0:474:1934","0:475:1983","0:476:1935","0:477:1984","0:478:1936","0:479:1985","0:480:1937","0:481:1986","0:482:1938","0:483:1987","0:484:1939","0:485:1988","0:486:1940","0:487:1989","0:488:1941","0:489:1990","0:490:1942","0:491:1991","0:492:1943","0:493:1992","0:494:1944","0:495:1993","0:496:1945","0:497:1994","0:498:1916","0:499:1965","0:500:1946","0:501:1995","0:502:1947","0:503:1996","0:504:1948","0:505:1997","0:506:1949","0:507:1998","0:508:1950","0:509:1999","0:510:1951","0:511:2000","0:512:1919","0:513:1968","0:514:1952","0:515:2001","0:516:1953","0:517:2002","0:518:1954","0:519:2003","0:520:1955","0:521:2004","0:522:1956","0:523:2005","0:524:1957","0:525:2006","0:526:1958","0:527:2007","0:315:1960","0:316:2009","0:317:2202","0:528:2205","0:187"],"is_stripped":true}},"2:3489:2568":{"id":"2:3489:2568","crate_id":2,"name":"Shl","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3491:181","2:3492:1235"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13769:59984":{"id":"2:13769:59984","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"20:808:3027":{"id":"20:808:3027","crate_id":20,"name":"MultiSpan","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["20:809:61388"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13744:55742":{"id":"2:13744:55742","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:15744:2387","self::pattern":"2:13302:2949","str::splitn":"1:15750:2392"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitN","id":"2:49835:2861","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:2943","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13312:2943","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13327:3555","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6650:3038":{"id":"1:6650:3038","crate_id":1,"name":"IntoRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6651:54849"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8606:2726":{"id":"2:8606:2726","crate_id":2,"name":"Product","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8608:2698"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8167:2710":{"id":"2:8167:2710","crate_id":2,"name":"Step","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8168:58857","2:8169:58858","2:8170:58855","2:8171:58853","2:8172:58859","2:8173:58856","2:8174:58854"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2867:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2946:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:417":{"id":"0:417","crate_id":0,"name":null,"span":{"filename":"src/to_tokens.rs","begin":[139,0],"end":[156,1]},"visibility":{"restricted":{"parent":"0:82:1634","path":"::to_tokens"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["to_token_stream","into_token_stream"],"trait":{"name":"ToTokens","id":"0:117:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u16"},"items":["0:418:1634"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:472:1933":{"id":"0:472:1933","crate_id":0,"name":"push_dot3","span":{"filename":"src/runtime.rs","begin":[343,0],"end":[343,52]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:522:1956":{"id":"0:522:1956","crate_id":0,"name":"push_star","span":{"filename":"src/runtime.rs","begin":[368,0],"end":[368,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:3509:2572":{"id":"2:3509:2572","crate_id":2,"name":"BitXorAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3511:358"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8643:151":{"id":"2:8643:151","crate_id":2,"name":"IntoIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8644:2130","2:8645:2591","2:8646:769"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10550:189":{"id":"2:10550:189","crate_id":2,"name":"Pointer","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10551:661"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:153":{"id":"0:153","crate_id":0,"name":null,"span":{"filename":"src/to_tokens.rs","begin":[177,0],"end":[181,1]},"visibility":{"restricted":{"parent":"0:82:1634","path":"::to_tokens"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["to_token_stream","into_token_stream"],"trait":{"name":"ToTokens","id":"0:117:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Ident","id":"21:1066:2206","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:154:1634"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13794:1961":{"id":"2:13794:1961","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"`FromStr`":"2:13241:2507","FromStr::Err":"2:13241:2507"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47875:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"name":"FromStr","id":"2:13241:2507","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:13241:2507","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:528:2205":{"id":"0:528:2205","crate_id":0,"name":"IdentFragmentAdapter","span":{"filename":"src/runtime.rs","begin":[402,0],"end":[402,57]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IdentFragment","id":"0:63:1638","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":false,"fields":["0:531:1544"],"impls":[]}},"2:13700:55729":{"id":"2:13700:55729","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"1:15750:2392"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:49:1633":{"id":"0:49:1633","crate_id":0,"name":"ident_fragment","span":{"filename":"src/ident_fragment.rs","begin":[1,0],"end":[86,56]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:63:1638"],"is_stripped":true}},"0:414:1634":{"id":"0:414:1634","crate_id":0,"name":"to_tokens","span":{"filename":"src/to_tokens.rs","begin":[139,0],"end":[156,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:369:1874":{"id":"0:369:1874","crate_id":0,"name":"quote_spanned","span":{"filename":"src/lib.rs","begin":[612,0],"end":[616,1]},"visibility":"public","docs":"Same as `quote!`, but applies a given span to all tokens originating within\nthe macro invocation.\n\n<br>\n\n# Syntax\n\nA span expression of type [`Span`], followed by `=>`, followed by the tokens\nto quote. The span expression should be brief &mdash; use a variable for\nanything more than a few characters. There should be no space before the\n`=>` token.\n\n[`Span`]: https://docs.rs/proc-macro2/1.0/proc_macro2/struct.Span.html\n\n```\n# use proc_macro2::Span;\n# use quote::quote_spanned;\n#\n# const IGNORE_TOKENS: &'static str = stringify! {\nlet span = /* ... */;\n# };\n# let span = Span::call_site();\n# let init = 0;\n\n// On one line, use parentheses.\nlet tokens = quote_spanned!(span=> Box::into_raw(Box::new(#init)));\n\n// On multiple lines, place the span at the top and use braces.\nlet tokens = quote_spanned! {span=>\n    Box::into_raw(Box::new(#init))\n};\n```\n\nThe lack of space before the `=>` should look jarring to Rust programmers\nand this is intentional. The formatting is designed to be visibly\noff-balance and draw the eye a particular way, due to the span expression\nbeing evaluated in the context of the procedural macro and the remaining\ntokens being evaluated in the generated code.\n\n<br>\n\n# Hygiene\n\nAny interpolated tokens preserve the `Span` information provided by their\n`ToTokens` implementation. Tokens that originate within the `quote_spanned!`\ninvocation are spanned with the given span argument.\n\n<br>\n\n# Example\n\nThe following procedural macro code uses `quote_spanned!` to assert that a\nparticular Rust type implements the [`Sync`] trait so that references can be\nsafely shared between threads.\n\n[`Sync`]: https://doc.rust-lang.org/std/marker/trait.Sync.html\n\n```\n# use quote::{quote_spanned, TokenStreamExt, ToTokens};\n# use proc_macro2::{Span, TokenStream};\n#\n# struct Type;\n#\n# impl Type {\n#     fn span(&self) -> Span {\n#         Span::call_site()\n#     }\n# }\n#\n# impl ToTokens for Type {\n#     fn to_tokens(&self, _tokens: &mut TokenStream) {}\n# }\n#\n# let ty = Type;\n# let call_site = Span::call_site();\n#\nlet ty_span = ty.span();\nlet assert_sync = quote_spanned! {ty_span=>\n    struct _AssertSync where #ty: Sync;\n};\n```\n\nIf the assertion fails, the user will see an error like the following. The\ninput span of their type is highlighted in the error.\n\n```text\nerror[E0277]: the trait bound `*const (): std::marker::Sync` is not satisfied\n  --> src/main.rs:10:21\n   |\n10 |     static ref PTR: *const () = &();\n   |                     ^^^^^^^^^ `*const ()` cannot be shared between threads safely\n```\n\nIn this example it is important for the where-clause to be spanned with the\nline/column information of the user's input type so that error messages are\nplaced appropriately by the compiler.","links":{},"attrs":["#[cfg(doc)]","#[macro_export]"],"deprecation":null,"kind":"macro","inner":"macro_rules! quote_spanned {\n    ($span:expr=> $($tt:tt)*) => { ... };\n}"},"0:383":{"id":"0:383","crate_id":0,"name":null,"span":{"filename":"src/ident_fragment.rs","begin":[85,0],"end":[85,48]},"visibility":{"restricted":{"parent":"0:49:1633","path":"::ident_fragment"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["span"],"trait":{"name":"IdentFragment","id":"0:63:1638","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"bool"},"items":["0:384:661"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3446:2514":{"id":"2:3446:2514","crate_id":2,"name":"AddAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3448:267"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5432:3132":{"id":"1:5432:3132","crate_id":1,"name":"OsStringExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5433:55289","1:5434:4080"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10355:2115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:119:2250":{"id":"0:119:2250","crate_id":0,"name":"to_token_stream","span":{"filename":"src/to_tokens.rs","begin":[59,4],"end":[63,5]},"visibility":"default","docs":"Convert `self` directly into a `TokenStream` object.\n\nThis method is implicitly implemented using `to_tokens`, and acts as a\nconvenience method for consumers of the `ToTokens` trait.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13732:55738":{"id":"2:13732:55738","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"prim@char":"1:15744:2387","str::split":"1:15750:2392","self::pattern":"2:13302:2949","`DoubleEndedIterator`":"2:8687:120"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplit","id":"2:49731:2867","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:2943","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13312:2943","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13327:3555","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:418:1634":{"id":"0:418:1634","crate_id":0,"name":"to_tokens","span":{"filename":"src/to_tokens.rs","begin":[139,0],"end":[156,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:0:1068":{"id":"0:0:1068","crate_id":0,"name":"quote","span":{"filename":"src/lib.rs","begin":[1,0],"end":[1434,1]},"visibility":"public","docs":"[![github]](https://github.com/dtolnay/quote)&ensp;[![crates-io]](https://crates.io/crates/quote)&ensp;[![docs-rs]](https://docs.rs/quote)\n\n[github]: https://img.shields.io/badge/github-8da0cb?style=for-the-badge&labelColor=555555&logo=github\n[crates-io]: https://img.shields.io/badge/crates.io-fc8d62?style=for-the-badge&labelColor=555555&logo=rust\n[docs-rs]: https://img.shields.io/badge/docs.rs-66c2a5?style=for-the-badge&labelColor=555555&logo=docs.rs\n\n<br>\n\nThis crate provides the [`quote!`] macro for turning Rust syntax tree data\nstructures into tokens of source code.\n\n[`quote!`]: macro.quote.html\n\nProcedural macros in Rust receive a stream of tokens as input, execute\narbitrary Rust code to determine how to manipulate those tokens, and produce\na stream of tokens to hand back to the compiler to compile into the caller's\ncrate. Quasi-quoting is a solution to one piece of that &mdash; producing\ntokens to return to the compiler.\n\nThe idea of quasi-quoting is that we write *code* that we treat as *data*.\nWithin the `quote!` macro, we can write what looks like code to our text\neditor or IDE. We get all the benefits of the editor's brace matching,\nsyntax highlighting, indentation, and maybe autocompletion. But rather than\ncompiling that as code into the current crate, we can treat it as data, pass\nit around, mutate it, and eventually hand it back to the compiler as tokens\nto compile into the macro caller's crate.\n\nThis crate is motivated by the procedural macro use case, but is a\ngeneral-purpose Rust quasi-quoting library and is not specific to procedural\nmacros.\n\n```toml\n[dependencies]\nquote = \"1.0\"\n```\n\n<br>\n\n# Example\n\nThe following quasi-quoted block of code is something you might find in [a]\nprocedural macro having to do with data structure serialization. The `#var`\nsyntax performs interpolation of runtime variables into the quoted tokens.\nCheck out the documentation of the [`quote!`] macro for more detail about\nthe syntax. See also the [`quote_spanned!`] macro which is important for\nimplementing hygienic procedural macros.\n\n[a]: https://serde.rs/\n[`quote_spanned!`]: macro.quote_spanned.html\n\n```\n# use quote::quote;\n#\n# let generics = \"\";\n# let where_clause = \"\";\n# let field_ty = \"\";\n# let item_ty = \"\";\n# let path = \"\";\n# let value = \"\";\n#\nlet tokens = quote! {\n    struct SerializeWith #generics #where_clause {\n        value: &'a #field_ty,\n        phantom: core::marker::PhantomData<#item_ty>,\n    }\n\n    impl #generics serde::Serialize for SerializeWith #generics #where_clause {\n        fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>\n        where\n            S: serde::Serializer,\n        {\n            #path(self.value, serializer)\n        }\n    }\n\n    SerializeWith {\n        value: #value,\n        phantom: core::marker::PhantomData::<#item_ty>,\n    }\n};\n```","links":{},"attrs":["#![doc(html_root_url = \"https://docs.rs/quote/1.0.21\")]","#![allow(clippy :: doc_markdown, clippy :: missing_errors_doc, clippy ::\nmissing_panics_doc, clippy :: module_name_repetitions, clippy ::\nwrong_self_convention,)]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:337","0:340","0:343","0:47:2199","0:368:1068","0:369:1874"],"is_stripped":false}},"0:476:1935":{"id":"0:476:1935","crate_id":0,"name":"push_eq","span":{"filename":"src/runtime.rs","begin":[345,0],"end":[345,40]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:2936:177":{"id":"2:2936:177","crate_id":2,"name":"Ord","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2937:416","2:2938:2639","2:2939:2640","2:2940:2641"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"2:2905:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2946:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:401":{"id":"0:401","crate_id":0,"name":null,"span":{"filename":"src/ident_fragment.rs","begin":[86,0],"end":[86,55]},"visibility":{"restricted":{"parent":"0:49:1633","path":"::ident_fragment"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["span"],"trait":{"name":"IdentFragment","id":"0:63:1638","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"usize"},"items":["0:402:661"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:9504:2537":{"id":"2:9504:2537","crate_id":2,"name":"RefUnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13327:3555":{"id":"2:13327:3555","crate_id":2,"name":"ReverseSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:13329:2643","2:13330:59585","2:13331:59586"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Searcher","id":"2:13321:3553","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:510:1951":{"id":"0:510:1951","crate_id":0,"name":"push_fat_arrow","span":{"filename":"src/runtime.rs","begin":[362,0],"end":[362,58]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:69:661":{"id":"0:69:661","crate_id":0,"name":"fmt","span":{"filename":"src/ident_fragment.rs","begin":[28,4],"end":[30,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10493:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10482:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:235:2290":{"id":"0:235:2290","crate_id":0,"name":"RepToTokensExt","span":{"filename":"src/runtime.rs","begin":[66,4],"end":[77,5]},"visibility":"public","docs":"Extension trait providing the `quote_into_iter` method for\nnon-iterable types. These types interpolate the same value in each\niteration of the repetition.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:236:923","0:237:1891"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:445:1972":{"id":"0:445:1972","crate_id":0,"name":"push_and_spanned","span":{"filename":"src/runtime.rs","begin":[329,0],"end":[329,42]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:999:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:429":{"id":"0:429","crate_id":0,"name":null,"span":{"filename":"src/to_tokens.rs","begin":[139,0],"end":[156,1]},"visibility":{"restricted":{"parent":"0:82:1634","path":"::to_tokens"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["to_token_stream","into_token_stream"],"trait":{"name":"ToTokens","id":"0:117:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"f64"},"items":["0:430:1634"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:286:1911":{"id":"0:286:1911","crate_id":0,"name":"push_group","span":{"filename":"src/runtime.rs","begin":[167,0],"end":[169,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["delimiter",{"kind":"resolved_path","inner":{"name":"Delimiter","id":"21:1024:1912","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["inner",{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:232:1891":{"id":"0:232:1891","crate_id":0,"name":"quote_into_iter","span":{"filename":"src/runtime.rs","begin":[56,8],"end":[58,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"tuple","inner":[{"kind":"generic","inner":"Self"},{"kind":"resolved_path","inner":{"name":"HasIter","id":"0:191:1906","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13772:59986":{"id":"2:13772:59986","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:459:1969":{"id":"0:459:1969","crate_id":0,"name":"push_colon_spanned","span":{"filename":"src/runtime.rs","begin":[336,0],"end":[336,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:999:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:148:1634":{"id":"0:148:1634","crate_id":0,"name":"to_tokens","span":{"filename":"src/to_tokens.rs","begin":[159,4],"end":[161,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13738:59976":{"id":"2:13738:59976","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"prim@char":"1:15744:2387","self::pattern":"2:13302:2949","str::split_terminator":"1:15750:2392","str::split":"1:15750:2392"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitTerminator","id":"2:49781:3840","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:2943","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13312:2943","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13327:3555","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:497:1994":{"id":"0:497:1994","crate_id":0,"name":"push_or_or_spanned","span":{"filename":"src/runtime.rs","begin":[355,0],"end":[355,50]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:999:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:34:2133":{"id":"0:34:2133","crate_id":0,"name":"append_separated","span":{"filename":"src/ext.rs","begin":[77,4],"end":[89,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["iter",{"kind":"generic","inner":"I"}],["op",{"kind":"generic","inner":"U"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8643:151","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8643:151","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"ToTokens","id":"0:117:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"ToTokens","id":"0:117:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:240:2296":{"id":"0:240:2296","crate_id":0,"name":"RepAsIteratorExt","span":{"filename":"src/runtime.rs","begin":[83,4],"end":[87,5]},"visibility":"public","docs":"Extension trait providing the `quote_into_iter` method for types that\ncan be referenced as an iterator.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:242:2298","0:243:1891"],"generics":{"params":[{"name":"'q","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3442:2558":{"id":"2:3442:2558","crate_id":2,"name":"Neg","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3443:181","2:3444:914"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:503:1996":{"id":"0:503:1996","crate_id":0,"name":"push_rarrow_spanned","span":{"filename":"src/runtime.rs","begin":[358,0],"end":[358,52]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:999:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:13707:59974":{"id":"2:13707:59974","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]","#[allow(deprecated)]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LinesAny","id":"2:49977:3848","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:520:1955":{"id":"0:520:1955","crate_id":0,"name":"push_shr_eq","span":{"filename":"src/runtime.rs","begin":[367,0],"end":[367,56]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:23357:15905":{"id":"2:23357:15905","crate_id":2,"name":"ToBitMask","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23358:6361","2:23359:59170","2:23360:59171"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:23350:2115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"5:5906:4005":{"id":"5:5906:4005","crate_id":5,"name":"Concat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5908:181","5:5909:433"],"generics":{"params":[{"name":"Item","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Item"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:289:2010":{"id":"0:289:2010","crate_id":0,"name":"parse_spanned","span":{"filename":"src/runtime.rs","begin":[187,0],"end":[190,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:999:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:8639:136":{"id":"2:8639:136","crate_id":2,"name":"FromIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8641:685"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:18:1637":{"id":"0:18:1637","crate_id":0,"name":"TokenStreamExt","span":{"filename":"src/ext.rs","begin":[8,0],"end":[57,1]},"visibility":"public","docs":"TokenStream extension trait with methods for appending tokens.\n\nThis trait is sealed and cannot be implemented outside of the `quote` crate.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:19:2118","0:21:2128","0:23:2133","0:26:2137"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"private::Sealed","id":"0:44:2115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:29"]}},"2:13688:55709":{"id":"2:13688:55709","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:15761:2401"},"attrs":["#[stable(feature = \"str_as_mut_ptr\", since = \"1.36.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:488:1941":{"id":"0:488:1941","crate_id":0,"name":"push_mul_eq","span":{"filename":"src/runtime.rs","begin":[351,0],"end":[351,52]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:40:2114":{"id":"0:40:2114","crate_id":0,"name":"private","span":{"filename":"src/ext.rs","begin":[104,0],"end":[104,11]},"visibility":{"restricted":{"parent":"0:4:1632","path":"::ext"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:44:2115"],"is_stripped":true}},"2:3458:2561":{"id":"2:3458:2561","crate_id":2,"name":"DivAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3460:560"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:6574:3053":{"id":"1:6574:3053","crate_id":1,"name":"ChildExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6575:7322","1:6576:57299"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10355:2115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:136":{"id":"0:136","crate_id":0,"name":null,"span":{"filename":"src/to_tokens.rs","begin":[101,0],"end":[105,1]},"visibility":{"restricted":{"parent":"0:82:1634","path":"::to_tokens"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"ToTokens","id":"0:117:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["to_token_stream","into_token_stream"],"trait":{"name":"ToTokens","id":"0:117:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Rc","id":"5:5388:200","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:138:1634"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3086:3527":{"id":"2:3086:3527","crate_id":2,"name":"FloatToInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"Int","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:3085:2115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3352:2215":{"id":"2:3352:2215","crate_id":2,"name":"Sized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:511:2000":{"id":"0:511:2000","crate_id":0,"name":"push_fat_arrow_spanned","span":{"filename":"src/runtime.rs","begin":[362,0],"end":[362,58]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:999:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"5:5910:4007":{"id":"5:5910:4007","crate_id":5,"name":"Join","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5912:181","5:5913:2355"],"generics":{"params":[{"name":"Separator","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8844:157":{"id":"2:8844:157","crate_id":2,"name":"Iterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8845:2130","2:8846:923","2:8847:2652","2:8850:2653","2:8851:496","2:8853:2354","2:8856:2654","2:8857:2655","2:8858:2656","2:8859:2657","2:8861:2658","2:8863:2659","2:8864:2660","2:8866:842","2:8869:2661","2:8876:2662","2:8878:2347","2:8881:2142","2:8882:2663","2:8883:2664","2:8885:2665","2:8887:2666","2:8890:1310","2:8891:2667","2:8892:2668","2:8896:2669","2:8899:2670","2:8900:2671","2:8901:2672","2:8903:2673","2:8904:2305","2:8906:2674","2:8909:2675","2:8911:2676","2:8921:2677","2:8936:2678","2:8938:2679","2:8942:2680","2:8951:2352","2:8954:2681","2:8956:2682","2:8959:277","2:8966:295","2:8973:2683","2:8980:2684","2:8989:2685","2:8999:1015","2:9006:2686","2:9013:2639","2:9014:2640","2:9015:2687","2:9027:2688","2:9034:2689","2:9046:2690","2:9053:2691","2:9054:2692","2:9059:2693","2:9062:2694","2:9065:2695","2:9066:2696","2:9068:2697","2:9070:2698","2:9072:416","2:9075:2699","2:9078:998","2:9081:2700","2:9084:605","2:9087:2701","2:9090:908","2:9092:827","2:9094:793","2:9096:714","2:9098:697","2:9100:2702","2:9101:2703","2:9109:2704"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:236:923":{"id":"0:236:923","crate_id":0,"name":"next","span":{"filename":"src/runtime.rs","begin":[70,8],"end":[72,9]},"visibility":"default","docs":"Pretend to be an iterator for the purposes of `quote_into_iter`.\nThis allows repeated calls to `quote_into_iter` to continue\ncorrectly returning DoesNotHaveIter.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10546:2340":{"id":"2:10546:2340","crate_id":2,"name":"LowerHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10547:661"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:47:2199":{"id":"0:47:2199","crate_id":0,"name":"format_ident","span":{"filename":"src/format.rs","begin":[111,0],"end":[125,1]},"visibility":"public","docs":"Formatting macro for constructing `Ident`s.\n\n<br>\n\n# Syntax\n\nSyntax is copied from the [`format!`] macro, supporting both positional and\nnamed arguments.\n\nOnly a limited set of formatting traits are supported. The current mapping\nof format types to traits is:\n\n* `{}` ⇒ [`IdentFragment`]\n* `{:o}` ⇒ [`Octal`](std::fmt::Octal)\n* `{:x}` ⇒ [`LowerHex`](std::fmt::LowerHex)\n* `{:X}` ⇒ [`UpperHex`](std::fmt::UpperHex)\n* `{:b}` ⇒ [`Binary`](std::fmt::Binary)\n\nSee [`std::fmt`] for more information.\n\n<br>\n\n# IdentFragment\n\nUnlike `format!`, this macro uses the [`IdentFragment`] formatting trait by\ndefault. This trait is like `Display`, with a few differences:\n\n* `IdentFragment` is only implemented for a limited set of types, such as\n   unsigned integers and strings.\n* [`Ident`] arguments will have their `r#` prefixes stripped, if present.\n\n[`IdentFragment`]: crate::IdentFragment\n[`Ident`]: proc_macro2::Ident\n\n<br>\n\n# Hygiene\n\nThe [`Span`] of the first `Ident` argument is used as the span of the final\nidentifier, falling back to [`Span::call_site`] when no identifiers are\nprovided.\n\n```\n# use quote::format_ident;\n# let ident = format_ident!(\"Ident\");\n// If `ident` is an Ident, the span of `my_ident` will be inherited from it.\nlet my_ident = format_ident!(\"My{}{}\", ident, \"IsCool\");\nassert_eq!(my_ident, \"MyIdentIsCool\");\n```\n\nAlternatively, the span can be overridden by passing the `span` named\nargument.\n\n```\n# use quote::format_ident;\n# const IGNORE_TOKENS: &'static str = stringify! {\nlet my_span = /* ... */;\n# };\n# let my_span = proc_macro2::Span::call_site();\nformat_ident!(\"MyIdent\", span = my_span);\n```\n\n[`Span`]: proc_macro2::Span\n[`Span::call_site`]: proc_macro2::Span::call_site\n\n<p><br></p>\n\n# Panics\n\nThis method will panic if the resulting formatted string is not a valid\nidentifier.\n\n<br>\n\n# Examples\n\nComposing raw and non-raw identifiers:\n```\n# use quote::format_ident;\nlet my_ident = format_ident!(\"My{}\", \"Ident\");\nassert_eq!(my_ident, \"MyIdent\");\n\nlet raw = format_ident!(\"r#Raw\");\nassert_eq!(raw, \"r#Raw\");\n\nlet my_ident_raw = format_ident!(\"{}Is{}\", my_ident, raw);\nassert_eq!(my_ident_raw, \"MyIdentIsRaw\");\n```\n\nInteger formatting options:\n```\n# use quote::format_ident;\nlet num: u32 = 10;\n\nlet decimal = format_ident!(\"Id_{}\", num);\nassert_eq!(decimal, \"Id_10\");\n\nlet octal = format_ident!(\"Id_{:o}\", num);\nassert_eq!(octal, \"Id_12\");\n\nlet binary = format_ident!(\"Id_{:b}\", num);\nassert_eq!(binary, \"Id_1010\");\n\nlet lower_hex = format_ident!(\"Id_{:x}\", num);\nassert_eq!(lower_hex, \"Id_a\");\n\nlet upper_hex = format_ident!(\"Id_{:X}\", num);\nassert_eq!(upper_hex, \"Id_A\");\n```","links":{"crate::IdentFragment":"0:63:1638","std::fmt::LowerHex":"2:10546:2340","proc_macro2::Ident":"21:1066:2206","std::fmt::UpperHex":"2:10548:2341","`std::fmt`":"5:5166:661","`format!`":"5:6:672","std::fmt::Octal":"2:10542:2339","std::fmt::Binary":"2:10544:2342","proc_macro2::Span":"21:999:1876","proc_macro2::Span::call_site":"21:999:1876"},"attrs":["#[macro_export]"],"deprecation":null,"kind":"macro","inner":"macro_rules! format_ident {\n    ($fmt:expr) => { ... };\n    ($fmt:expr, $($rest:tt)*) => { ... };\n}"},"5:6183:60630":{"id":"5:6183:60630","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:8455:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8455:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3425:2557":{"id":"2:3425:2557","crate_id":2,"name":"Mul","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3427:181","2:3428:893"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:487:1989":{"id":"0:487:1989","crate_id":0,"name":"push_lt_spanned","span":{"filename":"src/runtime.rs","begin":[350,0],"end":[350,40]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:999:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:10552:2814":{"id":"2:10552:2814","crate_id":2,"name":"LowerExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10553:661"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:415":{"id":"0:415","crate_id":0,"name":null,"span":{"filename":"src/to_tokens.rs","begin":[139,0],"end":[156,1]},"visibility":{"restricted":{"parent":"0:82:1634","path":"::to_tokens"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["to_token_stream","into_token_stream"],"trait":{"name":"ToTokens","id":"0:117:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u8"},"items":["0:416:1634"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3637:2585":{"id":"2:3637:2585","crate_id":2,"name":"Generator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3639:238","2:3640:206","2:3641:59736"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"tuple","inner":[]},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5526:3140":{"id":"1:5526:3140","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5527:6858","1:5528:57565","1:5529:5412","1:5530:57566","1:5531:3430","1:5532:3431","1:5533:57567","1:5534:1306","1:5535:57568","1:5536:57569","1:5537:57570","1:5538:57571","1:5539:57572","1:5540:57573","1:5541:57574","1:5542:57575"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:443:1971":{"id":"0:443:1971","crate_id":0,"name":"push_add_eq_spanned","span":{"filename":"src/runtime.rs","begin":[328,0],"end":[328,52]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:999:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:12742:2852":{"id":"2:12742:2852","crate_id":2,"name":"SlicePattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:12743:2130","2:12744:58749"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:6224:3042":{"id":"1:6224:3042","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6225:3430","1:6226:3431","1:6227:55161","1:6228:55162","1:6230:55166","1:6232:55163","1:6233:55164","1:6235:55165"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10355:2115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:191:1906":{"id":"0:191:1906","crate_id":0,"name":"HasIterator","span":{"filename":"src/runtime.rs","begin":[10,0],"end":[10,23]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"unit","generics":{"params":[],"where_predicates":[]},"fields_stripped":false,"fields":[],"impls":[]}},"2:3359:220":{"id":"2:3359:220","crate_id":2,"name":"Sync","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:163:2251":{"id":"0:163:2251","crate_id":0,"name":"into_token_stream","span":{"filename":"src/to_tokens.rs","begin":[206,4],"end":[208,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:156:1634":{"id":"0:156:1634","crate_id":0,"name":"to_tokens","span":{"filename":"src/to_tokens.rs","begin":[184,4],"end":[186,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13689:55705":{"id":"2:13689:55705","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:47750:176"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11175:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11175:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:386:661":{"id":"0:386:661","crate_id":0,"name":"fmt","span":{"filename":"src/ident_fragment.rs","begin":[85,0],"end":[85,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10493:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10482:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:132:1634":{"id":"0:132:1634","crate_id":0,"name":"to_tokens","span":{"filename":"src/to_tokens.rs","begin":[90,4],"end":[92,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:441:1970":{"id":"0:441:1970","crate_id":0,"name":"push_add_spanned","span":{"filename":"src/runtime.rs","begin":[327,0],"end":[327,42]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:999:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:402:661":{"id":"0:402:661","crate_id":0,"name":"fmt","span":{"filename":"src/ident_fragment.rs","begin":[86,0],"end":[86,55]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10493:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10482:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:516:1953":{"id":"0:516:1953","crate_id":0,"name":"push_shl_eq","span":{"filename":"src/runtime.rs","begin":[365,0],"end":[365,56]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:466:1931":{"id":"0:466:1931","crate_id":0,"name":"push_div_eq","span":{"filename":"src/runtime.rs","begin":[340,0],"end":[340,52]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:527:2007":{"id":"0:527:2007","crate_id":0,"name":"push_sub_eq_spanned","span":{"filename":"src/runtime.rs","begin":[370,0],"end":[370,52]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:999:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:13709:55744":{"id":"2:13709:55744","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:15744:2387","self::pattern":"2:13302:2949"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:2943","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:82:1634":{"id":"0:82:1634","crate_id":0,"name":"to_tokens","span":{"filename":"src/to_tokens.rs","begin":[1,0],"end":[209,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:117:1639"],"is_stripped":true}},"2:13685:55275":{"id":"2:13685:55275","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:12766:3974"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"str_as_bytes\", since = \"1.39.0\")]","#[must_use]","#[allow(unused_attributes)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:397":{"id":"0:397","crate_id":0,"name":null,"span":{"filename":"src/ident_fragment.rs","begin":[86,0],"end":[86,55]},"visibility":{"restricted":{"parent":"0:49:1633","path":"::ident_fragment"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["span"],"trait":{"name":"IdentFragment","id":"0:63:1638","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u64"},"items":["0:398:661"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:413":{"id":"0:413","crate_id":0,"name":null,"span":{"filename":"src/to_tokens.rs","begin":[139,0],"end":[156,1]},"visibility":{"restricted":{"parent":"0:82:1634","path":"::to_tokens"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["to_token_stream","into_token_stream"],"trait":{"name":"ToTokens","id":"0:117:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"isize"},"items":["0:414:1634"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:23733:3533":{"id":"2:23733:3533","crate_id":2,"name":"SimdPartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23734:1272","2:23735:1271","2:23736:1269","2:23737:1268"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"SimdPartialEq","id":"2:23145:3718","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:495:1993":{"id":"0:495:1993","crate_id":0,"name":"push_or_eq_spanned","span":{"filename":"src/runtime.rs","begin":[354,0],"end":[354,50]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:999:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:390:661":{"id":"0:390:661","crate_id":0,"name":"fmt","span":{"filename":"src/ident_fragment.rs","begin":[85,0],"end":[85,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10493:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10482:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:9131:2725":{"id":"2:9131:2725","crate_id":2,"name":"TrustedStep","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Step","id":"2:8167:2710","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:463:1966":{"id":"0:463:1966","crate_id":0,"name":"push_comma_spanned","span":{"filename":"src/runtime.rs","begin":[338,0],"end":[338,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:999:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:478:1936":{"id":"0:478:1936","crate_id":0,"name":"push_eq_eq","span":{"filename":"src/runtime.rs","begin":[346,0],"end":[346,50]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:13791:59991":{"id":"2:13791:59991","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"self::pattern":"2:13302:2949","prim@char":"1:15744:2387"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:2943","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13312:2943","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13327:3555","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3479:2274":{"id":"2:3479:2274","crate_id":2,"name":"BitOr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3481:181","2:3482:354"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:4511:3095":{"id":"1:4511:3095","crate_id":1,"name":"BufRead","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4512:54992","1:4513:54993","1:4514:54995","1:4516:3094","1:4517:54994","1:4519:54996","1:4520:4326"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Read","id":"1:4429:3089","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:10544:2342":{"id":"2:10544:2342","crate_id":2,"name":"Binary","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10545:661"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:389":{"id":"0:389","crate_id":0,"name":null,"span":{"filename":"src/ident_fragment.rs","begin":[85,0],"end":[85,48]},"visibility":{"restricted":{"parent":"0:49:1633","path":"::ident_fragment"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["span"],"trait":{"name":"IdentFragment","id":"0:63:1638","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"char"},"items":["0:390:661"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3420:2560":{"id":"2:3420:2560","crate_id":2,"name":"Sub","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3422:181","2:3423:1357"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:514:1952":{"id":"0:514:1952","crate_id":0,"name":"push_shl","span":{"filename":"src/runtime.rs","begin":[364,0],"end":[364,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:460:1910":{"id":"0:460:1910","crate_id":0,"name":"push_colon2","span":{"filename":"src/runtime.rs","begin":[337,0],"end":[337,52]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:423":{"id":"0:423","crate_id":0,"name":null,"span":{"filename":"src/to_tokens.rs","begin":[139,0],"end":[156,1]},"visibility":{"restricted":{"parent":"0:82:1634","path":"::to_tokens"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["to_token_stream","into_token_stream"],"trait":{"name":"ToTokens","id":"0:117:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u128"},"items":["0:424:1634"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:408:1634":{"id":"0:408:1634","crate_id":0,"name":"to_tokens","span":{"filename":"src/to_tokens.rs","begin":[139,0],"end":[156,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:294:1962":{"id":"0:294:1962","crate_id":0,"name":"push_ident_spanned","span":{"filename":"src/runtime.rs","begin":[214,0],"end":[216,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:999:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:14042:150":{"id":"2:14042:150","crate_id":2,"name":"IntoFuture","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:14043:181","2:14044:150","2:14045:768"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:406:1634":{"id":"0:406:1634","crate_id":0,"name":"to_tokens","span":{"filename":"src/to_tokens.rs","begin":[139,0],"end":[156,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3594:2576":{"id":"2:3594:2576","crate_id":2,"name":"Drop","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3595:579"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:29":{"id":"0:29","crate_id":0,"name":null,"span":{"filename":"src/ext.rs","begin":[59,0],"end":[102,1]},"visibility":{"restricted":{"parent":"0:4:1632","path":"::ext"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"TokenStreamExt","id":"0:18:1637","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:30:2118","0:32:2128","0:34:2133","0:37:2137"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:139":{"id":"0:139","crate_id":0,"name":null,"span":{"filename":"src/to_tokens.rs","begin":[107,0],"end":[113,1]},"visibility":{"restricted":{"parent":"0:82:1634","path":"::to_tokens"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ToTokens","id":"0:117:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["to_token_stream","into_token_stream"],"trait":{"name":"ToTokens","id":"0:117:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:141:1634"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:468:1918":{"id":"0:468:1918","crate_id":0,"name":"push_dot","span":{"filename":"src/runtime.rs","begin":[341,0],"end":[341,42]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:23145:3718":{"id":"2:23145:3718","crate_id":2,"name":"SimdPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23146:3532","2:23147:1249","2:23148:1274"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13698:59973":{"id":"2:13698:59973","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"crate::ops::IndexMut":"2:3659:2578","`str`":"1:15750:2392","str::slice_unchecked":"1:15750:2392"},"attrs":["#[stable(feature = \"str_slice_mut\", since = \"1.5.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:492:1943":{"id":"0:492:1943","crate_id":0,"name":"push_or","span":{"filename":"src/runtime.rs","begin":[353,0],"end":[353,40]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:424:1634":{"id":"0:424:1634","crate_id":0,"name":"to_tokens","span":{"filename":"src/to_tokens.rs","begin":[139,0],"end":[156,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13773:59987":{"id":"2:13773:59987","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"self::pattern":"2:13302:2949","prim@char":"1:15744:2387"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:2943","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13312:2943","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:13332:3556","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:411":{"id":"0:411","crate_id":0,"name":null,"span":{"filename":"src/to_tokens.rs","begin":[139,0],"end":[156,1]},"visibility":{"restricted":{"parent":"0:82:1634","path":"::to_tokens"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["to_token_stream","into_token_stream"],"trait":{"name":"ToTokens","id":"0:117:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"i128"},"items":["0:412:1634"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13718:2683":{"id":"2:13718:2683","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:47750:176","self::pattern":"2:13302:2949","prim@char":"1:15744:2387"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:2943","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3151:74":{"id":"2:3151:74","crate_id":2,"name":"AsMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3153:2642"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:23:2133":{"id":"0:23:2133","crate_id":0,"name":"append_separated","span":{"filename":"src/ext.rs","begin":[42,4],"end":[46,20]},"visibility":"default","docs":"For use by `ToTokens` implementations.\n\nAppends all of the items in the iterator `I`, separated by the tokens\n`U`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["iter",{"kind":"generic","inner":"I"}],["op",{"kind":"generic","inner":"U"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8643:151","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8643:151","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"ToTokens","id":"0:117:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"ToTokens","id":"0:117:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:152:1634":{"id":"0:152:1634","crate_id":0,"name":"to_tokens","span":{"filename":"src/to_tokens.rs","begin":[172,4],"end":[174,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:440:1921":{"id":"0:440:1921","crate_id":0,"name":"push_add","span":{"filename":"src/runtime.rs","begin":[327,0],"end":[327,42]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:486:1940":{"id":"0:486:1940","crate_id":0,"name":"push_lt","span":{"filename":"src/runtime.rs","begin":[350,0],"end":[350,40]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:13241:2507":{"id":"2:13241:2507","crate_id":2,"name":"FromStr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13242:126","2:13243:55145"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:498:1916":{"id":"0:498:1916","crate_id":0,"name":"push_pound","span":{"filename":"src/runtime.rs","begin":[356,0],"end":[356,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"1:5570:3136":{"id":"1:5570:3136","crate_id":1,"name":"DirEntryExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5571:57565"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13693:55707":{"id":"2:13693:55707","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11175:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11175:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:23738:15924":{"id":"2:23738:15924","crate_id":2,"name":"SimdOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23739:58756","2:23740:58757","2:23741:58758"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"SimdPartialOrd","id":"2:23733:3533","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3357:106":{"id":"2:3357:106","crate_id":2,"name":"Copy","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2867:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3462:2563":{"id":"2:3462:2563","crate_id":2,"name":"RemAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3464:1105"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13704:31785":{"id":"2:13704:31785","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_ascii_whitespace":"1:15750:2392"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_whitespace\", since = \"1.1.0\")]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitWhitespace","id":"2:49987:3849","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:346:1640":{"id":"0:346:1640","crate_id":0,"name":"spanned","span":{"filename":"src/spanned.rs","begin":[1,0],"end":[43,1]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(hidden)]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:357:2343"],"is_stripped":true}},"0:393":{"id":"0:393","crate_id":0,"name":null,"span":{"filename":"src/ident_fragment.rs","begin":[86,0],"end":[86,55]},"visibility":{"restricted":{"parent":"0:49:1633","path":"::ident_fragment"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["span"],"trait":{"name":"IdentFragment","id":"0:63:1638","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u16"},"items":["0:394:661"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4:1632":{"id":"0:4:1632","crate_id":0,"name":"ext","span":{"filename":"src/ext.rs","begin":[1,0],"end":[110,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:18:1637"],"is_stripped":true}},"0:419":{"id":"0:419","crate_id":0,"name":null,"span":{"filename":"src/to_tokens.rs","begin":[139,0],"end":[156,1]},"visibility":{"restricted":{"parent":"0:82:1634","path":"::to_tokens"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["to_token_stream","into_token_stream"],"trait":{"name":"ToTokens","id":"0:117:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u32"},"items":["0:420:1634"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:30:2118":{"id":"0:30:2118","crate_id":0,"name":"append","span":{"filename":"src/ext.rs","begin":[60,4],"end":[65,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"generic","inner":"U"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3154:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"TokenTree","id":"21:1005:2111","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13682:59971":{"id":"2:13682:59971","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"1:15750:2392"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6648:3034":{"id":"1:6648:3034","crate_id":1,"name":"FromRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6649:57715"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5574:3142":{"id":"1:5574:3142","crate_id":1,"name":"DirEntryExt2","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5575:57285"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10355:2115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3467:2567":{"id":"2:3467:2567","crate_id":2,"name":"Not","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3468:181","2:3469:953"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:502:1947":{"id":"0:502:1947","crate_id":0,"name":"push_rarrow","span":{"filename":"src/runtime.rs","begin":[358,0],"end":[358,52]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:3388:2532":{"id":"2:3388:2532","crate_id":2,"name":"Unpin","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:2845:2515":{"id":"2:2845:2515","crate_id":2,"name":"BorrowMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2847:54781"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2842:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Borrowed"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:526:1958":{"id":"0:526:1958","crate_id":0,"name":"push_sub_eq","span":{"filename":"src/runtime.rs","begin":[370,0],"end":[370,52]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:494:1944":{"id":"0:494:1944","crate_id":0,"name":"push_or_eq","span":{"filename":"src/runtime.rs","begin":[354,0],"end":[354,50]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"5:6184:60631":{"id":"5:6184:60631","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`String`":"5:8455:216","`Box<str>`":"5:444:2253"},"attrs":["#[stable(feature = \"box_str\", since = \"1.4.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:444:2253","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8200:2545","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8455:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:315:1960":{"id":"0:315:1960","crate_id":0,"name":"push_underscore","span":{"filename":"src/runtime.rs","begin":[372,0],"end":[374,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:79:1875":{"id":"0:79:1875","crate_id":0,"name":"span","span":{"filename":"src/ident_fragment.rs","begin":[62,4],"end":[64,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Span","id":"21:999:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13802:3153":{"id":"2:13802:3153","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"1:15744:2387"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDefault","id":"2:50021:3154","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:388:661":{"id":"0:388:661","crate_id":0,"name":"fmt","span":{"filename":"src/ident_fragment.rs","begin":[85,0],"end":[85,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10493:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10482:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:32:2128":{"id":"0:32:2128","crate_id":0,"name":"append_all","span":{"filename":"src/ext.rs","begin":[67,4],"end":[75,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["iter",{"kind":"generic","inner":"I"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8643:151","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8643:151","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"ToTokens","id":"0:117:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13699:55728":{"id":"2:13699:55728","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"1:15750:2392"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:37:2137":{"id":"0:37:2137","crate_id":0,"name":"append_terminated","span":{"filename":"src/ext.rs","begin":[91,4],"end":[101,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["iter",{"kind":"generic","inner":"I"}],["term",{"kind":"generic","inner":"U"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8643:151","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8643:151","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"ToTokens","id":"0:117:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"ToTokens","id":"0:117:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:395":{"id":"0:395","crate_id":0,"name":null,"span":{"filename":"src/ident_fragment.rs","begin":[86,0],"end":[86,55]},"visibility":{"restricted":{"parent":"0:49:1633","path":"::ident_fragment"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["span"],"trait":{"name":"IdentFragment","id":"0:63:1638","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u32"},"items":["0:396:661"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:404:1634":{"id":"0:404:1634","crate_id":0,"name":"to_tokens","span":{"filename":"src/to_tokens.rs","begin":[139,0],"end":[156,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:1075:3151":{"id":"1:1075:3151","crate_id":1,"name":"AsciiExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:1076:2517","1:1077:4004","1:1078:55601","1:1079:55602","1:1080:55603","1:1081:55604","1:1082:55605"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5520:3139":{"id":"1:5520:3139","crate_id":1,"name":"OpenOptionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5521:5412","1:5522:7757"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:422:1634":{"id":"0:422:1634","crate_id":0,"name":"to_tokens","span":{"filename":"src/to_tokens.rs","begin":[139,0],"end":[156,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:394:661":{"id":"0:394:661","crate_id":0,"name":"fmt","span":{"filename":"src/ident_fragment.rs","begin":[86,0],"end":[86,55]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10493:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10482:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13798:55604":{"id":"2:13798:55604","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10548:2341":{"id":"2:10548:2341","crate_id":2,"name":"UpperHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10549:661"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13776:59988":{"id":"2:13776:59988","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"self::pattern":"2:13302:2949","prim@char":"1:15744:2387"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:2943","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10483:2809":{"id":"2:10483:2809","crate_id":2,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10484:1535","2:10485:57360","2:10487:57359"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:231:2286":{"id":"0:231:2286","crate_id":0,"name":"RepIteratorExt","span":{"filename":"src/runtime.rs","begin":[55,4],"end":[59,5]},"visibility":"public","docs":"Extension trait providing the `quote_into_iter` method on iterators.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:232:1891"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8844:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:316:2009":{"id":"0:316:2009","crate_id":0,"name":"push_underscore_spanned","span":{"filename":"src/runtime.rs","begin":[376,0],"end":[378,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:999:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:23208:3163":{"id":"2:23208:3163","crate_id":2,"name":"SupportedLaneCount","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:23198:2115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:64:661":{"id":"0:64:661","crate_id":0,"name":"fmt","span":{"filename":"src/ident_fragment.rs","begin":[13,4],"end":[13,57]},"visibility":"default","docs":"Format this value as an identifier fragment.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10493:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10482:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:13703:2948":{"id":"2:13703:2948","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"2:49699:3096","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:68:1875":{"id":"0:68:1875","crate_id":0,"name":"span","span":{"filename":"src/ident_fragment.rs","begin":[24,4],"end":[26,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Span","id":"21:999:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13753:2469":{"id":"2:13753:2469","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:13302:2949","`DoubleEndedIterator`":"2:8687:120","prim@char":"1:15744:2387","str::matches":"1:15750:2392"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"2:49917:3846","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:2943","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:521:2004":{"id":"0:521:2004","crate_id":0,"name":"push_shr_eq_spanned","span":{"filename":"src/runtime.rs","begin":[367,0],"end":[367,56]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:999:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"1:6746:3047":{"id":"1:6746:3047","crate_id":1,"name":"AsFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6747:57812"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:474:1934":{"id":"0:474:1934","crate_id":0,"name":"push_dot_dot_eq","span":{"filename":"src/runtime.rs","begin":[344,0],"end":[344,64]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:154:1634":{"id":"0:154:1634","crate_id":0,"name":"to_tokens","span":{"filename":"src/to_tokens.rs","begin":[178,4],"end":[180,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:242:2298":{"id":"0:242:2298","crate_id":0,"name":"Iter","span":{"filename":"src/runtime.rs","begin":[84,8],"end":[84,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8844:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}},"2:14510:2544":{"id":"2:14510:2544","crate_id":2,"name":"Allocator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:14511:57618","2:14512:57619","2:14513:57620","2:14514:57621","2:14515:57622","2:14516:57623","2:14517:2673"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5582:3144":{"id":"1:5582:3144","crate_id":1,"name":"DirBuilderExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5583:5412"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:9124:2592":{"id":"2:9124:2592","crate_id":2,"name":"FusedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8844:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:6246:3045":{"id":"1:6246:3045","crate_id":1,"name":"ExitStatusExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6247:57822","1:6248:7282","1:6249:57823","1:6250:57824","1:6251:57825","1:6252:57826"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10355:2115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:518:1954":{"id":"0:518:1954","crate_id":0,"name":"push_shr","span":{"filename":"src/runtime.rs","begin":[366,0],"end":[366,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:120:2251":{"id":"0:120:2251","crate_id":0,"name":"into_token_stream","span":{"filename":"src/to_tokens.rs","begin":[69,4],"end":[74,5]},"visibility":"default","docs":"Convert `self` directly into a `TokenStream` object.\n\nThis method is implicitly implemented using `to_tokens`, and acts as a\nconvenience method for consumers of the `ToTokens` trait.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:491:1991":{"id":"0:491:1991","crate_id":0,"name":"push_ne_spanned","span":{"filename":"src/runtime.rs","begin":[352,0],"end":[352,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:999:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:456:1929":{"id":"0:456:1929","crate_id":0,"name":"push_caret_eq","span":{"filename":"src/runtime.rs","begin":[335,0],"end":[335,56]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"1:5560:3141":{"id":"1:5560:3141","crate_id":1,"name":"FileTypeExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5561:55292","1:5562:55293","1:5563:55294","1:5564:55295"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:118:1634":{"id":"0:118:1634","crate_id":0,"name":"to_tokens","span":{"filename":"src/to_tokens.rs","begin":[53,4],"end":[53,50]},"visibility":"default","docs":"Write `self` to the given `TokenStream`.\n\nThe token append methods provided by the [`TokenStreamExt`] extension\ntrait may be useful for implementing `ToTokens`.\n\n[`TokenStreamExt`]: trait.TokenStreamExt.html\n\n# Example\n\nExample implementation for a struct representing Rust paths like\n`std::cmp::PartialEq`:\n\n```\nuse proc_macro2::{TokenTree, Spacing, Span, Punct, TokenStream};\nuse quote::{TokenStreamExt, ToTokens};\n\npub struct Path {\n    pub global: bool,\n    pub segments: Vec<PathSegment>,\n}\n\nimpl ToTokens for Path {\n    fn to_tokens(&self, tokens: &mut TokenStream) {\n        for (i, segment) in self.segments.iter().enumerate() {\n            if i > 0 || self.global {\n                // Double colon `::`\n                tokens.append(Punct::new(':', Spacing::Joint));\n                tokens.append(Punct::new(':', Spacing::Alone));\n            }\n            segment.to_tokens(tokens);\n        }\n    }\n}\n#\n# pub struct PathSegment;\n#\n# impl ToTokens for PathSegment {\n#     fn to_tokens(&self, tokens: &mut TokenStream) {\n#         unimplemented!()\n#     }\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:3430:2556":{"id":"2:3430:2556","crate_id":2,"name":"Div","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3432:181","2:3433:559"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6165:3099":{"id":"5:6165:3099","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:8455:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["from",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8455:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:2943","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5438:3134":{"id":"1:5438:3134","crate_id":1,"name":"OsStrExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5439:4760","1:5440:55275"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10355:2115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13687:305":{"id":"2:13687:305","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"`u8`":"1:15761:2401","str::as_mut_ptr":"1:15750:2392"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"rustc_str_as_ptr\", since = \"1.32.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:473:1982":{"id":"0:473:1982","crate_id":0,"name":"push_dot3_spanned","span":{"filename":"src/runtime.rs","begin":[343,0],"end":[343,52]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:999:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:513:1968":{"id":"0:513:1968","crate_id":0,"name":"push_semi_spanned","span":{"filename":"src/runtime.rs","begin":[363,0],"end":[363,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:999:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:13702:3581":{"id":"2:13702:3581","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:15744:2387"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CharIndices","id":"2:49689:3835","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13722:2648":{"id":"2:13722:2648","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"self::pattern":"2:13302:2949","`None`":"2:47750:176","prim@char":"1:15744:2387"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:2943","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13312:2943","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13327:3555","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:458:1920":{"id":"0:458:1920","crate_id":0,"name":"push_colon","span":{"filename":"src/runtime.rs","begin":[336,0],"end":[336,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:519:2003":{"id":"0:519:2003","crate_id":0,"name":"push_shr_spanned","span":{"filename":"src/runtime.rs","begin":[366,0],"end":[366,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:999:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:65:1875":{"id":"0:65:1875","crate_id":0,"name":"span","span":{"filename":"src/ident_fragment.rs","begin":[18,4],"end":[20,5]},"visibility":"default","docs":"Span associated with this `IdentFragment`.\n\nIf non-`None`, may be inherited by formatted identifiers.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Span","id":"21:999:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3807:225":{"id":"2:3807:225","crate_id":2,"name":"Try","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3808:181","2:3809:2582","2:3810:687","2:3811:370"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"FromResidual","id":"2:3812:137","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Try","id":"2:3807:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:26:2137":{"id":"0:26:2137","crate_id":0,"name":"append_terminated","span":{"filename":"src/ext.rs","begin":[52,4],"end":[56,20]},"visibility":"default","docs":"For use by `ToTokens` implementations.\n\nAppends all tokens in the iterator `I`, appending `U` after each\nelement, including after the last element of the iterator.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["iter",{"kind":"generic","inner":"I"}],["term",{"kind":"generic","inner":"U"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8643:151","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8643:151","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"ToTokens","id":"0:117:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"ToTokens","id":"0:117:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:3600:131":{"id":"2:3600:131","crate_id":2,"name":"FnMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3602:378"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3603:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:141:1634":{"id":"0:141:1634","crate_id":0,"name":"to_tokens","span":{"filename":"src/to_tokens.rs","begin":[108,4],"end":[112,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:4078:68":{"id":"2:4078:68","crate_id":2,"name":"Any","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4079:1431"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"outlives":"'static"}],"implementations":[]}},"2:13677:794":{"id":"2:13677:794","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:15744:2387"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_len\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2842:97":{"id":"2:2842:97","crate_id":2,"name":"Borrow","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2844:2207"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:13676":{"id":"2:13676","crate_id":2,"name":null,"span":null,"visibility":{"restricted":{"parent":"2:12755:1342","path":"::str"}},"docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["2:13677:794","2:13678:2649","2:13679:59969","2:13680:59970","2:13682:59971","2:13685:55275","2:13686:59972","2:13687:305","2:13688:55709","2:13689:55705","2:13691:55706","2:13693:55707","2:13695:55708","2:13697:3231","2:13698:59973","2:13699:55728","2:13700:55729","2:13701:3870","2:13702:3581","2:13703:2948","2:13704:31785","2:13705:31775","2:13706:4326","2:13707:59974","2:13708:31770","2:13709:55744","2:13712:2217","2:13715:2349","2:13718:2683","2:13722:2648","2:13726:54996","2:13729:31652","2:13732:55738","2:13735:59975","2:13738:59976","2:13741:55740","2:13744:55742","2:13747:59977","2:13750:59978","2:13753:2469","2:13756:59979","2:13759:59980","2:13762:59981","2:13765:59982","2:13767:59983","2:13769:59984","2:13771:59985","2:13772:59986","2:13773:59987","2:13776:59988","2:13779:14418","2:13782:55745","2:13785:59989","2:13788:59990","2:13791:59991","2:13794:1961","2:13796:4004","2:13797:55603","2:13798:55604","2:13799:55605","2:13800:59992","2:13802:3153","2:13803:59993"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13708:31770":{"id":"2:13708:31770","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"encode_utf16\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncodeUtf16","id":"2:50005:3851","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:72:1875":{"id":"0:72:1875","crate_id":0,"name":"span","span":{"filename":"src/ident_fragment.rs","begin":[34,4],"end":[36,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Span","id":"21:999:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3726:2506":{"id":"2:3726:2506","crate_id":2,"name":"RangeBounds","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3728:59472","2:3729:59473","2:3730:55744"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:407":{"id":"0:407","crate_id":0,"name":null,"span":{"filename":"src/to_tokens.rs","begin":[139,0],"end":[156,1]},"visibility":{"restricted":{"parent":"0:82:1634","path":"::to_tokens"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["to_token_stream","into_token_stream"],"trait":{"name":"ToTokens","id":"0:117:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"i32"},"items":["0:408:1634"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:416:1634":{"id":"0:416:1634","crate_id":0,"name":"to_tokens","span":{"filename":"src/to_tokens.rs","begin":[139,0],"end":[156,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23405:3640":{"id":"2:23405:3640","crate_id":2,"name":"MaskElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"SimdElement","id":"2:24042:3524","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:23396:2115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13765:59982":{"id":"2:13765:59982","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3436:2559":{"id":"2:3436:2559","crate_id":2,"name":"Rem","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3438:181","2:3439:1104"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:465:1979":{"id":"0:465:1979","crate_id":0,"name":"push_div_spanned","span":{"filename":"src/runtime.rs","begin":[339,0],"end":[339,42]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:999:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:368:1068":{"id":"0:368:1068","crate_id":0,"name":"quote","span":{"filename":"src/lib.rs","begin":[473,0],"end":[477,1]},"visibility":"public","docs":"The whole point.\n\nPerforms variable interpolation against the input and produces it as\n[`proc_macro2::TokenStream`].\n\nNote: for returning tokens to the compiler in a procedural macro, use\n`.into()` on the result to convert to [`proc_macro::TokenStream`].\n\n[`TokenStream`]: https://docs.rs/proc-macro2/1.0/proc_macro2/struct.TokenStream.html\n\n<br>\n\n# Interpolation\n\nVariable interpolation is done with `#var` (similar to `$var` in\n`macro_rules!` macros). This grabs the `var` variable that is currently in\nscope and inserts it in that location in the output tokens. Any type\nimplementing the [`ToTokens`] trait can be interpolated. This includes most\nRust primitive types as well as most of the syntax tree types from the [Syn]\ncrate.\n\n[`ToTokens`]: trait.ToTokens.html\n[Syn]: https://github.com/dtolnay/syn\n\nRepetition is done using `#(...)*` or `#(...),*` again similar to\n`macro_rules!`. This iterates through the elements of any variable\ninterpolated within the repetition and inserts a copy of the repetition body\nfor each one. The variables in an interpolation may be a `Vec`, slice,\n`BTreeSet`, or any `Iterator`.\n\n- `#(#var)*` — no separators\n- `#(#var),*` — the character before the asterisk is used as a separator\n- `#( struct #var; )*` — the repetition can contain other tokens\n- `#( #k => println!(\"{}\", #v), )*` — even multiple interpolations\n\n<br>\n\n# Hygiene\n\nAny interpolated tokens preserve the `Span` information provided by their\n`ToTokens` implementation. Tokens that originate within the `quote!`\ninvocation are spanned with [`Span::call_site()`].\n\n[`Span::call_site()`]: https://docs.rs/proc-macro2/1.0/proc_macro2/struct.Span.html#method.call_site\n\nA different span can be provided through the [`quote_spanned!`] macro.\n\n[`quote_spanned!`]: macro.quote_spanned.html\n\n<br>\n\n# Return type\n\nThe macro evaluates to an expression of type `proc_macro2::TokenStream`.\nMeanwhile Rust procedural macros are expected to return the type\n`proc_macro::TokenStream`.\n\nThe difference between the two types is that `proc_macro` types are entirely\nspecific to procedural macros and cannot ever exist in code outside of a\nprocedural macro, while `proc_macro2` types may exist anywhere including\ntests and non-macro code like main.rs and build.rs. This is why even the\nprocedural macro ecosystem is largely built around `proc_macro2`, because\nthat ensures the libraries are unit testable and accessible in non-macro\ncontexts.\n\nThere is a [`From`]-conversion in both directions so returning the output of\n`quote!` from a procedural macro usually looks like `tokens.into()` or\n`proc_macro::TokenStream::from(tokens)`.\n\n[`From`]: https://doc.rust-lang.org/std/convert/trait.From.html\n\n<br>\n\n# Examples\n\n### Procedural macro\n\nThe structure of a basic procedural macro is as follows. Refer to the [Syn]\ncrate for further useful guidance on using `quote!` as part of a procedural\nmacro.\n\n[Syn]: https://github.com/dtolnay/syn\n\n```\n# #[cfg(any())]\nextern crate proc_macro;\n# extern crate proc_macro2;\n\n# #[cfg(any())]\nuse proc_macro::TokenStream;\n# use proc_macro2::TokenStream;\nuse quote::quote;\n\n# const IGNORE_TOKENS: &'static str = stringify! {\n#[proc_macro_derive(HeapSize)]\n# };\npub fn derive_heap_size(input: TokenStream) -> TokenStream {\n    // Parse the input and figure out what implementation to generate...\n    # const IGNORE_TOKENS: &'static str = stringify! {\n    let name = /* ... */;\n    let expr = /* ... */;\n    # };\n    #\n    # let name = 0;\n    # let expr = 0;\n\n    let expanded = quote! {\n        // The generated impl.\n        impl heapsize::HeapSize for #name {\n            fn heap_size_of_children(&self) -> usize {\n                #expr\n            }\n        }\n    };\n\n    // Hand the output tokens back to the compiler.\n    TokenStream::from(expanded)\n}\n```\n\n<p><br></p>\n\n### Combining quoted fragments\n\nUsually you don't end up constructing an entire final `TokenStream` in one\npiece. Different parts may come from different helper functions. The tokens\nproduced by `quote!` themselves implement `ToTokens` and so can be\ninterpolated into later `quote!` invocations to build up a final result.\n\n```\n# use quote::quote;\n#\nlet type_definition = quote! {...};\nlet methods = quote! {...};\n\nlet tokens = quote! {\n    #type_definition\n    #methods\n};\n```\n\n<p><br></p>\n\n### Constructing identifiers\n\nSuppose we have an identifier `ident` which came from somewhere in a macro\ninput and we need to modify it in some way for the macro output. Let's\nconsider prepending the identifier with an underscore.\n\nSimply interpolating the identifier next to an underscore will not have the\nbehavior of concatenating them. The underscore and the identifier will\ncontinue to be two separate tokens as if you had written `_ x`.\n\n```\n# use proc_macro2::{self as syn, Span};\n# use quote::quote;\n#\n# let ident = syn::Ident::new(\"i\", Span::call_site());\n#\n// incorrect\nquote! {\n    let mut _#ident = 0;\n}\n# ;\n```\n\nThe solution is to build a new identifier token with the correct value. As\nthis is such a common case, the [`format_ident!`] macro provides a\nconvenient utility for doing so correctly.\n\n```\n# use proc_macro2::{Ident, Span};\n# use quote::{format_ident, quote};\n#\n# let ident = Ident::new(\"i\", Span::call_site());\n#\nlet varname = format_ident!(\"_{}\", ident);\nquote! {\n    let mut #varname = 0;\n}\n# ;\n```\n\nAlternatively, the APIs provided by Syn and proc-macro2 can be used to\ndirectly build the identifier. This is roughly equivalent to the above, but\nwill not handle `ident` being a raw identifier.\n\n```\n# use proc_macro2::{self as syn, Span};\n# use quote::quote;\n#\n# let ident = syn::Ident::new(\"i\", Span::call_site());\n#\nlet concatenated = format!(\"_{}\", ident);\nlet varname = syn::Ident::new(&concatenated, ident.span());\nquote! {\n    let mut #varname = 0;\n}\n# ;\n```\n\n<p><br></p>\n\n### Making method calls\n\nLet's say our macro requires some type specified in the macro input to have\na constructor called `new`. We have the type in a variable called\n`field_type` of type `syn::Type` and want to invoke the constructor.\n\n```\n# use quote::quote;\n#\n# let field_type = quote!(...);\n#\n// incorrect\nquote! {\n    let value = #field_type::new();\n}\n# ;\n```\n\nThis works only sometimes. If `field_type` is `String`, the expanded code\ncontains `String::new()` which is fine. But if `field_type` is something\nlike `Vec<i32>` then the expanded code is `Vec<i32>::new()` which is invalid\nsyntax. Ordinarily in handwritten Rust we would write `Vec::<i32>::new()`\nbut for macros often the following is more convenient.\n\n```\n# use quote::quote;\n#\n# let field_type = quote!(...);\n#\nquote! {\n    let value = <#field_type>::new();\n}\n# ;\n```\n\nThis expands to `<Vec<i32>>::new()` which behaves correctly.\n\nA similar pattern is appropriate for trait methods.\n\n```\n# use quote::quote;\n#\n# let field_type = quote!(...);\n#\nquote! {\n    let value = <#field_type as core::default::Default>::default();\n}\n# ;\n```\n\n<p><br></p>\n\n### Interpolating text inside of doc comments\n\nNeither doc comments nor string literals get interpolation behavior in\nquote:\n\n```compile_fail\nquote! {\n    /// try to interpolate: #ident\n    ///\n    /// ...\n}\n```\n\n```compile_fail\nquote! {\n    #[doc = \"try to interpolate: #ident\"]\n}\n```\n\nInstead the best way to build doc comments that involve variables is by\nformatting the doc string literal outside of quote.\n\n```rust\n# use proc_macro2::{Ident, Span};\n# use quote::quote;\n#\n# const IGNORE: &str = stringify! {\nlet msg = format!(...);\n# };\n#\n# let ident = Ident::new(\"var\", Span::call_site());\n# let msg = format!(\"try to interpolate: {}\", ident);\nquote! {\n    #[doc = #msg]\n    ///\n    /// ...\n}\n# ;\n```\n\n<p><br></p>\n\n### Indexing into a tuple struct\n\nWhen interpolating indices of a tuple or tuple struct, we need them not to\nappears suffixed as integer literals by interpolating them as [`syn::Index`]\ninstead.\n\n[`syn::Index`]: https://docs.rs/syn/1.0/syn/struct.Index.html\n\n```compile_fail\nlet i = 0usize..self.fields.len();\n\n// expands to 0 + self.0usize.heap_size() + self.1usize.heap_size() + ...\n// which is not valid syntax\nquote! {\n    0 #( + self.#i.heap_size() )*\n}\n```\n\n```\n# use proc_macro2::{Ident, TokenStream};\n# use quote::quote;\n#\n# mod syn {\n#     use proc_macro2::{Literal, TokenStream};\n#     use quote::{ToTokens, TokenStreamExt};\n#\n#     pub struct Index(usize);\n#\n#     impl From<usize> for Index {\n#         fn from(i: usize) -> Self {\n#             Index(i)\n#         }\n#     }\n#\n#     impl ToTokens for Index {\n#         fn to_tokens(&self, tokens: &mut TokenStream) {\n#             tokens.append(Literal::usize_unsuffixed(self.0));\n#         }\n#     }\n# }\n#\n# struct Struct {\n#     fields: Vec<Ident>,\n# }\n#\n# impl Struct {\n#     fn example(&self) -> TokenStream {\nlet i = (0..self.fields.len()).map(syn::Index::from);\n\n// expands to 0 + self.0.heap_size() + self.1.heap_size() + ...\nquote! {\n    0 #( + self.#i.heap_size() )*\n}\n#     }\n# }\n```","links":{"`proc_macro::TokenStream`":"20:2996:1815","`format_ident!`":"0:47:2199","`proc_macro2::TokenStream`":"21:994:1815"},"attrs":["#[cfg(doc)]","#[macro_export]"],"deprecation":null,"kind":"macro","inner":"macro_rules! quote {\n    ($($tt:tt)*) => { ... };\n}"},"0:121":{"id":"0:121","crate_id":0,"name":null,"span":{"filename":"src/to_tokens.rs","begin":[77,0],"end":[81,1]},"visibility":{"restricted":{"parent":"0:82:1634","path":"::to_tokens"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"ToTokens","id":"0:117:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["to_token_stream","into_token_stream"],"trait":{"name":"ToTokens","id":"0:117:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"T"}}},"items":["0:124:1634"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:482:1938":{"id":"0:482:1938","crate_id":0,"name":"push_gt","span":{"filename":"src/runtime.rs","begin":[348,0],"end":[348,40]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:420:1634":{"id":"0:420:1634","crate_id":0,"name":"to_tokens","span":{"filename":"src/to_tokens.rs","begin":[139,0],"end":[156,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:490:1942":{"id":"0:490:1942","crate_id":0,"name":"push_ne","span":{"filename":"src/runtime.rs","begin":[352,0],"end":[352,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:144":{"id":"0:144","crate_id":0,"name":null,"span":{"filename":"src/to_tokens.rs","begin":[121,0],"end":[125,1]},"visibility":{"restricted":{"parent":"0:82:1634","path":"::to_tokens"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["to_token_stream","into_token_stream"],"trait":{"name":"ToTokens","id":"0:117:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"String","id":"5:8455:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:145:1634"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3505:2571":{"id":"2:3505:2571","crate_id":2,"name":"BitOrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3507:355"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:129":{"id":"0:129","crate_id":0,"name":null,"span":{"filename":"src/to_tokens.rs","begin":[89,0],"end":[93,1]},"visibility":{"restricted":{"parent":"0:82:1634","path":"::to_tokens"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"ToOwned","id":"5:844:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ToTokens","id":"0:117:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["to_token_stream","into_token_stream"],"trait":{"name":"ToTokens","id":"0:117:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:853:108","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:132:1634"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:453:1976":{"id":"0:453:1976","crate_id":0,"name":"push_bang_spanned","span":{"filename":"src/runtime.rs","begin":[333,0],"end":[333,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:999:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:157":{"id":"0:157","crate_id":0,"name":null,"span":{"filename":"src/to_tokens.rs","begin":[189,0],"end":[193,1]},"visibility":{"restricted":{"parent":"0:82:1634","path":"::to_tokens"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["to_token_stream","into_token_stream"],"trait":{"name":"ToTokens","id":"0:117:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Literal","id":"21:1071:2221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:158:1634"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:496:1945":{"id":"0:496:1945","crate_id":0,"name":"push_or_or","span":{"filename":"src/runtime.rs","begin":[355,0],"end":[355,50]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:431:1894":{"id":"0:431:1894","crate_id":0,"name":"RepInterp","span":{"filename":"src/runtime.rs","begin":[141,0],"end":[141,31]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":false,"fields":["0:434:1544"],"impls":[]}},"0:287:1964":{"id":"0:287:1964","crate_id":0,"name":"push_group_spanned","span":{"filename":"src/runtime.rs","begin":[171,0],"end":[180,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:999:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["delimiter",{"kind":"resolved_path","inner":{"name":"Delimiter","id":"21:1024:1912","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["inner",{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:317:2202":{"id":"0:317:2202","crate_id":0,"name":"mk_ident","span":{"filename":"src/runtime.rs","begin":[382,0],"end":[385,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["id",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["span",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Span","id":"21:999:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Ident","id":"21:1066:2206","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:3255:127":{"id":"2:3255:127","crate_id":2,"name":"Error","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3256:2950","2:3258:57762","2:3259:57763","2:3260:57764"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Debug","id":"2:10533:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Display","id":"2:10540:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:304:2008":{"id":"0:304:2008","crate_id":0,"name":"push_lifetime_spanned","span":{"filename":"src/runtime.rs","begin":[248,0],"end":[280,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:999:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["lifetime",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:385":{"id":"0:385","crate_id":0,"name":null,"span":{"filename":"src/ident_fragment.rs","begin":[85,0],"end":[85,48]},"visibility":{"restricted":{"parent":"0:49:1633","path":"::ident_fragment"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["span"],"trait":{"name":"IdentFragment","id":"0:63:1638","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"str"},"items":["0:386:661"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:483:1987":{"id":"0:483:1987","crate_id":0,"name":"push_gt_spanned","span":{"filename":"src/runtime.rs","begin":[348,0],"end":[348,40]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:999:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:159":{"id":"0:159","crate_id":0,"name":null,"span":{"filename":"src/to_tokens.rs","begin":[195,0],"end":[199,1]},"visibility":{"restricted":{"parent":"0:82:1634","path":"::to_tokens"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["to_token_stream","into_token_stream"],"trait":{"name":"ToTokens","id":"0:117:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TokenTree","id":"21:1005:2111","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:160:1634"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:4504:3074":{"id":"1:4504:3074","crate_id":1,"name":"Seek","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4505:58177","1:4506:39535","1:4507:58179","1:4508:58178"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:23108:3719":{"id":"2:23108:3719","crate_id":2,"name":"SimdUint","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23109:59352","2:23110:1229","2:23111:1230","2:23112:59353","2:23113:59354","2:23114:59355","2:23115:59356","2:23116:59357","2:23117:59358","2:23118:59359"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3357:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:23121:2115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13679:59969":{"id":"2:13679:59969","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"is_char_boundary\", since = \"1.9.0\")]","#[rustc_const_unstable(feature = \"const_is_char_boundary\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3415:2513":{"id":"2:3415:2513","crate_id":2,"name":"Add","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3417:181","2:3418:266"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10533:109":{"id":"2:10533:109","crate_id":2,"name":"Debug","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10534:661"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:9130:3161":{"id":"1:9130:3161","crate_id":1,"name":"StdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9131:58150","1:9132:58151","1:9133:58152","1:9134:58153","1:9135:58154","1:9136:39128","1:9137:58149"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10355:2115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:449:1974":{"id":"0:449:1974","crate_id":0,"name":"push_and_eq_spanned","span":{"filename":"src/runtime.rs","begin":[331,0],"end":[331,52]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:999:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:523:2005":{"id":"0:523:2005","crate_id":0,"name":"push_star_spanned","span":{"filename":"src/runtime.rs","begin":[368,0],"end":[368,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:999:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:13332:3556":{"id":"2:13332:3556","crate_id":2,"name":"DoubleEndedSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13327:3555","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:10781:146":{"id":"2:10781:146","crate_id":2,"name":"Hasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10782:653","2:10783:2472","2:10784:54867","2:10785:54868","2:10786:54869","2:10787:54870","2:10788:54871","2:10789:54872","2:10790:54873","2:10791:54874","2:10792:54875","2:10793:54876","2:10794:54877","2:10795:54878","2:10796:54879","2:10797:1535"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13756:59979":{"id":"2:13756:59979","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"prim@char":"1:15744:2387","self::pattern":"2:13302:2949","str::matches":"1:15750:2392","`DoubleEndedIterator`":"2:8687:120"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatches","id":"2:49935:3847","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:2943","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13312:2943","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13327:3555","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3655:2577":{"id":"2:3655:2577","crate_id":2,"name":"Index","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3657:181","2:3658:754"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"1:6344:3156":{"id":"1:6344:3156","crate_id":1,"name":"JoinHandleExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6345:57895","1:6346:57896"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:531:1544":{"id":"0:531:1544","crate_id":0,"name":"0","span":{"filename":"src/runtime.rs","begin":[402,50],"end":[402,55]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"T"}},"0:457:1978":{"id":"0:457:1978","crate_id":0,"name":"push_caret_eq_spanned","span":{"filename":"src/runtime.rs","begin":[335,0],"end":[335,56]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:999:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:8712:2616":{"id":"2:8712:2616","crate_id":2,"name":"ExactSizeIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8713:794","2:8714:2649"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8844:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:387":{"id":"0:387","crate_id":0,"name":null,"span":{"filename":"src/ident_fragment.rs","begin":[85,0],"end":[85,48]},"visibility":{"restricted":{"parent":"0:49:1633","path":"::ident_fragment"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["span"],"trait":{"name":"IdentFragment","id":"0:63:1638","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"String","id":"5:8455:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:388:661"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:489:1990":{"id":"0:489:1990","crate_id":0,"name":"push_mul_eq_spanned","span":{"filename":"src/runtime.rs","begin":[351,0],"end":[351,52]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:999:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:13735:59975":{"id":"2:13735:59975","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"`DoubleEndedIterator`":"2:8687:120","prim@char":"1:15744:2387","str::rsplit_terminator":"1:15750:2392","self::pattern":"2:13302:2949","str::split":"1:15750:2392"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitTerminator","id":"2:49763:3839","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:2943","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3356:217":{"id":"2:3356:217","crate_id":2,"name":"StructuralEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:4866:3625":{"id":"2:4866:3625","crate_id":2,"name":"AsyncIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4867:2130","2:4868:58543","2:4869:2653"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13706:4326":{"id":"2:13706:4326","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are ended with either a newline (`\\n`) or a carriage return with\na line feed (`\\r\\n`).\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Lines","id":"2:49967:3098","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11175:214":{"id":"2:11175:214","crate_id":2,"name":"SliceIndex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:11177:181","2:11178:55705","2:11179:55706","2:11180:55707","2:11181:55708","2:11182:754","2:11183:755"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:11166:2115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:10540:119":{"id":"2:10540:119","crate_id":2,"name":"Display","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10541:661"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:475:1983":{"id":"0:475:1983","crate_id":0,"name":"push_dot_dot_eq_spanned","span":{"filename":"src/runtime.rs","begin":[344,0],"end":[344,64]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:999:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:13741:55740":{"id":"2:13741:55740","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"str::rsplitn":"1:15750:2392","self::pattern":"2:13302:2949","prim@char":"1:15744:2387"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"2:49817:2865","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:2943","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:430:1634":{"id":"0:430:1634","crate_id":0,"name":"to_tokens","span":{"filename":"src/to_tokens.rs","begin":[139,0],"end":[156,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:14027:138":{"id":"2:14027:138","crate_id":2,"name":"Future","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:14028:181","2:14029:1014"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:160:1634":{"id":"0:160:1634","crate_id":0,"name":"to_tokens","span":{"filename":"src/to_tokens.rs","begin":[196,4],"end":[198,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:133":{"id":"0:133","crate_id":0,"name":null,"span":{"filename":"src/to_tokens.rs","begin":[95,0],"end":[99,1]},"visibility":{"restricted":{"parent":"0:82:1634","path":"::to_tokens"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"ToTokens","id":"0:117:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["to_token_stream","into_token_stream"],"trait":{"name":"ToTokens","id":"0:117:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Box","id":"5:444:2253","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:135:1634"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:150:1634":{"id":"0:150:1634","crate_id":0,"name":"to_tokens","span":{"filename":"src/to_tokens.rs","begin":[165,4],"end":[168,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:467:1980":{"id":"0:467:1980","crate_id":0,"name":"push_div_eq_spanned","span":{"filename":"src/runtime.rs","begin":[340,0],"end":[340,52]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:999:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:400:661":{"id":"0:400:661","crate_id":0,"name":"fmt","span":{"filename":"src/ident_fragment.rs","begin":[86,0],"end":[86,55]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10493:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10482:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13771:59985":{"id":"2:13771:59985","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:343":{"id":"0:343","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[112,0],"end":[112,35]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::to_tokens::ToTokens","name":"ToTokens","id":"0:117:1639","glob":false}},"0:481:1986":{"id":"0:481:1986","crate_id":0,"name":"push_ge_spanned","span":{"filename":"src/runtime.rs","begin":[347,0],"end":[347,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:999:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:471:1981":{"id":"0:471:1981","crate_id":0,"name":"push_dot2_spanned","span":{"filename":"src/runtime.rs","begin":[342,0],"end":[342,48]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:999:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:3795:2580":{"id":"2:3795:2580","crate_id":2,"name":"OneSidedRange","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"RangeBounds","id":"2:3726:2506","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:158:1634":{"id":"0:158:1634","crate_id":0,"name":"to_tokens","span":{"filename":"src/to_tokens.rs","begin":[190,4],"end":[192,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13312:2943":{"id":"2:13312:2943","crate_id":2,"name":"Pattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13314:3553","2:13315:58392","2:13316:58397","2:13317:58393","2:13318:58395","2:13319:58394","2:13320:58396"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:428:1634":{"id":"0:428:1634","crate_id":0,"name":"to_tokens","span":{"filename":"src/to_tokens.rs","begin":[139,0],"end":[156,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:405":{"id":"0:405","crate_id":0,"name":null,"span":{"filename":"src/to_tokens.rs","begin":[139,0],"end":[156,1]},"visibility":{"restricted":{"parent":"0:82:1634","path":"::to_tokens"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["to_token_stream","into_token_stream"],"trait":{"name":"ToTokens","id":"0:117:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"i16"},"items":["0:406:1634"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:391":{"id":"0:391","crate_id":0,"name":null,"span":{"filename":"src/ident_fragment.rs","begin":[86,0],"end":[86,55]},"visibility":{"restricted":{"parent":"0:49:1633","path":"::ident_fragment"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["span"],"trait":{"name":"IdentFragment","id":"0:63:1638","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u8"},"items":["0:392:661"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:508:1950":{"id":"0:508:1950","crate_id":0,"name":"push_rem_eq","span":{"filename":"src/runtime.rs","begin":[361,0],"end":[361,52]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:13695:55708":{"id":"2:13695:55708","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11175:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11175:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:161":{"id":"0:161","crate_id":0,"name":null,"span":{"filename":"src/to_tokens.rs","begin":[201,0],"end":[209,1]},"visibility":{"restricted":{"parent":"0:82:1634","path":"::to_tokens"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["to_token_stream","into_token_stream"],"trait":{"name":"ToTokens","id":"0:117:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:162:1634","0:163:2251"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:66":{"id":"0:66","crate_id":0,"name":null,"span":{"filename":"src/ident_fragment.rs","begin":[23,0],"end":[31,1]},"visibility":{"restricted":{"parent":"0:49:1633","path":"::ident_fragment"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IdentFragment","id":"0:63:1638","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["span"],"trait":{"name":"IdentFragment","id":"0:63:1638","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"items":["0:68:1875","0:69:661"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13788:59990":{"id":"2:13788:59990","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:15744:2387","self::pattern":"2:13302:2949"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:2943","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:124:1634":{"id":"0:124:1634","crate_id":0,"name":"to_tokens","span":{"filename":"src/to_tokens.rs","begin":[78,4],"end":[80,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:143:1634":{"id":"0:143:1634","crate_id":0,"name":"to_tokens","span":{"filename":"src/to_tokens.rs","begin":[116,4],"end":[118,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:493:1992":{"id":"0:493:1992","crate_id":0,"name":"push_or_spanned","span":{"filename":"src/runtime.rs","begin":[353,0],"end":[353,40]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:999:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:13712:2217":{"id":"2:13712:2217","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"self::pattern":"2:13302:2949","prim@char":"1:15744:2387"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:2943","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:442:1922":{"id":"0:442:1922","crate_id":0,"name":"push_add_eq","span":{"filename":"src/runtime.rs","begin":[328,0],"end":[328,52]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:3570:116":{"id":"2:3570:116","crate_id":2,"name":"Deref","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3571:222","2:3572:544"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13767:59983":{"id":"2:13767:59983","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:188":{"id":"0:188","crate_id":0,"name":null,"span":{"filename":"src/runtime.rs","begin":[8,0],"end":[8,20]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"std::format","name":"format","id":"5:6:672","glob":false}},"0:151":{"id":"0:151","crate_id":0,"name":null,"span":{"filename":"src/to_tokens.rs","begin":[171,0],"end":[175,1]},"visibility":{"restricted":{"parent":"0:82:1634","path":"::to_tokens"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["to_token_stream","into_token_stream"],"trait":{"name":"ToTokens","id":"0:117:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Group","id":"21:1020:2220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:152:1634"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:147":{"id":"0:147","crate_id":0,"name":null,"span":{"filename":"src/to_tokens.rs","begin":[158,0],"end":[162,1]},"visibility":{"restricted":{"parent":"0:82:1634","path":"::to_tokens"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["to_token_stream","into_token_stream"],"trait":{"name":"ToTokens","id":"0:117:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"char"},"items":["0:148:1634"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3583:2575":{"id":"2:3583:2575","crate_id":2,"name":"DerefMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3584:546"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Deref","id":"2:3570:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:470:1932":{"id":"0:470:1932","crate_id":0,"name":"push_dot2","span":{"filename":"src/runtime.rs","begin":[342,0],"end":[342,48]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:125":{"id":"0:125","crate_id":0,"name":null,"span":{"filename":"src/to_tokens.rs","begin":[83,0],"end":[87,1]},"visibility":{"restricted":{"parent":"0:82:1634","path":"::to_tokens"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"ToTokens","id":"0:117:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["to_token_stream","into_token_stream"],"trait":{"name":"ToTokens","id":"0:117:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"generic","inner":"T"}}},"items":["0:128:1634"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13796:4004":{"id":"2:13796:4004","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13797:55603":{"id":"2:13797:55603","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:149":{"id":"0:149","crate_id":0,"name":null,"span":{"filename":"src/to_tokens.rs","begin":[164,0],"end":[169,1]},"visibility":{"restricted":{"parent":"0:82:1634","path":"::to_tokens"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["to_token_stream","into_token_stream"],"trait":{"name":"ToTokens","id":"0:117:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"bool"},"items":["0:150:1634"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:461:1963":{"id":"0:461:1963","crate_id":0,"name":"push_colon2_spanned","span":{"filename":"src/runtime.rs","begin":[337,0],"end":[337,52]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:999:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:8687:120":{"id":"2:8687:120","crate_id":2,"name":"DoubleEndedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8688:2643","2:8689:2644","2:8690:2645","2:8691:2646","2:8695:2647","2:8698:2648"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8844:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:524:1957":{"id":"0:524:1957","crate_id":0,"name":"push_sub","span":{"filename":"src/runtime.rs","begin":[369,0],"end":[369,42]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:3501:2570":{"id":"2:3501:2570","crate_id":2,"name":"BitAndAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3503:353"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:74":{"id":"0:74","crate_id":0,"name":null,"span":{"filename":"src/ident_fragment.rs","begin":[43,0],"end":[56,1]},"visibility":{"restricted":{"parent":"0:49:1633","path":"::ident_fragment"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["span"],"trait":{"name":"IdentFragment","id":"0:63:1638","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Ident","id":"21:1066:2206","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:75:1875","0:76:661"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13729:31652":{"id":"2:13729:31652","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:15744:2387","self::pattern":"2:13302:2949"},"attrs":["#[stable(feature = \"split_inclusive\", since = \"1.51.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitInclusive","id":"2:13094:2879","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:2943","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:434:1544":{"id":"0:434:1544","crate_id":0,"name":"0","span":{"filename":"src/runtime.rs","begin":[141,24],"end":[141,29]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"T"}},"2:3603:132":{"id":"2:3603:132","crate_id":2,"name":"FnOnce","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3605:181","2:3606:379"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8602:2727":{"id":"2:8602:2727","crate_id":2,"name":"Sum","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8604:2697"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:237:1891":{"id":"0:237:1891","crate_id":0,"name":"quote_into_iter","span":{"filename":"src/runtime.rs","begin":[74,8],"end":[76,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}},{"kind":"resolved_path","inner":{"name":"DoesNotHaveIter","id":"0:193:1905","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:193:1905":{"id":"0:193:1905","crate_id":0,"name":"ThereIsNoIteratorInRepetition","span":{"filename":"src/runtime.rs","begin":[11,0],"end":[11,41]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"unit","generics":{"params":[],"where_predicates":[]},"fields_stripped":false,"fields":[],"impls":[]}},"1:4429:3089":{"id":"1:4429:3089","crate_id":1,"name":"Read","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4430:3366","1:4431:57414","1:4433:57415","1:4434:57416","1:4435:3090","1:4436:57417","1:4437:57275","1:4439:57418","1:4440:2673","1:4441:2948","1:4442:2657","1:4444:2667"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6187:55602":{"id":"5:6187:55602","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"1:15750:2392"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8455:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13321:3553":{"id":"2:13321:3553","crate_id":2,"name":"Searcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:13323:3574","2:13324:923","2:13325:58720","2:13326:58721"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3347:211":{"id":"2:3347:211","crate_id":2,"name":"Send","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:243:1891":{"id":"0:243:1891","crate_id":0,"name":"quote_into_iter","span":{"filename":"src/runtime.rs","begin":[86,8],"end":[86,62]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'q","mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"qualified_path","inner":{"name":"Iter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:240:2296","args":null}}},{"kind":"resolved_path","inner":{"name":"HasIter","id":"0:191:1906","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:135:1634":{"id":"0:135:1634","crate_id":0,"name":"to_tokens","span":{"filename":"src/to_tokens.rs","begin":[96,4],"end":[98,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3518:2574":{"id":"2:3518:2574","crate_id":2,"name":"ShrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3520:1239"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13782:55745":{"id":"2:13782:55745","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"self::pattern":"2:13302:2949","prim@char":"1:15744:2387"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["suffix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:2943","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13312:2943","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13327:3555","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13715:2349":{"id":"2:13715:2349","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"self::pattern":"2:13302:2949","prim@char":"1:15744:2387"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:2943","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13312:2943","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13327:3555","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3450:2564":{"id":"2:3450:2564","crate_id":2,"name":"SubAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3452:1358"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:19:2118":{"id":"0:19:2118","crate_id":0,"name":"append","span":{"filename":"src/ext.rs","begin":[12,4],"end":[14,27]},"visibility":"default","docs":"For use by `ToTokens` implementations.\n\nAppends the token specified to this list of tokens.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"generic","inner":"U"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3154:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"TokenTree","id":"21:1005:2111","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:525:2006":{"id":"0:525:2006","crate_id":0,"name":"push_sub_spanned","span":{"filename":"src/runtime.rs","begin":[369,0],"end":[369,42]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:999:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:454:1928":{"id":"0:454:1928","crate_id":0,"name":"push_caret","span":{"filename":"src/runtime.rs","begin":[334,0],"end":[334,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"1:6646:3037":{"id":"1:6646:3037","crate_id":1,"name":"AsRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6647:55635"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:505:1997":{"id":"0:505:1997","crate_id":0,"name":"push_larrow_spanned","span":{"filename":"src/runtime.rs","begin":[359,0],"end":[359,52]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:999:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:13680:59970":{"id":"2:13680:59970","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13750:59978":{"id":"2:13750:59978","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:2943","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13312:2943","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13327:3555","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:358:2344":{"id":"0:358:2344","crate_id":0,"name":"__span","span":{"filename":"src/spanned.rs","begin":[5,4],"end":[5,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Span","id":"21:999:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"1:5504:3137":{"id":"1:5504:3137","crate_id":1,"name":"FileExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5505:54786","1:5506:54788","1:5507:54787","1:5508:54789"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:75:1875":{"id":"0:75:1875","crate_id":0,"name":"span","span":{"filename":"src/ident_fragment.rs","begin":[44,4],"end":[46,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Span","id":"21:999:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:14426:141":{"id":"2:14426:141","crate_id":2,"name":"GlobalAlloc","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:14427:278","2:14428:519","2:14429:281","2:14430:1081"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3513:2573":{"id":"2:3513:2573","crate_id":2,"name":"ShlAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3515:1236"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:509:1999":{"id":"0:509:1999","crate_id":0,"name":"push_rem_eq_spanned","span":{"filename":"src/runtime.rs","begin":[361,0],"end":[361,52]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:999:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:3659:2578":{"id":"2:3659:2578","crate_id":2,"name":"IndexMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3661:755"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"Index","id":"2:3655:2577","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Idx"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:10816:3167":{"id":"2:10816:3167","crate_id":2,"name":"BuildHasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10817:146","2:10818:33116","2:10819:55570"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13762:59981":{"id":"2:13762:59981","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:13302:2949","prim@char":"1:15744:2387","str::match_indices":"1:15750:2392","`DoubleEndedIterator`":"2:8687:120"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatchIndices","id":"2:49881:3844","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:2943","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13312:2943","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13327:3555","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2900:183":{"id":"2:2900:183","crate_id":2,"name":"PartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2902:605","2:2903:908"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:63:1638":{"id":"0:63:1638","crate_id":0,"name":"IdentFragment","span":{"filename":"src/ident_fragment.rs","begin":[11,0],"end":[21,1]},"visibility":"public","docs":"Specialized formatting trait used by `format_ident!`.\n\n[`Ident`] arguments formatted using this trait will have their `r#` prefix\nstripped, if present.\n\nSee [`format_ident!`] for more information.","links":{"`Ident`":"21:1066:2206","`format_ident!`":"0:47:2199"},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:64:661","0:65:1875"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:66","0:70","0:74","0:77","0:383","0:385","0:387","0:389","0:391","0:393","0:395","0:397","0:399","0:401"]}},"0:295:1959":{"id":"0:295:1959","crate_id":0,"name":"push_lifetime","span":{"filename":"src/runtime.rs","begin":[218,0],"end":[246,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["lifetime",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"1:4771:3056":{"id":"1:4771:3056","crate_id":1,"name":"ToSocketAddrs","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4772:2298","1:4773:57752"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:44:2115":{"id":"0:44:2115","crate_id":0,"name":"Sealed","span":{"filename":"src/ext.rs","begin":[107,4],"end":[107,23]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5512:3138":{"id":"1:5512:3138","crate_id":1,"name":"PermissionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5513:5412","1:5514:55351","1:5515:55352"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13785:59989":{"id":"2:13785:59989","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"self::pattern":"2:13302:2949","prim@char":"1:15744:2387"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:2943","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13312:2943","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13327:3555","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:399":{"id":"0:399","crate_id":0,"name":null,"span":{"filename":"src/ident_fragment.rs","begin":[86,0],"end":[86,55]},"visibility":{"restricted":{"parent":"0:49:1633","path":"::ident_fragment"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["span"],"trait":{"name":"IdentFragment","id":"0:63:1638","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u128"},"items":["0:400:661"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:450:1926":{"id":"0:450:1926","crate_id":0,"name":"push_at","span":{"filename":"src/runtime.rs","begin":[332,0],"end":[332,40]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:117:1639":{"id":"0:117:1639","crate_id":0,"name":"ToTokens","span":{"filename":"src/to_tokens.rs","begin":[10,0],"end":[75,1]},"visibility":"public","docs":"Types that can be interpolated inside a `quote!` invocation.\n\n[`quote!`]: macro.quote.html","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:118:1634","0:119:2250","0:120:2251"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:121","0:125","0:129","0:133","0:136","0:139","0:142","0:144","0:403","0:405","0:407","0:409","0:411","0:413","0:415","0:417","0:419","0:421","0:423","0:425","0:427","0:429","0:147","0:149","0:151","0:153","0:155","0:157","0:159","0:161"]}},"2:3495:2569":{"id":"2:3495:2569","crate_id":2,"name":"Shr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3497:181","2:3498:1238"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:446:1924":{"id":"0:446:1924","crate_id":0,"name":"push_and_and","span":{"filename":"src/runtime.rs","begin":[330,0],"end":[330,54]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:396:661":{"id":"0:396:661","crate_id":0,"name":"fmt","span":{"filename":"src/ident_fragment.rs","begin":[86,0],"end":[86,55]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10493:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10482:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3474:2565":{"id":"2:3474:2565","crate_id":2,"name":"BitAnd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3476:181","2:3477:352"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:506:1949":{"id":"0:506:1949","crate_id":0,"name":"push_rem","span":{"filename":"src/runtime.rs","begin":[360,0],"end":[360,42]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:3355:218":{"id":"2:3355:218","crate_id":2,"name":"StructuralPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:485:1988":{"id":"0:485:1988","crate_id":0,"name":"push_le_spanned","span":{"filename":"src/runtime.rs","begin":[349,0],"end":[349,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:999:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:13779:14418":{"id":"2:13779:14418","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"self::pattern":"2:13302:2949","prim@char":"1:15744:2387"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:2943","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3160:229":{"id":"2:3160:229","crate_id":2,"name":"TryInto","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3162:127","2:3163:1419"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6185:2718":{"id":"5:6185:2718","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:8455:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]","#[stable(feature = \"repeat_str\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8455:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:844:223":{"id":"5:844:223","crate_id":5,"name":"ToOwned","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:845:2517","5:846:2706","5:847:2707"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:426:1634":{"id":"0:426:1634","crate_id":0,"name":"to_tokens","span":{"filename":"src/to_tokens.rs","begin":[139,0],"end":[156,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:480:1937":{"id":"0:480:1937","crate_id":0,"name":"push_ge","span":{"filename":"src/runtime.rs","begin":[347,0],"end":[347,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"1:6577:3042":{"id":"1:6577:3042","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6578:54984"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10355:2115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:412:1634":{"id":"0:412:1634","crate_id":0,"name":"to_tokens","span":{"filename":"src/to_tokens.rs","begin":[139,0],"end":[156,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:504:1948":{"id":"0:504:1948","crate_id":0,"name":"push_larrow","span":{"filename":"src/runtime.rs","begin":[359,0],"end":[359,52]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:13697:3231":{"id":"2:13697:3231","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"str::slice_mut_unchecked":"1:15750:2392","`str`":"1:15750:2392","crate::ops::Index":"2:3655:2577"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:462:1917":{"id":"0:462:1917","crate_id":0,"name":"push_comma","span":{"filename":"src/runtime.rs","begin":[338,0],"end":[338,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:10554:2815":{"id":"2:10554:2815","crate_id":2,"name":"UpperExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10555:661"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:9503:2538":{"id":"2:9503:2538","crate_id":2,"name":"UnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13701:3870":{"id":"2:13701:3870","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:15744:2387"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Chars","id":"2:49683:2945","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:337":{"id":"0:337","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[110,0],"end":[110,35]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::ext::TokenStreamExt","name":"TokenStreamExt","id":"0:18:1637","glob":false}},"0:392:661":{"id":"0:392:661","crate_id":0,"name":"fmt","span":{"filename":"src/ident_fragment.rs","begin":[86,0],"end":[86,55]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10493:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10482:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:76:661":{"id":"0:76:661","crate_id":0,"name":"fmt","span":{"filename":"src/ident_fragment.rs","begin":[48,4],"end":[55,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10493:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10482:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:128:1634":{"id":"0:128:1634","crate_id":0,"name":"to_tokens","span":{"filename":"src/to_tokens.rs","begin":[84,4],"end":[86,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:145:1634":{"id":"0:145:1634","crate_id":0,"name":"to_tokens","span":{"filename":"src/to_tokens.rs","begin":[122,4],"end":[124,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10771:142":{"id":"2:10771:142","crate_id":2,"name":"Hash","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10772:716","2:10774:55476"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:499:1965":{"id":"0:499:1965","crate_id":0,"name":"push_pound_spanned","span":{"filename":"src/runtime.rs","begin":[356,0],"end":[356,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:999:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:2867:104":{"id":"2:2867:104","crate_id":2,"name":"Clone","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2868:409","2:2869:411"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3231:115":{"id":"2:3231:115","crate_id":2,"name":"Default","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3232:59"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:452:1927":{"id":"0:452:1927","crate_id":0,"name":"push_bang","span":{"filename":"src/runtime.rs","begin":[333,0],"end":[333,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:21:2128":{"id":"0:21:2128","crate_id":0,"name":"append_all","span":{"filename":"src/ext.rs","begin":[33,4],"end":[36,26]},"visibility":"default","docs":"For use by `ToTokens` implementations.\n\n```\n# use quote::{quote, TokenStreamExt, ToTokens};\n# use proc_macro2::TokenStream;\n#\nstruct X;\n\nimpl ToTokens for X {\n    fn to_tokens(&self, tokens: &mut TokenStream) {\n        tokens.append_all(&[true, false]);\n    }\n}\n\nlet tokens = quote!(#X);\nassert_eq!(tokens.to_string(), \"true false\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["iter",{"kind":"generic","inner":"I"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8643:151","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8643:151","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"ToTokens","id":"0:117:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:464:1930":{"id":"0:464:1930","crate_id":0,"name":"push_div","span":{"filename":"src/runtime.rs","begin":[339,0],"end":[339,42]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"1:6472:3140":{"id":"1:6472:3140","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6473:57851","1:6474:7205","1:6475:7206","1:6476:7208","1:6477:7207","1:6478:7209","1:6479:7210","1:6480:7212","1:6481:5453","1:6482:7215","1:6483:7216","1:6484:7217","1:6485:7218","1:6486:7219","1:6487:7220","1:6488:7213","1:6489:7214"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6163":{"id":"5:6163","crate_id":5,"name":null,"span":null,"visibility":{"restricted":{"parent":"5:5976:1342","path":"::str"}},"docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["5:6164:60627","5:6165:3099","5:6168:60628","5:6171:60629","5:6183:60630","5:6184:60631","5:6185:2718","5:6186:55601","5:6187:55602"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:421":{"id":"0:421","crate_id":0,"name":null,"span":{"filename":"src/to_tokens.rs","begin":[139,0],"end":[156,1]},"visibility":{"restricted":{"parent":"0:82:1634","path":"::to_tokens"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["to_token_stream","into_token_stream"],"trait":{"name":"ToTokens","id":"0:117:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u64"},"items":["0:422:1634"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:409":{"id":"0:409","crate_id":0,"name":null,"span":{"filename":"src/to_tokens.rs","begin":[139,0],"end":[156,1]},"visibility":{"restricted":{"parent":"0:82:1634","path":"::to_tokens"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["to_token_stream","into_token_stream"],"trait":{"name":"ToTokens","id":"0:117:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"i64"},"items":["0:410:1634"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:469:1967":{"id":"0:469:1967","crate_id":0,"name":"push_dot_spanned","span":{"filename":"src/runtime.rs","begin":[341,0],"end":[341,42]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:999:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:447:1973":{"id":"0:447:1973","crate_id":0,"name":"push_and_and_spanned","span":{"filename":"src/runtime.rs","begin":[330,0],"end":[330,54]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:999:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:207:1632":{"id":"0:207:1632","crate_id":0,"name":"ext","span":{"filename":"src/runtime.rs","begin":[47,0],"end":[47,11]},"visibility":"public","docs":"Extension traits used by the implementation of `quote!`. These are defined\nin separate traits, rather than as a single trait due to ambiguity issues.\n\nThese traits expose a `quote_into_iter` method which should allow calling\nwhichever impl happens to be applicable. Calling that method repeatedly on\nthe returned value should be idempotent.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:231:2286","0:235:2290","0:240:2296"],"is_stripped":false}},"5:6186:55601":{"id":"5:6186:55601","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"1:15750:2392"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8455:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:384:661":{"id":"0:384:661","crate_id":0,"name":"fmt","span":{"filename":"src/ident_fragment.rs","begin":[85,0],"end":[85,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10493:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10482:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13705:31775":{"id":"2:13705:31775","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_whitespace":"1:15750:2392"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_ascii_whitespace\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitAsciiWhitespace","id":"2:49996:3850","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:451:1975":{"id":"0:451:1975","crate_id":0,"name":"push_at_spanned","span":{"filename":"src/runtime.rs","begin":[332,0],"end":[332,40]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:999:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:142":{"id":"0:142","crate_id":0,"name":null,"span":{"filename":"src/to_tokens.rs","begin":[115,0],"end":[119,1]},"visibility":{"restricted":{"parent":"0:82:1634","path":"::to_tokens"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["to_token_stream","into_token_stream"],"trait":{"name":"ToTokens","id":"0:117:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"str"},"items":["0:143:1634"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:500:1946":{"id":"0:500:1946","crate_id":0,"name":"push_question","span":{"filename":"src/runtime.rs","begin":[357,0],"end":[357,52]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"5:6498:224":{"id":"5:6498:224","crate_id":5,"name":"ToString","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:6499:1399"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:477:1984":{"id":"0:477:1984","crate_id":0,"name":"push_eq_spanned","span":{"filename":"src/runtime.rs","begin":[345,0],"end":[345,40]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:999:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:507:1998":{"id":"0:507:1998","crate_id":0,"name":"push_rem_spanned","span":{"filename":"src/runtime.rs","begin":[360,0],"end":[360,42]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:999:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:13678:2649":{"id":"2:13678:2649","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_is_empty\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3164:228":{"id":"2:3164:228","crate_id":2,"name":"TryFrom","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3166:127","2:3167:1418"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:293:1909":{"id":"0:293:1909","crate_id":0,"name":"push_ident","span":{"filename":"src/runtime.rs","begin":[209,0],"end":[212,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:10542:2339":{"id":"2:10542:2339","crate_id":2,"name":"Octal","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10543:661"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:444:1923":{"id":"0:444:1923","crate_id":0,"name":"push_and","span":{"filename":"src/runtime.rs","begin":[329,0],"end":[329,42]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:479:1985":{"id":"0:479:1985","crate_id":0,"name":"push_eq_eq_spanned","span":{"filename":"src/runtime.rs","begin":[346,0],"end":[346,50]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:999:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:3812:137":{"id":"2:3812:137","crate_id":2,"name":"FromResidual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3814:688"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Try","id":"2:3807:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:73:661":{"id":"0:73:661","crate_id":0,"name":"fmt","span":{"filename":"src/ident_fragment.rs","begin":[38,4],"end":[40,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10493:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10482:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13691:55706":{"id":"2:13691:55706","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:47750:176"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11175:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11175:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:184":{"id":"0:184","crate_id":0,"name":null,"span":{"filename":"src/runtime.rs","begin":[6,0],"end":[6,29]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"core::option::Option","name":"Option","id":"2:47750:176","glob":false}},"0:288:1961":{"id":"0:288:1961","crate_id":0,"name":"parse","span":{"filename":"src/runtime.rs","begin":[182,0],"end":[185,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:403":{"id":"0:403","crate_id":0,"name":null,"span":{"filename":"src/to_tokens.rs","begin":[139,0],"end":[156,1]},"visibility":{"restricted":{"parent":"0:82:1634","path":"::to_tokens"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["to_token_stream","into_token_stream"],"trait":{"name":"ToTokens","id":"0:117:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"i8"},"items":["0:404:1634"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:448:1925":{"id":"0:448:1925","crate_id":0,"name":"push_and_eq","span":{"filename":"src/runtime.rs","begin":[331,0],"end":[331,52]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:501:1995":{"id":"0:501:1995","crate_id":0,"name":"push_question_spanned","span":{"filename":"src/runtime.rs","begin":[357,0],"end":[357,52]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:999:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:13686:59972":{"id":"2:13686:59972","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[stable(feature = \"str_mut_extras\", since = \"1.20.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:3484:2566":{"id":"2:3484:2566","crate_id":2,"name":"BitXor","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3486:181","2:3487:357"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:515:2001":{"id":"0:515:2001","crate_id":0,"name":"push_shl_spanned","span":{"filename":"src/runtime.rs","begin":[364,0],"end":[364,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:999:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"1:4486:2809":{"id":"1:4486:2809","crate_id":1,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4487:2472","1:4488:58275","1:4490:58276","1:4491:4249","1:4492:58277","1:4493:58278","1:4494:57359","1:4503:2673"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13759:59980":{"id":"2:13759:59980","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"`DoubleEndedIterator`":"2:8687:120","prim@char":"1:15744:2387","self::pattern":"2:13302:2949","str::rmatch_indices":"1:15750:2392"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"MatchIndices","id":"2:49863:3843","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:2943","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:357:2343":{"id":"0:357:2343","crate_id":0,"name":"Spanned","span":{"filename":"src/spanned.rs","begin":[4,0],"end":[6,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:358:2344"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:187":{"id":"0:187","crate_id":0,"name":null,"span":{"filename":"src/runtime.rs","begin":[7,0],"end":[7,23]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"proc_macro2","name":"proc_macro2","id":"21:0:2011","glob":true}},"0:425":{"id":"0:425","crate_id":0,"name":null,"span":{"filename":"src/to_tokens.rs","begin":[139,0],"end":[156,1]},"visibility":{"restricted":{"parent":"0:82:1634","path":"::to_tokens"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["to_token_stream","into_token_stream"],"trait":{"name":"ToTokens","id":"0:117:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"usize"},"items":["0:426:1634"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:162:1634":{"id":"0:162:1634","crate_id":0,"name":"to_tokens","span":{"filename":"src/to_tokens.rs","begin":[202,4],"end":[204,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3890:2536":{"id":"2:3890:2536","crate_id":2,"name":"DispatchFromDyn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13747:59977":{"id":"2:13747:59977","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:2943","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6168:60628":{"id":"5:6168:60628","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:8455:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"str_replacen\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8455:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:2943","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:455:1977":{"id":"0:455:1977","crate_id":0,"name":"push_caret_spanned","span":{"filename":"src/runtime.rs","begin":[334,0],"end":[334,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:999:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:3454:2562":{"id":"2:3454:2562","crate_id":2,"name":"MulAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3456:894"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:4129:3631":{"id":"2:4129:3631","crate_id":2,"name":"Provider","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4130:57764"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8652:2617":{"id":"2:8652:2617","crate_id":2,"name":"Extend","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8654:2139","2:8656:2650","2:8657:2651"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6164:60627":{"id":"5:6164:60627","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[stable(feature = \"str_box_extras\", since = \"1.20.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:444:2253","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8200:2545","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Box","id":"5:444:2253","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8200:2545","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:70":{"id":"0:70","crate_id":0,"name":null,"span":{"filename":"src/ident_fragment.rs","begin":[33,0],"end":[41,1]},"visibility":{"restricted":{"parent":"0:49:1633","path":"::ident_fragment"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IdentFragment","id":"0:63:1638","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["span"],"trait":{"name":"IdentFragment","id":"0:63:1638","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"items":["0:72:1875","0:73:661"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:6171:60629":{"id":"5:6171:60629","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:8455:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8455:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3597:130":{"id":"2:3597:130","crate_id":2,"name":"Fn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3599:377"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3600:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:517:2002":{"id":"0:517:2002","crate_id":0,"name":"push_shl_eq_spanned","span":{"filename":"src/runtime.rs","begin":[365,0],"end":[365,56]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["span",{"kind":"resolved_path","inner":{"name":"Span","id":"21:999:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:398:661":{"id":"0:398:661","crate_id":0,"name":"fmt","span":{"filename":"src/ident_fragment.rs","begin":[86,0],"end":[86,55]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10493:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10482:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:427":{"id":"0:427","crate_id":0,"name":null,"span":{"filename":"src/to_tokens.rs","begin":[139,0],"end":[156,1]},"visibility":{"restricted":{"parent":"0:82:1634","path":"::to_tokens"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["to_token_stream","into_token_stream"],"trait":{"name":"ToTokens","id":"0:117:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"f32"},"items":["0:428:1634"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13726:54996":{"id":"2:13726:54996","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:13302:2949","`DoubleEndedIterator`":"2:8687:120","str::rsplit":"1:15750:2392","prim@char":"1:15744:2387","str::split_whitespace":"1:15750:2392"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"2:49713:2863","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:2943","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3818:2582":{"id":"2:3818:2582","crate_id":2,"name":"Residual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3820:54202"],"generics":{"params":[{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3157:135":{"id":"2:3157:135","crate_id":2,"name":"From","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3159:682"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:340":{"id":"0:340","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[111,0],"end":[111,45]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::ident_fragment::IdentFragment","name":"IdentFragment","id":"0:63:1638","glob":false}},"2:13800:59992":{"id":"2:13800:59992","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"1:15744:2387"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDebug","id":"2:50012:3852","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:80:661":{"id":"0:80:661","crate_id":0,"name":"fmt","span":{"filename":"src/ident_fragment.rs","begin":[66,4],"end":[68,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10493:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10482:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:138:1634":{"id":"0:138:1634","crate_id":0,"name":"to_tokens","span":{"filename":"src/to_tokens.rs","begin":[102,4],"end":[104,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["tokens",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"TokenStream","id":"21:994:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:24042:3524":{"id":"2:24042:3524","crate_id":2,"name":"SimdElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:24043:3532"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:24038:2115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Copy","id":"2:3357:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13799:55605":{"id":"2:13799:55605","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:7582:3265":{"id":"1:7582:3265","crate_id":1,"name":"Termination","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:7583:58174"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3853:2535":{"id":"2:3853:2535","crate_id":2,"name":"CoerceUnsized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:23072:3528":{"id":"2:23072:3528","crate_id":2,"name":"SimdInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23073:3532","2:23074:59352","2:23075:1229","2:23076:1230","2:23077:42522","2:23078:59397","2:23079:59398","2:23080:59399","2:23081:59400","2:23082:59401","2:23083:59353","2:23084:59354","2:23085:59355","2:23086:59356","2:23087:59357","2:23088:59358","2:23089:59359"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3357:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:23121:2115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:155":{"id":"0:155","crate_id":0,"name":null,"span":{"filename":"src/to_tokens.rs","begin":[183,0],"end":[187,1]},"visibility":{"restricted":{"parent":"0:82:1634","path":"::to_tokens"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["to_token_stream","into_token_stream"],"trait":{"name":"ToTokens","id":"0:117:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Punct","id":"21:1044:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:156:1634"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3154:149":{"id":"2:3154:149","crate_id":2,"name":"Into","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3156:2141"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:23019:3717":{"id":"2:23019:3717","crate_id":2,"name":"SimdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23020:3532","2:23021:59352","2:23022:59616","2:23023:59617","2:23024:59618","2:23025:42522","2:23026:59619","2:23027:59620","2:23028:59621","2:23029:59622","2:23030:59623","2:23031:59624","2:23032:59625","2:23033:59626","2:23034:59627","2:23035:59628","2:23036:59401","2:23037:59629","2:23038:58757","2:23039:58756","2:23040:58758","2:23041:59353","2:23042:59354","2:23043:59355","2:23044:59356"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3357:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:23121:2115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}}},"paths":{"19:117:5249":{"crate_id":19,"path":["panic_unwind","dwarf","eh","EHContext"],"kind":"struct"},"12:353:7704":{"crate_id":12,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"17:10240:4772":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"6:4242:6831":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"1:14300:3055":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"2:5697:3689":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"2:22851:59822":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"1:13342:7837":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"21:841:2963":{"crate_id":21,"path":["proc_macro2","fallback","LineColumn"],"kind":"struct"},"17:10962:46935":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"2:47037:2752":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"16:3029:4637":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"17:13180:5856":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"7:38:44356":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"16:3129:4647":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"6:513:6449":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"5:1751:194":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"2:46975:2747":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"16:6026:4373":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"2:52585:3658":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"20:1191:5035":{"crate_id":20,"path":["proc_macro","bridge","client","FreeFunctions"],"kind":"struct"},"12:399:4282":{"crate_id":12,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"1:1132:3360":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"2:14390:201":{"crate_id":2,"path":["core","task","ready","Ready"],"kind":"struct"},"5:3395:2298":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"6:6250:7309":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"1:12009:3310":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"5:7714:4055":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"1:1152:10671":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"2:46153:195":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"17:13953:6070":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"1:1149:10669":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"2:5113:2825":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"16:4351:6102":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"2:8097:3701":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"2:11666:2866":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"5:2266:5044":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"17:11130:7660":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"12:2269:3206":{"crate_id":12,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"16:2905:4634":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"2:23108:3719":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"1:14338:7758":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"2:50440:3862":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"17:9836:61369":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"2:46066:2586":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"1:11122:3410":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"19:0:995":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"16:2839:4632":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"1:4370:2719":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"2:53005:3687":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"1:10407:3328":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"2:8844:157":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"5:1072:2298":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"2:53756:7531":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"2:25055:167":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"1:10733:3302":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"1:11946:3185":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"17:9291:5342":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"17:10571:4756":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"5:8466:2933":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"5:8403:3911":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:14864:7759":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"1:5766:3484":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"21:922:2961":{"crate_id":21,"path":["proc_macro2","imp","TokenTreeIter"],"kind":"enum"},"6:3896:6678":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"2:47926:2590":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"1:15745:2388":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"6:5216:7000":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"2:51947:3642":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"2:39126:2635":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"17:3743:4750":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"1:8261:202":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"5:69:4051":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"2:47943:178":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"16:5668:4434":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"1:2196:2613":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"17:13938:6069":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"6:1600:6565":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"5:1502:3205":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"6:157:39495":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"6:6925:7339":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"18:678:142":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"1:10382:3346":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"1:2185:2610":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"1:7714:3347":{"crate_id":1,"path":["std","sync","mpsc","blocking","Inner"],"kind":"struct"},"17:9796:61355":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"14:11:7860":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"17:681:5234":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"6:6114:7230":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"1:10925:3098":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"12:2253:3205":{"crate_id":12,"path":["hashbrown","set","Entry"],"kind":"enum"},"2:49613:2874":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"2:22849:59819":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"2:50448:3864":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"1:10874:3093":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"14:250:6315":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"18:720:5255":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"6:6184:7273":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"17:10187:7806":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"6:1606:6567":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"12:2398:6361":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"2:52303:3674":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"6:4127:6808":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"1:7579:3264":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"1:10895:2738":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"2:5676:10675":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"17:13037:5804":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"6:4346:6868":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"16:7238:4396":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"2:46727:3911":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"17:510:46683":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"6:4005:6751":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"1:1431:2590":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"6:1531:6526":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"17:2484:46781":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"16:3243:4642":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"16:5326:4419":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"1:2955:3364":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"2:48801:107":{"crate_id":2,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"17:13345:5895":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"2:3484:2566":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"1:3497:3107":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"12:1682:4290":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"5:4581:4113":{"crate_id":5,"path":["alloc","collections","vec_deque","pair_slices","PairSlices"],"kind":"struct"},"6:5439:7115":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"5:6759:2524":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"1:4511:3095":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"5:5388:200":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"1:5867:3418":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"17:10093:4805":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"6:5311:7047":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"17:11031:46693":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"2:3148:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"2:13302:2949":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"2:49817:2865":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"12:777:2591":{"crate_id":12,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"2:46173:198":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"6:4277:6833":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"6:4321:6856":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"1:4275:3113":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"17:9131:46691":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"2:50428:3858":{"crate_id":2,"path":["core","str","LinesAnyMap"],"kind":"struct"},"2:49996:3850":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"6:4287:6840":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"17:13735:6016":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"17:12015:5543":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"2:3157:135":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"2:8167:2710":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"17:11514:5444":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"16:3461:4645":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"16:5649:4433":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"2:13327:3555":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"20:2917:7650":{"crate_id":20,"path":["proc_macro","bridge","ExpnGlobals"],"kind":"struct"},"17:8849:4779":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"2:51923:3660":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"17:13361:5898":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"17:10058:4810":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"6:4208:6828":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"2:4968:3779":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"1:13711:3260":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"2:50456:3859":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"1:15715:10674":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"6:5260:7022":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"1:8175:3282":{"crate_id":1,"path":["std","sync","mpsc","sync","State"],"kind":"struct"},"2:3812:137":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"6:5240:7009":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"12:880:2614":{"crate_id":12,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"12:2072:2613":{"crate_id":12,"path":["hashbrown","set","Union"],"kind":"struct"},"9:692:4145":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressionStrategy"],"kind":"enum"},"1:6574:3053":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"2:14426:141":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"2:53608:7521":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"1:10156:5234":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"6:4135:6812":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"6:4386:6890":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"1:14699:5099":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"1:14320:7753":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"1:11246:3048":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"6:3960:6729":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"1:14798:3217":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"2:46545:3742":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"1:3322:3104":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"16:6173:4449":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"2:53733:7530":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"20:3129:2222":{"crate_id":20,"path":["proc_macro","Punct"],"kind":"struct"},"5:7918:5056":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"17:12383:5624":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"1:7042:57261":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"16:4628:6110":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"17:11671:5476":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"1:9553:5089":{"crate_id":1,"path":["std","sys_common","rwlock","StaticRwLockReadGuard"],"kind":"struct"},"2:25022:166":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"2:24410:38842":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"16:6549:4394":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"5:3462:2613":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"2:49298:2887":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"6:6671:7321":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"12:466:7825":{"crate_id":12,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"1:3793:3304":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"20:3001:2501":{"crate_id":20,"path":["proc_macro","LexError"],"kind":"struct"},"21:931:1876":{"crate_id":21,"path":["proc_macro2","imp","Span"],"kind":"enum"},"6:6120:7232":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"6:3981:6737":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"1:8695:2715":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"2:14118:187":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"18:782:5253":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"1:11814:3263":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"6:1721:6647":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"17:10198:46752":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"2:46609:3853":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"17:12302:5589":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"2:24385:7361":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"16:7309:4381":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"6:1544:6532":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"1:2695:180":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"16:6595:4391":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"6:527:6457":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"17:607:46684":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"6:4088:6787":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"1:11086:54980":{"crate_id":1,"path":["std","net","parser","AddrKind"],"kind":"enum"},"17:13271:5875":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"2:10688:59199":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"2:49578:2728":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"2:51280:7459":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"1:10642:3387":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"1:10594:3365":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"2:2166:579":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"1:12528:57271":{"crate_id":1,"path":["std","sys","unix","fs","TimespecDebugAdapter"],"kind":"struct"},"17:294:61362":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"1:5512:3138":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"9:900:6416":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"2:47782:2130":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"2:46994:2749":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"1:11224:7204":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"1:11196:3410":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"2:11404:2863":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"16:5998:4348":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"6:6129:7235":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"12:1162:4276":{"crate_id":12,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"1:15760:2400":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"2:46217:199":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"5:1518:3207":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"1:14556:3135":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"2:12766:3974":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"1:11273:14017":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"20:3009:2591":{"crate_id":20,"path":["proc_macro","token_stream","IntoIter"],"kind":"struct"},"17:12620:5665":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"2:13321:3553":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"20:2840:2111":{"crate_id":20,"path":["proc_macro","bridge","TokenTree"],"kind":"enum"},"17:11085:4785":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"21:855:1876":{"crate_id":21,"path":["proc_macro2","fallback","Span"],"kind":"struct"},"5:8532:2614":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"1:9520:3403":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutexGuard"],"kind":"struct"},"6:3987:6739":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"16:6858:4677":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"21:908:1815":{"crate_id":21,"path":["proc_macro2","imp","TokenStream"],"kind":"enum"},"6:1576:6548":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"2:53639:7524":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"6:4332:6862":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"1:1527:3203":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"17:12143:5362":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"16:7702:4387":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"2:6870:58719":{"crate_id":2,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"17:11168:7661":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"9:27:4194":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","HashBuffers"],"kind":"struct"},"6:5301:7040":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"5:4709:5047":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"1:8167:3348":{"crate_id":1,"path":["std","sync","mpsc","sync","Packet"],"kind":"struct"},"1:3112:3380":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"2:46928:2744":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"1:2464:7835":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"1:15726:54969":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"17:10464:4723":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"2:24824:171":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"17:13549:5950":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"20:2683:2220":{"crate_id":20,"path":["proc_macro","bridge","Group"],"kind":"struct"},"6:4179:6826":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"17:12196:5573":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"16:6331:4295":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"2:56601:237":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:13992:3112":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"17:12770:5690":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"16:7637:4476":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"5:2284:4020":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"2:23261:3532":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"1:15494:5101":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"12:2404:61324":{"crate_id":12,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"2:53257:3675":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"2:3086:3527":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"1:9426:57682":{"crate_id":1,"path":["std","sys_common","mutex","MovableMutex"],"kind":"struct"},"1:11999:3244":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"1:11133:3412":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"2:46530:3154":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"17:10516:7659":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"6:5567:7153":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"17:9326:4707":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"17:9275:5341":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"2:11175:214":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"16:5639:4432":{"crate_id":16,"path":["gimli","read","cfi","UninitializedUnwindContext"],"kind":"struct"},"2:22870:59817":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"17:12262:5582":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"16:4743:6114":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"6:4315:6853":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"6:4230:6830":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"5:6562:2937":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"1:15766:2406":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"16:7355:4378":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"12:2419:2602":{"crate_id":12,"path":["hashbrown","TryReserveError"],"kind":"enum"},"6:4373:6885":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"17:10988:46934":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"12:1256:3208":{"crate_id":12,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"6:6902:7333":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"16:6643:4670":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"6:4392:6893":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"18:712:3591":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"1:4447:3091":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"18:704:5253":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"2:7129:2756":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"1:15071:3066":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"17:10390:4726":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"1:3086:3370":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"2:5117:3781":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"1:1491:3197":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"1:8847:3443":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"2:8643:151":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"17:10913:7817":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"16:5685:4435":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"6:5419:7109":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"2:3442:2558":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"14:194:45031":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"2:24447:38843":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"6:6057:7222":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"1:3839:205":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"2:49683:2945":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"17:13331:5893":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"17:12585:5653":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"17:11615:5463":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"12:1784:5040":{"crate_id":12,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"16:4495:6107":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"17:10104:4806":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"16:6557:4459":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"5:1673:2590":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"2:46696:3747":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"2:32644:59520":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum32"],"kind":"enum"},"2:24042:3524":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"2:52539:3654":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"1:13853:5097":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"17:10643:5357":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"1:2179:2612":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"2:57897:7540":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"6:4446:6915":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"17:13785:6028":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"16:7090:4468":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"2:51392:3651":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"20:3104:2220":{"crate_id":20,"path":["proc_macro","Group"],"kind":"struct"},"17:13721:6010":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"2:22804:3591":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"6:1740:6653":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"1:14957:3227":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"16:6630:4669":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"2:3154:149":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"1:14358:129":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"17:13755:6022":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"6:1551:6534":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"1:1157:10672":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"17:13257:5874":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"2:2905:124":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"17:12048:5553":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"17:8954:4717":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"9:1075:4213":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"2:49657:2946":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"2:53397:3679":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"2:48783:67":{"crate_id":2,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"5:8224:2937":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"2:23145:3718":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"2:23202:3162":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"14:244:7702":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"5:1729:3198":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"1:13784:3259":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"6:3993:6742":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"17:9958:61368":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"1:4429:3089":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"17:13774:6027":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"2:22832:59789":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"1:10242:5094":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"1:10217:5092":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"17:11937:5530":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"2:14042:150":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"16:3199:4640":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"2:37870:178":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"1:7582:3265":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"5:3814:160":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"2:49935:3847":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"17:12070:5554":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"1:10853:3119":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"17:8929:46686":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"16:7754:4479":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"21:1024:1912":{"crate_id":21,"path":["proc_macro2","Delimiter"],"kind":"enum"},"2:10009:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"2:47918:2298":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"17:11985:5540":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"21:817:2973":{"crate_id":21,"path":["proc_macro2","rcvec","RcVecIntoIter"],"kind":"struct"},"1:6106:3427":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"17:4008:7816":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"2:4823:3593":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"2:47228:2714":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"2:24281:7355":{"crate_id":2,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"18:611:4833":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"16:4660:6111":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"5:8232:4025":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"16:7247:4410":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"10:0:2360":{"crate_id":10,"path":["rustc_std_workspace_alloc"],"kind":"module"},"1:13323:7834":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"2:46597:3997":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"17:13404:5906":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"18:829:4826":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"3:321:205":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"1:15238:4307":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"12:2412:6363":{"crate_id":12,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"5:4694:236":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"16:6342:4453":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"1:5643:3475":{"crate_id":1,"path":["std","os","unix","net","addr","AsciiEscaped"],"kind":"struct"},"20:2445:53179":{"crate_id":20,"path":["proc_macro","bridge","LitKind"],"kind":"enum"},"17:13557:5951":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"1:8268:3180":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"2:3655:2577":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"16:6286:4296":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"1:10650:3106":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"2:5291:2827":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"18:849:4827":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"5:1276:4085":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"2:53619:7522":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"17:10166:5354":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"16:6604:4460":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"6:5331:7063":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"13:233:6360":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"2:8606:2726":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"17:11689:5477":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"2:3347:211":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"16:4439:6105":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"17:9746:7798":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"1:12497:3363":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"16:7025:4369":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"12:2036:2591":{"crate_id":12,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"20:1508:191":{"crate_id":20,"path":["proc_macro","bridge","client","ProcMacro"],"kind":"enum"},"17:12512:5640":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"12:750:2298":{"crate_id":12,"path":["hashbrown","map","Iter"],"kind":"struct"},"2:50497:3933":{"crate_id":2,"path":["core","time","FromFloatSecsErrorKind"],"kind":"enum"},"17:13215:5860":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"2:10781:146":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"16:7100:4469":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"17:10831:4727":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"2:10546:2340":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"9:603:44535":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"5:383:4076":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"16:5443:4426":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"20:2957:3025":{"crate_id":20,"path":["proc_macro","diagnostic","Diagnostic"],"kind":"struct"},"1:7294:119":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"2:49863:3843":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"16:6482:4666":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"17:9396:5344":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"1:5285:3416":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"17:12527:5644":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"2:23198:2115":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"1:1475:2937":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"9:686:4143":{"crate_id":9,"path":["miniz_oxide","deflate","core","SymFreq"],"kind":"struct"},"2:52225:3686":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"12:1666:4289":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"17:11181:5405":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"2:10540:119":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"2:24358:3766":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"20:523:61384":{"crate_id":20,"path":["proc_macro","bridge","scoped_cell","RefMutL"],"kind":"struct"},"6:6214:7290":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"1:12160:7835":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"17:10082:4804":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"2:39086:4094":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"2:46573:3745":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"2:8403:7831":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"1:2958:3366":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"2:52091:7471":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"2:46195:197":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"2:24758:173":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"17:11305:5680":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"2:11379:2590":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"17:9706:7797":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"2:50115:3557":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"1:1654:3208":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"17:9676:61370":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"1:15759:2399":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"5:1256:7830":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"5:4765:5047":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"1:11844:7608":{"crate_id":1,"path":["std","sync","mpsc","cache_aligned","CacheAligned"],"kind":"struct"},"6:4110:6800":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"16:7782:4385":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"2:3479:2274":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"17:13016:5795":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"16:5217:4626":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"17:12557:5647":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"2:56166:3520":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"1:11423:3285":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"6:4061:6774":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"6:5426:7111":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"2:8639:136":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"2:48178:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"17:10223:4720":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"6:6908:7334":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"17:13440:5920":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"17:10435:4725":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"2:13332:3556":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"2:32584:3936":{"crate_id":2,"path":["core","mem","valid_align","ValidAlign"],"kind":"struct"},"17:13899:6060":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"2:4459:2591":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"1:7416:3255":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"2:4078:68":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"6:4356:6874":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"14:56:2206":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"1:11774:181":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"2:46670:3994":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"2:49552:2876":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"16:3177:4639":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"1:11837:57274":{"crate_id":1,"path":["std","sync","mpsc","sync","Failure"],"kind":"enum"},"2:49835:2861":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"6:612:6507":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"5:3366:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"1:14374:118":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"16:7079:4467":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"2:50308:3570":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"2:46298:3709":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"1:894:3320":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"5:1663:2298":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"1:8275:3181":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"1:13410:3253":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"2:53147:3655":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"16:3155:4638":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"1:4157:3393":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"17:11907:5521":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"1:14975:3234":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"20:1284:3027":{"crate_id":20,"path":["proc_macro","bridge","client","MultiSpan"],"kind":"struct"},"2:5004:3780":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"2:24038:2115":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"2:3359:220":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"1:7073:57261":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"5:5948:5051":{"crate_id":5,"path":["alloc","slice","insert_head","InsertionHole"],"kind":"struct"},"5:8432:4079":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"1:11768:3259":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"2:53543:3682":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"6:1621:6579":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"2:32578:3240":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"12:379:4283":{"crate_id":12,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"21:448:2501":{"crate_id":21,"path":["proc_macro2","imp","LexError"],"kind":"enum"},"6:4485:6933":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"2:48510:2342":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"2:47799:2590":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"16:6012:4375":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"1:15768:2408":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"2:9505:3331":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"5:7351:5042":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"5:6851:3081":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"17:13247:5873":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"1:11450:3288":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"2:3352:2215":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"1:696:3316":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"5:7048:4015":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"5:1909:5042":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"5:5906:4005":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"9:996:4211":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"2:3637:2585":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"16:7792:4413":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"17:13196:5859":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"0:47:2199":{"crate_id":0,"path":["quote","format_ident"],"kind":"macro"},"2:3583:2575":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"1:12038:3217":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"16:6980:4464":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"2:4144:3635":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"16:7741:4478":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"1:2961:3090":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"16:3221:4641":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"2:25121:3889":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"1:783:5091":{"crate_id":1,"path":["std","thread","local","fast","Key"],"kind":"struct"},"16:4716:6113":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"16:6691:4461":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"1:5520:3139":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"16:5941:4443":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"17:13281:5876":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"5:853:108":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"16:5887:4621":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"7:0:1483":{"crate_id":7,"path":["unwind"],"kind":"module"},"18:661:4836":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"20:3134:2309":{"crate_id":20,"path":["proc_macro","Spacing"],"kind":"enum"},"2:46743:3912":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"2:47816:3915":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"2:23072:3528":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"2:46536:7725":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"2:53654:7525":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"1:2698:179":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"5:1296:4086":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"2:46239:2579":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"6:5982:7176":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"2:11524:2880":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"2:3462:2563":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"16:7264:194":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"2:10544:2342":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"13:121:45003":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"5:8449:7352":{"crate_id":5,"path":["alloc","slice","merge_sort","Run"],"kind":"struct"},"1:7450:3257":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"2:49063:3537":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"5:6775:4070":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"16:7659:4477":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"1:2167:2591":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"16:7295:4383":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"1:15152:3416":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"21:1100:2591":{"crate_id":21,"path":["proc_macro2","token_stream","IntoIter"],"kind":"struct"},"2:53795:7532":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"16:3314:4623":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"1:11917:3183":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"5:3105:59938":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"17:12117:5562":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"2:14339:3874":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"2:51825:3665":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"17:9259:5340":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"16:3478:4644":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"5:844:223":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"6:1733:3422":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"2:47791:2298":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"17:12469:5634":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"5:1626:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"6:539:6462":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"17:11890:5515":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"16:5273:5341":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"2:47968:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"17:10455:4724":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"17:2314:4793":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"6:626:6515":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"17:9361:5343":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"6:4198:6827":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"1:8961:57262":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"1:5737:3480":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"17:10899:46947":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"20:251:61398":{"crate_id":20,"path":["proc_macro","bridge","closure","Closure"],"kind":"struct"},"2:49967:3098":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"17:12360:5615":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"1:7519:3260":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"17:9646:61354":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"1:1485:2614":{"crate_id":1,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"1:11109:7749":{"crate_id":1,"path":["std","net","parser","AddrParseError"],"kind":"struct"},"5:7306:2937":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"6:545:6465":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"22:0:2496":{"crate_id":22,"path":["unicode_ident"],"kind":"module"},"17:13840:6044":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"16:7169:4393":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"2:49503:2860":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"2:46836:2729":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"1:5745:3481":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"16:5869:189":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"6:6153:7247":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"9:41:4195":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","LocalBuf"],"kind":"struct"},"17:10610:7813":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"2:14153:32875":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"12:979:3204":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"1:6904:14016":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"2:10483:2809":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"2:47875:205":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"2:2041:3081":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"1:14391:54982":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"1:8525:3446":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"17:11335:4710":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"17:13507:5939":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"2:10493:134":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"1:11177:3479":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"18:169:7793":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"17:10115:4807":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"1:4495:57358":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"17:12660:5668":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"1:8926:3309":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"2:46946:2755":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"1:1533:3204":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"6:5455:7119":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"1:7919:3348":{"crate_id":1,"path":["std","sync","mpsc","shared","Packet"],"kind":"struct"},"17:13817:6043":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"16:2772:4658":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"1:11291:3272":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"2:21:673":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"18:801:4823":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"1:7464:3258":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"12:2280:3207":{"crate_id":12,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"1:14325:3149":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"17:10598:46883":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"2:14077:58542":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"5:4665:5045":{"crate_id":5,"path":["alloc","collections","vec_deque","spec_extend","spec_extend","WrapAddOnDrop"],"kind":"struct"},"2:49731:2867":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"1:6746:3047":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"1:1504:3200":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"18:896:4831":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"2:3600:131":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"2:12983:3838":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"1:14927:3225":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"6:5274:7033":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"6:1662:6611":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"8:0:2358":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"2:47273:2723":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"2:56575:237":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:14705:5100":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"2:49055:7737":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"1:10931:3058":{"crate_id":1,"path":["std","net","addr","SocketAddr"],"kind":"enum"},"17:11530:5448":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"2:2936:177":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"6:4270:3428":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"18:837:3553":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"20:200:5227":{"crate_id":20,"path":["proc_macro","bridge","client","Client"],"kind":"struct"},"6:4362:6877":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"17:11591:5459":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"1:900:3321":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"5:8549:4052":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"1:15754:2394":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"2:24476:7719":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"2:47057:2754":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"5:8356:2603":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"2:51871:3653":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"1:2191:2611":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"9:809:3282":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"2:50341:2944":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"2:49084:3282":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"2:3353:2533":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"2:49689:3835":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"1:10912:3096":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"2:24393:7362":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"16:5698:4436":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"17:13794:6030":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"17:10394:4790":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"2:49531:2869":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"1:12499:5096":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"9:234:4170":{"crate_id":9,"path":["miniz_oxide","deflate","core","HuffmanOxide"],"kind":"struct"},"2:46271:2581":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"2:3659:2578":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"2:51370:3663":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"1:10587:3149":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"1:15757:2397":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"17:13094:5839":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"2:6687:2732":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"20:107:3315":{"crate_id":20,"path":["proc_macro","bridge","buffer","Buffer"],"kind":"struct"},"6:4048:6769":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"1:7228:185":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"1:1645:3207":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"17:10304:4705":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"5:777:7866":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"2:24890:169":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"2:48304:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"1:1075:3151":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"2:2487:3628":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"9:0:2359":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"6:6268:7312":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"5:4372:2590":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"6:6914:7335":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"1:10954:3059":{"crate_id":1,"path":["std","net","addr","SocketAddrV4"],"kind":"struct"},"16:6277:4451":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"2:47047:2753":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"17:9786:7799":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"16:3686:6095":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"6:1567:6542":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"6:5541:7138":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"12:1238:4279":{"crate_id":12,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"2:46305:3710":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"1:14315:7751":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"2:22872:59821":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"2:9124:2592":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"16:6310:4452":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"5:8297:2591":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"17:10975:7820":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"2:3085:2115":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"2:2845:2515":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"6:5229:7001":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"5:6:672":{"crate_id":5,"path":["alloc","format"],"kind":"macro"},"17:12209:5575":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"1:10355:2115":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"2:50012:3852":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"6:6007:7194":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"2:3415:2513":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"5:2328:4088":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"6:5186:6983":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"2:51969:3645":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"2:49917:3846":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"2:3375:2634":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"17:11017:127":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"5:4509:2298":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"1:14969:3233":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"2:49072:146":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"17:9561:4718":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"2:50298:3569":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"5:7547:5042":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"2:10160:661":{"crate_id":2,"path":["core","fmt"],"kind":"module"},"2:50672:158":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"5:8262:194":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"2:23932:2857":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"6:6931:7340":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"16:7768:4384":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"2:3467:2567":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"17:11234:4781":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"1:10966:3060":{"crate_id":1,"path":["std","net","addr","SocketAddrV6"],"kind":"struct"},"1:1496:3198":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"2:3355:218":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"2:39090:2738":{"crate_id":2,"path":["core","error","Chain"],"kind":"struct"},"16:3494:5266":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"16:7208:4475":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"2:23405:3640":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"2:50598:201":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"2:13312:2943":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"6:634:6520":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"17:9466:5346":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"2:49977:3848":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"17:11713:5481":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"20:3084:2962":{"crate_id":20,"path":["proc_macro","SourceFile"],"kind":"struct"},"2:47849:3917":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"6:6243:7306":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"2:14027:138":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"17:9183:4715":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"2:47807:2591":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"2:49633:2873":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"6:4012:6755":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"18:766:5264":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"2:32592:59522":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum16"],"kind":"enum"},"2:32404:3946":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"17:9517:3096":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"2:3450:2564":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"2:48524:2340":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"2:24509:3902":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"1:6577:3042":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"17:13472:5928":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"20:165:53192":{"crate_id":20,"path":["proc_macro","bridge","client","Bridge"],"kind":"struct"},"20:808:3027":{"crate_id":20,"path":["proc_macro","diagnostic","MultiSpan"],"kind":"trait"},"2:53459:3644":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"17:11725:5482":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"16:4271:6100":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"6:1764:6662":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"1:8626:57262":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"12:787:3198":{"crate_id":12,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"2:46710:100":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"16:7281:4382":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"20:2792:2221":{"crate_id":20,"path":["proc_macro","bridge","Literal"],"kind":"struct"},"2:11638:2865":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"17:13352:5897":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"2:22817:59789":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"17:9087:46690":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"2:11597:2868":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"2:3388:2532":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"2:5184:3787":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"6:580:6491":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"1:11876:2298":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"5:981:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"2:47244:2717":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"2:3164:228":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"17:12674:5671":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"2:51300:7460":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"15:269:4303":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"17:13421:5913":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"20:2716:2222":{"crate_id":20,"path":["proc_macro","bridge","Punct"],"kind":"struct"},"1:11188:3421":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"2:11355:2298":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"2:3454:2562":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"1:15750:2392":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"17:13873:6051":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"1:11364:3283":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"2:50021:3154":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"14:231:2936":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"12:940:3201":{"crate_id":12,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"6:4516:6943":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"17:11314:4711":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"2:47750:176":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"16:4467:6106":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"17:11068:4716":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"1:15755:2395":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"2:51555:3652":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"1:15767:2407":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"1:10367:54968":{"crate_id":1,"path":["std","thread","local","fast","DtorState"],"kind":"enum"},"17:13495:5936":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"17:10476:4728":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"17:12646:5667":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"1:10456:3169":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"5:3905:5042":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"2:48262:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"5:8209:2591":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"9:1020:4212":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"5:3110:59935":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"2:3509:2572":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"6:5178:6981":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"20:3056:1876":{"crate_id":20,"path":["proc_macro","Span"],"kind":"struct"},"1:10658:2970":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"2:49521:2859":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"2:48531:2341":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"13:0:2356":{"crate_id":13,"path":["std_detect"],"kind":"module"},"17:10211:7807":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"17:0:2366":{"crate_id":17,"path":["object"],"kind":"module"},"1:14790:54976":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"1:1510:3201":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"2:23019:3717":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"17:10949:7819":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"21:917:7647":{"crate_id":21,"path":["proc_macro2","imp","DeferredTokenStream"],"kind":"struct"},"2:2248:3614":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"17:12442:5630":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"2:10004:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"2:23350:2115":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"16:4198:6099":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"1:10493:4094":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"2:11680:2862":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"1:14350:3365":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"2:51901:3657":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"16:7155:4474":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"20:553:5034":{"crate_id":20,"path":["proc_macro","bridge","scoped_cell","replace","PutBackOnDrop"],"kind":"struct"},"17:2543:4721":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"16:7200:4395":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"17:12431:5629":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"16:6931:4680":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"6:5288:7034":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"2:48220:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"6:6080:7223":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"2:50464:121":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"5:8372:101":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"2:56523:237":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:48052:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"6:3920:6696":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"2:51324:3683":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"16:7051:4465":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"2:13530:109":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"5:8344:2602":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"17:11945:5532":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"5:3407:4017":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"5:6498:224":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"5:4281:2937":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"16:2733:4350":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"2:46800:12189":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"2:3807:225":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"16:5745:4438":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"16:7323:4398":{"crate_id":16,"path":["gimli","read","unit","UnitOffset"],"kind":"struct"},"2:46617:3991":{"crate_id":2,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"1:1041:3159":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"6:4532:6950":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"2:5122:3782":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"16:2754:4625":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"5:8215:4024":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"16:5902:4441":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"17:11628:5465":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"21:999:1876":{"crate_id":21,"path":["proc_macro2","Span"],"kind":"struct"},"2:3255:127":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"1:3100:3374":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"2:25490:3732":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"2:49294:4002":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"12:2040:2937":{"crate_id":12,"path":["hashbrown","set","Drain"],"kind":"struct"},"1:8433:3436":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"16:6433:4455":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"1:2525:3358":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"16:5362:4421":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"16:5923:4442":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"5:5962:5054":{"crate_id":5,"path":["alloc","slice","merge","MergeHole"],"kind":"struct"},"2:24483:3951":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"2:3795:2580":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"2:51993:3646":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"5:8240:59854":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"1:10738:3108":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"1:13986:3114":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"17:9920:7801":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"17:10291:4702":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"6:571:6485":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"6:6856:7331":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"6:1680:6623":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"20:3005:3018":{"crate_id":20,"path":["proc_macro","ExpandError"],"kind":"struct"},"6:4055:6772":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"17:11381:5410":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"2:24139:3884":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"1:15710:57692":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"2:51577:3656":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"6:1526:6524":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"1:6724:3039":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"2:51494:7461":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"5:0:278":{"crate_id":5,"path":["alloc"],"kind":"module"},"2:3570:116":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"16:7131:4472":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"17:13167:5851":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"2:10550:189":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"2:10821:3536":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"2:3474:2565":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"6:672:39827":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"17:12130:5565":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"9:722:4146":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLFlush"],"kind":"enum"},"6:6665:7319":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"21:941:2220":{"crate_id":21,"path":["proc_macro2","imp","Group"],"kind":"enum"},"1:15748:2390":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"1:11898:3182":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"5:1710:3196":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"17:9883:61353":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"6:6229:7297":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"9:157:4162":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressorOxide"],"kind":"struct"},"21:959:2221":{"crate_id":21,"path":["proc_macro2","imp","Literal"],"kind":"enum"},"1:12014:3311":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"2:48094:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"17:12892:5692":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"5:7736:4056":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"17:9587:61351":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"6:565:6482":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"16:4411:6104":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"1:10435:10667":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"18:739:61375":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"17:13529:5944":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"1:10450:10670":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"2:10536:109":{"crate_id":2,"path":["core","fmt","macros","Debug"],"kind":"proc_derive"},"2:10215:3820":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"16:4775:6115":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"1:4486:2809":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"2:53703:7528":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"6:6967:7347":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"6:4075:6782":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"2:24318:7715":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"6:593:6497":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"1:15758:2398":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"21:0:2011":{"crate_id":21,"path":["proc_macro2"],"kind":"module"},"21:24:4864":{"crate_id":21,"path":["proc_macro2","marker","ProcMacroAutoTraits"],"kind":"struct"},"16:5721:4437":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"2:48813:127":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"6:4509:6940":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"16:7721:4389":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"17:11742:5490":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"2:49591:2875":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"2:50005:3851":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"4:0:2357":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"17:12170:5570":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"2:8346:2712":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"2:4866:3625":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"17:12282:5588":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"16:4871:6118":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"12:933:3200":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"5:3106:7351":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"16:6130:4447":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"17:12573:5651":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"1:11170:3058":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"2:53599:7520":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"18:820:4825":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"18:811:4824":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"20:0:1038":{"crate_id":20,"path":["proc_macro"],"kind":"module"},"16:5948:4631":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"21:1071:2221":{"crate_id":21,"path":["proc_macro2","Literal"],"kind":"struct"},"2:24370:3767":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"16:3007:4636":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"6:6937:7341":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"21:155:2971":{"crate_id":21,"path":["proc_macro2","rcvec","RcVec"],"kind":"struct"},"1:14552:7867":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"2:46820:2728":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"20:1358:1876":{"crate_id":20,"path":["proc_macro","bridge","client","Span"],"kind":"struct"},"20:2742:2206":{"crate_id":20,"path":["proc_macro","bridge","Ident"],"kind":"struct"},"16:4903:6119":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"2:50608:7458":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"2:53628:7523":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"16:6141:4448":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"2:50161:3564":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"18:668:4837":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"2:5268:2637":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"1:11884:3179":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"1:3443:3100":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"1:5560:3141":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"2:50689:3714":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"6:6954:7346":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"16:6060:4416":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"1:6484:7217":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"20:1315:3025":{"crate_id":20,"path":["proc_macro","bridge","client","Diagnostic"],"kind":"struct"},"6:5998:7188":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"17:9930:61366":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"2:8419:2140":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"1:14381:3092":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"1:5432:3132":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"6:4454:6920":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"2:11486:2864":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"1:7402:3254":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"2:13094:2879":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"2:23733:3533":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"2:25088:164":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"2:10554:2815":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"17:10660:46884":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"2:9504:2537":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"2:51454:3672":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"1:5504:3137":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"17:10545:7809":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"17:13584:5958":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"2:10816:3167":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"16:5427:4425":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"6:1537:6529":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"5:8477:2934":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"16:6873:3915":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"2:57876:7539":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"1:1521:3202":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"17:12543:5645":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"2:47026:2735":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"20:3150:2206":{"crate_id":20,"path":["proc_macro","Ident"],"kind":"struct"},"16:6089:4445":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"5:8389:4077":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"18:152:7790":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"1:8197:4102":{"crate_id":1,"path":["std","sync","mpsc","sync","Node"],"kind":"struct"},"17:8902:46685":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"16:6468:4456":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"1:5526:3140":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"1:7436:3256":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"1:2035:145":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"6:6979:7349":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"20:2943:3026":{"crate_id":20,"path":["proc_macro","diagnostic","Level"],"kind":"enum"},"17:11494:5443":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"17:12716:5675":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"2:32544:2975":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"17:9064:46689":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"5:2843:4090":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"2:32940:3695":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"2:47934:2591":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"20:1222:1815":{"crate_id":20,"path":["proc_macro","bridge","client","TokenStream"],"kind":"struct"},"1:12019:3191":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"16:6656:4671":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"2:51777:3680":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"1:10473:11670":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"1:10905:2752":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"17:10937:7818":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"1:13673:3258":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"12:162:4280":{"crate_id":12,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"6:1626:6581":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"6:5398:7097":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"1:11962:3186":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"1:15093:3408":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"17:9033:46688":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"2:53581:3647":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"17:13908:6064":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"16:5412:4424":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"17:9756:61367":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"1:9414:57680":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutex"],"kind":"struct"},"17:299:61361":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"17:13515:5942":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"16:3051:4694":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"1:6344:3156":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"2:52122:7472":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"2:28300:3598":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"6:5433:7112":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"18:136:7789":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"12:843:3195":{"crate_id":12,"path":["hashbrown","map","Keys"],"kind":"struct"},"6:4020:6757":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"21:1020:2220":{"crate_id":21,"path":["proc_macro2","Group"],"kind":"struct"},"2:3151:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"0:0:1068":{"crate_id":0,"path":["quote"],"kind":"module"},"2:46587:3996":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"1:11892:2591":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"17:10422:7808":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"12:432:4281":{"crate_id":12,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"1:11800:3262":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"16:2883:4652":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"2:48871:2813":{"crate_id":2,"path":["core","fmt","FlagV1"],"kind":"enum"},"17:10028:7803":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"1:8760:3239":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"6:3966:6730":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"16:7110:4470":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"2:11559:2867":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"5:2396:4087":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"1:8712:3457":{"crate_id":1,"path":["std","sync","once","WaiterQueue"],"kind":"struct"},"16:5566:4430":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"16:6717:4462":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"17:10445:5247":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"2:46640:3992":{"crate_id":2,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"2:46867:2731":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"5:5166:661":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"17:12607:5664":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"2:49763:3839":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"6:0:799":{"crate_id":6,"path":["libc"],"kind":"module"},"2:50444:3866":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"5:1055:4023":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"18:774:5253":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"5:1152:5042":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"17:10407:4789":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"2:46663:3993":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"18:754:61374":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"6:4038:6766":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"1:10846:2712":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"6:4526:6948":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"5:7874:235":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"2:46886:2740":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"16:7184:4682":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"2:46656:3852":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"20:1253:2962":{"crate_id":20,"path":["proc_macro","bridge","client","SourceFile"],"kind":"struct"},"2:24334:7357":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"2:3603:132":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"20:3089:2111":{"crate_id":20,"path":["proc_macro","TokenTree"],"kind":"enum"},"21:1005:2111":{"crate_id":21,"path":["proc_macro2","TokenTree"],"kind":"enum"},"16:6159:4380":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"2:48774:133":{"crate_id":2,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"1:1305:143":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"2:23407:3532":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"17:10851:5390":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"1:1500:3199":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"6:4067:6777":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"5:5488:3081":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"17:13522:5943":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"2:50701:2543":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"6:618:6510":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"2:4753:3081":{"crate_id":2,"path":["core","array","try_collect_into_array","Guard"],"kind":"struct"},"1:8426:3434":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"1:3102:3375":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"16:6050:4444":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"16:2981:4646":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"2:48517:2339":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"1:4160:3394":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"16:5460:4427":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"1:15756:2396":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"2:8687:120":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"2:5194:2824":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"16:3265:4643":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"5:8455:216":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"6:3883:6669":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"17:12957:5743":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"17:12003:5541":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"6:4116:6803":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"18:790:4822":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"6:4081:6784":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"2:14510:2544":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"1:14766:3261":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"20:3070:2963":{"crate_id":20,"path":["proc_macro","LineColumn"],"kind":"struct"},"2:3495:2569":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"2:50030:3853":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"12:1703:4291":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"1:11826:54973":{"crate_id":1,"path":["std","sync","mpsc","shared","StartResult"],"kind":"enum"},"1:4848:3307":{"crate_id":1,"path":["std","net","ip","display_buffer","IpDisplayBuffer"],"kind":"struct"},"17:10253:4775":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"17:10127:4727":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"2:3160:229":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"17:13233:5868":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"17:13147:5845":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"2:24989:165":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"1:14942:3226":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"17:10266:4699":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"17:11457:2206":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"5:1719:3197":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"2:50485:3220":{"crate_id":2,"path":["core","time","FromFloatSecsError"],"kind":"struct"},"2:10533:109":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"2:51525:3664":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"17:10340:4794":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"1:7814:3348":{"crate_id":1,"path":["std","sync","mpsc","oneshot","Packet"],"kind":"struct"},"5:8254:2591":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"1:11037:3306":{"crate_id":1,"path":["std","net","ip","Ipv6MulticastScope"],"kind":"enum"},"1:1418:2298":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"17:11282:46695":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"2:52349:3678":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"17:12250:5581":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"5:3441:4018":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"6:1912:40801":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"2:4835:102":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"6:4425:6904":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"17:13029:5802":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"1:5161:3409":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"1:6646:3037":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"5:3960:4103":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"2:47016:2751":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"17:13961:6073":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"2:24923:2856":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"9:749:4147":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLStatus"],"kind":"enum"},"14:0:2363":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"17:11640:5466":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"2:46914:7733":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"17:10318:4727":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"2:51725:3673":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"2:48768:70":{"crate_id":2,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"17:13428:5914":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"16:5348:4420":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"2:3501:2570":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"6:4434:6910":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"1:15131:3409":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"2:3356:217":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"18:866:4829":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"2:5248:2826":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"12:2059:2610":{"crate_id":12,"path":["hashbrown","set","Difference"],"kind":"struct"},"5:7205:5056":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"2:52461:3666":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"7:85:44363":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"6:4402:6896":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"0:368:1068":{"crate_id":0,"path":["quote","quote"],"kind":"macro"},"2:14329:3626":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"18:857:4828":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"6:3907:6686":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"2:12198:2878":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"1:11182:3482":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"2:56588:237":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:9381:5087":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"2:2842:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"2:49713:2863":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"6:5547:7139":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"2:9503:2538":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"16:7684:4388":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"6:6688:7330":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"6:4148:6816":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"6:1669:6615":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"2:23121:2115":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"17:9206:46692":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"17:9948:7802":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"17:10136:7800":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"16:7121:4471":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"1:5158:3408":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"2:23396:2115":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"11:46:6365":{"crate_id":11,"path":["adler","algo","U32X4"],"kind":"struct"},"5:5609:2524":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"1:15747:2389":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"17:13377:5902":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"2:49671:3716":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"1:15223:54966":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"18:729:61371":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"14:47:7860":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"2:10771:142":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"2:48388:3921":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"2:47867:188":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"1:9254:7869":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"17:13138:5844":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"12:114:7824":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"16:3576:5270":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"1:5574:3142":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"2:50436:3863":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"2:53335:3659":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"12:183:4284":{"crate_id":12,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"1:2405:7833":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"5:5910:4007":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"2:2900:183":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"17:12093:5560":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"9:776:4192":{"crate_id":9,"path":["miniz_oxide","deflate","CompressionLevel"],"kind":"enum"},"1:7980:5073":{"crate_id":1,"path":["std","sync","mpsc","spsc_queue","Queue"],"kind":"struct"},"2:24210:3886":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"17:13975:6076":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"1:3084:3369":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"16:7868:127":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"1:3841:127":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"2:46634:3154":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"16:5396:4423":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"1:11128:3411":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"17:11968:5537":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"1:10980:3062":{"crate_id":1,"path":["std","net","ip","IpAddr"],"kind":"enum"},"17:11754:5493":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"12:1147:3207":{"crate_id":12,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"12:559:143":{"crate_id":12,"path":["hashbrown","map","HashMap"],"kind":"struct"},"17:13859:6049":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"16:2813:4651":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"2:13059:3845":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"2:14:2472":{"crate_id":2,"path":["core","write"],"kind":"macro"},"16:3521:6094":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"2:39050:3266":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"6:3933:6706":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"2:50460:3860":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"1:14067:3328":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"6:5149:6957":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"5:5861:5042":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"6:521:6454":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"12:1203:4278":{"crate_id":12,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"17:11784:5505":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"6:5204:6996":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"2:2946:184":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"2:10220:3821":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"6:161:39496":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"12:2045:2614":{"crate_id":12,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"17:12758:5683":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"6:5210:6999":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"17:10530:5394":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"1:1622:3205":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"1:5715:3478":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"2:2867:104":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"6:607:6505":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"2:5048:2530":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"12:928:3197":{"crate_id":12,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"1:5582:3144":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"5:8270:4014":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"21:1044:2222":{"crate_id":21,"path":["proc_macro2","Punct"],"kind":"struct"},"9:927:44460":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"2:3365:2531":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"2:50321:3923":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"1:1441:2591":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"2:51679:3685":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"17:13763:6023":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"1:10728:3301":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"1:11220:3054":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"17:12921:5712":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"6:1634:6586":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"2:50616:190":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"1:10466:3209":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"17:1311:4811":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"1:14683:5098":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"5:7473:2591":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"16:5257:5340":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"17:11354:4709":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"6:4028:6760":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"17:9579:128":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"6:6135:7236":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"16:6949:4681":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"2:3594:2576":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"16:3366:4649":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"17:10801:4753":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"16:6075:4377":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"17:11922:5525":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"6:1748:6657":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"2:50287:3568":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"14:189:7860":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"2:3518:2574":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"2:8602:2727":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"1:15214:7613":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"2:3513:2573":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"17:9988:46739":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"1:11381:3284":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"1:10634:118":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"17:11822:5513":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"20:1729:5234":{"crate_id":20,"path":["proc_macro","bridge","symbol","Symbol"],"kind":"struct"},"17:11409:5414":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"16:6679:4673":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"6:4142:6814":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"2:32744:59521":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum64"],"kind":"enum"},"17:12700:5673":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"16:7415:4397":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"1:6648:3034":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"12:971:3203":{"crate_id":12,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"2:51476:3676":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"18:645:4835":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"5:4931:2284":{"crate_id":5,"path":["alloc","collections","btree_set"],"kind":"module"},"17:13481:5929":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"17:9004:46687":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"1:4771:3056":{"crate_id":1,"path":["std","net","addr","ToSocketAddrs"],"kind":"trait"},"6:4160:6825":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"17:12157:5569":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"1:9648:5091":{"crate_id":1,"path":["std","sys_common","thread_local_key","Key"],"kind":"struct"},"2:10548:2341":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"17:13073:5834":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"1:15744:2387":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"2:9625:2943":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"6:5366:7084":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"1:6246:3045":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"6:6034:7204":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"2:53505:3662":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"17:11142:5404":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"16:5176:6122":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"2:2748:580":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"2:46937:2745":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"1:2953:128":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"2:52615:3661":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"2:52145:7473":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"17:13887:6058":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"2:3824:2584":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"16:3103:4648":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"2:24302:3771":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"6:4538:6953":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"1:4504:3074":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"5:984:4022":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"17:12731:5679":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"2:12165:2877":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"1:14835:3191":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"16:3077:4695":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"6:1712:6641":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"1:15742:2385":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"1:9421:5088":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutexGuard"],"kind":"struct"},"21:865:2220":{"crate_id":21,"path":["proc_macro2","fallback","Group"],"kind":"struct"},"2:4811:3592":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"1:10167:7870":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"16:2937:4657":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"6:1558:6537":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"1:11985:3442":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"17:11956:5535":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"17:9160:4782":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"5:444:2253":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"17:9826:4727":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"17:13155:5846":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"3:0:431":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"2:46876:2739":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"2:50452:3865":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"12:1121:3206":{"crate_id":12,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"2:24791:170":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"1:2170:2937":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"6:6643:7318":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"17:13463:5925":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"2:48750:67":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"6:4493:6935":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"17:12026:5544":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"2:46113:196":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"12:952:3202":{"crate_id":12,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"2:48010:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"17:2512:4791":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"5:2619:4091":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"12:764:2590":{"crate_id":12,"path":["hashbrown","map","IterMut"],"kind":"struct"},"2:56536:237":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"17:9636:7796":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"1:4273:3112":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"2:3357:106":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"21:950:2206":{"crate_id":21,"path":["proc_macro2","imp","Ident"],"kind":"enum"},"2:51614:3641":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"17:13917:6066":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"1:5438:3134":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"17:10364:4792":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"2:3425:2557":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"2:51424:3684":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"6:5405:7098":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"21:871:2206":{"crate_id":21,"path":["proc_macro2","fallback","Ident"],"kind":"struct"},"1:10862:3092":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"17:12746:5680":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"6:5247:7013":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"15:0:2364":{"crate_id":15,"path":["addr2line"],"kind":"module"},"2:51632:7463":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"1:4402:3081":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"17:13612:5966":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"6:6016:7195":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"2:9131:2725":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"1:15764:2404":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"5:3428:2611":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"2:2376:2539":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"21:799:2970":{"crate_id":21,"path":["proc_macro2","parse","Cursor"],"kind":"struct"},"17:13565:5953":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"2:46557:3743":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"1:9505:3402":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutex"],"kind":"struct"},"20:3109:1912":{"crate_id":20,"path":["proc_macro","Delimiter"],"kind":"enum"},"6:5293:7035":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"2:46790:5063":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"1:4197:3115":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"6:6205:7287":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"1:13177:3423":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"17:9431:5345":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"1:2163:2298":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"2:50209:3565":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"6:4416:6901":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"11:54:4266":{"crate_id":11,"path":["adler","Adler32"],"kind":"struct"},"17:13323:5890":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"2:48136:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"2:0:489":{"crate_id":2,"path":["core"],"kind":"module"},"16:7379:4399":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"1:11066:1876":{"crate_id":1,"path":["std","net","ip","fmt","Span"],"kind":"struct"},"15:230:4298":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"1:6650:3038":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"1:8590:162":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"5:2376:4124":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"5:2005:2614":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"5:3948:2970":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"1:12490:128":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"2:49881:3844":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"5:4017:2614":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"5:3104:2517":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"1:14816:7612":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"5:3825:2298":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"2:6610:2743":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"6:4440:6912":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"20:3155:2221":{"crate_id":20,"path":["proc_macro","Literal"],"kind":"struct"},"2:23944:59792":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"16:7063:4466":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"2:46896:2741":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"6:6896:7332":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"5:1760:4083":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"16:5959:4368":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"17:12406:5625":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"2:3446:2514":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"1:10582:3363":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"5:3554:2614":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"2:52379:3681":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"1:2466:7836":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"1:13989:3116":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"1:10356:3317":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"2:47858:39055":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"2:37894:3591":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"1:6482:7215":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"2:11652:2861":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"6:6097:7225":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"16:6504:4458":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"6:6027:7200":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"16:6907:4463":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"16:3297:4696":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"2:53665:7526":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"2:8712:2616":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"17:12634:5666":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"2:47262:2721":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"16:7141:4473":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"1:5570:3136":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"2:8652:2617":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"16:2959:4635":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"1:2554:3359":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"2:56549:237":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"12:1103:3205":{"crate_id":12,"path":["hashbrown","map","Entry"],"kind":"enum"},"16:7369:4379":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"5:1684:2591":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"17:11563:5455":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"2:50659:3873":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"17:11102:46694":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"2:11166:2115":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"20:344:61390":{"crate_id":20,"path":["proc_macro","bridge","handle","OwnedStore"],"kind":"struct"},"12:2052:2612":{"crate_id":12,"path":["hashbrown","set","Intersection"],"kind":"struct"},"5:1701:3195":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"1:11439:3287":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"1:1449:3195":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"6:4296:6845":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"21:831:2962":{"crate_id":21,"path":["proc_macro2","fallback","SourceFile"],"kind":"struct"},"1:2441:7834":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"17:13602:5961":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"6:4218:6829":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"1:8477:3437":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"12:2066:2611":{"crate_id":12,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"5:7943:5061":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"17:11810:5510":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"17:10068:4699":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"1:10604:3150":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"6:4308:6852":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"2:48346:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"21:827:2501":{"crate_id":21,"path":["proc_macro2","fallback","LexError"],"kind":"struct"},"1:11003:3063":{"crate_id":1,"path":["std","net","ip","Ipv4Addr"],"kind":"struct"},"16:3402:4366":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"17:10925:46956":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"6:5488:7127":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"2:46985:2748":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"18:744:61372":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"6:5447:7117":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"1:2403:7832":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"17:10489:7658":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"6:1704:6640":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"17:9240:4706":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"2:47253:2719":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"14:216:45037":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"12:869:2937":{"crate_id":12,"path":["hashbrown","map","Drain"],"kind":"struct"},"16:3908:6098":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"11:0:2361":{"crate_id":11,"path":["adler"],"kind":"module"},"20:478:53182":{"crate_id":20,"path":["proc_macro","bridge","rpc","PanicMessage"],"kind":"enum"},"16:7826:3709":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"2:10887:1311":{"crate_id":2,"path":["core","slice"],"kind":"module"},"16:5516:4614":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"16:5374:4422":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"12:2032:2298":{"crate_id":12,"path":["hashbrown","set","Iter"],"kind":"struct"},"17:13369:5900":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"2:46039:2587":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"2:50273:3567":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"2:4129:3631":{"crate_id":2,"path":["core","any","Provider"],"kind":"trait"},"17:12687:5672":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"2:13378:3559":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"17:10788:46860":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"17:11603:5460":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"1:12057:3218":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"17:12496:5638":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"16:6533:4664":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"12:2392:2220":{"crate_id":12,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"2:46129:194":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"2:46278:3629":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"16:4975:6121":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"16:4942:6120":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"2:46845:2738":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"1:14778:3262":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"5:4036:5042":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"2:48887:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"2:52649:3643":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"1:4234:3116":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"1:11433:2298":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"2:3890:2536":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"17:10874:5391":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"2:50236:3566":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"17:9539:4780":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"1:1017:3348":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"2:49541:2870":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"17:10503:4729":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"1:3409:3105":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"5:4308:5042":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"21:823:1815":{"crate_id":21,"path":["proc_macro2","fallback","TokenStream"],"kind":"struct"},"12:1183:4277":{"crate_id":12,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"1:4195:3114":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"16:4689:6112":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"16:6490:4457":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"2:46905:2742":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"2:48835:71":{"crate_id":2,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"1:11786:3261":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"17:10039:46741":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"16:547:4616":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"1:10918:2863":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"17:9716:61356":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"18:0:2367":{"crate_id":18,"path":["memchr"],"kind":"module"},"2:49102:7739":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"16:5605:4431":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"16:4840:6117":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"17:10814:4754":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"2:13020:3841":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"2:3836:3692":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"1:8850:3249":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"2:10542:2339":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"1:11341:3282":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"17:10586:7812":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"2:50130:3560":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"20:2655:4860":{"crate_id":20,"path":["proc_macro","bridge","DelimSpan"],"kind":"struct"},"16:0:2365":{"crate_id":16,"path":["gimli"],"kind":"module"},"16:4381:6103":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"16:6190:4450":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"2:49604:2871":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"9:469:44466":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"6:586:6494":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"5:3402:2610":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"2:50093:3554":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"16:5289:4376":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"20:300:61415":{"crate_id":20,"path":["proc_macro","bridge","fxhash","FxHasher"],"kind":"struct"},"1:1190:10673":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"1:15249:4307":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"2:53680:7527":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"16:3340:4624":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"1:1462:3196":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"2:49512:2858":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"1:7119:186":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"18:885:4830":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"17:11433:5428":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"1:5984:3426":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"9:963:4210":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"2:52044:7470":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"2:12742:2852":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"16:3770:6097":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"2:53718:7529":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"2:3597:130":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"1:2370:601":{"crate_id":1,"path":["std","env"],"kind":"module"},"2:23357:15905":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"5:8419:4078":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"6:1694:6634":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"6:4256:6832":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"2:13241:2507":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"1:1636:3206":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"12:815:3199":{"crate_id":12,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"1:11930:3184":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"17:12455:5632":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"2:56562:237":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"20:2996:1815":{"crate_id":20,"path":["proc_macro","TokenStream"],"kind":"struct"},"1:14872:3269":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"9:1056:4205":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"17:11797:5509":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"17:11013:7822":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"1:12004:3449":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"21:994:1815":{"crate_id":21,"path":["proc_macro2","TokenStream"],"kind":"struct"},"16:5855:4440":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"6:88:39429":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"16:4573:6108":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"16:6407:4454":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"17:12222:5577":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"17:11653:5467":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"6:5478:7125":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"17:12482:5635":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"1:2174:2614":{"crate_id":1,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"5:1533:3206":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"5:3114:59937":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"2:51595:7462":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"17:10015:46740":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"18:651:4832":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"2:3726:2506":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"16:5238:45108":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"17:13595:5959":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"1:8076:3348":{"crate_id":1,"path":["std","sync","mpsc","stream","Packet"],"kind":"struct"},"16:6099:4446":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"2:47006:2750":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"17:11547:5450":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"16:2861:4633":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"1:3419:5071":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"17:10048:46753":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"12:0:2362":{"crate_id":12,"path":["hashbrown"],"kind":"module"},"1:0:1333":{"crate_id":1,"path":["std"],"kind":"module"},"2:2262:3617":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"17:13708:6004":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"2:46966:2733":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"16:5530:4429":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"1:6472:3140":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"5:8200:2545":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"2:11447:2879":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"2:46677:3995":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"1:15769:2409":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"1:15751:2393":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"2:3436:2559":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"16:4803:6116":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"18:694:4838":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"18:621:7653":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"2:46312:2824":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"2:24431:38834":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"1:6486:7219":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"17:13539:5947":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"17:13660:6003":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"6:3877:6668":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"2:2173:7354":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"17:13306:5885":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"2:12298:5069":{"crate_id":2,"path":["core","slice","sort","CopyOnDrop"],"kind":"struct"},"1:15762:2402":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"17:11769:5499":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"2:49623:2872":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"2:24857:172":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"0:369:1874":{"crate_id":0,"path":["quote","quote_spanned"],"kind":"macro"},"12:472:7826":{"crate_id":12,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"2:50144:3563":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"2:4:980":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"5:3838:2590":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"21:877:2221":{"crate_id":21,"path":["proc_macro2","fallback","Literal"],"kind":"struct"},"2:24497:3903":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"6:1588:6557":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"16:7449:4386":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"16:5498:4428":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"2:3853:2535":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"2:13043:3842":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"1:11202:3429":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"6:4098:6794":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"2:23738:15924":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"6:5390:7096":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"2:46858:2730":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"21:623:2501":{"crate_id":21,"path":["proc_macro2","LexError"],"kind":"struct"},"17:12417:5627":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"5:3436:2612":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"2:49047:3212":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"1:13536:3268":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"6:1727:6650":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"2:2198:1051":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"2:52799:3667":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"1:10577:3155":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"1:11020:3064":{"crate_id":1,"path":["std","net","ip","Ipv6Addr"],"kind":"struct"},"17:13452:5921":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"1:15743:2386":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"20:2966:4851":{"crate_id":20,"path":["proc_macro","diagnostic","Children"],"kind":"struct"},"17:10622:5355":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"2:3430:2556":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"1:820:5091":{"crate_id":1,"path":["std","thread","local","os","Key"],"kind":"struct"},"2:24956:168":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"2:5723:780":{"crate_id":2,"path":["core","iter"],"kind":"module"},"17:12348:5613":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"5:8291:2591":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"18:637:5253":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"17:1236:7805":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"6:3972:6732":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"5:1547:3208":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"21:1066:2206":{"crate_id":21,"path":["proc_macro2","Ident"],"kind":"struct"},"17:12237:5580":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"2:50651:3872":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"17:13129:5840":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"17:12318:5594":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"16:7471:4374":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"1:15763:2403":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"1:10617:129":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"1:14569:3263":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"2:49452:3834":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"1:13689:55470":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"16:6035:4415":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"2:49094:7738":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"2:49699:3096":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"2:10482:205":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"2:3420:2560":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"12:856:3196":{"crate_id":12,"path":["hashbrown","map","Values"],"kind":"struct"},"2:50432:3861":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"6:4410:6900":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"6:5974:7171":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"15:248:4299":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"16:4599:6109":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"17:10558:46882":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"1:11822:7750":{"crate_id":1,"path":["std","sync","mpsc","blocking","SignalToken"],"kind":"struct"},"17:4157:4757":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"12:895:4268":{"crate_id":12,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"17:13573:5954":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"6:6943:7342":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"16:6381:4390":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"1:10377:3326":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"6:4379:6888":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"17:11256:5406":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"17:10775:7814":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"2:49987:3849":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"2:2271:3618":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"1:7762:5073":{"crate_id":1,"path":["std","sync","mpsc","mpsc_queue","Queue"],"kind":"struct"},"1:4163:3395":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"1:15749:2391":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"1:6224:3042":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"1:9130:3161":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"16:5303:4418":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"17:9873:7800":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"2:51346:3671":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"17:11474:5433":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"2:49781:3840":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"2:3231:115":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"17:13747:6019":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"2:46357:3722":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"1:7719:55469":{"crate_id":1,"path":["std","sync","mpsc","blocking","WaitToken"],"kind":"struct"},"16:5784:4439":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"6:5582:7164":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"5:6739:69":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"2:3458:2561":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"21:158:2972":{"crate_id":21,"path":["proc_macro2","rcvec","RcVecBuilder"],"kind":"struct"},"2:9127:2593":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"1:9558:5090":{"crate_id":1,"path":["std","sys_common","rwlock","StaticRwLockWriteGuard"],"kind":"struct"},"2:51755:3677":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"17:10147:5352":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"1:15761:2401":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"2:14223:58540":{"crate_id":2,"path":["core","future","from_generator","GenFuture"],"kind":"struct"},"6:4474:6927":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"6:4340:6866":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"5:1740:3199":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"6:601:6502":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"6:4464:6926":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"21:1050:2309":{"crate_id":21,"path":["proc_macro2","Spacing"],"kind":"enum"},"1:5753:3483":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"5:6340:4055":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"6:533:6460":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"20:2236:5235":{"crate_id":20,"path":["proc_macro","bridge","Marked"],"kind":"struct"},"17:542:4354":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"6:5378:7089":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"17:11579:5456":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"2:23208:3163":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"2:47235:2715":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"1:4236:3117":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"16:4316:6101":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"12:1881:145":{"crate_id":12,"path":["hashbrown","set","HashSet"],"kind":"struct"},"2:5239:3788":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"2:46957:2746":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"2:3505:2571":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"17:11002:7821":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"17:12183:5572":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"16:3743:6096":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"2:10552:2814":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"2:3818:2582":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"2:5499:2939":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"1:10489:7867":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"1:15765:2405":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"17:11212:4783":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"16:6518:4392":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"2:7906:2658":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"1:4063:3120":{"crate_id":1,"path":["std","io","readbuf","ReadBuf"],"kind":"struct"},"2:7992:2737":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"17:11701:5480":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"2:46715:3910":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"2:3489:2568":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"16:2792:4365":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"17:13293:5879":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"}},"external_crates":{"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"21":{"name":"proc_macro2","html_root_url":"https://docs.rs/proc-macro2/1.0.43/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"22":{"name":"unicode_ident","html_root_url":null},"10":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"20":{"name":"proc_macro","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"adler","html_root_url":"https://docs.rs/adler/0.2.3/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":18}