{"root":515,"crate_version":"0.9.8","includes_private":false,"index":{"73":{"id":73,"crate_id":0,"name":null,"span":{"filename":"src/lazy.rs","begin":[82,0],"end":[103,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":74,"args":{"parenthesized":{"inputs":[],"output":{"generic":"T"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RelaxStrategy","id":7,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Lazy","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"F"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[72],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"146":{"id":146,"crate_id":0,"name":"INIT","span":{"filename":"src/mutex/spin.rs","begin":[358,4],"end":[358,37]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"value":"_"}}},"219":{"id":219,"crate_id":0,"name":"from","span":{"filename":"src/mutex.rs","begin":[268,4],"end":[270,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["data",{"generic":"T"}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"292":{"id":292,"crate_id":0,"name":null,"span":{"filename":"src/once.rs","begin":[40,0],"end":[49,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":96,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":96,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Once","id":98,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[291],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"365":{"id":365,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":28,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLock","id":340,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[26],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"438":{"id":438,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"Spin","id":3,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":21,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLockWriteGuard","id":348,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":true,"is_synthetic":true,"blanket_impl":null}}},"511":{"id":511,"crate_id":0,"name":"Lazy","span":{"filename":"src/lib.rs","begin":[120,0],"end":[120,58]},"visibility":"public","docs":"A value which is initialized on the first access. See [`lazy::Lazy`] for documentation.\n\nA note for advanced users: this alias exists to avoid subtle type inference errors due to the default relax\nstrategy type parameter. If you need a non-default relax strategy, use the fully-qualified path.","links":{"`lazy::Lazy`":68},"attrs":["#[cfg(feature = \"lazy\")]"],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"crate::lazy::Lazy","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"F"}}],"constraints":[]}}}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":{"function_pointer":{"sig":{"inputs":[],"output":{"generic":"T"},"is_c_variadic":false},"generic_params":[],"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"}}},"is_synthetic":false}}}],"where_predicates":[]}}}},"76":{"id":76,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":{"function_pointer":{"sig":{"inputs":[],"output":{"generic":"T"},"is_c_variadic":false},"generic_params":[],"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"}}},"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"Spin","id":3,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":13,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Lazy","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"F"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":true,"is_synthetic":true,"blanket_impl":null}}},"149":{"id":149,"crate_id":0,"name":"unlock","span":{"filename":"src/mutex/spin.rs","begin":[370,4],"end":[372,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":true,"is_async":false,"abi":"Rust"},"has_body":true}}},"222":{"id":222,"crate_id":0,"name":"INIT","span":{"filename":"src/mutex.rs","begin":[321,4],"end":[321,37]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"value":"_"}}},"295":{"id":295,"crate_id":0,"name":"from","span":{"filename":"src/once.rs","begin":[492,4],"end":[494,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["data",{"generic":"T"}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"3":{"id":3,"crate_id":0,"name":"Spin","span":{"filename":"src/relax.rs","begin":[21,0],"end":[21,16]},"visibility":"public","docs":"A strategy that rapidly spins while informing the CPU that it should power down non-essential components via\n[`core::hint::spin_loop`].\n\nNote that spinning is a 'dumb' strategy and most schedulers cannot correctly differentiate it from useful work,\nthereby misallocating even more CPU time to the spinning process. This is known as\n['priority inversion'](https://matklad.github.io/2020/01/02/spinlocks-considered-harmful.html).\n\nIf you see signs that priority inversion is occurring, consider switching to [`Yield`] or, even better, not using a\nspinlock at all and opting for a proper scheduler-aware lock. Remember also that different targets, operating\nsystems, schedulers, and even the same scheduler with different workloads will exhibit different behaviour. Just\nbecause priority inversion isn't occurring in your tests does not mean that it will not occur. Use a scheduler-\naware lock if at all possible.","links":{"`core::hint::spin_loop`":306},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":"unit","generics":{"params":[],"where_predicates":[]},"impls":[307,308,309,310,311,312,313,314,315,316,317,318,319,302]}}},"368":{"id":368,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":29,"args":{"angle_bracketed":{"args":[{"type":{"primitive":"never"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLock","id":340,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[131],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"441":{"id":441,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":29,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":32,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLockWriteGuard","id":348,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[30],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"6":{"id":6,"crate_id":0,"name":null,"span":{"filename":"src/barrier.rs","begin":[72,0],"end":[132,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RelaxStrategy","id":7,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Barrier","id":2,"args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[4],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"79":{"id":79,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":19,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":19,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":19,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":19,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Lazy","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"F"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"225":{"id":225,"crate_id":0,"name":"unlock","span":{"filename":"src/mutex.rs","begin":[333,4],"end":[335,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":true,"is_async":false,"abi":"Rust"},"has_body":true}}},"298":{"id":298,"crate_id":0,"name":null,"span":{"filename":"src/once.rs","begin":[497,0],"end":[507,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Drop","id":184,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Once","id":98,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[297],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"371":{"id":371,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":48,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLock","id":340,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[45],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"444":{"id":444,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":32,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLockWriteGuard","id":348,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[41,43],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"514":{"id":514,"crate_id":0,"name":"RwLockUpgradableGuard","span":{"filename":"src/lib.rs","begin":[153,0],"end":[153,84]},"visibility":"public","docs":"A guard that provides immutable data access but can be upgraded to [`RwLockWriteGuard`]. See\n[`rwlock::RwLockUpgradableGuard`] for documentation.\n\nA note for advanced users: this alias exists to avoid subtle type inference errors due to the default relax\nstrategy type parameter. If you need a non-default relax strategy, use the fully-qualified path.","links":{"`RwLockWriteGuard`":513,"`rwlock::RwLockUpgradableGuard`":337},"attrs":["#[cfg(feature = \"rwlock\")]"],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"crate::rwlock::RwLockUpgradableGuard","id":337,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]}}}},"9":{"id":9,"crate_id":0,"name":null,"span":{"filename":"src/barrier.rs","begin":[134,0],"end":[159,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Barrier","id":2,"args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[8],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"82":{"id":82,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":28,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"Lazy","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"F"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[26],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"155":{"id":155,"crate_id":0,"name":"leak","span":{"filename":"src/mutex/spin.rs","begin":[312,4],"end":[317,5]},"visibility":"public","docs":"Leak the lock guard, yielding a mutable reference to the underlying data.\n\nNote that this function will permanently lock the original [`SpinMutex`].\n\n```\nlet mylock = spin::mutex::SpinMutex::<_>::new(0);\n\nlet data: &mut i32 = spin::mutex::SpinMutexGuard::leak(mylock.lock());\n\n*data = 1;\nassert_eq!(*data, 1);\n```","links":{"`SpinMutex`":109},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["this",{"generic":"Self"}]],"output":{"borrowed_ref":{"lifetime":"'a","is_mutable":true,"type":{"generic":"T"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"301":{"id":301,"crate_id":0,"name":"relax","span":{"filename":"src/relax.rs","begin":[25,4],"end":[30,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"374":{"id":374,"crate_id":0,"name":"fmt","span":{"filename":"src/rwlock.rs","begin":[448,4],"end":[455,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":93,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":94,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"447":{"id":447,"crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[114,0],"end":[114,78]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Send","id":11,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":13,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":11,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLockWriteGuard","id":348,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"12":{"id":12,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":13,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Barrier","id":2,"args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"85":{"id":85,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"Lazy","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"F"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[35,37],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"158":{"id":158,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":17,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"SpinMutexGuard","id":115,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"231":{"id":231,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":11,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":11,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"MutexGuard","id":194,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"304":{"id":304,"crate_id":0,"name":null,"span":{"filename":"src/relax.rs","begin":[58,0],"end":[61,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RelaxStrategy","id":7,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Loop","id":305,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[303],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"377":{"id":377,"crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[458,0],"end":[462,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Default","id":104,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":104,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLock","id":340,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[376],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"450":{"id":450,"crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[711,0],"end":[715,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'rwlock","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":96,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":96,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLockWriteGuard","id":348,"args":{"angle_bracketed":{"args":[{"lifetime":"'rwlock"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[449],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"88":{"id":88,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Deref","id":89,"args":{"angle_bracketed":{"args":[],"constraints":[{"name":"Target","args":{"angle_bracketed":{"args":[],"constraints":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Receiver","id":90,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Lazy","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"F"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[87],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"P"}}}},"161":{"id":161,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":25,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"SpinMutexGuard","id":115,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[22],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"234":{"id":234,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":17,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"MutexGuard","id":194,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"307":{"id":307,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":11,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Spin","id":3,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"380":{"id":380,"crate_id":0,"name":"GuardMarker","span":{"filename":"src/rwlock.rs","begin":[804,4],"end":[804,49]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"name":"GuardSend","id":145,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}},"453":{"id":453,"crate_id":0,"name":"Target","span":{"filename":"src/rwlock.rs","begin":[742,4],"end":[742,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"generic":"T"}}}},"18":{"id":18,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":19,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":19,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Barrier","id":2,"args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"91":{"id":91,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":48,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Lazy","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"F"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[45],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"164":{"id":164,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":29,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"SpinMutexGuard","id":115,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[33],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"237":{"id":237,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":25,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"MutexGuard","id":194,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[22],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"310":{"id":310,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":17,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Spin","id":3,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"383":{"id":383,"crate_id":0,"name":"try_lock_exclusive","span":{"filename":"src/rwlock.rs","begin":[815,4],"end":[818,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"456":{"id":456,"crate_id":0,"name":"deref_mut","span":{"filename":"src/rwlock.rs","begin":[751,4],"end":[754,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"T"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"167":{"id":167,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Deref","id":89,"args":{"angle_bracketed":{"args":[],"constraints":[{"name":"Target","args":{"angle_bracketed":{"args":[],"constraints":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Receiver","id":90,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"SpinMutexGuard","id":115,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[87],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"P"}}}},"240":{"id":240,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":29,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"MutexGuard","id":194,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[33],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"313":{"id":313,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":25,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"Spin","id":3,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[22],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"386":{"id":386,"crate_id":0,"name":"try_lock_shared","span":{"filename":"src/rwlock.rs","begin":[836,4],"end":[839,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"459":{"id":459,"crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[774,0],"end":[784,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'rwlock","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Drop","id":184,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLockWriteGuard","id":348,"args":{"angle_bracketed":{"args":[{"lifetime":"'rwlock"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[458],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"97":{"id":97,"crate_id":0,"name":null,"span":{"filename":"src/lazy.rs","begin":[60,0],"end":[60,66]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":11,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"resolved_path":{"name":"crate::once::Once","id":98,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}}},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":13,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":13,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Lazy","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"F"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"170":{"id":170,"crate_id":0,"name":null,"span":{"filename":"src/mutex/spin.rs","begin":[91,0],"end":[91,63]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Send","id":11,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":11,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"SpinMutexGuard","id":115,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"243":{"id":243,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Deref","id":89,"args":{"angle_bracketed":{"args":[],"constraints":[{"name":"Target","args":{"angle_bracketed":{"args":[],"constraints":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Receiver","id":90,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"MutexGuard","id":194,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[87],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"P"}}}},"316":{"id":316,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":29,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"Spin","id":3,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[33],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"389":{"id":389,"crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[803,0],"end":[853,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"lock_api\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RelaxStrategy","id":7,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["is_locked","is_locked_exclusive"],"trait":{"name":"RawRwLock","id":390,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLock","id":340,"args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[380,381,382,383,384,385,386,387,388],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"27":{"id":27,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":28,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"Barrier","id":2,"args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[26],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"100":{"id":100,"crate_id":0,"name":"deref","span":{"filename":"src/lazy.rs","begin":[108,4],"end":[110,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"T"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"173":{"id":173,"crate_id":0,"name":"fmt","span":{"filename":"src/mutex/spin.rs","begin":[327,4],"end":[329,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":93,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":94,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"246":{"id":246,"crate_id":0,"name":null,"span":{"filename":"src/mutex.rs","begin":[292,0],"end":[296,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":96,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":96,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"MutexGuard","id":194,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[245],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"319":{"id":319,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":48,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Spin","id":3,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[45],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"392":{"id":392,"crate_id":0,"name":"try_lock_upgradable","span":{"filename":"src/rwlock.rs","begin":[864,4],"end":[869,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"465":{"id":465,"crate_id":0,"name":"leak","span":{"filename":"src/rwlock.rs","begin":[610,4],"end":[614,5]},"visibility":"public","docs":"Leak the lock guard, yielding a reference to the underlying data.\n\nNote that this function will permanently lock the original lock.\n\n```\nlet mylock = spin::RwLock::new(0);\n\nlet data: &i32 = spin::RwLockUpgradableGuard::leak(mylock.upgradeable_read());\n\nassert_eq!(*data, 0);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["this",{"generic":"Self"}]],"output":{"borrowed_ref":{"lifetime":"'rwlock","is_mutable":false,"type":{"generic":"T"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"30":{"id":30,"crate_id":1,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":29},"attrs":["#[track_caller]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"103":{"id":103,"crate_id":0,"name":null,"span":{"filename":"src/lazy.rs","begin":[113,0],"end":[118,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":104,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":104,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Lazy","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"function_pointer":{"sig":{"inputs":[],"output":{"generic":"T"},"is_c_variadic":false},"generic_params":[],"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"}}}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[102],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"176":{"id":176,"crate_id":0,"name":"Target","span":{"filename":"src/mutex/spin.rs","begin":[333,4],"end":[333,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"generic":"T"}}}},"249":{"id":249,"crate_id":0,"name":"Target","span":{"filename":"src/mutex.rs","begin":[305,4],"end":[305,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"generic":"T"}}}},"322":{"id":322,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":15,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Loop","id":305,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"395":{"id":395,"crate_id":0,"name":"try_upgrade","span":{"filename":"src/rwlock.rs","begin":[891,4],"end":[901,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":true,"is_async":false,"abi":"Rust"},"has_body":true}}},"468":{"id":468,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":17,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":17,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLockUpgradableGuard","id":337,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"33":{"id":33,"crate_id":1,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"179":{"id":179,"crate_id":0,"name":"deref_mut","span":{"filename":"src/mutex/spin.rs","begin":[341,4],"end":[344,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"T"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"252":{"id":252,"crate_id":0,"name":"deref_mut","span":{"filename":"src/mutex.rs","begin":[312,4],"end":[314,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"T"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"325":{"id":325,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":21,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Loop","id":305,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"398":{"id":398,"crate_id":0,"name":"downgrade","span":{"filename":"src/rwlock.rs","begin":[906,4],"end":[913,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":true,"is_async":false,"abi":"Rust"},"has_body":true}}},"471":{"id":471,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":25,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLockUpgradableGuard","id":337,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[22],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"109":{"id":109,"crate_id":0,"name":"SpinMutex","span":{"filename":"src/mutex/spin.rs","begin":[72,0],"end":[76,1]},"visibility":"public","docs":"A [spin lock](https://en.m.wikipedia.org/wiki/Spinlock) providing mutually exclusive access to data.\n\n# Example\n\n```\nuse spin;\n\nlet lock = spin::mutex::SpinMutex::<_>::new(0);\n\n// Modify the data\n*lock.lock() = 2;\n\n// Read the data\nlet answer = *lock.lock();\nassert_eq!(answer, 2);\n```\n\n# Thread safety example\n\n```\nuse spin;\nuse std::sync::{Arc, Barrier};\n\nlet thread_count = 1000;\nlet spin_mutex = Arc::new(spin::mutex::SpinMutex::<_>::new(0));\n\n// We use a barrier to ensure the readout happens after all writing\nlet barrier = Arc::new(Barrier::new(thread_count + 1));\n\n# let mut ts = Vec::new();\nfor _ in (0..thread_count) {\n    let my_barrier = barrier.clone();\n    let my_lock = spin_mutex.clone();\n# let t =\n    std::thread::spawn(move || {\n        let mut guard = my_lock.lock();\n        *guard += 1;\n\n        // Release the lock to prevent a deadlock\n        drop(guard);\n        my_barrier.wait();\n    });\n# ts.push(t);\n}\n\nbarrier.wait();\n\nlet answer = { *spin_mutex.lock() };\nassert_eq!(answer, thread_count);\n\n# for t in ts {\n#     t.join().unwrap();\n# }\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"crate::Spin","id":3,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_synthetic":false}}}],"where_predicates":[]},"impls":[113,116,122,123,124,125,126,127,128,129,130,132,133,134,135,136,137,139,141,143,151]}}},"182":{"id":182,"crate_id":0,"name":"drop","span":{"filename":"src/mutex/spin.rs","begin":[349,4],"end":[351,5]},"visibility":"default","docs":"The dropping of the MutexGuard will release the lock it was created from.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"328":{"id":328,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":29,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":32,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"Loop","id":305,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[30],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"474":{"id":474,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":29,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLockUpgradableGuard","id":337,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[33],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"39":{"id":39,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"Barrier","id":2,"args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[35,37],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"112":{"id":112,"crate_id":0,"name":"as_mut_ptr","span":{"filename":"src/mutex/spin.rs","begin":[156,4],"end":[158,5]},"visibility":"public","docs":"Returns a mutable pointer to the underlying data.\n\nThis is mostly meant to be used for applications which require manual unlocking, but where\nstoring both the lock and the pointer to the inner data gets inefficient.\n\n# Example\n```\nlet lock = spin::mutex::SpinMutex::<_>::new(42);\n\nunsafe {\n    core::mem::forget(lock.lock());\n\n    assert_eq!(lock.as_mut_ptr().read(), 42);\n    lock.as_mut_ptr().write(58);\n\n    lock.force_unlock();\n}\n\nassert_eq!(*lock.lock(), 58);\n\n```","links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"is_mutable":true,"type":{"generic":"T"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"185":{"id":185,"crate_id":0,"name":"spin","span":{"filename":"src/mutex/spin.rs","begin":[1,0],"end":[543,1]},"visibility":"public","docs":"A naïve spinning mutex.\n\nWaiting threads hammer an atomic variable until it becomes available. Best-case latency is low, but worst-case\nlatency is theoretically infinite.","links":{},"attrs":["#[cfg(feature = \"spin_mutex\")]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":[109,115],"is_stripped":false}}},"331":{"id":331,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":32,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"Loop","id":305,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[41,43],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"404":{"id":404,"crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[470,0],"end":[488,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'rwlock","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"RwLockReadGuard","id":346,"args":{"angle_bracketed":{"args":[{"lifetime":"'rwlock"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[403],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"477":{"id":477,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Deref","id":89,"args":{"angle_bracketed":{"args":[],"constraints":[{"name":"Target","args":{"angle_bracketed":{"args":[],"constraints":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Receiver","id":90,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLockUpgradableGuard","id":337,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[87],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"P"}}}},"115":{"id":115,"crate_id":0,"name":"SpinMutexGuard","span":{"filename":"src/mutex/spin.rs","begin":[81,0],"end":[84,1]},"visibility":"public","docs":"A guard that provides mutable data access.\n\nWhen the guard falls out of scope it will release the lock.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"impls":[156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,174,178,180,183]}}},"261":{"id":261,"crate_id":0,"name":"try_call_once","span":{"filename":"src/once.rs","begin":[208,4],"end":[214,5]},"visibility":"public","docs":"This method is similar to `call_once`, but allows the given closure to\nfail, and lets the `Once` in a uninitialized state if it does.\n\nThis method will block the calling thread if another initialization\nroutine is currently running.\n\nWhen this function returns without error, it is guaranteed that some\ninitialization has run and completed (it may not be the closure\nspecified). The returned reference will point to the result from the\nclosure that was run.\n\n# Panics\n\nThis function will panic if the [`Once`] previously panicked while attempting\nto initialize. This is similar to the poisoning behaviour of `std::sync`'s\nprimitives.\n\n# Examples\n\n```\nuse spin;\n\nstatic INIT: spin::Once<usize> = spin::Once::new();\n\nfn get_cached_val() -> Result<usize, String> {\n    INIT.try_call_once(expensive_fallible_computation).map(|x| *x)\n}\n\nfn expensive_fallible_computation() -> Result<usize, String> {\n    // ...\n# Ok(2)\n}\n```","links":{"`Once`":98},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"generic":"F"}]],"output":{"resolved_path":{"name":"Result","id":38,"args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"T"}}}},{"type":{"generic":"E"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":74,"args":{"parenthesized":{"inputs":[],"output":{"resolved_path":{"name":"Result","id":38,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"E"}}],"constraints":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"407":{"id":407,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":21,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":19,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLockReadGuard","id":346,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"480":{"id":480,"crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[121,0],"end":[121,83]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Send","id":11,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":13,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":13,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLockUpgradableGuard","id":337,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"45":{"id":45,"crate_id":1,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":46,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"118":{"id":118,"crate_id":0,"name":"force_unlock","span":{"filename":"src/mutex/spin.rs","begin":[218,4],"end":[220,5]},"visibility":"public","docs":"Force unlock this [`SpinMutex`].\n\n# Safety\n\nThis is *extremely* unsafe if the lock is not held by the current\nthread. However, this can be useful in some instances for exposing the\nlock to FFI that doesn't know how to deal with RAII.","links":{"`SpinMutex`":109},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":true,"is_async":false,"abi":"Rust"},"has_body":true}}},"191":{"id":191,"crate_id":0,"name":"into_inner","span":{"filename":"src/mutex.rs","begin":[163,4],"end":[165,5]},"visibility":"public","docs":"Consumes this [`Mutex`] and unwraps the underlying data.\n\n# Example\n\n```\nlet lock = spin::Mutex::new(42);\nassert_eq!(42, lock.into_inner());\n```","links":{"`Mutex`":189},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"T"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"264":{"id":264,"crate_id":0,"name":"get","span":{"filename":"src/once.rs","begin":[399,4],"end":[406,5]},"visibility":"public","docs":"Returns a reference to the inner value if the [`Once`] has been initialized.","links":{"`Once`":98},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":120,"args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"T"}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"410":{"id":410,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":28,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLockReadGuard","id":346,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[26],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"483":{"id":483,"crate_id":0,"name":"fmt","span":{"filename":"src/rwlock.rs","begin":[624,4],"end":[626,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":93,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":94,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"337":{"id":337,"crate_id":0,"name":"RwLockUpgradableGuard","span":{"filename":"src/rwlock.rs","begin":[104,0],"end":[108,1]},"visibility":"public","docs":"A guard that provides immutable data access but can be upgraded to [`RwLockWriteGuard`].\n\nNo writers or other upgradeable guards can exist while this is in scope. New reader\ncreation is prevented (to alleviate writer starvation) but there may be existing readers\nwhen the lock is acquired.\n\nWhen the guard falls out of scope it will release the lock.","links":{"`RwLockWriteGuard`":348},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"outlives":"'a"},{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"crate::Spin","id":3,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_synthetic":false}}}],"where_predicates":[]},"impls":[463,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,482,484,487,489]}}},"121":{"id":121,"crate_id":0,"name":"get_mut","span":{"filename":"src/mutex/spin.rs","begin":[268,4],"end":[272,5]},"visibility":"public","docs":"Returns a mutable reference to the underlying data.\n\nSince this call borrows the [`SpinMutex`] mutably, and a mutable reference is guaranteed to be exclusive in\nRust, no actual locking needs to take place -- the mutable borrow statically guarantees no locks exist. As\nsuch, this is a 'zero-cost' operation.\n\n# Example\n\n```\nlet mut lock = spin::mutex::SpinMutex::<_>::new(0);\n*lock.get_mut() = 10;\nassert_eq!(*lock.lock(), 10);\n```","links":{"`SpinMutex`":109},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"T"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"194":{"id":194,"crate_id":0,"name":"MutexGuard","span":{"filename":"src/mutex.rs","begin":[127,0],"end":[129,1]},"visibility":"public","docs":"A generic guard that will protect some data access and\nuses either a ticket lock or a normal spin mutex.\n\nFor more info see [`TicketMutexGuard`] or [`SpinMutexGuard`].\n\n[`TicketMutexGuard`]: ./struct.TicketMutexGuard.html\n[`SpinMutexGuard`]: ./struct.SpinMutexGuard.html","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"outlives":"'a"},{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"impls":[230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,246,248,251,253]}}},"267":{"id":267,"crate_id":0,"name":"initialized","span":{"filename":"src/once.rs","begin":[355,4],"end":[361,5]},"visibility":"public","docs":"Creates a new initialized [`Once`].","links":{"`Once`":98},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["data",{"generic":"T"}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"340":{"id":340,"crate_id":0,"name":"RwLock","span":{"filename":"src/rwlock.rs","begin":[69,0],"end":[73,1]},"visibility":"public","docs":"A lock that provides data access to either one writer or many readers.\n\nThis lock behaves in a similar manner to its namesake `std::sync::RwLock` but uses\nspinning for synchronisation instead. Unlike its namespace, this lock does not\ntrack lock poisoning.\n\nThis type of lock allows a number of readers or at most one writer at any\npoint in time. The write portion of this lock typically allows modification\nof the underlying data (exclusive access) and the read portion of this lock\ntypically allows for read-only access (shared access).\n\nThe type parameter `T` represents the data that this lock protects. It is\nrequired that `T` satisfies `Send` to be shared across tasks and `Sync` to\nallow concurrent access through readers. The RAII guards returned from the\nlocking methods implement `Deref` (and `DerefMut` for the `write` methods)\nto allow access to the contained of the lock.\n\nAn [`RwLockUpgradableGuard`](RwLockUpgradableGuard) can be upgraded to a\nwritable guard through the [`RwLockUpgradableGuard::upgrade`](RwLockUpgradableGuard::upgrade)\n[`RwLockUpgradableGuard::try_upgrade`](RwLockUpgradableGuard::try_upgrade) functions.\nWritable or upgradeable guards can be downgraded through their respective `downgrade`\nfunctions.\n\nBased on Facebook's\n[`folly/RWSpinLock.h`](https://github.com/facebook/folly/blob/a0394d84f2d5c3e50ebfd0566f9d3acb52cfab5a/folly/synchronization/RWSpinLock.h).\nThis implementation is unfair to writers - if the lock always has readers, then no writers will\never get a chance. Using an upgradeable lock guard can *somewhat* alleviate this issue as no\nnew readers are allowed when an upgradeable guard is held, but upgradeable guards can be taken\nwhen there are existing readers. However if the lock is that highly contended and writes are\ncrucial then this implementation may be a poor choice.\n\n# Examples\n\n```\nuse spin;\n\nlet lock = spin::RwLock::new(5);\n\n// many reader locks can be held at once\n{\n    let r1 = lock.read();\n    let r2 = lock.read();\n    assert_eq!(*r1, 5);\n    assert_eq!(*r2, 5);\n} // read locks are dropped at this point\n\n// only one write lock may be held, however\n{\n    let mut w = lock.write();\n    *w += 1;\n    assert_eq!(*w, 6);\n} // write lock is dropped here\n```","links":{"RwLockUpgradableGuard":337,"RwLockUpgradableGuard::upgrade":338,"RwLockUpgradableGuard::try_upgrade":339},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"crate::Spin","id":3,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_synthetic":false}}}],"where_predicates":[]},"impls":[344,350,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,375,377,379,389,396,399]}}},"413":{"id":413,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLockReadGuard","id":346,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[35,37],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"486":{"id":486,"crate_id":0,"name":"deref","span":{"filename":"src/rwlock.rs","begin":[735,4],"end":[738,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"T"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"51":{"id":51,"crate_id":0,"name":null,"span":{"filename":"src/barrier.rs","begin":[161,0],"end":[181,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"BarrierWaitResult","id":5,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[50],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"124":{"id":124,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":17,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":17,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":17,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"SpinMutex","id":109,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"197":{"id":197,"crate_id":0,"name":"force_unlock","span":{"filename":"src/mutex.rs","begin":[211,4],"end":[213,5]},"visibility":"public","docs":"Force unlock this [`Mutex`].\n\n# Safety\n\nThis is *extremely* unsafe if the lock is not held by the current\nthread. However, this can be useful in some instances for exposing the\nlock to FFI that doesn't know how to deal with RAII.","links":{"`Mutex`":189},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":true,"is_async":false,"abi":"Rust"},"has_body":true}}},"270":{"id":270,"crate_id":0,"name":"get_mut","span":{"filename":"src/once.rs","begin":[429,4],"end":[434,5]},"visibility":"public","docs":"Returns a mutable reference to the inner value if the [`Once`] has been initialized.\n\nBecause this method requires a mutable reference to the [`Once`], no synchronization\noverhead is required to access the inner value. In effect, it is zero-cost.","links":{"`Once`":98},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":120,"args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"T"}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"343":{"id":343,"crate_id":0,"name":"as_mut_ptr","span":{"filename":"src/rwlock.rs","begin":[181,4],"end":[183,5]},"visibility":"public","docs":"Returns a mutable pointer to the underying data.\n\nThis is mostly meant to be used for applications which require manual unlocking, but where\nstoring both the lock and the pointer to the inner data gets inefficient.\n\nWhile this is safe, writing to the data is undefined behavior unless the current thread has\nacquired a write lock, and reading requires either a read or write lock.\n\n# Example\n```\nlet lock = spin::RwLock::new(42);\n\nunsafe {\n    core::mem::forget(lock.write());\n\n    assert_eq!(lock.as_mut_ptr().read(), 42);\n    lock.as_mut_ptr().write(58);\n\n    lock.force_write_unlock();\n}\n\nassert_eq!(*lock.read(), 58);\n\n```","links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"is_mutable":true,"type":{"generic":"T"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"416":{"id":416,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":48,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLockReadGuard","id":346,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[45],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"489":{"id":489,"crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[764,0],"end":[772,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'rwlock","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Drop","id":184,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLockUpgradableGuard","id":337,"args":{"angle_bracketed":{"args":[{"lifetime":"'rwlock"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[488],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"54":{"id":54,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":15,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"BarrierWaitResult","id":5,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"127":{"id":127,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":25,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"SpinMutex","id":109,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[22],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"200":{"id":200,"crate_id":0,"name":null,"span":{"filename":"src/mutex.rs","begin":[191,0],"end":[253,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Mutex","id":189,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[196,197,198,199],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"273":{"id":273,"crate_id":0,"name":"into_inner_unchecked","span":{"filename":"src/once.rs","begin":[471,4],"end":[478,5]},"visibility":"public","docs":"Returns a the inner value if the [`Once`] has been initialized.  \n# Safety\n\nThis is *extremely* unsafe if the `Once` has not already been initialized because a reference to uninitialized\nmemory will be returned, immediately triggering undefined behaviour (even if the reference goes unused)\nThis can be useful, if `Once` has already been initialized, and you want to bypass an\noption check.","links":{"`Once`":98},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"T"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":true,"is_async":false,"abi":"Rust"},"has_body":true}}},"419":{"id":419,"crate_id":0,"name":"fmt","span":{"filename":"src/rwlock.rs","begin":[491,4],"end":[493,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":93,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":94,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"346":{"id":346,"crate_id":0,"name":"RwLockReadGuard","span":{"filename":"src/rwlock.rs","begin":[83,0],"end":[86,1]},"visibility":"public","docs":"A guard that provides immutable data access.\n\nWhen the guard falls out of scope it will decrement the read count,\npotentially releasing the lock.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"outlives":"'a"},{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"impls":[404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,420,422,425,427]}}},"57":{"id":57,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":21,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"BarrierWaitResult","id":5,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"130":{"id":130,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":29,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"SpinMutex","id":109,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[33],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"203":{"id":203,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":19,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":19,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":19,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Mutex","id":189,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"276":{"id":276,"crate_id":0,"name":null,"span":{"filename":"src/once.rs","begin":[340,0],"end":[489,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Once","id":98,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[266,259,267,268,264,269,270,271,272,273,275],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"349":{"id":349,"crate_id":0,"name":"upgradeable_read","span":{"filename":"src/rwlock.rs","begin":[249,4],"end":[256,5]},"visibility":"public","docs":"Obtain a readable lock guard that can later be upgraded to a writable lock guard.\nUpgrades can be done through the [`RwLockUpgradableGuard::upgrade`](RwLockUpgradableGuard::upgrade) method.","links":{"RwLockUpgradableGuard::upgrade":338},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"RwLockUpgradableGuard","id":337,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"422":{"id":422,"crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[496,0],"end":[500,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'rwlock","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"fmt::Display","id":175,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":175,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLockReadGuard","id":346,"args":{"angle_bracketed":{"args":[{"lifetime":"'rwlock"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[421],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"60":{"id":60,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":29,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":32,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"BarrierWaitResult","id":5,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[30],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"133":{"id":133,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"SpinMutex","id":109,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[35,37],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"206":{"id":206,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":28,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"Mutex","id":189,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[26],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"279":{"id":279,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":19,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":19,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":19,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Once","id":98,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"352":{"id":352,"crate_id":0,"name":"reader_count","span":{"filename":"src/rwlock.rs","begin":[321,4],"end":[324,5]},"visibility":"public","docs":"Return the number of readers that currently hold the lock (including upgradable readers).\n\n# Safety\n\nThis function provides no synchronization guarantees and so its result should be considered 'out of date'\nthe instant it is called. Do not use it for synchronization purposes. However, it may be useful as a heuristic.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"425":{"id":425,"crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[723,0],"end":[730,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'rwlock","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Deref","id":89,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLockReadGuard","id":346,"args":{"angle_bracketed":{"args":[{"lifetime":"'rwlock"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[423,424],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"498":{"id":498,"crate_id":0,"name":"RwLock","span":{"filename":"src/lib.rs","begin":[144,0],"end":[144,46]},"visibility":"public","docs":"A lock that provides data access to either one writer or many readers. See [`rwlock::RwLock`] for documentation.\n\nA note for advanced users: this alias exists to avoid subtle type inference errors due to the default relax\nstrategy type parameter. If you need a non-default relax strategy, use the fully-qualified path.","links":{"`rwlock::RwLock`":340},"attrs":["#[cfg(feature = \"rwlock\")]"],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"crate::rwlock::RwLock","id":340,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]}}}},"63":{"id":63,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":32,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"BarrierWaitResult","id":5,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[41,43],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"136":{"id":136,"crate_id":0,"name":null,"span":{"filename":"src/mutex/spin.rs","begin":[87,0],"end":[87,60]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Send","id":11,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":13,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"SpinMutex","id":109,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"209":{"id":209,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":29,"args":{"angle_bracketed":{"args":[{"type":{"primitive":"never"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"Mutex","id":189,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[131],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"282":{"id":282,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":28,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"Once","id":98,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[26],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"355":{"id":355,"crate_id":0,"name":"force_write_unlock","span":{"filename":"src/rwlock.rs","begin":[361,4],"end":[364,5]},"visibility":"public","docs":"Force unlock exclusive write access.\n\n# Safety\n\nThis is *extremely* unsafe if there are outstanding `RwLockWriteGuard`s\nlive, or if called when there are current readers, but can be useful in\nFFI contexts where the caller doesn't know how to deal with RAII. The\nunderlying atomic operation uses `Ordering::Release`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":true,"is_async":false,"abi":"Rust"},"has_body":true}}},"501":{"id":501,"crate_id":0,"name":"RwLockWriteGuard","span":{"filename":"src/lib.rs","begin":[190,4],"end":[190,98]},"visibility":"public","docs":"A guard that provides mutable data access (compatible with [`lock_api`](https://crates.io/crates/lock_api)).","links":{},"attrs":["#[cfg(feature = \"rwlock\")]"],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"lock_api_crate::RwLockWriteGuard","id":502,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"resolved_path":{"name":"crate::RwLock","id":498,"args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"constraints":[]}}}}},{"type":{"generic":"T"}}],"constraints":[]}}}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]}}}},"139":{"id":139,"crate_id":0,"name":null,"span":{"filename":"src/mutex/spin.rs","begin":[275,0],"end":[284,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":96,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":96,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"SpinMutex","id":109,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[138],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"212":{"id":212,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":48,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Mutex","id":189,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[45],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"285":{"id":285,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":29,"args":{"angle_bracketed":{"args":[{"type":{"primitive":"never"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"Once","id":98,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[131],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"358":{"id":358,"crate_id":0,"name":"get_mut","span":{"filename":"src/rwlock.rs","begin":[440,4],"end":[444,5]},"visibility":"public","docs":"Returns a mutable reference to the underlying data.\n\nSince this call borrows the `RwLock` mutably, no actual locking needs to\ntake place -- the mutable borrow statically guarantees no locks exist.\n\n# Examples\n\n```\nlet mut lock = spin::RwLock::new(0);\n*lock.get_mut() = 10;\nassert_eq!(*lock.read(), 10);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"T"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"431":{"id":431,"crate_id":0,"name":"downgrade","span":{"filename":"src/rwlock.rs","begin":[643,4],"end":[656,5]},"visibility":"public","docs":"Downgrades the writable lock guard to a readable, shared lock guard. Cannot fail and is guaranteed not to spin.\n\n```\nlet mylock = spin::RwLock::new(0);\n\nlet mut writable = mylock.write();\n*writable = 1;\n\nlet readable = writable.downgrade(); // This is guaranteed not to spin\n# let readable_2 = mylock.try_read().unwrap();\nassert_eq!(*readable, 1);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"RwLockReadGuard","id":346,"args":{"angle_bracketed":{"args":[{"lifetime":"'rwlock"},{"type":{"generic":"T"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"69":{"id":69,"crate_id":0,"name":"new","span":{"filename":"src/lazy.rs","begin":[66,4],"end":[71,5]},"visibility":"public","docs":"Creates a new lazy value with the given initializing\nfunction.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["f",{"generic":"F"}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"142":{"id":142,"crate_id":0,"name":"from","span":{"filename":"src/mutex/spin.rs","begin":[293,4],"end":[295,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["data",{"generic":"T"}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"215":{"id":215,"crate_id":0,"name":"fmt","span":{"filename":"src/mutex.rs","begin":[256,4],"end":[258,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":93,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":94,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"288":{"id":288,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":48,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Once","id":98,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[45],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"361":{"id":361,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":17,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":17,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":17,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLock","id":340,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"434":{"id":434,"crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[629,0],"end":[709,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'rwlock","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"RwLockWriteGuard","id":348,"args":{"angle_bracketed":{"args":[{"lifetime":"'rwlock"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[431,432,433],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"507":{"id":507,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[97,16],"end":[97,29]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"use":{"source":"relax::RelaxStrategy","name":"RelaxStrategy","id":7,"is_glob":false}}},"72":{"id":72,"crate_id":0,"name":"force","span":{"filename":"src/lazy.rs","begin":[97,4],"end":[102,5]},"visibility":"public","docs":"Forces the evaluation of this lazy value and\nreturns a reference to result. This is equivalent\nto the `Deref` impl, but is explicit.\n\n# Examples\n\n```\nuse spin::Lazy;\n\nlet lazy = Lazy::new(|| 92);\n\nassert_eq!(Lazy::force(&lazy), &92);\nassert_eq!(&*lazy, &92);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["this",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"T"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"218":{"id":218,"crate_id":0,"name":null,"span":{"filename":"src/mutex.rs","begin":[261,0],"end":[265,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Default","id":104,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":104,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Mutex","id":189,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[217],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"291":{"id":291,"crate_id":0,"name":"fmt","span":{"filename":"src/once.rs","begin":[41,4],"end":[48,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":93,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":94,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"364":{"id":364,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":25,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLock","id":340,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[22],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"437":{"id":437,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"Spin","id":3,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":19,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLockWriteGuard","id":348,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":true,"is_synthetic":true,"blanket_impl":null}}},"510":{"id":510,"crate_id":0,"name":"Barrier","span":{"filename":"src/lib.rs","begin":[112,0],"end":[112,43]},"visibility":"public","docs":"A primitive that synchronizes the execution of multiple threads. See [`barrier::Barrier`] for documentation.\n\nA note for advanced users: this alias exists to avoid subtle type inference errors due to the default relax\nstrategy type parameter. If you need a non-default relax strategy, use the fully-qualified path.","links":{"`barrier::Barrier`":2},"attrs":["#[cfg(feature = \"barrier\")]"],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"crate::barrier::Barrier","id":2,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"generics":{"params":[],"where_predicates":[]}}}},"2":{"id":2,"crate_id":0,"name":"Barrier","span":{"filename":"src/barrier.rs","begin":[45,0],"end":[48,1]},"visibility":"public","docs":"A primitive that synchronizes the execution of multiple threads.\n\n# Example\n\n```\nuse spin;\nuse std::sync::Arc;\nuse std::thread;\n\nlet mut handles = Vec::with_capacity(10);\nlet barrier = Arc::new(spin::Barrier::new(10));\nfor _ in 0..10 {\n    let c = barrier.clone();\n    // The same messages will be printed together.\n    // You will NOT see any interleaving.\n    handles.push(thread::spawn(move|| {\n        println!(\"before wait\");\n        c.wait();\n        println!(\"after wait\");\n    }));\n}\n// Wait for other threads to finish.\nfor handle in handles {\n    handle.join().unwrap();\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"crate::Spin","id":3,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_synthetic":false}}}],"where_predicates":[]},"impls":[6,9,10,12,14,16,18,20,23,27,31,34,39,44,47]}}},"75":{"id":75,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":11,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":11,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":11,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Lazy","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"F"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"148":{"id":148,"crate_id":0,"name":"try_lock","span":{"filename":"src/mutex/spin.rs","begin":[365,4],"end":[368,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"221":{"id":221,"crate_id":0,"name":"GuardMarker","span":{"filename":"src/mutex.rs","begin":[319,4],"end":[319,49]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"name":"GuardSend","id":145,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}},"294":{"id":294,"crate_id":0,"name":null,"span":{"filename":"src/once.rs","begin":[54,0],"end":[54,46]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":11,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":11,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Once","id":98,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"367":{"id":367,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":29,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLock","id":340,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[33],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"440":{"id":440,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":28,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLockWriteGuard","id":348,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[26],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"5":{"id":5,"crate_id":0,"name":"BarrierWaitResult","span":{"filename":"src/barrier.rs","begin":[70,0],"end":[70,35]},"visibility":"public","docs":"A `BarrierWaitResult` is returned by [`wait`] when all threads in the [`Barrier`]\nhave rendezvoused.\n\n[`wait`]: struct.Barrier.html#method.wait\n[`Barrier`]: struct.Barrier.html\n\n# Examples\n\n```\nuse spin;\n\nlet barrier = spin::Barrier::new(1);\nlet barrier_wait_result = barrier.wait();\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":[51,52,53,54,55,56,57,58,59,60,61,62,63,64]}}},"78":{"id":78,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":17,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":17,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":17,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":17,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Lazy","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"F"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"151":{"id":151,"crate_id":0,"name":null,"span":{"filename":"src/mutex/spin.rs","begin":[355,0],"end":[377,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"lock_api\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RelaxStrategy","id":7,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["is_locked"],"trait":{"name":"RawMutex","id":152,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"SpinMutex","id":109,"args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[144,146,147,148,149,150],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"224":{"id":224,"crate_id":0,"name":"try_lock","span":{"filename":"src/mutex.rs","begin":[328,4],"end":[331,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"297":{"id":297,"crate_id":0,"name":"drop","span":{"filename":"src/once.rs","begin":[498,4],"end":[506,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"370":{"id":370,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":32,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLock","id":340,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[41,43],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"443":{"id":443,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLockWriteGuard","id":348,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[35,37],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"8":{"id":8,"crate_id":0,"name":"new","span":{"filename":"src/barrier.rs","begin":[150,4],"end":[158,5]},"visibility":"public","docs":"Creates a new barrier that can block a given number of threads.\n\nA barrier will block `n`-1 threads which call [`wait`] and then wake up\nall threads at once when the `n`th thread calls [`wait`]. A Barrier created\nwith n = 0 will behave identically to one created with n = 1.\n\n[`wait`]: #method.wait\n\n# Examples\n\n```\nuse spin;\n\nlet barrier = spin::Barrier::new(10);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["n",{"primitive":"usize"}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"81":{"id":81,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":25,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"Lazy","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"F"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[22],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"227":{"id":227,"crate_id":0,"name":null,"span":{"filename":"src/mutex.rs","begin":[318,0],"end":[340,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"lock_api\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RelaxStrategy","id":7,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["is_locked"],"trait":{"name":"RawMutex","id":152,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Mutex","id":189,"args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[221,222,223,224,225,226],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"300":{"id":300,"crate_id":0,"name":"relax","span":{"filename":"src/relax.rs","begin":[6,4],"end":[6,15]},"visibility":"default","docs":"Perform the relaxing operation during a period of contention.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":false}}},"373":{"id":373,"crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[112,0],"end":[112,64]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Send","id":11,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":13,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":13,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLock","id":340,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"446":{"id":446,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":48,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLockWriteGuard","id":348,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[45],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"513":{"id":513,"crate_id":0,"name":"RwLockWriteGuard","span":{"filename":"src/lib.rs","begin":[161,0],"end":[161,74]},"visibility":"public","docs":"A guard that provides mutable data access. See [`rwlock::RwLockWriteGuard`] for documentation.\n\nA note for advanced users: this alias exists to avoid subtle type inference errors due to the default relax\nstrategy type parameter. If you need a non-default relax strategy, use the fully-qualified path.","links":{"`rwlock::RwLockWriteGuard`":348},"attrs":["#[cfg(feature = \"rwlock\")]"],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"crate::rwlock::RwLockWriteGuard","id":348,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]}}}},"84":{"id":84,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":29,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"Lazy","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"F"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[33],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"157":{"id":157,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":15,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"SpinMutexGuard","id":115,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"230":{"id":230,"crate_id":0,"name":null,"span":{"filename":"src/mutex.rs","begin":[273,0],"end":[290,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"MutexGuard","id":194,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[229],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"303":{"id":303,"crate_id":0,"name":"relax","span":{"filename":"src/relax.rs","begin":[60,4],"end":[60,17]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"376":{"id":376,"crate_id":0,"name":"default","span":{"filename":"src/rwlock.rs","begin":[459,4],"end":[461,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"449":{"id":449,"crate_id":0,"name":"fmt","span":{"filename":"src/rwlock.rs","begin":[712,4],"end":[714,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":93,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":94,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"14":{"id":14,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"Spin","id":3,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":15,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Barrier","id":2,"args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":true,"is_synthetic":true,"blanket_impl":null}}},"87":{"id":87,"crate_id":1,"name":"Target","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"generic":"T"}}}},"160":{"id":160,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":21,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":21,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"SpinMutexGuard","id":115,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"233":{"id":233,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":15,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"MutexGuard","id":194,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"379":{"id":379,"crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[464,0],"end":[468,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":29,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLock","id":340,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[378],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"452":{"id":452,"crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[717,0],"end":[721,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'rwlock","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"fmt::Display","id":175,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":175,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLockWriteGuard","id":348,"args":{"angle_bracketed":{"args":[{"lifetime":"'rwlock"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[451],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"163":{"id":163,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":29,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":32,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"SpinMutexGuard","id":115,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[30],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"236":{"id":236,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":21,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":21,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"MutexGuard","id":194,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"309":{"id":309,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":15,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Spin","id":3,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"382":{"id":382,"crate_id":0,"name":"lock_exclusive","span":{"filename":"src/rwlock.rs","begin":[809,4],"end":[812,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"455":{"id":455,"crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[741,0],"end":[748,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'rwlock","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Deref","id":89,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLockWriteGuard","id":348,"args":{"angle_bracketed":{"args":[{"lifetime":"'rwlock"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[453,454],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"20":{"id":20,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"Spin","id":3,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":21,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Barrier","id":2,"args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":true,"is_synthetic":true,"blanket_impl":null}}},"166":{"id":166,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":32,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"SpinMutexGuard","id":115,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[41,43],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"239":{"id":239,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":29,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":32,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"MutexGuard","id":194,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[30],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"312":{"id":312,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":21,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Spin","id":3,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"385":{"id":385,"crate_id":0,"name":"lock_shared","span":{"filename":"src/rwlock.rs","begin":[830,4],"end":[833,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"458":{"id":458,"crate_id":0,"name":"drop","span":{"filename":"src/rwlock.rs","begin":[775,4],"end":[783,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"23":{"id":23,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":25,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"Barrier","id":2,"args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[22],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"169":{"id":169,"crate_id":0,"name":null,"span":{"filename":"src/mutex/spin.rs","begin":[90,0],"end":[90,63]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Sync","id":13,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":13,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"SpinMutexGuard","id":115,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"242":{"id":242,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":32,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"MutexGuard","id":194,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[41,43],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"315":{"id":315,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":29,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":32,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"Spin","id":3,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[30],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"388":{"id":388,"crate_id":0,"name":"is_locked","span":{"filename":"src/rwlock.rs","begin":[850,4],"end":[852,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"26":{"id":26,"crate_id":1,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"T"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"99":{"id":99,"crate_id":0,"name":"Target","span":{"filename":"src/lazy.rs","begin":[106,4],"end":[106,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"generic":"T"}}}},"172":{"id":172,"crate_id":0,"name":null,"span":{"filename":"src/mutex/spin.rs","begin":[320,0],"end":[324,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":96,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":96,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"SpinMutexGuard","id":115,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[171],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"245":{"id":245,"crate_id":0,"name":"fmt","span":{"filename":"src/mutex.rs","begin":[293,4],"end":[295,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":93,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":94,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"318":{"id":318,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":32,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"Spin","id":3,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[41,43],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"391":{"id":391,"crate_id":0,"name":"lock_upgradable","span":{"filename":"src/rwlock.rs","begin":[858,4],"end":[861,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"464":{"id":464,"crate_id":0,"name":"downgrade","span":{"filename":"src/rwlock.rs","begin":[583,4],"end":[596,5]},"visibility":"public","docs":"Downgrades the upgradeable lock guard to a readable, shared lock guard. Cannot fail and is guaranteed not to spin.\n\n```\nlet mylock = spin::RwLock::new(1);\n\nlet upgradeable = mylock.upgradeable_read();\nassert!(mylock.try_read().is_none());\nassert_eq!(*upgradeable, 1);\n\nlet readable = upgradeable.downgrade(); // This is guaranteed not to spin\nassert!(mylock.try_read().is_some());\nassert_eq!(*readable, 1);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"RwLockReadGuard","id":346,"args":{"angle_bracketed":{"args":[{"lifetime":"'rwlock"},{"type":{"generic":"T"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"102":{"id":102,"crate_id":0,"name":"default","span":{"filename":"src/lazy.rs","begin":[115,4],"end":[117,5]},"visibility":"default","docs":"Creates a new lazy value using `Default` as the initializing function.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"248":{"id":248,"crate_id":0,"name":null,"span":{"filename":"src/mutex.rs","begin":[298,0],"end":[302,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"fmt::Display","id":175,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":175,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"MutexGuard","id":194,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[247],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"321":{"id":321,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":13,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Loop","id":305,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"394":{"id":394,"crate_id":0,"name":"upgrade","span":{"filename":"src/rwlock.rs","begin":[881,4],"end":[888,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":true,"is_async":false,"abi":"Rust"},"has_body":true}}},"467":{"id":467,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":15,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLockUpgradableGuard","id":337,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"105":{"id":105,"crate_id":0,"name":"lazy","span":{"filename":"src/lazy.rs","begin":[1,0],"end":[118,1]},"visibility":"public","docs":"Synchronization primitives for lazy evaluation.\n\nImplementation adapted from the `SyncLazy` type of the standard library. See:\n<https://doc.rust-lang.org/std/lazy/struct.SyncLazy.html>","links":{},"attrs":["#[cfg(feature = \"lazy\")]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":[68],"is_stripped":false}}},"178":{"id":178,"crate_id":0,"name":null,"span":{"filename":"src/mutex/spin.rs","begin":[332,0],"end":[338,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Deref","id":89,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"SpinMutexGuard","id":115,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[176,177],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"251":{"id":251,"crate_id":0,"name":null,"span":{"filename":"src/mutex.rs","begin":[304,0],"end":[309,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Deref","id":89,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"MutexGuard","id":194,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[249,250],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"324":{"id":324,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":19,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Loop","id":305,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"470":{"id":470,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"Spin","id":3,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":21,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLockUpgradableGuard","id":337,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":true,"is_synthetic":true,"blanket_impl":null}}},"35":{"id":35,"crate_id":1,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}}}}}}},"254":{"id":254,"crate_id":0,"name":"mutex","span":{"filename":"src/mutex.rs","begin":[1,0],"end":[340,1]},"visibility":"public","docs":"Locks that have the same behaviour as a mutex.\n\nThe [`Mutex`] in the root of the crate, can be configured using the `ticket_mutex` feature.\nIf it's enabled, [`TicketMutex`] and [`TicketMutexGuard`] will be re-exported as [`Mutex`]\nand [`MutexGuard`], otherwise the [`SpinMutex`] and guard will be re-exported.\n\n`ticket_mutex` is disabled by default.\n\n[`Mutex`]: ../struct.Mutex.html\n[`MutexGuard`]: ../struct.MutexGuard.html\n[`TicketMutex`]: ./struct.TicketMutex.html\n[`TicketMutexGuard`]: ./struct.TicketMutexGuard.html\n[`SpinMutex`]: ./struct.SpinMutex.html\n[`SpinMutexGuard`]: ./struct.SpinMutexGuard.html","links":{},"attrs":["#[cfg(feature = \"mutex\")]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":[185,186,187,189,194],"is_stripped":false}}},"327":{"id":327,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":28,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"Loop","id":305,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[26],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"473":{"id":473,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":29,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":32,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLockUpgradableGuard","id":337,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[30],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"111":{"id":111,"crate_id":0,"name":"into_inner","span":{"filename":"src/mutex/spin.rs","begin":[127,4],"end":[132,5]},"visibility":"public","docs":"Consumes this [`SpinMutex`] and unwraps the underlying data.\n\n# Example\n\n```\nlet lock = spin::mutex::SpinMutex::<_>::new(42);\nassert_eq!(42, lock.into_inner());\n```","links":{"`SpinMutex`":109},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"T"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"330":{"id":330,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"Loop","id":305,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[35,37],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"403":{"id":403,"crate_id":0,"name":"leak","span":{"filename":"src/rwlock.rs","begin":[483,4],"end":[487,5]},"visibility":"public","docs":"Leak the lock guard, yielding a reference to the underlying data.\n\nNote that this function will permanently lock the original lock for all but reading locks.\n\n```\nlet mylock = spin::RwLock::new(0);\n\nlet data: &i32 = spin::RwLockReadGuard::leak(mylock.read());\n\nassert_eq!(*data, 0);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["this",{"generic":"Self"}]],"output":{"borrowed_ref":{"lifetime":"'rwlock","is_mutable":false,"type":{"generic":"T"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"476":{"id":476,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":32,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLockUpgradableGuard","id":337,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[41,43],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"41":{"id":41,"crate_id":1,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"name":"Infallible","id":42,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}},"114":{"id":114,"crate_id":0,"name":"lock","span":{"filename":"src/mutex/spin.rs","begin":[177,4],"end":[195,5]},"visibility":"public","docs":"Locks the [`SpinMutex`] and returns a guard that permits access to the inner data.\n\nThe returned value may be dereferenced for data access\nand the lock will be dropped when the guard falls out of scope.\n\n```\nlet lock = spin::mutex::SpinMutex::<_>::new(0);\n{\n    let mut data = lock.lock();\n    // The lock is now locked and the data can be accessed\n    *data += 1;\n    // The lock is implicitly dropped at the end of the scope\n}\n```","links":{"`SpinMutex`":109},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SpinMutexGuard","id":115,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"187":{"id":187,"crate_id":0,"name":null,"span":{"filename":"src/mutex.rs","begin":[21,32],"end":[21,46]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"spin_mutex\")]"],"deprecation":null,"inner":{"use":{"source":"self::spin::SpinMutexGuard","name":"SpinMutexGuard","id":115,"is_glob":false}}},"260":{"id":260,"crate_id":0,"name":"call_once","span":{"filename":"src/once.rs","begin":[168,4],"end":[173,5]},"visibility":"public","docs":"Performs an initialization routine once and only once. The given closure\nwill be executed if this is the first time `call_once` has been called,\nand otherwise the routine will *not* be invoked.\n\nThis method will block the calling thread if another initialization\nroutine is currently running.\n\nWhen this function returns, it is guaranteed that some initialization\nhas run and completed (it may not be the closure specified). The\nreturned pointer will point to the result from the closure that was\nrun.\n\n# Panics\n\nThis function will panic if the [`Once`] previously panicked while attempting\nto initialize. This is similar to the poisoning behaviour of `std::sync`'s\nprimitives.\n\n# Examples\n\n```\nuse spin;\n\nstatic INIT: spin::Once<usize> = spin::Once::new();\n\nfn get_cached_val() -> usize {\n    *INIT.call_once(expensive_computation)\n}\n\nfn expensive_computation() -> usize {\n    // ...\n# 2\n}\n```","links":{"`Once`":98},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"generic":"F"}]],"output":{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"T"}}},"is_c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":74,"args":{"parenthesized":{"inputs":[],"output":{"generic":"T"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"333":{"id":333,"crate_id":0,"name":"relax","span":{"filename":"src/relax.rs","begin":[1,0],"end":[61,1]},"visibility":"public","docs":"Strategies that determine the behaviour of locks when encountering contention.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":[7,3,305],"is_stripped":false}}},"406":{"id":406,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":17,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLockReadGuard","id":346,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"479":{"id":479,"crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[120,0],"end":[120,83]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Send","id":11,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":13,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":11,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLockUpgradableGuard","id":337,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"44":{"id":44,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":32,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"Barrier","id":2,"args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[41,43],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"117":{"id":117,"crate_id":0,"name":"is_locked","span":{"filename":"src/mutex/spin.rs","begin":[206,4],"end":[208,5]},"visibility":"public","docs":"Returns `true` if the lock is currently held.\n\n# Safety\n\nThis function provides no synchronization guarantees and so its result should be considered 'out of date'\nthe instant it is called. Do not use it for synchronization purposes. However, it may be useful as a heuristic.","links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"190":{"id":190,"crate_id":0,"name":"new","span":{"filename":"src/mutex.rs","begin":[148,4],"end":[152,5]},"visibility":"public","docs":"Creates a new [`Mutex`] wrapping the supplied data.\n\n# Example\n\n```\nuse spin::Mutex;\n\nstatic MUTEX: Mutex<()> = Mutex::new(());\n\nfn demo() {\n    let lock = MUTEX.lock();\n    // do something with lock\n    drop(lock);\n}\n```","links":{"`Mutex`":189},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["value",{"generic":"T"}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"263":{"id":263,"crate_id":0,"name":"wait","span":{"filename":"src/once.rs","begin":[306,4],"end":[313,5]},"visibility":"public","docs":"Spins until the [`Once`] contains a value.\n\nNote that in releases prior to `0.7`, this function had the behaviour of [`Once::poll`].\n\n# Panics\n\nThis function will panic if the [`Once`] previously panicked while attempting\nto initialize. This is similar to the poisoning behaviour of `std::sync`'s\nprimitives.","links":{"`Once`":98,"`Once::poll`":262},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"T"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"409":{"id":409,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":25,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLockReadGuard","id":346,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[22],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"482":{"id":482,"crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[617,0],"end":[621,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'rwlock","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":96,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":96,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLockUpgradableGuard","id":337,"args":{"angle_bracketed":{"args":[{"lifetime":"'rwlock"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[481],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"47":{"id":47,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":48,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Barrier","id":2,"args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[45],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"193":{"id":193,"crate_id":0,"name":"lock","span":{"filename":"src/mutex.rs","begin":[184,4],"end":[188,5]},"visibility":"public","docs":"Locks the [`Mutex`] and returns a guard that permits access to the inner data.\n\nThe returned value may be dereferenced for data access\nand the lock will be dropped when the guard falls out of scope.\n\n```\nlet lock = spin::Mutex::new(0);\n{\n    let mut data = lock.lock();\n    // The lock is now locked and the data can be accessed\n    *data += 1;\n    // The lock is implicitly dropped at the end of the scope\n}\n```","links":{"`Mutex`":189},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"MutexGuard","id":194,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"266":{"id":266,"crate_id":0,"name":"INIT","span":{"filename":"src/once.rs","begin":[343,4],"end":[347,6]},"visibility":"public","docs":"Initialization constant of [`Once`].","links":{"`Once`":98},"attrs":["#[allow(clippy::declare_interior_mutable_const)]"],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"value":"_"}}},"339":{"id":339,"crate_id":0,"name":"try_upgrade","span":{"filename":"src/rwlock.rs","begin":[565,4],"end":[567,5]},"visibility":"public","docs":"Tries to upgrade an upgradeable lock guard to a writable lock guard.\n\n```\nlet mylock = spin::RwLock::new(0);\nlet upgradeable = mylock.upgradeable_read(); // Readable, but not yet writable\n\nmatch upgradeable.try_upgrade() {\n    Ok(writable) => /* upgrade successful - use writable lock guard */ (),\n    Err(upgradeable) => /* upgrade unsuccessful */ (),\n};\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":38,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RwLockWriteGuard","id":348,"args":{"angle_bracketed":{"args":[{"lifetime":"'rwlock"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}}},{"type":{"generic":"Self"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"412":{"id":412,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":29,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLockReadGuard","id":346,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[33],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"485":{"id":485,"crate_id":0,"name":"Target","span":{"filename":"src/rwlock.rs","begin":[733,4],"end":[733,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"generic":"T"}}}},"50":{"id":50,"crate_id":0,"name":"is_leader","span":{"filename":"src/barrier.rs","begin":[178,4],"end":[180,5]},"visibility":"public","docs":"Returns whether this thread from [`wait`] is the \"leader thread\".\n\nOnly one thread will have `true` returned from their result, all other\nthreads will have `false` returned.\n\n[`wait`]: struct.Barrier.html#method.wait\n\n# Examples\n\n```\nuse spin;\n\nlet barrier = spin::Barrier::new(1);\nlet barrier_wait_result = barrier.wait();\nprintln!(\"{:?}\", barrier_wait_result.is_leader());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"123":{"id":123,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"Spin","id":3,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":15,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"SpinMutex","id":109,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":true,"is_synthetic":true,"blanket_impl":null}}},"196":{"id":196,"crate_id":0,"name":"is_locked","span":{"filename":"src/mutex.rs","begin":[199,4],"end":[201,5]},"visibility":"public","docs":"Returns `true` if the lock is currently held.\n\n# Safety\n\nThis function provides no synchronization guarantees and so its result should be considered 'out of date'\nthe instant it is called. Do not use it for synchronization purposes. However, it may be useful as a heuristic.","links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"269":{"id":269,"crate_id":0,"name":"get_unchecked","span":{"filename":"src/once.rs","begin":[416,4],"end":[423,5]},"visibility":"public","docs":"Returns a reference to the inner value on the unchecked assumption that the  [`Once`] has been initialized.\n\n# Safety\n\nThis is *extremely* unsafe if the `Once` has not already been initialized because a reference to uninitialized\nmemory will be returned, immediately triggering undefined behaviour (even if the reference goes unused).\nHowever, this can be useful in some instances for exposing the `Once` to FFI or when the overhead of atomically\nchecking initialization is unacceptable and the `Once` has already been initialized.","links":{"`Once`":98},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"T"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":true,"is_async":false,"abi":"Rust"},"has_body":true}}},"342":{"id":342,"crate_id":0,"name":"into_inner","span":{"filename":"src/rwlock.rs","begin":[150,4],"end":[155,5]},"visibility":"public","docs":"Consumes this `RwLock`, returning the underlying data.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"T"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"415":{"id":415,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Deref","id":89,"args":{"angle_bracketed":{"args":[],"constraints":[{"name":"Target","args":{"angle_bracketed":{"args":[],"constraints":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Receiver","id":90,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLockReadGuard","id":346,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[87],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"P"}}}},"488":{"id":488,"crate_id":0,"name":"drop","span":{"filename":"src/rwlock.rs","begin":[765,4],"end":[771,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"53":{"id":53,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":13,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"BarrierWaitResult","id":5,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"126":{"id":126,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"Spin","id":3,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":21,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"SpinMutex","id":109,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":true,"is_synthetic":true,"blanket_impl":null}}},"199":{"id":199,"crate_id":0,"name":"get_mut","span":{"filename":"src/mutex.rs","begin":[250,4],"end":[252,5]},"visibility":"public","docs":"Returns a mutable reference to the underlying data.\n\nSince this call borrows the [`Mutex`] mutably, and a mutable reference is guaranteed to be exclusive in Rust,\nno actual locking needs to take place -- the mutable borrow statically guarantees no locks exist. As such,\nthis is a 'zero-cost' operation.\n\n# Example\n\n```\nlet mut lock = spin::Mutex::new(0);\n*lock.get_mut() = 10;\nassert_eq!(*lock.lock(), 10);\n```","links":{"`Mutex`":189},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"T"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"272":{"id":272,"crate_id":0,"name":"try_into_inner","span":{"filename":"src/once.rs","begin":[457,4],"end":[462,5]},"visibility":"public","docs":"Returns a the inner value if the [`Once`] has been initialized.\n\nBecause this method requires ownership of the [`Once`], no synchronization overhead\nis required to access the inner value. In effect, it is zero-cost.","links":{"`Once`":98},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Option","id":120,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"345":{"id":345,"crate_id":0,"name":"read","span":{"filename":"src/rwlock.rs","begin":[209,4],"end":[216,5]},"visibility":"public","docs":"Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.\n\nThe calling thread will be blocked until there are no more writers which\nhold the lock. There may be other readers currently inside the lock when\nthis method returns. This method does not provide any guarantees with\nrespect to the ordering of whether contentious readers or writers will\nacquire the lock first.\n\nReturns an RAII guard which will release this thread's shared access\nonce it is dropped.\n\n```\nlet mylock = spin::RwLock::new(0);\n{\n    let mut data = mylock.read();\n    // The lock is now locked and the data can be read\n    println!(\"{}\", *data);\n    // The lock is dropped\n}\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"RwLockReadGuard","id":346,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"418":{"id":418,"crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[118,0],"end":[118,64]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Sync","id":13,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":13,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLockReadGuard","id":346,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"491":{"id":491,"crate_id":0,"name":"Mutex","span":{"filename":"src/lib.rs","begin":[170,4],"end":[170,67]},"visibility":"public","docs":"A lock that provides mutually exclusive data access (compatible with [`lock_api`](https://crates.io/crates/lock_api)).","links":{},"attrs":["#[cfg(feature = \"mutex\")]"],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"lock_api_crate::Mutex","id":492,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::Mutex","id":493,"args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"constraints":[]}}}}},{"type":{"generic":"T"}}],"constraints":[]}}}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]}}}},"56":{"id":56,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":19,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"BarrierWaitResult","id":5,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"129":{"id":129,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":29,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":32,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"SpinMutex","id":109,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[30],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"202":{"id":202,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":17,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":17,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":17,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Mutex","id":189,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"275":{"id":275,"crate_id":0,"name":"is_completed","span":{"filename":"src/once.rs","begin":[485,4],"end":[488,5]},"visibility":"public","docs":"Checks whether the value has been initialized.\n\nThis is done using [`Acquire`](core::sync::atomic::Ordering::Acquire) ordering, and\ntherefore it is safe to access the value directly via\n[`get_unchecked`](Self::get_unchecked) if this returns true.","links":{"core::sync::atomic::Ordering::Acquire":274,"Self::get_unchecked":269},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"421":{"id":421,"crate_id":0,"name":"fmt","span":{"filename":"src/rwlock.rs","begin":[497,4],"end":[499,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":93,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":94,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"348":{"id":348,"crate_id":0,"name":"RwLockWriteGuard","span":{"filename":"src/rwlock.rs","begin":[91,0],"end":[95,1]},"visibility":"public","docs":"A guard that provides mutable data access.\n\nWhen the guard falls out of scope it will release the lock.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"outlives":"'a"},{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"crate::Spin","id":3,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_synthetic":false}}}],"where_predicates":[]},"impls":[434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,450,452,455,457,459]}}},"494":{"id":494,"crate_id":0,"name":"MutexGuard","span":{"filename":"src/lib.rs","begin":[175,4],"end":[175,85]},"visibility":"public","docs":"A guard that provides mutable data access (compatible with [`lock_api`](https://crates.io/crates/lock_api)).","links":{},"attrs":["#[cfg(feature = \"mutex\")]"],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"lock_api_crate::MutexGuard","id":495,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"resolved_path":{"name":"crate::Mutex","id":493,"args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"constraints":[]}}}}},{"type":{"generic":"T"}}],"constraints":[]}}}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]}}}},"59":{"id":59,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":28,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"BarrierWaitResult","id":5,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[26],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"132":{"id":132,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":29,"args":{"angle_bracketed":{"args":[{"type":{"primitive":"never"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"SpinMutex","id":109,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[131],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"205":{"id":205,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":25,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"Mutex","id":189,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[22],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"278":{"id":278,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":17,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":17,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":17,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Once","id":98,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"351":{"id":351,"crate_id":0,"name":"try_read","span":{"filename":"src/rwlock.rs","begin":[298,4],"end":[313,5]},"visibility":"public","docs":"Attempt to acquire this lock with shared read access.\n\nThis function will never block and will return immediately if `read`\nwould otherwise succeed. Returns `Some` of an RAII guard which will\nrelease the shared access of this thread when dropped, or `None` if the\naccess could not be granted. This method does not provide any\nguarantees with respect to the ordering of whether contentious readers\nor writers will acquire the lock first.\n\n```\nlet mylock = spin::RwLock::new(0);\n{\n    match mylock.try_read() {\n        Some(data) => {\n            // The lock is now locked and the data can be read\n            println!(\"{}\", *data);\n            // The lock is dropped\n        },\n        None => (), // no cigar\n    };\n}\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":120,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RwLockReadGuard","id":346,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"424":{"id":424,"crate_id":0,"name":"deref","span":{"filename":"src/rwlock.rs","begin":[726,4],"end":[729,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"T"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"62":{"id":62,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"BarrierWaitResult","id":5,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[35,37],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"135":{"id":135,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":48,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"SpinMutex","id":109,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[45],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"208":{"id":208,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":29,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"Mutex","id":189,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[33],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"281":{"id":281,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":25,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"Once","id":98,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[22],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"354":{"id":354,"crate_id":0,"name":"force_read_decrement","span":{"filename":"src/rwlock.rs","begin":[347,4],"end":[350,5]},"visibility":"public","docs":"Force decrement the reader count.\n\n# Safety\n\nThis is *extremely* unsafe if there are outstanding `RwLockReadGuard`s\nlive, or if called more times than `read` has been called, but can be\nuseful in FFI contexts where the caller doesn't know how to deal with\nRAII. The underlying atomic operation uses `Ordering::Release`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":true,"is_async":false,"abi":"Rust"},"has_body":true}}},"427":{"id":427,"crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[757,0],"end":[762,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'rwlock","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Drop","id":184,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLockReadGuard","id":346,"args":{"angle_bracketed":{"args":[{"lifetime":"'rwlock"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[426],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"65":{"id":65,"crate_id":0,"name":"barrier","span":{"filename":"src/barrier.rs","begin":[1,0],"end":[239,1]},"visibility":"public","docs":"Synchronization primitive allowing multiple threads to synchronize the\nbeginning of some computation.\n\nImplementation adapted from the 'Barrier' type of the standard library. See:\n<https://doc.rust-lang.org/std/sync/struct.Barrier.html>\n\nCopyright 2014 The Rust Project Developers. See the COPYRIGHT\nfile at the top-level directory of this distribution and at\n<http://rust-lang.org/COPYRIGHT>.\n\nLicensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n<http://www.apache.org/licenses/LICENSE-2.0>> or the MIT license\n<LICENSE-MIT or <http://opensource.org/licenses/MIT>>, at your\noption. This file may not be copied, modified, or distributed\nexcept according to those terms.","links":{},"attrs":["#[cfg(feature = \"barrier\")]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":[2,5],"is_stripped":false}}},"138":{"id":138,"crate_id":0,"name":"fmt","span":{"filename":"src/mutex/spin.rs","begin":[276,4],"end":[283,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":93,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":94,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"211":{"id":211,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":32,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"Mutex","id":189,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[41,43],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"284":{"id":284,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":29,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"Once","id":98,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[33],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"357":{"id":357,"crate_id":0,"name":"try_upgradeable_read","span":{"filename":"src/rwlock.rs","begin":[414,4],"end":[426,5]},"visibility":"public","docs":"Tries to obtain an upgradeable lock guard.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":120,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RwLockUpgradableGuard","id":337,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"503":{"id":503,"crate_id":0,"name":"RwLockUpgradableReadGuard","span":{"filename":"src/lib.rs","begin":[195,4],"end":[196,76]},"visibility":"public","docs":"A guard that provides immutable data access but can be upgraded to [`RwLockWriteGuard`] (compatible with [`lock_api`](https://crates.io/crates/lock_api)).","links":{"`RwLockWriteGuard`":501},"attrs":["#[cfg(feature = \"rwlock\")]"],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"lock_api_crate::RwLockUpgradableReadGuard","id":504,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"resolved_path":{"name":"crate::RwLock","id":498,"args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"constraints":[]}}}}},{"type":{"generic":"T"}}],"constraints":[]}}}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]}}}},"68":{"id":68,"crate_id":0,"name":"Lazy","span":{"filename":"src/lazy.rs","begin":[41,0],"end":[44,1]},"visibility":"public","docs":"A value which is initialized on the first access.\n\nThis type is a thread-safe `Lazy`, and can be used in statics.\n\n# Examples\n\n```\nuse std::collections::HashMap;\nuse spin::Lazy;\n\nstatic HASHMAP: Lazy<HashMap<i32, String>> = Lazy::new(|| {\n    println!(\"initializing\");\n    let mut m = HashMap::new();\n    m.insert(13, \"Spica\".to_string());\n    m.insert(74, \"Hoyten\".to_string());\n    m\n});\n\nfn main() {\n    println!(\"ready\");\n    std::thread::spawn(|| {\n        println!(\"{:?}\", HASHMAP.get(&13));\n    }).join().unwrap();\n    println!(\"{:?}\", HASHMAP.get(&74));\n\n    // Prints:\n    //   ready\n    //   initializing\n    //   Some(\"Spica\")\n    //   Some(\"Hoyten\")\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":{"function_pointer":{"sig":{"inputs":[],"output":{"generic":"T"},"is_c_variadic":false},"generic_params":[],"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"}}},"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"crate::Spin","id":3,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_synthetic":false}}}],"where_predicates":[]},"impls":[71,73,75,76,77,78,79,80,81,82,83,84,85,86,88,91,95,97,101,103]}}},"141":{"id":141,"crate_id":0,"name":null,"span":{"filename":"src/mutex/spin.rs","begin":[286,0],"end":[290,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Default","id":104,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":104,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"SpinMutex","id":109,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[140],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"214":{"id":214,"crate_id":0,"name":null,"span":{"filename":"src/mutex.rs","begin":[118,0],"end":[118,56]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Send","id":11,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":11,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Mutex","id":189,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"287":{"id":287,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":32,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"Once","id":98,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[41,43],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"360":{"id":360,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"Spin","id":3,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":15,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLock","id":340,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":true,"is_synthetic":true,"blanket_impl":null}}},"433":{"id":433,"crate_id":0,"name":"leak","span":{"filename":"src/rwlock.rs","begin":[704,4],"end":[708,5]},"visibility":"public","docs":"Leak the lock guard, yielding a mutable reference to the underlying data.\n\nNote that this function will permanently lock the original lock.\n\n```\nlet mylock = spin::RwLock::new(0);\n\nlet data: &mut i32 = spin::RwLockWriteGuard::leak(mylock.write());\n\n*data = 1;\nassert_eq!(*data, 1);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["this",{"generic":"Self"}]],"output":{"borrowed_ref":{"lifetime":"'rwlock","is_mutable":true,"type":{"generic":"T"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"506":{"id":506,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[93,0],"end":[93,26]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"mutex\")]"],"deprecation":null,"inner":{"use":{"source":"mutex::MutexGuard","name":"MutexGuard","id":194,"is_glob":false}}},"71":{"id":71,"crate_id":0,"name":null,"span":{"filename":"src/lazy.rs","begin":[63,0],"end":[80,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Lazy","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"F"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[69,70],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"144":{"id":144,"crate_id":0,"name":"GuardMarker","span":{"filename":"src/mutex/spin.rs","begin":[356,4],"end":[356,49]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"name":"GuardSend","id":145,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}},"217":{"id":217,"crate_id":0,"name":"default","span":{"filename":"src/mutex.rs","begin":[262,4],"end":[264,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"290":{"id":290,"crate_id":0,"name":null,"span":{"filename":"src/once.rs","begin":[34,0],"end":[38,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":104,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Once","id":98,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[289],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"363":{"id":363,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"Spin","id":3,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":21,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLock","id":340,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":true,"is_synthetic":true,"blanket_impl":null}}},"436":{"id":436,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":17,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":17,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLockWriteGuard","id":348,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"509":{"id":509,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[100,0],"end":[100,32]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"rwlock\")]"],"deprecation":null,"inner":{"use":{"source":"rwlock::RwLockReadGuard","name":"RwLockReadGuard","id":346,"is_glob":false}}},"147":{"id":147,"crate_id":0,"name":"lock","span":{"filename":"src/mutex/spin.rs","begin":[360,4],"end":[363,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"220":{"id":220,"crate_id":0,"name":null,"span":{"filename":"src/mutex.rs","begin":[267,0],"end":[271,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":29,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"Mutex","id":189,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[219],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"293":{"id":293,"crate_id":0,"name":null,"span":{"filename":"src/once.rs","begin":[53,0],"end":[53,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":11,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":13,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":13,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Once","id":98,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"366":{"id":366,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":29,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":32,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLock","id":340,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[30],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"439":{"id":439,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":25,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLockWriteGuard","id":348,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[22],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"4":{"id":4,"crate_id":0,"name":"wait","span":{"filename":"src/barrier.rs","begin":[110,4],"end":[131,5]},"visibility":"public","docs":"Blocks the current thread until all threads have rendezvoused here.\n\nBarriers are re-usable after all threads have rendezvoused once, and can\nbe used continuously.\n\nA single (arbitrary) thread will receive a [`BarrierWaitResult`] that\nreturns `true` from [`is_leader`] when returning from this function, and\nall other threads will receive a result that will return `false` from\n[`is_leader`].\n\n[`BarrierWaitResult`]: struct.BarrierWaitResult.html\n[`is_leader`]: struct.BarrierWaitResult.html#method.is_leader\n\n# Examples\n\n```\nuse spin;\nuse std::sync::Arc;\nuse std::thread;\n\nlet mut handles = Vec::with_capacity(10);\nlet barrier = Arc::new(spin::Barrier::new(10));\nfor _ in 0..10 {\n    let c = barrier.clone();\n    // The same messages will be printed together.\n    // You will NOT see any interleaving.\n    handles.push(thread::spawn(move|| {\n        println!(\"before wait\");\n        c.wait();\n        println!(\"after wait\");\n    }));\n}\n// Wait for other threads to finish.\nfor handle in handles {\n    handle.join().unwrap();\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"BarrierWaitResult","id":5,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"77":{"id":77,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":{"function_pointer":{"sig":{"inputs":[],"output":{"generic":"T"},"is_c_variadic":false},"generic_params":[],"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"}}},"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"Spin","id":3,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":15,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Lazy","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"F"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":true,"is_synthetic":true,"blanket_impl":null}}},"150":{"id":150,"crate_id":0,"name":"is_locked","span":{"filename":"src/mutex/spin.rs","begin":[374,4],"end":[376,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"223":{"id":223,"crate_id":0,"name":"lock","span":{"filename":"src/mutex.rs","begin":[323,4],"end":[326,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"296":{"id":296,"crate_id":0,"name":null,"span":{"filename":"src/once.rs","begin":[491,0],"end":[495,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":29,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"Once","id":98,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[295],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"369":{"id":369,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLock","id":340,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[35,37],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"442":{"id":442,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":29,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLockWriteGuard","id":348,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[33],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"7":{"id":7,"crate_id":0,"name":"RelaxStrategy","span":{"filename":"src/relax.rs","begin":[4,0],"end":[7,1]},"visibility":"public","docs":"A trait implemented by spinning relax strategies.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_dyn_compatible":false,"items":[300],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[302,304]}}},"80":{"id":80,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":{"function_pointer":{"sig":{"inputs":[],"output":{"generic":"T"},"is_c_variadic":false},"generic_params":[],"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"}}},"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"Spin","id":3,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":21,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Lazy","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"F"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":true,"is_synthetic":true,"blanket_impl":null}}},"512":{"id":512,"crate_id":0,"name":"Once","span":{"filename":"src/lib.rs","begin":[136,0],"end":[136,45]},"visibility":"public","docs":"A primitive that provides lazy one-time initialization. See [`once::Once`] for documentation.\n\nA note for advanced users: this alias exists to avoid subtle type inference errors due to the default relax\nstrategy type parameter. If you need a non-default relax strategy, use the fully-qualified path.","links":{"`once::Once`":98},"attrs":["#[cfg(feature = \"once\")]"],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"crate::once::Once","id":98,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":{"tuple":[]},"is_synthetic":false}}}],"where_predicates":[]}}}},"226":{"id":226,"crate_id":0,"name":"is_locked","span":{"filename":"src/mutex.rs","begin":[337,4],"end":[339,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"299":{"id":299,"crate_id":0,"name":"once","span":{"filename":"src/once.rs","begin":[1,0],"end":[789,1]},"visibility":"public","docs":"Synchronization primitives for one-time evaluation.","links":{},"attrs":["#[cfg(feature = \"once\")]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":[98],"is_stripped":false}}},"372":{"id":372,"crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[111,0],"end":[111,57]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Send","id":11,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":11,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLock","id":340,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"445":{"id":445,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Deref","id":89,"args":{"angle_bracketed":{"args":[],"constraints":[{"name":"Target","args":{"angle_bracketed":{"args":[],"constraints":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Receiver","id":90,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLockWriteGuard","id":348,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[87],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"P"}}}},"10":{"id":10,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":11,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Barrier","id":2,"args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"83":{"id":83,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":29,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":32,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"Lazy","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"F"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[30],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"156":{"id":156,"crate_id":0,"name":null,"span":{"filename":"src/mutex/spin.rs","begin":[298,0],"end":[318,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"SpinMutexGuard","id":115,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[155],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"229":{"id":229,"crate_id":0,"name":"leak","span":{"filename":"src/mutex.rs","begin":[287,4],"end":[289,5]},"visibility":"public","docs":"Leak the lock guard, yielding a mutable reference to the underlying data.\n\nNote that this function will permanently lock the original [`Mutex`].\n\n```\nlet mylock = spin::Mutex::new(0);\n\nlet data: &mut i32 = spin::MutexGuard::leak(mylock.lock());\n\n*data = 1;\nassert_eq!(*data, 1);\n```","links":{"`Mutex`":189},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["this",{"generic":"Self"}]],"output":{"borrowed_ref":{"lifetime":"'a","is_mutable":true,"type":{"generic":"T"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"302":{"id":302,"crate_id":0,"name":null,"span":{"filename":"src/relax.rs","begin":[23,0],"end":[31,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RelaxStrategy","id":7,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Spin","id":3,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[301],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"375":{"id":375,"crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[447,0],"end":[456,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":96,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":96,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLock","id":340,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[374],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"448":{"id":448,"crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[115,0],"end":[115,78]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Send","id":11,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":13,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":13,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLockWriteGuard","id":348,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"515":{"id":515,"crate_id":0,"name":"spin","span":{"filename":"src/lib.rs","begin":[1,0],"end":[221,1]},"visibility":"public","docs":"This crate provides [spin-based](https://en.wikipedia.org/wiki/Spinlock) versions of the\nprimitives in `std::sync` and `std::lazy`. Because synchronization is done through spinning,\nthe primitives are suitable for use in `no_std` environments.\n\n# Features\n\n- `Mutex`, `RwLock`, `Once`/`SyncOnceCell`, and `SyncLazy` equivalents\n\n- Support for `no_std` environments\n\n- [`lock_api`](https://crates.io/crates/lock_api) compatibility\n\n- Upgradeable `RwLock` guards\n\n- Guards can be sent and shared between threads\n\n- Guard leaking\n\n- Ticket locks\n\n- Different strategies for dealing with contention\n\n# Relationship with `std::sync`\n\nWhile `spin` is not a drop-in replacement for `std::sync` (and\n[should not be considered as such](https://matklad.github.io/2020/01/02/spinlocks-considered-harmful.html))\nan effort is made to keep this crate reasonably consistent with `std::sync`.\n\nMany of the types defined in this crate have 'additional capabilities' when compared to `std::sync`:\n\n- Because spinning does not depend on the thread-driven model of `std::sync`, guards ([`MutexGuard`],\n  [`RwLockReadGuard`], [`RwLockWriteGuard`], etc.) may be sent and shared between threads.\n\n- [`RwLockUpgradableGuard`] supports being upgraded into a [`RwLockWriteGuard`].\n\n- Guards support [leaking](https://doc.rust-lang.org/nomicon/leaking.html).\n\n- [`Once`] owns the value returned by its `call_once` initializer.\n\n- [`RwLock`] supports counting readers and writers.\n\nConversely, the types in this crate do not have some of the features `std::sync` has:\n\n- Locks do not track [panic poisoning](https://doc.rust-lang.org/nomicon/poisoning.html).\n\n## Feature flags\n\nThe crate comes with a few feature flags that you may wish to use.\n\n- `lock_api` enables support for [`lock_api`](https://crates.io/crates/lock_api)\n\n- `ticket_mutex` uses a ticket lock for the implementation of `Mutex`\n\n- `fair_mutex` enables a fairer implementation of `Mutex` that uses eventual fairness to avoid\n  starvation\n\n- `std` enables support for thread yielding instead of spinning","links":{"`MutexGuard`":194,"`RwLockWriteGuard`":513,"`RwLockReadGuard`":346,"`Once`":512,"`RwLockUpgradableGuard`":514,"`RwLock`":498},"attrs":["#![no_std]","#![deny(missing_docs)]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":[65,105,254,299,333,490,505,506,507,508,509,510,511,493,512,498,514,513],"is_stripped":false}}},"86":{"id":86,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":32,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"Lazy","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"F"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[41,43],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"159":{"id":159,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":21,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":19,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"SpinMutexGuard","id":115,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"232":{"id":232,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":13,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":13,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"MutexGuard","id":194,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"305":{"id":305,"crate_id":0,"name":"Loop","span":{"filename":"src/relax.rs","begin":[56,0],"end":[56,16]},"visibility":"public","docs":"A strategy that rapidly spins, without telling the CPU to do any powering down.\n\nYou almost certainly do not want to use this. Use [`Spin`] instead. It exists for completeness and for targets\nthat, for some reason, miscompile or do not support spin hint intrinsics despite attempting to generate code for\nthem (i.e: this is a workaround for possible compiler bugs).","links":{"`Spin`":3},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":"unit","generics":{"params":[],"where_predicates":[]},"impls":[320,321,322,323,324,325,326,327,328,329,330,331,332,304]}}},"378":{"id":378,"crate_id":0,"name":"from","span":{"filename":"src/rwlock.rs","begin":[465,4],"end":[467,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["data",{"generic":"T"}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"451":{"id":451,"crate_id":0,"name":"fmt","span":{"filename":"src/rwlock.rs","begin":[718,4],"end":[720,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":93,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":94,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"16":{"id":16,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":17,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":17,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Barrier","id":2,"args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"162":{"id":162,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":28,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"SpinMutexGuard","id":115,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[26],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"235":{"id":235,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":21,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":19,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"MutexGuard","id":194,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"308":{"id":308,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":13,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Spin","id":3,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"381":{"id":381,"crate_id":0,"name":"INIT","span":{"filename":"src/rwlock.rs","begin":[806,4],"end":[806,37]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"value":"_"}}},"454":{"id":454,"crate_id":0,"name":"deref","span":{"filename":"src/rwlock.rs","begin":[744,4],"end":[747,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"T"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"92":{"id":92,"crate_id":0,"name":"fmt","span":{"filename":"src/lazy.rs","begin":[47,4],"end":[52,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":93,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":94,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"165":{"id":165,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"SpinMutexGuard","id":115,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[35,37],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"238":{"id":238,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":28,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"MutexGuard","id":194,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[26],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"311":{"id":311,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":19,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Spin","id":3,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"384":{"id":384,"crate_id":0,"name":"unlock_exclusive","span":{"filename":"src/rwlock.rs","begin":[821,4],"end":[827,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":true,"is_async":false,"abi":"Rust"},"has_body":true}}},"457":{"id":457,"crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[750,0],"end":[755,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'rwlock","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"DerefMut","id":181,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLockWriteGuard","id":348,"args":{"angle_bracketed":{"args":[{"lifetime":"'rwlock"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[456],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"22":{"id":22,"crate_id":1,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"T"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"95":{"id":95,"crate_id":0,"name":null,"span":{"filename":"src/lazy.rs","begin":[46,0],"end":[53,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":96,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":96,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Lazy","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"F"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[92],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"168":{"id":168,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":48,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"SpinMutexGuard","id":115,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[45],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"241":{"id":241,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"MutexGuard","id":194,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[35,37],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"314":{"id":314,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":28,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"Spin","id":3,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[26],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"387":{"id":387,"crate_id":0,"name":"unlock_shared","span":{"filename":"src/rwlock.rs","begin":[842,4],"end":[847,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":true,"is_async":false,"abi":"Rust"},"has_body":true}}},"98":{"id":98,"crate_id":0,"name":"Once","span":{"filename":"src/once.rs","begin":[28,0],"end":[32,1]},"visibility":"public","docs":"A primitive that provides lazy one-time initialization.\n\nUnlike its `std::sync` equivalent, this is generalized such that the closure returns a\nvalue to be stored by the [`Once`] (`std::sync::Once` can be trivially emulated with\n`Once`).\n\nBecause [`Once::new`] is `const`, this primitive may be used to safely initialize statics.\n\n# Examples\n\n```\nuse spin;\n\nstatic START: spin::Once = spin::Once::new();\n\nSTART.call_once(|| {\n    // run initialization here\n});\n```","links":{"`Once`":98,"`Once::new`":259},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":{"tuple":[]},"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"crate::Spin","id":3,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_synthetic":false}}}],"where_predicates":[]},"impls":[265,276,277,278,279,280,281,282,283,284,285,286,287,288,290,292,293,294,296,298]}}},"171":{"id":171,"crate_id":0,"name":"fmt","span":{"filename":"src/mutex/spin.rs","begin":[321,4],"end":[323,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":93,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":94,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"244":{"id":244,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":48,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"MutexGuard","id":194,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[45],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"317":{"id":317,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"Spin","id":3,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[35,37],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"463":{"id":463,"crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[502,0],"end":[522,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'rwlock","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RelaxStrategy","id":7,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"RwLockUpgradableGuard","id":337,"args":{"angle_bracketed":{"args":[{"lifetime":"'rwlock"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[338],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"101":{"id":101,"crate_id":0,"name":null,"span":{"filename":"src/lazy.rs","begin":[105,0],"end":[111,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":74,"args":{"parenthesized":{"inputs":[],"output":{"generic":"T"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RelaxStrategy","id":7,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Deref","id":89,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Lazy","id":68,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"F"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[99,100],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"174":{"id":174,"crate_id":0,"name":null,"span":{"filename":"src/mutex/spin.rs","begin":[326,0],"end":[330,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"fmt::Display","id":175,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":175,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"SpinMutexGuard","id":115,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[173],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"247":{"id":247,"crate_id":0,"name":"fmt","span":{"filename":"src/mutex.rs","begin":[299,4],"end":[301,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":93,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":94,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"320":{"id":320,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":11,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Loop","id":305,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"393":{"id":393,"crate_id":0,"name":"unlock_upgradable","span":{"filename":"src/rwlock.rs","begin":[872,4],"end":[878,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":true,"is_async":false,"abi":"Rust"},"has_body":true}}},"466":{"id":466,"crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[524,0],"end":[615,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'rwlock","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"RwLockUpgradableGuard","id":337,"args":{"angle_bracketed":{"args":[{"lifetime":"'rwlock"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[339,464,465],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"31":{"id":31,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":29,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":32,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"Barrier","id":2,"args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[30],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"177":{"id":177,"crate_id":0,"name":"deref","span":{"filename":"src/mutex/spin.rs","begin":[334,4],"end":[337,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"T"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"250":{"id":250,"crate_id":0,"name":"deref","span":{"filename":"src/mutex.rs","begin":[306,4],"end":[308,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"T"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"323":{"id":323,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":17,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Loop","id":305,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"396":{"id":396,"crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[856,0],"end":[902,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"lock_api\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RelaxStrategy","id":7,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RawRwLockUpgrade","id":397,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLock","id":340,"args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[391,392,393,394,395],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"469":{"id":469,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"Spin","id":3,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":19,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLockUpgradableGuard","id":337,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":true,"is_synthetic":true,"blanket_impl":null}}},"34":{"id":34,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":29,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"Barrier","id":2,"args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[33],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"180":{"id":180,"crate_id":0,"name":null,"span":{"filename":"src/mutex/spin.rs","begin":[340,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"DerefMut","id":181,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"SpinMutexGuard","id":115,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[179],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"253":{"id":253,"crate_id":0,"name":null,"span":{"filename":"src/mutex.rs","begin":[311,0],"end":[315,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"DerefMut","id":181,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"MutexGuard","id":194,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[252],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"326":{"id":326,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":25,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"Loop","id":305,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[22],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"399":{"id":399,"crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[905,0],"end":[914,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"lock_api\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RelaxStrategy","id":7,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RawRwLockDowngrade","id":400,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLock","id":340,"args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[398],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"472":{"id":472,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":28,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLockUpgradableGuard","id":337,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[26],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"37":{"id":37,"crate_id":1,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":38,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"110":{"id":110,"crate_id":0,"name":"new","span":{"filename":"src/mutex/spin.rs","begin":[110,4],"end":[116,5]},"visibility":"public","docs":"Creates a new [`SpinMutex`] wrapping the supplied data.\n\n# Example\n\n```\nuse spin::mutex::SpinMutex;\n\nstatic MUTEX: SpinMutex<()> = SpinMutex::<_>::new(());\n\nfn demo() {\n    let lock = MUTEX.lock();\n    // do something with lock\n    drop(lock);\n}\n```","links":{"`SpinMutex`":109},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["data",{"generic":"T"}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"183":{"id":183,"crate_id":0,"name":null,"span":{"filename":"src/mutex/spin.rs","begin":[347,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Drop","id":184,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"SpinMutexGuard","id":115,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[182],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"329":{"id":329,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":29,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"Loop","id":305,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[33],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"475":{"id":475,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLockUpgradableGuard","id":337,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[35,37],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"113":{"id":113,"crate_id":0,"name":null,"span":{"filename":"src/mutex/spin.rs","begin":[93,0],"end":[159,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"SpinMutex","id":109,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[110,111,112],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"186":{"id":186,"crate_id":0,"name":null,"span":{"filename":"src/mutex.rs","begin":[21,21],"end":[21,30]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"spin_mutex\")]"],"deprecation":null,"inner":{"use":{"source":"self::spin::SpinMutex","name":"SpinMutex","id":109,"is_glob":false}}},"259":{"id":259,"crate_id":0,"name":"new","span":{"filename":"src/once.rs","begin":[350,4],"end":[352,5]},"visibility":"public","docs":"Creates a new [`Once`].","links":{"`Once`":98},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"332":{"id":332,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":48,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Loop","id":305,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[45],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"405":{"id":405,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":15,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLockReadGuard","id":346,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"478":{"id":478,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":48,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLockUpgradableGuard","id":337,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[45],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"43":{"id":43,"crate_id":1,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":38,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"116":{"id":116,"crate_id":0,"name":null,"span":{"filename":"src/mutex/spin.rs","begin":[161,0],"end":[196,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RelaxStrategy","id":7,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"SpinMutex","id":109,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[114],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"189":{"id":189,"crate_id":0,"name":"Mutex","span":{"filename":"src/mutex.rs","begin":[113,0],"end":[115,1]},"visibility":"public","docs":"A spin-based lock providing mutually exclusive access to data.\n\nThe implementation uses either a ticket mutex or a regular spin mutex depending on whether the `spin_mutex` or\n`ticket_mutex` feature flag is enabled.\n\n# Example\n\n```\nuse spin;\n\nlet lock = spin::Mutex::new(0);\n\n// Modify the data\n*lock.lock() = 2;\n\n// Read the data\nlet answer = *lock.lock();\nassert_eq!(answer, 2);\n```\n\n# Thread safety example\n\n```\nuse spin;\nuse std::sync::{Arc, Barrier};\n\nlet thread_count = 1000;\nlet spin_mutex = Arc::new(spin::Mutex::new(0));\n\n// We use a barrier to ensure the readout happens after all writing\nlet barrier = Arc::new(Barrier::new(thread_count + 1));\n\n# let mut ts = Vec::new();\nfor _ in (0..thread_count) {\n    let my_barrier = barrier.clone();\n    let my_lock = spin_mutex.clone();\n# let t =\n    std::thread::spawn(move || {\n        let mut guard = my_lock.lock();\n        *guard += 1;\n\n        // Release the lock to prevent a deadlock\n        drop(guard);\n        my_barrier.wait();\n    });\n# ts.push(t);\n}\n\nbarrier.wait();\n\nlet answer = { *spin_mutex.lock() };\nassert_eq!(answer, thread_count);\n\n# for t in ts {\n#     t.join().unwrap();\n# }\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"crate::Spin","id":3,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_synthetic":false}}}],"where_predicates":[]},"impls":[192,195,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,216,218,220,227]}}},"262":{"id":262,"crate_id":0,"name":"poll","span":{"filename":"src/once.rs","begin":[325,4],"end":[337,5]},"visibility":"public","docs":"Like [`Once::get`], but will spin if the [`Once`] is in the process of being\ninitialized. If initialization has not even begun, `None` will be returned.\n\nNote that in releases prior to `0.7`, this function was named `wait`.\n\n# Panics\n\nThis function will panic if the [`Once`] previously panicked while attempting\nto initialize. This is similar to the poisoning behaviour of `std::sync`'s\nprimitives.","links":{"`Once`":98,"`Once::get`":264},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":120,"args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"T"}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"408":{"id":408,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":21,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":21,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLockReadGuard","id":346,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"481":{"id":481,"crate_id":0,"name":"fmt","span":{"filename":"src/rwlock.rs","begin":[618,4],"end":[620,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":93,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":94,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"119":{"id":119,"crate_id":0,"name":"try_lock","span":{"filename":"src/mutex/spin.rs","begin":[237,4],"end":[252,5]},"visibility":"public","docs":"Try to lock this [`SpinMutex`], returning a lock guard if successful.\n\n# Example\n\n```\nlet lock = spin::mutex::SpinMutex::<_>::new(42);\n\nlet maybe_guard = lock.try_lock();\nassert!(maybe_guard.is_some());\n\n// `maybe_guard` is still held, so the second call fails\nlet maybe_guard2 = lock.try_lock();\nassert!(maybe_guard2.is_none());\n```","links":{"`SpinMutex`":109},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":120,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"SpinMutexGuard","id":115,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"192":{"id":192,"crate_id":0,"name":null,"span":{"filename":"src/mutex.rs","begin":[131,0],"end":[166,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Mutex","id":189,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[190,191],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"265":{"id":265,"crate_id":0,"name":null,"span":{"filename":"src/once.rs","begin":[133,0],"end":[338,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RelaxStrategy","id":7,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Once","id":98,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[260,261,263,262],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"411":{"id":411,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":29,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":32,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLockReadGuard","id":346,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[30],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"338":{"id":338,"crate_id":0,"name":"upgrade","span":{"filename":"src/rwlock.rs","begin":[512,4],"end":[521,5]},"visibility":"public","docs":"Upgrades an upgradeable lock guard to a writable lock guard.\n\n```\nlet mylock = spin::RwLock::new(0);\n\nlet upgradeable = mylock.upgradeable_read(); // Readable, but not yet writable\nlet writable = upgradeable.upgrade();\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"RwLockWriteGuard","id":348,"args":{"angle_bracketed":{"args":[{"lifetime":"'rwlock"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"484":{"id":484,"crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[623,0],"end":[627,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'rwlock","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"fmt::Display","id":175,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":175,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLockUpgradableGuard","id":337,"args":{"angle_bracketed":{"args":[{"lifetime":"'rwlock"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[483],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"122":{"id":122,"crate_id":0,"name":null,"span":{"filename":"src/mutex/spin.rs","begin":[198,0],"end":[273,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"SpinMutex","id":109,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[117,118,119,121],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"195":{"id":195,"crate_id":0,"name":null,"span":{"filename":"src/mutex.rs","begin":[168,0],"end":[189,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RelaxStrategy","id":7,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Mutex","id":189,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[193],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"268":{"id":268,"crate_id":0,"name":"as_mut_ptr","span":{"filename":"src/once.rs","begin":[368,4],"end":[372,5]},"visibility":"public","docs":"Retrieve a pointer to the inner data.\n\nWhile this method itself is safe, accessing the pointer before the [`Once`] has been\ninitialized is UB, unless this method has already been written to from a pointer coming\nfrom this method.","links":{"`Once`":98},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"is_mutable":true,"type":{"generic":"T"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"341":{"id":341,"crate_id":0,"name":"new","span":{"filename":"src/rwlock.rs","begin":[140,4],"end":[146,5]},"visibility":"public","docs":"Creates a new spinlock wrapping the supplied data.\n\nMay be used statically:\n\n```\nuse spin;\n\nstatic RW_LOCK: spin::RwLock<()> = spin::RwLock::new(());\n\nfn demo() {\n    let lock = RW_LOCK.read();\n    // do something with lock\n    drop(lock);\n}\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["data",{"generic":"T"}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"414":{"id":414,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":32,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLockReadGuard","id":346,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[41,43],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"487":{"id":487,"crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[732,0],"end":[739,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'rwlock","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Deref","id":89,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLockUpgradableGuard","id":337,"args":{"angle_bracketed":{"args":[{"lifetime":"'rwlock"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[485,486],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"52":{"id":52,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":11,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"BarrierWaitResult","id":5,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"125":{"id":125,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":19,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":19,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":19,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"SpinMutex","id":109,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"198":{"id":198,"crate_id":0,"name":"try_lock","span":{"filename":"src/mutex.rs","begin":[230,4],"end":[234,5]},"visibility":"public","docs":"Try to lock this [`Mutex`], returning a lock guard if successful.\n\n# Example\n\n```\nlet lock = spin::Mutex::new(42);\n\nlet maybe_guard = lock.try_lock();\nassert!(maybe_guard.is_some());\n\n// `maybe_guard` is still held, so the second call fails\nlet maybe_guard2 = lock.try_lock();\nassert!(maybe_guard2.is_none());\n```","links":{"`Mutex`":189},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":120,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"MutexGuard","id":194,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"271":{"id":271,"crate_id":0,"name":"get_mut_unchecked","span":{"filename":"src/once.rs","begin":[444,4],"end":[451,5]},"visibility":"public","docs":"Returns a mutable reference to the inner value\n\n# Safety\n\nThis is *extremely* unsafe if the `Once` has not already been initialized because a reference to uninitialized\nmemory will be returned, immediately triggering undefined behaviour (even if the reference goes unused).\nHowever, this can be useful in some instances for exposing the `Once` to FFI or when the overhead of atomically\nchecking initialization is unacceptable and the `Once` has already been initialized.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"T"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":true,"is_async":false,"abi":"Rust"},"has_body":true}}},"344":{"id":344,"crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[123,0],"end":[184,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"RwLock","id":340,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[341,342,343],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"417":{"id":417,"crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[117,0],"end":[117,64]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Sync","id":13,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":11,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLockReadGuard","id":346,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"490":{"id":490,"crate_id":0,"name":"rwlock","span":{"filename":"src/rwlock.rs","begin":[1,0],"end":[1165,1]},"visibility":"public","docs":"A lock that provides data access to either one writer or many readers.","links":{},"attrs":["#[cfg(feature = \"rwlock\")]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":[340,346,348,337],"is_stripped":false}}},"55":{"id":55,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":17,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"BarrierWaitResult","id":5,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"128":{"id":128,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":28,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"SpinMutex","id":109,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[26],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"201":{"id":201,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"Spin","id":3,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":15,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Mutex","id":189,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":true,"is_synthetic":true,"blanket_impl":null}}},"347":{"id":347,"crate_id":0,"name":"write","span":{"filename":"src/rwlock.rs","begin":[237,4],"end":[244,5]},"visibility":"public","docs":"Lock this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.\n\nThis function will not return while other writers or other readers\ncurrently have access to the lock.\n\nReturns an RAII guard which will drop the write access of this rwlock\nwhen dropped.\n\n```\nlet mylock = spin::RwLock::new(0);\n{\n    let mut data = mylock.write();\n    // The lock is now locked and the data can be written\n    *data += 1;\n    // The lock is dropped\n}\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"RwLockWriteGuard","id":348,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"420":{"id":420,"crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[490,0],"end":[494,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'rwlock","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":96,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":96,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLockReadGuard","id":346,"args":{"angle_bracketed":{"args":[{"lifetime":"'rwlock"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[419],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"493":{"id":493,"crate_id":0,"name":"Mutex","span":{"filename":"src/lib.rs","begin":[128,0],"end":[128,43]},"visibility":"public","docs":"A primitive that synchronizes the execution of multiple threads. See [`mutex::Mutex`] for documentation.\n\nA note for advanced users: this alias exists to avoid subtle type inference errors due to the default relax\nstrategy type parameter. If you need a non-default relax strategy, use the fully-qualified path.","links":{"`mutex::Mutex`":189},"attrs":["#[cfg(feature = \"mutex\")]"],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"crate::mutex::Mutex","id":189,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]}}}},"58":{"id":58,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":25,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"BarrierWaitResult","id":5,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[22],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"131":{"id":131,"crate_id":1,"name":"from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["t",{"primitive":"never"}]],"output":{"generic":"T"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"204":{"id":204,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"Spin","id":3,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":21,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Mutex","id":189,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":true,"is_synthetic":true,"blanket_impl":null}}},"277":{"id":277,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":{"tuple":[]},"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"Spin","id":3,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":15,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Once","id":98,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":true,"is_synthetic":true,"blanket_impl":null}}},"350":{"id":350,"crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[186,0],"end":[257,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RelaxStrategy","id":7,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"RwLock","id":340,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[345,347,349],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"423":{"id":423,"crate_id":0,"name":"Target","span":{"filename":"src/rwlock.rs","begin":[724,4],"end":[724,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"generic":"T"}}}},"496":{"id":496,"crate_id":0,"name":"RwLock","span":{"filename":"src/lib.rs","begin":[180,4],"end":[180,70]},"visibility":"public","docs":"A lock that provides data access to either one writer or many readers (compatible with [`lock_api`](https://crates.io/crates/lock_api)).","links":{},"attrs":["#[cfg(feature = \"rwlock\")]"],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"lock_api_crate::RwLock","id":497,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::RwLock","id":498,"args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"constraints":[]}}}}},{"type":{"generic":"T"}}],"constraints":[]}}}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]}}}},"61":{"id":61,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":29,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"BarrierWaitResult","id":5,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[33],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"134":{"id":134,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":32,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"SpinMutex","id":109,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[41,43],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"207":{"id":207,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":29,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":32,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"Mutex","id":189,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[30],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"280":{"id":280,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":{"tuple":[]},"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"Spin","id":3,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":21,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Once","id":98,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":true,"is_synthetic":true,"blanket_impl":null}}},"353":{"id":353,"crate_id":0,"name":"writer_count","span":{"filename":"src/rwlock.rs","begin":[334,4],"end":[336,5]},"visibility":"public","docs":"Return the number of writers that currently hold the lock.\n\nBecause [`RwLock`] guarantees exclusive mutable access, this function may only return either `0` or `1`.\n\n# Safety\n\nThis function provides no synchronization guarantees and so its result should be considered 'out of date'\nthe instant it is called. Do not use it for synchronization purposes. However, it may be useful as a heuristic.","links":{"`RwLock`":340},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"426":{"id":426,"crate_id":0,"name":"drop","span":{"filename":"src/rwlock.rs","begin":[758,4],"end":[761,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"499":{"id":499,"crate_id":0,"name":"RwLockReadGuard","span":{"filename":"src/lib.rs","begin":[185,4],"end":[185,96]},"visibility":"public","docs":"A guard that provides immutable data access (compatible with [`lock_api`](https://crates.io/crates/lock_api)).","links":{},"attrs":["#[cfg(feature = \"rwlock\")]"],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"lock_api_crate::RwLockReadGuard","id":500,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"resolved_path":{"name":"crate::RwLock","id":498,"args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"constraints":[]}}}}},{"type":{"generic":"T"}}],"constraints":[]}}}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]}}}},"64":{"id":64,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":48,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"BarrierWaitResult","id":5,"args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[45],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"137":{"id":137,"crate_id":0,"name":null,"span":{"filename":"src/mutex/spin.rs","begin":[88,0],"end":[88,60]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Send","id":11,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":11,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"SpinMutex","id":109,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"210":{"id":210,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"Mutex","id":189,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[35,37],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"283":{"id":283,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":29,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":32,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"Once","id":98,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[30],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"356":{"id":356,"crate_id":0,"name":"try_write","span":{"filename":"src/rwlock.rs","begin":[408,4],"end":[410,5]},"visibility":"public","docs":"Attempt to lock this rwlock with exclusive write access.\n\nThis function does not ever block, and it will return `None` if a call\nto `write` would otherwise block. If successful, an RAII guard is\nreturned.\n\n```\nlet mylock = spin::RwLock::new(0);\n{\n    match mylock.try_write() {\n        Some(mut data) => {\n            // The lock is now locked and the data can be written\n            *data += 1;\n            // The lock is implicitly dropped\n        },\n        None => (), // no cigar\n    };\n}\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":120,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RwLockWriteGuard","id":348,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"140":{"id":140,"crate_id":0,"name":"default","span":{"filename":"src/mutex/spin.rs","begin":[287,4],"end":[289,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"213":{"id":213,"crate_id":0,"name":null,"span":{"filename":"src/mutex.rs","begin":[117,0],"end":[117,56]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Send","id":11,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":13,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Mutex","id":189,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"286":{"id":286,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"Once","id":98,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[35,37],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"359":{"id":359,"crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[259,0],"end":[445,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"RwLock","id":340,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[351,352,353,354,355,356,357,358],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"432":{"id":432,"crate_id":0,"name":"downgrade_to_upgradeable","span":{"filename":"src/rwlock.rs","begin":[670,4],"end":[689,5]},"visibility":"public","docs":"Downgrades the writable lock guard to an upgradable, shared lock guard. Cannot fail and is guaranteed not to spin.\n\n```\nlet mylock = spin::RwLock::new(0);\n\nlet mut writable = mylock.write();\n*writable = 1;\n\nlet readable = writable.downgrade_to_upgradeable(); // This is guaranteed not to spin\nassert_eq!(*readable, 1);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"RwLockUpgradableGuard","id":337,"args":{"angle_bracketed":{"args":[{"lifetime":"'rwlock"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"505":{"id":505,"crate_id":0,"name":"lock_api","span":{"filename":"src/lib.rs","begin":[166,0],"end":[166,16]},"visibility":"public","docs":"Spin synchronisation primitives, but compatible with [`lock_api`](https://crates.io/crates/lock_api).","links":{},"attrs":["#[cfg(feature = \"lock_api\")]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":[491,494,496,499,501,503],"is_stripped":false}}},"70":{"id":70,"crate_id":0,"name":"as_mut_ptr","span":{"filename":"src/lazy.rs","begin":[77,4],"end":[79,5]},"visibility":"public","docs":"Retrieves a mutable pointer to the inner data.\n\nThis is especially useful when interfacing with low level code or FFI where the caller\nexplicitly knows that it has exclusive access to the inner data. Note that reading from\nthis pointer is UB until initialized or directly written to.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"is_mutable":true,"type":{"generic":"T"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"143":{"id":143,"crate_id":0,"name":null,"span":{"filename":"src/mutex/spin.rs","begin":[292,0],"end":[296,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":29,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"SpinMutex","id":109,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[142],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"216":{"id":216,"crate_id":0,"name":null,"span":{"filename":"src/mutex.rs","begin":[255,0],"end":[259,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":96,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":96,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Mutex","id":189,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[215],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"289":{"id":289,"crate_id":0,"name":"default","span":{"filename":"src/once.rs","begin":[35,4],"end":[37,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"362":{"id":362,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":19,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":19,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":19,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLock","id":340,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"435":{"id":435,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":24,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":15,"args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"RwLockWriteGuard","id":348,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"508":{"id":508,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[97,31],"end":[97,35]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"use":{"source":"relax::Spin","name":"Spin","id":3,"is_glob":false}}}},"paths":{"1162":{"crate_id":1,"path":["core","ptr","drop_in_place"],"kind":"function"},"511":{"crate_id":0,"path":["spin","Lazy"],"kind":"type_alias"},"584":{"crate_id":1,"path":["core","panic","location","Location"],"kind":"struct"},"657":{"crate_id":1,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"730":{"crate_id":1,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"803":{"crate_id":1,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"876":{"crate_id":1,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"949":{"crate_id":1,"path":["core","alloc","AllocError"],"kind":"struct"},"1022":{"crate_id":1,"path":["core","slice","iter","Windows"],"kind":"struct"},"1095":{"crate_id":1,"path":["core","error","Source"],"kind":"struct"},"1168":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroU64Inner"],"kind":"struct"},"152":{"crate_id":4,"path":["lock_api","mutex","RawMutex"],"kind":"trait"},"517":{"crate_id":1,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"590":{"crate_id":2,"path":["compiler_builtins"],"kind":"module"},"663":{"crate_id":1,"path":["core","iter","adapters","zip","TrustedRandomAccess"],"kind":"trait"},"736":{"crate_id":1,"path":["core","core_arch","simd","f16x8"],"kind":"struct"},"809":{"crate_id":1,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"882":{"crate_id":1,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"955":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1028":{"crate_id":1,"path":["core","marker","Tuple"],"kind":"trait"},"1101":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum"],"kind":"enum"},"1174":{"crate_id":1,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"523":{"crate_id":1,"path":["core","hash","Hash"],"kind":"trait"},"596":{"crate_id":1,"path":["core","str","iter","RSplit"],"kind":"struct"},"669":{"crate_id":1,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"742":{"crate_id":1,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"815":{"crate_id":1,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"888":{"crate_id":1,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"961":{"crate_id":1,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"1034":{"crate_id":4,"path":["lock_api","mutex","RawMutexFair"],"kind":"trait"},"1107":{"crate_id":1,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"1180":{"crate_id":1,"path":["core","range","RangeFrom"],"kind":"struct"},"529":{"crate_id":1,"path":["core","fmt","Octal"],"kind":"trait"},"602":{"crate_id":1,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"675":{"crate_id":1,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"748":{"crate_id":1,"path":["core","future","async_drop","Fuse"],"kind":"struct"},"821":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"894":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"967":{"crate_id":1,"path":["core","fmt","Arguments"],"kind":"struct"},"1040":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroU32Inner"],"kind":"struct"},"1113":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"24":{"crate_id":1,"path":["core","marker","Sized"],"kind":"trait"},"1186":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"535":{"crate_id":1,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"608":{"crate_id":4,"path":["lock_api","rwlock","RawRwLockRecursive"],"kind":"trait"},"681":{"crate_id":1,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"754":{"crate_id":1,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"827":{"crate_id":1,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"900":{"crate_id":1,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"973":{"crate_id":1,"path":["core","future","future","Future"],"kind":"trait"},"1046":{"crate_id":1,"path":["core","intrinsics","AggregateRawPtr"],"kind":"trait"},"1119":{"crate_id":4,"path":["lock_api","remutex","GetThreadId"],"kind":"trait"},"1192":{"crate_id":1,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"541":{"crate_id":1,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"614":{"crate_id":1,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"687":{"crate_id":1,"path":["core","hash","sip","Hasher"],"kind":"struct"},"760":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroU8Inner"],"kind":"struct"},"833":{"crate_id":1,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"906":{"crate_id":1,"path":["core","core_arch","simd","m32x8"],"kind":"struct"},"979":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1052":{"crate_id":1,"path":["core","ops","bit","Not"],"kind":"trait"},"36":{"crate_id":1,"path":["core","convert","TryFrom"],"kind":"trait"},"109":{"crate_id":0,"path":["spin","mutex","spin","SpinMutex"],"kind":"struct"},"1125":{"crate_id":1,"path":["core","never"],"kind":"primitive"},"1198":{"crate_id":1,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"547":{"crate_id":1,"path":["core","str","lossy","Debug"],"kind":"struct"},"620":{"crate_id":1,"path":["core","fmt","rt","Flag"],"kind":"enum"},"693":{"crate_id":4,"path":["lock_api","mutex","RawMutexTimed"],"kind":"trait"},"766":{"crate_id":1,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"839":{"crate_id":1,"path":["core","result","IntoIter"],"kind":"struct"},"912":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"985":{"crate_id":1,"path":["core","str","iter","LinesAny"],"kind":"struct"},"1058":{"crate_id":1,"path":["core","isize"],"kind":"primitive"},"42":{"crate_id":1,"path":["core","convert","Infallible"],"kind":"enum"},"115":{"crate_id":0,"path":["spin","mutex","spin","SpinMutexGuard"],"kind":"struct"},"1131":{"crate_id":1,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"1204":{"crate_id":1,"path":["core","char","EscapeUnicode"],"kind":"struct"},"553":{"crate_id":1,"path":["core","cell","Cell"],"kind":"struct"},"626":{"crate_id":4,"path":["lock_api","rwlock","RawRwLockUpgradeFair"],"kind":"trait"},"699":{"crate_id":1,"path":["core","fn"],"kind":"primitive"},"772":{"crate_id":1,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"845":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroIsizeInner"],"kind":"struct"},"918":{"crate_id":1,"path":["core","slice","sort","stable","drift","DriftsortRun"],"kind":"struct"},"991":{"crate_id":1,"path":["core","core_simd","simd","num","int","SimdInt"],"kind":"trait"},"1064":{"crate_id":1,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"48":{"crate_id":1,"path":["core","any","Any"],"kind":"trait"},"1137":{"crate_id":1,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_exposed_provenance"],"kind":"function"},"194":{"crate_id":0,"path":["spin","mutex","MutexGuard"],"kind":"struct"},"340":{"crate_id":0,"path":["spin","rwlock","RwLock"],"kind":"struct"},"1210":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"559":{"crate_id":4,"path":["lock_api","rwlock","MappedRwLockWriteGuard"],"kind":"struct"},"632":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"705":{"crate_id":1,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"778":{"crate_id":1,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"851":{"crate_id":1,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"924":{"crate_id":1,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"997":{"crate_id":1,"path":["core","num","fmt","Formatted"],"kind":"struct"},"1070":{"crate_id":1,"path":["core","char","ToLowercase"],"kind":"struct"},"1143":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroI32Inner"],"kind":"struct"},"346":{"crate_id":0,"path":["spin","rwlock","RwLockReadGuard"],"kind":"struct"},"492":{"crate_id":4,"path":["lock_api","mutex","Mutex"],"kind":"struct"},"565":{"crate_id":1,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"638":{"crate_id":4,"path":["lock_api","rwlock","RawRwLockUpgradeTimed"],"kind":"trait"},"711":{"crate_id":4,"path":["lock_api","rwlock","RawRwLockTimed"],"kind":"trait"},"784":{"crate_id":1,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"857":{"crate_id":1,"path":["core","marker","PhantomPinned"],"kind":"struct"},"930":{"crate_id":1,"path":["core","task","wake","Context"],"kind":"struct"},"1003":{"crate_id":1,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"1076":{"crate_id":1,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"1149":{"crate_id":1,"path":["core","f32"],"kind":"primitive"},"498":{"crate_id":0,"path":["spin","RwLock"],"kind":"type_alias"},"571":{"crate_id":1,"path":["core","ops","range","RangeFull"],"kind":"struct"},"644":{"crate_id":1,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"717":{"crate_id":1,"path":["core","error","tags","Value"],"kind":"struct"},"790":{"crate_id":1,"path":["core","error","Error"],"kind":"trait"},"863":{"crate_id":1,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"936":{"crate_id":1,"path":["core","core_simd","swizzle","resize","Resize"],"kind":"struct"},"1009":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroI16Inner"],"kind":"struct"},"1082":{"crate_id":1,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"1155":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"504":{"crate_id":4,"path":["lock_api","rwlock","RwLockUpgradableReadGuard"],"kind":"struct"},"577":{"crate_id":1,"path":["core","u64"],"kind":"primitive"},"650":{"crate_id":1,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"723":{"crate_id":1,"path":["core","ops","async_function","AsyncFn"],"kind":"trait"},"796":{"crate_id":1,"path":["core","cmp","PartialEq"],"kind":"trait"},"869":{"crate_id":1,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"942":{"crate_id":1,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"1015":{"crate_id":1,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"1088":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1161":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"145":{"crate_id":4,"path":["lock_api","GuardSend"],"kind":"struct"},"510":{"crate_id":0,"path":["spin","Barrier"],"kind":"type_alias"},"583":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroI64Inner"],"kind":"struct"},"656":{"crate_id":1,"path":["core","num","nonzero","NonZero"],"kind":"struct"},"729":{"crate_id":1,"path":["core","core_arch","simd","u16x64"],"kind":"struct"},"802":{"crate_id":1,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"875":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroI8Inner"],"kind":"struct"},"948":{"crate_id":1,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"1021":{"crate_id":1,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"1094":{"crate_id":1,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"5":{"crate_id":0,"path":["spin","barrier","BarrierWaitResult"],"kind":"struct"},"1167":{"crate_id":1,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"516":{"crate_id":1,"path":["core","convert","AsRef"],"kind":"trait"},"589":{"crate_id":1,"path":["core","write"],"kind":"macro"},"662":{"crate_id":1,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"735":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"808":{"crate_id":1,"path":["core","core_arch","simd","u32x32"],"kind":"struct"},"881":{"crate_id":1,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr","with_exposed_provenance"],"kind":"function"},"954":{"crate_id":1,"path":["core","ptr","with_exposed_provenance"],"kind":"function"},"1027":{"crate_id":1,"path":["core","ffi","c_str","Bytes"],"kind":"struct"},"11":{"crate_id":1,"path":["core","marker","Send"],"kind":"trait"},"1100":{"crate_id":1,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"1173":{"crate_id":1,"path":["core","str","error","Utf8Error"],"kind":"struct"},"522":{"crate_id":1,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"595":{"crate_id":1,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"668":{"crate_id":1,"path":["core","char","ToUppercase"],"kind":"struct"},"741":{"crate_id":1,"path":["core","clone","CloneToUninit"],"kind":"trait"},"814":{"crate_id":4,"path":["lock_api","rwlock","RawRwLockFair"],"kind":"trait"},"887":{"crate_id":1,"path":["core","unit"],"kind":"primitive"},"960":{"crate_id":4,"path":["lock_api","rwlock","RawRwLockRecursiveTimed"],"kind":"trait"},"1033":{"crate_id":1,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"17":{"crate_id":1,"path":["core","marker","Unpin"],"kind":"trait"},"90":{"crate_id":1,"path":["core","ops","deref","Receiver"],"kind":"trait"},"1106":{"crate_id":1,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"1179":{"crate_id":1,"path":["core","range","iter","IterRangeInclusive"],"kind":"struct"},"528":{"crate_id":1,"path":["core","bool"],"kind":"primitive"},"601":{"crate_id":1,"path":["core","task","wake","RawWaker"],"kind":"struct"},"674":{"crate_id":1,"path":["core","ops","bit","Shl"],"kind":"trait"},"747":{"crate_id":1,"path":["core","core_simd","to_bytes","sealed","Sealed"],"kind":"trait"},"820":{"crate_id":1,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"893":{"crate_id":1,"path":["core","str","iter","Matches"],"kind":"struct"},"966":{"crate_id":1,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"1039":{"crate_id":1,"path":["core","net","parser","AddrKind"],"kind":"enum"},"1112":{"crate_id":5,"path":["scopeguard","Always"],"kind":"enum"},"96":{"crate_id":1,"path":["core","fmt","Debug"],"kind":"trait"},"1185":{"crate_id":1,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"534":{"crate_id":1,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"607":{"crate_id":1,"path":["core","num","fmt","Part"],"kind":"enum"},"680":{"crate_id":1,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"753":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"826":{"crate_id":1,"path":["core","ffi","va_list","VaList"],"kind":"struct"},"899":{"crate_id":1,"path":["core","marker","FnPtr"],"kind":"trait"},"972":{"crate_id":1,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"1045":{"crate_id":1,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"29":{"crate_id":1,"path":["core","convert","From"],"kind":"trait"},"1118":{"crate_id":4,"path":["lock_api","GuardNoSend"],"kind":"struct"},"175":{"crate_id":1,"path":["core","fmt","Display"],"kind":"trait"},"1191":{"crate_id":1,"path":["core","clone","Clone"],"kind":"trait"},"540":{"crate_id":1,"path":["core","fmt","UpperHex"],"kind":"trait"},"613":{"crate_id":1,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"686":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"759":{"crate_id":1,"path":["core","ops","function","Fn"],"kind":"trait"},"832":{"crate_id":1,"path":["core","future","async_drop","AsyncDropInPlace"],"kind":"struct"},"905":{"crate_id":1,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"978":{"crate_id":1,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"1051":{"crate_id":1,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"1124":{"crate_id":1,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"1197":{"crate_id":1,"path":["core","ops","async_function","AsyncFnOnce"],"kind":"trait"},"181":{"crate_id":1,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"254":{"crate_id":0,"path":["spin","mutex"],"kind":"module"},"400":{"crate_id":4,"path":["lock_api","rwlock","RawRwLockDowngrade"],"kind":"trait"},"546":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"619":{"crate_id":1,"path":["core","ops","deref","DerefPure"],"kind":"trait"},"692":{"crate_id":1,"path":["core","slice","iter","Chunks"],"kind":"struct"},"765":{"crate_id":1,"path":["core","ptr","metadata","Thin"],"kind":"trait_alias"},"838":{"crate_id":1,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"911":{"crate_id":1,"path":["core"],"kind":"module"},"984":{"crate_id":1,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"1057":{"crate_id":4,"path":["lock_api","remutex","MappedReentrantMutexGuard"],"kind":"struct"},"1130":{"crate_id":1,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"1203":{"crate_id":1,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"333":{"crate_id":0,"path":["spin","relax"],"kind":"module"},"552":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"625":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"698":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"771":{"crate_id":1,"path":["core","cell","lazy","force_mut","really_init_mut","PoisonOnPanic"],"kind":"struct"},"844":{"crate_id":2,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"917":{"crate_id":1,"path":["core","f128"],"kind":"primitive"},"990":{"crate_id":1,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"1063":{"crate_id":1,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"1136":{"crate_id":1,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"120":{"crate_id":1,"path":["core","option","Option"],"kind":"enum"},"1209":{"crate_id":1,"path":["core","range","iter","IterRangeFrom"],"kind":"struct"},"558":{"crate_id":1,"path":["core","fmt","UpperExp"],"kind":"trait"},"631":{"crate_id":1,"path":["core","random","Random"],"kind":"trait"},"704":{"crate_id":1,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"777":{"crate_id":1,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"850":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"923":{"crate_id":1,"path":["core","str","iter","RMatches"],"kind":"struct"},"996":{"crate_id":1,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"1069":{"crate_id":1,"path":["core","ops","async_function","AsyncFnMut"],"kind":"trait"},"1142":{"crate_id":1,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"1215":{"crate_id":1,"path":["core","slice","GetManyMutIndex"],"kind":"trait"},"491":{"crate_id":0,"path":["spin","lock_api","Mutex"],"kind":"type_alias"},"564":{"crate_id":1,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"637":{"crate_id":1,"path":["core","panic","panic_info","PanicMessage"],"kind":"struct"},"710":{"crate_id":1,"path":["core","core_arch","x86","__m128h"],"kind":"struct"},"783":{"crate_id":1,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"856":{"crate_id":1,"path":["core","core_arch","simd","f16x32"],"kind":"struct"},"929":{"crate_id":1,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"1002":{"crate_id":1,"path":["core","char"],"kind":"primitive"},"1075":{"crate_id":1,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"1148":{"crate_id":1,"path":["core","panic"],"kind":"macro"},"570":{"crate_id":1,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"643":{"crate_id":1,"path":["core","cmp","Ordering"],"kind":"enum"},"716":{"crate_id":1,"path":["core","fmt"],"kind":"module"},"497":{"crate_id":4,"path":["lock_api","rwlock","RwLock"],"kind":"struct"},"789":{"crate_id":1,"path":["core","future","pending","Pending"],"kind":"struct"},"862":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"935":{"crate_id":1,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"1008":{"crate_id":1,"path":["core","hash","Hasher"],"kind":"trait"},"1081":{"crate_id":1,"path":["core","task","wake","Waker"],"kind":"struct"},"65":{"crate_id":0,"path":["spin","barrier"],"kind":"module"},"1154":{"crate_id":1,"path":["core","cell","Ref"],"kind":"struct"},"503":{"crate_id":0,"path":["spin","lock_api","RwLockUpgradableReadGuard"],"kind":"type_alias"},"576":{"crate_id":1,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"649":{"crate_id":1,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"722":{"crate_id":1,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"795":{"crate_id":1,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"868":{"crate_id":1,"path":["core","ffi","va_list","sealed_trait","VaArgSafe"],"kind":"trait"},"941":{"crate_id":1,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"1014":{"crate_id":1,"path":["core","fmt","Pointer"],"kind":"trait"},"1087":{"crate_id":1,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"1160":{"crate_id":1,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"582":{"crate_id":1,"path":["core","cell","UnsafeCell"],"kind":"struct"},"655":{"crate_id":1,"path":["core","task","wake","LocalWaker"],"kind":"struct"},"728":{"crate_id":1,"path":["core","array","iter","IntoIter"],"kind":"struct"},"801":{"crate_id":1,"path":["core","u16"],"kind":"primitive"},"874":{"crate_id":1,"path":["core","array","Guard"],"kind":"struct"},"947":{"crate_id":4,"path":["lock_api","remutex","fmt","LockedPlaceholder"],"kind":"struct"},"1020":{"crate_id":1,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"1093":{"crate_id":1,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"1166":{"crate_id":1,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"515":{"crate_id":0,"path":["spin"],"kind":"module"},"588":{"crate_id":1,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"661":{"crate_id":1,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"734":{"crate_id":1,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"807":{"crate_id":1,"path":["core","marker","UnsizedConstParamTy"],"kind":"trait"},"880":{"crate_id":1,"path":["core","iter","sources","once","once"],"kind":"function"},"953":{"crate_id":1,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"1026":{"crate_id":1,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"1099":{"crate_id":1,"path":["core","str","pattern","Pattern"],"kind":"trait"},"1172":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"521":{"crate_id":1,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"594":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"667":{"crate_id":1,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"740":{"crate_id":1,"path":["core","slice","sort","unstable","quicksort","GapGuardRaw"],"kind":"struct"},"813":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"886":{"crate_id":1,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"959":{"crate_id":1,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"1032":{"crate_id":1,"path":["core","cmp","Reverse"],"kind":"struct"},"1105":{"crate_id":1,"path":["core","ops","bit","Shr"],"kind":"trait"},"89":{"crate_id":1,"path":["core","ops","deref","Deref"],"kind":"trait"},"1178":{"crate_id":1,"path":["core","hash","BuildHasher"],"kind":"trait"},"527":{"crate_id":1,"path":["core","iter","sources","once","Once"],"kind":"struct"},"600":{"crate_id":1,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"673":{"crate_id":1,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"746":{"crate_id":1,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"819":{"crate_id":1,"path":["core","core_simd","simd","num","uint","SimdUint"],"kind":"trait"},"892":{"crate_id":1,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"965":{"crate_id":1,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"1038":{"crate_id":1,"path":["core","char","TryFromCharError"],"kind":"struct"},"1111":{"crate_id":1,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"1184":{"crate_id":1,"path":["core","fmt","num","Binary"],"kind":"struct"},"533":{"crate_id":1,"path":["core","ops","range","RangeTo"],"kind":"struct"},"606":{"crate_id":1,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"679":{"crate_id":1,"path":["core","str","traits","FromStr"],"kind":"trait"},"752":{"crate_id":1,"path":["core","str","LinesMap"],"kind":"struct"},"825":{"crate_id":1,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"898":{"crate_id":1,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"971":{"crate_id":1,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"1044":{"crate_id":1,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"1117":{"crate_id":1,"path":["core","task","wake","ContextBuilder"],"kind":"struct"},"28":{"crate_id":1,"path":["core","borrow","BorrowMut"],"kind":"trait"},"1190":{"crate_id":1,"path":["core","ops","arith","Div"],"kind":"trait"},"539":{"crate_id":1,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"612":{"crate_id":1,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"685":{"crate_id":1,"path":["core","slice","GetManyMutError"],"kind":"struct"},"758":{"crate_id":1,"path":["core","core_arch","x86","__m512h"],"kind":"struct"},"831":{"crate_id":1,"path":["core","num","nonzero","private","Sealed"],"kind":"trait"},"904":{"crate_id":1,"path":["core","cell","BorrowRef"],"kind":"struct"},"977":{"crate_id":1,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"1050":{"crate_id":1,"path":["core","i128"],"kind":"primitive"},"1123":{"crate_id":1,"path":["core","ops","index","Index"],"kind":"trait"},"1196":{"crate_id":1,"path":["core","str","iter","SplitN"],"kind":"struct"},"545":{"crate_id":1,"path":["core","array"],"kind":"primitive"},"618":{"crate_id":4,"path":["lock_api","remutex","ReentrantMutex"],"kind":"struct"},"691":{"crate_id":1,"path":["core","future","async_drop","AsyncDropOwning"],"kind":"struct"},"764":{"crate_id":1,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"837":{"crate_id":1,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"910":{"crate_id":1,"path":["core","marker","PointerLike"],"kind":"trait"},"983":{"crate_id":1,"path":["core","char","EscapeDefault"],"kind":"struct"},"1056":{"crate_id":1,"path":["core","slice","sort","stable","merge","MergeState"],"kind":"struct"},"1129":{"crate_id":1,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"40":{"crate_id":1,"path":["core","convert","TryInto"],"kind":"trait"},"1202":{"crate_id":1,"path":["core","slice","private_get_many_mut_index","Sealed"],"kind":"trait"},"551":{"crate_id":1,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"624":{"crate_id":1,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"697":{"crate_id":2,"path":["compiler_builtins","int","big","u256"],"kind":"struct"},"770":{"crate_id":1,"path":["core","fmt","LowerHex"],"kind":"trait"},"843":{"crate_id":1,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"916":{"crate_id":1,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"989":{"crate_id":1,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"1062":{"crate_id":1,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"1135":{"crate_id":1,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"46":{"crate_id":1,"path":["core","any","TypeId"],"kind":"struct"},"1208":{"crate_id":1,"path":["core","core_arch","simd","m16x16"],"kind":"struct"},"557":{"crate_id":1,"path":["core","option","IntoIter"],"kind":"struct"},"630":{"crate_id":1,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"703":{"crate_id":1,"path":["core","alloc","Allocator"],"kind":"trait"},"776":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"849":{"crate_id":1,"path":["core","future","async_drop","Noop"],"kind":"struct"},"922":{"crate_id":1,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"995":{"crate_id":1,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"1068":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1141":{"crate_id":1,"path":["core","fmt","Alignment"],"kind":"enum"},"1214":{"crate_id":1,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"490":{"crate_id":0,"path":["spin","rwlock"],"kind":"module"},"563":{"crate_id":1,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"636":{"crate_id":1,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"709":{"crate_id":1,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"782":{"crate_id":4,"path":["lock_api","remutex","RawReentrantMutex"],"kind":"struct"},"855":{"crate_id":1,"path":["core","random","RandomSource"],"kind":"trait"},"928":{"crate_id":1,"path":["core","slice","SlicePattern"],"kind":"trait"},"1001":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1074":{"crate_id":1,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"1147":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"496":{"crate_id":0,"path":["spin","lock_api","RwLock"],"kind":"type_alias"},"569":{"crate_id":1,"path":["core","cell","BorrowMutError"],"kind":"struct"},"642":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"715":{"crate_id":1,"path":["core","array","TryFromSliceError"],"kind":"struct"},"788":{"crate_id":1,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"861":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"934":{"crate_id":1,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"1007":{"crate_id":1,"path":["core","fmt","Binary"],"kind":"trait"},"1080":{"crate_id":1,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"1153":{"crate_id":1,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"502":{"crate_id":4,"path":["lock_api","rwlock","RwLockWriteGuard"],"kind":"struct"},"575":{"crate_id":1,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"648":{"crate_id":1,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"721":{"crate_id":1,"path":["core","mem","Discriminant"],"kind":"struct"},"794":{"crate_id":1,"path":["core","range","RangeInclusive"],"kind":"struct"},"867":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"940":{"crate_id":1,"path":["core","marker","Unsize"],"kind":"trait"},"1013":{"crate_id":1,"path":["core","str"],"kind":"primitive"},"1086":{"crate_id":1,"path":["core","ops","arith","Mul"],"kind":"trait"},"1159":{"crate_id":1,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"581":{"crate_id":1,"path":["core","ops","bit","BitOr"],"kind":"trait"},"654":{"crate_id":1,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"727":{"crate_id":1,"path":["core","ptr","with_exposed_provenance_mut"],"kind":"function"},"800":{"crate_id":1,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"873":{"crate_id":1,"path":["core","fmt","rt","ArgumentType"],"kind":"enum"},"946":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1019":{"crate_id":1,"path":["core","str","IsWhitespace"],"kind":"struct"},"1092":{"crate_id":1,"path":["core","num","diy_float","Fp"],"kind":"struct"},"3":{"crate_id":0,"path":["spin","relax","Spin"],"kind":"struct"},"1165":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"514":{"crate_id":0,"path":["spin","RwLockUpgradableGuard"],"kind":"type_alias"},"587":{"crate_id":1,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"660":{"crate_id":1,"path":["core","ptr","metadata","metadata"],"kind":"function"},"733":{"crate_id":1,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"806":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"879":{"crate_id":1,"path":["core","convert","AsMut"],"kind":"trait"},"952":{"crate_id":1,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"1025":{"crate_id":1,"path":["core","ops","arith","Add"],"kind":"trait"},"1098":{"crate_id":1,"path":["core","core_simd","simd","cmp","ord","SimdPartialOrd"],"kind":"trait"},"1171":{"crate_id":1,"path":["core","error","private","Internal"],"kind":"struct"},"520":{"crate_id":1,"path":["core","str","iter","RSplitN"],"kind":"struct"},"593":{"crate_id":1,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"666":{"crate_id":1,"path":["core","pointer"],"kind":"primitive"},"739":{"crate_id":1,"path":["core","core_arch","x86","__m256h"],"kind":"struct"},"812":{"crate_id":1,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"885":{"crate_id":1,"path":["core","range","iter","IterRange"],"kind":"struct"},"958":{"crate_id":1,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"1031":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1104":{"crate_id":1,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"15":{"crate_id":1,"path":["core","marker","Freeze"],"kind":"trait"},"1177":{"crate_id":1,"path":["core","pin","PinCoerceUnsized"],"kind":"trait"},"526":{"crate_id":1,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"599":{"crate_id":1,"path":["core","ops","arith","Rem"],"kind":"trait"},"672":{"crate_id":1,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"745":{"crate_id":1,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"818":{"crate_id":1,"path":["core","time","Nanoseconds"],"kind":"struct"},"891":{"crate_id":1,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"964":{"crate_id":1,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"1037":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1110":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"21":{"crate_id":1,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"94":{"crate_id":1,"path":["core","fmt","Result"],"kind":"type_alias"},"1183":{"crate_id":1,"path":["core","io","borrowed_buf","BorrowedBuf"],"kind":"struct"},"532":{"crate_id":4,"path":["lock_api","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"605":{"crate_id":1,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"678":{"crate_id":1,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"751":{"crate_id":1,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"824":{"crate_id":1,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"897":{"crate_id":1,"path":["core","slice","iter","Iter"],"kind":"struct"},"970":{"crate_id":1,"path":["core","ops","try_trait","Try"],"kind":"trait"},"1043":{"crate_id":1,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"1116":{"crate_id":1,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"1189":{"crate_id":1,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"538":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"611":{"crate_id":1,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"684":{"crate_id":1,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"757":{"crate_id":1,"path":["core","char","EscapeDebug"],"kind":"struct"},"830":{"crate_id":1,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"903":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroU16Inner"],"kind":"struct"},"976":{"crate_id":4,"path":["lock_api","rwlock","RawRwLockUpgradeDowngrade"],"kind":"trait"},"1049":{"crate_id":1,"path":["core","asserting","Capture"],"kind":"struct"},"1122":{"crate_id":1,"path":["core","str","pattern","Searcher"],"kind":"trait"},"1195":{"crate_id":1,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"544":{"crate_id":1,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"617":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_elements_left","Rotate"],"kind":"struct"},"690":{"crate_id":1,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"763":{"crate_id":1,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"836":{"crate_id":1,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"909":{"crate_id":1,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"982":{"crate_id":1,"path":["core","task","wake","ExtData"],"kind":"enum"},"1055":{"crate_id":1,"path":["core","pin","Pin"],"kind":"struct"},"1128":{"crate_id":4,"path":["lock_api","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"1201":{"crate_id":1,"path":["core","error","tags","Ref"],"kind":"struct"},"185":{"crate_id":0,"path":["spin","mutex","spin"],"kind":"module"},"550":{"crate_id":1,"path":["core","f16"],"kind":"primitive"},"623":{"crate_id":1,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"696":{"crate_id":1,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"769":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"842":{"crate_id":1,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"915":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"988":{"crate_id":1,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"1061":{"crate_id":1,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"1134":{"crate_id":1,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"1207":{"crate_id":1,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"337":{"crate_id":0,"path":["spin","rwlock","RwLockUpgradableGuard"],"kind":"struct"},"556":{"crate_id":1,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"629":{"crate_id":1,"path":["core","array","drain","Drain"],"kind":"struct"},"702":{"crate_id":1,"path":["core","ops","arith","Neg"],"kind":"trait"},"775":{"crate_id":1,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"848":{"crate_id":1,"path":["core","time","Duration"],"kind":"struct"},"921":{"crate_id":1,"path":["core","mem","maybe_uninit","Guard"],"kind":"struct"},"994":{"crate_id":1,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"1067":{"crate_id":2,"path":["compiler_builtins","int","big","i256"],"kind":"struct"},"1140":{"crate_id":1,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"1213":{"crate_id":1,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"562":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"635":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_elements_right","Rotate"],"kind":"struct"},"708":{"crate_id":1,"path":["core","marker","Copy"],"kind":"trait"},"781":{"crate_id":1,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"854":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"927":{"crate_id":1,"path":["core","marker","ConstParamTy_"],"kind":"trait"},"1000":{"crate_id":1,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"1073":{"crate_id":1,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"1146":{"crate_id":1,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"495":{"crate_id":4,"path":["lock_api","mutex","MutexGuard"],"kind":"struct"},"568":{"crate_id":1,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"641":{"crate_id":1,"path":["core","ops","range","Bound"],"kind":"enum"},"714":{"crate_id":1,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"787":{"crate_id":1,"path":["core","i8"],"kind":"primitive"},"860":{"crate_id":1,"path":["core","slice","iter","Split"],"kind":"struct"},"933":{"crate_id":1,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"1006":{"crate_id":1,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"1079":{"crate_id":1,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"1152":{"crate_id":1,"path":["core","ops","arith","Sub"],"kind":"trait"},"501":{"crate_id":0,"path":["spin","lock_api","RwLockWriteGuard"],"kind":"type_alias"},"574":{"crate_id":1,"path":["core","ffi","c_void"],"kind":"enum"},"647":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"720":{"crate_id":1,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"793":{"crate_id":1,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"866":{"crate_id":1,"path":["core","future","ready","Ready"],"kind":"struct"},"939":{"crate_id":1,"path":["core","slice","iter","IterMut"],"kind":"struct"},"1012":{"crate_id":1,"path":["core","cell","RefMut"],"kind":"struct"},"1085":{"crate_id":1,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"1158":{"crate_id":1,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"580":{"crate_id":1,"path":["core","ffi","va_list","VaListImpl"],"kind":"struct"},"653":{"crate_id":1,"path":["core","fmt","builders","FromFn"],"kind":"struct"},"726":{"crate_id":1,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"799":{"crate_id":1,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"872":{"crate_id":1,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"945":{"crate_id":1,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"1018":{"crate_id":1,"path":["core","sync","atomic"],"kind":"module"},"1091":{"crate_id":1,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"2":{"crate_id":0,"path":["spin","barrier","Barrier"],"kind":"struct"},"1164":{"crate_id":1,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"513":{"crate_id":0,"path":["spin","RwLockWriteGuard"],"kind":"type_alias"},"586":{"crate_id":1,"path":["core","result","Iter"],"kind":"struct"},"659":{"crate_id":1,"path":["core","io","borrowed_buf","BorrowedCursor"],"kind":"struct"},"732":{"crate_id":1,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"805":{"crate_id":5,"path":["scopeguard","Strategy"],"kind":"trait"},"878":{"crate_id":1,"path":["core","core_simd","to_bytes","ToBytes"],"kind":"trait"},"951":{"crate_id":1,"path":["core","str","pattern","Utf8Pattern"],"kind":"enum"},"1024":{"crate_id":1,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"1097":{"crate_id":1,"path":["core","mem"],"kind":"module"},"1170":{"crate_id":1,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"519":{"crate_id":1,"path":["core","slice","iter","RSplit"],"kind":"struct"},"592":{"crate_id":1,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"665":{"crate_id":1,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"738":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroUsizeInner"],"kind":"struct"},"811":{"crate_id":1,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"884":{"crate_id":1,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"957":{"crate_id":1,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"1030":{"crate_id":1,"path":["core","f64"],"kind":"primitive"},"1103":{"crate_id":1,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"1176":{"crate_id":4,"path":["lock_api","remutex","ReentrantMutexGuard"],"kind":"struct"},"306":{"crate_id":1,"path":["core","hint","spin_loop"],"kind":"function"},"525":{"crate_id":1,"path":["core","core_simd","simd","cmp","ord","SimdOrd"],"kind":"trait"},"598":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"671":{"crate_id":1,"path":["core","fmt","rt","Argument"],"kind":"struct"},"744":{"crate_id":1,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"817":{"crate_id":1,"path":["core","core_arch","simd","m8x32"],"kind":"struct"},"890":{"crate_id":1,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"963":{"crate_id":1,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"1036":{"crate_id":1,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"1109":{"crate_id":1,"path":["core","async_iter","async_iter","IntoAsyncIterator"],"kind":"trait"},"93":{"crate_id":1,"path":["core","fmt","Formatter"],"kind":"struct"},"1182":{"crate_id":1,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"531":{"crate_id":1,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"604":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"677":{"crate_id":1,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_addr"],"kind":"function"},"750":{"crate_id":1,"path":["core","range","Range"],"kind":"struct"},"823":{"crate_id":1,"path":["core","mem","drop"],"kind":"function"},"896":{"crate_id":1,"path":["core","task","poll","Poll"],"kind":"enum"},"969":{"crate_id":1,"path":["core","ops","bit","BitXor"],"kind":"trait"},"1042":{"crate_id":1,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"1115":{"crate_id":1,"path":["core","core_arch","simd","i32x32"],"kind":"struct"},"1188":{"crate_id":1,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"537":{"crate_id":1,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"610":{"crate_id":1,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"683":{"crate_id":1,"path":["core","i16"],"kind":"primitive"},"756":{"crate_id":4,"path":["lock_api","mutex","MappedMutexGuard"],"kind":"struct"},"829":{"crate_id":4,"path":["lock_api","rwlock","MappedRwLockReadGuard"],"kind":"struct"},"902":{"crate_id":1,"path":["core","cell","RefCell"],"kind":"struct"},"975":{"crate_id":1,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"1048":{"crate_id":1,"path":["core","core_simd","simd","ptr","sealed","Sealed"],"kind":"trait"},"32":{"crate_id":1,"path":["core","convert","Into"],"kind":"trait"},"105":{"crate_id":0,"path":["spin","lazy"],"kind":"module"},"1121":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1194":{"crate_id":1,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"397":{"crate_id":4,"path":["lock_api","rwlock","RawRwLockUpgrade"],"kind":"trait"},"543":{"crate_id":1,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"616":{"crate_id":1,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"689":{"crate_id":1,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"762":{"crate_id":1,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"835":{"crate_id":1,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"908":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"981":{"crate_id":1,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"1054":{"crate_id":1,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"38":{"crate_id":1,"path":["core","result","Result"],"kind":"enum"},"1127":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"184":{"crate_id":1,"path":["core","ops","drop","Drop"],"kind":"trait"},"1200":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"549":{"crate_id":1,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"622":{"crate_id":1,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"695":{"crate_id":1,"path":["core","u32"],"kind":"primitive"},"768":{"crate_id":1,"path":["core","str","iter","Bytes"],"kind":"struct"},"841":{"crate_id":1,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"914":{"crate_id":1,"path":["core","tuple"],"kind":"primitive"},"987":{"crate_id":1,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"1060":{"crate_id":1,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"1133":{"crate_id":1,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"1206":{"crate_id":1,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"555":{"crate_id":1,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"628":{"crate_id":1,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"701":{"crate_id":1,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"774":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"847":{"crate_id":1,"path":["core","slice","sort","unstable","quicksort","GapGuard"],"kind":"struct"},"920":{"crate_id":1,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"993":{"crate_id":1,"path":["core","num","nonzero","ZeroablePrimitive"],"kind":"trait"},"1066":{"crate_id":1,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"1139":{"crate_id":1,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"1212":{"crate_id":1,"path":["core","str","iter","Chars"],"kind":"struct"},"561":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"634":{"crate_id":1,"path":["core","error","Request"],"kind":"struct"},"707":{"crate_id":1,"path":["core","clone","uninit","InitializingSlice"],"kind":"struct"},"780":{"crate_id":1,"path":["core","fmt","LowerExp"],"kind":"trait"},"853":{"crate_id":1,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"926":{"crate_id":1,"path":["core","cmp","Eq"],"kind":"trait"},"999":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"1072":{"crate_id":1,"path":["core","slice","sort","shared","smallsort","CopyOnDrop"],"kind":"struct"},"1145":{"crate_id":1,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"348":{"crate_id":0,"path":["spin","rwlock","RwLockWriteGuard"],"kind":"struct"},"494":{"crate_id":0,"path":["spin","lock_api","MutexGuard"],"kind":"type_alias"},"567":{"crate_id":1,"path":["core","str","iter","Split"],"kind":"struct"},"640":{"crate_id":1,"path":["core","option","Item"],"kind":"struct"},"713":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroI128Inner"],"kind":"struct"},"786":{"crate_id":1,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"859":{"crate_id":1,"path":["core","core_simd","simd","num","sealed","Sealed"],"kind":"trait"},"932":{"crate_id":1,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"1005":{"crate_id":1,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"1078":{"crate_id":1,"path":["core","fmt","num","Octal"],"kind":"struct"},"1151":{"crate_id":1,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"573":{"crate_id":1,"path":["core","i32"],"kind":"primitive"},"646":{"crate_id":4,"path":["lock_api"],"kind":"module"},"719":{"crate_id":1,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"500":{"crate_id":4,"path":["lock_api","rwlock","RwLockReadGuard"],"kind":"struct"},"792":{"crate_id":1,"path":["core","num","error","ParseIntError"],"kind":"struct"},"865":{"crate_id":1,"path":["core","cmp","PartialOrd"],"kind":"trait"},"938":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1011":{"crate_id":1,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"1084":{"crate_id":1,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"68":{"crate_id":0,"path":["spin","lazy","Lazy"],"kind":"struct"},"1157":{"crate_id":1,"path":["core","u128"],"kind":"primitive"},"579":{"crate_id":1,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"652":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"725":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"798":{"crate_id":1,"path":["core","slice","iter","ChunkBy"],"kind":"struct"},"871":{"crate_id":1,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"944":{"crate_id":1,"path":["core","ops","range","Range"],"kind":"struct"},"1017":{"crate_id":5,"path":["scopeguard"],"kind":"module"},"1090":{"crate_id":1,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"1163":{"crate_id":1,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"74":{"crate_id":1,"path":["core","ops","function","FnOnce"],"kind":"trait"},"512":{"crate_id":0,"path":["spin","Once"],"kind":"type_alias"},"585":{"crate_id":1,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"658":{"crate_id":1,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr"],"kind":"trait"},"731":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"804":{"crate_id":1,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"877":{"crate_id":1,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"950":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1023":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"7":{"crate_id":0,"path":["spin","relax","RelaxStrategy"],"kind":"trait"},"1096":{"crate_id":1,"path":["core","future","join","MaybeDone"],"kind":"enum"},"1169":{"crate_id":1,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"299":{"crate_id":0,"path":["spin","once"],"kind":"module"},"518":{"crate_id":1,"path":["core","str","iter","CharIndices"],"kind":"struct"},"591":{"crate_id":1,"path":["core","fmt","Error"],"kind":"struct"},"664":{"crate_id":1,"path":["core","ptr"],"kind":"module"},"737":{"crate_id":1,"path":["core","str","iter","Lines"],"kind":"struct"},"810":{"crate_id":1,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"883":{"crate_id":1,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"956":{"crate_id":1,"path":["core","marker","PhantomData"],"kind":"struct"},"1029":{"crate_id":1,"path":["core","iter"],"kind":"module"},"13":{"crate_id":1,"path":["core","marker","Sync"],"kind":"trait"},"1102":{"crate_id":1,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"1175":{"crate_id":1,"path":["core","cell","once","OnceCell"],"kind":"struct"},"305":{"crate_id":0,"path":["spin","relax","Loop"],"kind":"struct"},"524":{"crate_id":1,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"597":{"crate_id":1,"path":["core","fmt","rt","Count"],"kind":"enum"},"670":{"crate_id":1,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"743":{"crate_id":1,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"816":{"crate_id":1,"path":["core","reference"],"kind":"primitive"},"889":{"crate_id":1,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"962":{"crate_id":3,"path":["rustc_std_workspace_core"],"kind":"module"},"1035":{"crate_id":1,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"19":{"crate_id":1,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"1108":{"crate_id":1,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"1181":{"crate_id":1,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"530":{"crate_id":1,"path":["core","slice","iter","SplitN"],"kind":"struct"},"603":{"crate_id":1,"path":["core","slice","iter","RChunks"],"kind":"struct"},"676":{"crate_id":1,"path":["core","alloc","layout","Layout"],"kind":"struct"},"749":{"crate_id":1,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"822":{"crate_id":1,"path":["core","core_simd","simd","cmp","eq","SimdPartialEq"],"kind":"trait"},"895":{"crate_id":1,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"968":{"crate_id":1,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"1041":{"crate_id":1,"path":["core","core_arch","simd","f16x16"],"kind":"struct"},"1114":{"crate_id":1,"path":["core","future","ResumeTy"],"kind":"struct"},"98":{"crate_id":0,"path":["spin","once","Once"],"kind":"struct"},"25":{"crate_id":1,"path":["core","borrow","Borrow"],"kind":"trait"},"1187":{"crate_id":1,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"390":{"crate_id":4,"path":["lock_api","rwlock","RawRwLock"],"kind":"trait"},"536":{"crate_id":1,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"609":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroU128Inner"],"kind":"struct"},"682":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"755":{"crate_id":1,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"828":{"crate_id":1,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"901":{"crate_id":1,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"974":{"crate_id":1,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"1047":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1120":{"crate_id":1,"path":["core","ops","function","FnMut"],"kind":"trait"},"104":{"crate_id":1,"path":["core","default","Default"],"kind":"trait"},"1193":{"crate_id":1,"path":["core","iter","range","Step"],"kind":"trait"},"542":{"crate_id":1,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"615":{"crate_id":1,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"688":{"crate_id":1,"path":["core","panicking","AssertKind"],"kind":"enum"},"761":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"834":{"crate_id":1,"path":["core","num","saturating","Saturating"],"kind":"struct"},"907":{"crate_id":1,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"980":{"crate_id":1,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"1053":{"crate_id":1,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"1126":{"crate_id":1,"path":["core","slice"],"kind":"primitive"},"1199":{"crate_id":1,"path":["core","slice","iter","ChunkByMut"],"kind":"struct"},"548":{"crate_id":1,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"621":{"crate_id":1,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"694":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"767":{"crate_id":1,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"840":{"crate_id":1,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"913":{"crate_id":1,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"986":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1059":{"crate_id":1,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"1132":{"crate_id":1,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"1205":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"189":{"crate_id":0,"path":["spin","mutex","Mutex"],"kind":"struct"},"554":{"crate_id":1,"path":["core","char","CaseMappingIter"],"kind":"struct"},"627":{"crate_id":1,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"700":{"crate_id":1,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"773":{"crate_id":1,"path":["core","option","IterMut"],"kind":"struct"},"846":{"crate_id":1,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"919":{"crate_id":1,"path":["core","u8"],"kind":"primitive"},"992":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1065":{"crate_id":1,"path":["core","result","IterMut"],"kind":"struct"},"1138":{"crate_id":1,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"1211":{"crate_id":1,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"560":{"crate_id":1,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"633":{"crate_id":1,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"706":{"crate_id":1,"path":["core","hash","sip","State"],"kind":"struct"},"779":{"crate_id":1,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"852":{"crate_id":1,"path":["core","num","FpCategory"],"kind":"enum"},"925":{"crate_id":1,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"998":{"crate_id":1,"path":["core","option","Iter"],"kind":"struct"},"1071":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1144":{"crate_id":1,"path":["core","cell","BorrowError"],"kind":"struct"},"493":{"crate_id":0,"path":["spin","Mutex"],"kind":"type_alias"},"566":{"crate_id":1,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"639":{"crate_id":1,"path":["core","ptr","unique","Unique"],"kind":"struct"},"712":{"crate_id":1,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"785":{"crate_id":1,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"858":{"crate_id":1,"path":["core","cmp","Ord"],"kind":"trait"},"931":{"crate_id":1,"path":["core","usize"],"kind":"primitive"},"1004":{"crate_id":1,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"1077":{"crate_id":1,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr"],"kind":"trait"},"1150":{"crate_id":1,"path":["core","i64"],"kind":"primitive"},"499":{"crate_id":0,"path":["spin","lock_api","RwLockReadGuard"],"kind":"type_alias"},"572":{"crate_id":1,"path":["core","fmt","Write"],"kind":"trait"},"645":{"crate_id":1,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"718":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"791":{"crate_id":1,"path":["core","core_arch","x86","bf16"],"kind":"struct"},"864":{"crate_id":1,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"937":{"crate_id":5,"path":["scopeguard","ScopeGuard"],"kind":"struct"},"1010":{"crate_id":1,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"1083":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1156":{"crate_id":1,"path":["core","core_simd","simd","num","float","SimdFloat"],"kind":"trait"},"505":{"crate_id":0,"path":["spin","lock_api"],"kind":"module"},"578":{"crate_id":1,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"651":{"crate_id":1,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"724":{"crate_id":1,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"797":{"crate_id":1,"path":["core","str","IsNotEmpty"],"kind":"struct"},"870":{"crate_id":1,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"943":{"crate_id":1,"path":["core","ops","index","IndexMut"],"kind":"trait"},"1016":{"crate_id":1,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"1089":{"crate_id":1,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"}},"external_crates":{"2":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"5":{"name":"scopeguard","html_root_url":"https://docs.rs/scopeguard/1/"},"4":{"name":"lock_api","html_root_url":null},"1":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":36}