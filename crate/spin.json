{"root":"0:0:2455","crate_version":"0.9.8","includes_private":false,"index":{"b:1:3099-0:10:2429":{"id":"b:1:3099-0:10:2429","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Barrier","id":"0:10:2429","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3101:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:120":{"id":"0:120","crate_id":0,"name":null,"span":{"filename":"src/mutex/spin.rs","begin":[198,0],"end":[273,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"SpinMutex","id":"0:89:2725","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:123:2800","0:124:2805","0:125:2812","0:126:2821"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:427":{"id":"0:427","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[118,0],"end":[118,64]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Sync","id":"1:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockReadGuard","id":"0:394:246","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:108":{"id":"0:108","crate_id":0,"name":null,"span":{"filename":"src/mutex/spin.rs","begin":[91,0],"end":[91,63]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Send","id":"1:32945:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32945:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinMutexGuard","id":"0:95:2726","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2790-0:365:3080":{"id":"b:1:2790-0:365:3080","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2784:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Loop","id":"0:365:3080","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2792:3306"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:171:2812":{"id":"0:171:2812","crate_id":0,"name":"try_lock","span":{"filename":"src/mutex/spin.rs","begin":[365,4],"end":[368,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3099-0:201:199":{"id":"b:1:3099-0:201:199","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"MutexGuard","id":"0:201:199","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:3101:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:209:2787":{"id":"0:209:2787","crate_id":0,"name":"into_inner","span":{"filename":"src/mutex.rs","begin":[163,4],"end":[165,5]},"visibility":"public","docs":"Consumes this [`Mutex`] and unwraps the underlying data.\n\n# Example\n\n```\nlet lock = spin::Mutex::new(42);\nassert_eq!(42, lock.into_inner());\n```","links":{"`Mutex`":"0:191:198"},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:42830:3494-0:275:2435":{"id":"a:1:42830:3494-0:275:2435","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:42830:3494","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:42830:3494","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42830:3494","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Once","id":"0:275:2435","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:42830:3494-0:361:2425":{"id":"a:1:42830:3494-0:361:2425","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42830:3494","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Spin","id":"0:361:2425","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:3967-0:10:2429":{"id":"b:1:3967-0:10:2429","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3965:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Barrier","id":"0:10:2429","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3969:1872"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:361:2425":{"id":"0:361:2425","crate_id":0,"name":"Spin","span":{"filename":"src/relax.rs","begin":[21,0],"end":[21,16]},"visibility":"public","docs":"A strategy that rapidly spins while informing the CPU that it should power down non-essential components via\n[`core::hint::spin_loop`].\n\nNote that spinning is a 'dumb' strategy and most schedulers cannot correctly differentiate it from useful work,\nthereby misallocating even more CPU time to the spinning process. This is known as\n['priority inversion'](https://matklad.github.io/2020/01/02/spinlocks-considered-harmful.html).\n\nIf you see signs that priority inversion is occurring, consider switching to [`Yield`] or, even better, not using a\nspinlock at all and opting for a proper scheduler-aware lock. Remember also that different targets, operating\nsystems, schedulers, and even the same scheduler with different workloads will exhibit different behaviour. Just\nbecause priority inversion isn't occurring in your tests does not mean that it will not occur. Use a scheduler-\naware lock if at all possible.","links":{"`core::hint::spin_loop`":"1:1280:3456"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":"unit","generics":{"params":[],"where_predicates":[]},"impls":["a:1:32945:249-0:361:2425","a:1:3322:261-0:361:2425","a:1:3357:3460-0:361:2425","a:1:33003:3463-0:361:2425","a:1:42830:3494-0:361:2425","a:1:42831:3493-0:361:2425","b:1:2790-0:361:2425","b:1:2793-0:361:2425","b:1:3095-0:361:2425","b:1:3099-0:361:2425","b:1:3105-0:361:2425","b:1:3110-0:361:2425","b:1:3967-0:361:2425","0:363"]}}},"0:195":{"id":"0:195","crate_id":0,"name":null,"span":{"filename":"src/mutex.rs","begin":[117,0],"end":[117,56]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Send","id":"1:32945:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Mutex","id":"0:191:198","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:241:830":{"id":"0:241:830","crate_id":0,"name":"fmt","span":{"filename":"src/mutex.rs","begin":[293,4],"end":[295,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:10623:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:10604:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3099-0:37:2431":{"id":"b:1:3099-0:37:2431","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Lazy","id":"0:37:2431","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"F"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3101:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:103":{"id":"0:103","crate_id":0,"name":null,"span":{"filename":"src/mutex/spin.rs","begin":[88,0],"end":[88,60]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Send","id":"1:32945:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32945:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinMutex","id":"0:89:2725","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3967-0:95:2726":{"id":"b:1:3967-0:95:2726","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3965:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinMutexGuard","id":"0:95:2726","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:3969:1872"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:133":{"id":"0:133","crate_id":0,"name":null,"span":{"filename":"src/mutex/spin.rs","begin":[286,0],"end":[290,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Default","id":"1:3147:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"1:3147:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinMutex","id":"0:89:2725","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:136:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:119:2612":{"id":"0:119:2612","crate_id":0,"name":"lock","span":{"filename":"src/mutex/spin.rs","begin":[177,4],"end":[195,5]},"visibility":"public","docs":"Locks the [`SpinMutex`] and returns a guard that permits access to the inner data.\n\nThe returned value may be dereferenced for data access\nand the lock will be dropped when the guard falls out of scope.\n\n```\nlet lock = spin::mutex::SpinMutex::<_>::new(0);\n{\n    let mut data = lock.lock();\n    // The lock is now locked and the data can be accessed\n    *data += 1;\n    // The lock is implicitly dropped at the end of the scope\n}\n```","links":{"`SpinMutex`":"0:89:2725"},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SpinMutexGuard","id":"0:95:2726","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3967-0:37:2431":{"id":"b:1:3967-0:37:2431","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3965:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Lazy","id":"0:37:2431","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"F"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3969:1872"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:173:2800":{"id":"0:173:2800","crate_id":0,"name":"is_locked","span":{"filename":"src/mutex/spin.rs","begin":[374,4],"end":[376,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:153":{"id":"0:153","crate_id":0,"name":null,"span":{"filename":"src/mutex/spin.rs","begin":[332,0],"end":[338,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Deref","id":"1:3558:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinMutexGuard","id":"0:95:2726","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:156:263","0:157:654"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:348":{"id":"0:348","crate_id":0,"name":null,"span":{"filename":"src/once.rs","begin":[497,0],"end":[507,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Drop","id":"1:3587:2451","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Once","id":"0:275:2435","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:351:696"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:458:3217":{"id":"0:458:3217","crate_id":0,"name":"try_write","span":{"filename":"src/rwlock.rs","begin":[408,4],"end":[410,5]},"visibility":"public","docs":"Attempt to lock this rwlock with exclusive write access.\n\nThis function does not ever block, and it will return `None` if a call\nto `write` would otherwise block. If successful, an RAII guard is\nreturned.\n\n```\nlet mylock = spin::RwLock::new(0);\n{\n    match mylock.try_write() {\n        Some(mut data) => {\n            // The lock is now locked and the data can be written\n            *data += 1;\n            // The lock is implicitly dropped\n        },\n        None => (), // no cigar\n    };\n}\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:42734:206","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RwLockWriteGuard","id":"0:399:247","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:553":{"id":"0:553","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[764,0],"end":[772,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'rwlock","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Drop","id":"1:3587:2451","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockUpgradableGuard","id":"0:406:2439","args":{"angle_bracketed":{"args":[{"lifetime":"'rwlock"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:557:696"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:63":{"id":"0:63","crate_id":0,"name":null,"span":{"filename":"src/lazy.rs","begin":[105,0],"end":[111,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"1:3599:155","args":{"parenthesized":{"inputs":[],"output":{"generic":"T"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RelaxStrategy","id":"0:359:2424","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Deref","id":"1:3558:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Lazy","id":"0:37:2431","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"F"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:67:263","0:68:654"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3110-0:399:247":{"id":"b:1:3110-0:399:247","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockWriteGuard","id":"0:399:247","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3113:150","1:3114:1857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:607:247":{"id":"0:607:247","crate_id":0,"name":"RwLockWriteGuard","span":{"filename":"src/lib.rs","begin":[161,0],"end":[161,74]},"visibility":"public","docs":"A guard that provides mutable data access. See [`rwlock::RwLockWriteGuard`] for documentation.\n\nA note for advanced users: this alias exists to avoid subtle type inference errors due to the default relax\nstrategy type parameter. If you need a non-default relax strategy, use the fully-qualified path.","links":{"`rwlock::RwLockWriteGuard`":"0:399:247"},"attrs":["#[cfg(feature = \"rwlock\")]"],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"crate::rwlock::RwLockWriteGuard","id":"0:399:247","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}}},"0:611:198":{"id":"0:611:198","crate_id":0,"name":"Mutex","span":{"filename":"src/lib.rs","begin":[170,4],"end":[170,67]},"visibility":"public","docs":"A lock that provides mutually exclusive data access (compatible with [`lock_api`](https://crates.io/crates/lock_api)).","links":{},"attrs":["#[cfg(feature = \"mutex\")]"],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"lock_api_crate::Mutex","id":"4:35:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::Mutex","id":"0:598:198","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}},{"type":{"generic":"T"}}],"bindings":[]}}}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}}},"b:1:3099-0:399:247":{"id":"b:1:3099-0:399:247","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockWriteGuard","id":"0:399:247","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3101:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:326:1354":{"id":"0:326:1354","crate_id":0,"name":"poll","span":{"filename":"src/once.rs","begin":[325,4],"end":[337,5]},"visibility":"public","docs":"Like [`Once::get`], but will spin if the [`Once`] is in the process of being\ninitialized. If initialization has not even begun, `None` will be returned.\n\nNote that in releases prior to `0.7`, this function was named `wait`.\n\n# Panics\n\nThis function will panic if the [`Once`] previously panicked while attempting\nto initialize. This is similar to the poisoning behaviour of `std::sync`'s\nprimitives.","links":{"`Once::get`":"0:337:2862","`Once`":"0:275:2435"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:42734:206","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:144:2068":{"id":"0:144:2068","crate_id":0,"name":"leak","span":{"filename":"src/mutex/spin.rs","begin":[312,4],"end":[317,5]},"visibility":"public","docs":"Leak the lock guard, yielding a mutable reference to the underlying data.\n\nNote that this function will permanently lock the original [`SpinMutex`].\n\n```\nlet mylock = spin::mutex::SpinMutex::<_>::new(0);\n\nlet data: &mut i32 = spin::mutex::SpinMutexGuard::leak(mylock.lock());\n\n*data = 1;\nassert_eq!(*data, 1);\n```","links":{"`SpinMutex`":"0:89:2725"},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["this",{"generic":"Self"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:158":{"id":"0:158","crate_id":0,"name":null,"span":{"filename":"src/mutex/spin.rs","begin":[340,0],"end":[345,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"DerefMut","id":"1:3571:2734","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinMutexGuard","id":"0:95:2726","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:161:656"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3967-0:201:199":{"id":"b:1:3967-0:201:199","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3965:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"MutexGuard","id":"0:201:199","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:3969:1872"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:459:3167":{"id":"0:459:3167","crate_id":0,"name":"try_upgradeable_read","span":{"filename":"src/rwlock.rs","begin":[414,4],"end":[426,5]},"visibility":"public","docs":"Tries to obtain an upgradeable lock guard.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:42734:206","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RwLockUpgradableGuard","id":"0:406:2439","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3102-0:89:2725":{"id":"b:1:3102-0:89:2725","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3072:157","args":{"angle_bracketed":{"args":[{"type":{"primitive":"never"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinMutex","id":"0:89:2725","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3104:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:170:2612":{"id":"0:170:2612","crate_id":0,"name":"lock","span":{"filename":"src/mutex/spin.rs","begin":[360,4],"end":[363,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:42830:3494-0:17:2623":{"id":"a:1:42830:3494-0:17:2623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42830:3494","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BarrierWaitResult","id":"0:17:2623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:42830:3494-0:95:2726":{"id":"a:1:42830:3494-0:95:2726","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:42831:3493","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42830:3494","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinMutexGuard","id":"0:95:2726","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:498:3250":{"id":"0:498:3250","crate_id":0,"name":"downgrade","span":{"filename":"src/rwlock.rs","begin":[583,4],"end":[596,5]},"visibility":"public","docs":"Downgrades the upgradeable lock guard to a readable, shared lock guard. Cannot fail and is guaranteed not to spin.\n\n```\nlet mylock = spin::RwLock::new(1);\n\nlet upgradeable = mylock.upgradeable_read();\nassert!(mylock.try_read().is_none());\nassert_eq!(*upgradeable, 1);\n\nlet readable = upgradeable.downgrade(); // This is guaranteed not to spin\nassert!(mylock.try_read().is_some());\nassert_eq!(*readable, 1);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"RwLockReadGuard","id":"0:394:246","args":{"angle_bracketed":{"args":[{"lifetime":"'rwlock"},{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3967-0:17:2623":{"id":"b:1:3967-0:17:2623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3965:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BarrierWaitResult","id":"0:17:2623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3969:1872"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:33003:3463-0:406:2439":{"id":"a:1:33003:3463-0:406:2439","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:33003:3463","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:33003:3463","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockUpgradableGuard","id":"0:406:2439","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:242":{"id":"0:242","crate_id":0,"name":null,"span":{"filename":"src/mutex.rs","begin":[298,0],"end":[302,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"fmt::Display","id":"1:10661:133","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"1:10661:133","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"MutexGuard","id":"0:201:199","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:245:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:536:263":{"id":"0:536:263","crate_id":0,"name":"Target","span":{"filename":"src/rwlock.rs","begin":[733,4],"end":[733,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:342:3025":{"id":"0:342:3025","crate_id":0,"name":"into_inner_unchecked","span":{"filename":"src/once.rs","begin":[471,4],"end":[478,5]},"visibility":"public","docs":"Returns a the inner value if the [`Once`] has been initialized.  \n# Safety\n\nThis is *extremely* unsafe if the `Once` has not already been initialized because a reference to uninitialized\nmemory will be returned, immediately triggering undefined behaviour (even if the reference goes unused)\nThis can be useful, if `Once` has already been initialized, and you want to bypass an\noption check.","links":{"`Once`":"0:275:2435"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:440:2702":{"id":"0:440:2702","crate_id":0,"name":"as_mut_ptr","span":{"filename":"src/rwlock.rs","begin":[181,4],"end":[183,5]},"visibility":"public","docs":"Returns a mutable pointer to the underying data.\n\nThis is mostly meant to be used for applications which require manual unlocking, but where\nstoring both the lock and the pointer to the inner data gets inefficient.\n\nWhile this is safe, writing to the data is undefined behavior unless the current thread has\nacquired a write lock, and reading requires either a read or write lock.\n\n# Example\n```\nlet lock = spin::RwLock::new(42);\n\nunsafe {\n    core::mem::forget(lock.write());\n\n    assert_eq!(lock.as_mut_ptr().read(), 42);\n    lock.as_mut_ptr().write(58);\n\n    lock.force_write_unlock();\n}\n\nassert_eq!(*lock.read(), 58);\n\n```","links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:467":{"id":"0:467","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[458,0],"end":[462,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Default","id":"1:3147:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"1:3147:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLock","id":"0:385:245","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:470:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:141":{"id":"0:141","crate_id":0,"name":null,"span":{"filename":"src/mutex/spin.rs","begin":[298,0],"end":[318,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"SpinMutexGuard","id":"0:95:2726","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:144:2068"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3110-0:394:246":{"id":"b:1:3110-0:394:246","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockReadGuard","id":"0:394:246","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:3113:150","1:3114:1857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:33003:3463-0:95:2726":{"id":"a:1:33003:3463-0:95:2726","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:33003:3463","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinMutexGuard","id":"0:95:2726","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:522":{"id":"0:522","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[717,0],"end":[721,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'rwlock","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"fmt::Display","id":"1:10661:133","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"1:10661:133","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockWriteGuard","id":"0:399:247","args":{"angle_bracketed":{"args":[{"lifetime":"'rwlock"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:526:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:491:3234":{"id":"0:491:3234","crate_id":0,"name":"upgrade","span":{"filename":"src/rwlock.rs","begin":[512,4],"end":[521,5]},"visibility":"public","docs":"Upgrades an upgradeable lock guard to a writable lock guard.\n\n```\nlet mylock = spin::RwLock::new(0);\n\nlet upgradeable = mylock.upgradeable_read(); // Readable, but not yet writable\nlet writable = upgradeable.upgrade();\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"RwLockWriteGuard","id":"0:399:247","args":{"angle_bracketed":{"args":[{"lifetime":"'rwlock"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:32945:249-0:365:3080":{"id":"a:1:32945:249-0:365:3080","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32945:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Loop","id":"0:365:3080","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:600:2435":{"id":"0:600:2435","crate_id":0,"name":"Once","span":{"filename":"src/lib.rs","begin":[136,0],"end":[136,45]},"visibility":"public","docs":"A primitive that provides lazy one-time initialization. See [`once::Once`] for documentation.\n\nA note for advanced users: this alias exists to avoid subtle type inference errors due to the default relax\nstrategy type parameter. If you need a non-default relax strategy, use the fully-qualified path.","links":{"`once::Once`":"0:275:2435"},"attrs":["#[cfg(feature = \"once\")]"],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"crate::once::Once","id":"0:275:2435","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":{"tuple":[]},"synthetic":false}}}],"where_predicates":[]}}}},"0:438:1212":{"id":"0:438:1212","crate_id":0,"name":"new","span":{"filename":"src/rwlock.rs","begin":[140,4],"end":[146,5]},"visibility":"public","docs":"Creates a new spinlock wrapping the supplied data.\n\nMay be used statically:\n\n```\nuse spin;\n\nstatic RW_LOCK: spin::RwLock<()> = spin::RwLock::new(());\n\nfn demo() {\n    let lock = RW_LOCK.read();\n    // do something with lock\n    drop(lock);\n}\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["data",{"generic":"T"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:3357:3460-0:37:2431":{"id":"a:1:3357:3460-0:37:2431","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":{"function_pointer":{"decl":{"inputs":[],"output":{"generic":"T"},"c_variadic":false},"generic_params":[],"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"Spin","id":"0:361:2425","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3357:3460","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Lazy","id":"0:37:2431","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"F"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:72:60":{"id":"0:72:60","crate_id":0,"name":"default","span":{"filename":"src/lazy.rs","begin":[115,4],"end":[117,5]},"visibility":"default","docs":"Creates a new lazy value using `Default` as the initializing function.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:251":{"id":"0:251","crate_id":0,"name":null,"span":{"filename":"src/mutex.rs","begin":[311,0],"end":[315,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"DerefMut","id":"1:3571:2734","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"MutexGuard","id":"0:201:199","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:254:656"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:33003:3463-0:275:2435":{"id":"a:1:33003:3463-0:275:2435","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:33003:3463","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:33003:3463","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:33003:3463","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Once","id":"0:275:2435","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2790-0:275:2435":{"id":"b:1:2790-0:275:2435","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2784:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Once","id":"0:275:2435","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2792:3306"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:470:60":{"id":"0:470:60","crate_id":0,"name":"default","span":{"filename":"src/rwlock.rs","begin":[459,4],"end":[461,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:439:2787":{"id":"0:439:2787","crate_id":0,"name":"into_inner","span":{"filename":"src/rwlock.rs","begin":[150,4],"end":[155,5]},"visibility":"public","docs":"Consumes this `RwLock`, returning the underlying data.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:260:2812":{"id":"0:260:2812","crate_id":0,"name":"try_lock","span":{"filename":"src/mutex.rs","begin":[328,4],"end":[331,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3095-0:385:245":{"id":"b:1:3095-0:385:245","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLock","id":"0:385:245","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3098:3723"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:577":{"id":"0:577","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[856,0],"end":[902,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"lock_api\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RelaxStrategy","id":"0:359:2424","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RawRwLockUpgrade","id":"4:493:3271","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLock","id":"0:385:245","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:579:3272","0:580:3273","0:582:3274","0:583:3234","0:584:3241"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:527":{"id":"0:527","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[723,0],"end":[730,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'rwlock","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Deref","id":"1:3558:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockReadGuard","id":"0:394:246","args":{"angle_bracketed":{"args":[{"lifetime":"'rwlock"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:530:263","0:531:654"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:3357:3460-0:10:2429":{"id":"a:1:3357:3460-0:10:2429","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"Spin","id":"0:361:2425","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3357:3460","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Barrier","id":"0:10:2429","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:558":{"id":"0:558","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[774,0],"end":[784,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'rwlock","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Drop","id":"1:3587:2451","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockWriteGuard","id":"0:399:247","args":{"angle_bracketed":{"args":[{"lifetime":"'rwlock"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:562:696"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2790-0:406:2439":{"id":"b:1:2790-0:406:2439","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2784:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockUpgradableGuard","id":"0:406:2439","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2792:3306"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:3109:1859":{"id":"1:3109:1859","crate_id":1,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"1:43002:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"1:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:610:2046":{"id":"0:610:2046","crate_id":0,"name":"lock_api","span":{"filename":"src/lib.rs","begin":[166,0],"end":[166,16]},"visibility":"public","docs":"Spin synchronisation primitives, but compatible with [`lock_api`](https://crates.io/crates/lock_api).","links":{},"attrs":["#[cfg(feature = \"lock_api\")]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:611:198","0:613:199","0:616:245","0:618:246","0:621:247","0:624:2448"],"is_stripped":false}}},"0:113:1212":{"id":"0:113:1212","crate_id":0,"name":"new","span":{"filename":"src/mutex/spin.rs","begin":[110,4],"end":[116,5]},"visibility":"public","docs":"Creates a new [`SpinMutex`] wrapping the supplied data.\n\n# Example\n\n```\nuse spin::mutex::SpinMutex;\n\nstatic MUTEX: SpinMutex<()> = SpinMutex::<_>::new(());\n\nfn demo() {\n    let lock = MUTEX.lock();\n    // do something with lock\n    drop(lock);\n}\n```","links":{"`SpinMutex`":"0:89:2725"},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["data",{"generic":"T"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:127":{"id":"0:127","crate_id":0,"name":null,"span":{"filename":"src/mutex/spin.rs","begin":[275,0],"end":[284,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":"1:10656:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:10656:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinMutex","id":"0:89:2725","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:130:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:432":{"id":"0:432","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[121,0],"end":[121,83]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Send","id":"1:32945:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"1:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockUpgradableGuard","id":"0:406:2439","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:136:60":{"id":"0:136:60","crate_id":0,"name":"default","span":{"filename":"src/mutex/spin.rs","begin":[287,4],"end":[289,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:42831:3493-0:201:199":{"id":"a:1:42831:3493-0:201:199","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:42831:3493","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42831:3493","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"MutexGuard","id":"0:201:199","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:137":{"id":"0:137","crate_id":0,"name":null,"span":{"filename":"src/mutex/spin.rs","begin":[292,0],"end":[296,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinMutex","id":"0:89:2725","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:140:860"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3110-0:95:2726":{"id":"b:1:3110-0:95:2726","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinMutexGuard","id":"0:95:2726","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:3113:150","1:3114:1857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:258:2832":{"id":"0:258:2832","crate_id":0,"name":"INIT","span":{"filename":"src/mutex.rs","begin":[321,4],"end":[321,37]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"a:1:3357:3460-0:275:2435":{"id":"a:1:3357:3460-0:275:2435","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":{"tuple":[]},"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"Spin","id":"0:361:2425","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3357:3460","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Once","id":"0:275:2435","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"b:1:3967-0:365:3080":{"id":"b:1:3967-0:365:3080","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3965:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Loop","id":"0:365:3080","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3969:1872"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:543:654":{"id":"0:543:654","crate_id":0,"name":"deref","span":{"filename":"src/rwlock.rs","begin":[744,4],"end":[747,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:57":{"id":"0:57","crate_id":0,"name":null,"span":{"filename":"src/lazy.rs","begin":[82,0],"end":[103,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"1:3599:155","args":{"parenthesized":{"inputs":[],"output":{"generic":"T"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RelaxStrategy","id":"0:359:2424","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Lazy","id":"0:37:2431","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"F"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:61:2709"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:32945:249-0:37:2431":{"id":"a:1:32945:249-0:37:2431","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:32945:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:32945:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32945:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Lazy","id":"0:37:2431","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"F"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:68:654":{"id":"0:68:654","crate_id":0,"name":"deref","span":{"filename":"src/lazy.rs","begin":[108,4],"end":[110,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:3098:3723":{"id":"1:3098:3723","crate_id":1,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"1:3072:157"},"attrs":["#[track_caller]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3095-0:95:2726":{"id":"b:1:3095-0:95:2726","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinMutexGuard","id":"0:95:2726","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:3098:3723"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:148:830":{"id":"0:148:830","crate_id":0,"name":"fmt","span":{"filename":"src/mutex/spin.rs","begin":[321,4],"end":[323,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:10623:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:10604:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:165:696":{"id":"0:165:696","crate_id":0,"name":"drop","span":{"filename":"src/mutex/spin.rs","begin":[349,4],"end":[351,5]},"visibility":"default","docs":"The dropping of the MutexGuard will release the lock it was created from.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:33003:3463-0:201:199":{"id":"a:1:33003:3463-0:201:199","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:33003:3463","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"MutexGuard","id":"0:201:199","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:3110-0:275:2435":{"id":"b:1:3110-0:275:2435","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Once","id":"0:275:2435","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3113:150","1:3114:1857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3110-0:201:199":{"id":"b:1:3110-0:201:199","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"MutexGuard","id":"0:201:199","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:3113:150","1:3114:1857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3967-0:361:2425":{"id":"b:1:3967-0:361:2425","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3965:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Spin","id":"0:361:2425","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3969:1872"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:42831:3493-0:10:2429":{"id":"a:1:42831:3493-0:10:2429","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"Spin","id":"0:361:2425","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42831:3493","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Barrier","id":"0:10:2429","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:26":{"id":"0:26","crate_id":0,"name":null,"span":{"filename":"src/barrier.rs","begin":[161,0],"end":[181,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"BarrierWaitResult","id":"0:17:2623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:27:2646"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:435":{"id":"0:435","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[123,0],"end":[184,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"RwLock","id":"0:385:245","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:438:1212","0:439:2787","0:440:2702"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:124:2805":{"id":"0:124:2805","crate_id":0,"name":"force_unlock","span":{"filename":"src/mutex/spin.rs","begin":[218,4],"end":[220,5]},"visibility":"public","docs":"Force unlock this [`SpinMutex`].\n\n# Safety\n\nThis is *extremely* unsafe if the lock is not held by the current\nthread. However, this can be useful in some instances for exposing the\nlock to FFI that doesn't know how to deal with RAII.","links":{"`SpinMutex`":"0:89:2725"},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:446:3166":{"id":"0:446:3166","crate_id":0,"name":"upgradeable_read","span":{"filename":"src/rwlock.rs","begin":[249,4],"end":[256,5]},"visibility":"public","docs":"Obtain a readable lock guard that can later be upgraded to a writable lock guard.\nUpgrades can be done through the [`RwLockUpgradableGuard::upgrade`](RwLockUpgradableGuard::upgrade) method.","links":{"RwLockUpgradableGuard::upgrade":"0:491:3234"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"RwLockUpgradableGuard","id":"0:406:2439","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:441":{"id":"0:441","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[186,0],"end":[257,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RelaxStrategy","id":"0:359:2424","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"RwLock","id":"0:385:245","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:444:3001","0:445:2872","0:446:3166"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:172:2835":{"id":"0:172:2835","crate_id":0,"name":"unlock","span":{"filename":"src/mutex/spin.rs","begin":[370,4],"end":[372,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:454:3192":{"id":"0:454:3192","crate_id":0,"name":"writer_count","span":{"filename":"src/rwlock.rs","begin":[334,4],"end":[336,5]},"visibility":"public","docs":"Return the number of writers that currently hold the lock.\n\nBecause [`RwLock`] guarantees exclusive mutable access, this function may only return either `0` or `1`.\n\n# Safety\n\nThis function provides no synchronization guarantees and so its result should be considered 'out of date'\nthe instant it is called. Do not use it for synchronization purposes. However, it may be useful as a heuristic.","links":{"`RwLock`":"0:385:245"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:42831:3493-0:89:2725":{"id":"a:1:42831:3493-0:89:2725","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"Spin","id":"0:361:2425","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42831:3493","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinMutex","id":"0:89:2725","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"b:1:2790-0:37:2431":{"id":"b:1:2790-0:37:2431","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2784:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Lazy","id":"0:37:2431","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"F"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2792:3306"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:226":{"id":"0:226","crate_id":0,"name":null,"span":{"filename":"src/mutex.rs","begin":[261,0],"end":[265,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Default","id":"1:3147:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"1:3147:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Mutex","id":"0:191:198","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:229:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:246":{"id":"0:246","crate_id":0,"name":null,"span":{"filename":"src/mutex.rs","begin":[304,0],"end":[309,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Deref","id":"1:3558:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"MutexGuard","id":"0:201:199","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:249:263","0:250:654"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:73:2048":{"id":"0:73:2048","crate_id":0,"name":"mutex","span":{"filename":"src/mutex.rs","begin":[1,0],"end":[340,1]},"visibility":"public","docs":"Locks that have the same behaviour as a mutex.\n\nThe [`Mutex`] in the root of the crate, can be configured using the `ticket_mutex` feature.\nIf it's enabled, [`TicketMutex`] and [`TicketMutexGuard`] will be re-exported as [`Mutex`]\nand [`MutexGuard`], otherwise the [`SpinMutex`] and guard will be re-exported.\n\n`ticket_mutex` is disabled by default.\n\n[`Mutex`]: ../struct.Mutex.html\n[`MutexGuard`]: ../struct.MutexGuard.html\n[`TicketMutex`]: ./struct.TicketMutex.html\n[`TicketMutexGuard`]: ./struct.TicketMutexGuard.html\n[`SpinMutex`]: ./struct.SpinMutex.html\n[`SpinMutexGuard`]: ./struct.SpinMutexGuard.html","links":{},"attrs":["#[cfg(feature = \"mutex\")]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:74:2455","0:175-0:89:2725","0:176-0:95:2726","0:191:198","0:201:199"],"is_stripped":false}}},"0:478:2068":{"id":"0:478:2068","crate_id":0,"name":"leak","span":{"filename":"src/rwlock.rs","begin":[483,4],"end":[487,5]},"visibility":"public","docs":"Leak the lock guard, yielding a reference to the underlying data.\n\nNote that this function will permanently lock the original lock for all but reading locks.\n\n```\nlet mylock = spin::RwLock::new(0);\n\nlet data: &i32 = spin::RwLockReadGuard::leak(mylock.read());\n\nassert_eq!(*data, 0);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["this",{"generic":"Self"}]],"output":{"borrowed_ref":{"lifetime":"'rwlock","mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2790-0:394:246":{"id":"b:1:2790-0:394:246","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2784:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockReadGuard","id":"0:394:246","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2792:3306"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:549":{"id":"0:549","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[757,0],"end":[762,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'rwlock","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Drop","id":"1:3587:2451","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockReadGuard","id":"0:394:246","args":{"angle_bracketed":{"args":[{"lifetime":"'rwlock"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:552:696"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:42831:3493-0:399:247":{"id":"a:1:42831:3493-0:399:247","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"Spin","id":"0:361:2425","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42831:3493","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockWriteGuard","id":"0:399:247","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:145":{"id":"0:145","crate_id":0,"name":null,"span":{"filename":"src/mutex/spin.rs","begin":[320,0],"end":[324,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":"1:10656:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:10656:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinMutexGuard","id":"0:95:2726","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:148:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:257:2830":{"id":"0:257:2830","crate_id":0,"name":"GuardMarker","span":{"filename":"src/mutex.rs","begin":[319,4],"end":[319,49]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"GuardSend","id":"4:5:2831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"b:1:2790-0:10:2429":{"id":"b:1:2790-0:10:2429","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2784:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Barrier","id":"0:10:2429","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2792:3306"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2790-0:399:247":{"id":"b:1:2790-0:399:247","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2784:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockWriteGuard","id":"0:399:247","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2792:3306"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:487":{"id":"0:487","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[502,0],"end":[522,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'rwlock","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RelaxStrategy","id":"0:359:2424","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"RwLockUpgradableGuard","id":"0:406:2439","args":{"angle_bracketed":{"args":[{"lifetime":"'rwlock"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:491:3234"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:288:830":{"id":"0:288:830","crate_id":0,"name":"fmt","span":{"filename":"src/once.rs","begin":[41,4],"end":[48,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:10623:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:10604:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3095-0:191:198":{"id":"b:1:3095-0:191:198","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Mutex","id":"0:191:198","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3098:3723"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:42831:3493-0:275:2435":{"id":"a:1:42831:3493-0:275:2435","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":{"tuple":[]},"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"Spin","id":"0:361:2425","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42831:3493","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Once","id":"0:275:2435","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:255":{"id":"0:255","crate_id":0,"name":null,"span":{"filename":"src/mutex.rs","begin":[318,0],"end":[340,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"lock_api\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RelaxStrategy","id":"0:359:2424","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["is_locked"],"trait":{"name":"RawMutex","id":"4:20:2829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Mutex","id":"0:191:198","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:257:2830","0:258:2832","0:259:2612","0:260:2812","0:261:2835","0:262:2800"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:568:3264":{"id":"0:568:3264","crate_id":0,"name":"lock_exclusive","span":{"filename":"src/rwlock.rs","begin":[809,4],"end":[812,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3095-0:201:199":{"id":"b:1:3095-0:201:199","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"MutexGuard","id":"0:201:199","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:3098:3723"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:221:2821":{"id":"0:221:2821","crate_id":0,"name":"get_mut","span":{"filename":"src/mutex.rs","begin":[250,4],"end":[252,5]},"visibility":"public","docs":"Returns a mutable reference to the underlying data.\n\nSince this call borrows the [`Mutex`] mutably, and a mutable reference is guaranteed to be exclusive in Rust,\nno actual locking needs to take place -- the mutable borrow statically guarantees no locks exist. As such,\nthis is a 'zero-cost' operation.\n\n# Example\n\n```\nlet mut lock = spin::Mutex::new(0);\n*lock.get_mut() = 10;\nassert_eq!(*lock.lock(), 10);\n```","links":{"`Mutex`":"0:191:198"},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3967-0:191:198":{"id":"b:1:3967-0:191:198","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3965:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Mutex","id":"0:191:198","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3969:1872"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3099-0:275:2435":{"id":"b:1:3099-0:275:2435","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Once","id":"0:275:2435","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3101:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:447":{"id":"0:447","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[259,0],"end":[445,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"RwLock","id":"0:385:245","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:452:3154","0:453:3189","0:454:3192","0:455:3198","0:456:3205","0:458:3217","0:459:3167","0:460:2821"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:474:860":{"id":"0:474:860","crate_id":0,"name":"from","span":{"filename":"src/rwlock.rs","begin":[465,4],"end":[467,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["data",{"generic":"T"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:3322:261-0:17:2623":{"id":"a:1:3322:261-0:17:2623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BarrierWaitResult","id":"0:17:2623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:3357:3460-0:191:198":{"id":"a:1:3357:3460-0:191:198","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"Spin","id":"0:361:2425","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3357:3460","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Mutex","id":"0:191:198","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:573:3269":{"id":"0:573:3269","crate_id":0,"name":"try_lock_shared","span":{"filename":"src/rwlock.rs","begin":[836,4],"end":[839,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:33003:3463-0:89:2725":{"id":"a:1:33003:3463-0:89:2725","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:33003:3463","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:33003:3463","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:33003:3463","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinMutex","id":"0:89:2725","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:3967-0:399:247":{"id":"b:1:3967-0:399:247","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3965:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockWriteGuard","id":"0:399:247","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3969:1872"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:538":{"id":"0:538","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[741,0],"end":[748,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'rwlock","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Deref","id":"1:3558:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockWriteGuard","id":"0:399:247","args":{"angle_bracketed":{"args":[{"lifetime":"'rwlock"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:542:263","0:543:654"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:460:2821":{"id":"0:460:2821","crate_id":0,"name":"get_mut","span":{"filename":"src/rwlock.rs","begin":[440,4],"end":[444,5]},"visibility":"public","docs":"Returns a mutable reference to the underlying data.\n\nSince this call borrows the `RwLock` mutably, no actual locking needs to\ntake place -- the mutable borrow statically guarantees no locks exist.\n\n# Examples\n\n```\nlet mut lock = spin::RwLock::new(0);\n*lock.get_mut() = 10;\nassert_eq!(*lock.read(), 10);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:575:3270":{"id":"0:575:3270","crate_id":0,"name":"unlock_shared","span":{"filename":"src/rwlock.rs","begin":[842,4],"end":[847,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:499:2068":{"id":"0:499:2068","crate_id":0,"name":"leak","span":{"filename":"src/rwlock.rs","begin":[610,4],"end":[614,5]},"visibility":"public","docs":"Leak the lock guard, yielding a reference to the underlying data.\n\nNote that this function will permanently lock the original lock.\n\n```\nlet mylock = spin::RwLock::new(0);\n\nlet data: &i32 = spin::RwLockUpgradableGuard::leak(mylock.upgradeable_read());\n\nassert_eq!(*data, 0);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["this",{"generic":"Self"}]],"output":{"borrowed_ref":{"lifetime":"'rwlock","mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:3357:3460-0:406:2439":{"id":"a:1:3357:3460-0:406:2439","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3357:3460","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockUpgradableGuard","id":"0:406:2439","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:591-0:359:2424":{"id":"0:591-0:359:2424","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[97,16],"end":[97,29]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"relax::RelaxStrategy","name":"RelaxStrategy","id":"0:359:2424","glob":false}}},"0:338:3008":{"id":"0:338:3008","crate_id":0,"name":"get_unchecked","span":{"filename":"src/once.rs","begin":[416,4],"end":[423,5]},"visibility":"public","docs":"Returns a reference to the inner value on the unchecked assumption that the  [`Once`] has been initialized.\n\n# Safety\n\nThis is *extremely* unsafe if the `Once` has not already been initialized because a reference to uninitialized\nmemory will be returned, immediately triggering undefined behaviour (even if the reference goes unused).\nHowever, this can be useful in some instances for exposing the `Once` to FFI or when the overhead of atomically\nchecking initialization is unacceptable and the `Once` has already been initialized.","links":{"`Once`":"0:275:2435"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:586":{"id":"0:586","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[905,0],"end":[914,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"lock_api\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RelaxStrategy","id":"0:359:2424","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RawRwLockDowngrade","id":"4:478:3276","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLock","id":"0:385:245","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:588:3250"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:3322:261-0:10:2429":{"id":"a:1:3322:261-0:10:2429","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Barrier","id":"0:10:2429","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:42830:3494-0:385:245":{"id":"a:1:42830:3494-0:385:245","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:42830:3494","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:42830:3494","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42830:3494","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLock","id":"0:385:245","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:475":{"id":"0:475","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[470,0],"end":[488,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'rwlock","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"RwLockReadGuard","id":"0:394:246","args":{"angle_bracketed":{"args":[{"lifetime":"'rwlock"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:478:2068"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:479":{"id":"0:479","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[490,0],"end":[494,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'rwlock","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":"1:10656:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:10656:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockReadGuard","id":"0:394:246","args":{"angle_bracketed":{"args":[{"lifetime":"'rwlock"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:482:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:125:2812":{"id":"0:125:2812","crate_id":0,"name":"try_lock","span":{"filename":"src/mutex/spin.rs","begin":[237,4],"end":[252,5]},"visibility":"public","docs":"Try to lock this [`SpinMutex`], returning a lock guard if successful.\n\n# Example\n\n```\nlet lock = spin::mutex::SpinMutex::<_>::new(42);\n\nlet maybe_guard = lock.try_lock();\nassert!(maybe_guard.is_some());\n\n// `maybe_guard` is still held, so the second call fails\nlet maybe_guard2 = lock.try_lock();\nassert!(maybe_guard2.is_none());\n```","links":{"`SpinMutex`":"0:89:2725"},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:42734:206","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"SpinMutexGuard","id":"0:95:2726","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:340:3015":{"id":"0:340:3015","crate_id":0,"name":"get_mut_unchecked","span":{"filename":"src/once.rs","begin":[444,4],"end":[451,5]},"visibility":"public","docs":"Returns a mutable reference to the inner value\n\n# Safety\n\nThis is *extremely* unsafe if the `Once` has not already been initialized because a reference to uninitialized\nmemory will be returned, immediately triggering undefined behaviour (even if the reference goes unused).\nHowever, this can be useful in some instances for exposing the `Once` to FFI or when the overhead of atomically\nchecking initialization is unacceptable and the `Once` has already been initialized.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:42830:3494-0:399:247":{"id":"a:1:42830:3494-0:399:247","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"Spin","id":"0:361:2425","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42830:3494","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockWriteGuard","id":"0:399:247","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:497:3241":{"id":"0:497:3241","crate_id":0,"name":"try_upgrade","span":{"filename":"src/rwlock.rs","begin":[565,4],"end":[567,5]},"visibility":"public","docs":"Tries to upgrade an upgradeable lock guard to a writable lock guard.\n\n```\nlet mylock = spin::RwLock::new(0);\nlet upgradeable = mylock.upgradeable_read(); // Readable, but not yet writable\n\nmatch upgradeable.try_upgrade() {\n    Ok(writable) => /* upgrade successful - use writable lock guard */ (),\n    Err(upgradeable) => /* upgrade unsuccessful */ (),\n};\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"1:43002:238","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RwLockWriteGuard","id":"0:399:247","args":{"angle_bracketed":{"args":[{"lifetime":"'rwlock"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}}},{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:33003:3463-0:17:2623":{"id":"a:1:33003:3463-0:17:2623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:33003:3463","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BarrierWaitResult","id":"0:17:2623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:33003:3463-0:191:198":{"id":"a:1:33003:3463-0:191:198","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:33003:3463","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:33003:3463","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:33003:3463","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Mutex","id":"0:191:198","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:3108:150":{"id":"1:3108:150","crate_id":1,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"1:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"a:1:3357:3460-0:17:2623":{"id":"a:1:3357:3460-0:17:2623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3357:3460","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BarrierWaitResult","id":"0:17:2623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:175-0:89:2725":{"id":"0:175-0:89:2725","crate_id":0,"name":null,"span":{"filename":"src/mutex.rs","begin":[21,21],"end":[21,30]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"spin_mutex\")]"],"deprecation":null,"inner":{"import":{"source":"self::spin::SpinMutex","name":"SpinMutex","id":"0:89:2725","glob":false}}},"0:444:3001":{"id":"0:444:3001","crate_id":0,"name":"read","span":{"filename":"src/rwlock.rs","begin":[209,4],"end":[216,5]},"visibility":"public","docs":"Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.\n\nThe calling thread will be blocked until there are no more writers which\nhold the lock. There may be other readers currently inside the lock when\nthis method returns. This method does not provide any guarantees with\nrespect to the ordering of whether contentious readers or writers will\nacquire the lock first.\n\nReturns an RAII guard which will release this thread's shared access\nonce it is dropped.\n\n```\nlet mylock = spin::RwLock::new(0);\n{\n    let mut data = mylock.read();\n    // The lock is now locked and the data can be read\n    println!(\"{}\", *data);\n    // The lock is dropped\n}\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"RwLockReadGuard","id":"0:394:246","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:569:3265":{"id":"0:569:3265","crate_id":0,"name":"try_lock_exclusive","span":{"filename":"src/rwlock.rs","begin":[815,4],"end":[818,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:616:245":{"id":"0:616:245","crate_id":0,"name":"RwLock","span":{"filename":"src/lib.rs","begin":[180,4],"end":[180,70]},"visibility":"public","docs":"A lock that provides data access to either one writer or many readers (compatible with [`lock_api`](https://crates.io/crates/lock_api)).","links":{},"attrs":["#[cfg(feature = \"rwlock\")]"],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"lock_api_crate::RwLock","id":"4:510:245","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::RwLock","id":"0:602:245","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}},{"type":{"generic":"T"}}],"bindings":[]}}}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}}},"b:1:3105-0:275:2435":{"id":"b:1:3105-0:275:2435","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:3075:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Once","id":"0:275:2435","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3108:150","1:3109:1859"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:332:2993":{"id":"0:332:2993","crate_id":0,"name":"initialized","span":{"filename":"src/once.rs","begin":[355,4],"end":[361,5]},"visibility":"public","docs":"Creates a new initialized [`Once`].","links":{"`Once`":"0:275:2435"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["data",{"generic":"T"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:42831:3493-0:37:2431":{"id":"a:1:42831:3493-0:37:2431","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":{"function_pointer":{"decl":{"inputs":[],"output":{"generic":"T"},"c_variadic":false},"generic_params":[],"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"Spin","id":"0:361:2425","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42831:3493","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Lazy","id":"0:37:2431","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"F"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:205":{"id":"0:205","crate_id":0,"name":null,"span":{"filename":"src/mutex.rs","begin":[131,0],"end":[166,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Mutex","id":"0:191:198","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:208:1212","0:209:2787"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3105-0:201:199":{"id":"b:1:3105-0:201:199","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:3075:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"MutexGuard","id":"0:201:199","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:3108:150","1:3109:1859"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:42831:3493-0:385:245":{"id":"a:1:42831:3493-0:385:245","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"Spin","id":"0:361:2425","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42831:3493","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLock","id":"0:385:245","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"b:1:2793-0:385:245":{"id":"b:1:2793-0:385:245","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2787:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLock","id":"0:385:245","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2795:12148"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:23":{"id":"0:23","crate_id":0,"name":null,"span":{"filename":"src/barrier.rs","begin":[134,0],"end":[159,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Barrier","id":"0:10:2429","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:25:1212"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3095-0:406:2439":{"id":"b:1:3095-0:406:2439","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockUpgradableGuard","id":"0:406:2439","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3098:3723"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:567:2832":{"id":"0:567:2832","crate_id":0,"name":"INIT","span":{"filename":"src/rwlock.rs","begin":[806,4],"end":[806,37]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:28:2045":{"id":"0:28:2045","crate_id":0,"name":"lazy","span":{"filename":"src/lazy.rs","begin":[1,0],"end":[118,1]},"visibility":"public","docs":"Synchronization primitives for lazy evaluation.\n\nImplementation adapted from the `SyncLazy` type of the standard library. See:\n<https://doc.rust-lang.org/std/lazy/struct.SyncLazy.html>","links":{},"attrs":["#[cfg(feature = \"lazy\")]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:37:2431"],"is_stripped":false}}},"1:2795:12148":{"id":"1:2795:12148","crate_id":1,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:89:2725":{"id":"0:89:2725","crate_id":0,"name":"SpinMutex","span":{"filename":"src/mutex/spin.rs","begin":[72,0],"end":[76,1]},"visibility":"public","docs":"A [spin lock](https://en.m.wikipedia.org/wiki/Spinlock) providing mutually exclusive access to data.\n\n# Example\n\n```\nuse spin;\n\nlet lock = spin::mutex::SpinMutex::<_>::new(0);\n\n// Modify the data\n*lock.lock() = 2;\n\n// Read the data\nlet answer = *lock.lock();\nassert_eq!(answer, 2);\n```\n\n# Thread safety example\n\n```\nuse spin;\nuse std::sync::{Arc, Barrier};\n\nlet thread_count = 1000;\nlet spin_mutex = Arc::new(spin::mutex::SpinMutex::<_>::new(0));\n\n// We use a barrier to ensure the readout happens after all writing\nlet barrier = Arc::new(Barrier::new(thread_count + 1));\n\n# let mut ts = Vec::new();\nfor _ in (0..thread_count) {\n    let my_barrier = barrier.clone();\n    let my_lock = spin_mutex.clone();\n# let t =\n    std::thread::spawn(move || {\n        let mut guard = my_lock.lock();\n        *guard += 1;\n\n        // Release the lock to prevent a deadlock\n        drop(guard);\n        my_barrier.wait();\n    });\n# ts.push(t);\n}\n\nbarrier.wait();\n\nlet answer = { *spin_mutex.lock() };\nassert_eq!(answer, thread_count);\n\n# for t in ts {\n#     t.join().unwrap();\n# }\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"crate::Spin","id":"0:361:2425","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]},"impls":["0:110","0:116","0:120","a:1:3357:3460-0:89:2725","a:1:33003:3463-0:89:2725","a:1:42830:3494-0:89:2725","a:1:42831:3493-0:89:2725","b:1:2790-0:89:2725","b:1:2793-0:89:2725","b:1:3095-0:89:2725","b:1:3099-0:89:2725","b:1:3102-0:89:2725","b:1:3105-0:89:2725","b:1:3110-0:89:2725","b:1:3967-0:89:2725","0:100","0:103","0:127","0:133","0:137","0:166"]}}},"b:1:2793-0:201:199":{"id":"b:1:2793-0:201:199","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2787:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"MutexGuard","id":"0:201:199","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2795:12148"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:325:2633":{"id":"0:325:2633","crate_id":0,"name":"wait","span":{"filename":"src/once.rs","begin":[306,4],"end":[313,5]},"visibility":"public","docs":"Spins until the [`Once`] contains a value.\n\nNote that in releases prior to `0.7`, this function had the behaviour of [`Once::poll`].\n\n# Panics\n\nThis function will panic if the [`Once`] previously panicked while attempting\nto initialize. This is similar to the poisoning behaviour of `std::sync`'s\nprimitives.","links":{"`Once`":"0:275:2435","`Once::poll`":"0:326:1354"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:3357:3460-0:365:3080":{"id":"a:1:3357:3460-0:365:3080","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3357:3460","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Loop","id":"0:365:3080","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:483":{"id":"0:483","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[496,0],"end":[500,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'rwlock","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"fmt::Display","id":"1:10661:133","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"1:10661:133","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockReadGuard","id":"0:394:246","args":{"angle_bracketed":{"args":[{"lifetime":"'rwlock"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:486:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2793-0:365:3080":{"id":"b:1:2793-0:365:3080","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2787:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Loop","id":"0:365:3080","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2795:12148"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2790-0:385:245":{"id":"b:1:2790-0:385:245","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2784:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLock","id":"0:385:245","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2792:3306"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:464:830":{"id":"0:464:830","crate_id":0,"name":"fmt","span":{"filename":"src/rwlock.rs","begin":[448,4],"end":[455,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:10623:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:10604:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:198":{"id":"0:198","crate_id":0,"name":null,"span":{"filename":"src/mutex.rs","begin":[118,0],"end":[118,56]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Send","id":"1:32945:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32945:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Mutex","id":"0:191:198","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:217:2800":{"id":"0:217:2800","crate_id":0,"name":"is_locked","span":{"filename":"src/mutex.rs","begin":[199,4],"end":[201,5]},"visibility":"public","docs":"Returns `true` if the lock is currently held.\n\n# Safety\n\nThis function provides no synchronization guarantees and so its result should be considered 'out of date'\nthe instant it is called. Do not use it for synchronization purposes. However, it may be useful as a heuristic.","links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:106":{"id":"0:106","crate_id":0,"name":null,"span":{"filename":"src/mutex/spin.rs","begin":[90,0],"end":[90,63]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Sync","id":"1:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinMutexGuard","id":"0:95:2726","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3095-0:365:3080":{"id":"b:1:3095-0:365:3080","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Loop","id":"0:365:3080","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3098:3723"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:526:830":{"id":"0:526:830","crate_id":0,"name":"fmt","span":{"filename":"src/rwlock.rs","begin":[718,4],"end":[720,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:10623:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:10604:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:621:247":{"id":"0:621:247","crate_id":0,"name":"RwLockWriteGuard","span":{"filename":"src/lib.rs","begin":[190,4],"end":[190,98]},"visibility":"public","docs":"A guard that provides mutable data access (compatible with [`lock_api`](https://crates.io/crates/lock_api)).","links":{},"attrs":["#[cfg(feature = \"rwlock\")]"],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"lock_api_crate::RwLockWriteGuard","id":"4:645:247","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"resolved_path":{"name":"crate::RwLock","id":"0:602:245","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}},{"type":{"generic":"T"}}],"bindings":[]}}}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}}},"0:123:2800":{"id":"0:123:2800","crate_id":0,"name":"is_locked","span":{"filename":"src/mutex/spin.rs","begin":[206,4],"end":[208,5]},"visibility":"public","docs":"Returns `true` if the lock is currently held.\n\n# Safety\n\nThis function provides no synchronization guarantees and so its result should be considered 'out of date'\nthe instant it is called. Do not use it for synchronization purposes. However, it may be useful as a heuristic.","links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:339:2821":{"id":"0:339:2821","crate_id":0,"name":"get_mut","span":{"filename":"src/once.rs","begin":[429,4],"end":[434,5]},"visibility":"public","docs":"Returns a mutable reference to the inner value if the [`Once`] has been initialized.\n\nBecause this method requires a mutable reference to the [`Once`], no synchronization\noverhead is required to access the inner value. In effect, it is zero-cost.","links":{"`Once`":"0:275:2435"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:42734:206","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:453:3189":{"id":"0:453:3189","crate_id":0,"name":"reader_count","span":{"filename":"src/rwlock.rs","begin":[321,4],"end":[324,5]},"visibility":"public","docs":"Return the number of readers that currently hold the lock (including upgradable readers).\n\n# Safety\n\nThis function provides no synchronization guarantees and so its result should be considered 'out of date'\nthe instant it is called. Do not use it for synchronization purposes. However, it may be useful as a heuristic.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:42830:3494-0:394:246":{"id":"a:1:42830:3494-0:394:246","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:42831:3493","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42830:3494","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockReadGuard","id":"0:394:246","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:542:263":{"id":"0:542:263","crate_id":0,"name":"Target","span":{"filename":"src/rwlock.rs","begin":[742,4],"end":[742,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"b:1:2793-0:361:2425":{"id":"b:1:2793-0:361:2425","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2787:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Spin","id":"0:361:2425","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2795:12148"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2793-0:406:2439":{"id":"b:1:2793-0:406:2439","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2787:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockUpgradableGuard","id":"0:406:2439","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2795:12148"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:327":{"id":"0:327","crate_id":0,"name":null,"span":{"filename":"src/once.rs","begin":[340,0],"end":[489,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Once","id":"0:275:2435","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:330:2832","0:331:1212","0:332:2993","0:333:2702","0:337:2862","0:338:3008","0:339:2821","0:340:3015","0:341:3020","0:342:3025","0:343:3030"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:583:3234":{"id":"0:583:3234","crate_id":0,"name":"upgrade","span":{"filename":"src/rwlock.rs","begin":[881,4],"end":[888,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:42831:3493-0:191:198":{"id":"a:1:42831:3493-0:191:198","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"Spin","id":"0:361:2425","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42831:3493","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Mutex","id":"0:191:198","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:471":{"id":"0:471","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[464,0],"end":[468,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLock","id":"0:385:245","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:474:860"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:413":{"id":"0:413","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[111,0],"end":[111,57]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Send","id":"1:32945:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32945:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLock","id":"0:385:245","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3095-0:89:2725":{"id":"b:1:3095-0:89:2725","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinMutex","id":"0:89:2725","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3098:3723"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3099-0:17:2623":{"id":"b:1:3099-0:17:2623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BarrierWaitResult","id":"0:17:2623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3101:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:116":{"id":"0:116","crate_id":0,"name":null,"span":{"filename":"src/mutex/spin.rs","begin":[161,0],"end":[196,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RelaxStrategy","id":"0:359:2424","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"SpinMutex","id":"0:89:2725","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:119:2612"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3099-0:191:198":{"id":"b:1:3099-0:191:198","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Mutex","id":"0:191:198","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3101:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:3322:261-0:201:199":{"id":"a:1:3322:261-0:201:199","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"MutexGuard","id":"0:201:199","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:3102-0:275:2435":{"id":"b:1:3102-0:275:2435","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3072:157","args":{"angle_bracketed":{"args":[{"type":{"primitive":"never"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Once","id":"0:275:2435","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3104:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:3101:860":{"id":"1:3101:860","crate_id":1,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:351:696":{"id":"0:351:696","crate_id":0,"name":"drop","span":{"filename":"src/once.rs","begin":[498,4],"end":[506,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:32945:249-0:361:2425":{"id":"a:1:32945:249-0:361:2425","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32945:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Spin","id":"0:361:2425","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:579:3272":{"id":"0:579:3272","crate_id":0,"name":"lock_upgradable","span":{"filename":"src/rwlock.rs","begin":[858,4],"end":[861,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:42830:3494-0:10:2429":{"id":"a:1:42830:3494-0:10:2429","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:42830:3494","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42830:3494","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Barrier","id":"0:10:2429","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:42830:3494-0:89:2725":{"id":"a:1:42830:3494-0:89:2725","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:42830:3494","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:42830:3494","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42830:3494","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinMutex","id":"0:89:2725","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2793-0:17:2623":{"id":"b:1:2793-0:17:2623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2787:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BarrierWaitResult","id":"0:17:2623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2795:12148"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:416":{"id":"0:416","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[112,0],"end":[112,64]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Send","id":"1:32945:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"1:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLock","id":"0:385:245","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2793-0:399:247":{"id":"b:1:2793-0:399:247","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2787:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockWriteGuard","id":"0:399:247","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2795:12148"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3110-0:10:2429":{"id":"b:1:3110-0:10:2429","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Barrier","id":"0:10:2429","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3113:150","1:3114:1857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:369:2050":{"id":"0:369:2050","crate_id":0,"name":"rwlock","span":{"filename":"src/rwlock.rs","begin":[1,0],"end":[1165,1]},"visibility":"public","docs":"A lock that provides data access to either one writer or many readers.","links":{},"attrs":["#[cfg(feature = \"rwlock\")]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:385:245","0:394:246","0:399:247","0:406:2439"],"is_stripped":false}}},"0:48":{"id":"0:48","crate_id":0,"name":null,"span":{"filename":"src/lazy.rs","begin":[60,0],"end":[60,66]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:32945:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"resolved_path":{"name":"crate::once::Once","id":"0:275:2435","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Lazy","id":"0:37:2431","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2790-0:361:2425":{"id":"b:1:2790-0:361:2425","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2784:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Spin","id":"0:361:2425","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2792:3306"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:33003:3463-0:399:247":{"id":"a:1:33003:3463-0:399:247","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:33003:3463","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:33003:3463","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockWriteGuard","id":"0:399:247","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:3114:1857":{"id":"1:3114:1857","crate_id":1,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"1:43002:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"1:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:0:2455":{"id":"0:0:2455","crate_id":0,"name":"spin","span":{"filename":"src/lib.rs","begin":[1,0],"end":[221,1]},"visibility":"public","docs":"This crate provides [spin-based](https://en.wikipedia.org/wiki/Spinlock) versions of the\nprimitives in `std::sync` and `std::lazy`. Because synchronization is done through spinning,\nthe primitives are suitable for use in `no_std` environments.\n\n# Features\n\n- `Mutex`, `RwLock`, `Once`/`SyncOnceCell`, and `SyncLazy` equivalents\n\n- Support for `no_std` environments\n\n- [`lock_api`](https://crates.io/crates/lock_api) compatibility\n\n- Upgradeable `RwLock` guards\n\n- Guards can be sent and shared between threads\n\n- Guard leaking\n\n- Ticket locks\n\n- Different strategies for dealing with contention\n\n# Relationship with `std::sync`\n\nWhile `spin` is not a drop-in replacement for `std::sync` (and\n[should not be considered as such](https://matklad.github.io/2020/01/02/spinlocks-considered-harmful.html))\nan effort is made to keep this crate reasonably consistent with `std::sync`.\n\nMany of the types defined in this crate have 'additional capabilities' when compared to `std::sync`:\n\n- Because spinning does not depend on the thread-driven model of `std::sync`, guards ([`MutexGuard`],\n  [`RwLockReadGuard`], [`RwLockWriteGuard`], etc.) may be sent and shared between threads.\n\n- [`RwLockUpgradableGuard`] supports being upgraded into a [`RwLockWriteGuard`].\n\n- Guards support [leaking](https://doc.rust-lang.org/nomicon/leaking.html).\n\n- [`Once`] owns the value returned by its `call_once` initializer.\n\n- [`RwLock`] supports counting readers and writers.\n\nConversely, the types in this crate do not have some of the features `std::sync` has:\n\n- Locks do not track [panic poisoning](https://doc.rust-lang.org/nomicon/poisoning.html).\n\n## Feature flags\n\nThe crate comes with a few feature flags that you may wish to use.\n\n- `lock_api` enables support for [`lock_api`](https://crates.io/crates/lock_api)\n\n- `ticket_mutex` uses a ticket lock for the implementation of `Mutex`\n\n- `fair_mutex` enables a fairer implementation of `Mutex` that uses eventual fairness to avoid\n  starvation\n\n- `std` enables support for thread yielding instead of spinning","links":{"`RwLockWriteGuard`":"0:607:247","`MutexGuard`":"0:201:199","`RwLockUpgradableGuard`":"0:604:2439","`RwLock`":"0:602:245","`Once`":"0:600:2435","`RwLockReadGuard`":"0:394:246"},"attrs":["#![no_std]","#![deny(missing_docs)]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:5:2044","0:28:2045","0:73:2048","0:263:2049","0:358:2208","0:369:2050","0:610:2046","0:589-0:201:199","0:591-0:359:2424","0:592-0:361:2425","0:593-0:394:246","0:594:2429","0:595:2431","0:598:198","0:600:2435","0:602:245","0:604:2439","0:607:247"],"is_stripped":false}}},"b:1:3105-0:89:2725":{"id":"b:1:3105-0:89:2725","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:3075:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinMutex","id":"0:89:2725","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3108:150","1:3109:1859"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:571:3267":{"id":"0:571:3267","crate_id":0,"name":"unlock_exclusive","span":{"filename":"src/rwlock.rs","begin":[821,4],"end":[827,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:213:2612":{"id":"0:213:2612","crate_id":0,"name":"lock","span":{"filename":"src/mutex.rs","begin":[184,4],"end":[188,5]},"visibility":"public","docs":"Locks the [`Mutex`] and returns a guard that permits access to the inner data.\n\nThe returned value may be dereferenced for data access\nand the lock will be dropped when the guard falls out of scope.\n\n```\nlet lock = spin::Mutex::new(0);\n{\n    let mut data = lock.lock();\n    // The lock is now locked and the data can be accessed\n    *data += 1;\n    // The lock is implicitly dropped at the end of the scope\n}\n```","links":{"`Mutex`":"0:191:198"},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"MutexGuard","id":"0:201:199","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:61:2709":{"id":"0:61:2709","crate_id":0,"name":"force","span":{"filename":"src/lazy.rs","begin":[97,4],"end":[102,5]},"visibility":"public","docs":"Forces the evaluation of this lazy value and\nreturns a reference to result. This is equivalent\nto the `Deref` impl, but is explicit.\n\n# Examples\n\n```\nuse spin::Lazy;\n\nlet lazy = Lazy::new(|| 92);\n\nassert_eq!(Lazy::force(&lazy), &92);\nassert_eq!(&*lazy, &92);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["this",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:33003:3463-0:37:2431":{"id":"a:1:33003:3463-0:37:2431","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:33003:3463","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:33003:3463","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:33003:3463","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:33003:3463","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Lazy","id":"0:37:2431","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"F"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:3357:3460-0:394:246":{"id":"a:1:3357:3460-0:394:246","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3357:3460","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockReadGuard","id":"0:394:246","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:406:2439":{"id":"0:406:2439","crate_id":0,"name":"RwLockUpgradableGuard","span":{"filename":"src/rwlock.rs","begin":[104,0],"end":[108,1]},"visibility":"public","docs":"A guard that provides immutable data access but can be upgraded to [`RwLockWriteGuard`].\n\nNo writers or other upgradeable guards can exist while this is in scope. New reader\ncreation is prevented (to alleviate writer starvation) but there may be existing readers\nwhen the lock is acquired.\n\nWhen the guard falls out of scope it will release the lock.","links":{"`RwLockWriteGuard`":"0:399:247"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"outlives":"'a"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"crate::Spin","id":"0:361:2425","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]},"impls":["0:487","0:492","a:1:3357:3460-0:406:2439","a:1:33003:3463-0:406:2439","a:1:42830:3494-0:406:2439","a:1:42831:3493-0:406:2439","b:1:2790-0:406:2439","b:1:2793-0:406:2439","b:1:3095-0:406:2439","b:1:3099-0:406:2439","b:1:3105-0:406:2439","b:1:3110-0:406:2439","b:1:3967-0:406:2439","0:429","0:432","0:500","0:505","0:532","0:553"]}}},"0:365:3080":{"id":"0:365:3080","crate_id":0,"name":"Loop","span":{"filename":"src/relax.rs","begin":[56,0],"end":[56,16]},"visibility":"public","docs":"A strategy that rapidly spins, without telling the CPU to do any powering down.\n\nYou almost certainly do not want to use this. Use [`Spin`] instead. It exists for completeness and for targets\nthat, for some reason, miscompile or do not support spin hint intrinsics despite attempting to generate code for\nthem (i.e: this is a workaround for possible compiler bugs).","links":{"`Spin`":"0:361:2425"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":"unit","generics":{"params":[],"where_predicates":[]},"impls":["a:1:32945:249-0:365:3080","a:1:3322:261-0:365:3080","a:1:3357:3460-0:365:3080","a:1:33003:3463-0:365:3080","a:1:42830:3494-0:365:3080","a:1:42831:3493-0:365:3080","b:1:2790-0:365:3080","b:1:2793-0:365:3080","b:1:3095-0:365:3080","b:1:3099-0:365:3080","b:1:3105-0:365:3080","b:1:3110-0:365:3080","b:1:3967-0:365:3080","0:367"]}}},"1:3104:860":{"id":"1:3104:860","crate_id":1,"name":"from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"primitive":"never"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:20":{"id":"0:20","crate_id":0,"name":null,"span":{"filename":"src/barrier.rs","begin":[72,0],"end":[132,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RelaxStrategy","id":"0:359:2424","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Barrier","id":"0:10:2429","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:22:2633"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:42830:3494-0:37:2431":{"id":"a:1:42830:3494-0:37:2431","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:42830:3494","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:42830:3494","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:42830:3494","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42830:3494","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Lazy","id":"0:37:2431","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"F"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:208:1212":{"id":"0:208:1212","crate_id":0,"name":"new","span":{"filename":"src/mutex.rs","begin":[148,4],"end":[152,5]},"visibility":"public","docs":"Creates a new [`Mutex`] wrapping the supplied data.\n\n# Example\n\n```\nuse spin::Mutex;\n\nstatic MUTEX: Mutex<()> = Mutex::new(());\n\nfn demo() {\n    let lock = MUTEX.lock();\n    // do something with lock\n    drop(lock);\n}\n```","links":{"`Mutex`":"0:191:198"},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"T"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:229:60":{"id":"0:229:60","crate_id":0,"name":"default","span":{"filename":"src/mutex.rs","begin":[262,4],"end":[264,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:130:830":{"id":"0:130:830","crate_id":0,"name":"fmt","span":{"filename":"src/mutex/spin.rs","begin":[276,4],"end":[283,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:10623:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:10604:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:291":{"id":"0:291","crate_id":0,"name":null,"span":{"filename":"src/once.rs","begin":[53,0],"end":[53,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:32945:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"1:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Once","id":"0:275:2435","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:214":{"id":"0:214","crate_id":0,"name":null,"span":{"filename":"src/mutex.rs","begin":[191,0],"end":[253,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Mutex","id":"0:191:198","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:217:2800","0:218:2805","0:219:2812","0:221:2821"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:230":{"id":"0:230","crate_id":0,"name":null,"span":{"filename":"src/mutex.rs","begin":[267,0],"end":[271,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Mutex","id":"0:191:198","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:233:860"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3110-0:37:2431":{"id":"b:1:3110-0:37:2431","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Lazy","id":"0:37:2431","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"F"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3113:150","1:3114:1857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:330:2832":{"id":"0:330:2832","crate_id":0,"name":"INIT","span":{"filename":"src/once.rs","begin":[343,4],"end":[347,6]},"visibility":"public","docs":"Initialization constant of [`Once`].","links":{"`Once`":"0:275:2435"},"attrs":["#[allow(clippy::declare_interior_mutable_const)]"],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:27:2646":{"id":"0:27:2646","crate_id":0,"name":"is_leader","span":{"filename":"src/barrier.rs","begin":[178,4],"end":[180,5]},"visibility":"public","docs":"Returns whether this thread from [`wait`] is the \"leader thread\".\n\nOnly one thread will have `true` returned from their result, all other\nthreads will have `false` returned.\n\n[`wait`]: struct.Barrier.html#method.wait\n\n# Examples\n\n```\nuse spin;\n\nlet barrier = spin::Barrier::new(1);\nlet barrier_wait_result = barrier.wait();\nprintln!(\"{:?}\", barrier_wait_result.is_leader());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:22:2633":{"id":"0:22:2633","crate_id":0,"name":"wait","span":{"filename":"src/barrier.rs","begin":[110,4],"end":[131,5]},"visibility":"public","docs":"Blocks the current thread until all threads have rendezvoused here.\n\nBarriers are re-usable after all threads have rendezvoused once, and can\nbe used continuously.\n\nA single (arbitrary) thread will receive a [`BarrierWaitResult`] that\nreturns `true` from [`is_leader`] when returning from this function, and\nall other threads will receive a result that will return `false` from\n[`is_leader`].\n\n[`BarrierWaitResult`]: struct.BarrierWaitResult.html\n[`is_leader`]: struct.BarrierWaitResult.html#method.is_leader\n\n# Examples\n\n```\nuse spin;\nuse std::sync::Arc;\nuse std::thread;\n\nlet mut handles = Vec::with_capacity(10);\nlet barrier = Arc::new(spin::Barrier::new(10));\nfor _ in 0..10 {\n    let c = barrier.clone();\n    // The same messages will be printed together.\n    // You will NOT see any interleaving.\n    handles.push(thread::spawn(move|| {\n        println!(\"before wait\");\n        c.wait();\n        println!(\"after wait\");\n    }));\n}\n// Wait for other threads to finish.\nfor handle in handles {\n    handle.join().unwrap();\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"BarrierWaitResult","id":"0:17:2623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:149":{"id":"0:149","crate_id":0,"name":null,"span":{"filename":"src/mutex/spin.rs","begin":[326,0],"end":[330,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"fmt::Display","id":"1:10661:133","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"1:10661:133","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinMutexGuard","id":"0:95:2726","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:152:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:157:654":{"id":"0:157:654","crate_id":0,"name":"deref","span":{"filename":"src/mutex/spin.rs","begin":[334,4],"end":[337,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:313":{"id":"0:313","crate_id":0,"name":null,"span":{"filename":"src/once.rs","begin":[133,0],"end":[338,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RelaxStrategy","id":"0:359:2424","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Once","id":"0:275:2435","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:316:457","0:319:2960","0:325:2633","0:326:1354"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:263:2049":{"id":"0:263:2049","crate_id":0,"name":"once","span":{"filename":"src/once.rs","begin":[1,0],"end":[789,1]},"visibility":"public","docs":"Synchronization primitives for one-time evaluation.","links":{},"attrs":["#[cfg(feature = \"once\")]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:275:2435"],"is_stripped":false}}},"a:1:3322:261-0:361:2425":{"id":"a:1:3322:261-0:361:2425","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Spin","id":"0:361:2425","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:3105-0:17:2623":{"id":"b:1:3105-0:17:2623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:3075:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BarrierWaitResult","id":"0:17:2623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3108:150","1:3109:1859"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:42831:3493-0:361:2425":{"id":"a:1:42831:3493-0:361:2425","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42831:3493","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Spin","id":"0:361:2425","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:42831:3493-0:95:2726":{"id":"a:1:42831:3493-0:95:2726","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:42831:3493","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42831:3493","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinMutexGuard","id":"0:95:2726","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:3095-0:361:2425":{"id":"b:1:3095-0:361:2425","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Spin","id":"0:361:2425","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3098:3723"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:452:3154":{"id":"0:452:3154","crate_id":0,"name":"try_read","span":{"filename":"src/rwlock.rs","begin":[298,4],"end":[313,5]},"visibility":"public","docs":"Attempt to acquire this lock with shared read access.\n\nThis function will never block and will return immediately if `read`\nwould otherwise succeed. Returns `Some` of an RAII guard which will\nrelease the shared access of this thread when dropped, or `None` if the\naccess could not be granted. This method does not provide any\nguarantees with respect to the ordering of whether contentious readers\nor writers will acquire the lock first.\n\n```\nlet mylock = spin::RwLock::new(0);\n{\n    match mylock.try_read() {\n        Some(data) => {\n            // The lock is now locked and the data can be read\n            println!(\"{}\", *data);\n            // The lock is dropped\n        },\n        None => (), // no cigar\n    };\n}\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:42734:206","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RwLockReadGuard","id":"0:394:246","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3099-0:385:245":{"id":"b:1:3099-0:385:245","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLock","id":"0:385:245","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3101:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:482:830":{"id":"0:482:830","crate_id":0,"name":"fmt","span":{"filename":"src/rwlock.rs","begin":[491,4],"end":[493,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:10623:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:10604:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:486:830":{"id":"0:486:830","crate_id":0,"name":"fmt","span":{"filename":"src/rwlock.rs","begin":[497,4],"end":[499,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:10623:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:10604:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:530:263":{"id":"0:530:263","crate_id":0,"name":"Target","span":{"filename":"src/rwlock.rs","begin":[724,4],"end":[724,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:531:654":{"id":"0:531:654","crate_id":0,"name":"deref","span":{"filename":"src/rwlock.rs","begin":[726,4],"end":[729,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:516:2068":{"id":"0:516:2068","crate_id":0,"name":"leak","span":{"filename":"src/rwlock.rs","begin":[704,4],"end":[708,5]},"visibility":"public","docs":"Leak the lock guard, yielding a mutable reference to the underlying data.\n\nNote that this function will permanently lock the original lock.\n\n```\nlet mylock = spin::RwLock::new(0);\n\nlet data: &mut i32 = spin::RwLockWriteGuard::leak(mylock.write());\n\n*data = 1;\nassert_eq!(*data, 1);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["this",{"generic":"Self"}]],"output":{"borrowed_ref":{"lifetime":"'rwlock","mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:33003:3463-0:10:2429":{"id":"a:1:33003:3463-0:10:2429","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:33003:3463","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:33003:3463","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Barrier","id":"0:10:2429","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:455:3198":{"id":"0:455:3198","crate_id":0,"name":"force_read_decrement","span":{"filename":"src/rwlock.rs","begin":[347,4],"end":[350,5]},"visibility":"public","docs":"Force decrement the reader count.\n\n# Safety\n\nThis is *extremely* unsafe if there are outstanding `RwLockReadGuard`s\nlive, or if called more times than `read` has been called, but can be\nuseful in FFI contexts where the caller doesn't know how to deal with\nRAII. The underlying atomic operation uses `Ordering::Release`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:140:860":{"id":"0:140:860","crate_id":0,"name":"from","span":{"filename":"src/mutex/spin.rs","begin":[293,4],"end":[295,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["data",{"generic":"T"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:168:2830":{"id":"0:168:2830","crate_id":0,"name":"GuardMarker","span":{"filename":"src/mutex/spin.rs","begin":[356,4],"end":[356,49]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"GuardSend","id":"4:5:2831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:254:656":{"id":"0:254:656","crate_id":0,"name":"deref_mut","span":{"filename":"src/mutex.rs","begin":[312,4],"end":[314,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:588:3250":{"id":"0:588:3250","crate_id":0,"name":"downgrade","span":{"filename":"src/rwlock.rs","begin":[906,4],"end":[913,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:33003:3463-0:394:246":{"id":"a:1:33003:3463-0:394:246","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:33003:3463","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockReadGuard","id":"0:394:246","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:3095-0:394:246":{"id":"b:1:3095-0:394:246","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockReadGuard","id":"0:394:246","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:3098:3723"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:510":{"id":"0:510","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[629,0],"end":[709,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'rwlock","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"RwLockWriteGuard","id":"0:399:247","args":{"angle_bracketed":{"args":[{"lifetime":"'rwlock"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:514:3250","0:515:3260","0:516:2068"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:509:830":{"id":"0:509:830","crate_id":0,"name":"fmt","span":{"filename":"src/rwlock.rs","begin":[624,4],"end":[626,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:10623:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:10604:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:42831:3493-0:394:246":{"id":"a:1:42831:3493-0:394:246","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:42831:3493","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42831:3493","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockReadGuard","id":"0:394:246","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:42830:3494-0:201:199":{"id":"a:1:42830:3494-0:201:199","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:42831:3493","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42830:3494","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"MutexGuard","id":"0:201:199","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:3105-0:365:3080":{"id":"b:1:3105-0:365:3080","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:3075:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Loop","id":"0:365:3080","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3108:150","1:3109:1859"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2790-0:95:2726":{"id":"b:1:2790-0:95:2726","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2784:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinMutexGuard","id":"0:95:2726","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2792:3306"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:3322:261-0:365:3080":{"id":"a:1:3322:261-0:365:3080","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Loop","id":"0:365:3080","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:537:654":{"id":"0:537:654","crate_id":0,"name":"deref","span":{"filename":"src/rwlock.rs","begin":[735,4],"end":[738,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:552:696":{"id":"0:552:696","crate_id":0,"name":"drop","span":{"filename":"src/rwlock.rs","begin":[758,4],"end":[761,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:592-0:361:2425":{"id":"0:592-0:361:2425","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[97,31],"end":[97,35]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"relax::Spin","name":"Spin","id":"0:361:2425","glob":false}}},"0:275:2435":{"id":"0:275:2435","crate_id":0,"name":"Once","span":{"filename":"src/once.rs","begin":[28,0],"end":[32,1]},"visibility":"public","docs":"A primitive that provides lazy one-time initialization.\n\nUnlike its `std::sync` equivalent, this is generalized such that the closure returns a\nvalue to be stored by the [`Once`] (`std::sync::Once` can be trivially emulated with\n`Once`).\n\nBecause [`Once::new`] is `const`, this primitive may be used to safely initialize statics.\n\n# Examples\n\n```\nuse spin;\n\nstatic START: spin::Once = spin::Once::new();\n\nSTART.call_once(|| {\n    // run initialization here\n});\n```","links":{"`Once::new`":"0:331:1212","`Once`":"0:275:2435"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":{"tuple":[]},"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"crate::Spin","id":"0:361:2425","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]},"impls":["0:313","0:327","a:1:3357:3460-0:275:2435","a:1:33003:3463-0:275:2435","a:1:42830:3494-0:275:2435","a:1:42831:3493-0:275:2435","b:1:2790-0:275:2435","b:1:2793-0:275:2435","b:1:3095-0:275:2435","b:1:3099-0:275:2435","b:1:3102-0:275:2435","b:1:3105-0:275:2435","b:1:3110-0:275:2435","b:1:3967-0:275:2435","0:281","0:285","0:291","0:294","0:344","0:348"]}}},"0:461":{"id":"0:461","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[447,0],"end":[456,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":"1:10656:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:10656:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLock","id":"0:385:245","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:464:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:319:2960":{"id":"0:319:2960","crate_id":0,"name":"try_call_once","span":{"filename":"src/once.rs","begin":[208,4],"end":[214,5]},"visibility":"public","docs":"This method is similar to `call_once`, but allows the given closure to\nfail, and lets the `Once` in a uninitialized state if it does.\n\nThis method will block the calling thread if another initialization\nroutine is currently running.\n\nWhen this function returns without error, it is guaranteed that some\ninitialization has run and completed (it may not be the closure\nspecified). The returned reference will point to the result from the\nclosure that was run.\n\n# Panics\n\nThis function will panic if the [`Once`] previously panicked while attempting\nto initialize. This is similar to the poisoning behaviour of `std::sync`'s\nprimitives.\n\n# Examples\n\n```\nuse spin;\n\nstatic INIT: spin::Once<usize> = spin::Once::new();\n\nfn get_cached_val() -> Result<usize, String> {\n    INIT.try_call_once(expensive_fallible_computation).map(|x| *x)\n}\n\nfn expensive_fallible_computation() -> Result<usize, String> {\n    // ...\n# Ok(2)\n}\n```","links":{"`Once`":"0:275:2435"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"generic":"F"}]],"output":{"resolved_path":{"name":"Result","id":"1:43002:238","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}}},{"type":{"generic":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"1:3599:155","args":{"parenthesized":{"inputs":[],"output":{"resolved_path":{"name":"Result","id":"1:43002:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"E"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:582:3274":{"id":"0:582:3274","crate_id":0,"name":"unlock_upgradable","span":{"filename":"src/rwlock.rs","begin":[872,4],"end":[878,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3110-0:365:3080":{"id":"b:1:3110-0:365:3080","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Loop","id":"0:365:3080","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3113:150","1:3114:1857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:500":{"id":"0:500","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[617,0],"end":[621,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'rwlock","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":"1:10656:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:10656:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockUpgradableGuard","id":"0:406:2439","args":{"angle_bracketed":{"args":[{"lifetime":"'rwlock"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:504:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3095-0:37:2431":{"id":"b:1:3095-0:37:2431","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Lazy","id":"0:37:2431","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"F"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3098:3723"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3105-0:385:245":{"id":"b:1:3105-0:385:245","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:3075:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLock","id":"0:385:245","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3108:150","1:3109:1859"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:429":{"id":"0:429","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[120,0],"end":[120,83]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Send","id":"1:32945:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"1:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32945:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockUpgradableGuard","id":"0:406:2439","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:613:199":{"id":"0:613:199","crate_id":0,"name":"MutexGuard","span":{"filename":"src/lib.rs","begin":[175,4],"end":[175,85]},"visibility":"public","docs":"A guard that provides mutable data access (compatible with [`lock_api`](https://crates.io/crates/lock_api)).","links":{},"attrs":["#[cfg(feature = \"mutex\")]"],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"lock_api_crate::MutexGuard","id":"4:91:199","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"resolved_path":{"name":"crate::Mutex","id":"0:598:198","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}},{"type":{"generic":"T"}}],"bindings":[]}}}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}}},"a:1:42831:3493-0:406:2439":{"id":"a:1:42831:3493-0:406:2439","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"Spin","id":"0:361:2425","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42831:3493","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockUpgradableGuard","id":"0:406:2439","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:219:2812":{"id":"0:219:2812","crate_id":0,"name":"try_lock","span":{"filename":"src/mutex.rs","begin":[230,4],"end":[234,5]},"visibility":"public","docs":"Try to lock this [`Mutex`], returning a lock guard if successful.\n\n# Example\n\n```\nlet lock = spin::Mutex::new(42);\n\nlet maybe_guard = lock.try_lock();\nassert!(maybe_guard.is_some());\n\n// `maybe_guard` is still held, so the second call fails\nlet maybe_guard2 = lock.try_lock();\nassert!(maybe_guard2.is_none());\n```","links":{"`Mutex`":"0:191:198"},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:42734:206","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"MutexGuard","id":"0:201:199","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3110-0:17:2623":{"id":"b:1:3110-0:17:2623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BarrierWaitResult","id":"0:17:2623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3113:150","1:3114:1857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:114:2787":{"id":"0:114:2787","crate_id":0,"name":"into_inner","span":{"filename":"src/mutex/spin.rs","begin":[127,4],"end":[132,5]},"visibility":"public","docs":"Consumes this [`SpinMutex`] and unwraps the underlying data.\n\n# Example\n\n```\nlet lock = spin::mutex::SpinMutex::<_>::new(42);\nassert_eq!(42, lock.into_inner());\n```","links":{"`SpinMutex`":"0:89:2725"},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:161:656":{"id":"0:161:656","crate_id":0,"name":"deref_mut","span":{"filename":"src/mutex/spin.rs","begin":[341,4],"end":[344,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3102-0:191:198":{"id":"b:1:3102-0:191:198","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3072:157","args":{"angle_bracketed":{"args":[{"type":{"primitive":"never"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Mutex","id":"0:191:198","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3104:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:249:263":{"id":"0:249:263","crate_id":0,"name":"Target","span":{"filename":"src/mutex.rs","begin":[305,4],"end":[305,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:210":{"id":"0:210","crate_id":0,"name":null,"span":{"filename":"src/mutex.rs","begin":[168,0],"end":[189,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RelaxStrategy","id":"0:359:2424","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Mutex","id":"0:191:198","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:213:2612"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:234":{"id":"0:234","crate_id":0,"name":null,"span":{"filename":"src/mutex.rs","begin":[273,0],"end":[290,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"MutexGuard","id":"0:201:199","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:237:2068"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3105-0:95:2726":{"id":"b:1:3105-0:95:2726","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:3075:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinMutexGuard","id":"0:95:2726","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:3108:150","1:3109:1859"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:156:263":{"id":"0:156:263","crate_id":0,"name":"Target","span":{"filename":"src/mutex/spin.rs","begin":[333,4],"end":[333,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:238":{"id":"0:238","crate_id":0,"name":null,"span":{"filename":"src/mutex.rs","begin":[292,0],"end":[296,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":"1:10656:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:10656:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"MutexGuard","id":"0:201:199","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:241:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:42831:3493-0:365:3080":{"id":"a:1:42831:3493-0:365:3080","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42831:3493","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Loop","id":"0:365:3080","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:3969:1872":{"id":"1:3969:1872","crate_id":1,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"1:40446:4723","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3105-0:37:2431":{"id":"b:1:3105-0:37:2431","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:3075:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Lazy","id":"0:37:2431","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"F"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3108:150","1:3109:1859"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:3357:3460-0:89:2725":{"id":"a:1:3357:3460-0:89:2725","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"Spin","id":"0:361:2425","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3357:3460","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinMutex","id":"0:89:2725","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:201:199":{"id":"0:201:199","crate_id":0,"name":"MutexGuard","span":{"filename":"src/mutex.rs","begin":[127,0],"end":[129,1]},"visibility":"public","docs":"A generic guard that will protect some data access and\nuses either a ticket lock or a normal spin mutex.\n\nFor more info see [`TicketMutexGuard`] or [`SpinMutexGuard`].\n\n[`TicketMutexGuard`]: ./struct.TicketMutexGuard.html\n[`SpinMutexGuard`]: ./struct.SpinMutexGuard.html","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"outlives":"'a"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:234","a:1:32945:249-0:201:199","a:1:3322:261-0:201:199","a:1:3357:3460-0:201:199","a:1:33003:3463-0:201:199","a:1:42830:3494-0:201:199","a:1:42831:3493-0:201:199","b:1:2790-0:201:199","b:1:2793-0:201:199","b:1:3095-0:201:199","b:1:3099-0:201:199","b:1:3105-0:201:199","b:1:3110-0:201:199","b:1:3967-0:201:199","0:238","0:242","0:246","0:251"]}}},"b:1:3099-0:394:246":{"id":"b:1:3099-0:394:246","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockReadGuard","id":"0:394:246","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:3101:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:47:830":{"id":"0:47:830","crate_id":0,"name":"fmt","span":{"filename":"src/lazy.rs","begin":[47,4],"end":[52,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:10623:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:10604:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:56:2702":{"id":"0:56:2702","crate_id":0,"name":"as_mut_ptr","span":{"filename":"src/lazy.rs","begin":[77,4],"end":[79,5]},"visibility":"public","docs":"Retrieves a mutable pointer to the inner data.\n\nThis is especially useful when interfacing with low level code or FFI where the caller\nexplicitly knows that it has exclusive access to the inner data. Note that reading from\nthis pointer is UB until initialized or directly written to.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:316:457":{"id":"0:316:457","crate_id":0,"name":"call_once","span":{"filename":"src/once.rs","begin":[168,4],"end":[173,5]},"visibility":"public","docs":"Performs an initialization routine once and only once. The given closure\nwill be executed if this is the first time `call_once` has been called,\nand otherwise the routine will *not* be invoked.\n\nThis method will block the calling thread if another initialization\nroutine is currently running.\n\nWhen this function returns, it is guaranteed that some initialization\nhas run and completed (it may not be the closure specified). The\nreturned pointer will point to the result from the closure that was\nrun.\n\n# Panics\n\nThis function will panic if the [`Once`] previously panicked while attempting\nto initialize. This is similar to the poisoning behaviour of `std::sync`'s\nprimitives.\n\n# Examples\n\n```\nuse spin;\n\nstatic INIT: spin::Once<usize> = spin::Once::new();\n\nfn get_cached_val() -> usize {\n    *INIT.call_once(expensive_computation)\n}\n\nfn expensive_computation() -> usize {\n    // ...\n# 2\n}\n```","links":{"`Once`":"0:275:2435"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"generic":"F"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"1:3599:155","args":{"parenthesized":{"inputs":[],"output":{"generic":"T"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2793-0:275:2435":{"id":"b:1:2793-0:275:2435","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2787:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Once","id":"0:275:2435","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2795:12148"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2790-0:89:2725":{"id":"b:1:2790-0:89:2725","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2784:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinMutex","id":"0:89:2725","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2792:3306"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3095-0:275:2435":{"id":"b:1:3095-0:275:2435","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Once","id":"0:275:2435","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3098:3723"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3967-0:275:2435":{"id":"b:1:3967-0:275:2435","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3965:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Once","id":"0:275:2435","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3969:1872"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3099-0:365:3080":{"id":"b:1:3099-0:365:3080","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Loop","id":"0:365:3080","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3101:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:584:3241":{"id":"0:584:3241","crate_id":0,"name":"try_upgrade","span":{"filename":"src/rwlock.rs","begin":[891,4],"end":[901,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:343:3030":{"id":"0:343:3030","crate_id":0,"name":"is_completed","span":{"filename":"src/once.rs","begin":[485,4],"end":[488,5]},"visibility":"public","docs":"Checks whether the value has been initialized.\n\nThis is done using [`Acquire`](core::sync::atomic::Ordering::Acquire) ordering, and\ntherefore it is safe to access the value directly via\n[`get_unchecked`](Self::get_unchecked) if this returns true.","links":{"core::sync::atomic::Ordering::Acquire":"1:43077:70","Self::get_unchecked":"0:338:3008"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:3357:3460-0:201:199":{"id":"a:1:3357:3460-0:201:199","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3357:3460","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"MutexGuard","id":"0:201:199","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2793-0:10:2429":{"id":"b:1:2793-0:10:2429","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2787:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Barrier","id":"0:10:2429","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2795:12148"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3099-0:361:2425":{"id":"b:1:3099-0:361:2425","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Spin","id":"0:361:2425","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3101:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:3322:261-0:37:2431":{"id":"a:1:3322:261-0:37:2431","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":{"function_pointer":{"decl":{"inputs":[],"output":{"generic":"T"},"c_variadic":false},"generic_params":[],"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"Spin","id":"0:361:2425","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Lazy","id":"0:37:2431","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"F"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:566:2830":{"id":"0:566:2830","crate_id":0,"name":"GuardMarker","span":{"filename":"src/rwlock.rs","begin":[804,4],"end":[804,49]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"GuardSend","id":"4:5:2831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:43":{"id":"0:43","crate_id":0,"name":null,"span":{"filename":"src/lazy.rs","begin":[46,0],"end":[53,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"1:10656:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:10656:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Lazy","id":"0:37:2431","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"F"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:47:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2793-0:37:2431":{"id":"b:1:2793-0:37:2431","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2787:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Lazy","id":"0:37:2431","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"F"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2795:12148"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:262:2800":{"id":"0:262:2800","crate_id":0,"name":"is_locked","span":{"filename":"src/mutex.rs","begin":[337,4],"end":[339,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:572:3268":{"id":"0:572:3268","crate_id":0,"name":"lock_shared","span":{"filename":"src/rwlock.rs","begin":[830,4],"end":[833,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2793-0:394:246":{"id":"b:1:2793-0:394:246","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2787:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockReadGuard","id":"0:394:246","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2795:12148"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:25:1212":{"id":"0:25:1212","crate_id":0,"name":"new","span":{"filename":"src/barrier.rs","begin":[150,4],"end":[158,5]},"visibility":"public","docs":"Creates a new barrier that can block a given number of threads.\n\nA barrier will block `n`-1 threads which call [`wait`] and then wake up\nall threads at once when the `n`th thread calls [`wait`]. A Barrier created\nwith n = 0 will behave identically to one created with n = 1.\n\n[`wait`]: #method.wait\n\n# Examples\n\n```\nuse spin;\n\nlet barrier = spin::Barrier::new(10);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["n",{"primitive":"usize"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:337:2862":{"id":"0:337:2862","crate_id":0,"name":"get","span":{"filename":"src/once.rs","begin":[399,4],"end":[406,5]},"visibility":"public","docs":"Returns a reference to the inner value if the [`Once`] has been initialized.","links":{"`Once`":"0:275:2435"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:42734:206","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:218:2805":{"id":"0:218:2805","crate_id":0,"name":"force_unlock","span":{"filename":"src/mutex.rs","begin":[211,4],"end":[213,5]},"visibility":"public","docs":"Force unlock this [`Mutex`].\n\n# Safety\n\nThis is *extremely* unsafe if the lock is not held by the current\nthread. However, this can be useful in some instances for exposing the\nlock to FFI that doesn't know how to deal with RAII.","links":{"`Mutex`":"0:191:198"},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3967-0:394:246":{"id":"b:1:3967-0:394:246","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3965:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockReadGuard","id":"0:394:246","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:3969:1872"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:33003:3463-0:385:245":{"id":"a:1:33003:3463-0:385:245","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:33003:3463","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:33003:3463","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:33003:3463","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLock","id":"0:385:245","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:3105-0:399:247":{"id":"b:1:3105-0:399:247","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:3075:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockWriteGuard","id":"0:399:247","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3108:150","1:3109:1859"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:618:246":{"id":"0:618:246","crate_id":0,"name":"RwLockReadGuard","span":{"filename":"src/lib.rs","begin":[185,4],"end":[185,96]},"visibility":"public","docs":"A guard that provides immutable data access (compatible with [`lock_api`](https://crates.io/crates/lock_api)).","links":{},"attrs":["#[cfg(feature = \"rwlock\")]"],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"lock_api_crate::RwLockReadGuard","id":"4:595:246","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"resolved_path":{"name":"crate::RwLock","id":"0:602:245","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}},{"type":{"generic":"T"}}],"bindings":[]}}}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}}},"a:1:32945:249-0:201:199":{"id":"a:1:32945:249-0:201:199","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:32945:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32945:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"MutexGuard","id":"0:201:199","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:169:2832":{"id":"0:169:2832","crate_id":0,"name":"INIT","span":{"filename":"src/mutex/spin.rs","begin":[358,4],"end":[358,37]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:237:2068":{"id":"0:237:2068","crate_id":0,"name":"leak","span":{"filename":"src/mutex.rs","begin":[287,4],"end":[289,5]},"visibility":"public","docs":"Leak the lock guard, yielding a mutable reference to the underlying data.\n\nNote that this function will permanently lock the original [`Mutex`].\n\n```\nlet mylock = spin::Mutex::new(0);\n\nlet data: &mut i32 = spin::MutexGuard::leak(mylock.lock());\n\n*data = 1;\nassert_eq!(*data, 1);\n```","links":{"`Mutex`":"0:191:198"},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["this",{"generic":"Self"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3105-0:394:246":{"id":"b:1:3105-0:394:246","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:3075:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockReadGuard","id":"0:394:246","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:3108:150","1:3109:1859"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:33003:3463-0:361:2425":{"id":"a:1:33003:3463-0:361:2425","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:33003:3463","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Spin","id":"0:361:2425","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:344":{"id":"0:344","crate_id":0,"name":null,"span":{"filename":"src/once.rs","begin":[491,0],"end":[495,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Once","id":"0:275:2435","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:347:860"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:67:263":{"id":"0:67:263","crate_id":0,"name":"Target","span":{"filename":"src/lazy.rs","begin":[106,4],"end":[106,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:69":{"id":"0:69","crate_id":0,"name":null,"span":{"filename":"src/lazy.rs","begin":[113,0],"end":[118,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"1:3147:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"1:3147:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Lazy","id":"0:37:2431","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"function_pointer":{"decl":{"inputs":[],"output":{"generic":"T"},"c_variadic":false},"generic_params":[],"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:72:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:341:3020":{"id":"0:341:3020","crate_id":0,"name":"try_into_inner","span":{"filename":"src/once.rs","begin":[457,4],"end":[462,5]},"visibility":"public","docs":"Returns a the inner value if the [`Once`] has been initialized.\n\nBecause this method requires ownership of the [`Once`], no synchronization overhead\nis required to access the inner value. In effect, it is zero-cost.","links":{"`Once`":"0:275:2435"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Option","id":"1:42734:206","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:333:2702":{"id":"0:333:2702","crate_id":0,"name":"as_mut_ptr","span":{"filename":"src/once.rs","begin":[368,4],"end":[372,5]},"visibility":"public","docs":"Retrieve a pointer to the inner data.\n\nWhile this method itself is safe, accessing the pointer before the [`Once`] has been\ninitialized is UB, unless this method has already been written to from a pointer coming\nfrom this method.","links":{"`Once`":"0:275:2435"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:580:3273":{"id":"0:580:3273","crate_id":0,"name":"try_lock_upgradable","span":{"filename":"src/rwlock.rs","begin":[864,4],"end":[869,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:162":{"id":"0:162","crate_id":0,"name":null,"span":{"filename":"src/mutex/spin.rs","begin":[347,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Drop","id":"1:3587:2451","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinMutexGuard","id":"0:95:2726","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:165:696"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:245:830":{"id":"0:245:830","crate_id":0,"name":"fmt","span":{"filename":"src/mutex.rs","begin":[299,4],"end":[301,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:10623:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:10604:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3105-0:361:2425":{"id":"b:1:3105-0:361:2425","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:3075:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Spin","id":"0:361:2425","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3108:150","1:3109:1859"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:33003:3463-0:365:3080":{"id":"a:1:33003:3463-0:365:3080","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:33003:3463","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Loop","id":"0:365:3080","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:544":{"id":"0:544","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[750,0],"end":[755,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'rwlock","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"DerefMut","id":"1:3571:2734","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockWriteGuard","id":"0:399:247","args":{"angle_bracketed":{"args":[{"lifetime":"'rwlock"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:548:656"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:515:3260":{"id":"0:515:3260","crate_id":0,"name":"downgrade_to_upgradeable","span":{"filename":"src/rwlock.rs","begin":[670,4],"end":[689,5]},"visibility":"public","docs":"Downgrades the writable lock guard to an upgradable, shared lock guard. Cannot fail and is guaranteed not to spin.\n\n```\nlet mylock = spin::RwLock::new(0);\n\nlet mut writable = mylock.write();\n*writable = 1;\n\nlet readable = writable.downgrade_to_upgradeable(); // This is guaranteed not to spin\nassert_eq!(*readable, 1);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"RwLockUpgradableGuard","id":"0:406:2439","args":{"angle_bracketed":{"args":[{"lifetime":"'rwlock"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:399:247":{"id":"0:399:247","crate_id":0,"name":"RwLockWriteGuard","span":{"filename":"src/rwlock.rs","begin":[91,0],"end":[95,1]},"visibility":"public","docs":"A guard that provides mutable data access.\n\nWhen the guard falls out of scope it will release the lock.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"outlives":"'a"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"crate::Spin","id":"0:361:2425","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]},"impls":["0:510","a:1:3357:3460-0:399:247","a:1:33003:3463-0:399:247","a:1:42830:3494-0:399:247","a:1:42831:3493-0:399:247","b:1:2790-0:399:247","b:1:2793-0:399:247","b:1:3095-0:399:247","b:1:3099-0:399:247","b:1:3105-0:399:247","b:1:3110-0:399:247","b:1:3967-0:399:247","0:419","0:422","0:517","0:522","0:538","0:544","0:558"]}}},"a:1:42830:3494-0:365:3080":{"id":"a:1:42830:3494-0:365:3080","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42830:3494","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Loop","id":"0:365:3080","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:445:2872":{"id":"0:445:2872","crate_id":0,"name":"write","span":{"filename":"src/rwlock.rs","begin":[237,4],"end":[244,5]},"visibility":"public","docs":"Lock this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.\n\nThis function will not return while other writers or other readers\ncurrently have access to the lock.\n\nReturns an RAII guard which will drop the write access of this rwlock\nwhen dropped.\n\n```\nlet mylock = spin::RwLock::new(0);\n{\n    let mut data = mylock.write();\n    // The lock is now locked and the data can be written\n    *data += 1;\n    // The lock is dropped\n}\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"RwLockWriteGuard","id":"0:399:247","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:3357:3460-0:361:2425":{"id":"a:1:3357:3460-0:361:2425","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3357:3460","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Spin","id":"0:361:2425","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2793-0:89:2725":{"id":"b:1:2793-0:89:2725","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2787:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinMutex","id":"0:89:2725","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2795:12148"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:363":{"id":"0:363","crate_id":0,"name":null,"span":{"filename":"src/relax.rs","begin":[23,0],"end":[31,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RelaxStrategy","id":"0:359:2424","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Spin","id":"0:361:2425","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:364:2208"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:331:1212":{"id":"0:331:1212","crate_id":0,"name":"new","span":{"filename":"src/once.rs","begin":[350,4],"end":[352,5]},"visibility":"public","docs":"Creates a new [`Once`].","links":{"`Once`":"0:275:2435"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2793-0:191:198":{"id":"b:1:2793-0:191:198","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2787:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Mutex","id":"0:191:198","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2795:12148"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:233:860":{"id":"0:233:860","crate_id":0,"name":"from","span":{"filename":"src/mutex.rs","begin":[268,4],"end":[270,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["data",{"generic":"T"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:32945:249-0:10:2429":{"id":"a:1:32945:249-0:10:2429","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32945:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Barrier","id":"0:10:2429","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:360:2208":{"id":"0:360:2208","crate_id":0,"name":"relax","span":{"filename":"src/relax.rs","begin":[6,4],"end":[6,15]},"visibility":"default","docs":"Perform the relaxing operation during a period of contention.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"b:1:2793-0:95:2726":{"id":"b:1:2793-0:95:2726","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2787:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinMutexGuard","id":"0:95:2726","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2795:12148"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:364:2208":{"id":"0:364:2208","crate_id":0,"name":"relax","span":{"filename":"src/relax.rs","begin":[25,4],"end":[30,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3102-0:385:245":{"id":"b:1:3102-0:385:245","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3072:157","args":{"angle_bracketed":{"args":[{"type":{"primitive":"never"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLock","id":"0:385:245","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3104:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:42830:3494-0:406:2439":{"id":"a:1:42830:3494-0:406:2439","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"Spin","id":"0:361:2425","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42830:3494","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockUpgradableGuard","id":"0:406:2439","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:10:2429":{"id":"0:10:2429","crate_id":0,"name":"Barrier","span":{"filename":"src/barrier.rs","begin":[45,0],"end":[48,1]},"visibility":"public","docs":"A primitive that synchronizes the execution of multiple threads.\n\n# Example\n\n```\nuse spin;\nuse std::sync::Arc;\nuse std::thread;\n\nlet mut handles = Vec::with_capacity(10);\nlet barrier = Arc::new(spin::Barrier::new(10));\nfor _ in 0..10 {\n    let c = barrier.clone();\n    // The same messages will be printed together.\n    // You will NOT see any interleaving.\n    handles.push(thread::spawn(move|| {\n        println!(\"before wait\");\n        c.wait();\n        println!(\"after wait\");\n    }));\n}\n// Wait for other threads to finish.\nfor handle in handles {\n    handle.join().unwrap();\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"crate::Spin","id":"0:361:2425","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]},"impls":["0:20","0:23","a:1:32945:249-0:10:2429","a:1:3322:261-0:10:2429","a:1:3357:3460-0:10:2429","a:1:33003:3463-0:10:2429","a:1:42830:3494-0:10:2429","a:1:42831:3493-0:10:2429","b:1:2790-0:10:2429","b:1:2793-0:10:2429","b:1:3095-0:10:2429","b:1:3099-0:10:2429","b:1:3105-0:10:2429","b:1:3110-0:10:2429","b:1:3967-0:10:2429"]}}},"a:1:42831:3493-0:17:2623":{"id":"a:1:42831:3493-0:17:2623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42831:3493","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BarrierWaitResult","id":"0:17:2623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:51":{"id":"0:51","crate_id":0,"name":null,"span":{"filename":"src/lazy.rs","begin":[63,0],"end":[80,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Lazy","id":"0:37:2431","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"F"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:55:1212","0:56:2702"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2790-0:191:198":{"id":"b:1:2790-0:191:198","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2784:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Mutex","id":"0:191:198","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2792:3306"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3110-0:385:245":{"id":"b:1:3110-0:385:245","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLock","id":"0:385:245","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3113:150","1:3114:1857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:110":{"id":"0:110","crate_id":0,"name":null,"span":{"filename":"src/mutex/spin.rs","begin":[93,0],"end":[159,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"SpinMutex","id":"0:89:2725","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:113:1212","0:114:2787","0:115:2702"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:576:2800":{"id":"0:576:2800","crate_id":0,"name":"is_locked","span":{"filename":"src/rwlock.rs","begin":[850,4],"end":[852,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3099-0:406:2439":{"id":"b:1:3099-0:406:2439","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockUpgradableGuard","id":"0:406:2439","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3101:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:285":{"id":"0:285","crate_id":0,"name":null,"span":{"filename":"src/once.rs","begin":[40,0],"end":[49,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"1:10656:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:10656:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Once","id":"0:275:2435","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:288:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:394:246":{"id":"0:394:246","crate_id":0,"name":"RwLockReadGuard","span":{"filename":"src/rwlock.rs","begin":[83,0],"end":[86,1]},"visibility":"public","docs":"A guard that provides immutable data access.\n\nWhen the guard falls out of scope it will decrement the read count,\npotentially releasing the lock.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"outlives":"'a"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:475","a:1:3357:3460-0:394:246","a:1:33003:3463-0:394:246","a:1:42830:3494-0:394:246","a:1:42831:3493-0:394:246","b:1:2790-0:394:246","b:1:2793-0:394:246","b:1:3095-0:394:246","b:1:3099-0:394:246","b:1:3105-0:394:246","b:1:3110-0:394:246","b:1:3967-0:394:246","0:425","0:427","0:479","0:483","0:527","0:549"]}}},"0:624:2448":{"id":"0:624:2448","crate_id":0,"name":"RwLockUpgradableReadGuard","span":{"filename":"src/lib.rs","begin":[195,4],"end":[196,76]},"visibility":"public","docs":"A guard that provides immutable data access but can be upgraded to [`RwLockWriteGuard`] (compatible with [`lock_api`](https://crates.io/crates/lock_api)).","links":{"`RwLockWriteGuard`":"0:621:247"},"attrs":["#[cfg(feature = \"rwlock\")]"],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"lock_api_crate::RwLockUpgradableReadGuard","id":"4:710:2448","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"resolved_path":{"name":"crate::RwLock","id":"0:602:245","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}},{"type":{"generic":"T"}}],"bindings":[]}}}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}}},"0:593-0:394:246":{"id":"0:593-0:394:246","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[100,0],"end":[100,32]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"rwlock\")]"],"deprecation":null,"inner":{"import":{"source":"rwlock::RwLockReadGuard","name":"RwLockReadGuard","id":"0:394:246","glob":false}}},"0:521:830":{"id":"0:521:830","crate_id":0,"name":"fmt","span":{"filename":"src/rwlock.rs","begin":[712,4],"end":[714,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:10623:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:10604:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:598:198":{"id":"0:598:198","crate_id":0,"name":"Mutex","span":{"filename":"src/lib.rs","begin":[128,0],"end":[128,43]},"visibility":"public","docs":"A primitive that synchronizes the execution of multiple threads. See [`mutex::Mutex`] for documentation.\n\nA note for advanced users: this alias exists to avoid subtle type inference errors due to the default relax\nstrategy type parameter. If you need a non-default relax strategy, use the fully-qualified path.","links":{"`mutex::Mutex`":"0:191:198"},"attrs":["#[cfg(feature = \"mutex\")]"],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"crate::mutex::Mutex","id":"0:191:198","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}}},"0:604:2439":{"id":"0:604:2439","crate_id":0,"name":"RwLockUpgradableGuard","span":{"filename":"src/lib.rs","begin":[153,0],"end":[153,84]},"visibility":"public","docs":"A guard that provides immutable data access but can be upgraded to [`RwLockWriteGuard`]. See\n[`rwlock::RwLockUpgradableGuard`] for documentation.\n\nA note for advanced users: this alias exists to avoid subtle type inference errors due to the default relax\nstrategy type parameter. If you need a non-default relax strategy, use the fully-qualified path.","links":{"`RwLockWriteGuard`":"0:607:247","`rwlock::RwLockUpgradableGuard`":"0:406:2439"},"attrs":["#[cfg(feature = \"rwlock\")]"],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"crate::rwlock::RwLockUpgradableGuard","id":"0:406:2439","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}}},"0:368:2208":{"id":"0:368:2208","crate_id":0,"name":"relax","span":{"filename":"src/relax.rs","begin":[60,4],"end":[60,17]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:152:830":{"id":"0:152:830","crate_id":0,"name":"fmt","span":{"filename":"src/mutex/spin.rs","begin":[327,4],"end":[329,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:10623:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:10604:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:385:245":{"id":"0:385:245","crate_id":0,"name":"RwLock","span":{"filename":"src/rwlock.rs","begin":[69,0],"end":[73,1]},"visibility":"public","docs":"A lock that provides data access to either one writer or many readers.\n\nThis lock behaves in a similar manner to its namesake `std::sync::RwLock` but uses\nspinning for synchronisation instead. Unlike its namespace, this lock does not\ntrack lock poisoning.\n\nThis type of lock allows a number of readers or at most one writer at any\npoint in time. The write portion of this lock typically allows modification\nof the underlying data (exclusive access) and the read portion of this lock\ntypically allows for read-only access (shared access).\n\nThe type parameter `T` represents the data that this lock protects. It is\nrequired that `T` satisfies `Send` to be shared across tasks and `Sync` to\nallow concurrent access through readers. The RAII guards returned from the\nlocking methods implement `Deref` (and `DerefMut` for the `write` methods)\nto allow access to the contained of the lock.\n\nAn [`RwLockUpgradableGuard`](RwLockUpgradableGuard) can be upgraded to a\nwritable guard through the [`RwLockUpgradableGuard::upgrade`](RwLockUpgradableGuard::upgrade)\n[`RwLockUpgradableGuard::try_upgrade`](RwLockUpgradableGuard::try_upgrade) functions.\nWritable or upgradeable guards can be downgraded through their respective `downgrade`\nfunctions.\n\nBased on Facebook's\n[`folly/RWSpinLock.h`](https://github.com/facebook/folly/blob/a0394d84f2d5c3e50ebfd0566f9d3acb52cfab5a/folly/synchronization/RWSpinLock.h).\nThis implementation is unfair to writers - if the lock always has readers, then no writers will\never get a chance. Using an upgradeable lock guard can *somewhat* alleviate this issue as no\nnew readers are allowed when an upgradeable guard is held, but upgradeable guards can be taken\nwhen there are existing readers. However if the lock is that highly contended and writes are\ncrucial then this implementation may be a poor choice.\n\n# Examples\n\n```\nuse spin;\n\nlet lock = spin::RwLock::new(5);\n\n// many reader locks can be held at once\n{\n    let r1 = lock.read();\n    let r2 = lock.read();\n    assert_eq!(*r1, 5);\n    assert_eq!(*r2, 5);\n} // read locks are dropped at this point\n\n// only one write lock may be held, however\n{\n    let mut w = lock.write();\n    *w += 1;\n    assert_eq!(*w, 6);\n} // write lock is dropped here\n```","links":{"RwLockUpgradableGuard":"0:406:2439","RwLockUpgradableGuard::upgrade":"0:491:3234","RwLockUpgradableGuard::try_upgrade":"0:497:3241"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"crate::Spin","id":"0:361:2425","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]},"impls":["0:435","0:441","0:447","a:1:3357:3460-0:385:245","a:1:33003:3463-0:385:245","a:1:42830:3494-0:385:245","a:1:42831:3493-0:385:245","b:1:2790-0:385:245","b:1:2793-0:385:245","b:1:3095-0:385:245","b:1:3099-0:385:245","b:1:3102-0:385:245","b:1:3105-0:385:245","b:1:3110-0:385:245","b:1:3967-0:385:245","0:413","0:416","0:461","0:467","0:471","0:564","0:577","0:586"]}}},"0:126:2821":{"id":"0:126:2821","crate_id":0,"name":"get_mut","span":{"filename":"src/mutex/spin.rs","begin":[268,4],"end":[272,5]},"visibility":"public","docs":"Returns a mutable reference to the underlying data.\n\nSince this call borrows the [`SpinMutex`] mutably, and a mutable reference is guaranteed to be exclusive in\nRust, no actual locking needs to take place -- the mutable borrow statically guarantees no locks exist. As\nsuch, this is a 'zero-cost' operation.\n\n# Example\n\n```\nlet mut lock = spin::mutex::SpinMutex::<_>::new(0);\n*lock.get_mut() = 10;\nassert_eq!(*lock.lock(), 10);\n```","links":{"`SpinMutex`":"0:89:2725"},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3099-0:95:2726":{"id":"b:1:3099-0:95:2726","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinMutexGuard","id":"0:95:2726","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:3101:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3110-0:406:2439":{"id":"b:1:3110-0:406:2439","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockUpgradableGuard","id":"0:406:2439","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3113:150","1:3114:1857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:532":{"id":"0:532","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[732,0],"end":[739,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'rwlock","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Deref","id":"1:3558:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockUpgradableGuard","id":"0:406:2439","args":{"angle_bracketed":{"args":[{"lifetime":"'rwlock"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:536:263","0:537:654"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:602:245":{"id":"0:602:245","crate_id":0,"name":"RwLock","span":{"filename":"src/lib.rs","begin":[144,0],"end":[144,46]},"visibility":"public","docs":"A lock that provides data access to either one writer or many readers. See [`rwlock::RwLock`] for documentation.\n\nA note for advanced users: this alias exists to avoid subtle type inference errors due to the default relax\nstrategy type parameter. If you need a non-default relax strategy, use the fully-qualified path.","links":{"`rwlock::RwLock`":"0:385:245"},"attrs":["#[cfg(feature = \"rwlock\")]"],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"crate::rwlock::RwLock","id":"0:385:245","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}}},"1:3113:150":{"id":"1:3113:150","crate_id":1,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"1:32869:2962","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"1:2792:3306":{"id":"1:2792:3306","crate_id":1,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3095-0:10:2429":{"id":"b:1:3095-0:10:2429","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Barrier","id":"0:10:2429","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3098:3723"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:37:2431":{"id":"0:37:2431","crate_id":0,"name":"Lazy","span":{"filename":"src/lazy.rs","begin":[41,0],"end":[44,1]},"visibility":"public","docs":"A value which is initialized on the first access.\n\nThis type is a thread-safe `Lazy`, and can be used in statics.\n\n# Examples\n\n```\nuse std::collections::HashMap;\nuse spin::Lazy;\n\nstatic HASHMAP: Lazy<HashMap<i32, String>> = Lazy::new(|| {\n    println!(\"initializing\");\n    let mut m = HashMap::new();\n    m.insert(13, \"Spica\".to_string());\n    m.insert(74, \"Hoyten\".to_string());\n    m\n});\n\nfn main() {\n    println!(\"ready\");\n    std::thread::spawn(|| {\n        println!(\"{:?}\", HASHMAP.get(&13));\n    }).join().unwrap();\n    println!(\"{:?}\", HASHMAP.get(&74));\n\n    // Prints:\n    //   ready\n    //   initializing\n    //   Some(\"Spica\")\n    //   Some(\"Hoyten\")\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":{"function_pointer":{"decl":{"inputs":[],"output":{"generic":"T"},"c_variadic":false},"generic_params":[],"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"crate::Spin","id":"0:361:2425","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]},"impls":["0:51","0:57","a:1:32945:249-0:37:2431","a:1:3322:261-0:37:2431","a:1:3357:3460-0:37:2431","a:1:33003:3463-0:37:2431","a:1:42830:3494-0:37:2431","a:1:42831:3493-0:37:2431","b:1:2790-0:37:2431","b:1:2793-0:37:2431","b:1:3095-0:37:2431","b:1:3099-0:37:2431","b:1:3105-0:37:2431","b:1:3110-0:37:2431","b:1:3967-0:37:2431","0:43","0:48","0:63","0:69"]}}},"b:1:3967-0:89:2725":{"id":"b:1:3967-0:89:2725","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3965:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinMutex","id":"0:89:2725","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3969:1872"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:95:2726":{"id":"0:95:2726","crate_id":0,"name":"SpinMutexGuard","span":{"filename":"src/mutex/spin.rs","begin":[81,0],"end":[84,1]},"visibility":"public","docs":"A guard that provides mutable data access.\n\nWhen the guard falls out of scope it will release the lock.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:141","a:1:3357:3460-0:95:2726","a:1:33003:3463-0:95:2726","a:1:42830:3494-0:95:2726","a:1:42831:3493-0:95:2726","b:1:2790-0:95:2726","b:1:2793-0:95:2726","b:1:3095-0:95:2726","b:1:3099-0:95:2726","b:1:3105-0:95:2726","b:1:3110-0:95:2726","b:1:3967-0:95:2726","0:106","0:108","0:145","0:149","0:153","0:158","0:162"]}}},"b:1:3110-0:89:2725":{"id":"b:1:3110-0:89:2725","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinMutex","id":"0:89:2725","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3113:150","1:3114:1857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:100":{"id":"0:100","crate_id":0,"name":null,"span":{"filename":"src/mutex/spin.rs","begin":[87,0],"end":[87,60]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Send","id":"1:32945:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinMutex","id":"0:89:2725","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:115:2702":{"id":"0:115:2702","crate_id":0,"name":"as_mut_ptr","span":{"filename":"src/mutex/spin.rs","begin":[156,4],"end":[158,5]},"visibility":"public","docs":"Returns a mutable pointer to the underlying data.\n\nThis is mostly meant to be used for applications which require manual unlocking, but where\nstoring both the lock and the pointer to the inner data gets inefficient.\n\n# Example\n```\nlet lock = spin::mutex::SpinMutex::<_>::new(42);\n\nunsafe {\n    core::mem::forget(lock.lock());\n\n    assert_eq!(lock.as_mut_ptr().read(), 42);\n    lock.as_mut_ptr().write(58);\n\n    lock.force_unlock();\n}\n\nassert_eq!(*lock.lock(), 58);\n\n```","links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:176-0:95:2726":{"id":"0:176-0:95:2726","crate_id":0,"name":null,"span":{"filename":"src/mutex.rs","begin":[21,32],"end":[21,46]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"spin_mutex\")]"],"deprecation":null,"inner":{"import":{"source":"self::spin::SpinMutexGuard","name":"SpinMutexGuard","id":"0:95:2726","glob":false}}},"0:259:2612":{"id":"0:259:2612","crate_id":0,"name":"lock","span":{"filename":"src/mutex.rs","begin":[323,4],"end":[326,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:284:60":{"id":"0:284:60","crate_id":0,"name":"default","span":{"filename":"src/once.rs","begin":[35,4],"end":[37,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:347:860":{"id":"0:347:860","crate_id":0,"name":"from","span":{"filename":"src/once.rs","begin":[492,4],"end":[494,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["data",{"generic":"T"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:3357:3460-0:385:245":{"id":"a:1:3357:3460-0:385:245","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"Spin","id":"0:361:2425","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3357:3460","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLock","id":"0:385:245","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:166":{"id":"0:166","crate_id":0,"name":null,"span":{"filename":"src/mutex/spin.rs","begin":[355,0],"end":[377,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"lock_api\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RelaxStrategy","id":"0:359:2424","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["is_locked"],"trait":{"name":"RawMutex","id":"4:20:2829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinMutex","id":"0:89:2725","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:168:2830","0:169:2832","0:170:2612","0:171:2812","0:172:2835","0:173:2800"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3967-0:385:245":{"id":"b:1:3967-0:385:245","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3965:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLock","id":"0:385:245","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3969:1872"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:358:2208":{"id":"0:358:2208","crate_id":0,"name":"relax","span":{"filename":"src/relax.rs","begin":[1,0],"end":[61,1]},"visibility":"public","docs":"Strategies that determine the behaviour of locks when encountering contention.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:359:2424","0:361:2425","0:365:3080"],"is_stripped":false}}},"0:456:3205":{"id":"0:456:3205","crate_id":0,"name":"force_write_unlock","span":{"filename":"src/rwlock.rs","begin":[361,4],"end":[364,5]},"visibility":"public","docs":"Force unlock exclusive write access.\n\n# Safety\n\nThis is *extremely* unsafe if there are outstanding `RwLockWriteGuard`s\nlive, or if called when there are current readers, but can be useful in\nFFI contexts where the caller doesn't know how to deal with RAII. The\nunderlying atomic operation uses `Ordering::Release`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:564":{"id":"0:564","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[803,0],"end":[853,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"lock_api\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RelaxStrategy","id":"0:359:2424","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["is_locked","is_locked_exclusive"],"trait":{"name":"RawRwLock","id":"4:462:3263","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLock","id":"0:385:245","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:566:2830","0:567:2832","0:568:3264","0:569:3265","0:571:3267","0:572:3268","0:573:3269","0:575:3270","0:576:2800"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:3357:3460-0:399:247":{"id":"a:1:3357:3460-0:399:247","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3357:3460","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockWriteGuard","id":"0:399:247","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:517":{"id":"0:517","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[711,0],"end":[715,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'rwlock","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":"1:10656:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:10656:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockWriteGuard","id":"0:399:247","args":{"angle_bracketed":{"args":[{"lifetime":"'rwlock"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:521:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:74:2455":{"id":"0:74:2455","crate_id":0,"name":"spin","span":{"filename":"src/mutex/spin.rs","begin":[1,0],"end":[543,1]},"visibility":"public","docs":"A naïve spinning mutex.\n\nWaiting threads hammer an atomic variable until it becomes available. Best-case latency is low, but worst-case\nlatency is theoretically infinite.","links":{},"attrs":["#[cfg(feature = \"spin_mutex\")]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:89:2725","0:95:2726"],"is_stripped":false}}},"b:1:3105-0:191:198":{"id":"b:1:3105-0:191:198","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:3075:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Mutex","id":"0:191:198","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3108:150","1:3109:1859"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2790-0:201:199":{"id":"b:1:2790-0:201:199","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2784:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"MutexGuard","id":"0:201:199","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2792:3306"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:261:2835":{"id":"0:261:2835","crate_id":0,"name":"unlock","span":{"filename":"src/mutex.rs","begin":[333,4],"end":[335,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:294":{"id":"0:294","crate_id":0,"name":null,"span":{"filename":"src/once.rs","begin":[54,0],"end":[54,46]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:32945:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32945:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Once","id":"0:275:2435","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:367":{"id":"0:367","crate_id":0,"name":null,"span":{"filename":"src/relax.rs","begin":[58,0],"end":[61,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RelaxStrategy","id":"0:359:2424","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Loop","id":"0:365:3080","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:368:2208"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:42830:3494-0:191:198":{"id":"a:1:42830:3494-0:191:198","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:42830:3494","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:42830:3494","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42830:3494","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Mutex","id":"0:191:198","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:359:2424":{"id":"0:359:2424","crate_id":0,"name":"RelaxStrategy","span":{"filename":"src/relax.rs","begin":[4,0],"end":[7,1]},"visibility":"public","docs":"A trait implemented by spinning relax strategies.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":false,"items":["0:360:2208"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:363","0:367"]}}},"b:1:3110-0:361:2425":{"id":"b:1:3110-0:361:2425","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Spin","id":"0:361:2425","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3113:150","1:3114:1857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:548:656":{"id":"0:548:656","crate_id":0,"name":"deref_mut","span":{"filename":"src/rwlock.rs","begin":[751,4],"end":[754,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3095-0:17:2623":{"id":"b:1:3095-0:17:2623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BarrierWaitResult","id":"0:17:2623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3098:3723"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:492":{"id":"0:492","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[524,0],"end":[615,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'rwlock","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"RwLockUpgradableGuard","id":"0:406:2439","args":{"angle_bracketed":{"args":[{"lifetime":"'rwlock"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:497:3241","0:498:3250","0:499:2068"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:225:830":{"id":"0:225:830","crate_id":0,"name":"fmt","span":{"filename":"src/mutex.rs","begin":[256,4],"end":[258,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:10623:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:10604:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:425":{"id":"0:425","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[117,0],"end":[117,64]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Sync","id":"1:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32945:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockReadGuard","id":"0:394:246","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3105-0:406:2439":{"id":"b:1:3105-0:406:2439","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:3075:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockUpgradableGuard","id":"0:406:2439","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3108:150","1:3109:1859"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:557:696":{"id":"0:557:696","crate_id":0,"name":"drop","span":{"filename":"src/rwlock.rs","begin":[765,4],"end":[771,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:55:1212":{"id":"0:55:1212","crate_id":0,"name":"new","span":{"filename":"src/lazy.rs","begin":[66,4],"end":[71,5]},"visibility":"public","docs":"Creates a new lazy value with the given initializing\nfunction.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["f",{"generic":"F"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:589-0:201:199":{"id":"0:589-0:201:199","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[93,0],"end":[93,26]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"mutex\")]"],"deprecation":null,"inner":{"import":{"source":"mutex::MutexGuard","name":"MutexGuard","id":"0:201:199","glob":false}}},"b:1:3105-0:10:2429":{"id":"b:1:3105-0:10:2429","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:3075:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Barrier","id":"0:10:2429","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3108:150","1:3109:1859"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:32945:249-0:17:2623":{"id":"a:1:32945:249-0:17:2623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32945:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BarrierWaitResult","id":"0:17:2623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:250:654":{"id":"0:250:654","crate_id":0,"name":"deref","span":{"filename":"src/mutex.rs","begin":[306,4],"end":[308,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:514:3250":{"id":"0:514:3250","crate_id":0,"name":"downgrade","span":{"filename":"src/rwlock.rs","begin":[643,4],"end":[656,5]},"visibility":"public","docs":"Downgrades the writable lock guard to a readable, shared lock guard. Cannot fail and is guaranteed not to spin.\n\n```\nlet mylock = spin::RwLock::new(0);\n\nlet mut writable = mylock.write();\n*writable = 1;\n\nlet readable = writable.downgrade(); // This is guaranteed not to spin\n# let readable_2 = mylock.try_read().unwrap();\nassert_eq!(*readable, 1);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"RwLockReadGuard","id":"0:394:246","args":{"angle_bracketed":{"args":[{"lifetime":"'rwlock"},{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:281":{"id":"0:281","crate_id":0,"name":null,"span":{"filename":"src/once.rs","begin":[34,0],"end":[38,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"1:3147:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Once","id":"0:275:2435","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:284:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:419":{"id":"0:419","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[114,0],"end":[114,78]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Send","id":"1:32945:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"1:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32945:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockWriteGuard","id":"0:399:247","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:594:2429":{"id":"0:594:2429","crate_id":0,"name":"Barrier","span":{"filename":"src/lib.rs","begin":[112,0],"end":[112,43]},"visibility":"public","docs":"A primitive that synchronizes the execution of multiple threads. See [`barrier::Barrier`] for documentation.\n\nA note for advanced users: this alias exists to avoid subtle type inference errors due to the default relax\nstrategy type parameter. If you need a non-default relax strategy, use the fully-qualified path.","links":{"`barrier::Barrier`":"0:10:2429"},"attrs":["#[cfg(feature = \"barrier\")]"],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"crate::barrier::Barrier","id":"0:10:2429","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"generics":{"params":[],"where_predicates":[]}}}},"0:595:2431":{"id":"0:595:2431","crate_id":0,"name":"Lazy","span":{"filename":"src/lib.rs","begin":[120,0],"end":[120,58]},"visibility":"public","docs":"A value which is initialized on the first access. See [`lazy::Lazy`] for documentation.\n\nA note for advanced users: this alias exists to avoid subtle type inference errors due to the default relax\nstrategy type parameter. If you need a non-default relax strategy, use the fully-qualified path.","links":{"`lazy::Lazy`":"0:37:2431"},"attrs":["#[cfg(feature = \"lazy\")]"],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"crate::lazy::Lazy","id":"0:37:2431","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"F"}}],"bindings":[]}}}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":{"function_pointer":{"decl":{"inputs":[],"output":{"generic":"T"},"c_variadic":false},"generic_params":[],"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"synthetic":false}}}],"where_predicates":[]}}}},"a:1:3357:3460-0:95:2726":{"id":"a:1:3357:3460-0:95:2726","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3357:3460","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinMutexGuard","id":"0:95:2726","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:3110-0:191:198":{"id":"b:1:3110-0:191:198","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Mutex","id":"0:191:198","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3113:150","1:3114:1857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:222":{"id":"0:222","crate_id":0,"name":null,"span":{"filename":"src/mutex.rs","begin":[255,0],"end":[259,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":"1:10656:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:10656:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Mutex","id":"0:191:198","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:225:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:505":{"id":"0:505","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[623,0],"end":[627,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'rwlock","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"fmt::Display","id":"1:10661:133","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"1:10661:133","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockUpgradableGuard","id":"0:406:2439","args":{"angle_bracketed":{"args":[{"lifetime":"'rwlock"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:509:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3095-0:399:247":{"id":"b:1:3095-0:399:247","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockWriteGuard","id":"0:399:247","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3098:3723"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3099-0:89:2725":{"id":"b:1:3099-0:89:2725","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinMutex","id":"0:89:2725","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3101:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:5:2044":{"id":"0:5:2044","crate_id":0,"name":"barrier","span":{"filename":"src/barrier.rs","begin":[1,0],"end":[239,1]},"visibility":"public","docs":"Synchronization primitive allowing multiple threads to synchronize the\nbeginning of some computation.\n\nImplementation adapted from the 'Barrier' type of the standard library. See:\n<https://doc.rust-lang.org/std/sync/struct.Barrier.html>\n\nCopyright 2014 The Rust Project Developers. See the COPYRIGHT\nfile at the top-level directory of this distribution and at\n<http://rust-lang.org/COPYRIGHT>.\n\nLicensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n<http://www.apache.org/licenses/LICENSE-2.0>> or the MIT license\n<LICENSE-MIT or <http://opensource.org/licenses/MIT>>, at your\noption. This file may not be copied, modified, or distributed\nexcept according to those terms.","links":{},"attrs":["#[cfg(feature = \"barrier\")]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:10:2429","0:17:2623"],"is_stripped":false}}},"b:1:3967-0:406:2439":{"id":"b:1:3967-0:406:2439","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3965:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockUpgradableGuard","id":"0:406:2439","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3969:1872"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:504:830":{"id":"0:504:830","crate_id":0,"name":"fmt","span":{"filename":"src/rwlock.rs","begin":[618,4],"end":[620,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:10623:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:10604:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2790-0:17:2623":{"id":"b:1:2790-0:17:2623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2784:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BarrierWaitResult","id":"0:17:2623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2792:3306"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:422":{"id":"0:422","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[115,0],"end":[115,78]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Send","id":"1:32945:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"1:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockWriteGuard","id":"0:399:247","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:17:2623":{"id":"0:17:2623","crate_id":0,"name":"BarrierWaitResult","span":{"filename":"src/barrier.rs","begin":[70,0],"end":[70,35]},"visibility":"public","docs":"A `BarrierWaitResult` is returned by [`wait`] when all threads in the [`Barrier`]\nhave rendezvoused.\n\n[`wait`]: struct.Barrier.html#method.wait\n[`Barrier`]: struct.Barrier.html\n\n# Examples\n\n```\nuse spin;\n\nlet barrier = spin::Barrier::new(1);\nlet barrier_wait_result = barrier.wait();\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:26","a:1:32945:249-0:17:2623","a:1:3322:261-0:17:2623","a:1:3357:3460-0:17:2623","a:1:33003:3463-0:17:2623","a:1:42830:3494-0:17:2623","a:1:42831:3493-0:17:2623","b:1:2790-0:17:2623","b:1:2793-0:17:2623","b:1:3095-0:17:2623","b:1:3099-0:17:2623","b:1:3105-0:17:2623","b:1:3110-0:17:2623","b:1:3967-0:17:2623"]}}},"0:562:696":{"id":"0:562:696","crate_id":0,"name":"drop","span":{"filename":"src/rwlock.rs","begin":[775,4],"end":[783,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:191:198":{"id":"0:191:198","crate_id":0,"name":"Mutex","span":{"filename":"src/mutex.rs","begin":[113,0],"end":[115,1]},"visibility":"public","docs":"A spin-based lock providing mutually exclusive access to data.\n\nThe implementation uses either a ticket mutex or a regular spin mutex depending on whether the `spin_mutex` or\n`ticket_mutex` feature flag is enabled.\n\n# Example\n\n```\nuse spin;\n\nlet lock = spin::Mutex::new(0);\n\n// Modify the data\n*lock.lock() = 2;\n\n// Read the data\nlet answer = *lock.lock();\nassert_eq!(answer, 2);\n```\n\n# Thread safety example\n\n```\nuse spin;\nuse std::sync::{Arc, Barrier};\n\nlet thread_count = 1000;\nlet spin_mutex = Arc::new(spin::Mutex::new(0));\n\n// We use a barrier to ensure the readout happens after all writing\nlet barrier = Arc::new(Barrier::new(thread_count + 1));\n\n# let mut ts = Vec::new();\nfor _ in (0..thread_count) {\n    let my_barrier = barrier.clone();\n    let my_lock = spin_mutex.clone();\n# let t =\n    std::thread::spawn(move || {\n        let mut guard = my_lock.lock();\n        *guard += 1;\n\n        // Release the lock to prevent a deadlock\n        drop(guard);\n        my_barrier.wait();\n    });\n# ts.push(t);\n}\n\nbarrier.wait();\n\nlet answer = { *spin_mutex.lock() };\nassert_eq!(answer, thread_count);\n\n# for t in ts {\n#     t.join().unwrap();\n# }\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"crate::Spin","id":"0:361:2425","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]},"impls":["0:205","0:210","0:214","a:1:3357:3460-0:191:198","a:1:33003:3463-0:191:198","a:1:42830:3494-0:191:198","a:1:42831:3493-0:191:198","b:1:2790-0:191:198","b:1:2793-0:191:198","b:1:3095-0:191:198","b:1:3099-0:191:198","b:1:3102-0:191:198","b:1:3105-0:191:198","b:1:3110-0:191:198","b:1:3967-0:191:198","0:195","0:198","0:222","0:226","0:230","0:255"]}}}},"paths":{"1:45689:231":{"crate_id":1,"path":["core","future","ready","Ready"],"kind":"struct"},"1:41435:5035":{"crate_id":1,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"1:3199:4720":{"crate_id":1,"path":["core","error","Request"],"kind":"struct"},"1:45324:5138":{"crate_id":1,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"1:23396:12161":{"crate_id":1,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"1:10604:238":{"crate_id":1,"path":["core","fmt","Result"],"kind":"type_alias"},"1:2908:207":{"crate_id":1,"path":["core","cmp","Ord"],"kind":"trait"},"1:46985:5187":{"crate_id":1,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"1:41539:5042":{"crate_id":1,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"1:3322:261":{"crate_id":1,"path":["core","marker","Sync"],"kind":"trait"},"1:53674:766":{"crate_id":1,"path":["core","f32"],"kind":"primitive"},"1:47965:5278":{"crate_id":1,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"1:47663:5241":{"crate_id":1,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"1:41940:4885":{"crate_id":1,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"1:11776:4261":{"crate_id":1,"path":["core","slice","iter","IterMut"],"kind":"struct"},"1:3797:159":{"crate_id":1,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"1:47740:5273":{"crate_id":1,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"1:22152:15720":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_elements_right","Rotate"],"kind":"struct"},"1:45501:6009":{"crate_id":1,"path":["core","str","IsNotEmpty"],"kind":"struct"},"1:42852:3642":{"crate_id":1,"path":["core","panicking","AssertKind"],"kind":"enum"},"0:607:247":{"crate_id":0,"path":["spin","RwLockWriteGuard"],"kind":"type_alias"},"1:45139:5124":{"crate_id":1,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"1:14072:4945":{"crate_id":1,"path":["core","future","async_drop","AsyncDropInPlace"],"kind":"struct"},"1:47241:5209":{"crate_id":1,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"1:8281:6438":{"crate_id":1,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"1:41333:5026":{"crate_id":1,"path":["core","ffi","va_list","VaList"],"kind":"struct"},"1:41526:4874":{"crate_id":1,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"1:53688:1967":{"crate_id":1,"path":["core","usize"],"kind":"primitive"},"1:42961:226":{"crate_id":1,"path":["core","range","RangeInclusive"],"kind":"struct"},"1:43580:3827":{"crate_id":1,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"1:40409:3429":{"crate_id":1,"path":["core","ops","range","Bound"],"kind":"enum"},"1:46970:5186":{"crate_id":1,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"1:4776:3374":{"crate_id":1,"path":["core","cell","BorrowMutError"],"kind":"struct"},"1:44560:5096":{"crate_id":1,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"1:48053:5282":{"crate_id":1,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"1:2303:201":{"crate_id":1,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"1:42674:6445":{"crate_id":1,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"4:510:245":{"crate_id":4,"path":["lock_api","rwlock","RwLock"],"kind":"struct"},"1:44693:5109":{"crate_id":1,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"1:13163:4931":{"crate_id":1,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"1:41517:4873":{"crate_id":1,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"1:47270:5210":{"crate_id":1,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"1:41496:4868":{"crate_id":1,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"1:31705:208":{"crate_id":1,"path":["core","cmp","Ordering"],"kind":"enum"},"1:44491:5092":{"crate_id":1,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"1:10667:3827":{"crate_id":1,"path":["core","fmt","LowerHex"],"kind":"trait"},"1:10884:169":{"crate_id":1,"path":["core","hash","Hasher"],"kind":"trait"},"4:268:3866":{"crate_id":4,"path":["lock_api","remutex","ReentrantMutex"],"kind":"struct"},"1:23651:4989":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroI8Inner"],"kind":"struct"},"1:42869:5069":{"crate_id":1,"path":["core","range","iter","IterRange"],"kind":"struct"},"1:41989:4889":{"crate_id":1,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"1:4071:4631":{"crate_id":1,"path":["core","array","drain","Drain"],"kind":"struct"},"1:23109:11643":{"crate_id":1,"path":["core","core_simd","simd","cmp","eq","SimdPartialEq"],"kind":"trait"},"1:2914:214":{"crate_id":1,"path":["core","cmp","PartialOrd"],"kind":"trait"},"1:7004:5923":{"crate_id":1,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"1:6998:4875":{"crate_id":1,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"4:771:3875":{"crate_id":4,"path":["lock_api","rwlock","MappedRwLockReadGuard"],"kind":"struct"},"1:41956:4886":{"crate_id":1,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"1:43573:3825":{"crate_id":1,"path":["core","fmt","num","Octal"],"kind":"struct"},"1:31332:3481":{"crate_id":1,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"1:46786:5169":{"crate_id":1,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"0:73:2048":{"crate_id":0,"path":["spin","mutex"],"kind":"module"},"1:3042:12896":{"crate_id":1,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"1:42696:4896":{"crate_id":1,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"1:41378:5028":{"crate_id":1,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"1:39618:3421":{"crate_id":1,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"1:3411:3400":{"crate_id":1,"path":["core","ops","arith","Neg"],"kind":"trait"},"1:23548:12896":{"crate_id":1,"path":["core","num","nonzero","private","Sealed"],"kind":"trait"},"1:47028:5190":{"crate_id":1,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"1:53687:996":{"crate_id":1,"path":["core","isize"],"kind":"primitive"},"1:40630:6356":{"crate_id":1,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"1:3079:271":{"crate_id":1,"path":["core","convert","TryFrom"],"kind":"trait"},"1:45809:5164":{"crate_id":1,"path":["core","alloc","AllocError"],"kind":"struct"},"1:41981:4887":{"crate_id":1,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"1:33918:3401":{"crate_id":1,"path":["core","ops","arith","Rem"],"kind":"trait"},"1:2687:4278":{"crate_id":1,"path":["core","ptr","with_exposed_provenance_mut"],"kind":"function"},"1:53664:1925":{"crate_id":1,"path":["core","unit"],"kind":"primitive"},"1:43281:95":{"crate_id":1,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"1:4959:3385":{"crate_id":1,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"1:44988:5118":{"crate_id":1,"path":["core","str","iter","Lines"],"kind":"struct"},"1:2129:3478":{"crate_id":1,"path":["core","mem","Discriminant"],"kind":"struct"},"1:47480:5234":{"crate_id":1,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"1:48015:5280":{"crate_id":1,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"1:42927:5071":{"crate_id":1,"path":["core","range","iter","IterRangeFrom"],"kind":"struct"},"1:53661:436":{"crate_id":1,"path":["core","bool"],"kind":"primitive"},"1:12547:4923":{"crate_id":1,"path":["core","slice","iter","ChunkBy"],"kind":"struct"},"1:44680:5106":{"crate_id":1,"path":["core","str","error","Utf8Error"],"kind":"struct"},"1:3628:3426":{"crate_id":1,"path":["core","ops","index","IndexMut"],"kind":"trait"},"1:22204:12896":{"crate_id":1,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"1:42861:4263":{"crate_id":1,"path":["core","pin","Pin"],"kind":"struct"},"1:2877:147":{"crate_id":1,"path":["core","cmp","Eq"],"kind":"trait"},"1:23662:4990":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroI16Inner"],"kind":"struct"},"1:22790:11563":{"crate_id":1,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"1:23385:4962":{"crate_id":1,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"1:42734:206":{"crate_id":1,"path":["core","option","Option"],"kind":"enum"},"1:41947:2435":{"crate_id":1,"path":["core","iter","sources","once","Once"],"kind":"struct"},"1:41157:5015":{"crate_id":1,"path":["core","char","EscapeDebug"],"kind":"struct"},"1:44720:5016":{"crate_id":1,"path":["core","str","iter","Bytes"],"kind":"struct"},"1:23410:4964":{"crate_id":1,"path":["core","num","diy_float","Fp"],"kind":"struct"},"1:7009:4641":{"crate_id":1,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"1:44998:5119":{"crate_id":1,"path":["core","str","iter","LinesAny"],"kind":"struct"},"1:41395:5030":{"crate_id":1,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"1:4621:3388":{"crate_id":1,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"1:46771:5166":{"crate_id":1,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"1:48187:5297":{"crate_id":1,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"4:8:3859":{"crate_id":4,"path":["lock_api","GuardNoSend"],"kind":"struct"},"1:45033:5015":{"crate_id":1,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"1:45008:5120":{"crate_id":1,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"4:487:3871":{"crate_id":4,"path":["lock_api","rwlock","RawRwLockRecursive"],"kind":"trait"},"1:41971:4643":{"crate_id":1,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"1:43042:4260":{"crate_id":1,"path":["core","result","Iter"],"kind":"struct"},"0:621:247":{"crate_id":0,"path":["spin","lock_api","RwLockWriteGuard"],"kind":"type_alias"},"1:45761:12418":{"crate_id":1,"path":["core","task","wake","ExtData"],"kind":"enum"},"1:1280:3456":{"crate_id":1,"path":["core","hint","spin_loop"],"kind":"function"},"1:35122:3415":{"crate_id":1,"path":["core","ops","bit","Shl"],"kind":"trait"},"1:43587:3828":{"crate_id":1,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"1:41127:5012":{"crate_id":1,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"1:10274:830":{"crate_id":1,"path":["core","fmt"],"kind":"module"},"1:34324:3405":{"crate_id":1,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"1:10924:4907":{"crate_id":1,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"1:32929:3382":{"crate_id":1,"path":["core","error","tags","Ref"],"kind":"struct"},"1:22265:11564":{"crate_id":1,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"1:22206:11565":{"crate_id":1,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"1:41371:5027":{"crate_id":1,"path":["core","io","borrowed_buf","BorrowedCursor"],"kind":"struct"},"1:53667:351":{"crate_id":1,"path":["core","array"],"kind":"primitive"},"1:44623:5101":{"crate_id":1,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"1:41104:5010":{"crate_id":1,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"1:23503:4978":{"crate_id":1,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"1:41747:4881":{"crate_id":1,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"1:48082:5285":{"crate_id":1,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"1:44653:5104":{"crate_id":1,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"1:8807:4262":{"crate_id":1,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"1:43207:94":{"crate_id":1,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"1:45677:6012":{"crate_id":1,"path":["core","future","async_drop","Noop"],"kind":"struct"},"1:4555:6381":{"crate_id":1,"path":["core","async_iter","async_iter","IntoAsyncIterator"],"kind":"trait"},"1:45026:4934":{"crate_id":1,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"1:8326:177":{"crate_id":1,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"2:2062:4715":{"crate_id":2,"path":["compiler_builtins","int","big","u256"],"kind":"struct"},"1:23347:5563":{"crate_id":1,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"1:47308:5212":{"crate_id":1,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"2:0:527":{"crate_id":2,"path":["compiler_builtins"],"kind":"module"},"1:43096:90":{"crate_id":1,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"1:11084:4646":{"crate_id":1,"path":["core","slice","sort","stable","merge","MergeState"],"kind":"struct"},"1:46865:5176":{"crate_id":1,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"1:23527:6299":{"crate_id":1,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"1:44089:5079":{"crate_id":1,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"1:33035:118":{"crate_id":1,"path":["core","marker","ConstParamTy_"],"kind":"trait"},"1:3965:71":{"crate_id":1,"path":["core","any","Any"],"kind":"trait"},"0:369:2050":{"crate_id":0,"path":["spin","rwlock"],"kind":"module"},"1:22163:15723":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"1:4767:233":{"crate_id":1,"path":["core","cell","RefCell"],"kind":"struct"},"1:46801:5170":{"crate_id":1,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"1:48249:5313":{"crate_id":1,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"1:45349:5141":{"crate_id":1,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"1:45748:5159":{"crate_id":1,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"1:41048:5006":{"crate_id":1,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"1:43002:238":{"crate_id":1,"path":["core","result","Result"],"kind":"enum"},"1:3596:154":{"crate_id":1,"path":["core","ops","function","FnMut"],"kind":"trait"},"1:44956:5117":{"crate_id":1,"path":["core","str","iter","RMatches"],"kind":"struct"},"1:42556:5571":{"crate_id":1,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"1:53680:933":{"crate_id":1,"path":["core","i64"],"kind":"primitive"},"4:230:3865":{"crate_id":4,"path":["lock_api","remutex","RawReentrantMutex"],"kind":"struct"},"1:12035:4919":{"crate_id":1,"path":["core","slice","iter","SplitN"],"kind":"struct"},"1:53663:492":{"crate_id":1,"path":["core","char"],"kind":"primitive"},"1:43431:98":{"crate_id":1,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"1:3396:3397":{"crate_id":1,"path":["core","ops","arith","Add"],"kind":"trait"},"1:34257:3407":{"crate_id":1,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"4:499:3873":{"crate_id":4,"path":["lock_api","rwlock","RawRwLockUpgradeFair"],"kind":"trait"},"1:11801:4911":{"crate_id":1,"path":["core","slice","iter","Split"],"kind":"struct"},"1:2229:4266":{"crate_id":1,"path":["core","ptr","metadata","metadata"],"kind":"function"},"1:4513:111":{"crate_id":1,"path":["core","asserting","Capture"],"kind":"struct"},"1:3401:3402":{"crate_id":1,"path":["core","ops","arith","Sub"],"kind":"trait"},"1:31347:3835":{"crate_id":1,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"1:42830:3494":{"crate_id":1,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"0:406:2439":{"crate_id":0,"path":["spin","rwlock","RwLockUpgradableGuard"],"kind":"struct"},"1:6197:4865":{"crate_id":1,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"1:2834:3694":{"crate_id":1,"path":["core","clone","InitializingSlice"],"kind":"struct"},"1:46850:5175":{"crate_id":1,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"1:41404:5031":{"crate_id":1,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"4:91:199":{"crate_id":4,"path":["lock_api","mutex","MutexGuard"],"kind":"struct"},"1:13126:4928":{"crate_id":1,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"1:46999:5188":{"crate_id":1,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"4:27:3861":{"crate_id":4,"path":["lock_api","mutex","RawMutexFair"],"kind":"trait"},"1:10663:3825":{"crate_id":1,"path":["core","fmt","Octal"],"kind":"trait"},"1:13240:4914":{"crate_id":1,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"1:44612:5028":{"crate_id":1,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"1:3158:150":{"crate_id":1,"path":["core","error","Error"],"kind":"trait"},"1:43050:4261":{"crate_id":1,"path":["core","result","IterMut"],"kind":"struct"},"1:47323:5213":{"crate_id":1,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"1:45181:5135":{"crate_id":1,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"1:3364:3462":{"crate_id":1,"path":["core","marker","FnPtr"],"kind":"trait"},"1:44118:5086":{"crate_id":1,"path":["core","hash","sip","State"],"kind":"struct"},"1:42512:4895":{"crate_id":1,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"4:502:3278":{"crate_id":4,"path":["lock_api","rwlock","RawRwLockUpgradeDowngrade"],"kind":"trait"},"1:8499:190":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"1:41141:5014":{"crate_id":1,"path":["core","char","EscapeUnicode"],"kind":"struct"},"1:42640:12194":{"crate_id":1,"path":["core","net","parser","AddrKind"],"kind":"enum"},"1:44570:5097":{"crate_id":1,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"1:22134:3706":{"crate_id":1,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"1:7806:14695":{"crate_id":1,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"1:22178:15728":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"1:8813:6437":{"crate_id":1,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"1:41301:5025":{"crate_id":1,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"1:23618:4986":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroU64Inner"],"kind":"struct"},"1:2820:3693":{"crate_id":1,"path":["core","clone","CloneToUninit"],"kind":"trait"},"1:23629:4987":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroU128Inner"],"kind":"struct"},"1:2787:104":{"crate_id":1,"path":["core","borrow","BorrowMut"],"kind":"trait"},"1:45699:239":{"crate_id":1,"path":["core","future","ResumeTy"],"kind":"struct"},"1:53681:914":{"crate_id":1,"path":["core","i128"],"kind":"primitive"},"1:39039:3420":{"crate_id":1,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"1:43845:12332":{"crate_id":1,"path":["core","fmt","rt","Flag"],"kind":"enum"},"1:23516:4979":{"crate_id":1,"path":["core","num","error","ParseIntError"],"kind":"struct"},"1:42937:222":{"crate_id":1,"path":["core","range","Range"],"kind":"struct"},"1:40446:4723":{"crate_id":1,"path":["core","any","TypeId"],"kind":"struct"},"0:613:199":{"crate_id":0,"path":["spin","lock_api","MutexGuard"],"kind":"type_alias"},"1:41275:5022":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"1:14369:4652":{"crate_id":1,"path":["core","task","wake","Waker"],"kind":"struct"},"1:10919:6448":{"crate_id":1,"path":["core","hash","BuildHasher"],"kind":"trait"},"1:23673:4991":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroI32Inner"],"kind":"struct"},"1:40349:227":{"crate_id":1,"path":["core","ops","range","RangeTo"],"kind":"struct"},"1:3874:132":{"crate_id":1,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"1:44106:169":{"crate_id":1,"path":["core","hash","sip","Hasher"],"kind":"struct"},"1:14160:15339":{"crate_id":1,"path":["core","future","join","MaybeDone"],"kind":"enum"},"1:7635:3743":{"crate_id":1,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"1:53686:1879":{"crate_id":1,"path":["core","u128"],"kind":"primitive"},"1:47936:5277":{"crate_id":1,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"1:34603:3411":{"crate_id":1,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"1:47568:5238":{"crate_id":1,"path":["core","core_arch","simd","m8x32"],"kind":"struct"},"1:41505:5041":{"crate_id":1,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"1:44856:4920":{"crate_id":1,"path":["core","str","iter","RSplitN"],"kind":"struct"},"1:45168:5134":{"crate_id":1,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"1:41426:5034":{"crate_id":1,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"1:2810:114":{"crate_id":1,"path":["core","clone","Clone"],"kind":"trait"},"1:15:2872":{"crate_id":1,"path":["core","write"],"kind":"macro"},"1:3069:175":{"crate_id":1,"path":["core","convert","Into"],"kind":"trait"},"1:41089:12189":{"crate_id":1,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"4:645:247":{"crate_id":4,"path":["lock_api","rwlock","RwLockWriteGuard"],"kind":"struct"},"1:12063:4921":{"crate_id":1,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"1:3072:157":{"crate_id":1,"path":["core","convert","From"],"kind":"trait"},"1:3317:121":{"crate_id":1,"path":["core","marker","Copy"],"kind":"trait"},"1:43875:74":{"crate_id":1,"path":["core","fmt","rt","Argument"],"kind":"struct"},"1:47291:5211":{"crate_id":1,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"1:41117:5011":{"crate_id":1,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"1:41733:4880":{"crate_id":1,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"1:11921:4916":{"crate_id":1,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"1:41455:4860":{"crate_id":1,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"0:618:246":{"crate_id":0,"path":["spin","lock_api","RwLockReadGuard"],"kind":"type_alias"},"4:30:3862":{"crate_id":4,"path":["lock_api","mutex","RawMutexTimed"],"kind":"trait"},"1:46932:5184":{"crate_id":1,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"1:3593:153":{"crate_id":1,"path":["core","ops","function","Fn"],"kind":"trait"},"1:4489:4854":{"crate_id":1,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"1:24260:248":{"crate_id":1,"path":["core","num","saturating","Saturating"],"kind":"struct"},"1:53666:1352":{"crate_id":1,"path":["core","pointer"],"kind":"primitive"},"0:399:247":{"crate_id":0,"path":["spin","rwlock","RwLockWriteGuard"],"kind":"struct"},"0:602:245":{"crate_id":0,"path":["spin","RwLock"],"kind":"type_alias"},"1:23013:15960":{"crate_id":1,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_addr"],"kind":"function"},"1:3587:2451":{"crate_id":1,"path":["core","ops","drop","Drop"],"kind":"trait"},"1:40281:3427":{"crate_id":1,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"1:8090:2049":{"crate_id":1,"path":["core","iter","sources","once","once"],"kind":"function"},"1:23596:4984":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroU16Inner"],"kind":"struct"},"0:624:2448":{"crate_id":0,"path":["spin","lock_api","RwLockUpgradableReadGuard"],"kind":"type_alias"},"1:10109:85":{"crate_id":1,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"1:4413:4629":{"crate_id":1,"path":["core","array","Guard"],"kind":"struct"},"1:41574:5045":{"crate_id":1,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"2:2077:4716":{"crate_id":2,"path":["compiler_builtins","int","big","i256"],"kind":"struct"},"1:13186:4932":{"crate_id":1,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"1:38984:3419":{"crate_id":1,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"1:3066:77":{"crate_id":1,"path":["core","convert","AsMut"],"kind":"trait"},"4:5:2831":{"crate_id":4,"path":["lock_api","GuardSend"],"kind":"struct"},"1:4897:3383":{"crate_id":1,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"1:45273:4937":{"crate_id":1,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"1:10605:3824":{"crate_id":1,"path":["core","fmt","Write"],"kind":"trait"},"0:10:2429":{"crate_id":0,"path":["spin","barrier","Barrier"],"kind":"struct"},"1:3431:3410":{"crate_id":1,"path":["core","ops","async_function","AsyncFnOnce"],"kind":"trait"},"1:44752:4917":{"crate_id":1,"path":["core","str","iter","RSplit"],"kind":"struct"},"0:604:2439":{"crate_id":0,"path":["spin","RwLockUpgradableGuard"],"kind":"type_alias"},"1:41445:146":{"crate_id":1,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"1:3576:3387":{"crate_id":1,"path":["core","ops","deref","DerefPure"],"kind":"trait"},"1:45017:5121":{"crate_id":1,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"1:48119:5288":{"crate_id":1,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"1:32922:4998":{"crate_id":1,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"1:4501:4855":{"crate_id":1,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"1:8447:3597":{"crate_id":1,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"1:23454:12164":{"crate_id":1,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"1:53669:1772":{"crate_id":1,"path":["core","str"],"kind":"primitive"},"1:909:6300":{"crate_id":1,"path":["core","num","nonzero","ZeroablePrimitive"],"kind":"trait"},"1:22788:12896":{"crate_id":1,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"1:2872:213":{"crate_id":1,"path":["core","cmp","PartialEq"],"kind":"trait"},"4:398:3868":{"crate_id":4,"path":["lock_api","remutex","MappedReentrantMutexGuard"],"kind":"struct"},"1:46953:5185":{"crate_id":1,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"0:385:245":{"crate_id":0,"path":["spin","rwlock","RwLock"],"kind":"struct"},"1:44802:5113":{"crate_id":1,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"1:42831:3493":{"crate_id":1,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"4:35:198":{"crate_id":4,"path":["lock_api","mutex","Mutex"],"kind":"struct"},"1:44334:6002":{"crate_id":1,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"1:2685:4277":{"crate_id":1,"path":["core","ptr","with_exposed_provenance"],"kind":"function"},"1:45782:192":{"crate_id":1,"path":["core","alloc","layout","Layout"],"kind":"struct"},"1:44884:5114":{"crate_id":1,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"0:95:2726":{"crate_id":0,"path":["spin","mutex","spin","SpinMutexGuard"],"kind":"struct"},"1:2424:4295":{"crate_id":1,"path":["core","ptr","unique","Unique"],"kind":"struct"},"1:47907:5276":{"crate_id":1,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"1:48062:5283":{"crate_id":1,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"1:40309:222":{"crate_id":1,"path":["core","ops","range","Range"],"kind":"struct"},"3:0:3369":{"crate_id":3,"path":["rustc_std_workspace_core"],"kind":"module"},"0:74:2455":{"crate_id":0,"path":["spin","mutex","spin"],"kind":"module"},"0:359:2424":{"crate_id":0,"path":["spin","relax","RelaxStrategy"],"kind":"trait"},"1:34949:3413":{"crate_id":1,"path":["core","ops","bit","BitXor"],"kind":"trait"},"1:26660:283":{"crate_id":1,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"1:47435:5233":{"crate_id":1,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"4:0:2046":{"crate_id":4,"path":["lock_api"],"kind":"module"},"1:47057:5199":{"crate_id":1,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"1:22653:11567":{"crate_id":1,"path":["core","core_simd","to_bytes","ToBytes"],"kind":"trait"},"1:45497:6008":{"crate_id":1,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"1:22142:15720":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_elements_left","Rotate"],"kind":"struct"},"1:43133:97":{"crate_id":1,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"1:48134:5289":{"crate_id":1,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"1:42790:3489":{"crate_id":1,"path":["core","panic","location","Location"],"kind":"struct"},"1:14389:4654":{"crate_id":1,"path":["core","task","wake","LocalWaker"],"kind":"struct"},"1:41323:4634":{"crate_id":1,"path":["core","ffi","va_list","VaListImpl"],"kind":"struct"},"1:10665:3826":{"crate_id":1,"path":["core","fmt","Binary"],"kind":"trait"},"1:38874:3417":{"crate_id":1,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"1:34458:3406":{"crate_id":1,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"0:5:2044":{"crate_id":0,"path":["spin","barrier"],"kind":"module"},"1:22648:12896":{"crate_id":1,"path":["core","core_simd","to_bytes","sealed","Sealed"],"kind":"trait"},"1:42982:224":{"crate_id":1,"path":["core","range","RangeFrom"],"kind":"struct"},"0:17:2623":{"crate_id":0,"path":["spin","barrier","BarrierWaitResult"],"kind":"struct"},"1:23015:4277":{"crate_id":1,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_exposed_provenance"],"kind":"function"},"1:42778:3735":{"crate_id":1,"path":["core","option","IntoIter"],"kind":"struct"},"1:22165:15725":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"0:191:198":{"crate_id":0,"path":["spin","mutex","Mutex"],"kind":"struct"},"1:44663:5105":{"crate_id":1,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"1:10669:3828":{"crate_id":1,"path":["core","fmt","UpperHex"],"kind":"trait"},"1:43058:3735":{"crate_id":1,"path":["core","result","IntoIter"],"kind":"struct"},"1:40331:224":{"crate_id":1,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"1:32945:249":{"crate_id":1,"path":["core","marker","Send"],"kind":"trait"},"1:44734:4911":{"crate_id":1,"path":["core","str","iter","Split"],"kind":"struct"},"1:45513:5570":{"crate_id":1,"path":["core","time","Nanoseconds"],"kind":"struct"},"1:12946:6455":{"crate_id":1,"path":["core","slice","SlicePattern"],"kind":"trait"},"0:361:2425":{"crate_id":0,"path":["spin","relax","Spin"],"kind":"struct"},"1:3423:3408":{"crate_id":1,"path":["core","ops","async_function","AsyncFn"],"kind":"trait"},"1:4:1292":{"crate_id":1,"path":["core","panic"],"kind":"macro"},"1:45154:5131":{"crate_id":1,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"1:22675:4951":{"crate_id":1,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"1:43170:87":{"crate_id":1,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"1:47014:5189":{"crate_id":1,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"1:11994:4918":{"crate_id":1,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"1:22925:11649":{"crate_id":1,"path":["core","core_simd","simd","num","int","SimdInt"],"kind":"trait"},"1:45042:4852":{"crate_id":1,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"1:41588:4878":{"crate_id":1,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"1:43883:3835":{"crate_id":1,"path":["core","fmt","Alignment"],"kind":"enum"},"0:611:198":{"crate_id":0,"path":["spin","lock_api","Mutex"],"kind":"type_alias"},"1:22259:11561":{"crate_id":1,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"1:44643:5103":{"crate_id":1,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"1:42474:182":{"crate_id":1,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"1:22373:12896":{"crate_id":1,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"1:40277:3425":{"crate_id":1,"path":["core","ops","index","Index"],"kind":"trait"},"1:33706:3398":{"crate_id":1,"path":["core","ops","arith","Div"],"kind":"trait"},"1:45682:163":{"crate_id":1,"path":["core","future","future","Future"],"kind":"trait"},"4:336:3867":{"crate_id":4,"path":["lock_api","remutex","ReentrantMutexGuard"],"kind":"struct"},"1:45566:6515":{"crate_id":1,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"4:332:4714":{"crate_id":4,"path":["lock_api","remutex","fmt","LockedPlaceholder"],"kind":"struct"},"1:3782:3428":{"crate_id":1,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"4:20:2829":{"crate_id":4,"path":["lock_api","mutex","RawMutex"],"kind":"trait"},"1:44097:5080":{"crate_id":1,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"2:1785:238":{"crate_id":2,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"1:4171:3735":{"crate_id":1,"path":["core","array","iter","IntoIter"],"kind":"struct"},"1:45505:6010":{"crate_id":1,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"1:43244:88":{"crate_id":1,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"1:9447:3491":{"crate_id":1,"path":["core","panic","panic_info","PanicMessage"],"kind":"struct"},"1:33494:3399":{"crate_id":1,"path":["core","ops","arith","Mul"],"kind":"trait"},"1:3792:268":{"crate_id":1,"path":["core","ops","try_trait","Try"],"kind":"trait"},"1:12960:4925":{"crate_id":1,"path":["core","slice","GetManyMutError"],"kind":"struct"},"0:600:2435":{"crate_id":0,"path":["spin","Once"],"kind":"type_alias"},"1:43566:3826":{"crate_id":1,"path":["core","fmt","num","Binary"],"kind":"struct"},"1:42714:4899":{"crate_id":1,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"1:6121:4629":{"crate_id":1,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"1:46903:5182":{"crate_id":1,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"0:610:2046":{"crate_id":0,"path":["spin","lock_api"],"kind":"module"},"1:23001:11651":{"crate_id":1,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr"],"kind":"trait"},"1:4906:3384":{"crate_id":1,"path":["core","cell","RefMut"],"kind":"struct"},"1:22277:4952":{"crate_id":1,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"1:6810:4869":{"crate_id":1,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"1:53683:1885":{"crate_id":1,"path":["core","u16"],"kind":"primitive"},"1:41723:5049":{"crate_id":1,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"1:43072:208":{"crate_id":1,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"1:40457:5005":{"crate_id":1,"path":["core","array","TryFromSliceError"],"kind":"struct"},"1:53670:1862":{"crate_id":1,"path":["core","tuple"],"kind":"primitive"},"1:23362:4957":{"crate_id":1,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"1:45798:5163":{"crate_id":1,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"1:2784:103":{"crate_id":1,"path":["core","borrow","Borrow"],"kind":"trait"},"1:32869:2962":{"crate_id":1,"path":["core","convert","Infallible"],"kind":"enum"},"1:48108:5287":{"crate_id":1,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"1:3043:4252":{"crate_id":1,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"1:13688:123":{"crate_id":1,"path":["core","str","lossy","Debug"],"kind":"struct"},"4:478:3276":{"crate_id":4,"path":["lock_api","rwlock","RawRwLockDowngrade"],"kind":"trait"},"1:23706:4994":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroIsizeInner"],"kind":"struct"},"1:3558:128":{"crate_id":1,"path":["core","ops","deref","Deref"],"kind":"trait"},"1:12049:4920":{"crate_id":1,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"1:44136:5091":{"crate_id":1,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"4:151:3863":{"crate_id":4,"path":["lock_api","mutex","MappedMutexGuard"],"kind":"struct"},"1:44938:5116":{"crate_id":1,"path":["core","str","iter","Matches"],"kind":"struct"},"1:53676:761":{"crate_id":1,"path":["core","f128"],"kind":"primitive"},"1:3809:3433":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"1:41598:5046":{"crate_id":1,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"1:22881:11648":{"crate_id":1,"path":["core","core_simd","simd","num","float","SimdFloat"],"kind":"trait"},"1:41265:107":{"crate_id":1,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"1:38929:3418":{"crate_id":1,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"1:43468:3372":{"crate_id":1,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"4:227:3864":{"crate_id":4,"path":["lock_api","remutex","GetThreadId"],"kind":"trait"},"1:9484:3492":{"crate_id":1,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"1:41244:5020":{"crate_id":1,"path":["core","char","CaseMappingIter"],"kind":"struct"},"1:32936:4999":{"crate_id":1,"path":["core","error","Source"],"kind":"struct"},"1:22963:11650":{"crate_id":1,"path":["core","core_simd","simd","num","uint","SimdUint"],"kind":"trait"},"1:12077:4922":{"crate_id":1,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"1:7857:6429":{"crate_id":1,"path":["core","iter","range","Step"],"kind":"trait"},"1:7740:6398":{"crate_id":1,"path":["core","iter","adapters","zip","TrustedRandomAccess"],"kind":"trait"},"1:47397:5231":{"crate_id":1,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"1:36998:3416":{"crate_id":1,"path":["core","ops","bit","Shr"],"kind":"trait"},"1:43861:12333":{"crate_id":1,"path":["core","fmt","rt","ArgumentType"],"kind":"enum"},"4:490:3872":{"crate_id":4,"path":["lock_api","rwlock","RawRwLockRecursiveTimed"],"kind":"trait"},"1:53675:782":{"crate_id":1,"path":["core","f64"],"kind":"primitive"},"1:13411:6298":{"crate_id":1,"path":["core","str","traits","FromStr"],"kind":"trait"},"4:480:3870":{"crate_id":4,"path":["lock_api","rwlock","RawRwLockTimed"],"kind":"trait"},"1:5323:13157":{"crate_id":1,"path":["core","ffi","va_list","sealed_trait","VaArgSafe"],"kind":"trait"},"1:3540:3423":{"crate_id":1,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"1:33033:3464":{"crate_id":1,"path":["core","marker","Tuple"],"kind":"trait"},"1:14187:217":{"crate_id":1,"path":["core","future","pending","Pending"],"kind":"struct"},"1:45685:176":{"crate_id":1,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"1:11222:4649":{"crate_id":1,"path":["core","slice","sort","unstable","quicksort","GapGuardRaw"],"kind":"struct"},"1:45372:5151":{"crate_id":1,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"1:47994:5279":{"crate_id":1,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"1:3571:2734":{"crate_id":1,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"1:47613:5239":{"crate_id":1,"path":["core","core_arch","simd","m16x16"],"kind":"struct"},"1:43921:3836":{"crate_id":1,"path":["core","fmt","Arguments"],"kind":"struct"},"1:48172:5296":{"crate_id":1,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"1:44591:5099":{"crate_id":1,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"1:8315:158":{"crate_id":1,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"1:48210:5298":{"crate_id":1,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"1:47160:5204":{"crate_id":1,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"1:31326:2912":{"crate_id":1,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"1:42753:185":{"crate_id":1,"path":["core","option","Item"],"kind":"struct"},"1:13530:6498":{"crate_id":1,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"1:2671:697":{"crate_id":1,"path":["core","ptr","drop_in_place"],"kind":"function"},"0:616:245":{"crate_id":0,"path":["spin","lock_api","RwLock"],"kind":"type_alias"},"1:14055:4942":{"crate_id":1,"path":["core","future","async_drop","AsyncDropOwning"],"kind":"struct"},"1:45338:6505":{"crate_id":1,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"1:45772:5162":{"crate_id":1,"path":["core","task","wake","ContextBuilder"],"kind":"struct"},"1:23066:4277":{"crate_id":1,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr","with_exposed_provenance"],"kind":"function"},"1:42496:4893":{"crate_id":1,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"1:47368:5230":{"crate_id":1,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"1:11577:252":{"crate_id":1,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"1:43318:89":{"crate_id":1,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"1:22383:11562":{"crate_id":1,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"1:2159:1397":{"crate_id":1,"path":["core","ptr"],"kind":"module"},"1:45118:6504":{"crate_id":1,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"1:47509:5235":{"crate_id":1,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"1:2228:4294":{"crate_id":1,"path":["core","ptr","metadata","Thin"],"kind":"trait_alias"},"0:28:2045":{"crate_id":0,"path":["spin","lazy"],"kind":"module"},"1:47862:5275":{"crate_id":1,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"0:89:2725":{"crate_id":0,"path":["spin","mutex","spin","SpinMutex"],"kind":"struct"},"1:3599:155":{"crate_id":1,"path":["core","ops","function","FnOnce"],"kind":"trait"},"1:45740:5157":{"crate_id":1,"path":["core","task","wake","RawWaker"],"kind":"struct"},"1:41286:6421":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:13460:4902":{"crate_id":1,"path":["core","str","pattern","Pattern"],"kind":"trait"},"1:44902:5115":{"crate_id":1,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"1:10876:165":{"crate_id":1,"path":["core","hash","Hash"],"kind":"trait"},"5:0:3858":{"crate_id":5,"path":["scopeguard"],"kind":"module"},"1:46833:5174":{"crate_id":1,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"1:47418:5232":{"crate_id":1,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"1:2235:4292":{"crate_id":1,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"1:41078:5007":{"crate_id":1,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"1:23695:4993":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroI128Inner"],"kind":"struct"},"1:44838:4919":{"crate_id":1,"path":["core","str","iter","SplitN"],"kind":"struct"},"1:44081:5077":{"crate_id":1,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"1:44321:6001":{"crate_id":1,"path":["core","slice","sort","stable","drift","DriftsortRun"],"kind":"struct"},"1:48157:5295":{"crate_id":1,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"1:43394:91":{"crate_id":1,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"1:53679:927":{"crate_id":1,"path":["core","i32"],"kind":"primitive"},"5:19:4624":{"crate_id":5,"path":["scopeguard","ScopeGuard"],"kind":"struct"},"1:41473:5037":{"crate_id":1,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"1:14095:5040":{"crate_id":1,"path":["core","future","async_drop","Fuse"],"kind":"struct"},"4:822:3876":{"crate_id":4,"path":["lock_api","rwlock","MappedRwLockWriteGuard"],"kind":"struct"},"1:0:585":{"crate_id":1,"path":["core"],"kind":"module"},"1:53668:1738":{"crate_id":1,"path":["core","slice"],"kind":"primitive"},"1:41313:5016":{"crate_id":1,"path":["core","ffi","c_str","Bytes"],"kind":"struct"},"1:9597:4902":{"crate_id":1,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"1:40197:3422":{"crate_id":1,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"1:22257:12896":{"crate_id":1,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"1:31062:6246":{"crate_id":1,"path":["core","num","FpCategory"],"kind":"enum"},"1:10441:3839":{"crate_id":1,"path":["core","fmt","builders","FormatterFn"],"kind":"struct"},"1:31358:12173":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum"],"kind":"enum"},"1:3803:3430":{"crate_id":1,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"1:47530:5236":{"crate_id":1,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"1:47547:5237":{"crate_id":1,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"1:42821:3490":{"crate_id":1,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"1:32915:4997":{"crate_id":1,"path":["core","error","tags","Value"],"kind":"struct"},"1:32946:251":{"crate_id":1,"path":["core","marker","Sized"],"kind":"trait"},"1:41042:4852":{"crate_id":1,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"1:40294:225":{"crate_id":1,"path":["core","ops","range","RangeFull"],"kind":"struct"},"1:41487:5040":{"crate_id":1,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"1:23418:4965":{"crate_id":1,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"1:33003:3463":{"crate_id":1,"path":["core","marker","Unpin"],"kind":"trait"},"1:47177:5205":{"crate_id":1,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"1:3719:223":{"crate_id":1,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"1:4928:2839":{"crate_id":1,"path":["core","cell","UnsafeCell"],"kind":"struct"},"4:595:246":{"crate_id":4,"path":["lock_api","rwlock","RwLockReadGuard"],"kind":"struct"},"1:5417:1007":{"crate_id":1,"path":["core","iter"],"kind":"module"},"1:23640:4988":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroUsizeInner"],"kind":"struct"},"1:47192:5206":{"crate_id":1,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"1:43900:150":{"crate_id":1,"path":["core","fmt","Error"],"kind":"struct"},"1:45493:6007":{"crate_id":1,"path":["core","str","IsWhitespace"],"kind":"struct"},"1:8277:6439":{"crate_id":1,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"1:53677:939":{"crate_id":1,"path":["core","i8"],"kind":"primitive"},"0:0:2455":{"crate_id":0,"path":["spin"],"kind":"module"},"1:42528:6444":{"crate_id":1,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"1:53690:13":{"crate_id":1,"path":["core","fn"],"kind":"primitive"},"1:32911:4996":{"crate_id":1,"path":["core","error","private","Internal"],"kind":"struct"},"4:591:4714":{"crate_id":4,"path":["lock_api","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"1:40369:226":{"crate_id":1,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"1:43806:5991":{"crate_id":1,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"1:45509:6011":{"crate_id":1,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"1:53685:1897":{"crate_id":1,"path":["core","u64"],"kind":"primitive"},"1:8852:15253":{"crate_id":1,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"0:365:3080":{"crate_id":0,"path":["spin","relax","Loop"],"kind":"struct"},"1:10296:15254":{"crate_id":1,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"0:263:2049":{"crate_id":0,"path":["spin","once"],"kind":"module"},"1:23496:5924":{"crate_id":1,"path":["core","num","fmt","Formatted"],"kind":"struct"},"4:87:4714":{"crate_id":4,"path":["lock_api","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"1:45485:6005":{"crate_id":1,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"1:8394:134":{"crate_id":1,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"1:47224:5208":{"crate_id":1,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"1:45477:6003":{"crate_id":1,"path":["core","str","LinesMap"],"kind":"struct"},"1:5375:4858":{"crate_id":1,"path":["core","io","borrowed_buf","BorrowedBuf"],"kind":"struct"},"1:53684:1891":{"crate_id":1,"path":["core","u32"],"kind":"primitive"},"1:31294:2841":{"crate_id":1,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"1:23332:4956":{"crate_id":1,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"1:45051:5014":{"crate_id":1,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"1:47110:5202":{"crate_id":1,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"1:10301:5568":{"crate_id":1,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"1:48093:5286":{"crate_id":1,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"1:12580:4924":{"crate_id":1,"path":["core","slice","iter","ChunkByMut"],"kind":"struct"},"1:11564:12896":{"crate_id":1,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"1:10661:133":{"crate_id":1,"path":["core","fmt","Display"],"kind":"trait"},"1:43355:96":{"crate_id":1,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"1:41464:4864":{"crate_id":1,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"1:4536:6380":{"crate_id":1,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"1:3063:78":{"crate_id":1,"path":["core","convert","AsRef"],"kind":"trait"},"1:8335:3598":{"crate_id":1,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"1:33004:3465":{"crate_id":1,"path":["core","marker","PhantomPinned"],"kind":"struct"},"1:32947:258":{"crate_id":1,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"1:41558:4876":{"crate_id":1,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"1:33036:278":{"crate_id":1,"path":["core","marker","UnsizedConstParamTy"],"kind":"trait"},"1:41962:5050":{"crate_id":1,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"1:53682:1903":{"crate_id":1,"path":["core","u8"],"kind":"primitive"},"1:41237:5019":{"crate_id":1,"path":["core","char","ToUppercase"],"kind":"struct"},"1:3147:127":{"crate_id":1,"path":["core","default","Default"],"kind":"trait"},"1:4701:2671":{"crate_id":1,"path":["core","cell","Cell"],"kind":"struct"},"1:11752:4260":{"crate_id":1,"path":["core","slice","iter","Iter"],"kind":"struct"},"1:47078:5200":{"crate_id":1,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"1:4653:3389":{"crate_id":1,"path":["core","cell","once","OnceCell"],"kind":"struct"},"0:275:2435":{"crate_id":0,"path":["spin","once","Once"],"kind":"struct"},"1:42909:5070":{"crate_id":1,"path":["core","range","iter","IterRangeInclusive"],"kind":"struct"},"1:40233:3424":{"crate_id":1,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"1:43833:6000":{"crate_id":1,"path":["core","fmt","rt","Count"],"kind":"enum"},"1:44542:5093":{"crate_id":1,"path":["core","slice","iter","Windows"],"kind":"struct"},"1:6310:4867":{"crate_id":1,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"1:44784:5112":{"crate_id":1,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"1:23052:11652":{"crate_id":1,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr"],"kind":"trait"},"1:10675:3830":{"crate_id":1,"path":["core","fmt","UpperExp"],"kind":"trait"},"1:23585:4983":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroU8Inner"],"kind":"struct"},"4:473:3869":{"crate_id":4,"path":["lock_api","rwlock","RawRwLockFair"],"kind":"trait"},"1:47209:5207":{"crate_id":1,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"1:45359:5145":{"crate_id":1,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"1:4850:3382":{"crate_id":1,"path":["core","cell","Ref"],"kind":"struct"},"1:41164:6396":{"crate_id":1,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"1:10671:218":{"crate_id":1,"path":["core","fmt","Pointer"],"kind":"trait"},"1:23277:4955":{"crate_id":1,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"1:45390:4938":{"crate_id":1,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"1:53673:763":{"crate_id":1,"path":["core","f16"],"kind":"primitive"},"1:7741:6399":{"crate_id":1,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"0:201:199":{"crate_id":0,"path":["spin","mutex","MutexGuard"],"kind":"struct"},"1:47139:5203":{"crate_id":1,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"1:22385:4952":{"crate_id":1,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"1:3822:14768":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"1:11215:4647":{"crate_id":1,"path":["core","slice","sort","unstable","quicksort","GapGuard"],"kind":"struct"},"1:8804:162":{"crate_id":1,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"1:2226:4293":{"crate_id":1,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"1:23137:11644":{"crate_id":1,"path":["core","core_simd","simd","cmp","ord","SimdPartialOrd"],"kind":"trait"},"1:41933:4884":{"crate_id":1,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"1:45239:5137":{"crate_id":1,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"1:45489:6006":{"crate_id":1,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"1:22188:15729":{"crate_id":1,"path":["core","core_simd","swizzle","resize","Resize"],"kind":"struct"},"1:42762:4260":{"crate_id":1,"path":["core","option","Iter"],"kind":"struct"},"1:11844:4914":{"crate_id":1,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"1:4771:3373":{"crate_id":1,"path":["core","cell","BorrowError"],"kind":"struct"},"1:14483:6540":{"crate_id":1,"path":["core","alloc","Allocator"],"kind":"trait"},"1:3075:272":{"crate_id":1,"path":["core","convert","TryInto"],"kind":"trait"},"1:46918:5183":{"crate_id":1,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"1:43816:3835":{"crate_id":1,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"1:22686:15731":{"crate_id":1,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"1:44634:5102":{"crate_id":1,"path":["core","slice","iter","RChunks"],"kind":"struct"},"1:14212:4947":{"crate_id":1,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"1:23469:12165":{"crate_id":1,"path":["core","num","fmt","Part"],"kind":"enum"},"1:42662:5064":{"crate_id":1,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"1:48073:5284":{"crate_id":1,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"5:14:11910":{"crate_id":5,"path":["scopeguard","Strategy"],"kind":"trait"},"1:1948:2833":{"crate_id":1,"path":["core","mem"],"kind":"module"},"1:3481:3414":{"crate_id":1,"path":["core","ops","bit","Not"],"kind":"trait"},"1:10114:92":{"crate_id":1,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"1:3837:115":{"crate_id":1,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"1:3357:3460":{"crate_id":1,"path":["core","marker","Freeze"],"kind":"trait"},"1:13471:6490":{"crate_id":1,"path":["core","str","pattern","Searcher"],"kind":"trait"},"1:41149:4852":{"crate_id":1,"path":["core","char","EscapeDefault"],"kind":"struct"},"4:710:2448":{"crate_id":4,"path":["lock_api","rwlock","RwLockUpgradableReadGuard"],"kind":"struct"},"1:14346:119":{"crate_id":1,"path":["core","task","wake","Context"],"kind":"struct"},"4:505:3874":{"crate_id":4,"path":["lock_api","rwlock","RawRwLockUpgradeTimed"],"kind":"trait"},"4:493:3271":{"crate_id":4,"path":["lock_api","rwlock","RawRwLockUpgrade"],"kind":"trait"},"0:598:198":{"crate_id":0,"path":["spin","Mutex"],"kind":"type_alias"},"1:3426:3409":{"crate_id":1,"path":["core","ops","async_function","AsyncFnMut"],"kind":"trait"},"1:34776:3412":{"crate_id":1,"path":["core","ops","bit","BitOr"],"kind":"trait"},"1:13482:6488":{"crate_id":1,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"1:40389:228":{"crate_id":1,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"1:13202:4933":{"crate_id":1,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"1:41203:5018":{"crate_id":1,"path":["core","char","ToLowercase"],"kind":"struct"},"1:45555:5154":{"crate_id":1,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"1:1919:4059":{"crate_id":1,"path":["core","intrinsics","AggregateRawPtr"],"kind":"trait"},"0:394:246":{"crate_id":0,"path":["spin","rwlock","RwLockReadGuard"],"kind":"struct"},"1:45481:6004":{"crate_id":1,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"1:40439:3431":{"crate_id":1,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"1:11956:4917":{"crate_id":1,"path":["core","slice","iter","RSplit"],"kind":"struct"},"1:44704:4927":{"crate_id":1,"path":["core","str","iter","Chars"],"kind":"struct"},"1:45821:5165":{"crate_id":1,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"1:22987:12896":{"crate_id":1,"path":["core","core_simd","simd","num","sealed","Sealed"],"kind":"trait"},"1:11359:4650":{"crate_id":1,"path":["core","slice","sort","shared","smallsort","CopyOnDrop"],"kind":"struct"},"1:10101:406":{"crate_id":1,"path":["core","sync","atomic"],"kind":"module"},"1:46818:5173":{"crate_id":1,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"1:10623:156":{"crate_id":1,"path":["core","fmt","Formatter"],"kind":"struct"},"1:47095:5201":{"crate_id":1,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"1:23095:12896":{"crate_id":1,"path":["core","core_simd","simd","ptr","sealed","Sealed"],"kind":"trait"},"1:41549:5044":{"crate_id":1,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"1:53678:921":{"crate_id":1,"path":["core","i16"],"kind":"primitive"},"1:48036:5281":{"crate_id":1,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"1:46886:5181":{"crate_id":1,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"1:23607:4985":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroU32Inner"],"kind":"struct"},"1:53689:1460":{"crate_id":1,"path":["core","reference"],"kind":"primitive"},"1:10673:3829":{"crate_id":1,"path":["core","fmt","LowerExp"],"kind":"trait"},"1:53662:1208":{"crate_id":1,"path":["core","never"],"kind":"primitive"},"0:37:2431":{"crate_id":0,"path":["spin","lazy","Lazy"],"kind":"struct"},"1:23222:4953":{"crate_id":1,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"1:34190:3403":{"crate_id":1,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"1:22176:15726":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"5:60:11911":{"crate_id":5,"path":["scopeguard","Always"],"kind":"enum"},"1:2043:4629":{"crate_id":1,"path":["core","mem","maybe_uninit","Guard"],"kind":"struct"},"0:358:2208":{"crate_id":0,"path":["spin","relax"],"kind":"module"},"1:13477:6489":{"crate_id":1,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"1:912:202":{"crate_id":1,"path":["core","num","nonzero","NonZero"],"kind":"struct"},"1:44128:5090":{"crate_id":1,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"1:5356:454":{"crate_id":1,"path":["core","ffi","c_void"],"kind":"enum"},"1:3327:2840":{"crate_id":1,"path":["core","marker","PhantomData"],"kind":"struct"},"1:23684:4992":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroI64Inner"],"kind":"struct"},"1:11883:4915":{"crate_id":1,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"1:2122:696":{"crate_id":1,"path":["core","mem","drop"],"kind":"function"},"1:47642:5240":{"crate_id":1,"path":["core","core_arch","simd","m32x8"],"kind":"struct"},"1:4840:3381":{"crate_id":1,"path":["core","cell","BorrowRef"],"kind":"struct"},"1:42770:4261":{"crate_id":1,"path":["core","option","IterMut"],"kind":"struct"},"1:44551:5094":{"crate_id":1,"path":["core","slice","iter","Chunks"],"kind":"struct"},"1:45707:219":{"crate_id":1,"path":["core","task","poll","Poll"],"kind":"enum"},"1:23434:12163":{"crate_id":1,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"4:462:3263":{"crate_id":4,"path":["lock_api","rwlock","RawRwLock"],"kind":"trait"},"0:594:2429":{"crate_id":0,"path":["spin","Barrier"],"kind":"type_alias"},"0:595:2431":{"crate_id":0,"path":["spin","Lazy"],"kind":"type_alias"},"1:31732:3706":{"crate_id":1,"path":["core","cmp","Reverse"],"kind":"struct"},"1:44580:5098":{"crate_id":1,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"1:44338:4909":{"crate_id":1,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"1:3315:277":{"crate_id":1,"path":["core","marker","Unsize"],"kind":"trait"},"1:41252:5021":{"crate_id":1,"path":["core","char","TryFromCharError"],"kind":"struct"},"1:47817:5274":{"crate_id":1,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"1:10656:123":{"crate_id":1,"path":["core","fmt","Debug"],"kind":"trait"},"1:8030:2660":{"crate_id":1,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"1:44710:5110":{"crate_id":1,"path":["core","str","iter","CharIndices"],"kind":"struct"},"1:23142:11642":{"crate_id":1,"path":["core","core_simd","simd","cmp","ord","SimdOrd"],"kind":"trait"},"1:41417:5032":{"crate_id":1,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"1:45531:135":{"crate_id":1,"path":["core","time","Duration"],"kind":"struct"},"1:34391:3404":{"crate_id":1,"path":["core","ops","arith","DivAssign"],"kind":"trait"}},"external_crates":{"5":{"name":"scopeguard","html_root_url":"https://docs.rs/scopeguard/1/"},"2":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"lock_api","html_root_url":null},"1":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":33}