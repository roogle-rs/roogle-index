{"root":"0:0:1657","crate_version":"1.9.0","includes_private":false,"index":{"1:4767:2363":{"id":"1:4767:2363","crate_id":1,"name":"AsyncIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4768:1732","1:4769:32289","1:4770:1735"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13391:35640":{"id":"1:13391:35640","crate_id":1,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[stable(feature = \"str_mut_extras\", since = \"1.20.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:600:1302":{"id":"0:600:1302","crate_id":0,"name":"size","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:464:1732":{"id":"0:464:1732","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"0:656":{"id":"0:656","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"array","inner":{"type":{"kind":"generic","inner":"T"},"len":"393216"}},"items":["0:659:1732","0:660:1302"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:576":{"id":"0:576","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"array","inner":{"type":{"kind":"generic","inner":"T"},"len":"64"}},"items":["0:579:1732","0:580:1302"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:631":{"id":"0:631","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"array","inner":{"type":{"kind":"generic","inner":"T"},"len":"24576"}},"items":["0:634:1732","0:635:1302"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:143":{"id":"0:143","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[383,0],"end":[406,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"outlives":"'a"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Drop","id":"1:3500:1738","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:107:1726","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["0:146:578"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:211:1929":{"id":"0:211:1929","crate_id":0,"name":"insert_many","span":{"filename":"src/lib.rs","begin":[1093,4],"end":[1175,5]},"visibility":"public","docs":"Insert multiple elements at position `index`, shifting all following elements toward the\nback.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}],["iterable",{"kind":"generic","inner":"I"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"1:8384:151","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:377:1728","args":null,"param_names":[]}}}}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:475:1302":{"id":"0:475:1302","crate_id":0,"name":"size","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:454:1732":{"id":"0:454:1732","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"0:586":{"id":"0:586","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"array","inner":{"type":{"kind":"generic","inner":"T"},"len":"128"}},"items":["0:589:1732","0:590:1302"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:3265:220":{"id":"1:3265:220","crate_id":1,"name":"Sync","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:1:3186-0:330:2113":{"id":"b:1:3186-0:330:2113","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:3159:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:330:2113","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"items":["1:3188:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:364:768":{"id":"0:364:768","crate_id":0,"name":"into_iter","span":{"filename":"src/lib.rs","begin":[1983,4],"end":[1994,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"1:8384:151","args":null,"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:10272:109":{"id":"1:10272:109","crate_id":1,"name":"Debug","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10273:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:246":{"id":"0:246","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1491,0],"end":[1535,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:377:1728","args":null,"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"SmallVec","id":"0:168:1662","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"items":["0:248:2060","0:249:1663"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:10281:2885":{"id":"1:10281:2885","crate_id":1,"name":"Octal","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10282:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"4:6103:36294":{"id":"4:6103:36294","crate_id":4,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"4:8368:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"4:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:315:604":{"id":"0:315:604","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[1853,4],"end":[1855,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"SmallVec","id":"0:168:1662","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:22902:7213":{"id":"1:22902:7213","crate_id":1,"name":"SupportedLaneCount","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:22892:7211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:259:305":{"id":"0:259:305","crate_id":0,"name":"as_ref","span":{"filename":"src/lib.rs","begin":[1560,4],"end":[1562,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:377:1728","args":null,"param_names":[]}}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:3192-0:330:2113":{"id":"b:1:3192-0:330:2113","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:3166:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"1:3162:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:330:2113","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"items":["1:3195:127","1:3196:1414"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:3258:2498":{"id":"1:3258:2498","crate_id":1,"name":"Sized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:520:1302":{"id":"0:520:1302","crate_id":0,"name":"size","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:429:1732":{"id":"0:429:1732","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"1:13440:6502":{"id":"1:13440:6502","crate_id":1,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"str::split":"1:57817:2295","self::pattern":"1:13018:3477","prim@char":"1:57811:2290","`DoubleEndedIterator`":"1:8428:120","str::rsplit_terminator":"1:57817:2295"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitTerminator","id":"1:49457:6080","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:4624","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13446:5721":{"id":"1:13446:5721","crate_id":1,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:57811:2290","self::pattern":"1:13018:3477","str::rsplitn":"1:57817:2295"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"1:49511:2586","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:4624","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:661":{"id":"0:661","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"array","inner":{"type":{"kind":"generic","inner":"T"},"len":"524288"}},"items":["0:664:1732","0:665:1302"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:23427:7250":{"id":"1:23427:7250","crate_id":1,"name":"SimdPartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:23428:1268","1:23429:1267","1:23430:1265","1:23431:1264"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SimdPartialEq","id":"1:22839:7249","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:3565:2100":{"id":"1:3565:2100","crate_id":1,"name":"IndexMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3567:754"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3258:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Index","id":"1:3561:2099","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Idx"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:318":{"id":"0:318","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1860,0],"end":[1868,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:377:1728","args":null,"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"1:2951:184","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["le","ge","lt","gt"],"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"1:2951:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"SmallVec","id":"0:168:1662","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SmallVec","id":"0:168:1662","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"items":["0:320:997"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:2858:2071":{"id":"1:2858:2071","crate_id":1,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13490:35652":{"id":"1:13490:35652","crate_id":1,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"self::pattern":"1:13018:3477","prim@char":"1:57811:2290"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:4624","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:4624","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:13043:6057","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:461":{"id":"0:461","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"array","inner":{"type":{"kind":"generic","inner":"T"},"len":"11"}},"items":["0:464:1732","0:465:1302"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:139:793":{"id":"0:139:793","crate_id":0,"name":"len","span":{"filename":"src/lib.rs","begin":[376,4],"end":[378,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:404":{"id":"0:404","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[277,9],"end":[277,14]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10272:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CollectionAllocErr","id":"0:399:1702","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:405:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:297:1874":{"id":"0:297:1874","crate_id":0,"name":"extend","span":{"filename":"src/lib.rs","begin":[1755,4],"end":[1776,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["iterable",{"kind":"generic","inner":"I"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"1:8384:151","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:377:1728","args":null,"param_names":[]}}}}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3200:127":{"id":"1:3200:127","crate_id":1,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Infallible","id":"1:38753:6727","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"1:13387:35639":{"id":"1:13387:35639","crate_id":1,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"1:57817:2295"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:4:787-0:330:2113":{"id":"b:4:787-0:330:2113","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"4:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:330:2113","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"items":["4:789:3777","4:790:31518","4:791:31519"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:402:1706":{"id":"0:402:1706","crate_id":0,"name":"AllocErr","span":{"filename":"src/lib.rs","begin":[282,4],"end":[285,5]},"visibility":"default","docs":"The allocator return an error","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"struct","variant_inner":["0:403:1708"]}},"1:3509:132":{"id":"1:3509:132","crate_id":1,"name":"FnOnce","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3511:181","1:3512:378"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:405:660":{"id":"0:405:660","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[277,9],"end":[277,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"1:10232:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"1:10221:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3718:137":{"id":"1:3718:137","crate_id":1,"name":"FromResidual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3720:687"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"Try","id":"1:3713:224","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:1:3186-0:107:1726":{"id":"b:1:3186-0:107:1726","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:3159:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:107:1726","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["1:3188:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:1:2856-0:399:1702":{"id":"b:1:2856-0:399:1702","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3258:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"1:2850:1612","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CollectionAllocErr","id":"0:399:1702","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:2858:2071"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:476":{"id":"0:476","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"array","inner":{"type":{"kind":"generic","inner":"T"},"len":"14"}},"items":["0:479:1732","0:480:1302"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:8863:2435":{"id":"1:8863:2435","crate_id":1,"name":"TrustedLen","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"1:8582:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:22839:7249":{"id":"1:22839:7249","crate_id":1,"name":"SimdPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:22840:7248","1:22841:1245","1:22842:1270"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:337:660":{"id":"0:337:660","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[1906,4],"end":[1908,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"1:10232:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"1:10221:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:183:793":{"id":"0:183:793","crate_id":0,"name":"len","span":{"filename":"src/lib.rs","begin":[729,4],"end":[731,5]},"visibility":"public","docs":"The number of elements stored in the vector","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:312":{"id":"0:312","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1848,0],"end":[1856,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:377:1728","args":null,"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2905:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"B"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:377:1728","args":null,"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2905:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"SmallVec","id":"0:168:1662","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SmallVec","id":"0:168:1662","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"items":["0:315:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:13037:6058":{"id":"1:13037:6058","crate_id":1,"name":"Searcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["1:13039:6158","1:13040:922","1:13041:6216","1:13042:6217"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13383:1826":{"id":"1:13383:1826","crate_id":1,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_is_empty\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13412:6464":{"id":"1:13412:6464","crate_id":1,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]","#[allow(deprecated)]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LinesAny","id":"1:49671:6074","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13423:2859":{"id":"1:13423:2859","crate_id":1,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"prim@char":"1:57811:2290","self::pattern":"1:13018:3477","`None`":"1:47440:176"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47440:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:4624","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:222:1946":{"id":"0:222:1946","crate_id":0,"name":"into_boxed_slice","span":{"filename":"src/lib.rs","begin":[1196,4],"end":[1198,5]},"visibility":"public","docs":"Converts a `SmallVec` into a `Box<[T]>` without reallocating if the `SmallVec` has already spilled\nonto the heap.\n\nNote that this will drop any excess capacity.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Box","id":"4:432:1610","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:377:1728","args":null,"param_names":[]}}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:3294:2364-0:107:1726":{"id":"a:1:3294:2364-0:107:1726","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"1:3294:2364","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:107:1726","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:324":{"id":"0:324","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1880,0],"end":[1887,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:377:1728","args":null,"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Hash","id":"1:10510:142","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["hash_slice"],"trait":{"kind":"resolved_path","inner":{"name":"Hash","id":"1:10510:142","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SmallVec","id":"0:168:1662","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"items":["0:326:715"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:13043:6057":{"id":"1:13043:6057","crate_id":1,"name":"ReverseSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["1:13045:1736","1:13046:6219","1:13047:6220"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Searcher","id":"1:13037:6058","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:670:1302":{"id":"0:670:1302","crate_id":0,"name":"size","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:260":{"id":"0:260","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1565,0],"end":[1570,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"AsMut","id":"1:3153:74","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SmallVec","id":"0:168:1662","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"items":["0:262:1741"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:594:1732":{"id":"0:594:1732","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"0:604:1732":{"id":"0:604:1732","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"0:534:1732":{"id":"0:534:1732","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"a:1:3265:220-0:168:1662":{"id":"a:1:3265:220-0:168:1662","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"A"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"1:3265:220","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"1:3265:220","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SmallVec","id":"0:168:1662","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:3380:2516":{"id":"1:3380:2516","crate_id":1,"name":"BitAnd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3382:181","1:3383:351"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3401:2521":{"id":"1:3401:2521","crate_id":1,"name":"Shr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3403:181","1:3404:1234"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:10289:189":{"id":"1:10289:189","crate_id":1,"name":"Pointer","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10290:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:8582:157":{"id":"1:8582:157","crate_id":1,"name":"Iterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:8583:1732","1:8584:922","1:8585:2828","1:8588:1735","1:8589:495","1:8591:2829","1:8594:2830","1:8595:2831","1:8596:2832","1:8597:2833","1:8599:2439","1:8601:2834","1:8602:2835","1:8604:841","1:8607:1739","1:8614:2836","1:8616:2837","1:8619:2838","1:8620:2839","1:8621:2840","1:8623:2841","1:8625:2842","1:8628:1306","1:8629:2061","1:8630:2843","1:8634:2844","1:8637:2845","1:8638:2846","1:8639:2847","1:8641:2848","1:8642:1942","1:8644:2849","1:8647:2850","1:8649:2851","1:8659:2852","1:8674:2853","1:8676:2854","1:8680:2855","1:8689:2856","1:8692:2857","1:8694:2858","1:8697:276","1:8704:294","1:8711:2859","1:8718:2860","1:8727:2861","1:8737:1014","1:8744:2862","1:8751:2818","1:8752:2819","1:8753:2863","1:8765:2864","1:8772:2865","1:8784:2866","1:8791:2867","1:8792:2868","1:8797:2869","1:8800:2098","1:8803:2870","1:8804:2871","1:8806:2872","1:8808:415","1:8811:2873","1:8814:997","1:8817:2874","1:8820:604","1:8823:2875","1:8826:907","1:8828:826","1:8830:792","1:8832:713","1:8834:696","1:8836:2876","1:8837:2877","1:8845:2878"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13493:35653":{"id":"1:13493:35653","crate_id":1,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:57811:2290","self::pattern":"1:13018:3477"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:4624","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"4:5833:5712":{"id":"4:5833:5712","crate_id":4,"name":"Concat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:5835:181","4:5836:432"],"generics":{"params":[{"name":"Item","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Item"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3258:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:640:1302":{"id":"0:640:1302","crate_id":0,"name":"size","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:107:1726":{"id":"0:107:1726","crate_id":0,"name":"Drain","span":{"filename":"src/lib.rs","begin":[330,0],"end":[335,1]},"visibility":"public","docs":"An iterator that removes the items from a `SmallVec` and yields them by value.\n\nReturned from [`SmallVec::drain`][1].\n\n[1]: struct.SmallVec.html#method.drain","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"outlives":"'a"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:1:9240:2711-0:107:1726","a:1:3294:2364-0:107:1726","a:1:9239:2712-0:107:1726","b:1:3186-0:107:1726","b:1:3986-0:107:1726","b:1:8388-0:107:1726","b:1:3197-0:107:1726","b:1:2853-0:107:1726","b:1:3192-0:107:1726","b:1:2856-0:107:1726","b:1:3182-0:107:1726","0:114","0:118","0:121","0:124","0:131","0:136","0:140","0:143"]}},"0:490:1302":{"id":"0:490:1302","crate_id":0,"name":"size","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:223:1754":{"id":"0:223:1754","crate_id":0,"name":"into_inner","span":{"filename":"src/lib.rs","begin":[1204,4],"end":[1215,5]},"visibility":"public","docs":"Convert the SmallVec into an `A` if possible. Otherwise return `Err(Self)`.\n\nThis method returns `Err(Self)` if the SmallVec is too short (and the `A` contains uninitialized elements),\nor if the SmallVec is too long (and all the elements were spilled to the heap).","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:47567:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:426":{"id":"0:426","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"array","inner":{"type":{"kind":"generic","inner":"T"},"len":"4"}},"items":["0:429:1732","0:430:1302"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:239:304":{"id":"0:239:304","crate_id":0,"name":"as_ptr","span":{"filename":"src/lib.rs","begin":[1413,4],"end":[1418,5]},"visibility":"public","docs":"Returns a raw pointer to the vector's buffer.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:377:1728","args":null,"param_names":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:541":{"id":"0:541","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"array","inner":{"type":{"kind":"generic","inner":"T"},"len":"27"}},"items":["0:544:1732","0:545:1302"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:13455:35644":{"id":"1:13455:35644","crate_id":1,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47440:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:4624","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:4624","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:13043:6057","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:9240:2711-0:168:1662":{"id":"a:1:9240:2711-0:168:1662","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"A"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"1:9240:2711","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"1:9240:2711","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"1:9240:2711","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SmallVec","id":"0:168:1662","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:252:221":{"id":"0:252:221","crate_id":0,"name":"Target","span":{"filename":"src/lib.rs","begin":[1538,4],"end":[1538,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"slice","inner":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}}},"1:12465:2574":{"id":"1:12465:2574","crate_id":1,"name":"SlicePattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:12466:1732","1:12467:1733"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3352:2511":{"id":"1:3352:2511","crate_id":1,"name":"AddAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3354:266"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:265:1611":{"id":"0:265:1611","crate_id":0,"name":"borrow","span":{"filename":"src/lib.rs","begin":[1574,4],"end":[1576,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:377:1728","args":null,"param_names":[]}}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:377:1728":{"id":"0:377:1728","crate_id":0,"name":"Array","span":{"filename":"src/lib.rs","begin":[2014,0],"end":[2019,1]},"visibility":"public","docs":"Types that can be used as the backing store for a SmallVec","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["0:378:1732","0:379:1302"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:406","0:411","0:416","0:421","0:426","0:431","0:436","0:441","0:446","0:451","0:456","0:461","0:466","0:471","0:476","0:481","0:486","0:491","0:496","0:501","0:506","0:511","0:516","0:521","0:526","0:531","0:536","0:541","0:546","0:551","0:556","0:561","0:566","0:571","0:576","0:581","0:586","0:591","0:596","0:601","0:606","0:611","0:616","0:621","0:626","0:631","0:636","0:641","0:646","0:651","0:656","0:661","0:666"]}},"b:4:6413-0:399:1702":{"id":"b:4:6413-0:399:1702","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"1:10279:119","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3258:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"ToString","id":"4:6411:223","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CollectionAllocErr","id":"0:399:1702","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["4:6415:1395"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:399:1702":{"id":"0:399:1702","crate_id":0,"name":"CollectionAllocErr","span":{"filename":"src/lib.rs","begin":[278,0],"end":[286,1]},"visibility":"public","docs":"Error type for APIs with fallible heap allocation","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:400:1704","0:402:1706"],"impls":["a:1:9240:2711-0:399:1702","a:1:3294:2364-0:399:1702","a:1:9239:2712-0:399:1702","a:1:3265:220-0:399:1702","a:1:3253:211-0:399:1702","b:1:3186-0:399:1702","b:1:3986-0:399:1702","b:1:3197-0:399:1702","b:1:2853-0:399:1702","b:1:3192-0:399:1702","b:1:2856-0:399:1702","b:1:3182-0:399:1702","b:4:6413-0:399:1702","0:404","0:96","0:98"]}},"0:243:2048":{"id":"0:243:2048","crate_id":0,"name":"from_slice","span":{"filename":"src/lib.rs","begin":[1436,4],"end":[1460,5]},"visibility":"public","docs":"Copy the elements from a slice into a new `SmallVec`.\n\nFor slices of `Copy` types, this is more efficient than `SmallVec::from(slice)`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["slice",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:377:1728","args":null,"param_names":[]}}}}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13434:6030":{"id":"1:13434:6030","crate_id":1,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"self::pattern":"1:13018:3477","prim@char":"1:57811:2290"},"attrs":["#[stable(feature = \"split_inclusive\", since = \"1.51.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitInclusive","id":"1:12810:2601","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:4624","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:616":{"id":"0:616","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"array","inner":{"type":{"kind":"generic","inner":"T"},"len":"4096"}},"items":["0:619:1732","0:620:1302"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:611":{"id":"0:611","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"array","inner":{"type":{"kind":"generic","inner":"T"},"len":"2048"}},"items":["0:614:1732","0:615:1302"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:200:1788":{"id":"0:200:1788","crate_id":0,"name":"reserve_exact","span":{"filename":"src/lib.rs","begin":[963,4],"end":[965,5]},"visibility":"public","docs":"Reserve the minimum capacity for `additional` more elements to be inserted.\n\nPanics if the new capacity overflows `usize`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["additional",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:2910:124":{"id":"1:2910:124","crate_id":1,"name":"Eq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2905:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:13481:35651":{"id":"1:13481:35651","crate_id":1,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:57811:2290","self::pattern":"1:13018:3477"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:4624","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:556":{"id":"0:556","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"array","inner":{"type":{"kind":"generic","inner":"T"},"len":"30"}},"items":["0:559:1732","0:560:1302"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:269":{"id":"0:269","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1690,0],"end":[1705,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:377:1728","args":null,"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:3159:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SmallVec","id":"0:168:1662","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"items":["0:272:681"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:131":{"id":"0:131","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[365,0],"end":[372,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"outlives":"'a"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["rfold","advance_back_by","try_rfold","rfind","nth_back"],"trait":{"kind":"resolved_path","inner":{"name":"DoubleEndedIterator","id":"1:8428:120","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:107:1726","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["0:134:1736"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:209:1921":{"id":"0:209:1921","crate_id":0,"name":"remove","span":{"filename":"src/lib.rs","begin":[1056,4],"end":[1067,5]},"visibility":"public","docs":"Remove and return the element at position `index`, shifting all elements after it to the\nleft.\n\nPanics if `index` is out of bounds.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:377:1728","args":null,"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"4:6411:223":{"id":"4:6411:223","crate_id":4,"name":"ToString","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:6412:1395"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13487:34607":{"id":"1:13487:34607","crate_id":1,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:57811:2290","self::pattern":"1:13018:3477"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["suffix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47440:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:4624","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:4624","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:13043:6057","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13414:1938":{"id":"1:13414:1938","crate_id":1,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"self::pattern":"1:13018:3477","prim@char":"1:57811:2290"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:4624","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:561":{"id":"0:561","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"array","inner":{"type":{"kind":"generic","inner":"T"},"len":"31"}},"items":["0:564:1732","0:565:1302"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:273":{"id":"0:273","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1707,0],"end":[1712,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:3159:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"4:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"4:8106:2350","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SmallVec","id":"0:168:1662","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"items":["0:275:681"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:1:9240:2711-0:107:1726":{"id":"a:1:9240:2711-0:107:1726","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"1:9240:2711","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"1:9240:2711","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"1:9240:2711","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:107:1726","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:10510:142":{"id":"1:10510:142","crate_id":1,"name":"Hash","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10511:715","1:10513:2801"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"4:6091:36293":{"id":"4:6091:36293","crate_id":4,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"4:8368:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"4:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:395:2176":{"id":"0:395:2176","crate_id":0,"name":"to_smallvec","span":{"filename":"src/lib.rs","begin":[2114,4],"end":[2114,41]},"visibility":"default","docs":"Construct a new `SmallVec` from a slice.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SmallVec","id":"0:168:1662","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:226:1959":{"id":"0:226:1959","crate_id":0,"name":"retain_mut","span":{"filename":"src/lib.rs","begin":[1240,4],"end":[1242,5]},"visibility":"public","docs":"Retains only the elements specified by the predicate.\n\nThis method is identical in behaviour to [`retain`]; it is included only\nto maintain api-compatability with `std::Vec`, where the methods are\nseparate for historical reasons.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"generic","inner":"F"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnMut","id":"1:3506:131","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:377:1728","args":null,"param_names":[]}}}}}}],"output":{"kind":"primitive","inner":"bool"}}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:590:1302":{"id":"0:590:1302","crate_id":0,"name":"size","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:455:1302":{"id":"0:455:1302","crate_id":0,"name":"size","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:179:1807":{"id":"0:179:1807","crate_id":0,"name":"from_buf_and_len_unchecked","span":{"filename":"src/lib.rs","begin":[684,4],"end":[689,5]},"visibility":"public","docs":"Constructs a new `SmallVec` on the stack from an `A` without\ncopying elements. Also sets the length. The user is responsible\nfor ensuring that `len <= A::size()`.\n\n```rust\nuse smallvec::SmallVec;\nuse std::mem::MaybeUninit;\n\nlet buf = [1, 2, 3, 4, 5, 0, 0, 0];\nlet small_vec: SmallVec<_> = unsafe {\n    SmallVec::from_buf_and_len_unchecked(MaybeUninit::new(buf), 5)\n};\n\nassert_eq!(&*small_vec, &[1, 2, 3, 4, 5]);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["buf",{"kind":"resolved_path","inner":{"name":"MaybeUninit","id":"1:32296:1618","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}}],["len",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"SmallVec","id":"0:168:1662","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"1:13461:6482":{"id":"1:13461:6482","crate_id":1,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"prim@char":"1:57811:2290","`DoubleEndedIterator`":"1:8428:120","self::pattern":"1:13018:3477","str::matches":"1:57817:2295"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatches","id":"1:49629:6078","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:4624","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:4624","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:13043:6057","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:128:922":{"id":"0:128:922","crate_id":0,"name":"next","span":{"filename":"src/lib.rs","begin":[353,4],"end":[357,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47440:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:377:1728","args":null,"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:99:681":{"id":"0:99:681","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[296,4],"end":[298,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["_",{"kind":"resolved_path","inner":{"name":"LayoutErr","id":"1:14177:1608","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:311:410":{"id":"0:311:410","crate_id":0,"name":"clone_from","span":{"filename":"src/lib.rs","begin":[1832,4],"end":[1845,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["source",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:3265:220-0:399:1702":{"id":"a:1:3265:220-0:399:1702","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"1:3265:220","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CollectionAllocErr","id":"0:399:1702","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:13406:6083":{"id":"1:13406:6083","crate_id":1,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:57811:2290"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Chars","id":"1:49377:4625","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"4:791:31519":{"id":"4:791:31519","crate_id":4,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["target",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13408:4628":{"id":"1:13408:4628","crate_id":1,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"1:49393:6065","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:299":{"id":"0:299","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1779,0],"end":[1786,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:377:1728","args":null,"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"fmt::Debug","id":"1:10272:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10272:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SmallVec","id":"0:168:1662","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"items":["0:301:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:8453:1737":{"id":"1:8453:1737","crate_id":1,"name":"ExactSizeIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:8454:793","1:8455:1826"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"1:8582:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:10520:146":{"id":"1:10520:146","crate_id":1,"name":"Hasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10521:652","1:10522:1606","1:10523:2802","1:10524:2803","1:10525:2804","1:10526:2805","1:10527:2806","1:10528:2807","1:10529:2808","1:10530:2809","1:10531:2810","1:10532:2811","1:10533:2812","1:10534:2813","1:10535:2814","1:10536:1530"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3364:2512":{"id":"1:3364:2512","crate_id":1,"name":"DivAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3366:559"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:1:8388-0:330:2113":{"id":"b:1:8388-0:330:2113","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"1:8582:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"1:8384:151","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:330:2113","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"items":["1:8390:1732","1:8391:2113","1:8392:768"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"1:13402:35641":{"id":"1:13402:35641","crate_id":1,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:57817:2295","str::slice_mut_unchecked":"1:57817:2295","crate::ops::Index":"1:3561:2099"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:210:1924":{"id":"0:210:1924","crate_id":0,"name":"insert","span":{"filename":"src/lib.rs","begin":[1072,4],"end":[1089,5]},"visibility":"public","docs":"Insert an element at position `index`, shifting all elements after it to the right.\n\nPanics if `index > len`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}],["element",{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:377:1728","args":null,"param_names":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:230:1962":{"id":"0:230:1962","crate_id":0,"name":"dedup_by","span":{"filename":"src/lib.rs","begin":[1253,4],"end":[1282,5]},"visibility":"public","docs":"Removes consecutive duplicate elements using the given equality relation.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["same_bucket",{"kind":"generic","inner":"F"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnMut","id":"1:3506:131","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:377:1728","args":null,"param_names":[]}}}}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:377:1728","args":null,"param_names":[]}}}}}}],"output":{"kind":"primitive","inner":"bool"}}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:283:753":{"id":"0:283:753","crate_id":0,"name":"index","span":{"filename":"src/lib.rs","begin":[1724,4],"end":[1726,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"1:10914:214","args":null,"param_names":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:174:920":{"id":"0:174:920","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[561,4],"end":[572,5]},"visibility":"public","docs":"Construct an empty vector","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"SmallVec","id":"0:168:1662","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3988:1426":{"id":"1:3988:1426","crate_id":1,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"1:45976:7181","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:241":{"id":"0:241","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1429,0],"end":[1489,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:377:1728","args":null,"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"1:3263:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"SmallVec","id":"0:168:1662","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"items":["0:243:2048","0:244:2052","0:245:1700"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:13392:304":{"id":"1:13392:304","crate_id":1,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"`u8`":"1:57828:2304","str::as_mut_ptr":"1:57817:2295"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"rustc_str_as_ptr\", since = \"1.32.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13474:35647":{"id":"1:13474:35647","crate_id":1,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:606":{"id":"0:606","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"array","inner":{"type":{"kind":"generic","inner":"T"},"len":"1536"}},"items":["0:609:1732","0:610:1302"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:441":{"id":"0:441","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"array","inner":{"type":{"kind":"generic","inner":"T"},"len":"7"}},"items":["0:444:1732","0:445:1302"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:8393:2101":{"id":"1:8393:2101","crate_id":1,"name":"Extend","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:8395:1874","1:8397:2826","1:8398:2827"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3188:681":{"id":"1:3188:681","crate_id":1,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:546":{"id":"0:546","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"array","inner":{"type":{"kind":"generic","inner":"T"},"len":"28"}},"items":["0:549:1732","0:550:1302"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:3294:2364":{"id":"1:3294:2364","crate_id":1,"name":"Unpin","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13396:2815":{"id":"1:13396:2815","crate_id":1,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"1:47440:176"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47440:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"1:10914:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"1:10914:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:570:1302":{"id":"0:570:1302","crate_id":0,"name":"size","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:189:1842":{"id":"0:189:1842","crate_id":0,"name":"drain","span":{"filename":"src/lib.rs","begin":[795,4],"end":[829,5]},"visibility":"public","docs":"Creates a draining iterator that removes the specified range in the vector\nand yields the removed items.\n\nNote 1: The element range is removed even if the iterator is only\npartially consumed or not consumed at all.\n\nNote 2: It is unspecified how many elements are removed from the vector\nif the `Drain` value is leaked.\n\n# Panics\n\nPanics if the starting point is greater than the end point or if\nthe end point is greater than the length of the vector.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["range",{"kind":"generic","inner":"R"}]],"output":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:107:1726","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RangeBounds","id":"1:3632:1619","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:340:408":{"id":"0:340:408","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[1915,4],"end":[1917,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:330:2113","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:641":{"id":"0:641","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"array","inner":{"type":{"kind":"generic","inner":"T"},"len":"65536"}},"items":["0:644:1732","0:645:1302"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:124":{"id":"0:124","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[349,0],"end":[363,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"outlives":"'a"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["is_sorted_by","sum","min_by_key","find","is_partitioned","inspect","cmp","take_while","eq","intersperse_with","last","take","zip","is_sorted_by_key","product","ge","min_by","count","find_map","cloned","try_fold","any","by_ref","map_while","skip","filter","all","advance_by","for_each","max","__iterator_get_unchecked","cmp_by","position","rev","try_find","try_for_each","try_collect","scan","filter_map","nth","min","partial_cmp_by","lt","unzip","rposition","fold","partial_cmp","collect_into","flat_map","enumerate","collect","step_by","size_hint","eq_by","copied","max_by_key","reduce","partition","flatten","peekable","chain","ne","is_sorted","cycle","max_by","try_reduce","partition_in_place","fuse","skip_while","le","intersperse","next_chunk","map","gt"],"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"1:8582:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:107:1726","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["0:127:1732","0:128:922","0:130:1735"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:3561:2099":{"id":"1:3561:2099","crate_id":1,"name":"Index","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3563:181","1:3564:753"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3258:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:666":{"id":"0:666","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"array","inner":{"type":{"kind":"generic","inner":"T"},"len":"1048576"}},"items":["0:669:1732","0:670:1302"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:376:768":{"id":"0:376:768","crate_id":0,"name":"into_iter","span":{"filename":"src/lib.rs","begin":[2008,4],"end":[2010,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"1:8384:151","args":null,"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:224:1953":{"id":"0:224:1953","crate_id":0,"name":"retain","span":{"filename":"src/lib.rs","begin":[1222,4],"end":[1233,5]},"visibility":"public","docs":"Retains only the elements specified by the predicate.\n\nIn other words, remove all elements `e` such that `f(&e)` returns `false`.\nThis method operates in place and preserves the order of the retained\nelements.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"generic","inner":"F"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnMut","id":"1:3506:131","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:377:1728","args":null,"param_names":[]}}}}}}],"output":{"kind":"primitive","inner":"bool"}}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:305":{"id":"0:305","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1810,0],"end":[1821,1]},"visibility":"crate","docs":null,"links":{},"attrs":["#[cfg(not(feature = \"may_dangle\"))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Drop","id":"1:3500:1738","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SmallVec","id":"0:168:1662","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"items":["0:307:578"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:10287:2888":{"id":"1:10287:2888","crate_id":1,"name":"UpperHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10288:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3796:2367":{"id":"1:3796:2367","crate_id":1,"name":"DispatchFromDyn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13431:5719":{"id":"1:13431:5719","crate_id":1,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"`DoubleEndedIterator`":"1:8428:120","self::pattern":"1:13018:3477","str::rsplit":"1:57817:2295","str::split_whitespace":"1:57817:2295","prim@char":"1:57811:2290"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"1:49407:2584","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:4624","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:3986-0:168:1662":{"id":"b:1:3986-0:168:1662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3258:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"1:3984:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SmallVec","id":"0:168:1662","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"items":["1:3988:1426"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:1:3986-0:107:1726":{"id":"b:1:3986-0:107:1726","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3258:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"1:3984:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:107:1726","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["1:3988:1426"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:3503:130":{"id":"1:3503:130","crate_id":1,"name":"Fn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3505:376"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnMut","id":"1:3506:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:3360:2513":{"id":"1:3360:2513","crate_id":1,"name":"MulAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3362:893"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13393:1743":{"id":"1:13393:1743","crate_id":1,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:57828:2304"},"attrs":["#[stable(feature = \"str_as_mut_ptr\", since = \"1.36.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13731:138":{"id":"1:13731:138","crate_id":1,"name":"Future","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:13732:181","1:13733:1013"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:275:681":{"id":"0:275:681","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[1709,4],"end":[1711,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["vec",{"kind":"resolved_path","inner":{"name":"Vec","id":"4:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:377:1728","args":null,"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"SmallVec","id":"0:168:1662","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:328":{"id":"0:328","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1889,0],"end":[1889,65]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:377:1728","args":null,"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"1:3253:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"1:3253:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SmallVec","id":"0:168:1662","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"1:13385:35638":{"id":"1:13385:35638","crate_id":1,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13437:5992":{"id":"1:13437:5992","crate_id":1,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"`DoubleEndedIterator`":"1:8428:120","prim@char":"1:57811:2290","self::pattern":"1:13018:3477","str::split":"1:57817:2295"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplit","id":"1:49425:2588","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:4624","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:4624","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:13043:6057","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:240:1743":{"id":"0:240:1743","crate_id":0,"name":"as_mut_ptr","span":{"filename":"src/lib.rs","begin":[1421,4],"end":[1426,5]},"visibility":"public","docs":"Returns a raw mutable pointer to the vector's buffer.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:377:1728","args":null,"param_names":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3088:6729":{"id":"1:3088:6729","crate_id":1,"name":"FloatToInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"Int","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:3087:7211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:10555:2411":{"id":"1:10555:2411","crate_id":1,"name":"BuildHasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10556:146","1:10557:9014","1:10558:31883"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:480:1302":{"id":"0:480:1302","crate_id":0,"name":"size","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13390:4768":{"id":"1:13390:4768","crate_id":1,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"1:12489:6063"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"str_as_bytes\", since = \"1.39.0\")]","#[must_use]","#[allow(unused_attributes)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3196:1414":{"id":"1:3196:1414","crate_id":1,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:47567:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:3166:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:278:681":{"id":"0:278:681","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[1716,4],"end":[1718,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["array",{"kind":"generic","inner":"A"}]],"output":{"kind":"resolved_path","inner":{"name":"SmallVec","id":"0:168:1662","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:2850:1612":{"id":"1:2850:1612","crate_id":1,"name":"BorrowMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2852:2071"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3258:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"1:2847:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Borrowed"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:624:1732":{"id":"0:624:1732","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"1:13409:6300":{"id":"1:13409:6300","crate_id":1,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_ascii_whitespace":"1:57817:2295"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_whitespace\", since = \"1.1.0\")]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitWhitespace","id":"1:49681:6062","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:415:1302":{"id":"0:415:1302","crate_id":0,"name":"size","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13477:35649":{"id":"1:13477:35649","crate_id":1,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:263":{"id":"0:263","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1572,0],"end":[1577,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"1:2847:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SmallVec","id":"0:168:1662","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"items":["0:265:1611"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:636":{"id":"0:636","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"array","inner":{"type":{"kind":"generic","inner":"T"},"len":"32768"}},"items":["0:639:1732","0:640:1302"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:460:1302":{"id":"0:460:1302","crate_id":0,"name":"size","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13048:6056":{"id":"1:13048:6056","crate_id":1,"name":"DoubleEndedSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:13043:6057","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:396":{"id":"0:396","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2117,0],"end":[2125,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:377:1728","args":null,"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"1:3263:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"ToSmallVec","id":"0:393:2174","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"slice","inner":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:377:1728","args":null,"param_names":[]}}}}},"items":["0:398:2176"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:481":{"id":"0:481","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"array","inner":{"type":{"kind":"generic","inner":"T"},"len":"15"}},"items":["0:484:1732","0:485:1302"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:393:2174":{"id":"0:393:2174","crate_id":0,"name":"ToSmallVec","span":{"filename":"src/lib.rs","begin":[2112,0],"end":[2115,1]},"visibility":"public","docs":"Convenience trait for constructing a `SmallVec`","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:395:2176"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":["0:396"]}},"0:485:1302":{"id":"0:485:1302","crate_id":0,"name":"size","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:3265:220-0:330:2113":{"id":"a:1:3265:220-0:330:2113","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"A"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"1:3265:220","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"1:3265:220","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:330:2113","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:654:1732":{"id":"0:654:1732","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"1:13507:6392":{"id":"1:13507:6392","crate_id":1,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"1:57811:2290"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDefault","id":"1:49715:6071","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:323:415":{"id":"0:323:415","crate_id":0,"name":"cmp","span":{"filename":"src/lib.rs","begin":[1875,4],"end":[1877,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"SmallVec","id":"0:168:1662","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"cmp::Ordering","id":"1:37572:178","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:595:1302":{"id":"0:595:1302","crate_id":0,"name":"size","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:431":{"id":"0:431","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"array","inner":{"type":{"kind":"generic","inner":"T"},"len":"5"}},"items":["0:434:1732","0:435:1302"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:375:1732":{"id":"0:375:1732","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[2007,4],"end":[2007,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}}}},"1:9239:2712":{"id":"1:9239:2712","crate_id":1,"name":"UnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3150:75":{"id":"1:3150:75","crate_id":1,"name":"AsRef","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3152:305"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3258:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"1:3153:74":{"id":"1:3153:74","crate_id":1,"name":"AsMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3155:1741"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3258:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"1:3543:2368":{"id":"1:3543:2368","crate_id":1,"name":"Generator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3545:237","1:3546:206","1:3547:31631"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"tuple","inner":[]},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:206:1914":{"id":"0:206:1914","crate_id":0,"name":"swap_remove","span":{"filename":"src/lib.rs","begin":[1039,4],"end":[1044,5]},"visibility":"public","docs":"Remove the element at position `index`, replacing it with the last element.\n\nThis does not preserve ordering, but is O(1).\n\nPanics if `index` is out of bounds.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:377:1728","args":null,"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:511":{"id":"0:511","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"array","inner":{"type":{"kind":"generic","inner":"T"},"len":"21"}},"items":["0:514:1732","0:515:1302"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:23432:30760":{"id":"1:23432:30760","crate_id":1,"name":"SimdOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:23433:31707","1:23434:31708","1:23435:31709"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SimdPartialOrd","id":"1:23427:7250","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:321":{"id":"0:321","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1870,0],"end":[1878,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:377:1728","args":null,"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Ord","id":"1:2941:177","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clamp","max","min"],"trait":{"kind":"resolved_path","inner":{"name":"Ord","id":"1:2941:177","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SmallVec","id":"0:168:1662","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"items":["0:323:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:664:1732":{"id":"0:664:1732","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"a:1:3253:211-0:330:2113":{"id":"a:1:3253:211-0:330:2113","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"1:3253:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"1:3253:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:330:2113","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:3411:2523":{"id":"1:3411:2523","crate_id":1,"name":"BitOrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3413:354"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"4:6088:36292":{"id":"4:6088:36292","crate_id":4,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"4:8368:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"str_replacen\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"4:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:4624","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:409:1732":{"id":"0:409:1732","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"1:8860:1616":{"id":"1:8860:1616","crate_id":1,"name":"FusedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"1:8582:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:13508:6395":{"id":"1:13508:6395","crate_id":1,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"1:57811:2290"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeUnicode","id":"1:49724:6072","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:236:1991":{"id":"0:236:1991","crate_id":0,"name":"resize_with","span":{"filename":"src/lib.rs","begin":[1318,4],"end":[1333,5]},"visibility":"public","docs":"Resizes the `SmallVec` in-place so that `len` is equal to `new_len`.\n\nIf `new_len` is greater than `len`, the `SmallVec` is extended by the difference, with each\nadditional slot filled with the result of calling the closure `f`. The return values from `f`\n\nIf `new_len` is less than `len`, the `SmallVec` is simply truncated.\n\nThis method uses a closure to create new values on every push. If you'd rather `Clone` a given\nvalue, use `resize`. If you want to use the `Default` trait to generate values, you can pass\n`Default::default()` as the second argument.\n\nAdded for std::vec::Vec compatibility (added in Rust 1.33.0)\n\n```\n# use smallvec::{smallvec, SmallVec};\nlet mut vec : SmallVec<[_; 4]> = smallvec![1, 2, 3];\nvec.resize_with(5, Default::default);\nassert_eq!(&*vec, &[1, 2, 3, 0, 0]);\n\nlet mut vec : SmallVec<[_; 4]> = smallvec![];\nlet mut p = 1;\nvec.resize_with(4, || { p *= 2; p });\nassert_eq!(&*vec, &[2, 4, 8, 16]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["new_len",{"kind":"primitive","inner":"usize"}],["f",{"kind":"generic","inner":"F"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnMut","id":"1:3506:131","args":{"parenthesized":{"inputs":[],"output":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:377:1728","args":null,"param_names":[]}}}}}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:451":{"id":"0:451","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"array","inner":{"type":{"kind":"generic","inner":"T"},"len":"9"}},"items":["0:454:1732","0:455:1302"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:13458:2317":{"id":"1:13458:2317","crate_id":1,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"1:13018:3477","`DoubleEndedIterator`":"1:8428:120","prim@char":"1:57811:2290","str::matches":"1:57817:2295"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"1:49611:6077","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:4624","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:459:1732":{"id":"0:459:1732","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"0:202:1899":{"id":"0:202:1899","crate_id":0,"name":"shrink_to_fit","span":{"filename":"src/lib.rs","begin":[983,4],"end":[999,5]},"visibility":"public","docs":"Shrink the capacity of the vector as much as possible.\n\nWhen possible, this will move data from an external heap buffer to the vector's inline\nstorage.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:254":{"id":"0:254","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1548,0],"end":[1556,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"DerefMut","id":"1:3489:2069","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SmallVec","id":"0:168:1662","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"items":["0:256:545"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:13404:2107":{"id":"1:13404:2107","crate_id":1,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"1:57817:2295"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:293:684":{"id":"0:293:684","crate_id":0,"name":"from_iter","span":{"filename":"src/lib.rs","begin":[1747,4],"end":[1751,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["iterable",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"SmallVec","id":"0:168:1662","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"1:8384:151","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:377:1728","args":null,"param_names":[]}}}}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:2847:97":{"id":"1:2847:97","crate_id":1,"name":"Borrow","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2849:1611"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3258:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:660:1302":{"id":"0:660:1302","crate_id":0,"name":"size","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:420:1302":{"id":"0:420:1302","crate_id":0,"name":"size","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:10914:214":{"id":"1:10914:214","crate_id":1,"name":"SliceIndex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["1:10916:181","1:10917:2102","1:10918:2815","1:10919:2816","1:10920:2817","1:10921:753","1:10922:754"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3258:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10905:7211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:13398:2816":{"id":"1:13398:2816","crate_id":1,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"1:10914:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"1:10914:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"1:3476:116":{"id":"1:3476:116","crate_id":1,"name":"Deref","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3477:221","1:3478:543"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:10222:2072":{"id":"1:10222:2072","crate_id":1,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10223:1530","1:10224:32212","1:10226:2667"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:22766:7315":{"id":"1:22766:7315","crate_id":1,"name":"SimdInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:22767:7248","1:22768:32172","1:22769:1225","1:22770:1226","1:22771:32239","1:22772:32240","1:22773:9477","1:22774:32241","1:22775:32242","1:22776:32243","1:22777:32173","1:22778:32174","1:22779:32175","1:22780:32176","1:22781:32177","1:22782:32178","1:22783:32179"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"1:3263:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:22815:7211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:201:1895":{"id":"0:201:1895","crate_id":0,"name":"try_reserve_exact","span":{"filename":"src/lib.rs","begin":[968,4],"end":[977,5]},"visibility":"public","docs":"Reserve the minimum capacity for `additional` more elements to be inserted.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["additional",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:47567:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"CollectionAllocErr","id":"0:399:1702","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13405:34597":{"id":"1:13405:34597","crate_id":1,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"1:57817:2295"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13407:6165":{"id":"1:13407:6165","crate_id":1,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:57811:2290"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CharIndices","id":"1:49383:6066","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:521":{"id":"0:521","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"array","inner":{"type":{"kind":"generic","inner":"T"},"len":"23"}},"items":["0:524:1732","0:525:1302"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:1:3294:2364-0:399:1702":{"id":"a:1:3294:2364-0:399:1702","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"1:3294:2364","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CollectionAllocErr","id":"0:399:1702","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:540:1302":{"id":"0:540:1302","crate_id":0,"name":"size","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:349":{"id":"0:349","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1949,0],"end":[1961,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["rfold","advance_back_by","try_rfold","rfind","nth_back"],"trait":{"kind":"resolved_path","inner":{"name":"DoubleEndedIterator","id":"1:8428:120","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:330:2113","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"items":["0:351:1736"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:3185:2065":{"id":"1:3185:2065","crate_id":1,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"1:3159:135"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3336:2506":{"id":"1:3336:2506","crate_id":1,"name":"Div","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3338:181","1:3339:558"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:421":{"id":"0:421","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"array","inner":{"type":{"kind":"generic","inner":"T"},"len":"3"}},"items":["0:424:1732","0:425:1302"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:456":{"id":"0:456","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"array","inner":{"type":{"kind":"generic","inner":"T"},"len":"10"}},"items":["0:459:1732","0:460:1302"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:3162:228":{"id":"1:3162:228","crate_id":1,"name":"TryInto","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3164:127","1:3165:1414"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:262:1741":{"id":"0:262:1741","crate_id":0,"name":"as_mut","span":{"filename":"src/lib.rs","begin":[1567,4],"end":[1569,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:377:1728","args":null,"param_names":[]}}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:374:2113":{"id":"0:374:2113","crate_id":0,"name":"IntoIter","span":{"filename":"src/lib.rs","begin":[2006,4],"end":[2006,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"IterMut","id":"1:11118:2117","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}}}},"0:495:1302":{"id":"0:495:1302","crate_id":0,"name":"size","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:585:1302":{"id":"0:585:1302","crate_id":0,"name":"size","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:519:1732":{"id":"0:519:1732","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"0:601":{"id":"0:601","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"array","inner":{"type":{"kind":"generic","inner":"T"},"len":"1024"}},"items":["0:604:1732","0:605:1302"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:506":{"id":"0:506","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"array","inner":{"type":{"kind":"generic","inner":"T"},"len":"20"}},"items":["0:509:1732","0:510:1302"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:177:1800":{"id":"0:177:1800","crate_id":0,"name":"from_buf","span":{"filename":"src/lib.rs","begin":[643,4],"end":[648,5]},"visibility":"public","docs":"Constructs a new `SmallVec` on the stack from an `A` without\ncopying elements.\n\n```rust\nuse smallvec::SmallVec;\n\nlet buf = [1, 2, 3, 4, 5];\nlet small_vec: SmallVec<_> = SmallVec::from_buf(buf);\n\nassert_eq!(&*small_vec, &[1, 2, 3, 4, 5]);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["buf",{"kind":"generic","inner":"A"}]],"output":{"kind":"resolved_path","inner":{"name":"SmallVec","id":"0:168:1662","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:8391:2113":{"id":"1:8391:2113","crate_id":1,"name":"IntoIter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"I"}}},"1:13464:6470":{"id":"1:13464:6470","crate_id":1,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"1:13018:3477","prim@char":"1:57811:2290","`DoubleEndedIterator`":"1:8428:120","str::rmatch_indices":"1:57817:2295"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"MatchIndices","id":"1:49557:6075","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:4624","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:196:1878":{"id":"0:196:1878","crate_id":0,"name":"grow","span":{"filename":"src/lib.rs","begin":[884,4],"end":[886,5]},"visibility":"public","docs":"Re-allocate to set the capacity to `max(new_cap, inline_size())`.\n\nPanics if `new_cap` is less than the vector's length\nor if the capacity computation overflows `usize`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["new_cap",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:359:1910":{"id":"0:359:1910","crate_id":0,"name":"as_mut_slice","span":{"filename":"src/lib.rs","begin":[1974,4],"end":[1977,5]},"visibility":"public","docs":"Returns the remaining items of this iterator as a mutable slice.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:377:1728","args":null,"param_names":[]}}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:362:2113":{"id":"0:362:2113","crate_id":0,"name":"IntoIter","span":{"filename":"src/lib.rs","begin":[1981,4],"end":[1981,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:330:2113","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}}}},"1:10279:119":{"id":"1:10279:119","crate_id":1,"name":"Display","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10280:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:430:1302":{"id":"0:430:1302","crate_id":0,"name":"size","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:525:1302":{"id":"0:525:1302","crate_id":0,"name":"size","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:501":{"id":"0:501","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"array","inner":{"type":{"kind":"generic","inner":"T"},"len":"19"}},"items":["0:504:1732","0:505:1302"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:1:3197-0:168:1662":{"id":"b:1:3197-0:168:1662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"1:3156:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:3166:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SmallVec","id":"0:168:1662","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"items":["1:3200:127","1:3201:1413"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:182:1665":{"id":"0:182:1665","crate_id":0,"name":"inline_size","span":{"filename":"src/lib.rs","begin":[723,4],"end":[725,5]},"visibility":"public","docs":"The maximum number of elements this vector can hold inline","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:474:1732":{"id":"0:474:1732","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"1:3407:2522":{"id":"1:3407:2522","crate_id":1,"name":"BitAndAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3409:352"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3500:1738":{"id":"1:3500:1738","crate_id":1,"name":"Drop","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3501:578"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:524:1732":{"id":"0:524:1732","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"0:625:1302":{"id":"0:625:1302","crate_id":0,"name":"size","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:130:1735":{"id":"0:130:1735","crate_id":0,"name":"size_hint","span":{"filename":"src/lib.rs","begin":[360,4],"end":[362,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"1:47440:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:531":{"id":"0:531","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"array","inner":{"type":{"kind":"generic","inner":"T"},"len":"25"}},"items":["0:534:1732","0:535:1302"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:192:1666":{"id":"0:192:1666","crate_id":0,"name":"push","span":{"filename":"src/lib.rs","begin":[833,4],"end":[845,5]},"visibility":"public","docs":"Append an item to the vector.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["value",{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:377:1728","args":null,"param_names":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3395:2520":{"id":"1:3395:2520","crate_id":1,"name":"Shl","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3397:181","1:3398:1231"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:539:1732":{"id":"0:539:1732","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"1:8390:1732":{"id":"1:8390:1732","crate_id":1,"name":"Item","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"1:8582:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}},"a:1:3294:2364-0:168:1662":{"id":"a:1:3294:2364-0:168:1662","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"A"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"1:3294:2364","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"1:3294:2364","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SmallVec","id":"0:168:1662","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:466":{"id":"0:466","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"array","inner":{"type":{"kind":"generic","inner":"T"},"len":"12"}},"items":["0:469:1732","0:470:1302"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:516":{"id":"0:516","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"array","inner":{"type":{"kind":"generic","inner":"T"},"len":"22"}},"items":["0:519:1732","0:520:1302"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:250":{"id":"0:250","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1537,0],"end":[1546,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Deref","id":"1:3476:116","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SmallVec","id":"0:168:1662","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"items":["0:252:221","0:253:543"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:3166:227":{"id":"1:3166:227","crate_id":1,"name":"TryFrom","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3168:127","1:3169:1413"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:184:1826":{"id":"0:184:1826","crate_id":0,"name":"is_empty","span":{"filename":"src/lib.rs","begin":[735,4],"end":[737,5]},"visibility":"public","docs":"Returns `true` if the vector is empty","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13382:793":{"id":"1:13382:793","crate_id":1,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:57811:2290"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_len\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:510:1302":{"id":"0:510:1302","crate_id":0,"name":"size","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13452:35643":{"id":"1:13452:35643","crate_id":1,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47440:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:4624","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:650:1302":{"id":"0:650:1302","crate_id":0,"name":"size","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:134:1736":{"id":"0:134:1736","crate_id":0,"name":"next_back","span":{"filename":"src/lib.rs","begin":[367,4],"end":[371,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47440:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:377:1728","args":null,"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13496:35654":{"id":"1:13496:35654","crate_id":1,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:57811:2290","self::pattern":"1:13018:3477"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:4624","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:4624","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:13043:6057","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:496":{"id":"0:496","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"array","inner":{"type":{"kind":"generic","inner":"T"},"len":"18"}},"items":["0:499:1732","0:500:1302"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:1:8388-0:107:1726":{"id":"b:1:8388-0:107:1726","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"1:8582:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"1:8384:151","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:107:1726","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["1:8390:1732","1:8391:2113","1:8392:768"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:335":{"id":"0:335","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1902,0],"end":[1909,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:377:1728","args":null,"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"fmt::Debug","id":"1:10272:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10272:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:330:2113","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"items":["0:337:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"4:6107:35626":{"id":"4:6107:35626","crate_id":4,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"1:57817:2295"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"4:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:96":{"id":"0:96","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[288,0],"end":[292,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"1:10279:119","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CollectionAllocErr","id":"0:399:1702","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:97:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:348:1735":{"id":"0:348:1735","crate_id":0,"name":"size_hint","span":{"filename":"src/lib.rs","begin":[1943,4],"end":[1946,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"1:47440:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:22713:7247":{"id":"1:22713:7247","crate_id":1,"name":"SimdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:22714:7248","1:22715:32172","1:22716:32701","1:22717:32702","1:22718:32703","1:22719:32239","1:22720:32704","1:22721:32705","1:22722:32706","1:22723:32707","1:22724:32708","1:22725:32709","1:22726:32710","1:22727:32711","1:22728:9316","1:22729:32712","1:22730:32243","1:22731:32713","1:22732:31708","1:22733:31707","1:22734:31709","1:22735:32173","1:22736:32174","1:22737:32175","1:22738:32176"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"1:3263:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:22815:7211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:3262:217":{"id":"1:3262:217","crate_id":1,"name":"StructuralEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:176:1667":{"id":"0:176:1667","crate_id":0,"name":"from_vec","span":{"filename":"src/lib.rs","begin":[607,4],"end":[629,5]},"visibility":"public","docs":"Construct a new `SmallVec` from a `Vec<A::Item>`.\n\nElements will be copied to the inline buffer if vec.capacity() <= Self::inline_capacity().\n\n```rust\nuse smallvec::SmallVec;\n\nlet vec = vec![1, 2, 3, 4, 5];\nlet small_vec: SmallVec<[_; 3]> = SmallVec::from_vec(vec);\n\nassert_eq!(&*small_vec, &[1, 2, 3, 4, 5]);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["vec",{"kind":"resolved_path","inner":{"name":"Vec","id":"4:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:377:1728","args":null,"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"SmallVec","id":"0:168:1662","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13420:34605":{"id":"1:13420:34605","crate_id":1,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"self::pattern":"1:13018:3477","prim@char":"1:57811:2290"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:4624","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:4624","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:13043:6057","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:659:1732":{"id":"0:659:1732","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"0:581":{"id":"0:581","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"array","inner":{"type":{"kind":"generic","inner":"T"},"len":"96"}},"items":["0:584:1732","0:585:1302"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:3231:115":{"id":"1:3231:115","crate_id":1,"name":"Default","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3232:59"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:479:1732":{"id":"0:479:1732","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"0:550:1302":{"id":"0:550:1302","crate_id":0,"name":"size","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:172":{"id":"0:172","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[558,0],"end":[1427,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"SmallVec","id":"0:168:1662","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"items":["0:174:920","0:175:1786","0:176:1667","0:177:1800","0:178:1806","0:179:1807","0:180:1746","0:182:1665","0:183:793","0:184:1826","0:185:1722","0:188:1830","0:189:1842","0:192:1666","0:193:1862","0:194:1872","0:196:1878","0:197:1880","0:198:1858","0:199:1891","0:200:1788","0:201:1895","0:202:1899","0:203:1905","0:204:1733","0:205:1910","0:206:1914","0:208:1918","0:209:1921","0:210:1924","0:211:1929","0:221:1941","0:222:1946","0:223:1754","0:224:1953","0:226:1959","0:228:1961","0:230:1962","0:232:1972","0:236:1991","0:238:1855","0:239:304","0:240:1743"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:579:1732":{"id":"0:579:1732","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"0:363:1732":{"id":"0:363:1732","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[1982,4],"end":[1982,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}},"0:491":{"id":"0:491","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"array","inner":{"type":{"kind":"generic","inner":"T"},"len":"17"}},"items":["0:494:1732","0:495:1302"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:257":{"id":"0:257","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1558,0],"end":[1563,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"AsRef","id":"1:3150:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SmallVec","id":"0:168:1662","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"items":["0:259:305"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:1:3197-0:330:2113":{"id":"b:1:3197-0:330:2113","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"1:3156:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:3166:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:330:2113","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"items":["1:3200:127","1:3201:1413"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:3385:2517":{"id":"1:3385:2517","crate_id":1,"name":"BitOr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3387:181","1:3388:353"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3156:149":{"id":"1:3156:149","crate_id":1,"name":"Into","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3158:2065"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:185:1722":{"id":"0:185:1722","crate_id":0,"name":"capacity","span":{"filename":"src/lib.rs","begin":[741,4],"end":[743,5]},"visibility":"public","docs":"The number of items the vector can hold without reallocating","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:629:1732":{"id":"0:629:1732","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"0:615:1302":{"id":"0:615:1302","crate_id":0,"name":"size","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:3192-0:168:1662":{"id":"b:1:3192-0:168:1662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:3166:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"1:3162:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SmallVec","id":"0:168:1662","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"items":["1:3195:127","1:3196:1414"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:3263:106":{"id":"1:3263:106","crate_id":1,"name":"Copy","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:3984:68":{"id":"1:3984:68","crate_id":1,"name":"Any","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3985:1426"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"outlives":"'static"}],"implementations":[]}},"a:1:9240:2711-0:399:1702":{"id":"a:1:9240:2711-0:399:1702","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"1:9240:2711","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CollectionAllocErr","id":"0:399:1702","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"4:789:3777":{"id":"4:789:3777","crate_id":4,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"1:12957:4627":{"id":"1:12957:4627","crate_id":1,"name":"FromStr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:12958:126","1:12959:6384"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:486":{"id":"0:486","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"array","inner":{"type":{"kind":"generic","inner":"T"},"len":"16"}},"items":["0:489:1732","0:490:1302"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:347:922":{"id":"0:347:922","crate_id":0,"name":"next","span":{"filename":"src/lib.rs","begin":[1930,4],"end":[1940,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47440:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:377:1728","args":null,"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3489:2069":{"id":"1:3489:2069","crate_id":1,"name":"DerefMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3490:545"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Deref","id":"1:3476:116","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:13403:35642":{"id":"1:13403:35642","crate_id":1,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"str::slice_unchecked":"1:57817:2295","`str`":"1:57817:2295","crate::ops::IndexMut":"1:3565:2100"},"attrs":["#[stable(feature = \"str_slice_mut\", since = \"1.5.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:365":{"id":"0:365","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1997,0],"end":[2003,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"1:8384:151","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"SmallVec","id":"0:168:1662","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}}}},"items":["0:368:2113","0:369:1732","0:370:768"],"negative":false,"synthetic":false,"blanket_impl":null}},"4:6105:1615":{"id":"4:6105:1615","crate_id":4,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"4:8368:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]","#[stable(feature = \"repeat_str\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"4:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:121":{"id":"0:121","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[347,0],"end":[347,57]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"1:3253:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"1:3253:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:107:1726","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"1:13400:2817":{"id":"1:13400:2817","crate_id":1,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"1:10914:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"1:10914:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:529:1732":{"id":"0:529:1732","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"0:291":{"id":"0:291","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1745,0],"end":[1752,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"FromIterator","id":"1:8380:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SmallVec","id":"0:168:1662","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"items":["0:293:684"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:1:3186-0:168:1662":{"id":"b:1:3186-0:168:1662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:3159:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SmallVec","id":"0:168:1662","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"items":["1:3188:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:626":{"id":"0:626","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"array","inner":{"type":{"kind":"generic","inner":"T"},"len":"16384"}},"items":["0:629:1732","0:630:1302"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:13427:2825":{"id":"1:13427:2825","crate_id":1,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"1:47440:176","prim@char":"1:57811:2290","self::pattern":"1:13018:3477"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47440:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:4624","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:4624","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:13043:6057","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:504:1732":{"id":"0:504:1732","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"0:449:1732":{"id":"0:449:1732","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"b:1:2856-0:168:1662":{"id":"b:1:2856-0:168:1662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3258:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"1:2850:1612","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SmallVec","id":"0:168:1662","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"items":["1:2858:2071"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:3191:681":{"id":"1:3191:681","crate_id":1,"name":"from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"primitive","inner":"never"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:8392:768":{"id":"1:8392:768","crate_id":1,"name":"into_iter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"I"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:330:2113":{"id":"0:330:2113","crate_id":0,"name":"IntoIter","span":{"filename":"src/lib.rs","begin":[1896,0],"end":[1900,1]},"visibility":"public","docs":"An iterator that consumes a `SmallVec` and yields its items by value.\n\nReturned from [`SmallVec::into_iter`][1].\n\n[1]: struct.SmallVec.html#method.into_iter","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:356","a:1:9240:2711-0:330:2113","a:1:3294:2364-0:330:2113","a:1:9239:2712-0:330:2113","a:1:3265:220-0:330:2113","a:1:3253:211-0:330:2113","b:1:3186-0:330:2113","b:1:3986-0:330:2113","b:1:8388-0:330:2113","b:1:3197-0:330:2113","b:1:2853-0:330:2113","b:1:3192-0:330:2113","b:1:2856-0:330:2113","b:1:3182-0:330:2113","b:4:787-0:330:2113","0:335","0:338","0:341","0:344","0:349","0:352","0:354"]}},"0:282:181":{"id":"0:282:181","crate_id":0,"name":"Output","span":{"filename":"src/lib.rs","begin":[1722,4],"end":[1722,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"1:10914:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}}],"bindings":[]}},"param_names":[]}}}}}},"0:555:1302":{"id":"0:555:1302","crate_id":0,"name":"size","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:3253:211-0:399:1702":{"id":"a:1:3253:211-0:399:1702","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"1:3253:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CollectionAllocErr","id":"0:399:1702","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:358:1733":{"id":"0:358:1733","crate_id":0,"name":"as_slice","span":{"filename":"src/lib.rs","begin":[1968,4],"end":[1971,5]},"visibility":"public","docs":"Returns the remaining items of this iterator as a slice.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:377:1728","args":null,"param_names":[]}}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:352":{"id":"0:352","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1963,0],"end":[1963,51]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["len","is_empty"],"trait":{"kind":"resolved_path","inner":{"name":"ExactSizeIterator","id":"1:8453:1737","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:330:2113","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:620:1302":{"id":"0:620:1302","crate_id":0,"name":"size","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:266":{"id":"0:266","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1579,0],"end":[1584,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"1:2850:1612","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SmallVec","id":"0:168:1662","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"items":["0:268:2071"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:136":{"id":"0:136","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[374,0],"end":[379,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["len","is_empty"],"trait":{"kind":"resolved_path","inner":{"name":"ExactSizeIterator","id":"1:8453:1737","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:107:1726","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["0:139:793"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:205:1910":{"id":"0:205:1910","crate_id":0,"name":"as_mut_slice","span":{"filename":"src/lib.rs","begin":[1029,4],"end":[1031,5]},"visibility":"public","docs":"Extracts a mutable slice of the entire vector.\n\nEquivalent to `&mut s[..]`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:377:1728","args":null,"param_names":[]}}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:208:1918":{"id":"0:208:1918","crate_id":0,"name":"clear","span":{"filename":"src/lib.rs","begin":[1048,4],"end":[1050,5]},"visibility":"public","docs":"Remove all elements from the vector.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:619:1732":{"id":"0:619:1732","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"1:13384:6681":{"id":"1:13384:6681","crate_id":1,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"is_char_boundary\", since = \"1.9.0\")]","#[rustc_const_unstable(feature = \"const_is_char_boundary\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3326:2510":{"id":"1:3326:2510","crate_id":1,"name":"Sub","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3328:181","1:3329:1353"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:343:578":{"id":"0:343:578","crate_id":0,"name":"drop","span":{"filename":"src/lib.rs","begin":[1921,4],"end":[1923,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:470:1302":{"id":"0:470:1302","crate_id":0,"name":"size","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:97:660":{"id":"0:97:660","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[289,4],"end":[291,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"1:10232:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"1:10221:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:221:1941":{"id":"0:221:1941","crate_id":0,"name":"into_vec","span":{"filename":"src/lib.rs","begin":[1179,4],"end":[1190,5]},"visibility":"public","docs":"Convert a SmallVec to a Vec, without reallocating if the SmallVec has already spilled onto\nthe heap.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Vec","id":"4:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:377:1728","args":null,"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13504:34507":{"id":"1:13504:34507","crate_id":1,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:316":{"id":"0:316","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1858,0],"end":[1858,54]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:377:1728","args":null,"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"1:2910:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"1:2910:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SmallVec","id":"0:168:1662","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:197:1880":{"id":"0:197:1880","crate_id":0,"name":"try_grow","span":{"filename":"src/lib.rs","begin":[891,4],"end":[930,5]},"visibility":"public","docs":"Re-allocate to set the capacity to `max(new_cap, inline_size())`.\n\nPanics if `new_cap` is less than the vector's length","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["new_cap",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:47567:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"CollectionAllocErr","id":"0:399:1702","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:551":{"id":"0:551","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"array","inner":{"type":{"kind":"generic","inner":"T"},"len":"29"}},"items":["0:554:1732","0:555:1302"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:272:681":{"id":"0:272:681","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[1696,4],"end":[1698,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(feature = \"specialization\"))]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["slice",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:377:1728","args":null,"param_names":[]}}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"SmallVec","id":"0:168:1662","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:545:1302":{"id":"0:545:1302","crate_id":0,"name":"size","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:439:1732":{"id":"0:439:1732","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"1:13499:6430":{"id":"1:13499:6430","crate_id":1,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"1:12957:4627","`FromStr`":"1:12957:4627"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:47567:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"kind":"resolved_path","inner":{"name":"FromStr","id":"1:12957:4627","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FromStr","id":"1:12957:4627","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:2941:177":{"id":"1:2941:177","crate_id":1,"name":"Ord","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2942:415","1:2943:2818","1:2944:2819","1:2945:2820"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"1:2910:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"1:2951:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:248:2060":{"id":"0:248:2060","crate_id":0,"name":"resize","span":{"filename":"src/lib.rs","begin":[1501,4],"end":[1509,5]},"visibility":"public","docs":"Resizes the vector so that its length is equal to `len`.\n\nIf `len` is less than the current length, the vector simply truncated.\n\nIf `len` is greater than the current length, `value` is appended to the\nvector until its length equals `len`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["len",{"kind":"primitive","inner":"usize"}],["value",{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:377:1728","args":null,"param_names":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13417:34604":{"id":"1:13417:34604","crate_id":1,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"self::pattern":"1:13018:3477","prim@char":"1:57811:2290"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:4624","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:351:1736":{"id":"0:351:1736","crate_id":0,"name":"next_back","span":{"filename":"src/lib.rs","begin":[1951,4],"end":[1960,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47440:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:377:1728","args":null,"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:655:1302":{"id":"0:655:1302","crate_id":0,"name":"size","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"4:6415:1395":{"id":"4:6415:1395","crate_id":4,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"4:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:645:1302":{"id":"0:645:1302","crate_id":0,"name":"size","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"4:5837:5713":{"id":"4:5837:5713","crate_id":4,"name":"Join","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:5839:181","4:5840:5747"],"generics":{"params":[{"name":"Separator","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:178:1806":{"id":"0:178:1806","crate_id":0,"name":"from_buf_and_len","span":{"filename":"src/lib.rs","begin":[663,4],"end":[666,5]},"visibility":"public","docs":"Constructs a new `SmallVec` on the stack from an `A` without\ncopying elements. Also sets the length, which must be less or\nequal to the size of `buf`.\n\n```rust\nuse smallvec::SmallVec;\n\nlet buf = [1, 2, 3, 4, 5, 0, 0, 0];\nlet small_vec: SmallVec<_> = SmallVec::from_buf_and_len(buf, 5);\n\nassert_eq!(&*small_vec, &[1, 2, 3, 4, 5]);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["buf",{"kind":"generic","inner":"A"}],["len",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"SmallVec","id":"0:168:1662","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:416":{"id":"0:416","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"array","inner":{"type":{"kind":"generic","inner":"T"},"len":"2"}},"items":["0:419:1732","0:420:1302"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:3713:224":{"id":"1:3713:224","crate_id":1,"name":"Try","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3714:181","1:3715:2529","1:3716:686","1:3717:369"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FromResidual","id":"1:3718:137","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"Try","id":"1:3713:224","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:301:660":{"id":"0:301:660","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[1783,4],"end":[1785,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"1:10232:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"1:10221:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13478:35650":{"id":"1:13478:35650","crate_id":1,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"self::pattern":"1:13018:3477","prim@char":"1:57811:2290"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:4624","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:4624","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"DoubleEndedSearcher","id":"1:13048:6056","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:23099:7255":{"id":"1:23099:7255","crate_id":1,"name":"MaskElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SimdElement","id":"1:23736:7238","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:23090:7211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:500:1302":{"id":"0:500:1302","crate_id":0,"name":"size","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:10283:2886":{"id":"1:10283:2886","crate_id":1,"name":"Binary","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10284:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3373:2519":{"id":"1:3373:2519","crate_id":1,"name":"Not","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3374:181","1:3375:952"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:198:1858":{"id":"0:198:1858","crate_id":0,"name":"reserve","span":{"filename":"src/lib.rs","begin":[938,4],"end":[940,5]},"visibility":"public","docs":"Reserve capacity for `additional` more elements to be inserted.\n\nMay reserve more space to avoid frequent reallocations.\n\nPanics if the capacity computation overflows `usize`.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["additional",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:249:1663":{"id":"0:249:1663","crate_id":0,"name":"from_elem","span":{"filename":"src/lib.rs","begin":[1518,4],"end":[1534,5]},"visibility":"public","docs":"Creates a `SmallVec` with `n` copies of `elem`.\n```\nuse smallvec::SmallVec;\n\nlet v = SmallVec::<[char; 128]>::from_elem('d', 2);\nassert_eq!(v, SmallVec::from_buf(['d', 'd']));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["elem",{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:377:1728","args":null,"param_names":[]}}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:575:1302":{"id":"0:575:1302","crate_id":0,"name":"size","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:310:408":{"id":"0:310:408","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[1828,4],"end":[1830,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SmallVec","id":"0:168:1662","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:450:1302":{"id":"0:450:1302","crate_id":0,"name":"size","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:10285:2887":{"id":"1:10285:2887","crate_id":1,"name":"LowerHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10286:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:436":{"id":"0:436","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"array","inner":{"type":{"kind":"generic","inner":"T"},"len":"6"}},"items":["0:439:1732","0:440:1302"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:13505:6389":{"id":"1:13505:6389","crate_id":1,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"1:57811:2290"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDebug","id":"1:49706:6070","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:188:1830":{"id":"0:188:1830","crate_id":0,"name":"spilled","span":{"filename":"src/lib.rs","begin":[778,4],"end":[780,5]},"visibility":"public","docs":"Returns `true` if the data has spilled into a separate heap-allocated buffer.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2853-0:168:1662":{"id":"b:1:2853-0:168:1662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3258:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"1:2847:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SmallVec","id":"0:168:1662","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"items":["1:2855:1611"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:665:1302":{"id":"0:665:1302","crate_id":0,"name":"size","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13502:34505":{"id":"1:13502:34505","crate_id":1,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:3986-0:399:1702":{"id":"b:1:3986-0:399:1702","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3258:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"1:3984:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CollectionAllocErr","id":"0:399:1702","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:3988:1426"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:3506:131":{"id":"1:3506:131","crate_id":1,"name":"FnMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3508:377"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnOnce","id":"1:3509:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:614:1732":{"id":"0:614:1732","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"0:410:1302":{"id":"0:410:1302","crate_id":0,"name":"size","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:7908:2420":{"id":"1:7908:2420","crate_id":1,"name":"Step","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:7909:32774","1:7910:32775","1:7911:32772","1:7912:32770","1:7913:32776","1:7914:32773","1:7915:32771"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"1:2951:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:2905:183":{"id":"1:2905:183","crate_id":1,"name":"PartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2907:604","1:2908:907"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3258:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"1:9240:2711":{"id":"1:9240:2711","crate_id":1,"name":"RefUnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:424:1732":{"id":"0:424:1732","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"0:276":{"id":"0:276","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1714,0],"end":[1719,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:3159:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SmallVec","id":"0:168:1662","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"items":["0:278:681"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:630:1302":{"id":"0:630:1302","crate_id":0,"name":"size","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"4:783:222":{"id":"4:783:222","crate_id":4,"name":"ToOwned","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:784:3777","4:785:31518","4:786:31519"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:435:1302":{"id":"0:435:1302","crate_id":0,"name":"size","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:2872:104":{"id":"1:2872:104","crate_id":1,"name":"Clone","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2873:408","1:2874:410"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3195:127":{"id":"1:3195:127","crate_id":1,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:3166:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}}}}},"a:1:9239:2712-0:330:2113":{"id":"a:1:9239:2712-0:330:2113","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"A"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"1:9239:2712","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"1:9240:2711","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"1:9239:2712","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:330:2113","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:22802:7207":{"id":"1:22802:7207","crate_id":1,"name":"SimdUint","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:22803:32172","1:22804:1225","1:22805:1226","1:22806:32173","1:22807:32174","1:22808:32175","1:22809:32176","1:22810:32177","1:22811:32178","1:22812:32179"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"1:3263:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:22815:7211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:302":{"id":"0:302","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1788,0],"end":[1793,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Default","id":"1:3231:115","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SmallVec","id":"0:168:1662","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"items":["0:304:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:13476:35648":{"id":"1:13476:35648","crate_id":1,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:599:1732":{"id":"0:599:1732","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"0:356":{"id":"0:356","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1966,0],"end":[1978,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:330:2113","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"items":["0:358:1733","0:359:1910"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:514:1732":{"id":"0:514:1732","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"0:446":{"id":"0:446","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"array","inner":{"type":{"kind":"generic","inner":"T"},"len":"8"}},"items":["0:449:1732","0:450:1302"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:308":{"id":"0:308","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1823,0],"end":[1846,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:377:1728","args":null,"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SmallVec","id":"0:168:1662","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"items":["0:310:408","0:311:410"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:425:1302":{"id":"0:425:1302","crate_id":0,"name":"size","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:175:1786":{"id":"0:175:1786","crate_id":0,"name":"with_capacity","span":{"filename":"src/lib.rs","begin":[588,4],"end":[592,5]},"visibility":"public","docs":"Construct an empty vector with enough capacity pre-allocated to store at least `n`\nelements.\n\nWill create a heap allocation only if `n` is larger than the inline capacity.\n\n```\n# use smallvec::SmallVec;\n\nlet v: SmallVec<[u8; 3]> = SmallVec::with_capacity(100);\n\nassert!(v.is_empty());\nassert!(v.capacity() >= 100);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:117:660":{"id":"0:117:660","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[341,4],"end":[343,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"1:10232:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"1:10221:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:232:1972":{"id":"0:232:1972","crate_id":0,"name":"dedup_by_key","span":{"filename":"src/lib.rs","begin":[1285,4],"end":[1291,5]},"visibility":"public","docs":"Removes consecutive elements that map to the same key.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["key",{"kind":"generic","inner":"F"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnMut","id":"1:3506:131","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:377:1728","args":null,"param_names":[]}}}}}}],"output":{"kind":"generic","inner":"K"}}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"K"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2905:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:669:1732":{"id":"0:669:1732","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"b:1:2853-0:330:2113":{"id":"b:1:2853-0:330:2113","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3258:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"1:2847:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:330:2113","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"items":["1:2855:1611"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:544:1732":{"id":"0:544:1732","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"a:1:3294:2364-0:330:2113":{"id":"a:1:3294:2364-0:330:2113","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"A"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"1:3294:2364","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"1:3294:2364","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:330:2113","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:8867:2436":{"id":"1:8867:2436","crate_id":1,"name":"TrustedStep","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Step","id":"1:7908:2420","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:1:3197-0:107:1726":{"id":"b:1:3197-0:107:1726","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"1:3156:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:3166:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:107:1726","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["1:3200:127","1:3201:1413"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:530:1302":{"id":"0:530:1302","crate_id":0,"name":"size","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:371":{"id":"0:371","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2005,0],"end":[2011,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"1:8384:151","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"resolved_path","inner":{"name":"SmallVec","id":"0:168:1662","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}}}},"items":["0:374:2113","0:375:1732","0:376:768"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:13467:6474":{"id":"1:13467:6474","crate_id":1,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"1:13018:3477","`DoubleEndedIterator`":"1:8428:120","prim@char":"1:57811:2290","str::match_indices":"1:57817:2295"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatchIndices","id":"1:49575:6076","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:4624","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:4624","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:13043:6057","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:8384:151":{"id":"1:8384:151","crate_id":1,"name":"IntoIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:8385:1732","1:8386:2113","1:8387:768"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:253:543":{"id":"0:253:543","crate_id":0,"name":"deref","span":{"filename":"src/lib.rs","begin":[1540,4],"end":[1545,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:377:1728","args":null,"param_names":[]}}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:193:1862":{"id":"0:193:1862","crate_id":0,"name":"pop","span":{"filename":"src/lib.rs","begin":[849,4],"end":[859,5]},"visibility":"public","docs":"Remove an item from the end of the vector and return it, or None if empty.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47440:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:377:1728","args":null,"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3159:135":{"id":"1:3159:135","crate_id":1,"name":"From","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3161:681"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:445:1302":{"id":"0:445:1302","crate_id":0,"name":"size","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3419:2525":{"id":"1:3419:2525","crate_id":1,"name":"ShlAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3421:1232"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:245:1700":{"id":"0:245:1700","crate_id":0,"name":"extend_from_slice","span":{"filename":"src/lib.rs","begin":[1485,4],"end":[1488,5]},"visibility":"public","docs":"Copy elements from a slice and append them to the vector.\n\nFor slices of `Copy` types, this is more efficient than `extend`.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["slice",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:377:1728","args":null,"param_names":[]}}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:596":{"id":"0:596","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"array","inner":{"type":{"kind":"generic","inner":"T"},"len":"512"}},"items":["0:599:1732","0:600:1302"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:369:1732":{"id":"0:369:1732","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[1999,4],"end":[1999,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}}}},"1:8428:120":{"id":"1:8428:120","crate_id":1,"name":"DoubleEndedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:8429:1736","1:8430:2821","1:8431:2822","1:8432:2823","1:8436:2824","1:8439:2825"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"1:8582:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:1:3186-0:399:1702":{"id":"b:1:3186-0:399:1702","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:3159:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CollectionAllocErr","id":"0:399:1702","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:3188:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:3415:2524":{"id":"1:3415:2524","crate_id":1,"name":"BitXorAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3417:357"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:1:3192-0:107:1726":{"id":"b:1:3192-0:107:1726","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:3166:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"1:3162:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:107:1726","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["1:3195:127","1:3196:1414"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:13394:2102":{"id":"1:13394:2102","crate_id":1,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"1:47440:176"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47440:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"1:10914:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"1:10914:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:9239:2712-0:168:1662":{"id":"a:1:9239:2712-0:168:1662","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"A"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"1:9239:2712","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"1:9240:2711","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"1:9239:2712","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SmallVec","id":"0:168:1662","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:1:3182-0:107:1726":{"id":"b:1:3182-0:107:1726","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:3159:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"1:3156:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:107:1726","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["1:3185:2065"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:646":{"id":"0:646","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"array","inner":{"type":{"kind":"generic","inner":"T"},"len":"131072"}},"items":["0:649:1732","0:650:1302"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:13501:5845":{"id":"1:13501:5845","crate_id":1,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13503:34506":{"id":"1:13503:34506","crate_id":1,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:0:1657":{"id":"0:0:1657","crate_id":0,"name":"smallvec","span":{"filename":"src/lib.rs","begin":[7,0],"end":[2125,1]},"visibility":"public","docs":"Small vectors in various sizes. These store a certain number of elements inline, and fall back\nto the heap for larger allocations.  This can be a useful optimization for improving cache\nlocality and reducing allocator traffic for workloads that fit within the inline buffer.\n\n## `no_std` support\n\nBy default, `smallvec` does not depend on `std`.  However, the optional\n`write` feature implements the `std::io::Write` trait for vectors of `u8`.\nWhen this feature is enabled, `smallvec` depends on `std`.\n\n## Optional features\n\n### `serde`\n\nWhen this optional dependency is enabled, `SmallVec` implements the `serde::Serialize` and\n`serde::Deserialize` traits.\n\n### `write`\n\nWhen this feature is enabled, `SmallVec<[u8; _]>` implements the `std::io::Write` trait.\nThis feature is not compatible with `#![no_std]` programs.\n\n### `union`\n\n**This feature requires Rust 1.49.**\n\nWhen the `union` feature is enabled `smallvec` will track its state (inline or spilled)\nwithout the use of an enum tag, reducing the size of the `smallvec` by one machine word.\nThis means that there is potentially no space overhead compared to `Vec`.\nNote that `smallvec` can still be larger than `Vec` if the inline buffer is larger than two\nmachine words.\n\nTo use this feature add `features = [\"union\"]` in the `smallvec` section of Cargo.toml.\nNote that this feature requires Rust 1.49.\n\nTracking issue: [rust-lang/rust#55149](https://github.com/rust-lang/rust/issues/55149)\n\n### `const_generics`\n\n**This feature requires Rust 1.51.**\n\nWhen this feature is enabled, `SmallVec` works with any arrays of any size, not just a fixed\nlist of sizes.\n\n### `const_new`\n\n**This feature requires Rust 1.51.**\n\nThis feature exposes the functions [`SmallVec::new_const`], [`SmallVec::from_const`], and [`smallvec_inline`] which enables the `SmallVec` to be initialized from a const context.\nFor details, see the\n[Rust Reference](https://doc.rust-lang.org/reference/const_eval.html#const-functions).\n\n### `specialization`\n\n**This feature is unstable and requires a nightly build of the Rust toolchain.**\n\nWhen this feature is enabled, `SmallVec::from(slice)` has improved performance for slices\nof `Copy` types.  (Without this feature, you can use `SmallVec::from_slice` to get optimal\nperformance for `Copy` types.)\n\nTracking issue: [rust-lang/rust#31844](https://github.com/rust-lang/rust/issues/31844)\n\n### `may_dangle`\n\n**This feature is unstable and requires a nightly build of the Rust toolchain.**\n\nThis feature makes the Rust compiler less strict about use of vectors that contain borrowed\nreferences. For details, see the\n[Rustonomicon](https://doc.rust-lang.org/1.42.0/nomicon/dropck.html#an-escape-hatch).\n\nTracking issue: [rust-lang/rust#34761](https://github.com/rust-lang/rust/issues/34761)","links":{},"attrs":["#![no_std]","#![deny(missing_docs)]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:399:1702","0:107:1726","0:168:1662","0:330:2113","0:377:1728","0:393:2174","0:88:1657"],"is_stripped":false}},"0:515:1302":{"id":"0:515:1302","crate_id":0,"name":"size","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:584:1732":{"id":"0:584:1732","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"0:279":{"id":"0:279","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1721,0],"end":[1727,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"1:10914:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:377:1728","args":null,"param_names":[]}}}}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Index","id":"1:3561:2099","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SmallVec","id":"0:168:1662","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"items":["0:282:181","0:283:753"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:526":{"id":"0:526","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"array","inner":{"type":{"kind":"generic","inner":"T"},"len":"24"}},"items":["0:529:1732","0:530:1302"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:1:2853-0:107:1726":{"id":"b:1:2853-0:107:1726","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3258:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"1:2847:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:107:1726","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["1:2855:1611"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:605:1302":{"id":"0:605:1302","crate_id":0,"name":"size","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:484:1732":{"id":"0:484:1732","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"b:1:3182-0:168:1662":{"id":"b:1:3182-0:168:1662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:3159:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"1:3156:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SmallVec","id":"0:168:1662","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"items":["1:3185:2065"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:509:1732":{"id":"0:509:1732","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"0:634:1732":{"id":"0:634:1732","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"0:571":{"id":"0:571","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"array","inner":{"type":{"kind":"generic","inner":"T"},"len":"36"}},"items":["0:574:1732","0:575:1302"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:440:1302":{"id":"0:440:1302","crate_id":0,"name":"size","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:554:1732":{"id":"0:554:1732","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"0:559:1732":{"id":"0:559:1732","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"1:3348:2508":{"id":"1:3348:2508","crate_id":1,"name":"Neg","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3349:181","1:3350:913"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:560:1302":{"id":"0:560:1302","crate_id":0,"name":"size","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:354":{"id":"0:354","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1964,0],"end":[1964,47]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"FusedIterator","id":"1:8860:1616","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:330:2113","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:1:9239:2712-0:107:1726":{"id":"a:1:9239:2712-0:107:1726","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"1:9240:2711","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"1:9240:2711","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"1:9239:2712","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:107:1726","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:434:1732":{"id":"0:434:1732","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"a:1:9240:2711-0:330:2113":{"id":"a:1:9240:2711-0:330:2113","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"A"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"1:9240:2711","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"1:9240:2711","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"1:9240:2711","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:330:2113","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:368:2113":{"id":"0:368:2113","crate_id":0,"name":"IntoIter","span":{"filename":"src/lib.rs","begin":[1998,4],"end":[1998,45]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Iter","id":"1:11094:1731","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}}}},"1:23051:30741":{"id":"1:23051:30741","crate_id":1,"name":"ToBitMask","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:23052:32091","1:23053:32092","1:23054:32093"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:23044:7211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:574:1732":{"id":"0:574:1732","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"1:2951:184":{"id":"1:2951:184","crate_id":1,"name":"PartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2953:997","1:2954:826","1:2955:792","1:2956:713","1:2957:696"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3258:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2905:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:419:1732":{"id":"0:419:1732","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"0:400:1704":{"id":"0:400:1704","crate_id":0,"name":"CapacityOverflow","span":{"filename":"src/lib.rs","begin":[280,4],"end":[280,20]},"visibility":"default","docs":"Overflow `usize::MAX` or other error during size computation","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"a:1:9239:2712-0:399:1702":{"id":"a:1:9239:2712-0:399:1702","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"1:9239:2712","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CollectionAllocErr","id":"0:399:1702","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:3424:2526":{"id":"1:3424:2526","crate_id":1,"name":"ShrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3426:1235"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:610:1302":{"id":"0:610:1302","crate_id":0,"name":"size","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3331:2507":{"id":"1:3331:2507","crate_id":1,"name":"Mul","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3333:181","1:3334:892"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:1:3182-0:399:1702":{"id":"b:1:3182-0:399:1702","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:3159:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"1:3156:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CollectionAllocErr","id":"0:399:1702","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:3185:2065"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:1:2853-0:399:1702":{"id":"b:1:2853-0:399:1702","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3258:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"1:2847:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CollectionAllocErr","id":"0:399:1702","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:2855:1611"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:199:1891":{"id":"0:199:1891","crate_id":0,"name":"try_reserve","span":{"filename":"src/lib.rs","begin":[945,4],"end":[958,5]},"visibility":"public","docs":"Reserve capacity for `additional` more elements to be inserted.\n\nMay reserve more space to avoid frequent reallocations.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["additional",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:47567:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"CollectionAllocErr","id":"0:399:1702","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:320:997":{"id":"0:320:997","crate_id":0,"name":"partial_cmp","span":{"filename":"src/lib.rs","begin":[1865,4],"end":[1867,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"SmallVec","id":"0:168:1662","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47440:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"cmp::Ordering","id":"1:37572:178","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:3189-0:168:1662":{"id":"b:1:3189-0:168:1662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:3159:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"never"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SmallVec","id":"0:168:1662","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"items":["1:3191:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:3321:2505":{"id":"1:3321:2505","crate_id":1,"name":"Add","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3323:181","1:3324:265"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:580:1302":{"id":"0:580:1302","crate_id":0,"name":"size","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13411:6459":{"id":"1:13411:6459","crate_id":1,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are ended with either a newline (`\\n`) or a carriage return with\na line feed (`\\r\\n`).\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Lines","id":"1:49661:6073","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:8343:2438":{"id":"1:8343:2438","crate_id":1,"name":"Sum","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:8345:2871"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:639:1732":{"id":"0:639:1732","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"0:341":{"id":"0:341","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1920,0],"end":[1924,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Drop","id":"1:3500:1738","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:330:2113","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"items":["0:343:578"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:569:1732":{"id":"0:569:1732","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"0:635:1302":{"id":"0:635:1302","crate_id":0,"name":"size","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:411":{"id":"0:411","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"array","inner":{"type":{"kind":"generic","inner":"T"},"len":"1"}},"items":["0:414:1732","0:415:1302"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:406":{"id":"0:406","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"array","inner":{"type":{"kind":"generic","inner":"T"},"len":"0"}},"items":["0:409:1732","0:410:1302"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:505:1302":{"id":"0:505:1302","crate_id":0,"name":"size","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:3197-0:399:1702":{"id":"b:1:3197-0:399:1702","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"1:3156:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:3166:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CollectionAllocErr","id":"0:399:1702","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:3200:127","1:3201:1413"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:1:2856-0:107:1726":{"id":"b:1:2856-0:107:1726","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3258:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"1:2850:1612","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:107:1726","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["1:2858:2071"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:140":{"id":"0:140","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[381,0],"end":[381,52]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"FusedIterator","id":"1:8860:1616","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:107:1726","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:338":{"id":"0:338","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1911,0],"end":[1918,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:377:1728","args":null,"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:330:2113","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"items":["0:340:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:180:1746":{"id":"0:180:1746","crate_id":0,"name":"set_len","span":{"filename":"src/lib.rs","begin":[696,4],"end":[699,5]},"visibility":"public","docs":"Sets the length of a vector.\n\nThis will explicitly set the size of the vector, without actually\nmodifying its buffers, so it is up to the caller to ensure that the\nvector is actually the specified size.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["new_len",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"b:1:3986-0:330:2113":{"id":"b:1:3986-0:330:2113","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3258:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"1:3984:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:330:2113","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"items":["1:3988:1426"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:1:3182-0:330:2113":{"id":"b:1:3182-0:330:2113","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:3159:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"1:3156:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:330:2113","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"items":["1:3185:2065"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:621":{"id":"0:621","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"array","inner":{"type":{"kind":"generic","inner":"T"},"len":"8192"}},"items":["0:624:1732","0:625:1302"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:23736:7238":{"id":"1:23736:7238","crate_id":1,"name":"SimdElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["1:23737:7248"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:23732:7211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"1:3263:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:238:1855":{"id":"0:238:1855","crate_id":0,"name":"from_raw_parts","span":{"filename":"src/lib.rs","begin":[1404,4],"end":[1410,5]},"visibility":"public","docs":"Creates a `SmallVec` directly from the raw components of another\n`SmallVec`.\n\n# Safety\n\nThis is highly unsafe, due to the number of invariants that aren't\nchecked:\n\n* `ptr` needs to have been previously allocated via `SmallVec` for its\n  spilled storage (at least, it's highly likely to be incorrect if it\n  wasn't).\n* `ptr`'s `A::Item` type needs to be the same size and alignment that\n  it was allocated with\n* `length` needs to be less than or equal to `capacity`.\n* `capacity` needs to be the capacity that the pointer was allocated\n  with.\n\nViolating these may cause problems like corrupting the allocator's\ninternal data structures.\n\nAdditionally, `capacity` must be greater than the amount of inline\nstorage `A` has; that is, the new `SmallVec` must need to spill over\ninto heap allocated storage. This condition is asserted against.\n\nThe ownership of `ptr` is effectively transferred to the\n`SmallVec` which may then deallocate, reallocate or change the\ncontents of memory pointed to by the pointer at will. Ensure\nthat nothing else uses the pointer after calling this\nfunction.\n\n# Examples\n\n```\n# #[macro_use] extern crate smallvec;\n# use smallvec::SmallVec;\nuse std::mem;\nuse std::ptr;\n\nfn main() {\n    let mut v: SmallVec<[_; 1]> = smallvec![1, 2, 3];\n\n    // Pull out the important parts of `v`.\n    let p = v.as_mut_ptr();\n    let len = v.len();\n    let cap = v.capacity();\n    let spilled = v.spilled();\n\n    unsafe {\n        // Forget all about `v`. The heap allocation that stored the\n        // three values won't be deallocated.\n        mem::forget(v);\n\n        // Overwrite memory with [4, 5, 6].\n        //\n        // This is only safe if `spilled` is true! Otherwise, we are\n        // writing into the old `SmallVec`'s inline storage on the\n        // stack.\n        assert!(spilled);\n        for i in 0..len {\n            ptr::write(p.add(i), 4 + i);\n        }\n\n        // Put everything back together into a SmallVec with a different\n        // amount of inline storage, but which is still less than `cap`.\n        let rebuilt = SmallVec::<[_; 2]>::from_raw_parts(p, len, cap);\n        assert_eq!(&*rebuilt, &[4, 5, 6]);\n    }\n}","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["ptr",{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:377:1728","args":null,"param_names":[]}}}}}}],["length",{"kind":"primitive","inner":"usize"}],["capacity",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"SmallVec","id":"0:168:1662","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:609:1732":{"id":"0:609:1732","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"0:287:754":{"id":"0:287:754","crate_id":0,"name":"index_mut","span":{"filename":"src/lib.rs","begin":[1730,4],"end":[1732,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"1:10914:214","args":null,"param_names":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:444:1732":{"id":"0:444:1732","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"0:370:768":{"id":"0:370:768","crate_id":0,"name":"into_iter","span":{"filename":"src/lib.rs","begin":[2000,4],"end":[2002,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"1:8384:151","args":null,"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3253:211":{"id":"1:3253:211","crate_id":1,"name":"Send","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:204:1733":{"id":"0:204:1733","crate_id":0,"name":"as_slice","span":{"filename":"src/lib.rs","begin":[1022,4],"end":[1024,5]},"visibility":"public","docs":"Extracts a slice containing the entire vector.\n\nEquivalent to `&s[..]`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:377:1728","args":null,"param_names":[]}}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3261:218":{"id":"1:3261:218","crate_id":1,"name":"StructuralPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3201:1413":{"id":"1:3201:1413","crate_id":1,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:47567:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:3166:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:8380:136":{"id":"1:8380:136","crate_id":1,"name":"FromIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:8382:684"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:168:1662":{"id":"0:168:1662","crate_id":0,"name":"SmallVec","span":{"filename":"src/lib.rs","begin":[550,0],"end":[556,1]},"visibility":"public","docs":"A `Vec`-like container that can store a small number of elements inline.\n\n`SmallVec` acts like a vector, but can store a limited amount of data inline within the\n`SmallVec` struct rather than in a separate allocation.  If the data exceeds this limit, the\n`SmallVec` will \"spill\" its data onto the heap, allocating a new buffer to hold it.\n\nThe amount of data that a `SmallVec` can store inline depends on its backing store. The backing\nstore can be any type that implements the `Array` trait; usually it is a small fixed-sized\narray.  For example a `SmallVec<[u64; 8]>` can hold up to eight 64-bit integers inline.\n\n## Example\n\n```rust\nuse smallvec::SmallVec;\nlet mut v = SmallVec::<[u8; 4]>::new(); // initialize an empty vector\n\n// The vector can hold up to 4 items without spilling onto the heap.\nv.extend(0..4);\nassert_eq!(v.len(), 4);\nassert!(!v.spilled());\n\n// Pushing another element will force the buffer to spill:\nv.push(4);\nassert_eq!(v.len(), 5);\nassert!(v.spilled());\n```","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:172","0:241","0:246","a:1:9240:2711-0:168:1662","a:1:3294:2364-0:168:1662","a:1:9239:2712-0:168:1662","a:1:3265:220-0:168:1662","b:1:3189-0:168:1662","b:1:3186-0:168:1662","b:1:3986-0:168:1662","b:1:3197-0:168:1662","b:1:2853-0:168:1662","b:1:3192-0:168:1662","b:1:2856-0:168:1662","b:1:3182-0:168:1662","b:4:787-0:168:1662","0:250","0:254","0:257","0:260","0:263","0:266","0:269","0:273","0:276","0:279","0:284","0:291","0:295","0:299","0:302","0:305","0:308","0:312","0:316","0:318","0:321","0:324","0:328","0:360","0:365","0:371"]}},"0:256:545":{"id":"0:256:545","crate_id":0,"name":"deref_mut","span":{"filename":"src/lib.rs","begin":[1550,4],"end":[1555,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:377:1728","args":null,"param_names":[]}}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:3192-0:399:1702":{"id":"b:1:3192-0:399:1702","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:3166:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"1:3162:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CollectionAllocErr","id":"0:399:1702","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:3195:127","1:3196:1414"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:8347:2437":{"id":"1:8347:2437","crate_id":1,"name":"Product","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:8349:2872"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:494:1732":{"id":"0:494:1732","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"1:13449:6009":{"id":"1:13449:6009","crate_id":1,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"str::splitn":"1:57817:2295","self::pattern":"1:13018:3477","prim@char":"1:57811:2290"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitN","id":"1:49529:2582","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:4624","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:4624","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:13043:6057","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:360":{"id":"0:360","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1980,0],"end":[1995,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"1:8384:151","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SmallVec","id":"0:168:1662","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"items":["0:362:2113","0:363:1732","0:364:768"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:13028:4624":{"id":"1:13028:4624","crate_id":1,"name":"Pattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:13030:6058","1:13031:32838","1:13032:32839","1:13033:32840","1:13034:32842","1:13035:32841","1:13036:32843"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:127:1732":{"id":"0:127:1732","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[350,4],"end":[350,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}},"0:651":{"id":"0:651","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"array","inner":{"type":{"kind":"generic","inner":"T"},"len":"262144"}},"items":["0:654:1732","0:655:1302"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:589:1732":{"id":"0:589:1732","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"4:6104:4779":{"id":"4:6104:4779","crate_id":4,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"4:432:1610","`String`":"4:8368:216"},"attrs":["#[stable(feature = \"box_str\", since = \"1.4.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"4:432:1610","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"4:8106:2350","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"4:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:344":{"id":"0:344","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1926,0],"end":[1947,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["is_sorted_by","sum","min_by_key","find","is_partitioned","inspect","cmp","take_while","eq","intersperse_with","last","take","zip","is_sorted_by_key","product","ge","min_by","count","find_map","cloned","try_fold","any","by_ref","map_while","skip","filter","all","advance_by","for_each","max","__iterator_get_unchecked","cmp_by","position","rev","try_find","try_for_each","try_collect","scan","filter_map","nth","min","partial_cmp_by","lt","unzip","rposition","fold","partial_cmp","collect_into","flat_map","enumerate","collect","step_by","size_hint","eq_by","copied","max_by_key","reduce","partition","flatten","peekable","chain","ne","is_sorted","cycle","max_by","try_reduce","partition_in_place","fuse","skip_while","le","intersperse","next_chunk","map","gt"],"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"1:8582:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:330:2113","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"items":["0:346:1732","0:347:922","0:348:1735"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:13746:150":{"id":"1:13746:150","crate_id":1,"name":"IntoFuture","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:13747:181","1:13748:150","1:13749:767"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:194:1872":{"id":"0:194:1872","crate_id":0,"name":"append","span":{"filename":"src/lib.rs","begin":[873,4],"end":[878,5]},"visibility":"public","docs":"Moves all the elements of `other` into `self`, leaving `other` empty.\n\n# Example\n\n```\n# use smallvec::{SmallVec, smallvec};\nlet mut v0: SmallVec<[u8; 16]> = smallvec![1, 2, 3];\nlet mut v1: SmallVec<[u8; 32]> = smallvec![4, 5, 6];\nv0.append(&mut v1);\nassert_eq!(*v0, [1, 2, 3, 4, 5, 6]);\nassert_eq!(*v1, []);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"SmallVec","id":"0:168:1662","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:377:1728","args":null,"param_names":[]}}}}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:88:1657":{"id":"0:88:1657","crate_id":0,"name":"smallvec","span":{"filename":"src/lib.rs","begin":[163,0],"end":[180,1]},"visibility":"public","docs":"Creates a [`SmallVec`] containing the arguments.\n\n`smallvec!` allows `SmallVec`s to be defined with the same syntax as array expressions.\nThere are two forms of this macro:\n\n- Create a [`SmallVec`] containing a given list of elements:\n\n```\n# #[macro_use] extern crate smallvec;\n# use smallvec::SmallVec;\n# fn main() {\nlet v: SmallVec<[_; 128]> = smallvec![1, 2, 3];\nassert_eq!(v[0], 1);\nassert_eq!(v[1], 2);\nassert_eq!(v[2], 3);\n# }\n```\n\n- Create a [`SmallVec`] from a given element and size:\n\n```\n# #[macro_use] extern crate smallvec;\n# use smallvec::SmallVec;\n# fn main() {\nlet v: SmallVec<[_; 0x8000]> = smallvec![1; 3];\nassert_eq!(v, SmallVec::from_buf([1, 1, 1]));\n# }\n```\n\nNote that unlike array expressions this syntax supports all elements\nwhich implement [`Clone`] and the number of elements doesn't have to be\na constant.\n\nThis will use `clone` to duplicate an expression, so one should be careful\nusing this with types having a nonstandard `Clone` implementation. For\nexample, `smallvec![Rc::new(1); 5]` will create a vector of five references\nto the same boxed integer value, not five references pointing to independently\nboxed integers.","links":{"`SmallVec`":"0:168:1662","`Clone`":"1:2872:104"},"attrs":["#[macro_export]"],"deprecation":null,"kind":"macro","inner":"macro_rules! smallvec {\n    (@one $x:expr) => { ... };\n    ($elem:expr; $n:expr) => { ... };\n    ($($x:expr),*$(,)*) => { ... };\n}"},"1:3701:2527":{"id":"1:3701:2527","crate_id":1,"name":"OneSidedRange","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3258:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RangeBounds","id":"1:3632:1619","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:379:1302":{"id":"0:379:1302","crate_id":0,"name":"size","span":{"filename":"src/lib.rs","begin":[2018,4],"end":[2018,23]},"visibility":"default","docs":"Returns the number of items the array can hold.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"1:13472:35646":{"id":"1:13472:35646","crate_id":1,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:535:1302":{"id":"0:535:1302","crate_id":0,"name":"size","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:244:2052":{"id":"0:244:2052","crate_id":0,"name":"insert_from_slice","span":{"filename":"src/lib.rs","begin":[1466,4],"end":[1479,5]},"visibility":"public","docs":"Copy elements from a slice into the vector at position `index`, shifting any following\nelements toward the back.\n\nFor slices of `Copy` types, this is more efficient than `insert`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}],["slice",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:377:1728","args":null,"param_names":[]}}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:228:1961":{"id":"0:228:1961","crate_id":0,"name":"dedup","span":{"filename":"src/lib.rs","begin":[1245,4],"end":[1250,5]},"visibility":"public","docs":"Removes consecutive duplicate elements.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:377:1728","args":null,"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2905:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:377:1728","args":null,"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:566":{"id":"0:566","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"array","inner":{"type":{"kind":"generic","inner":"T"},"len":"32"}},"items":["0:569:1732","0:570:1302"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:3342:2509":{"id":"1:3342:2509","crate_id":1,"name":"Rem","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3344:181","1:3345:1102"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:549:1732":{"id":"0:549:1732","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"1:3356:2515":{"id":"1:3356:2515","crate_id":1,"name":"SubAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3358:1354"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:304:59":{"id":"0:304:59","crate_id":0,"name":"default","span":{"filename":"src/lib.rs","begin":[1790,4],"end":[1792,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"SmallVec","id":"0:168:1662","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:326:715":{"id":"0:326:715","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[1884,4],"end":[1886,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Hasher","id":"1:10520:146","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13470:35645":{"id":"1:13470:35645","crate_id":1,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:203:1905":{"id":"0:203:1905","crate_id":0,"name":"truncate","span":{"filename":"src/lib.rs","begin":[1008,4],"end":[1017,5]},"visibility":"public","docs":"Shorten the vector, keeping the first `len` elements and dropping the rest.\n\nIf `len` is greater than or equal to the vector's current length, this has no\neffect.\n\nThis does not re-allocate.  If you want the vector's capacity to shrink, call\n`shrink_to_fit` after truncating.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["len",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:10293:2890":{"id":"1:10293:2890","crate_id":1,"name":"UpperExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10294:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:114":{"id":"0:114","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[337,0],"end":[344,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"outlives":"'a"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:377:1728","args":null,"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"fmt::Debug","id":"1:10272:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10272:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:107:1726","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["0:117:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:499:1732":{"id":"0:499:1732","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"1:13381":{"id":"1:13381","crate_id":1,"name":null,"span":null,"visibility":{"restricted":{"parent":"1:12478:1338","path":"::str"}},"docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["1:13382:793","1:13383:1826","1:13384:6681","1:13385:35638","1:13387:35639","1:13390:4768","1:13391:35640","1:13392:304","1:13393:1743","1:13394:2102","1:13396:2815","1:13398:2816","1:13400:2817","1:13402:35641","1:13403:35642","1:13404:2107","1:13405:34597","1:13406:6083","1:13407:6165","1:13408:4628","1:13409:6300","1:13410:6287","1:13411:6459","1:13412:6464","1:13413:6277","1:13414:1938","1:13417:34604","1:13420:34605","1:13423:2859","1:13427:2825","1:13431:5719","1:13434:6030","1:13437:5992","1:13440:6502","1:13443:6498","1:13446:5721","1:13449:6009","1:13452:35643","1:13455:35644","1:13458:2317","1:13461:6482","1:13464:6470","1:13467:6474","1:13470:35645","1:13472:35646","1:13474:35647","1:13476:35648","1:13477:35649","1:13478:35650","1:13481:35651","1:13484:34606","1:13487:34607","1:13490:35652","1:13493:35653","1:13496:35654","1:13499:6430","1:13501:5845","1:13502:34505","1:13503:34506","1:13504:34507","1:13505:6389","1:13507:6392","1:13508:6395"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:644:1732":{"id":"0:644:1732","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"1:13443:6498":{"id":"1:13443:6498","crate_id":1,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"str::split":"1:57817:2295","str::split_terminator":"1:57817:2295","prim@char":"1:57811:2290","self::pattern":"1:13018:3477"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitTerminator","id":"1:49475:6079","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:4624","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:4624","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:13043:6057","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:307:578":{"id":"0:307:578","crate_id":0,"name":"drop","span":{"filename":"src/lib.rs","begin":[1811,4],"end":[1820,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:118":{"id":"0:118","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[346,0],"end":[346,57]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"1:3265:220","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"1:3265:220","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:107:1726","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"4:6083":{"id":"4:6083","crate_id":4,"name":null,"span":null,"visibility":{"restricted":{"parent":"4:5903:1338","path":"::str"}},"docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["4:6084:36291","4:6085:2493","4:6088:36292","4:6091:36293","4:6103:36294","4:6104:4779","4:6105:1615","4:6106:35625","4:6107:35626"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:403:1708":{"id":"0:403:1708","crate_id":0,"name":"layout","span":{"filename":"src/lib.rs","begin":[284,8],"end":[284,22]},"visibility":"default","docs":"The layout that was passed to the allocator","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Layout","id":"1:50366:158","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}},"0:465:1302":{"id":"0:465:1302","crate_id":0,"name":"size","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2856-0:330:2113":{"id":"b:1:2856-0:330:2113","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3258:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"1:2850:1612","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:330:2113","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"items":["1:2858:2071"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:471":{"id":"0:471","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"array","inner":{"type":{"kind":"generic","inner":"T"},"len":"13"}},"items":["0:474:1732","0:475:1302"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:469:1732":{"id":"0:469:1732","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"1:3368:2514":{"id":"1:3368:2514","crate_id":1,"name":"RemAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3370:1103"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3390:2518":{"id":"1:3390:2518","crate_id":1,"name":"BitXor","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3392:181","1:3393:356"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:10291:2889":{"id":"1:10291:2889","crate_id":1,"name":"LowerExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10292:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"4:6085:2493":{"id":"4:6085:2493","crate_id":4,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"4:8368:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["from",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"4:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:4624","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:489:1732":{"id":"0:489:1732","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"1:13413:6277":{"id":"1:13413:6277","crate_id":1,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"encode_utf16\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncodeUtf16","id":"1:49699:6060","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:398:2176":{"id":"0:398:2176","crate_id":0,"name":"to_smallvec","span":{"filename":"src/lib.rs","begin":[2122,4],"end":[2124,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SmallVec","id":"0:168:1662","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:295":{"id":"0:295","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1754,0],"end":[1777,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["extend_one","extend_reserve"],"trait":{"kind":"resolved_path","inner":{"name":"Extend","id":"1:8393:2101","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SmallVec","id":"0:168:1662","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"items":["0:297:1874"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:649:1732":{"id":"0:649:1732","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"1:2855:1611":{"id":"1:2855:1611","crate_id":1,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3632:1619":{"id":"1:3632:1619","crate_id":1,"name":"RangeBounds","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3634:1846","1:3635:1852","1:3636:1938"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3258:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:536":{"id":"0:536","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"array","inner":{"type":{"kind":"generic","inner":"T"},"len":"26"}},"items":["0:539:1732","0:540:1302"],"negative":false,"synthetic":false,"blanket_impl":null}},"4:6084:36291":{"id":"4:6084:36291","crate_id":4,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[stable(feature = \"str_box_extras\", since = \"1.20.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"4:432:1610","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"4:8106:2350","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"Box","id":"4:432:1610","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"4:8106:2350","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:284":{"id":"0:284","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1729,0],"end":[1733,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"1:10914:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:377:1728","args":null,"param_names":[]}}}}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IndexMut","id":"1:3565:2100","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SmallVec","id":"0:168:1662","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"items":["0:287:754"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:268:2071":{"id":"0:268:2071","crate_id":0,"name":"borrow_mut","span":{"filename":"src/lib.rs","begin":[1581,4],"end":[1583,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:377:1728","args":null,"param_names":[]}}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:414:1732":{"id":"0:414:1732","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"0:565:1302":{"id":"0:565:1302","crate_id":0,"name":"size","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:98":{"id":"0:98","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[295,0],"end":[299,1]},"visibility":"crate","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:3159:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"LayoutError","id":"1:50384:2358","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CollectionAllocErr","id":"0:399:1702","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:99:681"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:14204:2356":{"id":"1:14204:2356","crate_id":1,"name":"Allocator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["1:14205:3560","1:14206:3561","1:14207:1721","1:14208:1878","1:14209:3562","1:14210:3563","1:14211:2848"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:346:1732":{"id":"0:346:1732","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[1927,4],"end":[1927,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}},"b:4:787-0:168:1662":{"id":"b:4:787-0:168:1662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"4:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SmallVec","id":"0:168:1662","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}},"param_names":[]}},"items":["4:789:3777","4:790:31518","4:791:31519"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:3724:2529":{"id":"1:3724:2529","crate_id":1,"name":"Residual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3726:32205"],"generics":{"params":[{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3759:2366":{"id":"1:3759:2366","crate_id":1,"name":"CoerceUnsized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3258:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"1:13484:34606":{"id":"1:13484:34606","crate_id":1,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:57811:2290","self::pattern":"1:13018:3477"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47440:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:4624","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:378:1732":{"id":"0:378:1732","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[2016,4],"end":[2016,14]},"visibility":"default","docs":"The type of the array's elements.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"0:146:578":{"id":"0:146:578","crate_id":0,"name":"drop","span":{"filename":"src/lib.rs","begin":[384,4],"end":[405,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"4:790:31518":{"id":"4:790:31518","crate_id":4,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13410:6287":{"id":"1:13410:6287","crate_id":1,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_whitespace":"1:57817:2295"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_ascii_whitespace\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitAsciiWhitespace","id":"1:49690:6061","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"4:6106:35625":{"id":"4:6106:35625","crate_id":4,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"1:57817:2295"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"4:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:564:1732":{"id":"0:564:1732","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"0:591":{"id":"0:591","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2105,0],"end":[2109,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"0:377:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"array","inner":{"type":{"kind":"generic","inner":"T"},"len":"256"}},"items":["0:594:1732","0:595:1302"],"negative":false,"synthetic":false,"blanket_impl":null}}},"paths":{"1:51766:7719":{"crate_id":1,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"1:3265:220":{"crate_id":1,"path":["core","marker","Sync"],"kind":"trait"},"1:3259:2365":{"crate_id":1,"path":["core","marker","Unsize"],"kind":"trait"},"1:10232:134":{"crate_id":1,"path":["core","fmt","Formatter"],"kind":"struct"},"1:51491:7295":{"crate_id":1,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"1:53448:7761":{"crate_id":1,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"1:3411:2523":{"crate_id":1,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"4:8146:36741":{"crate_id":4,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"1:7908:2420":{"crate_id":1,"path":["core","iter","range","Step"],"kind":"trait"},"1:10427:7641":{"crate_id":1,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"1:9239:2712":{"crate_id":1,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"1:45976:7181":{"crate_id":1,"path":["core","any","TypeId"],"kind":"struct"},"4:2553:4305":{"crate_id":4,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"1:8428:120":{"crate_id":1,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"1:22713:7247":{"crate_id":1,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"1:45913:199":{"crate_id":1,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"4:8160:2113":{"crate_id":4,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"4:3336:4474":{"crate_id":4,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"1:4654:7541":{"crate_id":1,"path":["core","array","try_collect_into_array","Guard"],"kind":"struct"},"1:10222:2072":{"crate_id":1,"path":["core","fmt","Write"],"kind":"trait"},"1:48564:2884":{"crate_id":1,"path":["core","fmt","FlagV1"],"kind":"enum"},"1:51870:7722":{"crate_id":1,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"1:49407:2584":{"crate_id":1,"path":["core","str","iter","Split"],"kind":"struct"},"1:53373:7756":{"crate_id":1,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"1:49271:2596":{"crate_id":1,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"4:4643:7540":{"crate_id":4,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"1:49661:6073":{"crate_id":1,"path":["core","str","iter","Lines"],"kind":"struct"},"4:1486:4291":{"crate_id":4,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"1:11143:2584":{"crate_id":1,"path":["core","slice","iter","Split"],"kind":"struct"},"1:13094:6143":{"crate_id":1,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"1:3159:135":{"crate_id":1,"path":["core","convert","From"],"kind":"trait"},"1:8380:136":{"crate_id":1,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"1:2753:579":{"crate_id":1,"path":["core","ptr","drop_in_place"],"kind":"function"},"1:53286:7297":{"crate_id":1,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"1:24767:167":{"crate_id":1,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"4:1694:4298":{"crate_id":4,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"4:7849:7554":{"crate_id":4,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"1:4767:2363":{"crate_id":1,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"1:13248:8119":{"crate_id":1,"path":["core","str","lossy","Utf8LossyChunksIter"],"kind":"struct"},"1:46535:2449":{"crate_id":1,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"4:7780:234":{"crate_id":4,"path":["alloc","vec","Vec"],"kind":"struct"},"1:9241:2710":{"crate_id":1,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"1:3321:2505":{"crate_id":1,"path":["core","ops","arith","Add"],"kind":"trait"},"4:792:108":{"crate_id":4,"path":["alloc","borrow","Cow"],"kind":"enum"},"1:8582:157":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"1:48580:73":{"crate_id":1,"path":["core","fmt","Arguments"],"kind":"struct"},"1:46557:2442":{"crate_id":1,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"1:32362:31721":{"crate_id":1,"path":["core","mem","valid_align","ValidAlignEnum32"],"kind":"enum"},"1:22564:33065":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"1:11888:2599":{"crate_id":1,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"1:25205:4679":{"crate_id":1,"path":["core","num","saturating","Saturating"],"kind":"struct"},"1:50289:201":{"crate_id":1,"path":["core","future","ready","Ready"],"kind":"struct"},"1:46566:2450":{"crate_id":1,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"1:4362:2113":{"crate_id":1,"path":["core","array","iter","IntoIter"],"kind":"struct"},"1:13746:150":{"crate_id":1,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"1:46665:2458":{"crate_id":1,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"1:3262:217":{"crate_id":1,"path":["core","marker","StructuralEq"],"kind":"trait"},"4:2218:4509":{"crate_id":4,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"1:47567:205":{"crate_id":1,"path":["core","result","Result"],"kind":"enum"},"1:49825:6144":{"crate_id":1,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"1:10291:2889":{"crate_id":1,"path":["core","fmt","LowerExp"],"kind":"trait"},"1:22892:7211":{"crate_id":1,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"1:47627:2113":{"crate_id":1,"path":["core","result","IntoIter"],"kind":"struct"},"1:57834:2310":{"crate_id":1,"path":["core","usize"],"kind":"primitive"},"1:22543:33062":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"1:9240:2711":{"crate_id":1,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"1:49968:6151":{"crate_id":1,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"1:46431:4702":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"4:5889:7547":{"crate_id":4,"path":["alloc","slice","merge","MergeHole"],"kind":"struct"},"4:1674:4297":{"crate_id":4,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"1:46342:7448":{"crate_id":1,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"1:2267:7243":{"crate_id":1,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"4:8168:194":{"crate_id":4,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"4:8106:2350":{"crate_id":4,"path":["alloc","alloc","Global"],"kind":"struct"},"4:3044:8094":{"crate_id":4,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"1:24091:7655":{"crate_id":1,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"1:51666:7257":{"crate_id":1,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"1:48795:7706":{"crate_id":1,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"1:50299:7713":{"crate_id":1,"path":["core","future","ResumeTy"],"kind":"struct"},"1:32261:1749":{"crate_id":1,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"1:10914:214":{"crate_id":1,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"1:3506:131":{"crate_id":1,"path":["core","ops","function","FnMut"],"kind":"trait"},"1:3390:2518":{"crate_id":1,"path":["core","ops","bit","BitXor"],"kind":"trait"},"1:50366:158":{"crate_id":1,"path":["core","alloc","layout","Layout"],"kind":"struct"},"1:48203:2886":{"crate_id":1,"path":["core","fmt","num","Binary"],"kind":"struct"},"1:3407:2522":{"crate_id":1,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"1:57811:2290":{"crate_id":1,"path":["core","char"],"kind":"primitive"},"1:46934:2428":{"crate_id":1,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"1:52741:7302":{"crate_id":1,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"1:3713:224":{"crate_id":1,"path":["core","ops","try_trait","Try"],"kind":"trait"},"4:4628:235":{"crate_id":4,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"1:22815:7211":{"crate_id":1,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"1:4050:7187":{"crate_id":1,"path":["core","any","Demand"],"kind":"struct"},"1:51156:7287":{"crate_id":1,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"1:49629:6078":{"crate_id":1,"path":["core","str","iter","RMatches"],"kind":"struct"},"4:1607:2117":{"crate_id":4,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"1:8384:151":{"crate_id":1,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"1:0:488":{"crate_id":1,"path":["core"],"kind":"module"},"1:46288:7452":{"crate_id":1,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"4:1663:4296":{"crate_id":4,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"1:8347:2437":{"crate_id":1,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"4:7379:2113":{"crate_id":4,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"1:57825:2301":{"crate_id":1,"path":["core","i32"],"kind":"primitive"},"4:5536:3833":{"crate_id":4,"path":["alloc","rc","Weak"],"kind":"struct"},"1:46448:4671":{"crate_id":1,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"1:57821:2297":{"crate_id":1,"path":["core","f32"],"kind":"primitive"},"1:46004:7312":{"crate_id":1,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"4:7620:2067":{"crate_id":4,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"1:24199:4682":{"crate_id":1,"path":["core","num","error","ParseIntError"],"kind":"struct"},"1:2850:1612":{"crate_id":1,"path":["core","borrow","BorrowMut"],"kind":"trait"},"1:51437:7288":{"crate_id":1,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"1:3261:218":{"crate_id":1,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"1:10221:205":{"crate_id":1,"path":["core","fmt","Result"],"kind":"typedef"},"1:3231:115":{"crate_id":1,"path":["core","default","Default"],"kind":"trait"},"1:11377:2586":{"crate_id":1,"path":["core","slice","iter","SplitN"],"kind":"struct"},"1:3380:2516":{"crate_id":1,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"1:8453:1737":{"crate_id":1,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"1:5095:2900":{"crate_id":1,"path":["core","cell","Ref"],"kind":"struct"},"1:5085:4156":{"crate_id":1,"path":["core","cell","BorrowRef"],"kind":"struct"},"1:11405:2587":{"crate_id":1,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"1:11298:2588":{"crate_id":1,"path":["core","slice","iter","RSplit"],"kind":"struct"},"1:3087:7211":{"crate_id":1,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"1:50143:6130":{"crate_id":1,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"1:46365:7449":{"crate_id":1,"path":["core","char","ToLowercase"],"kind":"struct"},"1:46684:2460":{"crate_id":1,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"1:52995:7290":{"crate_id":1,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"1:51468:7292":{"crate_id":1,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"1:51390:7300":{"crate_id":1,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"1:10272:109":{"crate_id":1,"path":["core","fmt","Debug"],"kind":"trait"},"1:57816:2294":{"crate_id":1,"path":["core","slice"],"kind":"primitive"},"4:1215:4303":{"crate_id":4,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"1:5023:4151":{"crate_id":1,"path":["core","cell","BorrowMutError"],"kind":"struct"},"1:46586:2452":{"crate_id":1,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"1:6418:2454":{"crate_id":1,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"1:53425:7760":{"crate_id":1,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"1:51069:7278":{"crate_id":1,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"1:46011:2900":{"crate_id":1,"path":["core","any","tags","Ref"],"kind":"struct"},"1:57836:2312":{"crate_id":1,"path":["core","fn"],"kind":"primitive"},"1:13927:31787":{"crate_id":1,"path":["core","future","from_generator","GenFuture"],"kind":"struct"},"4:1457:4292":{"crate_id":4,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"1:13028:4624":{"crate_id":1,"path":["core","str","pattern","Pattern"],"kind":"trait"},"1:49715:6071":{"crate_id":1,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"1:7650:2439":{"crate_id":1,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"1:53410:7759":{"crate_id":1,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"1:24597:169":{"crate_id":1,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"1:3561:2099":{"crate_id":1,"path":["core","ops","index","Index"],"kind":"trait"},"1:48740:2415":{"crate_id":1,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"1:3796:2367":{"crate_id":1,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"1:49724:6072":{"crate_id":1,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"4:1195:8117":{"crate_id":4,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"1:3271:1631":{"crate_id":1,"path":["core","marker","PhantomData"],"kind":"struct"},"4:4443:1731":{"crate_id":4,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"1:22511:33038":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"1:46952:2431":{"crate_id":1,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"1:56335:236":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"4:7453:7534":{"crate_id":4,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"1:47829:82":{"crate_id":1,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"1:49145:5814":{"crate_id":1,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"1:4712:7252":{"crate_id":1,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"4:1235:4409":{"crate_id":4,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"1:22526:33038":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"1:57812:2291":{"crate_id":1,"path":["core","unit"],"kind":"primitive"},"4:8362:8560":{"crate_id":4,"path":["alloc","slice","merge_sort","Run"],"kind":"struct"},"1:46647:2457":{"crate_id":1,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"1:3543:2368":{"crate_id":1,"path":["core","ops","generator","Generator"],"kind":"trait"},"4:1441:4289":{"crate_id":4,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"1:47636:178":{"crate_id":1,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"1:10281:2885":{"crate_id":1,"path":["core","fmt","Octal"],"kind":"trait"},"1:49557:6075":{"crate_id":1,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"0:88:1657":{"crate_id":0,"path":["smallvec","smallvec"],"kind":"macro"},"1:57809:2288":{"crate_id":1,"path":["core","bool"],"kind":"primitive"},"4:6411:223":{"crate_id":4,"path":["alloc","string","ToString"],"kind":"trait"},"1:48217:2887":{"crate_id":1,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"1:51689:7260":{"crate_id":1,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"1:4905:4160":{"crate_id":1,"path":["core","cell","once","OnceCell"],"kind":"struct"},"1:57832:2308":{"crate_id":1,"path":["core","u128"],"kind":"primitive"},"1:51641:7275":{"crate_id":1,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"1:24055:4681":{"crate_id":1,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"1:10289:189":{"crate_id":1,"path":["core","fmt","Pointer"],"kind":"trait"},"4:8330:4691":{"crate_id":4,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"1:5611:779":{"crate_id":1,"path":["core","iter"],"kind":"module"},"1:5014:2901":{"crate_id":1,"path":["core","cell","RefCell"],"kind":"struct"},"1:3368:2514":{"crate_id":1,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"1:49393:6065":{"crate_id":1,"path":["core","str","iter","Bytes"],"kind":"struct"},"1:51261:7267":{"crate_id":1,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"1:22766:7315":{"crate_id":1,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"1:57623:7772":{"crate_id":1,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"0:393:2174":{"crate_id":0,"path":["smallvec","ToSmallVec"],"kind":"trait"},"4:8463:2397":{"crate_id":4,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"1:45821:194":{"crate_id":1,"path":["core","ops","range","Range"],"kind":"struct"},"1:47661:84":{"crate_id":1,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"1:11419:2583":{"crate_id":1,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"1:47541:2709":{"crate_id":1,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"1:8144:8118":{"crate_id":1,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"4:5875:7545":{"crate_id":4,"path":["alloc","slice","insert_head","InsertionHole"],"kind":"struct"},"1:46056:7318":{"crate_id":1,"path":["core","array","TryFromSliceError"],"kind":"struct"},"1:46418:4672":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"1:50115:6123":{"crate_id":1,"path":["core","str","LinesAnyMap"],"kind":"struct"},"1:47559:188":{"crate_id":1,"path":["core","pin","Pin"],"kind":"struct"},"1:10283:2886":{"crate_id":1,"path":["core","fmt","Binary"],"kind":"trait"},"1:47997:85":{"crate_id":1,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"3:0:2337":{"crate_id":3,"path":["rustc_std_workspace_core"],"kind":"module"},"1:23626:2578":{"crate_id":1,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"4:432:1610":{"crate_id":4,"path":["alloc","boxed","Box"],"kind":"struct"},"1:46257:7358":{"crate_id":1,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"1:46918:2424":{"crate_id":1,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"1:23099:7255":{"crate_id":1,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"1:50131:6127":{"crate_id":1,"path":["core","str","IsWhitespace"],"kind":"struct"},"1:46413:100":{"crate_id":1,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"1:24014:8515":{"crate_id":1,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"1:50186:7406":{"crate_id":1,"path":["core","time","FromFloatSecsErrorKind"],"kind":"enum"},"1:50352:6880":{"crate_id":1,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"1:24563:172":{"crate_id":1,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"4:8298:4693":{"crate_id":4,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"1:48756:2414":{"crate_id":1,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"4:3040:8093":{"crate_id":4,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"1:52383:7258":{"crate_id":1,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"4:8379:4617":{"crate_id":4,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"1:53344:7753":{"crate_id":1,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"1:13822:187":{"crate_id":1,"path":["core","future","pending","Pending"],"kind":"struct"},"1:9361:4624":{"crate_id":1,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"1:23427:7250":{"crate_id":1,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"1:10905:7211":{"crate_id":1,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"1:28016:4680":{"crate_id":1,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"1:2253:2563":{"crate_id":1,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"1:13048:6056":{"crate_id":1,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"1:49982:6152":{"crate_id":1,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"1:49377:4625":{"crate_id":1,"path":["core","str","iter","Chars"],"kind":"struct"},"1:49856:6148":{"crate_id":1,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"1:47745:81":{"crate_id":1,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"1:48748:7697":{"crate_id":1,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"1:3281:5625":{"crate_id":1,"path":["core","marker","Freeze"],"kind":"trait"},"1:49326:2594":{"crate_id":1,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"1:46273:7360":{"crate_id":1,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"1:4869:4159":{"crate_id":1,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"1:23432:30760":{"crate_id":1,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"1:57644:7773":{"crate_id":1,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"1:3701:2527":{"crate_id":1,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"4:3970:7534":{"crate_id":4,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"2:0:430":{"crate_id":2,"path":["compiler_builtins"],"kind":"module"},"1:48765:146":{"crate_id":1,"path":["core","hash","sip","Hasher"],"kind":"struct"},"4:1644:4294":{"crate_id":4,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"4:3038:3777":{"crate_id":4,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"4:2310:7462":{"crate_id":4,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"4:3894:4229":{"crate_id":4,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"1:57818:2296":{"crate_id":1,"path":["core","tuple"],"kind":"primitive"},"1:45969:2528":{"crate_id":1,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"1:48476:67":{"crate_id":1,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"1:49306:2595":{"crate_id":1,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"1:14094:201":{"crate_id":1,"path":["core","task","ready","Ready"],"kind":"struct"},"1:50151:121":{"crate_id":1,"path":["core","time","Duration"],"kind":"struct"},"4:5315:200":{"crate_id":4,"path":["alloc","rc","Rc"],"kind":"struct"},"1:3759:2366":{"crate_id":1,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"4:4515:4217":{"crate_id":4,"path":["alloc","collections","vec_deque","pair_slices","PairSlices"],"kind":"struct"},"1:46943:2429":{"crate_id":1,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"1:53325:7262":{"crate_id":1,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"4:6688:3846":{"crate_id":4,"path":["alloc","sync","ArcInner"],"kind":"struct"},"1:3156:149":{"crate_id":1,"path":["core","convert","Into"],"kind":"trait"},"1:3500:1738":{"crate_id":1,"path":["core","ops","drop","Drop"],"kind":"trait"},"1:46618:2455":{"crate_id":1,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"1:52884:7270":{"crate_id":1,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"1:10279:119":{"crate_id":1,"path":["core","fmt","Display"],"kind":"trait"},"1:50123:6125":{"crate_id":1,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"1:49690:6061":{"crate_id":1,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"1:46336:6071":{"crate_id":1,"path":["core","char","EscapeDefault"],"kind":"struct"},"4:3839:7534":{"crate_id":4,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"1:51125:7299":{"crate_id":1,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"1:51342:7718":{"crate_id":1,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"1:57829:2305":{"crate_id":1,"path":["core","u16"],"kind":"primitive"},"1:45729:2532":{"crate_id":1,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"1:23101:7248":{"crate_id":1,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"4:6652:69":{"crate_id":4,"path":["alloc","sync","Arc"],"kind":"struct"},"4:2262:4411":{"crate_id":4,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"1:32310:31719":{"crate_id":1,"path":["core","mem","valid_align","ValidAlignEnum16"],"kind":"enum"},"1:57826:2302":{"crate_id":1,"path":["core","i64"],"kind":"primitive"},"1:3348:2508":{"crate_id":1,"path":["core","ops","arith","Neg"],"kind":"trait"},"4:4306:2117":{"crate_id":4,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"1:14204:2356":{"crate_id":1,"path":["core","alloc","Allocator"],"kind":"trait"},"1:49383:6066":{"crate_id":1,"path":["core","str","iter","CharIndices"],"kind":"struct"},"1:45867:198":{"crate_id":1,"path":["core","ops","range","RangeTo"],"kind":"struct"},"1:51303:7717":{"crate_id":1,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"1:2847:97":{"crate_id":1,"path":["core","borrow","Borrow"],"kind":"trait"},"1:57828:2304":{"crate_id":1,"path":["core","u8"],"kind":"primitive"},"1:23090:7211":{"crate_id":1,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"1:24184:4684":{"crate_id":1,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"1:46526:2440":{"crate_id":1,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"1:53399:7758":{"crate_id":1,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"1:50139:6129":{"crate_id":1,"path":["core","str","IsNotEmpty"],"kind":"struct"},"1:50996:7715":{"crate_id":1,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"1:46595:2453":{"crate_id":1,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"1:49316:2593":{"crate_id":1,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"1:12465:2574":{"crate_id":1,"path":["core","slice","SlicePattern"],"kind":"trait"},"1:46235:7679":{"crate_id":1,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"1:24068:7333":{"crate_id":1,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"1:46398:7362":{"crate_id":1,"path":["core","char","TryFromCharError"],"kind":"struct"},"1:49224:2590":{"crate_id":1,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"1:2276:2562":{"crate_id":1,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"1:45936:1845":{"crate_id":1,"path":["core","ops","range","Bound"],"kind":"enum"},"4:8368:216":{"crate_id":4,"path":["alloc","string","String"],"kind":"struct"},"1:55912:7234":{"crate_id":1,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"1:22802:7207":{"crate_id":1,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"1:48461:70":{"crate_id":1,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"4:6973:1499":{"crate_id":4,"path":["alloc","vec"],"kind":"module"},"0:400:1704":{"crate_id":0,"path":["smallvec","CollectionAllocErr","CapacityOverflow"],"kind":"variant"},"0:168:1662":{"crate_id":0,"path":["smallvec","SmallVec"],"kind":"struct"},"1:50119:6124":{"crate_id":1,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"4:8176:4413":{"crate_id":4,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"1:51714:7261":{"crate_id":1,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"4:1560:94":{"crate_id":4,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"1:56283:236":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:57817:2295":{"crate_id":1,"path":["core","str"],"kind":"primitive"},"1:48039:92":{"crate_id":1,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"1:3730:2531":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"1:7736:2448":{"crate_id":1,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"4:3375:4507":{"crate_id":4,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"1:3166:227":{"crate_id":1,"path":["core","convert","TryFrom"],"kind":"trait"},"1:22839:7249":{"crate_id":1,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"1:2910:124":{"crate_id":1,"path":["core","cmp","Eq"],"kind":"trait"},"4:2777:4304":{"crate_id":4,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"1:48224:2888":{"crate_id":1,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"1:49671:6074":{"crate_id":1,"path":["core","str","iter","LinesAny"],"kind":"struct"},"1:3401:2521":{"crate_id":1,"path":["core","ops","bit","Shr"],"kind":"trait"},"1:2062:7541":{"crate_id":1,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"1:24131:10245":{"crate_id":1,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"1:57822:2298":{"crate_id":1,"path":["core","f64"],"kind":"primitive"},"1:46696:2461":{"crate_id":1,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"1:24665:168":{"crate_id":1,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"1:51179:7291":{"crate_id":1,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"1:49787:6140":{"crate_id":1,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"4:3039:34382":{"crate_id":4,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"1:24529:171":{"crate_id":1,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"4:4215:1726":{"crate_id":4,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"1:56309:236":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:48081:6832":{"crate_id":1,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"4:8203:2113":{"crate_id":4,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"1:3632:1619":{"crate_id":1,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"1:53074:7274":{"crate_id":1,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"4:3396:4477":{"crate_id":4,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"4:6475:1726":{"crate_id":4,"path":["alloc","string","Drain"],"kind":"struct"},"1:8863:2435":{"crate_id":1,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"1:24083:7654":{"crate_id":1,"path":["core","num","diy_float","Fp"],"kind":"struct"},"1:51044:7286":{"crate_id":1,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"1:53247:7277":{"crate_id":1,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"1:22896:7212":{"crate_id":1,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"1:2178:2495":{"crate_id":1,"path":["core","mem","Discriminant"],"kind":"struct"},"1:10520:146":{"crate_id":1,"path":["core","hash","Hasher"],"kind":"trait"},"1:24835:4683":{"crate_id":1,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"1:53200:7259":{"crate_id":1,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"1:57833:2309":{"crate_id":1,"path":["core","isize"],"kind":"primitive"},"4:7111:7549":{"crate_id":4,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"4:6672:3833":{"crate_id":4,"path":["alloc","sync","Weak"],"kind":"struct"},"4:7642:2401":{"crate_id":4,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"1:24461:173":{"crate_id":1,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"1:51230:7279":{"crate_id":1,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"1:56296:236":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"0:377:1728":{"crate_id":0,"path":["smallvec","Array"],"kind":"trait"},"1:46727:2463":{"crate_id":1,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"4:2330:4410":{"crate_id":4,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"1:24030:7648":{"crate_id":1,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"1:3385:2517":{"crate_id":1,"path":["core","ops","bit","BitOr"],"kind":"trait"},"1:32296:1618":{"crate_id":1,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"1:3253:211":{"crate_id":1,"path":["core","marker","Send"],"kind":"trait"},"1:49810:6141":{"crate_id":1,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"1:48528:71":{"crate_id":1,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"1:3352:2511":{"crate_id":1,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"1:11094:1731":{"crate_id":1,"path":["core","slice","iter","Iter"],"kind":"struct"},"1:53364:7755":{"crate_id":1,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"1:3258:2498":{"crate_id":1,"path":["core","marker","Sized"],"kind":"trait"},"4:1618:2113":{"crate_id":4,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"1:46311:6072":{"crate_id":1,"path":["core","char","EscapeUnicode"],"kind":"struct"},"1:50307:190":{"crate_id":1,"path":["core","task","poll","Poll"],"kind":"enum"},"4:783:222":{"crate_id":4,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"1:23638:33043":{"crate_id":1,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"1:37596:3397":{"crate_id":1,"path":["core","cmp","Reverse"],"kind":"struct"},"1:3395:2520":{"crate_id":1,"path":["core","ops","bit","Shl"],"kind":"trait"},"1:50975:7714":{"crate_id":1,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"1:37572:178":{"crate_id":1,"path":["core","cmp","Ordering"],"kind":"enum"},"1:2905:183":{"crate_id":1,"path":["core","cmp","PartialEq"],"kind":"trait"},"1:10555:2411":{"crate_id":1,"path":["core","hash","BuildHasher"],"kind":"trait"},"4:1653:4295":{"crate_id":4,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"1:56348:236":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"4:8115:2113":{"crate_id":4,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"1:47482:1731":{"crate_id":1,"path":["core","option","Iter"],"kind":"struct"},"1:24212:4685":{"crate_id":1,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"1:49284:2597":{"crate_id":1,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"4:7824:7549":{"crate_id":4,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"4:8313:4702":{"crate_id":4,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:9743:79":{"crate_id":1,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"1:22902:7213":{"crate_id":1,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"4:5415:7541":{"crate_id":4,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"1:7838:7242":{"crate_id":1,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"1:57815:2293":{"crate_id":1,"path":["core","array"],"kind":"primitive"},"1:49511:2586":{"crate_id":1,"path":["core","str","iter","SplitN"],"kind":"struct"},"1:23736:7238":{"crate_id":1,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"1:3326:2510":{"crate_id":1,"path":["core","ops","arith","Sub"],"kind":"trait"},"1:23975:7646":{"crate_id":1,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"1:3419:2525":{"crate_id":1,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"4:8280:101":{"crate_id":4,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"4:5788:7534":{"crate_id":4,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"1:10516:142":{"crate_id":1,"path":["core","hash","macros","Hash"],"kind":"proc_derive"},"1:9954:5341":{"crate_id":1,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"1:24631:2577":{"crate_id":1,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"4:923:4075":{"crate_id":4,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"1:49699:6060":{"crate_id":1,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"1:11186:2601":{"crate_id":1,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"1:49457:6080":{"crate_id":1,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"1:6873:2467":{"crate_id":1,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"1:13243:7642":{"crate_id":1,"path":["core","str","lossy","Utf8Lossy"],"kind":"struct"},"1:11336:2589":{"crate_id":1,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"1:46747:2465":{"crate_id":1,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"4:3748:160":{"crate_id":4,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"1:46358:6070":{"crate_id":1,"path":["core","char","EscapeDebug"],"kind":"struct"},"1:48506:127":{"crate_id":1,"path":["core","fmt","Error"],"kind":"struct"},"4:8344:4692":{"crate_id":4,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"1:32302:2499":{"crate_id":1,"path":["core","mem","valid_align","ValidAlign"],"kind":"struct"},"1:46298:7453":{"crate_id":1,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"1:49575:6076":{"crate_id":1,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"1:52270:7269":{"crate_id":1,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"1:11263:2602":{"crate_id":1,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"1:23732:7211":{"crate_id":1,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"1:46576:2451":{"crate_id":1,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"1:52348:7276":{"crate_id":1,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"1:23833:7377":{"crate_id":1,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"1:10285:2887":{"crate_id":1,"path":["core","fmt","LowerHex"],"kind":"trait"},"1:24177:8562":{"crate_id":1,"path":["core","num","fmt","Formatted"],"kind":"struct"},"1:49931:6150":{"crate_id":1,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"1:13781:33111":{"crate_id":1,"path":["core","future","join","MaybeDone"],"kind":"enum"},"1:8343:2438":{"crate_id":1,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"1:45997:2087":{"crate_id":1,"path":["core","any","tags","Value"],"kind":"struct"},"1:3364:2512":{"crate_id":1,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"1:4736:102":{"crate_id":1,"path":["core","asserting","Capture"],"kind":"struct"},"1:9748:86":{"crate_id":1,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"1:3509:132":{"crate_id":1,"path":["core","ops","function","FnOnce"],"kind":"trait"},"1:46737:2464":{"crate_id":1,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"1:10560:2412":{"crate_id":1,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"1:12957:4627":{"crate_id":1,"path":["core","str","traits","FromStr"],"kind":"trait"},"1:2203:1050":{"crate_id":1,"path":["core","ptr"],"kind":"module"},"1:57823:2299":{"crate_id":1,"path":["core","i8"],"kind":"primitive"},"1:48494:107":{"crate_id":1,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"4:1939:2396":{"crate_id":4,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"1:3331:2507":{"crate_id":1,"path":["core","ops","arith","Mul"],"kind":"trait"},"1:46706:2462":{"crate_id":1,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"1:49365:6069":{"crate_id":1,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"1:49196:2581":{"crate_id":1,"path":["core","slice","iter","Windows"],"kind":"struct"},"1:22955:7248":{"crate_id":1,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"4:3341:4506":{"crate_id":4,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"1:48787:7705":{"crate_id":1,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"4:920:96":{"crate_id":4,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"1:52191:7281":{"crate_id":1,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"1:51540:7280":{"crate_id":1,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"4:3300:95":{"crate_id":4,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"1:46229:6071":{"crate_id":1,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"4:69:2371":{"crate_id":4,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"1:46496:4667":{"crate_id":1,"path":["core","ffi","VaListImpl"],"kind":"struct"},"1:10287:2888":{"crate_id":1,"path":["core","fmt","UpperHex"],"kind":"trait"},"1:49245:2598":{"crate_id":1,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"1:5169:2904":{"crate_id":1,"path":["core","cell","UnsafeCell"],"kind":"struct"},"1:57824:2300":{"crate_id":1,"path":["core","i16"],"kind":"primitive"},"1:24733:166":{"crate_id":1,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"1:13731:138":{"crate_id":1,"path":["core","future","future","Future"],"kind":"trait"},"1:48987:5842":{"crate_id":1,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"1:46379:7451":{"crate_id":1,"path":["core","char","CaseMappingIter"],"kind":"enum"},"0:107:1726":{"crate_id":0,"path":["smallvec","Drain"],"kind":"struct"},"1:52534:7282":{"crate_id":1,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"1:1455:1614":{"crate_id":1,"path":["core","hint","unreachable_unchecked"],"kind":"function"},"1:45890:197":{"crate_id":1,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"1:24109:10253":{"crate_id":1,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"4:1472:4290":{"crate_id":4,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"1:12736:6137":{"crate_id":1,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"1:5564:4666":{"crate_id":1,"path":["core","ffi","c_void"],"kind":"enum"},"1:57835:2311":{"crate_id":1,"path":["core","reference"],"kind":"primitive"},"1:47619:2117":{"crate_id":1,"path":["core","result","IterMut"],"kind":"struct"},"1:3742:7240":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"1:49993:6153":{"crate_id":1,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"1:57830:2306":{"crate_id":1,"path":["core","u32"],"kind":"primitive"},"4:1011:1731":{"crate_id":4,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"1:51587:7268":{"crate_id":1,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"1:8216:1615":{"crate_id":1,"path":["core","iter","sources","repeat","repeat"],"kind":"function"},"1:3415:2524":{"crate_id":1,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"0:399:1702":{"crate_id":0,"path":["smallvec","CollectionAllocErr"],"kind":"enum"},"1:46548:2441":{"crate_id":1,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"1:45805:196":{"crate_id":1,"path":["core","ops","range","RangeFull"],"kind":"struct"},"4:3048:8095":{"crate_id":4,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"4:3951:2396":{"crate_id":4,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"1:9959:5342":{"crate_id":1,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"4:8121:4077":{"crate_id":4,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"1:3565:2100":{"crate_id":1,"path":["core","ops","index","IndexMut"],"kind":"trait"},"1:12759:6134":{"crate_id":1,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"1:3984:68":{"crate_id":1,"path":["core","any","Any"],"kind":"trait"},"1:50016:7708":{"crate_id":1,"path":["core","str","lossy","Utf8LossyChunk"],"kind":"struct"},"1:57827:2303":{"crate_id":1,"path":["core","i128"],"kind":"primitive"},"1:46372:7450":{"crate_id":1,"path":["core","char","ToUppercase"],"kind":"struct"},"4:1843:7534":{"crate_id":4,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"1:51814:7720":{"crate_id":1,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"1:3424:2526":{"crate_id":1,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"1:2951:184":{"crate_id":1,"path":["core","cmp","PartialOrd"],"kind":"trait"},"1:51284:7271":{"crate_id":1,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"1:12699:6135":{"crate_id":1,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"1:2900:415":{"crate_id":1,"path":["core","cmp"],"kind":"module"},"1:51846:7721":{"crate_id":1,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"4:4242:7534":{"crate_id":4,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"4:5837:5713":{"crate_id":4,"path":["alloc","slice","Join"],"kind":"trait"},"0:330:2113":{"crate_id":0,"path":["smallvec","IntoIter"],"kind":"struct"},"1:50396:2357":{"crate_id":1,"path":["core","alloc","AllocError"],"kind":"struct"},"1:8087:2422":{"crate_id":1,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"1:49475:6079":{"crate_id":1,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"4:3329:1731":{"crate_id":4,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"1:4724:7253":{"crate_id":1,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"1:12810:2601":{"crate_id":1,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"4:8250:2395":{"crate_id":4,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"1:3476:116":{"crate_id":1,"path":["core","ops","deref","Deref"],"kind":"trait"},"1:2171:578":{"crate_id":1,"path":["core","mem","drop"],"kind":"function"},"1:46244:7357":{"crate_id":1,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"1:52030:7289":{"crate_id":1,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"0:0:1657":{"crate_id":0,"path":["smallvec"],"kind":"module"},"4:5:1499":{"crate_id":4,"path":["alloc","vec"],"kind":"macro"},"1:46925:2426":{"crate_id":1,"path":["core","iter","sources","once","Once"],"kind":"struct"},"1:38816:5626":{"crate_id":1,"path":["core","marker","PhantomPinned"],"kind":"struct"},"1:5018:4150":{"crate_id":1,"path":["core","cell","BorrowError"],"kind":"struct"},"4:4699:7540":{"crate_id":4,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"1:24495:170":{"crate_id":1,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"1:2941:177":{"crate_id":1,"path":["core","cmp","Ord"],"kind":"trait"},"1:8160:2425":{"crate_id":1,"path":["core","iter","sources","once","once"],"kind":"function"},"1:24147:10254":{"crate_id":1,"path":["core","num","fmt","Part"],"kind":"enum"},"1:32462:31720":{"crate_id":1,"path":["core","mem","valid_align","ValidAlignEnum64"],"kind":"enum"},"1:6614:32332":{"crate_id":1,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"1:11118:2117":{"crate_id":1,"path":["core","slice","iter","IterMut"],"kind":"struct"},"4:3362:4475":{"crate_id":4,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"1:49214:2580":{"crate_id":1,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"1:12775:6136":{"crate_id":1,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"4:8138:4078":{"crate_id":4,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"1:48443:67":{"crate_id":1,"path":["core","fmt","Alignment"],"kind":"enum"},"1:32121:4678":{"crate_id":1,"path":["core","num","FpCategory"],"kind":"enum"},"1:51951:7301":{"crate_id":1,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"1:3503:130":{"crate_id":1,"path":["core","ops","function","Fn"],"kind":"trait"},"1:47473:1732":{"crate_id":1,"path":["core","option","Item"],"kind":"struct"},"1:50384:2358":{"crate_id":1,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"1:4:979":{"crate_id":1,"path":["core","panic"],"kind":"macro"},"1:12489:6063":{"crate_id":1,"path":["core","str","converts","from_utf8"],"kind":"function"},"1:11391:2582":{"crate_id":1,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"1:57831:2307":{"crate_id":1,"path":["core","u64"],"kind":"primitive"},"1:13857:7644":{"crate_id":1,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"1:51618:7272":{"crate_id":1,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"1:23051:30741":{"crate_id":1,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"1:11225:2585":{"crate_id":1,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"4:1635:4293":{"crate_id":4,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"1:53540:7765":{"crate_id":1,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"1:3373:2519":{"crate_id":1,"path":["core","ops","bit","Not"],"kind":"trait"},"1:8860:1616":{"crate_id":1,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"1:14033:2370":{"crate_id":1,"path":["core","task","wake","Context"],"kind":"struct"},"1:14043:6881":{"crate_id":1,"path":["core","task","wake","Waker"],"kind":"struct"},"1:9899:660":{"crate_id":1,"path":["core","fmt"],"kind":"module"},"4:7212:1726":{"crate_id":4,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"1:56322:236":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:3150:75":{"crate_id":1,"path":["core","convert","AsRef"],"kind":"trait"},"1:3153:74":{"crate_id":1,"path":["core","convert","AsMut"],"kind":"trait"},"1:3336:2506":{"crate_id":1,"path":["core","ops","arith","Div"],"kind":"trait"},"4:6764:7541":{"crate_id":4,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"1:12021:7558":{"crate_id":1,"path":["core","slice","sort","CopyOnDrop"],"kind":"struct"},"1:57810:2289":{"crate_id":1,"path":["core","never"],"kind":"primitive"},"1:23044:7211":{"crate_id":1,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"4:0:277":{"crate_id":4,"path":["alloc"],"kind":"module"},"1:52108:7296":{"crate_id":1,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"1:10510:142":{"crate_id":1,"path":["core","hash","Hash"],"kind":"trait"},"1:49706:6070":{"crate_id":1,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"1:47913:83":{"crate_id":1,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"1:56270:236":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:49350:4626":{"crate_id":1,"path":["core","str","error","Utf8Error"],"kind":"struct"},"4:1597:1731":{"crate_id":4,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"1:22498:3397":{"crate_id":1,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"1:48210:2885":{"crate_id":1,"path":["core","fmt","num","Octal"],"kind":"struct"},"1:46506:4668":{"crate_id":1,"path":["core","ffi","VaList"],"kind":"struct"},"1:46604:7690":{"crate_id":1,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"1:2872:104":{"crate_id":1,"path":["core","clone","Clone"],"kind":"trait"},"1:52317:7273":{"crate_id":1,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"1:3294:2364":{"crate_id":1,"path":["core","marker","Unpin"],"kind":"trait"},"4:3772:2117":{"crate_id":4,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"1:49529:2582":{"crate_id":1,"path":["core","str","iter","RSplitN"],"kind":"struct"},"1:38753:6727":{"crate_id":1,"path":["core","convert","Infallible"],"kind":"enum"},"1:47550:2921":{"crate_id":1,"path":["core","panicking","AssertKind"],"kind":"enum"},"1:3489:2069":{"crate_id":1,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"1:53501:7764":{"crate_id":1,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"1:51021:7298":{"crate_id":1,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"1:53137:7294":{"crate_id":1,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"1:50343:6879":{"crate_id":1,"path":["core","task","wake","RawWaker"],"kind":"struct"},"1:3724:2529":{"crate_id":1,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"1:5140:4157":{"crate_id":1,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"1:6491:2443":{"crate_id":1,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"1:11921:2600":{"crate_id":1,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"1:49839:6147":{"crate_id":1,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"1:48777:7701":{"crate_id":1,"path":["core","hash","sip","State"],"kind":"struct"},"1:49681:6062":{"crate_id":1,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"1:4949:2899":{"crate_id":1,"path":["core","cell","Cell"],"kind":"struct"},"4:5833:5712":{"crate_id":4,"path":["alloc","slice","Concat"],"kind":"trait"},"1:14:1606":{"crate_id":1,"path":["core","write"],"kind":"macro"},"1:45846:195":{"crate_id":1,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"1:50147:6131":{"crate_id":1,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"1:3263:106":{"crate_id":1,"path":["core","marker","Copy"],"kind":"trait"},"1:47703:91":{"crate_id":1,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"4:3488:2396":{"crate_id":4,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"4:1685:194":{"crate_id":4,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"1:2492:2354":{"crate_id":1,"path":["core","ptr","unique","Unique"],"kind":"struct"},"1:3718:137":{"crate_id":1,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"1:47611:1731":{"crate_id":1,"path":["core","result","Iter"],"kind":"struct"},"4:8391:4618":{"crate_id":4,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"1:3162:228":{"crate_id":1,"path":["core","convert","TryInto"],"kind":"trait"},"4:4599:7538":{"crate_id":4,"path":["alloc","collections","vec_deque","spec_extend","spec_extend","WrapAddOnDrop"],"kind":"struct"},"1:5192:2903":{"crate_id":1,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"0:402:1706":{"crate_id":0,"path":["smallvec","CollectionAllocErr","AllocErr"],"kind":"variant"},"1:53478:7763":{"crate_id":1,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"4:8446:2396":{"crate_id":4,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"1:13018:3477":{"crate_id":1,"path":["core","str","pattern"],"kind":"module"},"4:8263:3967":{"crate_id":4,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"2:300:205":{"crate_id":2,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"1:47787:88":{"crate_id":1,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"1:13043:6057":{"crate_id":1,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"1:50127:6126":{"crate_id":1,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"1:51323:7256":{"crate_id":1,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"1:3360:2513":{"crate_id":1,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"1:49425:2588":{"crate_id":1,"path":["core","str","iter","RSplit"],"kind":"struct"},"1:50173:7405":{"crate_id":1,"path":["core","time","FromFloatSecsError"],"kind":"struct"},"4:1091:7534":{"crate_id":4,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"1:50135:6128":{"crate_id":1,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"4:7257:7534":{"crate_id":4,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"1:50003:6154":{"crate_id":1,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"1:53384:7757":{"crate_id":1,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"1:3088:6729":{"crate_id":1,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"1:57814:2292":{"crate_id":1,"path":["core","pointer"],"kind":"primitive"},"1:2381:1620":{"crate_id":1,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"1:46963:2433":{"crate_id":1,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"1:46675:2459":{"crate_id":1,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"1:49904:6149":{"crate_id":1,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"1:47498:2113":{"crate_id":1,"path":["core","option","IntoIter"],"kind":"struct"},"1:46319:7447":{"crate_id":1,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"1:47507:2708":{"crate_id":1,"path":["core","panic","location","Location"],"kind":"struct"},"1:23904:7379":{"crate_id":1,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"1:22566:33063":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"1:46716:2446":{"crate_id":1,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"1:47871:89":{"crate_id":1,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"1:8393:2101":{"crate_id":1,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"1:47490:2117":{"crate_id":1,"path":["core","option","IterMut"],"kind":"struct"},"1:46656:2444":{"crate_id":1,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"4:3882:4228":{"crate_id":4,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"1:14177:1608":{"crate_id":1,"path":["core","alloc","layout","LayoutErr"],"kind":"typedef"},"1:49205:2579":{"crate_id":1,"path":["core","slice","iter","Chunks"],"kind":"struct"},"1:49234:2591":{"crate_id":1,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"4:6954:6877":{"crate_id":4,"path":["alloc","task","Wake"],"kind":"trait"},"4:994:4076":{"crate_id":4,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"1:10626:1307":{"crate_id":1,"path":["core","slice"],"kind":"module"},"1:5149:2902":{"crate_id":1,"path":["core","cell","RefMut"],"kind":"struct"},"4:3759:1731":{"crate_id":4,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"1:45757:2369":{"crate_id":1,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"1:46627:2456":{"crate_id":1,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"1:5585:7313":{"crate_id":1,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"4:374:2373":{"crate_id":4,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"1:1944:1617":{"crate_id":1,"path":["core","mem"],"kind":"module"},"1:47440:176":{"crate_id":1,"path":["core","option","Option"],"kind":"enum"},"1:52077:7293":{"crate_id":1,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"1:3342:2509":{"crate_id":1,"path":["core","ops","arith","Rem"],"kind":"trait"},"1:49611:6077":{"crate_id":1,"path":["core","str","iter","Matches"],"kind":"struct"},"4:8130:1726":{"crate_id":4,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"1:46636:2466":{"crate_id":1,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"1:24801:164":{"crate_id":1,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"1:3319:963":{"crate_id":1,"path":["core","ops"],"kind":"module"},"1:53353:7754":{"crate_id":1,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"1:23997:7337":{"crate_id":1,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"1:10293:2890":{"crate_id":1,"path":["core","fmt","UpperExp"],"kind":"trait"},"1:47955:90":{"crate_id":1,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"4:3370:4476":{"crate_id":4,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"1:51092:7266":{"crate_id":1,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"1:24699:165":{"crate_id":1,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"1:13037:6058":{"crate_id":1,"path":["core","str","pattern","Searcher"],"kind":"trait"},"1:51198:7716":{"crate_id":1,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"1:8867:2436":{"crate_id":1,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"4:2200:7537":{"crate_id":4,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"4:8197:2113":{"crate_id":4,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"1:3356:2515":{"crate_id":1,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"1:49297:2592":{"crate_id":1,"path":["core","slice","iter","RChunks"],"kind":"struct"},"1:48991:2608":{"crate_id":1,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"4:6257:2067":{"crate_id":4,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"1:53463:7762":{"crate_id":1,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"1:48467:133":{"crate_id":1,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"1:22545:33060":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"}},"external_crates":{"1":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":16}